package net.geoprism.registry;

@com.runwaysdk.business.ClassSignature(hash = 1025694920)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ListTypeVersion.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class ListTypeVersionQuery extends com.runwaysdk.query.GeneratedBusinessQuery

{

  public ListTypeVersionQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public ListTypeVersionQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return net.geoprism.registry.ListTypeVersion.CLASS;
  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry()
  {
    return getEntry(null);

  }
 
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.ENTRY);

    return (net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.ENTRY, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.ENTRY);

    return (net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.ENTRY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getForDate()
  {
    return getForDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getForDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.FORDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getForDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.FORDATE, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription()
  {
    return getGeospatialDescription(null);

  }
 
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION);

    return (net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION);

    return (net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster()
  {
    return getGeospatialMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.GEOSPATIALMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.GEOSPATIALMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility()
  {
    return getGeospatialVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.GEOSPATIALVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.GEOSPATIALVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription()
  {
    return getListDescription(null);

  }
 
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION);

    return (net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION);

    return (net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getListMaster()
  {
    return getListMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getListMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.LISTMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getListMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.LISTMASTER, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType()
  {
    return getListType(null);

  }
 
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LISTTYPE);

    return (net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LISTTYPE, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LISTTYPE);

    return (net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LISTTYPE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getListVisibility()
  {
    return getListVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getListVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.LISTVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getListVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.LISTVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness()
  {
    return getMdBusiness(null);

  }
 
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.MDBUSINESS);

    return (com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.MDBUSINESS, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.MDBUSINESS);

    return (com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.MDBUSINESS, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.OID, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.ListTypeVersion.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.ListTypeVersion.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishDate()
  {
    return getPublishDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.PUBLISHDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.PUBLISHDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVersionNumber()
  {
    return getVersionNumber(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.VERSIONNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(net.geoprism.registry.ListTypeVersion.VERSIONNUMBER, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.ListTypeVersion.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.ENTRY)) 
    {
       return new net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LISTTYPE)) 
    {
       return new net.geoprism.registry.ListTypeQuery.ListTypeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.MDBUSINESS)) 
    {
       return new com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION)) 
    {
       return new net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION)) 
    {
       return new net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends ListTypeVersion> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<ListTypeVersion>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface ListTypeVersionQueryReferenceIF extends com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry();
    public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias);
    public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getForDate();
    public com.runwaysdk.query.SelectableMoment getForDate(String alias);
    public com.runwaysdk.query.SelectableMoment getForDate(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription();
    public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias);
    public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getGeospatialMaster();
    public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias);
    public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getGeospatialVisibility();
    public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias);
    public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription();
    public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias);
    public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getListMaster();
    public com.runwaysdk.query.SelectableBoolean getListMaster(String alias);
    public com.runwaysdk.query.SelectableBoolean getListMaster(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType();
    public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias);
    public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getListVisibility();
    public com.runwaysdk.query.SelectableChar getListVisibility(String alias);
    public com.runwaysdk.query.SelectableChar getListVisibility(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness();
    public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias);
    public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getPublishDate();
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias);
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVersionNumber();
    public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias);
    public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.registry.ListTypeVersion listTypeVersion);

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.registry.ListTypeVersion listTypeVersion);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class ListTypeVersionQueryReference extends com.runwaysdk.query.AttributeReference
 implements ListTypeVersionQueryReferenceIF

  {

  public ListTypeVersionQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.registry.ListTypeVersion listTypeVersion)
    {
      if(listTypeVersion == null) return this.EQ((java.lang.String)null);
      return this.EQ(listTypeVersion.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.registry.ListTypeVersion listTypeVersion)
    {
      if(listTypeVersion == null) return this.NE((java.lang.String)null);
      return this.NE(listTypeVersion.getOid());
    }

  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN,  alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry()
  {
    return getEntry(null);

  }
 
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias)
  {
    return (net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTRY, alias, null);

  }
 
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTRY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getForDate()
  {
    return getForDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getForDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.FORDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getForDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.FORDATE, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription()
  {
    return getGeospatialDescription(null);

  }
 
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias)
  {
    return (net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster()
  {
    return getGeospatialMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility()
  {
    return getGeospatialVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY,  alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription()
  {
    return getListDescription(null);

  }
 
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias)
  {
    return (net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getListMaster()
  {
    return getListMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getListMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.LISTMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getListMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.LISTMASTER, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType()
  {
    return getListType(null);

  }
 
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias)
  {
    return (net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LISTTYPE, alias, null);

  }
 
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LISTTYPE,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getListVisibility()
  {
    return getListVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getListVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.LISTVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getListVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.LISTVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness()
  {
    return getMdBusiness(null);

  }
 
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias)
  {
    return (com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.MDBUSINESS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.MDBUSINESS,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.ListTypeVersion.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.ListTypeVersion.OID, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishDate()
  {
    return getPublishDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.PUBLISHDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.PUBLISHDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.ListTypeVersion.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.ListTypeVersion.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVersionNumber()
  {
    return getVersionNumber(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(net.geoprism.registry.ListTypeVersion.VERSIONNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(net.geoprism.registry.ListTypeVersion.VERSIONNUMBER, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.ListTypeVersion.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.ENTRY)) 
    {
       return new net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LISTTYPE)) 
    {
       return new net.geoprism.registry.ListTypeQuery.ListTypeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.MDBUSINESS)) 
    {
       return new com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION)) 
    {
       return new net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION)) 
    {
       return new net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface ListTypeVersionQueryMultiReferenceIF extends com.runwaysdk.query.SelectableMultiReference
  {

    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry();
    public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias);
    public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getForDate();
    public com.runwaysdk.query.SelectableMoment getForDate(String alias);
    public com.runwaysdk.query.SelectableMoment getForDate(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription();
    public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias);
    public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getGeospatialMaster();
    public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias);
    public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getGeospatialVisibility();
    public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias);
    public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription();
    public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias);
    public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getListMaster();
    public com.runwaysdk.query.SelectableBoolean getListMaster(String alias);
    public com.runwaysdk.query.SelectableBoolean getListMaster(String alias, String displayLabel);
    public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType();
    public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias);
    public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getListVisibility();
    public com.runwaysdk.query.SelectableChar getListVisibility(String alias);
    public com.runwaysdk.query.SelectableChar getListVisibility(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness();
    public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias);
    public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getPublishDate();
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias);
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVersionNumber();
    public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias);
    public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(net.geoprism.registry.ListTypeVersion ... listTypeVersion);
    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.registry.ListTypeVersion ... listTypeVersion);
    public com.runwaysdk.query.Condition containsAll(net.geoprism.registry.ListTypeVersion ... listTypeVersion);
    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.registry.ListTypeVersion ... listTypeVersion);
    public com.runwaysdk.query.Condition containsExactly(net.geoprism.registry.ListTypeVersion ... listTypeVersion);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class ListTypeVersionQueryMultiReference extends com.runwaysdk.query.AttributeMultiReference
 implements ListTypeVersionQueryMultiReferenceIF

  {

  public ListTypeVersionQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(net.geoprism.registry.ListTypeVersion ... listTypeVersion)  {

      String[] itemIdArray = new String[listTypeVersion.length]; 

      for (int i=0; i<listTypeVersion.length; i++)
      {
        itemIdArray[i] = listTypeVersion[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.registry.ListTypeVersion ... listTypeVersion)  {

      String[] itemIdArray = new String[listTypeVersion.length]; 

      for (int i=0; i<listTypeVersion.length; i++)
      {
        itemIdArray[i] = listTypeVersion[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(net.geoprism.registry.ListTypeVersion ... listTypeVersion)  {

      String[] itemIdArray = new String[listTypeVersion.length]; 

      for (int i=0; i<listTypeVersion.length; i++)
      {
        itemIdArray[i] = listTypeVersion[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.registry.ListTypeVersion ... listTypeVersion)  {

      String[] itemIdArray = new String[listTypeVersion.length]; 

      for (int i=0; i<listTypeVersion.length; i++)
      {
        itemIdArray[i] = listTypeVersion[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(net.geoprism.registry.ListTypeVersion ... listTypeVersion)  {

      String[] itemIdArray = new String[listTypeVersion.length]; 

      for (int i=0; i<listTypeVersion.length; i++)
      {
        itemIdArray[i] = listTypeVersion[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN,  alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry()
  {
    return getEntry(null);

  }
 
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias)
  {
    return (net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTRY, alias, null);

  }
 
  public net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF getEntry(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.ENTRY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getForDate()
  {
    return getForDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getForDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.FORDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getForDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.FORDATE, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription()
  {
    return getGeospatialDescription(null);

  }
 
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias)
  {
    return (net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF getGeospatialDescription(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster()
  {
    return getGeospatialMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGeospatialMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility()
  {
    return getGeospatialVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeospatialVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.GEOSPATIALVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY,  alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription()
  {
    return getListDescription(null);

  }
 
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias)
  {
    return (net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF getListDescription(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getListMaster()
  {
    return getListMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getListMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.LISTMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getListMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.ListTypeVersion.LISTMASTER, alias, displayLabel);

  }
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType()
  {
    return getListType(null);

  }
 
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias)
  {
    return (net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LISTTYPE, alias, null);

  }
 
  public net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF getListType(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ListTypeQuery.ListTypeQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LISTTYPE,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getListVisibility()
  {
    return getListVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getListVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.LISTVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getListVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.LISTVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness()
  {
    return getMdBusiness(null);

  }
 
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias)
  {
    return (com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.MDBUSINESS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF getMdBusiness(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.MDBUSINESS,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.ListTypeVersion.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.ListTypeVersion.OID, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.ListTypeVersion.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishDate()
  {
    return getPublishDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.PUBLISHDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.ListTypeVersion.PUBLISHDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.ListTypeVersion.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.ListTypeVersion.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.ListTypeVersion.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVersionNumber()
  {
    return getVersionNumber(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(net.geoprism.registry.ListTypeVersion.VERSIONNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVersionNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(net.geoprism.registry.ListTypeVersion.VERSIONNUMBER, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.ListTypeVersion.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.ENTRY)) 
    {
       return new net.geoprism.registry.ListTypeEntryQuery.ListTypeEntryQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LISTTYPE)) 
    {
       return new net.geoprism.registry.ListTypeQuery.ListTypeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.MDBUSINESS)) 
    {
       return new com.runwaysdk.system.metadata.MdBusinessQuery.MdBusinessQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.ListTypeVersion.GEOSPATIALDESCRIPTION)) 
    {
       return new net.geoprism.registry.ListTypeVersionGeospatialDescriptionQuery.ListTypeVersionGeospatialDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.ListTypeVersion.LISTDESCRIPTION)) 
    {
       return new net.geoprism.registry.ListTypeVersionListDescriptionQuery.ListTypeVersionListDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
