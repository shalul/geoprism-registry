package net.geoprism.registry.etl;

@com.runwaysdk.business.ClassSignature(hash = 1710443656)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PublishShapefileJob.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class PublishShapefileJobBase extends net.geoprism.registry.etl.MasterListJob
{
  public final static String CLASS = "net.geoprism.registry.etl.PublishShapefileJob";
  public static java.lang.String VERSION = "version";
  private static final long serialVersionUID = 1710443656;
  
  public PublishShapefileJobBase()
  {
    super();
  }
  
  public net.geoprism.registry.MasterListVersion getVersion()
  {
    if (getValue(VERSION).trim().equals(""))
    {
      return null;
    }
    else
    {
      return net.geoprism.registry.MasterListVersion.get(getValue(VERSION));
    }
  }
  
  public String getVersionOid()
  {
    return getValue(VERSION);
  }
  
  public void validateVersion()
  {
    this.validateAttribute(VERSION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getVersionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.etl.PublishShapefileJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(VERSION);
  }
  
  public void setVersion(net.geoprism.registry.MasterListVersion value)
  {
    if(value == null)
    {
      setValue(VERSION, "");
    }
    else
    {
      setValue(VERSION, value.getOid());
    }
  }
  
  public void setVersionId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(VERSION, "");
    }
    else
    {
      setValue(VERSION, oid);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static PublishShapefileJobQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    PublishShapefileJobQuery query = new PublishShapefileJobQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static PublishShapefileJob get(String oid)
  {
    return (PublishShapefileJob) com.runwaysdk.business.Business.get(oid);
  }
  
  public static PublishShapefileJob getByKey(String key)
  {
    return (PublishShapefileJob) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static PublishShapefileJob lock(java.lang.String oid)
  {
    PublishShapefileJob _instance = PublishShapefileJob.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static PublishShapefileJob unlock(java.lang.String oid)
  {
    PublishShapefileJob _instance = PublishShapefileJob.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
