package net.geoprism.registry;

@com.runwaysdk.business.ClassSignature(hash = 1402218511)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MasterList.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class MasterListQuery extends com.runwaysdk.query.GeneratedBusinessQuery

{

  public MasterListQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public MasterListQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return net.geoprism.registry.MasterList.CLASS;
  }
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal()
  {
    return getAccessConstraintsLocal(null);

  }
 
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL);

    return (net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL);

    return (net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal()
  {
    return getAcknowledgementsLocal(null);

  }
 
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL);

    return (net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL);

    return (net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.CODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getContactName()
  {
    return getContactName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getContactName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.CONTACTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getContactName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.CONTACTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal()
  {
    return getDescriptionLocal(null);

  }
 
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL);

    return (net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL);

    return (net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal()
  {
    return getDisclaimerLocal(null);

  }
 
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.DISCLAIMERLOCAL);

    return (net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.DISCLAIMERLOCAL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.DISCLAIMERLOCAL);

    return (net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.DISCLAIMERLOCAL, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.DISPLAYLABEL);

    return (net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.DISPLAYLABEL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.DISPLAYLABEL);

    return (net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.DISPLAYLABEL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency()
  {
    return getFrequency(null);

  }
 
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.FREQUENCY);

    return (net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.FREQUENCY, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.FREQUENCY);

    return (net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.FREQUENCY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getHierarchies()
  {
    return getHierarchies(null);

  }
 
  public com.runwaysdk.query.SelectableChar getHierarchies(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.HIERARCHIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getHierarchies(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.HIERARCHIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getIsMaster()
  {
    return getIsMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.MasterList.ISMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.MasterList.ISMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(net.geoprism.registry.MasterList.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(net.geoprism.registry.MasterList.OID, alias, displayLabel);

  }
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization()
  {
    return getOrganization(null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ORGANIZATION);

    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ORGANIZATION, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.ORGANIZATION);

    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.ORGANIZATION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal()
  {
    return getProcessLocal(null);

  }
 
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.PROCESSLOCAL);

    return (net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.PROCESSLOCAL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.PROCESSLOCAL);

    return (net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.PROCESSLOCAL, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal()
  {
    return getProgressLocal(null);

  }
 
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.PROGRESSLOCAL);

    return (net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.PROGRESSLOCAL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.PROGRESSLOCAL);

    return (net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.PROGRESSLOCAL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishDate()
  {
    return getPublishDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.PUBLISHDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.PUBLISHDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate()
  {
    return getPublishingStartDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.PUBLISHINGSTARTDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.PUBLISHINGSTARTDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate()
  {
    return getRepresentativityDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.REPRESENTATIVITYDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.MasterList.REPRESENTATIVITYDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(net.geoprism.registry.MasterList.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(net.geoprism.registry.MasterList.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies()
  {
    return getSubtypeHierarchies(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.SUBTYPEHIERARCHIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.SUBTYPEHIERARCHIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTelephoneNumber()
  {
    return getTelephoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.TELEPHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.TELEPHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal()
  {
    return getUniversal(null);

  }
 
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.UNIVERSAL);

    return (com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.UNIVERSAL, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.UNIVERSAL);

    return (com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.UNIVERSAL, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal()
  {
    return getUseConstraintsLocal(null);

  }
 
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL);

    return (net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL);

    return (net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getValid()
  {
    return getValid(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getValid(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.MasterList.VALID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getValid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(net.geoprism.registry.MasterList.VALID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getVisibility()
  {
    return getVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.VISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.MasterList.VISIBILITY, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ORGANIZATION)) 
    {
       return new net.geoprism.registry.OrganizationQuery.OrganizationQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.UNIVERSAL)) 
    {
       return new com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL)) 
    {
       return new net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DISCLAIMERLOCAL)) 
    {
       return new net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DISPLAYLABEL)) 
    {
       return new net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.PROCESSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.PROGRESSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.FREQUENCY)) 
    {
       return new net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends MasterList> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<MasterList>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MasterListQueryReferenceIF extends com.runwaysdk.query.SelectableReference
  {

    public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal();
    public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias);
    public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal();
    public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias);
    public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCode();
    public com.runwaysdk.query.SelectableChar getCode(String alias);
    public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getContactName();
    public com.runwaysdk.query.SelectableChar getContactName(String alias);
    public com.runwaysdk.query.SelectableChar getContactName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal();
    public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias);
    public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal();
    public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias);
    public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel();
    public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getEmail();
    public com.runwaysdk.query.SelectableChar getEmail(String alias);
    public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency();
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias);
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getHierarchies();
    public com.runwaysdk.query.SelectableChar getHierarchies(String alias);
    public com.runwaysdk.query.SelectableChar getHierarchies(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getIsMaster();
    public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias);
    public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization();
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal();
    public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias);
    public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal();
    public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias);
    public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getPublishDate();
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias);
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getPublishingStartDate();
    public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias);
    public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getRepresentativityDate();
    public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias);
    public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSubtypeHierarchies();
    public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias);
    public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getTelephoneNumber();
    public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias);
    public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal();
    public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias);
    public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal();
    public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias);
    public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getValid();
    public com.runwaysdk.query.SelectableBoolean getValid(String alias);
    public com.runwaysdk.query.SelectableBoolean getValid(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getVisibility();
    public com.runwaysdk.query.SelectableChar getVisibility(String alias);
    public com.runwaysdk.query.SelectableChar getVisibility(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.registry.MasterList masterList);

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.registry.MasterList masterList);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MasterListQueryReference extends com.runwaysdk.query.AttributeReference
 implements MasterListQueryReferenceIF

  {

  public MasterListQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.registry.MasterList masterList)
    {
      if(masterList == null) return this.EQ((java.lang.String)null);
      return this.EQ(masterList.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.registry.MasterList masterList)
    {
      if(masterList == null) return this.NE((java.lang.String)null);
      return this.NE(masterList.getOid());
    }

  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal()
  {
    return getAccessConstraintsLocal(null);

  }
 
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias)
  {
    return (net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal()
  {
    return getAcknowledgementsLocal(null);

  }
 
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias)
  {
    return (net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getContactName()
  {
    return getContactName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getContactName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CONTACTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getContactName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CONTACTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.CREATEDBY,  alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal()
  {
    return getDescriptionLocal(null);

  }
 
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias)
  {
    return (net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal()
  {
    return getDisclaimerLocal(null);

  }
 
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias)
  {
    return (net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISCLAIMERLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISCLAIMERLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ENTITYDOMAIN,  alias, displayLabel);

  }
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency()
  {
    return getFrequency(null);

  }
 
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias)
  {
    return (net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF)this.get(net.geoprism.registry.MasterList.FREQUENCY, alias, null);

  }
 
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF)this.get(net.geoprism.registry.MasterList.FREQUENCY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getHierarchies()
  {
    return getHierarchies(null);

  }
 
  public com.runwaysdk.query.SelectableChar getHierarchies(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.HIERARCHIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getHierarchies(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.HIERARCHIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getIsMaster()
  {
    return getIsMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.ISMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.ISMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.MasterList.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.MasterList.OID, alias, displayLabel);

  }
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization()
  {
    return getOrganization(null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ORGANIZATION, alias, null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ORGANIZATION,  alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.OWNER,  alias, displayLabel);

  }
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal()
  {
    return getProcessLocal(null);

  }
 
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias)
  {
    return (net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROCESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROCESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal()
  {
    return getProgressLocal(null);

  }
 
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias)
  {
    return (net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROGRESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROGRESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishDate()
  {
    return getPublishDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate()
  {
    return getPublishingStartDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHINGSTARTDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHINGSTARTDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate()
  {
    return getRepresentativityDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.REPRESENTATIVITYDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.REPRESENTATIVITYDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.MasterList.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.MasterList.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies()
  {
    return getSubtypeHierarchies(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SUBTYPEHIERARCHIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SUBTYPEHIERARCHIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTelephoneNumber()
  {
    return getTelephoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TELEPHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TELEPHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal()
  {
    return getUniversal(null);

  }
 
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias)
  {
    return (com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF)this.get(net.geoprism.registry.MasterList.UNIVERSAL, alias, null);

  }
 
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF)this.get(net.geoprism.registry.MasterList.UNIVERSAL,  alias, displayLabel);

  }
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal()
  {
    return getUseConstraintsLocal(null);

  }
 
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias)
  {
    return (net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getValid()
  {
    return getValid(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getValid(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.VALID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getValid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.VALID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getVisibility()
  {
    return getVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.VISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.VISIBILITY, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ORGANIZATION)) 
    {
       return new net.geoprism.registry.OrganizationQuery.OrganizationQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.UNIVERSAL)) 
    {
       return new com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL)) 
    {
       return new net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DISCLAIMERLOCAL)) 
    {
       return new net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DISPLAYLABEL)) 
    {
       return new net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.PROCESSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.PROGRESSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.FREQUENCY)) 
    {
       return new net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MasterListQueryMultiReferenceIF extends com.runwaysdk.query.SelectableMultiReference
  {

    public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal();
    public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias);
    public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal();
    public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias);
    public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCode();
    public com.runwaysdk.query.SelectableChar getCode(String alias);
    public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getContactName();
    public com.runwaysdk.query.SelectableChar getContactName(String alias);
    public com.runwaysdk.query.SelectableChar getContactName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal();
    public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias);
    public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal();
    public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias);
    public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel();
    public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getEmail();
    public com.runwaysdk.query.SelectableChar getEmail(String alias);
    public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency();
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias);
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getHierarchies();
    public com.runwaysdk.query.SelectableChar getHierarchies(String alias);
    public com.runwaysdk.query.SelectableChar getHierarchies(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getIsMaster();
    public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias);
    public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization();
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal();
    public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias);
    public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal();
    public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias);
    public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getPublishDate();
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias);
    public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getPublishingStartDate();
    public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias);
    public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getRepresentativityDate();
    public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias);
    public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSubtypeHierarchies();
    public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias);
    public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getTelephoneNumber();
    public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias);
    public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal();
    public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias);
    public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias, String displayLabel);
    public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal();
    public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias);
    public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getValid();
    public com.runwaysdk.query.SelectableBoolean getValid(String alias);
    public com.runwaysdk.query.SelectableBoolean getValid(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getVisibility();
    public com.runwaysdk.query.SelectableChar getVisibility(String alias);
    public com.runwaysdk.query.SelectableChar getVisibility(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(net.geoprism.registry.MasterList ... masterList);
    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.registry.MasterList ... masterList);
    public com.runwaysdk.query.Condition containsAll(net.geoprism.registry.MasterList ... masterList);
    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.registry.MasterList ... masterList);
    public com.runwaysdk.query.Condition containsExactly(net.geoprism.registry.MasterList ... masterList);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MasterListQueryMultiReference extends com.runwaysdk.query.AttributeMultiReference
 implements MasterListQueryMultiReferenceIF

  {

  public MasterListQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(net.geoprism.registry.MasterList ... masterList)  {

      String[] itemIdArray = new String[masterList.length]; 

      for (int i=0; i<masterList.length; i++)
      {
        itemIdArray[i] = masterList[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.registry.MasterList ... masterList)  {

      String[] itemIdArray = new String[masterList.length]; 

      for (int i=0; i<masterList.length; i++)
      {
        itemIdArray[i] = masterList[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(net.geoprism.registry.MasterList ... masterList)  {

      String[] itemIdArray = new String[masterList.length]; 

      for (int i=0; i<masterList.length; i++)
      {
        itemIdArray[i] = masterList[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.registry.MasterList ... masterList)  {

      String[] itemIdArray = new String[masterList.length]; 

      for (int i=0; i<masterList.length; i++)
      {
        itemIdArray[i] = masterList[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(net.geoprism.registry.MasterList ... masterList)  {

      String[] itemIdArray = new String[masterList.length]; 

      for (int i=0; i<masterList.length; i++)
      {
        itemIdArray[i] = masterList[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal()
  {
    return getAccessConstraintsLocal(null);

  }
 
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias)
  {
    return (net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF getAccessConstraintsLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal()
  {
    return getAcknowledgementsLocal(null);

  }
 
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias)
  {
    return (net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF getAcknowledgementsLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getContactName()
  {
    return getContactName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getContactName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CONTACTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getContactName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.CONTACTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.CREATEDBY,  alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal()
  {
    return getDescriptionLocal(null);

  }
 
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias)
  {
    return (net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF getDescriptionLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal()
  {
    return getDisclaimerLocal(null);

  }
 
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias)
  {
    return (net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISCLAIMERLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF getDisclaimerLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISCLAIMERLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ENTITYDOMAIN,  alias, displayLabel);

  }
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency()
  {
    return getFrequency(null);

  }
 
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias)
  {
    return (net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF)this.get(net.geoprism.registry.MasterList.FREQUENCY, alias, null);

  }
 
  public net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF getFrequency(String alias, String displayLabel)
  {
    return (net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQueryIF)this.get(net.geoprism.registry.MasterList.FREQUENCY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getHierarchies()
  {
    return getHierarchies(null);

  }
 
  public com.runwaysdk.query.SelectableChar getHierarchies(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.HIERARCHIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getHierarchies(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.HIERARCHIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getIsMaster()
  {
    return getIsMaster(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.ISMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.ISMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.MasterList.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.MasterList.OID, alias, displayLabel);

  }
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization()
  {
    return getOrganization(null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ORGANIZATION, alias, null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.MasterList.ORGANIZATION,  alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.MasterList.OWNER,  alias, displayLabel);

  }
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal()
  {
    return getProcessLocal(null);

  }
 
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias)
  {
    return (net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROCESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF getProcessLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROCESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal()
  {
    return getProgressLocal(null);

  }
 
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias)
  {
    return (net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROGRESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF getProgressLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.PROGRESSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishDate()
  {
    return getPublishDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate()
  {
    return getPublishingStartDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHINGSTARTDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPublishingStartDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.PUBLISHINGSTARTDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate()
  {
    return getRepresentativityDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.REPRESENTATIVITYDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getRepresentativityDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.MasterList.REPRESENTATIVITYDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.MasterList.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.MasterList.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies()
  {
    return getSubtypeHierarchies(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SUBTYPEHIERARCHIES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubtypeHierarchies(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.SUBTYPEHIERARCHIES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTelephoneNumber()
  {
    return getTelephoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TELEPHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTelephoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TELEPHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal()
  {
    return getUniversal(null);

  }
 
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias)
  {
    return (com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF)this.get(net.geoprism.registry.MasterList.UNIVERSAL, alias, null);

  }
 
  public com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF getUniversal(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReferenceIF)this.get(net.geoprism.registry.MasterList.UNIVERSAL,  alias, displayLabel);

  }
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal()
  {
    return getUseConstraintsLocal(null);

  }
 
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias)
  {
    return (net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF getUseConstraintsLocal(String alias, String displayLabel)
  {
    return (net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStructIF)this.attributeFactory(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getValid()
  {
    return getValid(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getValid(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.VALID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getValid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(net.geoprism.registry.MasterList.VALID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getVisibility()
  {
    return getVisibility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisibility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.VISIBILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.MasterList.VISIBILITY, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ORGANIZATION)) 
    {
       return new net.geoprism.registry.OrganizationQuery.OrganizationQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.UNIVERSAL)) 
    {
       return new com.runwaysdk.system.gis.geo.UniversalQuery.UniversalQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.ACCESSCONSTRAINTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListAccessConstraintsLocalQuery.MasterListAccessConstraintsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.ACKNOWLEDGEMENTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListAcknowledgementsLocalQuery.MasterListAcknowledgementsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DESCRIPTIONLOCAL)) 
    {
       return new net.geoprism.registry.MasterListDescriptionLocalQuery.MasterListDescriptionLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DISCLAIMERLOCAL)) 
    {
       return new net.geoprism.registry.MasterListDisclaimerLocalQuery.MasterListDisclaimerLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.DISPLAYLABEL)) 
    {
       return new net.geoprism.registry.MasterListDisplayLabelQuery.MasterListDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.PROCESSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListProcessLocalQuery.MasterListProcessLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.PROGRESSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListProgressLocalQuery.MasterListProgressLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.MasterList.USECONSTRAINTSLOCAL)) 
    {
       return new net.geoprism.registry.MasterListUseConstraintsLocalQuery.MasterListUseConstraintsLocalQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.MasterList.FREQUENCY)) 
    {
       return new net.geoprism.registry.ChangeFrequencyMasterQuery.ChangeFrequencyQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
