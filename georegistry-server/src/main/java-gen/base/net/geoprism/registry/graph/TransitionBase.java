package net.geoprism.registry.graph;

@com.runwaysdk.business.ClassSignature(hash = -1444143922)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Transition.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class TransitionBase extends com.runwaysdk.business.graph.VertexObject
{
  public final static String CLASS = "net.geoprism.registry.graph.Transition";
  public static java.lang.String OID = "oid";
  public static java.lang.String SEQ = "seq";
  public static java.lang.String TRANSITIONTYPE = "transitionType";
  private static final long serialVersionUID = -1444143922;
  
  public TransitionBase()
  {
    super();
  }
  
  public String getOid()
  {
    return (String) this.getObjectValue(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  public Long getSeq()
  {
    return (Long) this.getObjectValue(SEQ);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeLongDAOIF getSeqMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeLongDAOIF)mdClassIF.definesAttribute(SEQ);
  }
  
  public void setSeq(Long value)
  {
    this.setValue(SEQ, value);
  }
  
  public String getTransitionType()
  {
    return (String) this.getObjectValue(TRANSITIONTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getTransitionTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(TRANSITIONTYPE);
  }
  
  public void setTransitionType(String value)
  {
    this.setValue(TRANSITIONTYPE, value);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.business.graph.EdgeObject addTransitionSourceChild(net.geoprism.registry.graph.GeoVertex geoVertex)
  {
    return super.addChild(geoVertex, "net.geoprism.registry.graph.TransitionSource");
  }
  
  public void removeTransitionSourceChild(net.geoprism.registry.graph.GeoVertex geoVertex)
  {
    super.removeChild(geoVertex, "net.geoprism.registry.graph.TransitionSource");
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<net.geoprism.registry.graph.GeoVertex> getTransitionSourceChildGeoVertexs()
  {
    return super.getChildren("net.geoprism.registry.graph.TransitionSource",net.geoprism.registry.graph.GeoVertex.class);
  }
  
  public com.runwaysdk.business.graph.EdgeObject addTransitionTargetChild(net.geoprism.registry.graph.GeoVertex geoVertex)
  {
    return super.addChild(geoVertex, "net.geoprism.registry.graph.TransitionTarget");
  }
  
  public void removeTransitionTargetChild(net.geoprism.registry.graph.GeoVertex geoVertex)
  {
    super.removeChild(geoVertex, "net.geoprism.registry.graph.TransitionTarget");
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<net.geoprism.registry.graph.GeoVertex> getTransitionTargetChildGeoVertexs()
  {
    return super.getChildren("net.geoprism.registry.graph.TransitionTarget",net.geoprism.registry.graph.GeoVertex.class);
  }
  
  public com.runwaysdk.business.graph.EdgeObject addTransitionAssignmentParent(net.geoprism.registry.graph.TransitionEvent transitionEvent)
  {
    return super.addParent(transitionEvent, "net.geoprism.registry.graph.TransitionAssignment");
  }
  
  public void removeTransitionAssignmentParent(net.geoprism.registry.graph.TransitionEvent transitionEvent)
  {
    super.removeParent(transitionEvent, "net.geoprism.registry.graph.TransitionAssignment");
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<net.geoprism.registry.graph.TransitionEvent> getTransitionAssignmentParentTransitionEvents()
  {
    return super.getParents("net.geoprism.registry.graph.TransitionAssignment", net.geoprism.registry.graph.TransitionEvent.class);
  }
  
  public static Transition get(String oid)
  {
    return (Transition) com.runwaysdk.business.graph.VertexObject.get(CLASS, oid);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
