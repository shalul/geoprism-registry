package net.geoprism.registry.graph;

@com.runwaysdk.business.ClassSignature(hash = -1107950113)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to CantRemoveInheritedGOT.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class CantRemoveInheritedGOTBase extends com.runwaysdk.business.SmartException
{
  public final static String CLASS = "net.geoprism.registry.graph.CantRemoveInheritedGOT";
  public static java.lang.String GOTCODE = "gotCode";
  public static java.lang.String HIERCODE = "hierCode";
  public static java.lang.String INHERITEDHIERARCHYLIST = "inheritedHierarchyList";
  public static java.lang.String OID = "oid";
  private static final long serialVersionUID = -1107950113;
  
  public CantRemoveInheritedGOTBase()
  {
    super();
  }
  
  public CantRemoveInheritedGOTBase(java.lang.String developerMessage)
  {
    super(developerMessage);
  }
  
  public CantRemoveInheritedGOTBase(java.lang.String developerMessage, java.lang.Throwable cause)
  {
    super(developerMessage, cause);
  }
  
  public CantRemoveInheritedGOTBase(java.lang.Throwable cause)
  {
    super(cause);
  }
  
  public String getGotCode()
  {
    return getValue(GOTCODE);
  }
  
  public void validateGotCode()
  {
    this.validateAttribute(GOTCODE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getGotCodeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.CantRemoveInheritedGOT.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(GOTCODE);
  }
  
  public void setGotCode(String value)
  {
    if(value == null)
    {
      setValue(GOTCODE, "");
    }
    else
    {
      setValue(GOTCODE, value);
    }
  }
  
  public String getHierCode()
  {
    return getValue(HIERCODE);
  }
  
  public void validateHierCode()
  {
    this.validateAttribute(HIERCODE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getHierCodeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.CantRemoveInheritedGOT.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(HIERCODE);
  }
  
  public void setHierCode(String value)
  {
    if(value == null)
    {
      setValue(HIERCODE, "");
    }
    else
    {
      setValue(HIERCODE, value);
    }
  }
  
  public String getInheritedHierarchyList()
  {
    return getValue(INHERITEDHIERARCHYLIST);
  }
  
  public void validateInheritedHierarchyList()
  {
    this.validateAttribute(INHERITEDHIERARCHYLIST);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getInheritedHierarchyListMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.CantRemoveInheritedGOT.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(INHERITEDHIERARCHYLIST);
  }
  
  public void setInheritedHierarchyList(String value)
  {
    if(value == null)
    {
      setValue(INHERITEDHIERARCHYLIST, "");
    }
    else
    {
      setValue(INHERITEDHIERARCHYLIST, value);
    }
  }
  
  public String getOid()
  {
    return getValue(OID);
  }
  
  public void validateOid()
  {
    this.validateAttribute(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.CantRemoveInheritedGOT.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public java.lang.String localize(java.util.Locale locale)
  {
    java.lang.String message = super.localize(locale);
    message = replace(message, "{gotCode}", this.getGotCode());
    message = replace(message, "{hierCode}", this.getHierCode());
    message = replace(message, "{inheritedHierarchyList}", this.getInheritedHierarchyList());
    message = replace(message, "{oid}", this.getOid());
    return message;
  }
  
}
