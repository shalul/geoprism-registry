package net.geoprism.registry.etl;

@com.runwaysdk.business.ClassSignature(hash = -1046353469)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PublishListTypeVersionJob.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class PublishListTypeVersionJobBase extends net.geoprism.registry.etl.ListTypeJob
{
  public final static String CLASS = "net.geoprism.registry.etl.PublishListTypeVersionJob";
  public static java.lang.String VERSION = "version";
  private static final long serialVersionUID = -1046353469;
  
  public PublishListTypeVersionJobBase()
  {
    super();
  }
  
  public net.geoprism.registry.ListTypeVersion getVersion()
  {
    if (getValue(VERSION).trim().equals(""))
    {
      return null;
    }
    else
    {
      return net.geoprism.registry.ListTypeVersion.get(getValue(VERSION));
    }
  }
  
  public String getVersionOid()
  {
    return getValue(VERSION);
  }
  
  public void validateVersion()
  {
    this.validateAttribute(VERSION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getVersionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.etl.PublishListTypeVersionJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(VERSION);
  }
  
  public void setVersion(net.geoprism.registry.ListTypeVersion value)
  {
    if(value == null)
    {
      setValue(VERSION, "");
    }
    else
    {
      setValue(VERSION, value.getOid());
    }
  }
  
  public void setVersionId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(VERSION, "");
    }
    else
    {
      setValue(VERSION, oid);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static PublishListTypeVersionJobQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    PublishListTypeVersionJobQuery query = new PublishListTypeVersionJobQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static PublishListTypeVersionJob get(String oid)
  {
    return (PublishListTypeVersionJob) com.runwaysdk.business.Business.get(oid);
  }
  
  public static PublishListTypeVersionJob getByKey(String key)
  {
    return (PublishListTypeVersionJob) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static PublishListTypeVersionJob lock(java.lang.String oid)
  {
    PublishListTypeVersionJob _instance = PublishListTypeVersionJob.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static PublishListTypeVersionJob unlock(java.lang.String oid)
  {
    PublishListTypeVersionJob _instance = PublishListTypeVersionJob.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
