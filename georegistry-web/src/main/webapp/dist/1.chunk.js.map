{"version":3,"sources":["webpack:///./src/app/registry/registry.module.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/registry/service/index.ts","webpack:///./src/app/registry/model/io.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.html","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.ts","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.html","webpack:///./src/app/registry/service/geoobjecttype-management.service.ts","webpack:///./src/app/registry/service/hierarchy.service.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.html","webpack:///./src/app/registry/component/master-list/publish-modal.component.ts","webpack:///./src/app/registry/component/master-list/publish-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.html","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.ts","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.html","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.html","webpack:///./src/app/registry/service/change-request.service.ts","webpack:///./src/app/registry/service/io.service.ts","webpack:///./src/app/registry/service/localization-manager.service.ts","webpack:///./src/app/registry/service/map.service.ts","webpack:///./src/app/registry/service/registry.service.ts","webpack:///./src/app/registry/service/synchronization-config.service.ts","webpack:///./src/app/registry/service/task.service.ts","webpack:///./src/app/registry/component/hierarchy/d3/svg-util.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.html","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.html","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.ts","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.html","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.ts","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.html","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.html","webpack:///./src/app/registry/component/location-manager/layer-panel.component.ts","webpack:///./src/app/registry/component/location-manager/layer-panel.component.html","webpack:///./src/app/registry/component/location-manager/feature-panel.component.ts","webpack:///./src/app/registry/component/location-manager/feature-panel.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.html","webpack:///./src/app/registry/factory/form-validation.factory.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-type.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem.component.html","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.html","webpack:///./src/app/registry/component/data-page/data-page.component.ts","webpack:///./src/app/registry/component/data-page/data-page.component.html","webpack:///./src/app/registry/component/importer/dataimporter.component.ts","webpack:///./src/app/registry/component/importer/dataimporter.component.html","webpack:///./src/app/registry/component/master-list/master-list-manager.component.ts","webpack:///./src/app/registry/component/master-list/master-list-manager.component.html","webpack:///./src/app/registry/component/master-list/export-format-modal.component.ts","webpack:///./src/app/registry/component/master-list/export-format-modal.component.html","webpack:///./src/app/registry/component/crtable/request-table.component.ts","webpack:///./src/app/registry/component/crtable/request-table.component.html","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.html","webpack:///./src/app/registry/pipe/geoobject-attribute-excludes.pipe.ts","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.ts","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.html","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.ts","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.html","webpack:///./src/app/registry/component/master-list/master-list.component.ts","webpack:///./src/app/registry/component/master-list/master-list.component.html","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-view.component.ts","webpack:///./src/app/registry/component/master-list/master-list-view.component.html","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.html","webpack:///./src/app/registry/component/scheduled-jobs/job.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/job.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.html","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.ts","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.html","webpack:///./src/app/registry/component/synchronization-config/details.component.ts","webpack:///./src/app/registry/component/synchronization-config/details.component.html","webpack:///./src/app/registry/component/location-manager/location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/location-manager.component.html","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.ts","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.html","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.ts","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.html","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-node.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.html","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.html","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.html","webpack:///./src/app/registry/model/crtable.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.html","webpack:///./src/app/registry/component/data-export/data-export.component.ts","webpack:///./src/app/registry/component/data-export/data-export.component.html","webpack:///./src/app/registry/pipe/geoobjecttype.pipe.ts","webpack:///./src/app/registry/pipe/to-epoch-date-time.pipe.ts","webpack:///./src/app/registry/registry-routing.module.ts"],"names":["RegistryModule","MapService","HierarchyService","LocalizationManagerService","ChangeRequestService","IOService","GeoObjectTypeManagementService","RegistryService","TaskService","DatePipe","ToEpochDateTimePipe","StepIndicatorComponent","SynchronizationConfigService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","TabsModule","CollapseModule","NgxPaginationModule","SharedModule","RegistryRoutingModule","AccordionModule","forRoot","HierarchyComponent","RequestTableComponent","CreateUpdateGeoObjectDetailComponent","AddRemoveChildDetailComponent","SetParentDetailComponent","CreateHierarchyTypeModalComponent","AddChildToHierarchyModalComponent","CreateGeoObjTypeModalComponent","ManageAttributesModalComponent","DefineAttributeModalContentComponent","ShapefileModalComponent","AttributesPageComponent","LocationPageComponent","LocationProblemPageComponent","LocationProblemComponent","TermProblemPageComponent","TermProblemComponent","SpreadsheetModalComponent","GeoObjectTypePipe","GeoObjectAttributeCodeValidator","EditAttributeModalContentComponent","TermOptionWidgetComponent","AttributeInputComponent","EditTermOptionInputComponent","ManageGeoObjectTypeModalComponent","GeoObjectTypeInputComponent","ManageTermOptionsComponent","LocalizedInputComponent","LocalizedTextComponent","GeoObjectSharedAttributeEditorComponent","ManageVersionsComponent","ManageVersionsModalComponent","SubmitChangeRequestComponent","GeoObjectEditorComponent","GeoObjectAttributeExcludesPipe","GeoObjectEditorMapComponent","SimpleEditControl","DataPageComponent","ChangeRequestPageComponent","CascadingGeoSelector","TreeGeoSelector","ManageParentVersionsModalComponent","ManageParentVersionsComponent","ActionDetailModalComponent","DataImporterComponent","DataExportComponent","MasterListManagerComponent","MasterListComponent","MasterListHistoryComponent","PublishedMasterListHistoryComponent","PublishModalComponent","MasterListViewComponent","ExportFormatModalComponent","ScheduledJobsComponent","JobComponent","JobConflictModalComponent","ReuploadModalComponent","ParentReferenceProblemWidgetComponent","TermReferenceProblemWidgetComponent","RowValidationProblemWidgetComponent","ImportProblemWidgetComponent","TaskViewerComponent","SynchronizationConfigManagerComponent","SynchronizationConfigModalComponent","SynchronizationConfigComponent","SyncDetailsComponent","LocationManagerComponent","DatasetLocationManagerComponent","ContextLayerModalComponent","LayerPanelComponent","FeaturePanelComponent","GeometryPanelComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","services","ImportSheet","Location","Term","TermProblem","LocationProblem","Exclusion","Synonym","ImportConfiguration","key","disabled","inlinelayout","valueChange","EventEmitter","TREE_SCALE_FACTOR_X","TREE_SCALE_FACTOR_Y","DEFAULT_NODE_FILL","DEFAULT_NODE_BANNER_COLOR","INHERITED_NODE_FILL","INHERITED_NODE_BANNER_COLOR","RELATED_NODE_BANNER_COLOR","Instance","hierarchyService","modalService","contextMenuService","localizeService","registryService","authService","userOrganization","currentHierarchy","instance","geoObjectTypes","hierarchiesByOrg","typesByOrg","filter","filteredHierarchiesByOrg","filteredTypesByOrg","hierarchyTypeDeleteExclusions","geoObjectTypeDeleteExclusions","_opened","isSRA","options","displayField","actionMapping","mouse","click","tree","node","$event","treeNodeOnClick","contextMenu","handleOnMenu","this","ngOnInit","refreshAll","fromEvent","searchInput","nativeElement","pipe","Boolean","debounceTime","distinctUntilChanged","tap","onFilterChange","subscribe","localize","decode","renderTree","rootGeoObjectTypes","length","d3","select","remove","forEach","got","canDrag","overflowDiv","scrollLeft","scrollRight","svg","append","attr","primarySvgHierarchy","SvgHierarchyType","render","calculateSvgViewBox","overflowDiv2","calculateCanDrag","getBBox","x","y","width","height","xPadding","yPadding","style","hierarchyComponent","getNodeByCode","isAbstract","child","superTypeCode","calculateRelatedHierarchies","relatedHiers","i","hierarchies","hierarchyType","hierarchy","descendants","find","data","geoObjectType","inheritedHierarchyCode","push","registerDragHandlers","deltaX","deltaY","that","dropTargets","dropSelector","onDrag","dragEl","dropEl","emptyHierarchyDropZone","closest","onDrop","addChild","mouseTarget","event","clearDropZones","lastDropEl","svgMousePoint","svgPoint","sourceEvent","pageX","pageY","getD3Tree","isPointWithin","dropZoneBbox","activeDropZones","parent","gotRectW","gotRectH","clearGhostNodes","isDragGroup","classed","dropNode","isDropGroup","findGeoObjectTypeByCode","dropElX","parseInt","dropElY","childW","childH","dzg","dropTargetHasChildren","children","isChildDZActive","childDzBacker","childDz","addChildLabel","childDzText","calculateTextWidth","text","parentDzBacker","gotHeaderH","parentDz","addParentLabel","parentDzText","ghostCode","parentIndex","addSiblingLabel","splice","ghostingCode","label","siblingGhostBody","getBboxFromSelection","activeDz","dragGot","youngest","insertBetweenTypes","ghostNode","drag","on","rect","getBoundingClientRect","left","top","selThis","target","document","elementFromPoint","selectAll","each","sidebarDragHandler","registerSvgHandlers","startPoint","svgGot","getPos","setPos","split","svgDragHandler","findHierarchyByCode","ht","findOrganizationByCode","organizations","org","hierarchyCode","parentGeoObjectTypeCode","childGeoObjectTypeCode","addChildToHierarchy","then","index","relatedHierarchies","refreshPrimaryHierarchy","catch","err","error","middleGeoObjectTypeCode","youngestGeoObjectTypeCode","ngAfterViewInit","isRA","isOrganizationRA","orgCode","dropZone","getTypesByOrg","orgTypes","organizationCode","getHierarchiesByOrg","orgHierarchies","desiredHierarchy","init","response","setLocales","locales","setGeoObjectTypes","types","pos","getGeoObjectTypePosition","setHierarchies","setNodesOnInit","updateViewDatastructures","setAbstractTypes","type","sort","a","b","localizedValue","toLowerCase","setType","excludeHierarchyTypeDeletes","indexOf","excludeGeoObjectTypeDeletes","findIndex","h","setCurrentHierarchy","getHierarchy","hierarchyId","rootGeoObjectType","processHierarchyNodes","getHierarchyLabel","geoObjectTypeCode","gOT","show","next","childType","nodeMenuComponent","leafMenuComponent","item","preventDefault","stopPropagation","treeModel","setFocusedNode","isExpanded","collapse","expandAll","hierarchyOnClick","createHierarchy","bsModalRef","animated","backdrop","ignoreBackdropClick","content","onHierarchytTypeCreate","nameA","toUpperCase","nameB","deleteHierarchyType","obj","ConfirmModalComponent","message","submitText","onConfirm","removeHierarchyType","editHierarchyType","readOnly","edit","getHierarchyTypePosition","description","progress","acknowledgement","disclaimer","useConstraints","accessConstraints","contact","phoneNumber","email","isPrimaryHierarchy","createGeoObjectType","groupSuperType","onGeoObjTypeCreate","deleteGeoObjectType","ModalTypes","danger","removeGeoObjectType","errCallback","manageGeoObjectType","attributes","onGeoObjectTypeSubmitted","position","removeFromHierarchy","parentGotCode","gotCode","isActive","filtered","setTimeout","handleInheritHierarchy","hierarchyTypeCode","inheritedHierarchyTypeCode","setInheritedHierarchy","handleUninheritHierarchy","removeInheritedHierarchy","ErrorHandler","showErrorAsDialog","modalStateChangedSource","Subject","modalStepChange","asObservable","getModalState","modalState","setModalState","state","http","eventService","getHierarchyTypes","params","HttpParams","set","JSON","stringify","get","acp","toPromise","headers","HttpHeaders","start","post","finalize","complete","createHierarchyType","htJSON","updateHierarchyType","cdr","disableCodeField","excludeDescription","isDecimal","attributeChange","detectChanges","ngOnChanges","ngOnDestroy","handleOnSubmit","toggleIsUnique","attribute","unique","animate","onAnimationDone","isValid","localeValues","value","console","log","precision","toString","scale","trigger","transition","service","iService","lService","readonly","isNew","onMasterListChange","master","listGeoObjectTypes","myOrgTypes","typeCode","isGeoObjectTypeRM","oid","displayLabel","create","representativityDate","publishingStartDate","publishDate","listAbstract","process","acknowledgements","contactName","organization","telephoneNumber","subtypeHierarchies","leaf","frequency","isMaster","visibility","getIsDisabled","elClasses","classList","onChange","getHierarchiesForType","getHierarchiesForSubtypes","onSubmit","createMasterList","hide","onCancel","getMessageFromError","slide","preGeoObject","postGeoObject","calculatedPreObject","calculatedPostObject","attributeExcludes","forDate","Date","isEditingGeometries","isGeometryInlined","valid","onManageVersion","customEvent","modifiedTermOption","currentTermOption","geoObjectAttributeExcludes","apply","geomAttr","geometry","Attribute","LocalizedValue","attributeForm","statusChanges","result","emit","changes","GeoObjectOverTime","parse","calculate","calculateCurrent","geometryEditor","reload","goot","object","time","getTime","startDate","endDate","isChangeOverTime","values","vot","formatDate","Array","isArray","date","formatDateForDisplay","handleChangeCode","onManageAttributeVersions","geoObjectOverTime","isNewGeoObject","onAttributeVersionChange","versionObj","tfInit","onManageGeometryVersions","isDifferentText","trim","isDifferentValue","onSelectPropertyOption","option","getGeoObjectTypeTermAttributeOptions","termAttributeCode","attrOpts","rootTerm","removeStatuses","isStatusChanged","pre","preCompare","postCompare","getTypeDefinition","getIsValid","getGeoObject","opacity","elRef","editEmitter","visible","save","onAdd","onRemove","onClick","getAllActions","requestId","applyAction","action","applyActionStatusProperties","lockAction","actionId","unlockAction","getAllRequests","getRequestDetails","confirmChangeRequest","execute","rejectAllActions","actions","approveAllActions","submitChangeRequest","importSpreadsheet","configuration","json","cancelImport","importShapefile","includeAbstractTypes","getTypeAncestors","includeInheritedTypes","includeTypes","getGeoObjectSuggestions","createGeoObjectSynonym","entityId","deleteGeoObjectSynonym","synonymId","vOid","getTermSuggestions","mdAttributeId","limit","createTermSynonym","classifierId","deleteTermSynonym","createTerm","parentTermCode","termJSON","removeTerm","termCode","getNewLocaleInfo","installLocale","language","country","variant","mapboxgl","accessToken","roots","childTypeCode","search","getGeoObjectTypes","getParentGeoObjects","childId","parentTypes","recursive","getChildGeoObjects","parentId","parentTypeCode","childrenTypes","newGeoObjectInstance","gtJSON","updateGeoObjectType","addAttributeType","geoObjTypeId","updateAttributeType","deleteAttributeType","attributeName","addAttributeTermTypeOption","term","updateAttributeTermTypeOption","deleteAttributeTermTypeOption","getGeoObjectBounds","getGeoObjectBoundsAtDate","getGeoObjectByCode","getHierarchiesForGeoObject","getGeoObjectSuggestionsTypeAhead","getScheduledJobs","pageSize","pageNumber","sortAttr","isAscending","getCompletedScheduledJobs","getScheduledJob","historyId","onlyUnresolved","getExportDetails","resolveScheduledJob","submitValidationResolve","config","submitErrorResolve","getMasterLists","getMasterListHistory","versionType","getAllMasterListVersions","getMasterListVersion","getLocales","getGeoObjectOverTime","geoObjectCode","newGeoObjectOverTime","setAttributeVersions","collection","list","createMasterListVersion","publishMasterListVersions","deleteMasterList","deleteMasterListVersion","publishMasterList","getMasterList","applyGeoObjectEdit","parentTreeNode","geoObject","masterListId","notes","valueAttribute","publishShapefile","getMasterListsByOrg","getPublishMasterListJobs","getDatasetBounds","getOrganizations","getPage","getCustomAttrCfg","externalId","getConfigForES","externalSystemId","unlock","run","getJobs","getMyTasks","pageNum","whereStatus","completeTask","taskId","setTaskStatus","status","point","bbox","fontSize","pt","createSVGPoint","matrixTransform","getScreenCTM","inverse","bbox1","bbox2","selection","configurationChange","stateChange","onNext","locations","onBack","hasProblems","locationProblems","resolved","handleError","exclusions","problem","name","exclusion","termProblems","attributeCode","changeDetectorRef","editingGeometry","hasDuplicateDate","originalGeoObjectOverTime","geometryChange","vAttribute","onDateChange","vAttributes","snapDates","votArr","prev","current","formatDateString","PRESENT","onAddNewVersion","ValueOverTime","geometryType","terms","editGeometry","getVersionData","versions","val","getDefaultLocaleVal","locale","defVal","locVal","setDateAttribute","version","arr","newArray","dateObj","day","getUTCDate","month","getUTCMonth","getUTCFullYear","mapService","onClickEdit","mapDiv","Math","floor","random","Map","container","zoom","center","initMap","onValidChange","removeLayers","addLayers","editingControl","getAll","features","saveDraw","preGeometry","zoomToBbox","addControl","NavigationControl","addEditButton","enableEditing","simpleEditControl","MapboxDraw","controls","line_string","polygon","trash","combine_features","uncombine_features","postGeometry","add","removeSource","prefix","sourceName","removeLayer","getSource","renderGeometryAsLayer","color","addSource","addLayer","setData","bboxCode","bboxType","bboxDate","boundArr","bounds","LngLatBounds","fitBounds","padding","featureCollection","polygons","feature","j","coordinates","points","lines","onVersionChange","handleVersionChange","loading","originalHierarchy","entries","entry","parents","getTypeAheadObservable","parentCode","pType","properties","Observable","observer","loopI","results","typeaheadOnSelect","uid","ancestors","ancestor","nodes","isExpandedField","idField","pot","expanded","onEdit","tabIndex","submitFunction","arePropertiesValid","areParentsValid","dateStr","isAdmin","isMaintainer","isContributor","isContributer","findVotWithStartDate","votArray","setMasterListId","handleDateChange","setOnSuccessCallback","func","onSuccessCallback","configureAsNew","isGeometryEditable","fetchGeoObjectType","fetchLocales","retJson","goPropertiesPre","goPropertiesPost","configureFromImportError","importError","importErrorId","resolution","goSubmit","configureAsExisting","fetchGeoObject","fetchHierarchies","typeTypeCode","ptn","attributeEditor","parentSelector","changePage","nextPage","force","persistModelChanges","getHierarchies","cancel","submit","_stepConfig","layerChange","baselayerIconHover","lists","baseLayers","sprite","url","selected","contextLayerGroups","updateContextGroups","currentValue","previousValue","contextGroup","contextLayers","thisContextLayer","active","enabled","groupHasEnabledContextLayers","group","hasEnabled","cLayerGroup","cLayer","hasEnabledContextLayers","toggleContextLayer","layer","removeContextLayer","addContextLayerModal","MODE","VERSIONS","ATTRIBUTES","HIERARCHY","GEOMETRY","_code","geometryEdit","featureChange","modeChange","mode","isEdit","reason","updateCode","v","updateGeometry","setValid","setEditMode","onEditGeometryVersion","calculateGeometry","datasetId","onManageAttributeVersion","onManageHiearchyVersion","onAttributeChange","onHierarchyChange","onEditAttributes","auth","orgs","organizationLabel","getOrganizationLabelFromCode","isPrivate","toggleIsLeaf","isLeaf","toggleIsGeometryEditable","toggleIsAbstract","confirmBsModalRef","geoObjectTypeManagementService","GeoObjectTypeModalStates","modalStateSubscription","unsubscribe","onModalStateChange","onGeoObjectTypeChange","update","close","modalStepIndicatorService","localizationService","geoObjectTypeChange","modalStepConfig","editGeoObjectType","setStepConfig","fetchOrganizationLabel","manageAttributes","onDeleteAttribute","defineAttributeModal","defineAttribute","editAttribute","removeAttributeType","attributeType","newAttribute","setAttribute","attributeInputComponent","AttributeTerm","AttributeDecimal","isFormValid","isAttrValid","validator","c","geoObjectAttributeCode","validate","provide","NG_VALIDATORS","useExisting","multi","assign","back","manageTermOption","openAddTermOptionForm","enableTermOptionForm","termOption","replace","addTermOption","clearTermOption","deleteTermOption","removeTermOption","editTermOption","cancelTermOption","t","svgEl","isPrimary","d3Hierarchy","d3Tree","nodeSize","separation","getCode","treeNode","SvgHierarchyNode","renderHierarchyHeader","hg","colHeaderLabel","colHeader","headerg","hierarchyLabelW","hierarchyLabelH","headerFontSize","hierarchyLabelY","lineWidth","textWidth","html","d","headerGBbox","getRelatedHierarchies","nodeMouseover","element","nodeMousemove","nodeTooltipBbox","documentElement","scrollHeight","scrollWidth","nodeMouseleave","descends","insert","gtree","links","join","source","gHeader","gotHeaderW","MOUSE_HOVER_EVENT_ENTER","MOUSE_HOVER_EVENT_MOVE","MOUSE_HOVER_EVENT_EXIT","gotHeaderFontSize","substring","arrowRectD","gArrow","gotBodyFontSize","gotOptionsButtonFontSize","renderRelatedHierarchiesMenu","router","onStateChange","handleBack","handleNext","handleCancel","postalCode","handleSubmit","cancelText","navigate","onError","dataSource","entityLabel","hasSynonym","createSynonym","ignoreDataAtLocation","locationLabel","undoAction","termLabel","termId","createOption","ignoreValue","renderContent","pageTitle","sysService","showImportConfig","importStrategies","ImportStrategy","NEW_AND_UPDATE","NEW_ONLY","UPDATE_ONLY","isExternal","isLoading","getExternalSystems","paginatedSystems","externalSystems","resultSet","getUrl","format","queueLimit","removeAfterUpload","uploader","FileUploader","onBuildItemForm","fileItem","form","importStrategy","onBeforeUploadItem","onCompleteItem","fileRef","onSuccessItem","externalSystem","sys","onErrorItem","queue","uploadAll","setImportSource","onCreate","createDate","lastUpdateDate","write","read","onView","pair","ret","onDelete","onFormat","confirm","objectKeys","requests","columns","filterCriteria","prop","sortable","refresh","onSelect","onExecute","changeRequest","request","decisionMaker","approvalStatus","getUsername","onApproveAll","onRejectAll","requestTrackBy","toggle","parentElement","className","includes","toggleId","criteria","setActionStatus","getActiveDetailComponent","actionType","endsWith","showActionDetail","curAction","cuDetail","endEdit","arDetail","spDetail","transform","items","changeRequestService","geoObjectId","isGeoObjectTypeRC","newValid","changeTypeaheadLoading","SuccessModalComponent","cHierarchies","parentMap","onManageVersions","pService","route","p","page","count","order","isPublished","isRefreshing","isWritable","searchPlaceholder","snapshot","paramMap","isCollapsed","onPageChange","baseUrl","window","location","hostname","port","notifier","webSocket","handleProgressChange","onSort","clearFilters","toggleFilter","getValues","base","unshift","total","f","s","end","handleInputChange","handleListChange","isFilterable","dependency","editModal","onPublish","onNewGeoObject","onExport","href","encodeURIComponent","onDeleteMasterListVersion","updateList","onViewMetadata","onPublishShapefile","onDownloadShapefile","ioService","activeJobsPage","completeJobsPage","activeTimeCounter","completeTimeCounter","isViewAllOpen","onActiveJobsPageChange","pollingData","interval","onCompleteJobsPageChange","formatJobStatus","job","formatStepConfig","stepConfig","stage","getJobStatus","getCompletedStatus","jobStage","targetStage","jobPos","onViewAllCompleteJobs","onCancelScheduledJob","jobId","onResolveScheduledJob","allSelected","timeCounter","isPolling","hasRowValidationProblem","formatAffectedRows","rows","formatValidationResolve","onProblemResolved","getFriendlyProblemType","probType","onConflictAction","importErrors","problems","onViewAllActiveJobs","toggleAll","row","onReuploadAndResume","onProblemResolvedListener","onEditGeoObject","searchLabel","getString","conflict","getValidationProblemDisplayLabel","onIgnore","cfg","validationProblemId","onCreateSynonym","title","warning","errorMessage","taskService","inProgressTasks","completedTasks","onInProgressTasksPageChange","upper","str","onCompletedTasksPageChange","onCompleteTask","task","onMoveTaskToInProgress","onViewAllCompletedTasks","onSuccess","level","system","cOrg","cSystem","levelRows","orgUnitGroups","oIndex","sIndex","systems","esConfig","levels","levelRow","levelNum","isAttributeEditor","hasAttributes","onOrganizationSelected","onChangeExternalSystem","lvl","addLevel","len","removeLevel","levelRowIndex","editorIndex","getEditorIndex","newLevelNum","configureAttributes","onSelectGeoObjectType","getTermOptions","dhis2Id","dhis2Attrs","dhis2Attr","onChangeAttrMapping","newValue","attrCfg","attrs","attrCfgAttr","isDifferentGot","isOrgUnitGroup","onChangeTargetType","hasOwnProperty","onRun","exportErrors","SEARCH","VIEW","vectorLayers","preventSingleClick","protocol","host","attributionControl","changeMode","clearGeometryEditing","onModeChange","AttributionControl","compact","handleMapClickEvent","addVectorLayer","handleBasemapStyle","baseLayer","setStyle","zoomToFeature","timer","maxZoom","onContextLayerChange","removeVectorLayer","tiles","navigator","deleteAll","removeControl","onGeometryEdit","addEditLayers","onMapSave","getDrawGeometry","groupHasContextLayers","hasCLayers","moment","localeData","longDateFormat","toolsIconHover","editOnly","llb","vLayer","prevLayer","onFeatureChange","setFilter","svgHierarchyType","dragging","getBbox","inheritNode","heritX","heritY","inheritBbox","uninheritNode","uninheritBbox","getTreeNode","hideRelatedHierarchy","existingSecondary","existingMenu","contextMenuGroup","titleLabel","actionsTitle","removeFromHierarchyLabel","noRelatedHierLabel","hideRelatedHierarchyLabel","uninheritLabel","inheritLabel","isSecondaryHierarchyRendered","numActions","removeWidth","hideRelatedWidth","uninheritWidth","existingSecondaryCode","secondaryHierarchy","relatedGotHasParents","inheritWidth","relatedHierarchyCode","relatedHierarchy","relatedHierarchyLabel","noHierLabelWidth","heightAdditions","widthPadding","renderSecondaryHierarchy","removeGotFromHierarchy","onClickUninheritHierarchy","onClickInheritHierarchy","myBbox","primaryHierBbox","gSecondary","paddingLeft","secondaryGot","secondaryGotBbox","gConnector","toRoot","onNodeChange","allGeoObjectTypes","gObj","selectedGeoObjectType","geoObjectJson","canDeactivate","afterDeactivate","isDeactivating","unlockActionSync","startEdit","$","ajax","method","success","async","original","ChangeRequest","AbstractAction","UpdateGeoObjectAction","CreateGeoObjectAction","AddChildAction","RemoveChildAction","GovernanceStatus","PageEvent","SetParentAction","unassignedGeoObjTypes","buildUnassignedGeoObjTypes","routes","path","component","canActivate","AuthGuard","MaintainerGuard","ContributerGuard","LocationStrategy","useClass","HashLocationStrategy","forChild"],"mappings":"mKAAA,SACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UAEA,UAEA,O,8UAGA,4B,wCAoJaA,I,8DAAAA,IAAc,UA9Cf,CACV,GAAAC,WACA,GAAAC,iBACA,GAAAC,2BACA,GAAAC,qBACA,GAAAC,UACA,GAAAC,+BACA,GAAAC,gBACA,GAAAC,YACA,EAAAC,SACA,GAAAC,oBACA,GAAAC,uBACA,GAAAC,8BACA,SAlHQ,CACR,EAAAC,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBACA,GAAAC,gBAAgBC,c,EAnBlB,GAoJa,EAAA9B,mB,iEAAAA,GAAc,eA9HzB,EAAA+B,mBACA,EAAAC,sBACA,EAAAC,qCACA,EAAAC,8BACA,EAAAC,yBACA,EAAAC,kCACA,EAAAC,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAC,wBACA,EAAAC,wBACA,EAAAC,sBACA,EAAAC,6BACA,EAAAC,yBACA,EAAAC,yBACA,EAAAC,qBACA,EAAAC,0BACA,GAAAC,kBACA,GAAAC,gCACA,EAAAC,mCACA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","file":"1.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from 'angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { DatePipe } from '@angular/common';\n\nimport { LocalizedInputComponent } from './component/form-fields/localized-input/localized-input.component';\nimport { LocalizedTextComponent } from './component/form-fields/localized-text/localized-text.component';\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { CreateHierarchyTypeModalComponent } from './component/hierarchy/modals/create-hierarchy-type-modal.component';\nimport { AddChildToHierarchyModalComponent } from './component/hierarchy/modals/add-child-to-hierarchy-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './component/hierarchy/modals/create-geoobjtype-modal.component';\nimport { ManageAttributesModalComponent } from './component/hierarchy/geoobjecttype-management/manage-attributes-modal.component';\nimport { DefineAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component';\nimport { EditAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component';\nimport { ShapefileModalComponent } from './component/importer/modals/shapefile-modal.component';\nimport { AttributesPageComponent } from './component/importer/modals/attributes-page.component';\nimport { LocationPageComponent } from './component/importer/modals/location-page.component';\nimport { LocationProblemPageComponent } from './component/importer/modals/location-problem-page.component';\nimport { LocationProblemComponent } from './component/importer/modals/location-problem.component';\nimport { TermProblemPageComponent } from './component/importer/modals/term-problem-page.component';\nimport { TermProblemComponent } from './component/importer/modals/term-problem.component';\nimport { SpreadsheetModalComponent } from './component/importer/modals/spreadsheet-modal.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { TermOptionWidgetComponent } from './component/hierarchy/geoobjecttype-management/term-option-widget.component';\nimport { AttributeInputComponent } from './component/hierarchy/geoobjecttype-management/attribute-input.component';\nimport { EditTermOptionInputComponent } from './component/hierarchy/geoobjecttype-management/edit-term-option-input.component';\nimport { ManageTermOptionsComponent } from './component/hierarchy/geoobjecttype-management/manage-term-options.component';\nimport { GeoObjectTypeInputComponent } from './component/hierarchy/geoobjecttype-management/geoobjecttype-input.component';\nimport { ManageGeoObjectTypeModalComponent } from './component/hierarchy/modals/manage-geoobjecttype-modal.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { PublishModalComponent } from './component/master-list/publish-modal.component';\nimport { ExportFormatModalComponent } from './component/master-list/export-format-modal.component';\nimport { RequestTableComponent } from './component/crtable/request-table.component';\nimport { CreateUpdateGeoObjectDetailComponent } from './component/crtable/action-detail/create-update-geo-object/detail.component';\nimport { AddRemoveChildDetailComponent } from './component/crtable/action-detail/add-remove-child/detail.component';\nimport { SetParentDetailComponent } from './component/crtable/action-detail/set-parent/set-parent-detail.component';\nimport { GeoObjectSharedAttributeEditorComponent } from './component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component';\nimport { ManageVersionsComponent } from './component/geoobject-shared-attribute-editor/manage-versions.component';\nimport { ManageVersionsModalComponent } from './component/geoobject-shared-attribute-editor/manage-versions-modal.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { GeoObjectEditorComponent } from './component/geoobject-editor/geoobject-editor.component';\nimport { GeoObjectEditorMapComponent } from './component/geoobject-editor-map/geoobject-editor-map.component';\nimport { SimpleEditControl } from './component/geoobject-editor-map/simple-edit-control/simple-edit-control.component';\nimport { CascadingGeoSelector } from './component/cascading-geo-selector/cascading-geo-selector';\nimport { TreeGeoSelector } from './component/tree-geo-selector/tree-geo-selector';\nimport { ManageParentVersionsModalComponent } from './component/cascading-geo-selector/manage-parent-versions-modal.component';\nimport { ManageParentVersionsComponent } from './component/cascading-geo-selector/manage-parent-versions.component';\nimport { ActionDetailModalComponent } from './component/crtable/action-detail/action-detail-modal.component';\nimport { DataImporterComponent } from './component/importer/dataimporter.component';\nimport { DataExportComponent } from './component/data-export/data-export.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { PublishedMasterListHistoryComponent } from './component/master-list/published-master-list-history.component';\nimport { MasterListHistoryComponent } from './component/master-list/master-list-history.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { JobConflictModalComponent } from './component/scheduled-jobs/conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './component/scheduled-jobs/conflict-widgets/reupload-modal.component';\nimport { ParentReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component';\nimport { TermReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component';\nimport { RowValidationProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component';\nimport { StepIndicatorComponent } from './component/scheduled-jobs/step-indicator.component';\nimport { ImportProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/import-problem-widget.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\n\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigModalComponent } from './component/synchronization-config/synchronization-config-modal.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\n\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\nimport { ContextLayerModalComponent } from './component/location-manager/context-layer-modal.component';\nimport { LayerPanelComponent } from './component/location-manager/layer-panel.component';\nimport { FeaturePanelComponent } from './component/location-manager/feature-panel.component';\nimport { GeometryPanelComponent } from './component/location-manager/geometry-panel.component';\n\nimport { GeoObjectAttributeCodeValidator } from './factory/form-validation.factory';\n\nimport { GeoObjectTypePipe } from './pipe/geoobjecttype.pipe';\nimport { GeoObjectAttributeExcludesPipe } from './pipe/geoobject-attribute-excludes.pipe';\nimport { ToEpochDateTimePipe } from './pipe/to-epoch-date-time.pipe';\nimport { RegistryService } from './service/registry.service';\nimport { TaskService } from './service/task.service';\nimport { HierarchyService } from './service/hierarchy.service';\nimport { SynchronizationConfigService } from './service/synchronization-config.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\nimport { ChangeRequestService } from './service/change-request.service';\nimport { IOService } from './service/io.service';\nimport { MapService } from './service/map.service';\nimport { GeoObjectTypeManagementService } from './service/geoobjecttype-management.service'\n\nimport { RegistryRoutingModule } from './registry-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n\nimport '../rxjs-extensions';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\t//        ModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tTabsModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule,\n\t\tSharedModule,\n\t\tRegistryRoutingModule,\n\t\tAccordionModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tHierarchyComponent,\n\t\tRequestTableComponent,\n\t\tCreateUpdateGeoObjectDetailComponent,\n\t\tAddRemoveChildDetailComponent,\n\t\tSetParentDetailComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tShapefileModalComponent,\n\t\tAttributesPageComponent,\n\t\tLocationPageComponent,\n\t\tLocationProblemPageComponent,\n\t\tLocationProblemComponent,\n\t\tTermProblemPageComponent,\n\t\tTermProblemComponent,\n\t\tSpreadsheetModalComponent,\n\t\tGeoObjectTypePipe,\n\t\tGeoObjectAttributeCodeValidator,\n\t\tEditAttributeModalContentComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tLocalizedInputComponent,\n\t\tLocalizedTextComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsComponent,\n\t\tManageVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tGeoObjectAttributeExcludesPipe,\n\t\tToEpochDateTimePipe,\n\t\tGeoObjectEditorMapComponent,\n\t\tSimpleEditControl,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tCascadingGeoSelector,\n\t\tTreeGeoSelector,\n\t\tManageParentVersionsModalComponent,\n\t\tManageParentVersionsComponent,\n\t\tActionDetailModalComponent,\n\t\tHierarchyComponent,\n\t\tDataImporterComponent,\n\t\tDataExportComponent,\n\t\t// Master List screens\n\t\tMasterListManagerComponent,\n\t\tMasterListComponent,\n\t\tMasterListHistoryComponent,\n\t\tPublishedMasterListHistoryComponent,\n\t\tPublishModalComponent,\n\t\tMasterListViewComponent,\n\t\t// Scheduled jobs\n\t\tExportFormatModalComponent,\n\t\tScheduledJobsComponent,\n\t\tJobComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tParentReferenceProblemWidgetComponent,\n\t\tTermReferenceProblemWidgetComponent,\n\t\tRowValidationProblemWidgetComponent,\n\t\tStepIndicatorComponent,\n\t\tImportProblemWidgetComponent,\n\t\tTaskViewerComponent,\n\t\t// Synchronization Config\n\t\tSynchronizationConfigManagerComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tSynchronizationConfigComponent,\n\t\tSyncDetailsComponent,\n\t\t// Location manager\n\t\tLocationManagerComponent,\n\t\tDatasetLocationManagerComponent,\n\t\tContextLayerModalComponent,\n\t\tLayerPanelComponent,\n\t\tFeaturePanelComponent,\n\t\tGeometryPanelComponent\n\t],\n\tproviders: [\n\t\tMapService,\n\t\tHierarchyService,\n\t\tLocalizationManagerService,\n\t\tChangeRequestService,\n\t\tIOService,\n\t\tGeoObjectTypeManagementService,\n\t\tRegistryService,\n\t\tTaskService,\n\t\tDatePipe,\n\t\tToEpochDateTimePipe,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigService\n\t],\n\tentryComponents: [\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tEditAttributeModalContentComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tShapefileModalComponent,\n\t\tSpreadsheetModalComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsModalComponent,\n\t\tManageParentVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tPublishModalComponent,\n\t\tExportFormatModalComponent,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tActionDetailModalComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tContextLayerModalComponent\n\t]\n})\nexport class RegistryModule { }\n","var map = {\n\t\"./af\": 550,\n\t\"./af.js\": 550,\n\t\"./ar\": 551,\n\t\"./ar-dz\": 552,\n\t\"./ar-dz.js\": 552,\n\t\"./ar-kw\": 553,\n\t\"./ar-kw.js\": 553,\n\t\"./ar-ly\": 554,\n\t\"./ar-ly.js\": 554,\n\t\"./ar-ma\": 555,\n\t\"./ar-ma.js\": 555,\n\t\"./ar-sa\": 556,\n\t\"./ar-sa.js\": 556,\n\t\"./ar-tn\": 557,\n\t\"./ar-tn.js\": 557,\n\t\"./ar.js\": 551,\n\t\"./az\": 558,\n\t\"./az.js\": 558,\n\t\"./be\": 559,\n\t\"./be.js\": 559,\n\t\"./bg\": 560,\n\t\"./bg.js\": 560,\n\t\"./bm\": 561,\n\t\"./bm.js\": 561,\n\t\"./bn\": 562,\n\t\"./bn-bd\": 563,\n\t\"./bn-bd.js\": 563,\n\t\"./bn.js\": 562,\n\t\"./bo\": 564,\n\t\"./bo.js\": 564,\n\t\"./br\": 565,\n\t\"./br.js\": 565,\n\t\"./bs\": 566,\n\t\"./bs.js\": 566,\n\t\"./ca\": 567,\n\t\"./ca.js\": 567,\n\t\"./cs\": 568,\n\t\"./cs.js\": 568,\n\t\"./cv\": 569,\n\t\"./cv.js\": 569,\n\t\"./cy\": 570,\n\t\"./cy.js\": 570,\n\t\"./da\": 571,\n\t\"./da.js\": 571,\n\t\"./de\": 572,\n\t\"./de-at\": 573,\n\t\"./de-at.js\": 573,\n\t\"./de-ch\": 574,\n\t\"./de-ch.js\": 574,\n\t\"./de.js\": 572,\n\t\"./dv\": 575,\n\t\"./dv.js\": 575,\n\t\"./el\": 576,\n\t\"./el.js\": 576,\n\t\"./en-au\": 577,\n\t\"./en-au.js\": 577,\n\t\"./en-ca\": 578,\n\t\"./en-ca.js\": 578,\n\t\"./en-gb\": 579,\n\t\"./en-gb.js\": 579,\n\t\"./en-ie\": 580,\n\t\"./en-ie.js\": 580,\n\t\"./en-il\": 581,\n\t\"./en-il.js\": 581,\n\t\"./en-in\": 582,\n\t\"./en-in.js\": 582,\n\t\"./en-nz\": 583,\n\t\"./en-nz.js\": 583,\n\t\"./en-sg\": 584,\n\t\"./en-sg.js\": 584,\n\t\"./eo\": 585,\n\t\"./eo.js\": 585,\n\t\"./es\": 586,\n\t\"./es-do\": 587,\n\t\"./es-do.js\": 587,\n\t\"./es-mx\": 588,\n\t\"./es-mx.js\": 588,\n\t\"./es-us\": 589,\n\t\"./es-us.js\": 589,\n\t\"./es.js\": 586,\n\t\"./et\": 590,\n\t\"./et.js\": 590,\n\t\"./eu\": 591,\n\t\"./eu.js\": 591,\n\t\"./fa\": 592,\n\t\"./fa.js\": 592,\n\t\"./fi\": 593,\n\t\"./fi.js\": 593,\n\t\"./fil\": 594,\n\t\"./fil.js\": 594,\n\t\"./fo\": 595,\n\t\"./fo.js\": 595,\n\t\"./fr\": 596,\n\t\"./fr-ca\": 597,\n\t\"./fr-ca.js\": 597,\n\t\"./fr-ch\": 598,\n\t\"./fr-ch.js\": 598,\n\t\"./fr.js\": 596,\n\t\"./fy\": 599,\n\t\"./fy.js\": 599,\n\t\"./ga\": 600,\n\t\"./ga.js\": 600,\n\t\"./gd\": 601,\n\t\"./gd.js\": 601,\n\t\"./gl\": 602,\n\t\"./gl.js\": 602,\n\t\"./gom-deva\": 603,\n\t\"./gom-deva.js\": 603,\n\t\"./gom-latn\": 604,\n\t\"./gom-latn.js\": 604,\n\t\"./gu\": 605,\n\t\"./gu.js\": 605,\n\t\"./he\": 606,\n\t\"./he.js\": 606,\n\t\"./hi\": 607,\n\t\"./hi.js\": 607,\n\t\"./hr\": 608,\n\t\"./hr.js\": 608,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 610,\n\t\"./hy-am.js\": 610,\n\t\"./id\": 611,\n\t\"./id.js\": 611,\n\t\"./is\": 612,\n\t\"./is.js\": 612,\n\t\"./it\": 613,\n\t\"./it-ch\": 614,\n\t\"./it-ch.js\": 614,\n\t\"./it.js\": 613,\n\t\"./ja\": 615,\n\t\"./ja.js\": 615,\n\t\"./jv\": 616,\n\t\"./jv.js\": 616,\n\t\"./ka\": 617,\n\t\"./ka.js\": 617,\n\t\"./kk\": 618,\n\t\"./kk.js\": 618,\n\t\"./km\": 619,\n\t\"./km.js\": 619,\n\t\"./kn\": 620,\n\t\"./kn.js\": 620,\n\t\"./ko\": 621,\n\t\"./ko.js\": 621,\n\t\"./ku\": 622,\n\t\"./ku.js\": 622,\n\t\"./ky\": 623,\n\t\"./ky.js\": 623,\n\t\"./lb\": 624,\n\t\"./lb.js\": 624,\n\t\"./lo\": 625,\n\t\"./lo.js\": 625,\n\t\"./lt\": 626,\n\t\"./lt.js\": 626,\n\t\"./lv\": 627,\n\t\"./lv.js\": 627,\n\t\"./me\": 628,\n\t\"./me.js\": 628,\n\t\"./mi\": 629,\n\t\"./mi.js\": 629,\n\t\"./mk\": 630,\n\t\"./mk.js\": 630,\n\t\"./ml\": 631,\n\t\"./ml.js\": 631,\n\t\"./mn\": 632,\n\t\"./mn.js\": 632,\n\t\"./mr\": 633,\n\t\"./mr.js\": 633,\n\t\"./ms\": 634,\n\t\"./ms-my\": 635,\n\t\"./ms-my.js\": 635,\n\t\"./ms.js\": 634,\n\t\"./mt\": 636,\n\t\"./mt.js\": 636,\n\t\"./my\": 637,\n\t\"./my.js\": 637,\n\t\"./nb\": 638,\n\t\"./nb.js\": 638,\n\t\"./ne\": 639,\n\t\"./ne.js\": 639,\n\t\"./nl\": 640,\n\t\"./nl-be\": 641,\n\t\"./nl-be.js\": 641,\n\t\"./nl.js\": 640,\n\t\"./nn\": 642,\n\t\"./nn.js\": 642,\n\t\"./oc-lnc\": 643,\n\t\"./oc-lnc.js\": 643,\n\t\"./pa-in\": 644,\n\t\"./pa-in.js\": 644,\n\t\"./pl\": 645,\n\t\"./pl.js\": 645,\n\t\"./pt\": 646,\n\t\"./pt-br\": 647,\n\t\"./pt-br.js\": 647,\n\t\"./pt.js\": 646,\n\t\"./ro\": 648,\n\t\"./ro.js\": 648,\n\t\"./ru\": 649,\n\t\"./ru.js\": 649,\n\t\"./sd\": 650,\n\t\"./sd.js\": 650,\n\t\"./se\": 651,\n\t\"./se.js\": 651,\n\t\"./si\": 652,\n\t\"./si.js\": 652,\n\t\"./sk\": 653,\n\t\"./sk.js\": 653,\n\t\"./sl\": 654,\n\t\"./sl.js\": 654,\n\t\"./sq\": 655,\n\t\"./sq.js\": 655,\n\t\"./sr\": 656,\n\t\"./sr-cyrl\": 657,\n\t\"./sr-cyrl.js\": 657,\n\t\"./sr.js\": 656,\n\t\"./ss\": 658,\n\t\"./ss.js\": 658,\n\t\"./sv\": 659,\n\t\"./sv.js\": 659,\n\t\"./sw\": 660,\n\t\"./sw.js\": 660,\n\t\"./ta\": 661,\n\t\"./ta.js\": 661,\n\t\"./te\": 662,\n\t\"./te.js\": 662,\n\t\"./tet\": 663,\n\t\"./tet.js\": 663,\n\t\"./tg\": 664,\n\t\"./tg.js\": 664,\n\t\"./th\": 665,\n\t\"./th.js\": 665,\n\t\"./tk\": 666,\n\t\"./tk.js\": 666,\n\t\"./tl-ph\": 667,\n\t\"./tl-ph.js\": 667,\n\t\"./tlh\": 668,\n\t\"./tlh.js\": 668,\n\t\"./tr\": 669,\n\t\"./tr.js\": 669,\n\t\"./tzl\": 670,\n\t\"./tzl.js\": 670,\n\t\"./tzm\": 671,\n\t\"./tzm-latn\": 672,\n\t\"./tzm-latn.js\": 672,\n\t\"./tzm.js\": 671,\n\t\"./ug-cn\": 673,\n\t\"./ug-cn.js\": 673,\n\t\"./uk\": 674,\n\t\"./uk.js\": 674,\n\t\"./ur\": 675,\n\t\"./ur.js\": 675,\n\t\"./uz\": 676,\n\t\"./uz-latn\": 677,\n\t\"./uz-latn.js\": 677,\n\t\"./uz.js\": 676,\n\t\"./vi\": 678,\n\t\"./vi.js\": 678,\n\t\"./x-pseudo\": 679,\n\t\"./x-pseudo.js\": 679,\n\t\"./yo\": 680,\n\t\"./yo.js\": 680,\n\t\"./zh-cn\": 681,\n\t\"./zh-cn.js\": 681,\n\t\"./zh-hk\": 682,\n\t\"./zh-hk.js\": 682,\n\t\"./zh-mo\": 683,\n\t\"./zh-mo.js\": 683,\n\t\"./zh-tw\": 684,\n\t\"./zh-tw.js\": 684\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 686;","import { ChangeRequestService } from './change-request.service';\nimport { GeoObjectTypeManagementService } from './geoobjecttype-management.service';\nimport { HierarchyService } from './hierarchy.service';\nimport { IOService } from './io.service';\nimport { LocalizationManagerService } from './localization-manager.service';\nimport { MapService } from './map.service';\nimport { RegistryService } from './registry.service';\nimport { SynchronizationConfigService } from './synchronization-config.service';\nimport { TaskService } from './task.service';\n\nexport const services: any[] = [\n\tChangeRequestService,\n\tGeoObjectTypeManagementService,\n\tHierarchyService,\n\tIOService,\n\tLocalizationManagerService,\n\tMapService,\n\tRegistryService,\n\tSynchronizationConfigService,\n\tTaskService\n];\n\nexport * from './change-request.service';\nexport * from './geoobjecttype-management.service';\nexport * from './hierarchy.service';\nexport * from './io.service';\nexport * from './localization-manager.service';\nexport * from './map.service';\nexport * from './registry.service';\nexport * from './synchronization-config.service';\nexport * from './task.service';","import { GeoObjectType } from './registry';\n\nexport class ImportSheet {\n\tname: string;\n\tattributes: {\n\t\tboolean: string[];\n\t\tdate: string[];\n\t\tnumeric: string[];\n\t\ttext: string[];\n\t}\n}\n\nexport class Location {\n\tlabel: string;\n\tcode: string;\n\ttarget: string;\n\tmatchStrategy: string;\r\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: string;\n}\n\nexport class TermProblem {\n\tlabel: string;\n\tparentCode: string;\n\tmdAttributeId: string;\n\tattributeCode: string;\n\tattributeLabel: string;\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class LocationProblem {\n\tlabel: string;\n\ttype: string;\n\ttypeLabel: string;\n\tparent: string;\n\tcontext: { label: string, type: string }[];\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class Exclusion {\n\tcode: string;\n\tvalue: string;\n}\n\nexport class Synonym {\n\tlabel: string;\n\tsynonymId: string;\n\tvOid?: string;\n}\n\nexport class ImportConfiguration {\n\ttype: GeoObjectType;\n\tsheet: ImportSheet;\n\tdirectory: string;\n\tfilename: string;\n\thierarchy: string;\n\tpostalCode: boolean;\n\thasPostalCode: boolean;\n\tlocations: Location[];\n\tformatType: string;\n\tobjectType: string;\n\tlocationProblems: LocationProblem[];\n\ttermProblems: TermProblem[];\n\texclusions: Exclusion[];\n\thierarchies: { code: string, label: string }[];\n\tstartDate: string;\n\tendDate: string;\n\tisExternal: string;\n\texternalSystemId: string;\n\texternalIdAttributeTarget: string;\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-text',\n    templateUrl: './localized-text.component.html',\n    styleUrls: ['./localized-text.css'],\n} )\nexport class LocalizedTextComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n\t@Input() public inlinelayout: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","\n<div *ngFor=\"let localeValue of value.localeValues\">\n  <div [ngClass]=\"{'row' : inlinelayout, 'row-holder' : !inlinelayout}\" >\n    <div [ngClass]=\"{'col-md-12' : inlinelayout}\">\n      <div class=\"form-group\">\n        <div [ngClass]=\"{'label-holder' : !inlinelayout}\" >\n          <label>\n            <localize [key]=\"key\"></localize>\n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n        </div>\n        <div [ngClass]=\"{'holder' : !inlinelayout}\">\n          <span class=\"text\">\n            <textarea [(ngModel)]=\"localeValue.value\" [disabled]=\"disabled\" [name]=\"'description-' + localeValue.locale\"></textarea>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { debounceTime, distinctUntilChanged, filter, tap } from \"rxjs/operators\";\nimport { fromEvent } from 'rxjs';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ContextMenuService, ContextMenuComponent } from 'ngx-contextmenu';\nimport * as d3 from 'd3';\n\nimport { CreateHierarchyTypeModalComponent } from './modals/create-hierarchy-type-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './modals/create-geoobjtype-modal.component';\nimport { ManageGeoObjectTypeModalComponent } from './modals/manage-geoobjecttype-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal'\n\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { Organization } from '@shared/model/core';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { SvgHierarchyType } from './d3/svg-hierarchy-type';\nimport { svgPoint, isPointWithin, calculateTextWidth, getBboxFromSelection } from './d3/svg-util';\nimport { SvgHierarchyNode } from './d3/svg-hierarchy-node';\n\nexport const TREE_SCALE_FACTOR_X: number = 1.8;\nexport const TREE_SCALE_FACTOR_Y: number = 1.8;\n\nexport const DEFAULT_NODE_FILL = '#e6e6e6';\nexport const DEFAULT_NODE_BANNER_COLOR = '#A29BAB';\nexport const INHERITED_NODE_FILL = '#d4d4d4';\nexport const INHERITED_NODE_BANNER_COLOR = '#a0a0a0';\nexport const RELATED_NODE_BANNER_COLOR = INHERITED_NODE_BANNER_COLOR;\n\nexport class Instance {\n  active: boolean;\n  label: string;\n}\n\nexport interface DropTarget {\n  dropSelector: string;\n  onDrag(dragEl: Element, dropEl: Element, event: any): void;\n  onDrop(dragEl: Element, event: any): void;\n  [others: string]: any;\n}\n\n@Component({\n\n\tselector: 'hierarchies',\n\ttemplateUrl: './hierarchy.component.html',\n\tstyleUrls: ['./hierarchy.css']\n})\nexport class HierarchyComponent implements OnInit {\n\n\tuserOrganization: string = null;\n\n\tprimarySvgHierarchy: SvgHierarchyType;\n\tcurrentHierarchy: HierarchyType = null;\n\n\tinstance: Instance = new Instance();\n\thierarchies: HierarchyType[];\n\torganizations: Organization[];\n\tgeoObjectTypes: GeoObjectType[] = [];\n\n\thierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n\ttypesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n\n\tfilter: string = '';\n\tfilteredHierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n\tfilteredTypesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n\t@ViewChild('searchInput', { static: true }) searchInput: ElementRef;\n\n\thierarchyTypeDeleteExclusions: string[] = ['AllowedIn', 'IsARelationship'];\n\tgeoObjectTypeDeleteExclusions: string[] = ['ROOT'];\n\n\t_opened: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n    /*\n     * Template for tree node menu\n     */\n\t@ViewChild('nodeMenu') public nodeMenuComponent: ContextMenuComponent;\n\n    /*\n     * Template for leaf menu\n     */\n\t@ViewChild('leafMenu') public leafMenuComponent: ContextMenuComponent;\n\n    /* \n     * Currently clicked on id for delete confirmation modal \n     */\n\tcurrent: any;\n\n\tisSRA: boolean = false;\n\n\thierarchyService: HierarchyService;\n\n\tlocalizeService: LocalizationService;\n\n\toptions = {\n\t\t//\t\t  allowDrag: (any) => node.isLeaf,\n\t\t//\t\t  allowDrop: (element:Element, { parent, index }: {parent:TreeNode,index:number}) => {\n\t\t// return true / false based on element, to.parent, to.index. e.g.\n\t\t//\t\t\t    return parent.hasChildren;\n\t\t//\t\t\t  },\n\t\tdisplayField: \"label\",\n\t\tactionMapping: {\n\t\t\tmouse: {\n\t\t\t\tclick: (tree: any, node: any, $event: any) => {\n\t\t\t\t\tthis.treeNodeOnClick(node, $event);\n\t\t\t\t},\n\t\t\t\tcontextMenu: (tree: any, node: any, $event: any) => {\n\t\t\t\t\tthis.handleOnMenu(node, $event);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmouse: {\n\t\t\t//\t            drop: (tree: any, node: TreeNode, $event: any, {from, to}: {from:TreeNode, to:TreeNode}) => {\n\t\t\t//\t              console.log('drag', from, to); // from === {name: 'first'}\n\t\t\t//\t              // Add a node to `to.parent` at `to.index` based on the data in `from`\n\t\t\t//\t              // Then call tree.update()\n\t\t\t//\t            }\n\t\t}\n\t};\n\n\n\n\tconstructor(hierarchyService: HierarchyService, private modalService: BsModalService,\n\t\tprivate contextMenuService: ContextMenuService,\n\t\tlocalizeService: LocalizationService, private registryService: RegistryService, private authService: AuthService) {\n\n\t\tthis.isSRA = authService.isSRA();\n\n\t\tthis.hierarchyService = hierarchyService;\n\t\tthis.localizeService = localizeService;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.refreshAll(null);\n\n\t\tfromEvent(this.searchInput.nativeElement, 'keyup').pipe(\n\n\t\t\t// get value\n\t\t\tfilter(Boolean),\n\t\t\tdebounceTime(500),\n\t\t\tdistinctUntilChanged(),\n\t\t\ttap(() => {\n\t\t\t\tthis.onFilterChange();\n\t\t\t})\n\t\t\t// subscription for response\n\t\t).subscribe();\n\t}\n\n\tlocalize(key: string): string {\n\t\treturn this.localizeService.decode(key);\n\t}\n\n\tprivate renderTree(): void {\n\t\tif (this.currentHierarchy == null || this.currentHierarchy.rootGeoObjectTypes == null || this.currentHierarchy.rootGeoObjectTypes.length == 0) {\n\t\t\td3.select(\"#svg\").remove();\n\t\t\tthis.geoObjectTypes.forEach((got: GeoObjectType) => {\n\t\t\t\tgot.canDrag = true;\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\td3.select(\".g-context-menu\").remove();\n\t\td3.select(\".hierarchy-inherit-button\").remove();\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\n\t\tlet overflowDiv: any = d3.select(\"#overflow-div\").node();\n\t\tlet scrollLeft = overflowDiv.scrollLeft;\n\t\tlet scrollRight = overflowDiv.scrollRight;\n\n\t\tlet svg = d3.select(\"#svg\");\n\n\t\tif (svg.node() == null) {\n\t\t\tsvg = d3.select(\"#svgHolder\").append(\"svg\");\n\t\t\tsvg.attr(\"id\", \"svg\");\n\t\t}\n\n\t\tthis.primarySvgHierarchy = new SvgHierarchyType(this, svg, this.currentHierarchy, true, this.localizeService, this.modalService);\n\t\tthis.primarySvgHierarchy.render();\n\n\t\tthis.calculateSvgViewBox();\n\n\t\tlet overflowDiv2: any = d3.select(\"#overflow-div\").node();\n\t\toverflowDiv2.scrollLeft = scrollLeft;\n\t\toverflowDiv2.scrollRight = scrollRight;\n\n\t\t//this.registerSvgHandlers();\n\n\t\tthis.geoObjectTypes.forEach((got: GeoObjectType) => {\n\t\t\tgot.canDrag = this.calculateCanDrag(got);\n\t\t});\n\t}\n\n\tcalculateSvgViewBox(): void {\n\t\tlet svg: any = d3.select(\"#svg\");\n\t\tlet svgNode: any = svg.node();\n\n\t\tlet { x, y, width, height } = svgNode.getBBox();\n\n\t\tconst xPadding = 30;\n\t\tconst yPadding = 40;\n\t\tsvg.attr(\"viewBox\", (x - xPadding) + \" \" + (y - yPadding) + \" \" + (width + xPadding * 2) + \" \" + (height + yPadding * 2));\n\n\t\twidth = (width + xPadding * 2) * TREE_SCALE_FACTOR_X;\n\t\theight = (height + yPadding * 2) * TREE_SCALE_FACTOR_Y;\n\n\t\td3.select(\"#svgHolder\").style(\"width\", width + \"px\");\n\t\t//d3.select(\"#svgHolder\").style(\"height\", height + \"px\"); \n\t}\n\n\tcalculateCanDrag(got: GeoObjectType): boolean {\n\t\tlet hierarchyComponent = this;\n\n\t\tif (this.primarySvgHierarchy != null) {\n\t\t\tif (this.primarySvgHierarchy.getNodeByCode(got.code) != null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (got.isAbstract) {\n\t\t\t\tlet isChildOnGraph = false;\n\n\t\t\t\tthis.geoObjectTypes.forEach((child: GeoObjectType) => {\n\t\t\t\t\tif (child.superTypeCode === got.code) {\n\t\t\t\t\t\tif (hierarchyComponent.primarySvgHierarchy.getNodeByCode(child.code) != null) {\n\t\t\t\t\t\t\tisChildOnGraph = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (isChildOnGraph) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (got.superTypeCode != null) {\n\t\t\t\tif (hierarchyComponent.primarySvgHierarchy.getNodeByCode(got.superTypeCode) != null) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcalculateRelatedHierarchies(got: GeoObjectType): string[] {\n\t\tlet relatedHiers = [];\n\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet hierarchyType = this.hierarchies[i];\n\n\t\t\tif (hierarchyType.rootGeoObjectTypes != null && hierarchyType.rootGeoObjectTypes.length > 0) {\n\t\t\t\tlet d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]).descendants();\n\n\t\t\t\tlet found = d3Hierarchy.find((node) => {\n\t\t\t\t\treturn node.data.geoObjectType === got.code && node.data.inheritedHierarchyCode == null;\n\t\t\t\t});\n\n\t\t\t\tif (found) {\n\t\t\t\t\trelatedHiers.push(hierarchyType.code);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn relatedHiers;\n\t}\n\n\tprivate registerDragHandlers(): any {\n\t\tlet that = this;\n\n\t\tlet dropTargets: DropTarget[] = [];\n\n\t\t// Empty Hierarchy Drop Zone\n\t\tdropTargets.push({\n\t\t\tdropSelector: \".drop-box-container\", onDrag: function(dragEl: Element, dropEl: Element) {\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tthis.dropEl.style(\"border-color\", null);\n\t\t\t\t\tthis.dropEl = null;\n\t\t\t\t}\n\n\t\t\t\tif (dropEl != null) {\n\t\t\t\t\tlet emptyHierarchyDropZone = dropEl.closest(\".drop-box-container\");\n\n\t\t\t\t\tif (emptyHierarchyDropZone != null) {\n\t\t\t\t\t\tthis.dropEl = d3.select(emptyHierarchyDropZone).style(\"border-color\", \"#6BA542\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, onDrop: function(dragEl: Element) {\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tthis.dropEl.style(\"border-color\", null);\n\t\t\t\t\tthat.addChild(that.currentHierarchy.code, \"ROOT\", d3.select(dragEl).attr(\"id\"));\n\t\t\t\t\tthis.dropEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// SVG GeoObjectType Drop Zone\n\t\tdropTargets.push({\n\t\t\tdropSelector: \".svg-got-body-rect\", onDrag: function(dragEl: Element, mouseTarget: Element, event: any) {\n\t\t\t\tthis.clearDropZones();\n\n\t\t\t\tlet lastDropEl = this.dropEl;\n\n\t\t\t\t// translate page to SVG co-ordinate\n\t\t\t\tlet svg: any = d3.select(\"#svg\").node();\n\n\t\t\t\tif (svg == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\t\t\t\t// Find out if we've dragged the GeoObjectType inside of a HierarchyNode. If we have, then\n\t\t\t\t// we need to expand the HierarchyNode's BoundingBox to accomodate our new drop zones. \n\t\t\t\tthat.primarySvgHierarchy.getD3Tree().descendants().forEach((node: any) => {\n\t\t\t\t\tif (node.data.geoObjectType !== \"GhostNode\" && isPointWithin(svgMousePoint, node.data.dropZoneBbox)) {\n\t\t\t\t\t\tthis.dropEl = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + node.data.geoObjectType + '\"]');\n\t\t\t\t\t\tnode.data.activeDropZones = true;\n\n\t\t\t\t\t\tif (node.parent == null) {\n\t\t\t\t\t\t\tnode.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH * 4 };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnode.data.activeDropZones = false;\n\n\t\t\t\t\t\tif (node.parent == null) {\n\t\t\t\t\t\t\tnode.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (this.dropEl == null || (lastDropEl != null && this.dropEl != null && lastDropEl.attr(\"data-gotCode\") != this.dropEl.attr(\"data-gotCode\"))) {\n\t\t\t\t\tthis.clearGhostNodes(true);\n\t\t\t\t}\n\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tlet isDragGroup = d3.select(dragEl).classed(\"got-group-parent\");\n\t\t\t\t\tconst gotCode = this.dropEl.attr(\"data-gotCode\");\n\t\t\t\t\tlet dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n\t\t\t\t\tlet isDropGroup = that.findGeoObjectTypeByCode(gotCode).isAbstract;\n\n\t\t\t\t\tthis.dropEl.attr(\"stroke\", \"blue\");\n\n\t\t\t\t\tconst dropElX = parseInt(this.dropEl.attr(\"x\"));\n\t\t\t\t\tconst dropElY = parseInt(this.dropEl.attr(\"y\"));\n\n\t\t\t\t\t// Add drop zones\n\t\t\t\t\tconst childW: number = SvgHierarchyType.gotRectW;\n\t\t\t\t\tconst childH: number = SvgHierarchyType.gotRectH;\n\n\t\t\t\t\tlet dzg = d3.select(\"#svg\").append(\"g\").classed(\"svg-dropZone-g\", true);\n\n\t\t\t\t\t// Render Child Drop Zone\n\t\t\t\t\tlet dropTargetHasChildren = !(dropNode.children == null || dropNode.children.length == 0);\n\t\t\t\t\tlet isChildDZActive = !isDropGroup && (!isDragGroup || !dropTargetHasChildren);\n\t\t\t\t\tif (isChildDZActive) {\n\t\t\t\t\t\tthis.childDzBacker = dzg.append(\"rect\").classed(\"svg-got-child-dz-backer\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"white\")\n\n\t\t\t\t\t\tthis.childDz = dzg.append(\"rect\").classed(\"svg-got-child-dz\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"none\")\n\t\t\t\t\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t\t\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t\t\t\t\t.attr(\"stroke-dasharray\", \"5,5\");\n\n\t\t\t\t\t\tlet addChildLabel = dropTargetHasChildren ? that.localizeService.decode(\"hierarchy.content.intersectChild\") : that.localizeService.decode(\"hierarchy.content.addChild\");\n\t\t\t\t\t\tthis.childDzText = dzg.append(\"text\").classed(\"svg-got-child-dz-text\", true)\n\t\t\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t\t\t.attr(\"font-size\", 10)\n\t\t\t\t\t\t\t.attr(\"fill\", \"black\")\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addChildLabel, 10) / 2)\n\t\t\t\t\t\t\t.attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10 + childH / 2 + 2)\n\t\t\t\t\t\t\t.text(addChildLabel);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Render Parent Drop Zone\n\t\t\t\t\tif (!isDragGroup) // Don't render it if we're a group\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parentDzBacker = dzg.append(\"rect\").classed(\"svg-got-parent-dz-backer\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"white\")\n\n\t\t\t\t\t\tthis.parentDz = dzg.append(\"rect\").classed(\"svg-got-parent-dz\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"none\")\n\t\t\t\t\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t\t\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t\t\t\t\t.attr(\"stroke-dasharray\", \"5,5\");\n\n\t\t\t\t\t\td3.select(\".svg-got-parent-dz-text\").remove();\n\t\t\t\t\t\tlet addParentLabel = dropNode.parent == null ? that.localizeService.decode(\"hierarchy.content.addParent\") : that.localizeService.decode(\"hierarchy.content.intersectParent\");\n\t\t\t\t\t\tthis.parentDzText = dzg.append(\"text\").classed(\"svg-got-parent-dz-text\", true)\n\t\t\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t\t\t.attr(\"font-size\", 10)\n\t\t\t\t\t\t\t.attr(\"fill\", \"black\")\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addParentLabel, 10) / 2)\n\t\t\t\t\t\t\t.attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH / 2 + 2)\n\t\t\t\t\t\t\t.text(addParentLabel);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Render Sibling Drop Zone\n\t\t\t\t\tif (this.ghostCode != gotCode) {\n\n\n\t\t\t\t\t\tif (this.ghostCode != null) {\n\t\t\t\t\t\t\tthis.clearGhostNodes(dropNode.parent == null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dropNode.parent != null) {\n\t\t\t\t\t\t\tlet parentIndex = null;\n\t\t\t\t\t\t\tfor (let i = 0; i < dropNode.parent.data.children.length; ++i) {\n\t\t\t\t\t\t\t\tlet hn: any = dropNode.parent.data.children[i];\n\n\t\t\t\t\t\t\t\tif (hn.geoObjectType === gotCode) {\n\t\t\t\t\t\t\t\t\tparentIndex = i + 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlet addSiblingLabel = that.localizeService.decode(\"hierarchy.content.addChild\");\n\t\t\t\t\t\t\tdropNode.parent.data.children.splice(parentIndex, 0, { ghostingCode: gotCode, geoObjectType: \"GhostNode\", label: addSiblingLabel, children: [] });\n\n\t\t\t\t\t\t\tthat.renderTree();\n\t\t\t\t\t\t\tthis.ghostCode = gotCode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet siblingGhostBody = d3.select(\".svg-sibling-ghost-body-dz\");\n\n\t\t\t\t\tif (!isDragGroup && isPointWithin(svgMousePoint, getBboxFromSelection(this.parentDz))) {\n\t\t\t\t\t\tthis.parentDz.attr(\"stroke\", \"blue\");\n\t\t\t\t\t\tthis.parentDzText.attr(\"fill\", \"blue\");\n\t\t\t\t\t\tisChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tisChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tsiblingGhostBody.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tthis.activeDz = this.parentDz;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isChildDZActive && isPointWithin(svgMousePoint, getBboxFromSelection(this.childDz))) {\n\t\t\t\t\t\t!isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\t!isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tthis.childDz.attr(\"stroke\", \"blue\");\n\t\t\t\t\t\tthis.childDzText.attr(\"fill\", \"blue\");\n\t\t\t\t\t\tsiblingGhostBody.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tthis.activeDz = this.childDz;\n\t\t\t\t\t}\n\t\t\t\t\telse if (siblingGhostBody.node() != null && isPointWithin(svgMousePoint, getBboxFromSelection(siblingGhostBody))) {\n\t\t\t\t\t\t!isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\t!isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tisChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tisChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tsiblingGhostBody.attr(\"stroke\", \"blue\");\n\t\t\t\t\t\tthis.activeDz = \"sibling\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, onDrop: function(dragEl: Element) {\n\t\t\t\tif (this.dropEl != null && this.activeDz != null) {\n\t\t\t\t\tlet dropGot = this.dropEl.attr(\"data-gotCode\");\n\t\t\t\t\tlet dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === dropGot; });\n\t\t\t\t\tlet dragGot = d3.select(dragEl).attr(\"id\");\n\n\t\t\t\t\tif (this.activeDz === this.childDz) {\n\t\t\t\t\t\tif (dropNode.data.children.length == 0) {\n\t\t\t\t\t\t\tthat.addChild(that.currentHierarchy.code, dropGot, dragGot);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlet youngest = \"\";\n\n\t\t\t\t\t\t\tfor (let i = 0; i < dropNode.data.children.length; ++i) {\n\t\t\t\t\t\t\t\tyoungest = youngest + dropNode.data.children[i].geoObjectType;\n\n\t\t\t\t\t\t\t\tif (i < dropNode.data.children.length - 1) {\n\t\t\t\t\t\t\t\t\tyoungest = youngest + \",\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthat.insertBetweenTypes(that.currentHierarchy.code, dropGot, dragGot, youngest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.activeDz === this.parentDz) {\n\t\t\t\t\t\tif (dropNode.parent == null) {\n\t\t\t\t\t\t\tthat.insertBetweenTypes(that.currentHierarchy.code, \"ROOT\", dragGot, dropGot);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthat.insertBetweenTypes(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, dragGot, dropGot);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.activeDz === \"sibling\") {\n\t\t\t\t\t\tthat.addChild(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, d3.select(dragEl).attr(\"id\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.clearDropZones();\n\t\t\t\tthis.clearGhostNodes(true);\n\t\t\t}, clearDropZones: function() {\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tthis.dropEl.attr(\"stroke\", null);\n\t\t\t\t}\n\n\t\t\t\tthis.dropEl = null;\n\t\t\t\tthis.activeDz = null;\n\n\t\t\t\tthis.childDz = null;\n\t\t\t\tthis.parentDz = null;\n\n\t\t\t\td3.select(\".svg-dropZone-g\").remove();\n\n\t\t\t}, clearGhostNodes: function(renderTree: boolean) {\n\t\t\t\tif (this.ghostCode != null) {\n\t\t\t\t\tlet ghostNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.ghostingCode === this.ghostCode; });\n\n\t\t\t\t\tif (ghostNode != null) {\n\t\t\t\t\t\tlet parentIndex = null;\n\t\t\t\t\t\tfor (let i = 0; i < ghostNode.parent.data.children.length; ++i) {\n\t\t\t\t\t\t\tlet hn: any = ghostNode.parent.data.children[i];\n\n\t\t\t\t\t\t\tif (hn.ghostingCode === this.ghostCode) {\n\t\t\t\t\t\t\t\tparentIndex = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (parentIndex != null) {\n\t\t\t\t\t\t\tghostNode.parent.data.children.splice(parentIndex, 1);\n\t\t\t\t\t\t\tif (renderTree) {\n\t\t\t\t\t\t\t\tthat.renderTree();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.ghostCode = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// GeoObjectTypes and Hierarchies\n\t\tlet deltaX: number, deltaY: number, width: number;\n\t\tlet sidebarDragHandler = d3.drag()\n\t\t\t.on(\"start\", function(event: any) {\n\t\t\t\tlet canDrag = d3.select(this).attr(\"data-candrag\");\n\t\t\t\tif (canDrag === \"false\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet rect = this.getBoundingClientRect();\n\t\t\t\tdeltaX = rect.left - event.sourceEvent.pageX;\n\t\t\t\tdeltaY = rect.top - event.sourceEvent.pageY;\n\t\t\t\twidth = rect.width;\n\t\t\t})\n\t\t\t.on(\"drag\", function(event: any) {\n\t\t\t\tlet canDrag = d3.select(this).attr(\"data-candrag\");\n\t\t\t\tif (canDrag === \"false\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\td3.select(\".g-context-menu\").remove();\n\n\t\t\t\tlet selThis = d3.select(this);\n\n\t\t\t\t// Kind of a dumb hack, but if we hide our drag element for a sec, then we can check what's underneath it.\n\t\t\t\tselThis.style(\"display\", \"none\");\n\n\t\t\t\tlet target = document.elementFromPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\t\t\t\tselThis.style(\"display\", null);\n\n\t\t\t\tfor (let i = 0; i < dropTargets.length; ++i) {\n\t\t\t\t\tdropTargets[i].onDrag(this, target, event);\n\t\t\t\t}\n\n\t\t\t\t// Move the GeoObjectType with the pointer when they move their mouse\n\t\t\t\tselThis\n\t\t\t\t\t.classed(\"dragging\", true)\n\t\t\t\t\t.style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n\t\t\t\t\t.style(\"top\", (event.sourceEvent.pageY + deltaY) + \"px\")\n\t\t\t\t\t.style(\"width\", width + \"px\");\n\n\t\t\t\t// If they are moving a GOT group then we have to move the children as well \n\t\t\t\tif (selThis.classed(\"got-group-parent\")) {\n\t\t\t\t\tlet index = 1;\n\t\t\t\t\td3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n\t\t\t\t\t\tlet li: any = this;\n\t\t\t\t\t\tlet child = d3.select(li);\n\n\t\t\t\t\t\tchild\n\t\t\t\t\t\t\t.classed(\"dragging\", true)\n\t\t\t\t\t\t\t.style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (event.sourceEvent.pageY + deltaY + (li.getBoundingClientRect().height + 2) * index) + \"px\")\n\t\t\t\t\t\t\t.style(\"width\", width + \"px\");\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}).on(\"end\", function(event: any) {\n\t\t\t\tlet selThis = d3.select(this)\n\t\t\t\t\t.classed(\"dragging\", false)\n\t\t\t\t\t.style(\"left\", null)\n\t\t\t\t\t.style(\"top\", null)\n\t\t\t\t\t.style(\"width\", null);\n\n\t\t\t\t// If they are moving a GOT group then we have to reset the children as well \n\t\t\t\tif (selThis.classed(\"got-group-parent\")) {\n\t\t\t\t\td3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n\t\t\t\t\t\tlet child = d3.select(this);\n\n\t\t\t\t\t\tchild\n\t\t\t\t\t\t\t.classed(\"dragging\", false)\n\t\t\t\t\t\t\t.style(\"left\", null)\n\t\t\t\t\t\t\t.style(\"top\", null)\n\t\t\t\t\t\t\t.style(\"width\", null);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < dropTargets.length; ++i) {\n\t\t\t\t\tdropTargets[i].onDrop(this, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\tsidebarDragHandler(d3.selectAll(\".sidebar-section-content ul.list-group li.got-li-item\"));\n\t}\n\n\tprivate registerSvgHandlers(): void {\n\t\tlet hierarchyComponent = this;\n\n\t\t// SVG Drag Handler\n\t\tlet deltaX: number, deltaY: number, width: number;\n\t\tlet startPoint: any;\n\t\tlet svgGot: SvgHierarchyNode;\n\t\tlet svgDragHandler = d3.drag()\n\t\t\t.on(\"start\", function(event: any) {\n\t\t\t\tlet svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\t\t\t\t// let select = d3.select(this);\n\n\t\t\t\tsvgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n\n\n\t\t\t\t// d3.selectAll(\".svg-got-relatedhiers-button\").sort(function (a: any, b: any) {\n\t\t\t\t// \tif (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n\t\t\t\t// \t\treturn -1\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\treturn 1\n\t\t\t\t// \t}\n\t\t\t\t// });\n\n\t\t\t\t// \td3.selectAll(\".svg-got-body-rect\").sort(function (a: any, b: any) {\n\t\t\t\t// \tif (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n\t\t\t\t// \t\treturn -1\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\treturn 1\n\t\t\t\t// \t}\n\t\t\t\t// });\n\n\t\t\t\t// d3.selectAll(\".svg-got-header-rect\").sort(function (a: any, b: any) {\n\t\t\t\t// \tif (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n\t\t\t\t// \t\tconsole.log(\"no --> \",a.data.geoObjectType)\n\t\t\t\t// \t\treturn -1\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\tconsole.log(\"yes --> \",a.data.geoObjectType)\n\t\t\t\t// \t\treturn 1\n\t\t\t\t// \t}\n\t\t\t\t// });\n\n\t\t\t\tstartPoint = svgGot.getPos();\n\n\t\t\t\tdeltaX = startPoint.x - svgMousePoint.x;\n\t\t\t\tdeltaY = startPoint.y - svgMousePoint.y;\n\t\t\t})\n\t\t\t.on(\"drag\", function(event: any) {\n\n\t\t\t\td3.select(\".g-context-menu\").remove();\n\n\t\t\t\tlet svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\t\t\t\tsvgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n\t\t\t\tsvgGot.setPos(svgMousePoint.x + deltaX, svgMousePoint.y + deltaY, true);\n\n\t\t\t}).on(\"end\", function(event: any) {\n\n\t\t\t\tlet bbox: string[] = d3.select(\"#svg\").attr(\"viewBox\").split(\" \");\n\n\t\t\t\tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\n\t\t\t\t// if (!isBboxPartiallyWithin(svgGot.getBbox(), { x: parseInt(bbox[0]), y: parseInt(bbox[1]), width: parseInt(bbox[2]), height: parseInt(bbox[3]) })) {\n\n\t\t\t\t// \tif (hierarchyComponent.isOrganizationRA(hierarchyComponent.currentHierarchy.organizationCode)) {\n\t\t\t\t// \t\tlet obj = hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n\t\t\t\t// \t\thierarchyComponent.bsModalRef = hierarchyComponent.modalService.show(ConfirmModalComponent, {\n\t\t\t\t// \t\t\tanimated: true,\n\t\t\t\t// \t\t\tbackdrop: true,\n\t\t\t\t// \t\t\tignoreBackdropClick: true,\n\t\t\t\t// \t\t});\n\n\t\t\t\t// \t\tlet message = hierarchyComponent.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n\t\t\t\t// \t\tmessage = message.replace(\"{label}\", obj.label.localizedValue);\n\n\t\t\t\t// \t\thierarchyComponent.bsModalRef.content.message = message;\n\t\t\t\t// \t\thierarchyComponent.bsModalRef.content.data = obj.code;\n\n\t\t\t\t// \t\t(<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\t\t// \t\t\tlet treeNode = svgGot.getTreeNode();\n\t\t\t\t// \t\t\tlet parent = null;\n\t\t\t\t// \t\t\tif (treeNode.parent == null) {\n\t\t\t\t// \t\t\t\tparent = \"ROOT\";\n\t\t\t\t// \t\t\t}\n\t\t\t\t// \t\t\telse {\n\t\t\t\t// \t\t\t\tif (treeNode.parent.data.inheritedHierarchyCode != null) {\n\t\t\t\t// \t\t\t\t\tparent = \"ROOT\";\n\t\t\t\t// \t\t\t\t}\n\t\t\t\t// \t\t\t\telse {\n\t\t\t\t// \t\t\t\t\tparent = treeNode.parent.data.geoObjectType;\n\t\t\t\t// \t\t\t\t}\n\t\t\t\t// \t\t\t}\n\n\t\t\t\t// \t\t\thierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { svgGot.setPos(startPoint.x, startPoint.y, false); });\n\t\t\t\t// \t\t});\n\n\t\t\t\t// \t\t(<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n\t\t\t\t// \t\t\tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t\t\t// \t\t});\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t\t\t// \t}\n\n\t\t\t\t// }\n\t\t\t\t// else {\n\t\t\t\t// \tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t\t\t// }\n\n\t\t\t});\n\n\t\tsvgDragHandler(d3.selectAll(\".svg-got-body-rect[data-inherited=false],.svg-got-label-text[data-inherited=false],.svg-got-header-rect[data-inherited=false]\"));\n\t}\n\n\tpublic findGeoObjectTypeByCode(code: string): GeoObjectType {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; ++i) {\n\t\t\tlet got: GeoObjectType = this.geoObjectTypes[i];\n\n\t\t\tif (got.code === code) {\n\t\t\t\treturn got;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findHierarchyByCode(code: string): HierarchyType {\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet ht: HierarchyType = this.hierarchies[i];\n\n\t\t\tif (ht.code === code) {\n\t\t\t\treturn ht;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic findOrganizationByCode(code: string): Organization {\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      if (org.code === code) {\n        return org;\n      }\n    }\n  }\n\n\tprivate addChild(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): void {\n\t\tthis.hierarchyService.addChildToHierarchy(hierarchyCode, parentGeoObjectTypeCode, childGeoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tlet got = this.findGeoObjectTypeByCode(childGeoObjectTypeCode);\n\n\t\t\tlet index = null;\n\t\t\tfor (let i = 0; i < got.relatedHierarchies.length; ++i) {\n\t\t\t\tif (got.relatedHierarchies[i] === hierarchyCode) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index == null) {\n\t\t\t\tgot.relatedHierarchies.push(hierarchyCode);\n\t\t\t}\n\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate insertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): void {\n\t\tthis.hierarchyService.insertBetweenTypes(hierarchyCode, parentGeoObjectTypeCode, middleGeoObjectTypeCode, youngestGeoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tisRA(): boolean {\n\t\treturn this.authService.isRA();\n\t}\n\n\tisOrganizationRA(orgCode: string, dropZone: boolean = false): boolean {\n\t\treturn this.isSRA || this.authService.isOrganizationRA(orgCode);\n\t}\n\n\tgetTypesByOrg(org: Organization): GeoObjectType[] {\n\t\tlet orgTypes: GeoObjectType[] = [];\n\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; ++i) {\n\t\t\tlet geoObjectType: GeoObjectType = this.geoObjectTypes[i];\n\n\t\t\tif (geoObjectType.organizationCode === org.code) {\n\t\t\t\torgTypes.push(geoObjectType);\n\t\t\t}\n\t\t}\n\n\t\treturn orgTypes;\n\t}\n\n\tgetHierarchiesByOrg(org: Organization): HierarchyType[] {\n\t\tlet orgHierarchies: HierarchyType[] = [];\n\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet hierarchy: HierarchyType = this.hierarchies[i];\n\n\t\t\tif (hierarchy.organizationCode === org.code) {\n\t\t\t\torgHierarchies.push(hierarchy);\n\t\t\t}\n\t\t}\n\n\t\treturn orgHierarchies;\n\t}\n\n\tpublic refreshAll(desiredHierarchy: HierarchyType) {\n\n\t\t// Clear the types to then refresh\n\t\tthis.geoObjectTypes = [];\n\n\t\tthis.registryService.init().then(response => {\n\t\t\tthis.localizeService.setLocales(response.locales);\n\n\t\t\tthis.setGeoObjectTypes(response.types);\n\n\t\t\tthis.organizations = response.organizations;\n\n\t\t\tthis.organizations.forEach(org => {\n\t\t\t\tif (this.isOrganizationRA(org.code)) {\n\t\t\t\t\tthis.userOrganization = org.code;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(\"ROOT\");\n\t\t\tif (pos) {\n\t\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t}\n\n\t\t\tthis.setHierarchies(response.hierarchies);\n\n\t\t\tthis.setNodesOnInit(desiredHierarchy);\n\n\t\t\tthis.updateViewDatastructures();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic setGeoObjectTypes(types: GeoObjectType[]): void {\n\n\t\t// Set group parent types\n\t\tthis.setAbstractTypes(types);\n\n\t\t// Set GeoObjectTypes that aren't part of a group.\n\t\ttypes.forEach(type => {\n\t\t\tif (!type.isAbstract) {\n\t\t\t\tif (!type.superTypeCode) {\n\t\t\t\t\tthis.geoObjectTypes.push(type);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Sort aphabetically because all other types to add will be children in a group.\n\t\tthis.geoObjectTypes.sort((a, b) => {\n\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\telse return 0;\n\t\t});\n\n\t\t// Add group children\n\t\ttypes.forEach(type => {\n\t\t\tif (!type.isAbstract) {\n\t\t\t\tif (type.superTypeCode && type.superTypeCode.length > 0) {\n\n\t\t\t\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\t\t\t\tlet setType = this.geoObjectTypes[i];\n\t\t\t\t\t\tif (type.superTypeCode === setType.code) {\n\t\t\t\t\t\t\tthis.geoObjectTypes.splice(i + 1, 0, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tprivate setAbstractTypes(types: GeoObjectType[]): void {\n\t\ttypes.forEach(type => {\n\t\t\tif (type.isAbstract) {\n\t\t\t\tthis.geoObjectTypes.push(type);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic updateViewDatastructures(): void {\n\t\tthis.hierarchiesByOrg = [];\n\t\tthis.typesByOrg = [];\n\n\t\tfor (let i = 0; i < this.organizations.length; ++i) {\n\t\t\tlet org: Organization = this.organizations[i];\n\n\t\t\tthis.hierarchiesByOrg.push({ org: org, hierarchies: this.getHierarchiesByOrg(org) });\n\t\t\tthis.typesByOrg.push({ org: org, types: this.getTypesByOrg(org) });\n\t\t}\n\n\t\tthis.geoObjectTypes.forEach((got: GeoObjectType) => {\n\t\t\tgot.canDrag = this.calculateCanDrag(got);\n\t\t\tgot.relatedHierarchies = this.calculateRelatedHierarchies(got);\n\t\t});\n\n\t\tthis.onFilterChange();\n\t}\n\n\tpublic excludeHierarchyTypeDeletes(hierarchy: HierarchyType) {\n\t\treturn (this.hierarchyTypeDeleteExclusions.indexOf(hierarchy.code) !== -1);\n\t}\n\n\tpublic excludeGeoObjectTypeDeletes(geoObjectType: GeoObjectType) {\n\t\treturn (this.geoObjectTypeDeleteExclusions.indexOf(geoObjectType.code) !== -1);\n\t}\n\n\tprivate setNodesOnInit(desiredHierarchy: HierarchyType): void {\n\n\t\tlet index = -1;\n\n\t\tif (desiredHierarchy != null) {\n\t\t\tindex = this.hierarchies.findIndex(h => h.code === desiredHierarchy.code);\n\t\t}\n\t\telse if (this.hierarchies.length > 0) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tif (index > -1) {\n\t\t\tconst hierarchy = this.hierarchies[index];\n\n\t\t\tthis.setCurrentHierarchy(hierarchy);\n\n\t\t\tthis.renderTree();\n\t\t}\n\t}\n\n\tprivate getHierarchy(hierarchyId: string): HierarchyType {\n\t\tlet target: HierarchyType = null;\n\t\tthis.hierarchies.forEach(hierarchy => {\n\t\t\tif (hierarchyId === hierarchy.code) {\n\t\t\t\ttarget = hierarchy;\n\t\t\t}\n\t\t});\n\n\t\treturn target;\n\t}\n\n\tprivate setHierarchies(data: HierarchyType[]): void {\n\t\tlet hierarchies: HierarchyType[] = [];\n\t\tdata.forEach((hierarchyType, index) => {\n\n\t\t\tif (hierarchyType.rootGeoObjectTypes.length > 0) {\n\t\t\t\thierarchyType.rootGeoObjectTypes.forEach(rootGeoObjectType => {\n\t\t\t\t\tthis.processHierarchyNodes(rootGeoObjectType);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\thierarchies.push(hierarchyType);\n\n\t\t});\n\n\t\tthis.hierarchies = hierarchies\n\n\t\tthis.hierarchies.sort((a, b) => {\n\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\telse return 0;\n\t\t});\n\t}\n\n\tprivate processHierarchyNodes(node: HierarchyNode) {\n\t\tif (node != null) {\n\t\t\tnode.label = this.getHierarchyLabel(node.geoObjectType);\n\n\t\t\tnode.children.forEach(child => {\n\t\t\t\tthis.processHierarchyNodes(child);\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate getHierarchyLabel(geoObjectTypeCode: string): string {\n\t\tlet label: string = null;\n\t\tthis.geoObjectTypes.forEach(function(gOT) {\n\t\t\tif (gOT.code === geoObjectTypeCode) {\n\t\t\t\tlabel = gOT.label.localizedValue;\n\t\t\t}\n\t\t});\n\n\t\treturn label;\n\t}\n\n\tpublic handleOnMenu(node: any, $event: any): void {\n\t\tif (this.isOrganizationRA(this.currentHierarchy.organizationCode)) {\n\t\t\tthis.contextMenuService.show.next({\n\t\t\t\tcontextMenu: (node.data.childType !== null ? this.nodeMenuComponent : this.leafMenuComponent),\n\t\t\t\tevent: $event,\n\t\t\t\titem: node,\n\t\t\t});\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t}\n\t\telse {\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t}\n\t}\n\n\tpublic treeNodeOnClick(node: any, $event: any): void {\n\n\t\tnode.treeModel.setFocusedNode(node);\n\n\t\tif (node.treeModel.isExpanded(node)) {\n\t\t\tnode.collapse();\n\t\t}\n\t\telse {\n\t\t\tnode.treeModel.expandAll();\n\t\t}\n\t}\n\n\tpublic hierarchyOnClick(event: any, item: HierarchyType) {\n\t\tthis.setCurrentHierarchy(item);\n\t\tthis.renderTree();\n\t}\n\n\tpublic createHierarchy(): void {\n\t\tthis.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'upload-modal'\n\t\t});\n\n\t\t(<CreateHierarchyTypeModalComponent>this.bsModalRef.content).onHierarchytTypeCreate.subscribe(data => {\n\n\t\t\tthis.hierarchies.push(data);\n\n\t\t\tthis.hierarchies.sort((a: HierarchyType, b: HierarchyType) => {\n\t\t\t\tvar nameA = a.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n\t\t\t\tvar nameB = b.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n\n\t\t\t\tif (nameA < nameB) {\n\t\t\t\t\treturn -1; //nameA comes first\n\t\t\t\t}\n\n\t\t\t\tif (nameA > nameB) {\n\t\t\t\t\treturn 1; // nameB comes first\n\t\t\t\t}\n\n\t\t\t\treturn 0;  // names must be equal\n\t\t\t});\n\n\t\t\tthis.updateViewDatastructures();\n\t\t});\n\t}\n\n\tpublic deleteHierarchyType(obj: HierarchyType): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.data = obj.code;\n\t\tthis.bsModalRef.content.type = \"DANGER\";\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.removeHierarchyType(data);\n\t\t});\n\t}\n\n\tpublic editHierarchyType(obj: HierarchyType, readOnly: boolean): void {\n\n\t\tthis.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'upload-modal'\n\t\t});\n\t\tthis.bsModalRef.content.edit = true;\n\t\tthis.bsModalRef.content.readOnly = readOnly;\n\t\tthis.bsModalRef.content.hierarchyType = obj;\n\t\tthis.bsModalRef.content.onHierarchytTypeCreate.subscribe(data => {\n\t\t\tlet pos = this.getHierarchyTypePosition(data.code);\n\n\t\t\tthis.hierarchies[pos].label = data.label;\n\t\t\tthis.hierarchies[pos].description = data.description;\n\t\t\tthis.hierarchies[pos].progress = data.progress;\n\t\t\tthis.hierarchies[pos].acknowledgement = data.acknowledgement;\n\t\t\tthis.hierarchies[pos].disclaimer = data.disclaimer;\n\t\t\tthis.hierarchies[pos].useConstraints = data.useConstraints;\n\t\t\tthis.hierarchies[pos].accessConstraints = data.accessConstraints;\n\t\t\tthis.hierarchies[pos].contact = data.contact;\n\t\t\tthis.hierarchies[pos].phoneNumber = data.phoneNumber;\n\t\t\tthis.hierarchies[pos].email = data.email;\n\n\t\t\tthis.updateViewDatastructures();\n\n\t\t\tif (this.currentHierarchy.code === data.code) {\n\t\t\t\tthis.setCurrentHierarchy(this.hierarchies[pos]);\n\n\t\t\t\tthis.renderTree();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetCurrentHierarchy(hierarchyType: HierarchyType): void {\n\t\tthis.currentHierarchy = hierarchyType;\n\t}\n\n\tisPrimaryHierarchy(hierarchy: HierarchyType): boolean {\n\t\t// return hierarchy.isPrimary;\n\t\treturn hierarchy.code === this.currentHierarchy.code;\n\t}\n\n\tpublic removeHierarchyType(code: string): void {\n\t\tthis.hierarchyService.deleteHierarchyType(code).then(response => {\n\n\t\t\tlet pos = this.getHierarchyTypePosition(code);\n\t\t\tthis.hierarchies.splice(pos, 1);\n\t\t\tthis.updateViewDatastructures();\n\n\t\t\tif (this.hierarchies.length > 0) {\n\t\t\t\tthis.setCurrentHierarchy(this.hierarchies[0]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.currentHierarchy = null;\n\t\t\t}\n\n\t\t\tthis.renderTree();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic createGeoObjectType(groupSuperType: GeoObjectType, isAbstract: boolean, org: Organization): void {\n\t\tthis.bsModalRef = this.modalService.show(CreateGeoObjTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'upload-modal'\n\t\t});\n\t\tthis.bsModalRef.content.init(org, this.geoObjectTypes, groupSuperType, isAbstract);\n\n\t\tthis.bsModalRef.content.onGeoObjTypeCreate.subscribe(data => {\n\n\t\t\tdata.relatedHierarchies = this.calculateRelatedHierarchies(data);\n\n\t\t\tthis.refreshAll(this.currentHierarchy);\n\n\t\t});\n\t}\n\n\tpublic deleteGeoObjectType(obj: GeoObjectType): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.data = obj.code;\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.removeGeoObjectType(data);\n\t\t});\n\t}\n\n\tpublic removeGeoObjectType(code: string, errCallback: (err: HttpErrorResponse) => void = null): void {\n\t\tthis.registryService.deleteGeoObjectType(code).then(response => {\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(code);\n\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t\n\t\t\tthis.refreshAll(this.currentHierarchy);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tif (errCallback != null) {\n\t\t\t\terrCallback(err);\n\t\t\t}\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic manageGeoObjectType(geoObjectType: GeoObjectType, readOnly: boolean): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ManageGeoObjectTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'manage-geoobjecttype-modal'\n\t\t});\n\n\t\tgeoObjectType.attributes.sort((a, b) => {\n\t\t\tif (a.label.localizedValue < b.label.localizedValue) return -1;\n\t\t\telse if (a.label.localizedValue > b.label.localizedValue) return 1;\n\t\t\telse return 0;\n\t\t});\n\t\tthis.bsModalRef.content.geoObjectType = geoObjectType;\n\t\tthis.bsModalRef.content.readOnly = readOnly;\n\n\t\t(<ManageGeoObjectTypeModalComponent>this.bsModalRef.content).onGeoObjectTypeSubmitted.subscribe(data => {\n\n\t\t\tif (data.isAbstract) {\n\t\t\t\tthis.refreshAll(this.currentHierarchy);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst position = this.getGeoObjectTypePosition(data.code);\n\n\t\t\t\tif (position !== -1) {\n\t\t\t\t\tthis.geoObjectTypes[position] = data;\n\t\t\t\t}\n\n\t\t\t\t// Update all of the hierarchies for the new geo object type\n\t\t\t\tthis.updateViewDatastructures();\n\n\t\t\t\tthis.hierarchies.forEach((hierarchyType: HierarchyType) => {\n\t\t\t\t\tthis.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n\t\t\t\t});\n\n\t\t\t\t// Update the current hierarchy view\n\t\t\t\tif (this.currentHierarchy != null) {\n\t\t\t\t\tthis.processHierarchyNodes(this.currentHierarchy.rootGeoObjectTypes[0]);\n\t\t\t\t}\n\n\t\t\t\tthis.renderTree();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getHierarchyTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.hierarchies.length; i++) {\n\t\t\tlet obj = this.hierarchies[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getGeoObjectTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\tlet obj = this.geoObjectTypes[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic refreshPrimaryHierarchy(hierarchyType: HierarchyType) {\n\t\tthis.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet hierarchy = this.hierarchies[i];\n\n\t\t\tif (hierarchy.code === hierarchyType.code) {\n\t\t\t\tthis.hierarchies[i] = hierarchyType;\n\n\t\t\t\tthis.setCurrentHierarchy(hierarchyType);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateViewDatastructures();\n\n\t\tthis.renderTree();\n\t}\n\n\tpublic removeFromHierarchy(parentGotCode, gotCode, errCallback: (err: HttpErrorResponse) => void = null): void {\n\t\tconst that = this;\n\n\t\tthis.hierarchyService.removeFromHierarchy(this.currentHierarchy.code, parentGotCode, gotCode).then(hierarchyType => {\n\n\t\t\tlet got = that.findGeoObjectTypeByCode(gotCode);\n\n\t\t\tlet index = null;\n\t\t\tfor (let i = 0; i < got.relatedHierarchies.length; ++i) {\n\t\t\t\tif (got.relatedHierarchies[i] === hierarchyType.code) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != null) {\n\t\t\t\tgot.relatedHierarchies.splice(index, 1);\n\t\t\t}\n\n\t\t\tthat.refreshPrimaryHierarchy(hierarchyType);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tif (errCallback != null) {\n\t\t\t\terrCallback(err);\n\t\t\t}\n\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic isActive(item: HierarchyType) {\n\t\treturn this.currentHierarchy === item;\n\t};\n\n\tonFilterChange(): void {\n\t\tconst label = this.filter.toLowerCase();\n\n\t\tthis.filteredHierarchiesByOrg = [];\n\t\tthis.filteredTypesByOrg = [];\n\n\t\tthis.hierarchiesByOrg.forEach((item: { org: Organization, hierarchies: HierarchyType[] }) => {\n\n\t\t\tconst filtered = item.hierarchies.filter((hierarchy: HierarchyType) => {\n\t\t\t\tconst index = hierarchy.label.localizedValue.toLowerCase().indexOf(label);\n\n\t\t\t\treturn (index !== -1);\n\t\t\t});\n\n\t\t\tthis.filteredHierarchiesByOrg.push({ org: item.org, hierarchies: filtered });\n\t\t});\n\n\t\tthis.typesByOrg.forEach((item: { org: Organization, types: GeoObjectType[] }) => {\n\n\t\t\tconst filtered = item.types.filter((type: GeoObjectType) => {\n\t\t\t\tconst index = type.label.localizedValue.toLowerCase().indexOf(label);\n\n\t\t\t\treturn (index !== -1);\n\t\t\t});\n\n\t\t\tthis.filteredTypesByOrg.push({ org: item.org, types: filtered });\n\t\t});\n\n\t\tsetTimeout(() => { this.registerDragHandlers(); }, 500);\n\t}\n\n\thandleInheritHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string) {\n\t\tthis.hierarchyService.setInheritedHierarchy(hierarchyTypeCode, inheritedHierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\thandleUninheritHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string) {\n\t\tthis.hierarchyService.removeInheritedHierarchy(hierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div class=\"new-admin-design-main\" style=\"overflow-y:hidden;\">\n\t<cgr-header></cgr-header>\n\n\t<loading-bar></loading-bar>\n\n\t<div id=\"app-container\" class=\"container-fluid\">\n\n\t\t<!--   <h2> <localize key=\"hierarchy.management.title\"></localize> </h2> -->\n\t\t<div class=\"row\">\n\n\t\t\t<nav class=\"col-md-3 hierarchy-sidebar\">\n\n\t\t\t\t<div class=\"row\" style=\"padding: 5px 5px;\">\n\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" #searchInput\n\t\t\t\t\t\t\t[placeholder]=\"'hierarchy.sidebar.searchAll' | localize\" [(ngModel)]=\"filter\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<accordion [isAnimated]=\"true\" [closeOthers]=\"false\">\n\t\t\t\t\t<accordion-group [panelClass]=\"'hierarchy-sidebar-content'\" style=\"border-radius: 0;\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span class=\"\" style=\"color:white;\">\n\t\t\t\t\t\t\t\t<i style=\"color:white;margin-right:10px;\" class=\"fa fa-circle\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.geoObjectTypes\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let typeByOrg of filteredTypesByOrg;\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{typeByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || typeByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createGeoObjectType(null, false, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<i style=\"color:#6BA542;\" class=\"fa fa-plus\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newGeoObjectType\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n                                        \n                                        <button (click)=\"createGeoObjectType(null, true, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n                                            style=\"margin-bottom:20px;margin-left:10px;min-width:45%;\">\n                                            <i style=\"color:#6BA542;\" class=\"fa fa-plus\"></i>\n                                            <localize key=\"hierarchies.add.group.button.label\"></localize>\n                                        </button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li class=\"list-group-item got-li-item\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-superTypeCode]=\"(type.superTypeCode && type.superTypeCode.length > 0) ? type.superTypeCode : null\"\n\t\t\t\t\t\t\t\t\t                  *ngFor=\"let type of typeByOrg.types\" [id]=\"type.code\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-canDrag]=\"type.canDrag\"\n                                    [ngClass]=\"{'got-group-parent' : (type.isAbstract), 'got-group-child' : type.superTypeCode && type.superTypeCode.length > 0}\" >\n\t\t\t\t\t\t\t\t\t\t{{type.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n                                            \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"!excludeGeoObjectTypeDeletes(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteGeoObjectType(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\">\n                                            </i>\n                                                \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\">\n                                            </i>\n                                            \n                                            <i *ngIf=\"(type.isAbstract)\" class=\"fa fa-plus clickable pull-right\"\n                                                (click)=\"createGeoObjectType(type, false, typeByOrg.org)\"\n                                                title=\"add\">\n                                            </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t\t<accordion-group [isOpen]='true' class=\"sidebar-section\" style=\"border-radius: 0;\" [panelClass]=\"'hierarchy-sidebar-content'\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i style=\"color:white;\" class=\"fa fa-sitemap\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.hierarchies\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let hierarchyByOrg of filteredHierarchiesByOrg\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{hierarchyByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || hierarchyByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createHierarchy()\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<i style=\"color:#369c00;\" class=\"fa fa-plus\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newHierarchy\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li *ngFor=\"let hierarchy of hierarchyByOrg.hierarchies;\" [id]=\"hierarchy.code\"\n\t\t\t\t\t\t\t\t\t\tclass=\"list-group-item hier-li-item clickable\"\n\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'primary': (currentHierarchy != null && hierarchy.code === currentHierarchy.code), 'active': isActive(hierarchy)}\"\n\t\t\t\t\t\t\t\t\t\t(click)=\"hierarchyOnClick($event,hierarchy)\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i> {{hierarchy.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i *ngIf=\"!excludeHierarchyTypeDeletes(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteHierarchyType(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t</accordion>\n\t\t\t</nav>\n\n\t\t\t<div class=\"col-md-9 hierarchy-content\">\n\t\t\t\t<div id=\"overflow-div\">\n\n\t\t\t\t\t<div *ngIf=\"currentHierarchy != null && isOrganizationRA(currentHierarchy.organizationCode, true) && (currentHierarchy.rootGeoObjectTypes == null || currentHierarchy.rootGeoObjectTypes.length == 0)\"\n\t\t\t\t\t\tid=\"emptyHierarchyDropzone\" class=\"drop-box-container\">\n\t\t\t\t\t\t<div class=\"hierarchy-drop-box\">\n\t\t\t\t\t\t\t<div class=\"inner-drop-box\">\n\t\t\t\t\t\t\t\t<p class=\"upload-text\">\n\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.content.dragGotToHierarchy\"></localize>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"svgHolder\">\n\t\t\t\t\t\t<!-- <svg id=\"graph\" style=\"width:1200px; height:750px\"></svg> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"NodeTooltip\" class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-form\">\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                      <label>\n                        <localize key=\"hierarchy.nodeTooltip.hierarchy\"></localize>\n                      </label>\n                    </div>\n                    <div class=\"holder\">\n                      <label id=\"hierarchyLabel\"></label>\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\t\t\t\t\t<!-- \n\t      <div class=\"col-md-4\">\n\t        <h3> \n\t            <localize key=\"hierarchy.current.management.panel.title\"></localize> \n\t            <span *ngIf=\"currentHierarchy\"> {{currentHierarchy.label.localizedValue}}</span>\n\t        </h3>\n\t        <hr>\n\t        <div *ngIf=\"nodes.length > 0\" class=\"tree\">\n\t          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n\t        </div>\n\t        <div *ngIf=\"currentHierarchy && nodes.length === 0\">\n\t          <div>\n\t            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"isRA()\" (click)=\"addChildAndRootToHierarchy()\"><localize key=\"hierarchy.current.management.panel.button.add\"></localize></button>\n\t          </div>\n\t        </div>\n\t      </div>\n\t      -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { ManageGeoObjectTypeModalState } from '@registry/model/registry';\r\n\r\n@Injectable()\r\nexport class GeoObjectTypeManagementService {\r\n\r\n\tmodalState: ManageGeoObjectTypeModalState;\r\n\tprivate modalStateChangedSource = new Subject<ManageGeoObjectTypeModalState>();\r\n\tmodalStepChange = this.modalStateChangedSource.asObservable();\r\n\r\n\tconstructor() { }\r\n\r\n\tpublic getModalState(): ManageGeoObjectTypeModalState {\r\n\t\treturn this.modalState;\r\n\t}\r\n\r\n\tpublic setModalState(state: ManageGeoObjectTypeModalState): void {\r\n\t\tthis.modalState = state;\r\n\r\n\t\tthis.modalStateChangedSource.next(this.modalState);\r\n\t}\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { TreeEntity } from '@registry/model/registry';\nimport { EventService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HierarchyService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetHierarchyTypes(types: any): Promise<HierarchyType[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('types', JSON.stringify(types));\n\n\t\treturn this.http\n\t\t\t.get<HierarchyType[]>(acp + '/cgr/hierarchytype/get-all', { params: params })\n\t\t\t.toPromise();\n\t}\n\n\taddChildToHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/add', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tinsertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/insertBetweenTypes', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, middleGeoObjectTypeCode: middleGeoObjectTypeCode, youngestGeoObjectTypeCode: youngestGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveFromHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/remove', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcreateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/create', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tupdateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/update', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tdeleteHierarchyType(code: string): Promise<TreeEntity> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<TreeEntity>(acp + '/cgr/hierarchytype/delete', { 'code': code }, { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise()\n\t}\n\n\tsetInheritedHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/setInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'inheritedHierarchyTypeCode': inheritedHierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveInheritedHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/removeInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","import { Component, OnInit, AfterViewInit, ElementRef, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { NgControl, Validators, FormBuilder } from '@angular/forms';\n\nimport { GeoObjectType, Attribute } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component({\n\tselector: 'attribute-input',\n\ttemplateUrl: './attribute-input.component.html',\n\tstyleUrls: ['./attribute-input.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms'))\n\t\t\t//   transition('show => none', animate('100ms'))\n\t\t])\n\t]\n})\nexport class AttributeInputComponent implements OnInit {\n\n\t@Input() disableCodeField: boolean = false;\n\t@Input() excludeDescription: boolean = false;\n\t@Input() isDecimal: boolean = false;\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() attributeChange = new EventEmitter<Attribute>();\n\tmessage: string = null;\n\n\tstate: string = 'none';\n\n\tconstructor(private hierarchyService: HierarchyService, private cdr: ChangeDetectorRef) {\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnChanges() {\n\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\ttoggleIsUnique(): void {\n\t\tthis.attribute.unique = !this.attribute.unique;\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.attribute.code) {\n\n\t\t\t// if code has a space\n\t\t\tif (this.attribute.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.attribute.label.localeValues[0].value.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal) {\n\t\t\t\tconsole.log(this.attribute);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isDecimal && (this.attribute.precision == null || this.attribute.precision.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal && (this.attribute.scale == null || this.attribute.scale.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","<div >\n  <div class=\"row-holder\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.code\"></localize>\n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input autofocus type=\"text\" [disabled]=\"disableCodeField\" [(ngModel)]=\"attribute.code\" name=\"code\" required geoObjectAttributeCode>\n      </span>\n    </div>\n  </div>\n\n  <localized-input [(value)]=\"attribute.label\" key=\"data.property.label.label\"></localized-input>\n  <localized-text *ngIf=\"!excludeDescription\" [(value)]=\"attribute.description\" key=\"data.property.label.description\"></localized-text>\n\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.length\"></localize>        \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.precision\" name=\"precision\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.decimal\"></localize>      \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.scale\" name=\"scale\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'publish-modal',\n\ttemplateUrl: './publish-modal.component.html',\n\tstyleUrls: []\n})\nexport class PublishModalComponent implements OnInit {\n\tmessage: string = null;\n\tmaster: any;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonMasterListChange: Subject<MasterList>;\n\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n    /*\n     * List of geo object types from the system\n     */\n\treadonly: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\tedit: boolean = false;\n\n\tisNew: boolean = false;\n\n\tconstructor(private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef, private authService: AuthService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.onMasterListChange = new Subject();\n\n\t\tif (this.master == null || !this.readonly) {\n\t\t\tthis.iService.listGeoObjectTypes(true).then(types => {\n\n\t\t\t\tvar myOrgTypes = [];\n\t\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\t\tconst orgCode = types[i].orgCode;\n\t\t\t\t\tconst typeCode = types[i].superTypeCode != null ? types[i].superTypeCode : types[i].code;\n\n\t\t\t\t\tif (this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.types = myOrgTypes;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.master = {\n\t\t\t\toid: null,\n\t\t\t\ttypeCode: '',\n\t\t\t\tdisplayLabel: this.lService.create(),\n\t\t\t\tcode: '',\n\t\t\t\trepresentativityDate: null,\n\t\t\t\tpublishingStartDate: null,\n\t\t\t\tpublishDate: null,\n\t\t\t\tlistAbstract: '',\n\t\t\t\tprocess: '',\n\t\t\t\tprogress: '',\n\t\t\t\taccessConstraints: '',\n\t\t\t\tuseConstraints: '',\n\t\t\t\tacknowledgements: '',\n\t\t\t\tdisclaimer: '',\n\t\t\t\tcontactName: '',\n\t\t\t\torganization: '',\n\t\t\t\ttelephoneNumber: '',\n\t\t\t\temail: '',\n\t\t\t\thierarchies: [],\n\t\t\t\tsubtypeHierarchies: [],\n\t\t\t\tleaf: false,\n\t\t\t\tfrequency: 'ANNUAL',\n\t\t\t\tisMaster: null,\n\t\t\t\tvisibility: null\n\t\t\t};\n\t\t}\n\t}\n\n\tinit(org: MasterListByOrg): void {\n\t\tthis.master.organization = org.oid;\n\t}\n\n\tgetIsDisabled(event): boolean {\n\t\tlet elClasses = event.target.classList;\n\t\tfor (let i = 0; i < elClasses.length; i++) {\n\t\t\tlet c = elClasses[i];\n\t\t\tif (c === 'disabled') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tonChange(): void {\n\n\t\tif (this.master.typeCode != null && this.master.typeCode.length > 0) {\n\t\t\tthis.iService.getHierarchiesForType(this.master.typeCode, true).then(hierarchies => {\n\t\t\t\tthis.master.hierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.iService.getHierarchiesForSubtypes(this.master.typeCode, false).then(hierarchies => {\n\t\t\t\tthis.master.subtypeHierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.master.hierarchies = [];\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.createMasterList(this.master).then(response => {\n\n\t\t\tthis.onMasterListChange.next(response);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCancel(): void {\n\t\tthis.bsModalRef.hide()\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n        <h1 *ngIf=\"isNew\">\n            <localize key=\"type.publish.title\"></localize>\n        </h1>\n        <h1 *ngIf=\"!isNew\">\n            {{master.displayLabel.localizedValue}}\n            <localize key=\"type.publish.view.title\"></localize>\n        </h1>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            <div class=\"row-holder\" *ngFor=\"let localeValue of master.displayLabel.localeValues\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.label\"></localize> \n                    <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && !(readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <select id=\"typeCode\" name=\"typeCode\" class=\"select-area\" [(ngModel)]=\"master.typeCode\" (change)=\"onChange($event)\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && (readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                  <input [(ngModel)]=\"master.typeLabel.localizedValue\" name=\"typeCode\" type=\"text\" class=\"form-control\" disabled />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.code\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.code\" name=\"code\" type=\"text\" class=\"form-control\" [disabled]=\"readonly || edit\" required />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.frequency\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"frequency\" [(ngModel)]=\"master.frequency\" [disabled]=\"readonly\" required #frequency=\"ngModel\">\n                        <option></option>\n                        <option value=\"ANNUAL\"><localize key=\"georegistry.frequency.annual\"></localize></option>\n                        <option value=\"BIANNUAL\"><localize key=\"georegistry.frequency.biannual\"></localize></option>\n                        <option value=\"QUARTER\"><localize key=\"georegistry.frequency.quarter\"></localize></option>\n                        <option value=\"MONTHLY\"><localize key=\"georegistry.frequency.monthly\"></localize></option>\n                    </select>                    \n                    <small *ngIf=\"(edit && frequency.dirty)\" class=\"form-text text-danger\"><localize key=\"masterlist.change.frequency\"></localize></small>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.publishingStartDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishingStartDate\" name=\"publishingStartDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"masterlist.visibility\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"visibility\" [(ngModel)]=\"master.visibility\" [disabled]=\"readonly\" required>\n                        <option></option>\n                        <option value=\"PUBLIC\"><localize key=\"masterlist.public\"></localize></option>                        \n                        <option value=\"PRIVATE\"><localize key=\"masterlist.private\"></localize></option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.ismaster\"></localize> </label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"row\">\n                        <div class=\"check-block\" style=\"margin: 10px;\">\n\n                            <div (click)=\"getIsDisabled($event) ? null : master.isMaster = !master.isMaster\" name=\"isMaster\" [ngClass]=\"{'chk-checked' : master.isMaster, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\">\n                                <span></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- RepresentativityDate adn publishDate are being removed from the form but not \n            the backend at this point because there's some discussion around the need for these\n            in the future.  - Justin Lewis Feb 27, 2020 -->\n            <!-- <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.representativityDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.representativityDate\" name=\"representativityDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.publishDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishDate\" name=\"publishDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div> -->\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.listAbstract\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.listAbstract\" name=\"listAbstract\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.process\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.process\" name=\"process\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.progress\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.progress\" name=\"progress\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.accessConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.useConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.acknowledgements\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.acknowledgements\" name=\"acknowledgements\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.disclaimer\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.disclaimer\" name=\"disclaimer\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.contact\"></localize>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.contactName\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.contactName\" name=\"contactName\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.telephoneNumber\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.telephoneNumber\" name=\"telephoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.email\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n\n            <div class=\"row-holder\" *ngIf=\"master.hierarchies.length > 0\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.parents\"></localize>\n                </div>\n            </div>\n\n            <div *ngFor=\"let hierarchy of master.hierarchies\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> {{hierarchy.label}} </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let parent of hierarchy.parents\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : parent.selected = !parent.selected\" [ngClass]=\"{'chk-checked' : parent.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{parent.label}}</label>\n\n                                <!-- <input [(ngModel)]=\"parent.selected\" [name]=\"hierarchy.code + parent.code\" type=\"checkbox\" class=\"form-check\" [disabled]=\"readonly || edit\"/> -->\n                            </div>\n                            <!-- <div class=\"holder\">{{parent.label}}</div> -->\n                            <!-- </div> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"master.subtypeHierarchies.length > 0\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> <localize key=\"masterlist.subtypeHierarchies\"></localize> </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let hierarchy of master.subtypeHierarchies\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : hierarchy.selected = !hierarchy.selected\" [ngClass]=\"{'chk-checked' : hierarchy.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{hierarchy.label}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize [key]=\"readonly ? 'io.back' : 'io.cancel'\"></localize>\n                        </button>\n                        <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                            <localize key=\"io.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n\tstate\n} from '@angular/animations';\n\nimport * as moment from 'moment';\n\nimport { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\n\nimport { ManageVersionsModalComponent } from './manage-versions-modal.component';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, AttributeTerm, AttributeDecimal, Term, PRESENT } from '@registry/model/registry';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'geoobject-shared-attribute-editor',\n\ttemplateUrl: './geoobject-shared-attribute-editor.component.html',\n\tstyleUrls: ['./geoobject-shared-attribute-editor.css'],\n\tproviders: [DatePipe],\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t])\n\t\t\t]),\n\t\t\ttrigger('slide', [\n//\t\t\t\ttransition(':enter', [\n//\t\t\t\t\tstyle({\n//\t\t\t\t\t\tleft: '100%'\n//\t\t\t\t\t}),\n//\t\t\t\t\tanimate('200ms')\n//\t\t\t\t]),\n//\t\t\t\ttransition(':leave', [\n//\t\t\t\t\tstyle({\n//\t\t\t\t\t\tright: '100%'\n//\t\t\t\t\t}),\n//\t\t\t\t\tanimate('200ms')\n//\t\t\t\t])\n\t\t\t\tstate('left', style({ left: 0 })),\n      \t\t\tstate('right', style({ left: '100%' })),\n      \t\t\ttransition('* => *', animate(200))\n\t\t\t])\n\t]]\n})\n\n/**\n * This component is shared between:\n * - crtable (create-update-geo-object action detail)\n * - change-request (for submitting change requests)\n * - master list geoobject editing widget\n * \n * Be wary of changing this component for one usecase and breaking other usecases!\n */\nexport class GeoObjectSharedAttributeEditorComponent implements OnInit, OnChanges {\n\t\n\tslide: string = \"\";\n\n\tprivate bsModalRef: BsModalRef;\n\t\n\t@Input() animate: boolean = false;\n\n    /*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\t@Input() preGeoObject: GeoObjectOverTime = null;\n\n\t/*\n * The state of the GeoObject being modified\n */\n\t@Input() postGeoObject: GeoObjectOverTime = null;\n\n\n\tcalculatedPreObject: any = {};\n\n\tcalculatedPostObject: any = {};\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\t@Input() attributeExcludes: string[] = [];\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() isNew: boolean = false;\n\n\t@Input() isEditingGeometries = false;\n\n\t@Input() isGeometryInlined = false;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Output() onManageVersion = new EventEmitter<Attribute>();\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() customEvent: boolean = false;\n\n\tmodifiedTermOption: Term = null;\n\tcurrentTermOption: Term = null;\n\tisValid: boolean = true;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\"];\n\n\t@ViewChild(\"attributeForm\") attributeForm;\n\n\tconstructor(private modalService: BsModalService, private lService: LocalizationService) {\n\n\t}\n\n\tngOnInit(): void {\n\n\t\tif (this.attributeExcludes != null) {\n\t\t\tthis.geoObjectAttributeExcludes.push.apply(this.geoObjectAttributeExcludes, this.attributeExcludes);\n\n\t\t\tif (!this.isGeometryInlined) {\n\t\t\t\tthis.geoObjectAttributeExcludes.push(\"geometry\");\n\t\t\t}\n\t\t}\n\n\t\tlet geomAttr = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeomAttr = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\t\tif (geomAttr == null) {\n\t\t\tlet geometry: Attribute = new Attribute(\"geometry\", \"geometry\", new LocalizedValue(\"Geometry\", null), new LocalizedValue(\"Geometry\", null), true, false, false, true);\n\t\t\tthis.geoObjectType.attributes.push(geometry);\n\t\t}\n\t\t\n\t\tif(this.animate){\n\t\t\tthis.slide = \"left\"\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.attributeForm.statusChanges.subscribe(result => {\n\t\t\tthis.isValid = (result === \"VALID\" || result === \"DISABLED\");\n\n\t\t\tthis.valid.emit(this.isValid);\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['preGeoObject'] || changes['preGeoObject']) {\n\n\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\n\t\t\tif (this.postGeoObject == null) {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // Object.assign is a shallow copy. We want a deep copy.\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.postGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\t\t\t}\n\n\t\t\tthis.calculate();\n\t\t}\n\t\telse if (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): void {\n\t\tthis.calculatedPreObject = this.calculateCurrent(this.preGeoObject);\n\t\tthis.calculatedPostObject = this.calculateCurrent(this.postGeoObject);\n\n\t\tif (this.geometryEditor != null) {\n\t\t\tthis.geometryEditor.reload();\n\t\t}\n\t}\n\n\tcalculateCurrent(goot: GeoObjectOverTime): any {\n\t\tconst object = {};\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\tobject[attr.code] = null;\n\n\t\t\tif (attr.type === 'local') {\n\t\t\t\tobject[attr.code] =\n\t\t\t\t{\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: this.lService.create()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\tlet values = goot.attributes[attr.code].values;\n\n\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: JSON.parse(JSON.stringify(vot.value))\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value[0]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobject[attr.code] = goot.attributes[attr.code];\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.isChangeOverTime && object[attr.code] == null) {\n\t\t\t\tobject[attr.code] = {\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n\thandleChangeCode(e: any): void {\n\t\tthis.postGeoObject.attributes.code = this.calculatedPostObject['code'];\n\t\t\n\t\tthis.onChange.emit(this.postGeoObject);\n\t\t//        \n\t\t//        console.log(this.calculatedPostObject['code'])\n\t\t//        console.log(e)\n\t}\n\n\tonManageAttributeVersions(attribute: Attribute): void {\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(attribute);\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ManageVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\t// TODO: sending the properties like this is wrong\n\t\t\tthis.bsModalRef.content.geoObjectOverTime = this.postGeoObject;\n\t\t\tthis.bsModalRef.content.geoObjectType = this.geoObjectType;\n\t\t\tthis.bsModalRef.content.isNewGeoObject = this.isNew;\n\t\t\tthis.bsModalRef.content.attribute = attribute;\n\t\t\tthis.bsModalRef.content.onAttributeVersionChange.subscribe(versionObj => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t\tthis.bsModalRef.content.tfInit();\n\t\t}\n\t}\n\n\tonManageGeometryVersions(): void {\n\t\tlet geometry = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeometry = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\n\t\tthis.onManageAttributeVersions(geometry);\n\t}\n\n\tisDifferentText(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value.trim() !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tisDifferentValue(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tonSelectPropertyOption(event: any, option: any): void {\n\t\tthis.currentTermOption = JSON.parse(JSON.stringify(this.modifiedTermOption));\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn attrOpts;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisStatusChanged(post, pre) {\n\n\t\tif (pre != null && post == null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (pre == null || post == null || pre.length == 0 || post.length == 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar preCompare = pre;\n\t\tif (Array.isArray(pre)) {\n\t\t\tpreCompare = pre[0];\n\t\t}\n\n\t\tvar postCompare = post;\n\t\tif (Array.isArray(post)) {\n\t\t\tpostCompare = post[0];\n\t\t}\n\n\t\treturn preCompare !== postCompare;\n\t}\n\n\tgetTypeDefinition(key: string): string {\n\t\t// let attrs = this.geoObjectType.attributes;\n\n\t\t// attrs.attributes.forEach(attr => {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === key) {\n\t\t\t\treturn attr.type;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn this.isValid;\n\t}\n\n\tpublic getGeoObject(): any {\n\t\treturn this.postGeoObject;\n\n\t\t//        // The front-end uses the 'yyyy-mm-dd' date format. Our backend expects dates in epoch format.\n\t\t//        var submitGO = JSON.parse( JSON.stringify( this.postGeoObject ) );\n\t\t//        for ( var i = 0; i < this.geoObjectType.attributes.length; ++i ) {\n\t\t//            var attr = this.geoObjectType.attributes[i];\n\t\t//\n\t\t//            if ( attr.type === \"date\" && this.postGeoObject.properties[attr.code] != null ) {\n\t\t//                var parts = this.postGeoObject.properties[attr.code].split( '-' );\n\t\t//                var date = new Date( parts[0], parts[1] - 1, parts[2] );\n\t\t//\n\t\t//                submitGO.properties[attr.code] = date.getTime();\n\t\t//            }\n\t\t//        }\n\t\t//\n\t\t//        return submitGO;\n\t}\n}\n","<form class=\"modal-form\" name=\"geobject-shared-attribute-editor\" #attributeForm=\"ngForm\">\n  <fieldset>\n    <!-- <div class=\"col-md-12\"> -->\n    <div *ngIf=\"preGeoObject\">\n      <div *ngIf=\"!this.isEditingGeometries\" class=\"row\">\n        <!-- <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"change.request.geoobject.update.form.label\"></localize>\n                        </label>\n                    </div> -->\n        <div class=\"col-md-12\">\n          <span class=\"text\"></span>\n          <ul class=\"list-group\">\n            <li class=\"list-group-item\" style=\"text-align:left;border:none;padding:0;\" *ngFor=\"let attr of geoObjectType.attributes | geoObjectAttributeExcludesFilter:geoObjectAttributeExcludes; let i = index\">\n\n              <div class=\"panel panel-default\">\n                <div class=\"panel-heading\">\n                  <h4 *ngIf=\"attr.code !== 'geometry'\" style=\"margin:0;\">\n\n                    <span *ngIf=\"attr.code === 'code'\"> \n                      <localize key=\"geoobject.code.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code === 'displayLabel'\"> \n                      <localize key=\"geoobject.displayLabel.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code !== 'code' && attr.code !== 'displayLabel'\"> {{attr.label.localizedValue}} </span> \n                    <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\" style=\"color:#BABABA;font-style:italic;\"> \n                      ( <p style=\"font-size:14px;display:inline-block;\">\n                          {{calculatedPostObject[attr.code].startDate}}\n                        </p>\n                      -\n                      <p *ngIf=\"calculatedPostObject[attr.code].endDate !== 'Present'\" style=\"font-size:14px;display:inline-block;\">\n                        {{calculatedPostObject[attr.code].endDate}}\n                      </p>\n                      <p *ngIf=\"calculatedPostObject[attr.code].endDate === 'Present'\" style=\"font-size:14px;display:inline-block;\">\n                        <localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize>\n                      </p>\n                      )\n                    </span>\n                  </h4>\n\n                  <h5 *ngIf=\"attr.code === 'geometry'\">\n                    <localize key=\"shared.attributes.attribute.geometry.label\"></localize>\n                    <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\"> \n                      ({{calculatedPostObject[attr.code].startDate}} - {{calculatedPostObject[attr.code].endDate}}) \n                    </span>\n                  </h5>\n\n                </div>\n\n                <div class=\"panel-body\">\n\n                  <div *ngIf=\"attr.code === 'code'\">\n                    <input *ngIf=\"postGeoObject\" type=\"text\" [(ngModel)]=\"calculatedPostObject[attr.code]\" (change)=\"handleChangeCode($event)\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" [disabled]=\"!isNew\" required>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'character' && attr.code !== 'code'\">\n                    <div class=\"input-group\">\n                      <input *ngIf=\"postGeoObject\" [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"text\" [ngModel]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon\">\n                        <i class=\"fa fa-pencil clickable\" (click)=\"onManageAttributeVersions(attr)\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentText(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'local'\">\n                    <ul class=\"list-group\" *ngIf=\"calculatedPostObject[attr.code].value != null\">\n                      <li class=\"list-group-item\" *ngFor=\"let localeValue of calculatedPostObject[attr.code].value.localeValues; let i = index\">\n                        <div class=\"panel panel-default\">\n                          <div class=\"panel-heading\">\n                            <h5><convert-key-label [key]=\"localeValue.locale\"></convert-key-label></h5>\n                          </div>\n\n                          <div class=\"panel-body\">\n\n                            <div class=\"input-group\">\n                              <input readonly [ngClass]=\"{'input-group-read-only': readOnly}\" style=\"color:#999\" [required]=\"localeValue.locale === 'defaultLocale'\" type=\"text\" [ngModel]=\"localeValue.value\" [name]=\"'mod-' + attr.code + '-' + localeValue.locale\" > \n                              <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                              </span>\n                            </div>\n\n\n                            <p class=\"warning-text\" *ngIf=\"!isNew && calculatedPreObject[attr.code].value != null && localeValue.value != null && localeValue.value.trim() !== calculatedPreObject[attr.code].value.localeValues[i].value\">\n                              <localize key=\"change.request.changed.value.prefix\"></localize>\n                              {{calculatedPreObject[attr.code].value.localeValues[i].value}}\n                            </p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'date'\">\n\n                    <div class=\"input-group\">\n                      <input type=\"date\" [ngClass]=\"{'input-group-read-only': readOnly}\" [ngModel]=\"calculatedPostObject[attr.code].value | date:'yyyy-MM-dd'\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value | date}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'boolean'\">\n                  \n\n                    <div class=\"input-group\" >\n                      <div [ngClass]=\"{'input-group-read-only': readOnly}\" class=\"radio-group\">\n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"calculatedPostObject[attr.code].value\" disabled [value]=\"true\" id=\"mod-{{attr.code}}-true\" name=\"mod-{{attr.code}}-true\"> \n                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                        </label> \n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"!calculatedPostObject[attr.code].value\" disabled [value]=\"false\" id=\"mod-{{attr.code}}-false\" name=\"mod-{{attr.code}}-false\"> \n                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                        </label> \n                      </div>\n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'float'\">\n\n                    <div class=\"input-group\">\n                      <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'integer'\">\n                  \n                    <div class=\"input-group\">\n                      <input [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" disabled id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'term'\">\n\n                    <div class=\"input-group\">\n                      <select [ngClass]=\"{'input-group-read-only': readOnly}\" id=\"mod-{{attr.code}}\" name=\"mod-term-{{attr.code}}\" class=\"select-area\" style=\"float: none;\" disabled [(ngModel)]=\"calculatedPostObject[attr.code].value\">\n                        <option value=\"\"></option>\n                        <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attr.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                      </select> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isStatusChanged(calculatedPostObject[attr.code].value, calculatedPreObject[attr.code].value)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'geometry' && this.isGeometryInlined\">\n                    <geoobject-editor-map \n                      #geometryEditor \n                      [geometryType]=\"this.geoObjectType.geometryType\" \n                      [readOnly]=\"true\"\n                      [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\"\n                      [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\" \n                      [bboxCode]=\"this.preGeoObject.attributes.code\"\n                      [bboxType]=\"this.geoObjectType.code\"\n                      (onClickEdit)=\"this.onManageGeometryVersions()\" \n                      [bboxDate]=\"this.forDate.toISOString().split('T')[0]\"> \n                    </geoobject-editor-map>\n                  </div>\n\n                  <!--                   <div *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"button-holder\" > -->\n                  <!--                     <button type=\"submit\" style=\"\" (click)=\"onManageAttributeVersions(attr)\" class=\"btn btn-primary\" role=\"button\"> -->\n                  <!--                       <localize key=\"changeovertime.manageVersions.button.label\"></localize> -->\n                  <!--                     </button> -->\n                  <!--                   </div> -->\n\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div *ngIf=\"this.isEditingGeometries && !this.isGeometryInlined\">\n        <!-- <div class=\"label-holder\">\n                     <label>\n                      <localize key=\"shared.attributes.attribute.geometry.label\"></localize>\n                     </label>\n                   </div> -->\n          <geoobject-editor-map \n            #geometryEditor\n            [geometryType]=\"this.geoObjectType.geometryType\"\n            [readOnly]=\"true\" \n            [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\"\n            [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"\n            [bboxCode]=\"this.preGeoObject.attributes.code\"\n            [bboxType]=\"this.geoObjectType.code\"\n            (onClickEdit)=\"this.onManageGeometryVersions()\"\n            [bboxDate]=\"this.forDate.toISOString().split('T')[0]\"\n          > </geoobject-editor-map>\n      </div>\n    </div>\n    <!-- </div> -->\n  </fieldset>\n</form>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-input',\n    templateUrl: './localized-input.component.html',\n    styleUrls: [],\n} )\nexport class LocalizedInputComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","<div class=\"row-holder\" *ngFor=\"let localeValue of value.localeValues\">\n  <div class=\"label-holder\">\n    <label>\n      <localize [key]=\"key\"></localize>\n      <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n    </label>\n  </div>\n  <div class=\"holder\">\n    <span class=\"text\">\n      <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"disabled\" [required]=\"localeValue.locale === 'defaultLocale'\">\n    </span>\n  </div>\n</div>\n","\nimport { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'simple-edit-control',\n\ttemplateUrl: './simple-edit-control.component.html',\n})\nexport class SimpleEditControl {\n\telRef: ElementRef\n\n\t@Output() editEmitter = new EventEmitter<void>();\n\n\t@Input() visible: boolean = true;\n\t@Input() save: boolean = false;\n\n\tconstructor(elRef: ElementRef) {\n\t\tthis.elRef = elRef;\n\t}\n\n\tonAdd(map): any {\n\t\t//    this.visible = true;\n\t\treturn this.elRef.nativeElement;\n\t}\n\n\tonRemove(map): void {\n\t\tthis.elRef.nativeElement.remove();\n\t}\n\n\tonClick(): void {\n\t\tthis.editEmitter.emit();\n\t}\n}\n","<div class=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\n  <button *ngIf=\"visible\" class=\"fa\" [ngClass]=\"{'fa-pencil-square-o':!save, 'fa-save':save}\" style=\"color: black; font-size: 18px;\" [title]=\"'changeovertime.manageVersions.button.label' | localize\" (click)=\"this.onClick();\"></button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\n\nimport { ChangeRequest, AbstractAction } from '@registry/model/crtable';\nimport { EventService } from '@shared/service';\nimport { GeoObject } from '@registry/model/registry';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ChangeRequestService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\t  getAllActions( requestId: string ): Promise<AbstractAction[]> {\n        let params: HttpParams = new HttpParams();\n\n        if ( requestId != null ) {\n            params = params.set( 'requestId', requestId );\n\t\t}\n\t\t\n        this.eventService.start();\n\n        return this.http\n            .get<AbstractAction[]>( acp + '/changerequest/getAllActions', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\n//    fetchData( cb: any, requestId: string ): Promise<HttpResponse> {\n//        let params: HttpParams = new HttpParams();\n//\n//        if ( requestId != null ) {\n//            params = params.set( 'requestId', requestId );\n//        }\n//\n//        this.eventService.start();\n//\n//        return this.http\n//            .get( acp + '/changerequest/getAllActions', { params: params } )\n//            .finally(() => {\n//                this.eventService.complete();\n//            } )\n//            .toPromise()\n//            .then( response => {\n//                cb( response.json() );\n//\n//                return response;\n//            } )\n//    }\n\n    applyAction( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyAction', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\tapplyActionStatusProperties( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyActionStatusProperties', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\t\n    lockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/lockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    unlockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/unlockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getAllRequests(filter: string): Promise<ChangeRequest[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\n\t\tparams = params.set('filter', filter );\n\n        return this.http.get<ChangeRequest[]>( acp + '/changerequest/get-all-requests', { params: params } )\n            .toPromise();\n    }\n\n    getRequestDetails( requestId: string ): Promise<ChangeRequest> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'requestId', requestId );\n\n        this.eventService.start();\n\n        return this.http.get<ChangeRequest>( acp + '/changerequest/get-request-details', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tconfirmChangeRequest( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/confirm-change-request', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    execute( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/execute-actions', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    rejectAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/reject-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    approveAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/approve-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    submitChangeRequest( actions: string ): Promise<GeoObject> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'actions', actions )\n\n        this.eventService.start();\n\n        return this.http.post<GeoObject>( acp + '/cgr/submitChangeRequest', {actions: actions}, { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ImportConfiguration, Synonym, Location, Term } from '@registry/model/io';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: string;\r\n\r\n@Injectable()\r\nexport class IOService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\timportSpreadsheet(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcancelImport(configuration: ImportConfiguration): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/cancel-import', JSON.stringify({ configuration: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\timportShapefile(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tlistGeoObjectTypes(includeAbstractTypes: boolean): Promise<{ label: string, code: string, orgCode: string, superTypeCode?: string }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('includeAbstractTypes', includeAbstractTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, orgCode: string }[]>(acp + '/cgr/geoobjecttype/list-types', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetTypeAncestors(code: string, hierarchyCode: string, includeInheritedTypes: boolean): Promise<Location[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\tparams = params.set('includeInheritedTypes', includeInheritedTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Location[]>(acp + '/cgr/geoobjecttype/get-ancestors', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForType(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForSubtypes(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-subtype-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, hierarchy: string): Promise<any> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = parent;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectSynonym(entityId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/geo-synonym/createGeoEntitySynonym', JSON.stringify({ entityId: entityId, label: label }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectSynonym(synonymId: string, vOid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geo-synonym/deleteGeoEntitySynonym', JSON.stringify({ synonymId: synonymId, vOid: vOid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetTermSuggestions(mdAttributeId: string, text: string, limit: string): Promise<{ text: string, data: any }[]> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('mdAttributeId', mdAttributeId);\r\n\t\tparams = params.set('text', text);\r\n\t\tparams = params.set('limit', limit);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ text: string, data: any }[]>(acp + '/uploader/getClassifierSuggestions', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTermSynonym(classifierId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ classifierId: classifierId, label: label });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/uploader/createClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteTermSynonym(synonymId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ synonymId: synonymId });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/uploader/deleteClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTerm(label: string, code: string, parentTermCode: string): Promise<Term> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { parentTermCode: parentTermCode, termJSON: { label: label, code: code } };\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tremoveTerm(parentTermCode: string, termCode: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '@shared/service';\n\nimport { AllLocaleInfo } from '@registry/model/localization-manager';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\n    getNewLocaleInfo(): Promise<AllLocaleInfo> {\n        return this.http\n            .get<AllLocaleInfo>( acp + '/localization/getNewLocaleInformation' )\n            .toPromise();\n    }\n\n    installLocale( language: string, country: string, variant: string ): Promise<void> {\n        let params: HttpParams = new HttpParams();\n\n        if ( language != null ) {\n            params = params.set( 'language', language );\n        }\n\n        if ( country != null ) {\n            params = params.set( 'country', country );\n        }\n\n        if ( variant != null ) {\n            params = params.set( 'variant', variant );\n        }\n\n        return this.http\n            .get<void>( acp + '/localization/installLocale', { params: params } )\n            .toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\nimport * as mapboxgl from 'mapbox-gl';\r\n\r\nimport { LocationInformation } from '@registry/model/location-manager';\r\nimport { EventService } from '@shared/service';\r\nimport { GeoObject } from '@registry/model/registry';\n\r\ndeclare var acp: any;\r\n\r\n@Injectable()\r\nexport class MapService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) {\r\n\t\t(mapboxgl as any).accessToken = 'pk.eyJ1IjoidGVycmFmcmFtZSIsImEiOiJjanZxNWE5bWkwazYwNGFtb3loOGxsbjR1In0.ZNEwT-pBnGookEb-BF_jQQ';\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\t// Initialize the mapbox-gl settings\r\n\t}\r\n\r\n\troots(typeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tif (typeCode != null) {\r\n\t\t\tparams = params.set('typeCode', typeCode);\r\n\t\t}\r\n\r\n\t\tif (hierarchyCode != null) {\r\n\t\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<LocationInformation>(acp + '/registrylocation/roots', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tselect(code: string, typeCode: string, childTypeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tif (childTypeCode != null) {\r\n\t\t\tparams = params.set('childTypeCode', childTypeCode);\r\n\t\t}\r\n\r\n\t\tif (hierarchyCode != null) {\r\n\t\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<LocationInformation>(acp + '/registrylocation/select', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsearch(text: string, date: string): Promise<{ type: string, features: GeoObject[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('text', text);\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ type: string, features: GeoObject[] }>(acp + '/registrylocation/search', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport {\n\tGeoObject, GeoObjectType, Attribute, Term, MasterList, MasterListVersion, ParentTreeNode,\r\n\tChildTreeNode, ValueOverTime, GeoObjectOverTime, HierarchyOverTime, ScheduledJob, PaginationPage, MasterListByOrg\n} from '@registry/model/registry';\r\n\r\nimport { HierarchyType } from '@registry/model/hierarchy';\r\nimport { Progress } from '@shared/model/progress';\r\n\r\nimport { Organization, OAuthServer } from '@shared/model/core';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class RegistryService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tinit(): Promise<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }> {\r\n\t\treturn this.http.get<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }>(acp + '/cgr/init')\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\t// param types: array of GeoObjectType codes. If empty array then all GeoObjectType objects are returned.\r\n\tgetGeoObjectTypes(types: string[], hierarchies: string[]): Promise<GeoObjectType[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\r\n\t\tif (types != null) {\r\n\t\t\tparams = params.set('types', JSON.stringify(types));\r\n\t\t}\r\n\r\n\t\tif (hierarchies != null) {\r\n\t\t\tparams = params.set('hierarchies', JSON.stringify(hierarchies));\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectType[]>(acp + '/cgr/geoobjecttype/get-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetParentGeoObjects(childId: string, childTypeCode: string, parentTypes: any, recursive: boolean, date: string): Promise<ParentTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('childId', childId)\r\n\t\tparams = params.set('childTypeCode', childTypeCode)\r\n\t\tparams = params.set('parentTypes', JSON.stringify(parentTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ParentTreeNode>(acp + '/cgr/geoobject/get-parent-geoobjects', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetChildGeoObjects(parentId: string, parentTypeCode: string, childrenTypes: any, recursive: boolean): Promise<ChildTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('parentId', parentId)\r\n\t\tparams = params.set('parentTypeCode', parentTypeCode)\r\n\t\tparams = params.set('childrenTypes', JSON.stringify(childrenTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ChildTreeNode>(acp + '/cgr/geoobject/getchildren', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tnewGeoObjectInstance(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectType(gtJSON: string): Promise<GeoObjectType> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/create', JSON.stringify({ 'gtJSON': gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateGeoObjectType(gtJSON: GeoObjectType): Promise<GeoObjectType> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/update', JSON.stringify({ \"gtJSON\": gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectType(code: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/delete', JSON.stringify({ code: code }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\taddAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/addattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/updateattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeType(geoObjTypeId: string, attributeName: string): Promise<boolean> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<boolean>(acp + '/cgr/geoobjecttype/deleteattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeName': attributeName }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\taddAttributeTermTypeOption(parentTermCode: string, term: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': term }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeTermTypeOption(parentTermCode: string, termJSON: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/updateterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': termJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeTermTypeOption(parentTermCode: string, termCode: string): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\t\r\n\tgetGeoObject(id: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('id', id)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBounds(code: string, typeCode: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBoundsAtDate(code: string, typeCode: string, date: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\t\tparams = params.set('date', date);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject-time/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectByCode(code: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForGeoObject(code: string, typeCode: string): Promise<HierarchyOverTime[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<HierarchyOverTime[]>(acp + '/cgr/geoobject/get-hierarchies-over-time', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, parentTypeCode: string, hierarchy: string, date: string): Promise<GeoObject> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = hierarchy;\r\n\t\t}\r\n\t\t\r\n\t\tif (parentTypeCode != null) {\r\n\t\t  params.parentTypeCode = parentTypeCode;\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams.date = date;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestionsTypeAhead(text: string, type: string): Promise<GeoObject> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-active', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetCompletedScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-completed', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJob(historyId: string, pageSize: number, pageNumber: number, onlyUnresolved: boolean): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\t\tparams = params.set(\"onlyUnresolved\", onlyUnresolved.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-import-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetExportDetails(historyId: string, pageSize: number, pageNumber: number): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-export-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tresolveScheduledJob(historyId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/import-resolve', JSON.stringify({ historyId: historyId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tsubmitValidationResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/validation-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsubmitErrorResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/error-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterLists(): Promise<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }>(acp + '/master-list/list-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListHistory(oid: string, versionType: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('versionType', versionType);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetAllMasterListVersions(): Promise<MasterList[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList[]>(acp + '/master-list/list-all-versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListVersion(oid: string): Promise<MasterListVersion> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterListVersion>(acp + '/master-list/version', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetLocales(): Promise<string[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<string[]>(acp + '/localization/get-locales', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectOverTime(geoObjectCode: string, geoObjectTypeCode: string): Promise<GeoObjectOverTime> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\t// let params: HttpParams = new HttpParams();\r\n\t\t// params = params.set( 'geoObjectCode', geoObjectCode );\r\n\t\t// params = params.set( 'geoObjectTypeCode', geoObjectTypeCode );\r\n\t\t// params = params.set( 'attributeName', attributeName );\r\n\r\n\t\t// return this.http\r\n\t\t//     .get<ValueOverTime[]>( acp + '/cgr/geoobject/getAttributeVersions', { params: params } )\r\n\t\t//     .toPromise();\r\n\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', geoObjectCode);\r\n\t\tparams = params.set('typeCode', geoObjectTypeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectOverTime>(acp + '/cgr/geoobject-time/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\r\n\t}\r\n\r\n\tnewGeoObjectOverTime(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject-time/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n\r\n\r\n\t// getAttributeVersions( geoObjectCode: string, geoObjectTypeCode: string, attributeName: string ): any[] {\r\n\t//     let test =[\r\n\t//         {\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":{\"localeValues\":[\r\n\t//             {\"locale\":\"defaultLocale\",\"value\":\"Anlong Veaeng\"}]}}\r\n\t//     ]\r\n\r\n\t//     // let test = [{\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":\"test\"}];\r\n\r\n\t//     return test;\r\n\t// }\r\n\r\n\r\n\tsetAttributeVersions(geoObjectCode: string, geoObjectTypeCode: string, attributeName: string, collection: ValueOverTime[]): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\tgeoObjectCode: geoObjectCode,\r\n\t\t\tgeoObjectTypeCode: geoObjectTypeCode,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tcollection: collection\r\n\r\n\t\t} as any;\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Response>(acp + '/cgr/geoobject/setAttributeVersions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterList(list: MasterList): Promise<MasterList> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/master-list/create', JSON.stringify({ list: list }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterListVersion(oid: string, forDate: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/create-version', JSON.stringify({ oid: oid, forDate: forDate }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishMasterListVersions(oid: string): Promise<{ job: string }> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ job: string }>(acp + '/master-list/publish-versions', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteMasterList(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tdeleteMasterListVersion(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove-version', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tpublishMasterList(oid: string): Observable<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http.post<MasterListVersion>(acp + '/master-list/publish', JSON.stringify({ oid: oid }), { headers: headers });\r\n\t}\r\n\r\n\tgetMasterList(oid: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n    /*\r\n     * Not really part of the RegistryService\r\n     */\r\n\tapplyGeoObjectEdit(parentTreeNode: HierarchyOverTime[], geoObject: GeoObjectOverTime, isNew: boolean, masterListId: string, notes: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { geoObject: geoObject, isNew: isNew, masterListId: masterListId };\r\n\r\n\t\tif (parentTreeNode != null) {\r\n\t\t\tparams['parentTreeNode'] = parentTreeNode;\r\n\t\t}\r\n\t\tif (notes != null) {\r\n\t\t\tparams['notes'] = notes;\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geoobject-editor/apply', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdata(oid: string, pageNumber: number, pageSize: number, filter: { attribute: string, value: string }[], sort: { attribute: string, order: string }): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tsort: sort\r\n\t\t} as any;\r\n\r\n\t\tif (pageNumber != null) {\r\n\t\t\tparams.pageNumber = pageNumber;\r\n\t\t}\r\n\r\n\t\tif (pageSize != null) {\r\n\t\t\tparams.pageSize = pageSize;\r\n\t\t}\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/master-list/data', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tvalues(oid: string, value: string, attributeName: string, valueAttribute: string, filter: { attribute: string, value: string }[]): Promise<{ label: string, value: string }[]> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tvalueAttribute: valueAttribute\r\n\t\t} as any;\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\tif (value != null && value.length > 0) {\r\n\t\t\tparams.value = value;\r\n\t\t}\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ label: string, value: string }[]>(acp + '/master-list/values', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishShapefile(oid: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/generate-shapefile', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tprogress(oid: string): Promise<Progress> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Progress>(acp + '/master-list/progress', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListsByOrg(): Promise<{ orgs: MasterListByOrg[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], orgs: MasterListByOrg[] }>(acp + '/master-list/list-org', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetPublishMasterListJobs(oid: string, pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/master-list/get-publish-jobs', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetDatasetBounds(oid: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid)\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/master-list/bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetOrganizations(): Promise<Organization[]> {\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Organization[]>(acp + '/cgr/organizations/get-all')\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { PageResult } from '@shared/model/core'\nimport { SynchronizationConfig, OrgSyncInfo, ExportScheduledJob } from '@registry/model/registry'\nimport { CustomAttributeConfig } from '@registry/model/sync'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SynchronizationConfigService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetPage(pageNumber: number, pageSize: number): Promise<PageResult<SynchronizationConfig>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<SynchronizationConfig>>(acp + '/synchronization-config/get-all', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tget(oid: string): Promise<SynchronizationConfig> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<SynchronizationConfig>(acp + '/synchronization-config/get', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tgetCustomAttrCfg(geoObjectTypeCode: string, externalId: string): Promise<CustomAttributeConfig[]> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalId', externalId);\n    params = params.set('geoObjectTypeCode', geoObjectTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-custom-attr', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\t\n\tgetConfigForES(externalSystemId: string, hierarchyTypeCode: string): Promise<any> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalSystemId', externalSystemId);\n    params = params.set('hierarchyTypeCode', hierarchyTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-config-for-es', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n\tapply(config: SynchronizationConfig): Promise<SynchronizationConfig> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<SynchronizationConfig>(acp + '/synchronization-config/apply', JSON.stringify({ config: config }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tedit(oid: string): Promise<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tlet params = {};\n\n\t\tif (oid != null) {\n\t\t\tparams = { oid: oid };\n\t\t}\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }>(acp + '/synchronization-config/edit', JSON.stringify(params), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremove(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tunlock(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/unlock', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\trun(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/run', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetJobs(oid:string, pageNumber: number, pageSize: number): Promise<PageResult<ExportScheduledJob>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n//\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExportScheduledJob>>(acp + '/synchronization-config/get-jobs', { params: params })\n//\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n//\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PaginationPage } from '@registry/model/registry';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tgetMyTasks(pageNum: number, pageSize: number, whereStatus: string): Promise<PaginationPage> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('orderBy', 'createDate');\r\n\t\tparams = params.set('pageNum', pageNum.toString());\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('whereStatus', whereStatus);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/tasks/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcompleteTask(taskId: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/complete', JSON.stringify({ 'id': taskId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsetTaskStatus(taskId: string, status: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/setTaskStatus', JSON.stringify({ 'id': taskId, 'status': status }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","import * as d3 from 'd3';\n\nexport function calculateTextWidth(text: string, fontSize: number): number {\n\tlet svg = d3.select(\"#svg\");\n\n\tlet textCalcGroup = svg.append(\"g\").classed(\"g-text-calc\", true);\n\n\tlet textEl = textCalcGroup.append(\"text\")\n\t\t.attr(\"x\", -5000)\n\t\t.attr(\"y\", -5000)\n\t\t.attr(\"font-size\", fontSize)\n\t\t.text(text);\n\n\tlet bbox = textEl.node().getBBox();\n\n\td3.select(\".g-text-calc\").remove();\n\n\treturn bbox.width + 2; // +2 is for padding. I caught this truncating just ever so slightly\n}\n\nexport function svgPoint(x: number, y: number) {\n\tlet svg: any = d3.select(\"#svg\").node();\n\tvar pt = svg.createSVGPoint();\n\n\tpt.x = x;\n\tpt.y = y;\n\n\treturn pt.matrixTransform(svg.getScreenCTM().inverse());\n}\n\nexport function isPointWithin(point: { x: number, y: number }, bbox: { x: number, y: number, width: number, height: number }) {\n\treturn point.y > bbox.y && point.y < (bbox.y + bbox.height) && point.x > bbox.x && point.x < (bbox.x + bbox.width);\n}\n\nexport function isBboxPartiallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t|| isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function isBboxTotallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t&& isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function getBboxFromSelection(selection: any) {\n\treturn { x: parseInt(selection.attr(\"x\")), y: parseInt(selection.attr(\"y\")), width: parseInt(selection.attr(\"width\")), height: parseInt(selection.attr(\"height\")) };\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\n@Component( {\n    selector: 'attributes-page',\n    templateUrl: './attributes-page.component.html',\n    styleUrls: []\n} )\nexport class AttributesPageComponent {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor() {\n    }\n\n    onNext(): void {\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.attributes.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.attributes.description\"></localize>\n    </p>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <!--\n    <h3 class=\"mb-3\">\n      <localize key=\"shapefile.modal.heading\"></localize>\n      {{configuration.sheet.name}}\n    </h3>\n    -->\n    <form class=\"modal-form\" #form=\"ngForm\">\n      \n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.hierarchy\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"configuration.hierarchy\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of configuration.hierarchies\" value={{hierarchy.code}}>{{hierarchy.label}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div class=\"form-group\" *ngFor=\"let attribute of configuration.type.attributes\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">{{attribute.label.localizedValue}}</label>\n          </div>\n          <div class=\"holder\">\n            <select [name]=\"attribute.code + (attribute.locale != null ? attribute.locale : '')\" class=\"select-area\"\n              [(ngModel)]=\"attribute.target\" [required]=\"attribute.required\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes[attribute.baseType]\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div *ngIf=\"configuration.hasPostalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.postalCode\"></localize>\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <div class=\"check-block\">\n              <div (click)=\"configuration.postalCode = !configuration.postalCode\"\n                [ngClass]=\"{'chk-checked' : configuration.postalCode}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\"\n                name=\"postalCode\">\n                <span></span>\n              </div>\n            </div>\n            <!-- <input type=\"checkbox\" class=\"form-check-input\" name=\"postalCode\" [(ngModel)]=\"configuration.postalCode\"> -->\n          </div>\n        </div>\n      </div>\n      \n      <div *ngIf=\"configuration.isExternal\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.modal.external\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"externalId\" class=\"select-area\"\n              [(ngModel)]=\"configuration.externalIdAttributeTarget\" [required]=\"true\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n        \n        <div *ngIf=\"configuration.externalSystem.type === 'RevealExternalSystem' && configuration.formatType === 'EXCEL'\" class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.import.revealGeometryAttribute\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"revealGeometryColumn\" class=\"select-area\"\n              [(ngModel)]=\"configuration.revealGeometryColumn\" [required]=\"false\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <!--\n      <div *ngIf=\"!configuration.hasPostalCode || !configuration.postalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.parentLookupType\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"parentLookupType\" class=\"select-area\" [(ngModel)]=\"configuration.parentLookupType\" required>\n              <option></option>\n              <option value=\"ALL\">\n                <localize key=\"io.modal.all\"></localize>\n              </option>\n              <option value=\"CODE\">\n                <localize key=\"io.modal.code\"></localize>\n              </option>\n              <option value=\"EXTERNAL\">\n                <localize key=\"io.modal.external\"></localize>\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      -->\n\n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize *ngIf=\"!configuration.postalCode\" key=\"io.next\"></localize>\n                <localize *ngIf=\"configuration.postalCode\" key=\"io.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter, Directive } from '@angular/core';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-page',\n    templateUrl: './location-page.component.html',\n    styleUrls: []\n} )\nexport class LocationPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor( private service: IOService ) { }\n\n    ngOnInit(): void {\n        this.service.getTypeAncestors( this.configuration.type.code, this.configuration.hierarchy, true ).then( locations => {\n            this.configuration.locations = locations;\n        } );\n    }\n\n    onNext(): void {\n        // Map the universals\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onBack(): void {\n        this.stateChange.emit( 'BACK' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<form class=\"modal-form\">\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.location.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.location.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <form #form=\"ngForm\">\n      \n      <div class=\"form-group\" *ngFor=\"let location of configuration.locations; let i = index;\">\n        <div class=\"row-holder\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\"><label> {{location.label}} </label></div>\n            <div class=\"panel-body\">\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.source\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select class=\"select-area\" [(ngModel)]=\"location.target\" [name]=\"i + '-location'\">\n                  <option value=\"\"></option>\n                  <option *ngFor=\"let attr of configuration.sheet.attributes.text\" [value]=\"attr\">{{attr}}</option>\n                </select>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.matchStrategy\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select [name]=\"i + '-matchStrategy'\" class=\"select-area\" [(ngModel)]=\"location.matchStrategy\" [required]=\"location.target != null && location.target !== ''\">\n\t\t\t            <option></option>\n\t\t\t            <option value=\"ALL\"><localize key=\"io.modal.all\"></localize></option>\n\t\t\t            <option value=\"CODE\"><localize key=\"io.modal.code\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal\" value=\"EXTERNAL\"><localize key=\"io.modal.external\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal && configuration.externalSystem.type === 'DHIS2ExternalSystem'\" value=\"DHIS2_PATH\"><localize key=\"io.modal.dhis2path\"></localize></option>\n\t\t\t          </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"submit\" (click)=\"onBack()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.back\"></localize>\n            </button>\n            <button type=\"btn\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize key=\"io.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n    </form>\n  </div>\n</form>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n\n    selector: 'location-problem-page',\n    templateUrl: './location-problem-page.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n\n            if ( !this.configuration.locationProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    handleError( err: any ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n            const problem = this.configuration.locationProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNOREATLOCATION' ) {\n                const value = ( problem.parent != null ? problem.parent + \"-\" + problem.label : problem.label );\n                const exclusion = { code: '##PARENT##', value: value };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.locationProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.locationProblem.description\"></localize>\n    </p>\n  </div>\n  <div >\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.locationContext\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownLocation\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.locationProblems; let i = index;\">\n        <location-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></location-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\" style=\"margin-top: 20px;\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize *ngIf=\"configuration.termProblems != null\" key=\"io.next\"></localize>\n              <localize *ngIf=\"configuration.termProblems == null\" key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\n\n@Component( {\n\n    selector: 'term-problem-page',\n    templateUrl: './term-problem-page.component.html',\n    styleUrls: []\n} )\nexport class TermProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n\n            if ( !this.configuration.termProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n            const problem = this.configuration.termProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNORE' ) {\n                const exclusion = { code: problem.attributeCode, value: problem.label };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.termProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.termProblem.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.categoryAttribute\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownCategory\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.termProblems; let i = index;\">\n        <term-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></term-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input, Output, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, AttributeTerm, PRESENT } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'manage-versions',\n\ttemplateUrl: './manage-versions.component.html',\n\tstyleUrls: ['./manage-versions.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition('* => void', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t])\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsComponent implements OnInit {\n\tmessage: string = null;\n\n\treadonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() attribute: Attribute\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\teditingGeometry: number = -1;\n\n\thasDuplicateDate: boolean = false;\n\t\n\toriginalAttributeState: Attribute;\n\n\tconstructor(private service: RegistryService, private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\n\ttfInit(): void {\n\t\tif (this.attribute.code === 'geometry' && this.geoObjectOverTime.attributes[this.attribute.code].values.length === 1) {\n\t\t\tthis.editingGeometry = 0;\n\t\t}\n\t}\n\n\tgeometryChange(vAttribute, event): void {\n\t\tvAttribute.value = event;\n\t}\n\n\tonDateChange(event: any, vAttribute: ValueOverTime): any {\n\n\t\t//        console.log( event.currentTarget.value );\n\t\t//\n\t\t//        let dt = new Date( event.currentTarget.value );\n\t\t//let dt = new Date(event);\n\n\t\tlet vAttributes = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\t//        vAttribute.startDate = Utils.formatDateString( dt );\n\n\t\tthis.snapDates(vAttributes);\n\n\t\t//        this.changeDetectorRef.detectChanges();\n\t}\n\n\tsnapDates(votArr: ValueOverTime[]): void {\n\t\tvar dateOffset = (24 * 60 * 60 * 1000) * 1; //1 days\n\n\t\tthis.hasDuplicateDate = false;\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\n\t\tfor (let i = 1; i < votArr.length; i++) {\n\t\t\tlet prev = votArr[i - 1];\n\t\t\tlet current = votArr[i];\n\n\t\t\tif (current.startDate) {\n\t\t\t\tprev.endDate = Utils.formatDateString(new Date(new Date(current.startDate).getTime() - dateOffset));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprev.endDate = PRESENT;\n\t\t\t}\n\n\t\t\tif (prev.startDate === current.startDate) {\n\t\t\t\tthis.hasDuplicateDate = true;\n\t\t\t}\n\t\t}\n\n\t\tif (votArr.length > 0) {\n\t\t\tvotArr[votArr.length - 1].endDate = PRESENT;\n\t\t}\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tif (this.attribute.type === \"local\") {\n\t\t\t//   vot.value = {\"localizedValue\":null,\"localeValues\":[{\"locale\":\"defaultLocale\",\"value\":null},{\"locale\":\"km_KH\",\"value\":null}]};\n\t\t\tvot.value = this.lService.create();\n\t\t}\n\t\telse if (this.attribute.type === 'geometry') {\n\n\t\t\tif (votArr.length > 0) {\n\t\t\t\tif (this.editingGeometry != -1 && this.editingGeometry != null) {\n\t\t\t\t\tvot.value = votArr[this.editingGeometry].value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvot.value = votArr[0].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\t\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\t\t\tvot.value.type = \"Polygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\t\t\tvot.value.type = \"Point\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tvot.value.type = \"MultiPoint\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\t\t\tvot.value.type = \"Line\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\t\t\tvot.value.type = \"MultiLine\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.attribute.type === 'term') {\n\t\t\tvar terms = this.getGeoObjectTypeTermAttributeOptions(this.attribute.code);\n\n\t\t\tif (terms.length > 0) {\n\t\t\t\tvot.value = terms[0].code;\n\t\t\t}\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tif (this.attribute.code === 'geometry') {\n\t\t\tthis.editingGeometry = votArr.length - 1;\n\t\t}\n\n\t\tthis.snapDates(votArr);\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\teditGeometry(index: number) {\n\t\tthis.editingGeometry = index;\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\t// only remove status of the required status type\n\t\t\t\tif (attrOpts.length > 0) {\n\t\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn attrOpts;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes[this.attribute.code];\n\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\t\t\t\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tval.values.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.snapDates(val.values);\n\t}\n\n\tisChangeOverTime(attr: Attribute): boolean {\n\t\tlet isChangeOverTime = false;\n\n\t\tthis.geoObjectType.attributes.forEach(attribute => {\n\t\t\tif (this.attribute.code === attr.code) {\n\t\t\t\tisChangeOverTime = attr.isChangeOverTime\n\t\t\t}\n\t\t})\n\n\t\treturn isChangeOverTime;\n\t}\n\t\n\tonSubmit(): void {\n\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n            <h3>{{attribute.label.localizedValue}}</h3>\n\n            <div>\n              <div>\n                <ul class=\"list-group\">\n                  <!-- <li class=\"list-group-item\" style=\"text-align:left;\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\"> -->\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n\n                    <div *ngIf=\"attribute.type !== 'geometry'\">\n                    \n                      <table class=\"table table-striped\">\n                      \n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type === 'local'\" >\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                          \n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" >\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\" *ngFor=\"let loc of vAttribute.value.localeValues; let idx = index;\">\n                                  <td colspan=\"2\">\n                                    <h5><convert-key-label [key]=\"loc.locale\"></convert-key-label></h5>\n                                    \n                                    <input type=\"text\" class=\"form-control\" [name]=\"'loc-val-' + i + '-' + idx\" [(ngModel)]=\"loc.value\" (ngModelChange)=\"loc.value = $event\" [required]=\"loc.locale === 'defaultLocale'\">\n                                    \n                                    <div class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"loc.locale === 'defaultLocale' && !loc.value\" class=\"error-message\">\n                                        <localize key=\"manage.versions.value.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                    <input type=\"date\" [name]=\"'startDate_' + i\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required>\n                                    \n                                    <div style=\"width:100%;\" class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"!vAttribute.startDate\" class=\"error-message\">\n                                        <localize key=\"manage.versions.start.date.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                    </h5>\n                                    <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                                    <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                  </td>\n                                </tr>\n                              </table>\n                            </td>\n                            \n                            <td (click)=\"remove(vAttribute)\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\">\n                              <i class=\"fa fa-times\" ></i>\n                            </td>\n                          </tr>\n                        </tbody>\n\n\n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type !== 'local'\">\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                          \n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[this.attribute.code].values; let i = index;\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\">\n                                  <td colspan=\"2\">\n                                    <div *ngIf=\"attribute.type === 'term'\">\n                                      <select id=\"mod-{{attribute.code}}\" [name]=\"'mod-term-' + i + '-' + attribute.code\" class=\"select-area\" [(ngModel)]=\"vAttribute.value\">\n                                          <option value=\"\"></option>\n                                          <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attribute.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                                      </select>\n                                    </div>\n                                    <div *ngIf=\"attribute.type === 'character'\">\n                                      <input type=\"text\" class=\"form-control\" [name]=\"'char-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'date'\">\n                                      <input type=\"date\" class=\"form-control\" [name]=\"'date-val-' + i\" [ngModel]=\"vAttribute.value | date:'yyyy-MM-dd'\" (ngModelChange)=\"setDateAttribute(vAttribute, $event)\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'integer' || attribute.type === 'float'\">\n                                      <input type=\"number\" class=\"form-control\" [name]=\"'int-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'boolean'\">\n                                        <label class=\"radio radio-inline\" style=\"padding-left:0;\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === true\" [value]=\"true\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-true\" name=\"mod-{{i}}-true\"> \n                                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                                        </label> \n                                        <label class=\"radio radio-inline\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === false\" [value]=\"false\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-false\" name=\"mod-{{i}}-false\"> \n                                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                                        </label>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                    <input style=\"width: 100%;\" type=\"date\" [name]=\"'startDate-' + i\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required>\n                                  </td>\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                    </h5>\n                                    <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                    <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                                  </td>\n                                </tr>\n                              </table>\n                            </td>\n                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                              <i class=\"fa fa-times\"></i>\n                            </td>\n                          </tr>\n                        </tbody>\n                        \n                      </table>\n                    </div>\n\n                    <div *ngIf=\"attribute.type === 'geometry'\">\n                    \n                      <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                      \n                      <table class=\"table table-striped\">\n                        <thead style=\"font-size: 14px;\">\n                          <th style=\"width: 60%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.value\"></localize></th>\n                          <th style=\"width: 20%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.actions\"></localize></th>\n                        </thead>\n                        <tbody style=\"text-align: center;\">\n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\">\n                            <td style=\"vertical-align: middle;\">\n                              <button *ngIf=\"this.editingGeometry != i\" class=\"btn\" (click)=\"editGeometry(i)\" role=\"button\">\n                                <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                              </button> \n                              <geoobject-editor-map *ngIf=\"this.editingGeometry === i\" #geometryEditor [geometryType]=\"this.geoObjectType.geometryType\" (geometryChange)=\"this.geometryChange(vAttribute, $event);\" [readOnly]=\"!geoObjectType.isGeometryEditable\" [postGeometry]=\"vAttribute.value\" [bboxCode]=\"this.geoObjectOverTime.attributes.code\" [bboxType]=\"this.geoObjectType.code\" [bboxDate]=\"vAttribute.startDate\"></geoobject-editor-map>\n                            </td>\n                            <td style=\"vertical-align: middle;\"><input type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required></td>\n                            <td style=\"vertical-align: middle;\">\n                              <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                              <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                            </td>\n                            <td style=\"vertical-align: middle;\"><i class=\"fa fa-times clickable delete-btn\" (click)=\"remove(vAttribute)\"></i></td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                  </li>\n\n                  <li class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> \n                      <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"io.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!versionsform.valid\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","export default class Utils {\n\t\n\t/**\n\t * \n\t * @param arr \n\t */\n\tstatic removeStatuses( arr: any[] ): any[] {\n\t      var newArray = [];\n\t      \n\t      for ( var i = 0; i < arr.length; ++i ) {\n\t        if (! (arr[i].code === \"CGR:Status-New\"\n\t             || arr[i].code === \"CGR:Status-Pending\"))\n\t        {\n\t          newArray.push(arr[i]);\n\t        }\n\t      }\n\t      \n\t      return newArray;\n\t}\n\t\n\n\t/**\n\t * \n\t * @param dateObj \n\t */\n\tstatic formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + ( month < 10 ? \"0\" : \"\" ) + month + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n    \n}","import { Component, OnInit, ViewChild, SimpleChanges, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { RegistryService, MapService } from '@registry/service';\n\nimport { Map, LngLatBounds, NavigationControl } from 'mapbox-gl';\nimport * as MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport * as StaticMode from '@mapbox/mapbox-gl-draw-static-mode';\nimport * as mapboxgl from 'mapbox-gl';\n\ndeclare var acp: string;\n\n\n@Component({\n\tselector: 'geoobject-editor-map[geometryType]',\n\ttemplateUrl: './geoobject-editor-map.component.html',\n\tstyleUrls: ['./geoobject-editor-map.component.css']\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorMapComponent implements OnInit, OnDestroy {\n\n    /*\n     * Required. The GeometryType of the GeoJSON. Expected to be in uppercase (because that's how it is in the GeoObjectType for some reason)\n     */\n\t@Input() geometryType: string;\n\n    /*\n     * Optional. We will invoke this event with GeoJSON when the user makes an edit to the geometry.\n     */\n\t@Output() geometryChange = new EventEmitter<any>();\n\n    /*\n     * Optional. If specified, we will diff based on this GeoJSON geometry.\n     */\n\t@Input() preGeometry: any;\n\n    /*\n     * Optional. If we are read-only, this will be displayed as a layer. If we are not, it will be editable.\n     */\n\t@Input() postGeometry: any;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObject code.\n     */\n\t@Input() bboxCode: string;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObjectType at the date.\n     */\n\t@Input() bboxType: string;\n\n\t@Input() bboxDate: string;\n\n    /*\n     * Optional. If set to true the edit controls will not be displayed. Defaults to false.\n     */\n\t@Input() readOnly: boolean = false;\n\n    /*\n     * Optional. If specified, we will display an edit button on the map, and when it is clicked we will emit this event.\n     */\n\t@Output() onClickEdit = new EventEmitter<void>();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl;\n\n\t@ViewChild(\"mapDiv\") mapDiv;\n\n\tmap: Map;\n\n\teditingControl: any;\n\n\tconstructor(private registryService: RegistryService, private mapService: MapService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.mapService.init();\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\t//this.registryService.getGeoObjectOverTime( \"22\", \"Province\" )\n\t\t\t//.then( geoObject => {\n\n\t\t\tthis.mapDiv.nativeElement.id = Math.floor(Math.random() * (899999)) + 100000;\n\n\t\t\tthis.map = new Map({\n\t\t\t\tcontainer: this.mapDiv.nativeElement.id,\n\t\t\t\tstyle: 'mapbox://styles/mapbox/satellite-v9',\n\t\t\t\tzoom: 2,\n\t\t\t\tcenter: [110.880453, 10.897852]\n\t\t\t});\n\n\t\t\tthis.map.on('load', () => {\n\t\t\t\tthis.initMap();\n\t\t\t});\n\n\t\t\tthis.map.on('draw.create', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.delete', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.update', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\n\t\t\t//} ).catch(( err: HttpErrorResponse ) => {\n\t\t\t//    this.error( err );\n\t\t\t//} );\n\t\t}, 10);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['preGeometry'] || changes['postGeometry']) {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tpublic reload(): void {\n\t\tif (this.map != null) {\n\t\t\tthis.removeLayers();\n\t\t\tthis.addLayers();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tgetIsValid(): boolean {\n\t\tif (!this.readOnly) {\n\t\t\tlet isValid: boolean = false;\n\n\t\t\tif (this.editingControl != null) {\n\t\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\t\tif (featureCollection.features.length > 0) {\n\t\t\t\t\tisValid = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn isValid;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onValidChange(): void {\n\t\tthis.geometryChange.emit(this.saveDraw());\n\t}\n\n\tinitMap(): void {\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t\tthis.onValidChange();\n\t\t});\n\n\n\t\tthis.addLayers();\n\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.zoomToBbox();\n\t\t}\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl());\n\n\t\tif (!this.readOnly) {\n\t\t\tthis.enableEditing();\n\t\t}\n\t\telse {\n\t\t\tthis.addEditButton();\n\t\t}\n\n\t\tthis.onValidChange();\n\t}\n\n\taddEditButton(): void {\n\t\tthis.simpleEditControl.editEmitter.subscribe(versionObj => {\n\t\t\tthis.onClickEdit.emit();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tenableEditing(): void {\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (this.postGeometry != null) {\n\t\t\tthis.editingControl.add(this.postGeometry);\n\t\t}\n\t}\n\n\tremoveSource(prefix: string): void {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-polygon\");\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-point\");\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MultiLine\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-line\");\n\t\t}\n\n\t\tthis.map.removeSource(sourceName);\n\t}\n\n\tremoveLayers(): void {\n\t\tif (this.map.getSource(\"pre-geoobject\")) {\n\t\t\tthis.removeSource(\"pre\");\n\t\t}\n\t\tif (this.map.getSource(\"post-geoobject\")) {\n\t\t\tthis.removeSource(\"post\");\n\t\t}\n\t}\n\n\taddLayers(): void {\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.preGeometry, \"pre\", \"#EFA22E\")\n\t\t}\n\t\tif (this.readOnly && this.postGeometry != null && this.postGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.postGeometry, \"post\", \"#3368EF\");\n\t\t}\n\t}\n\n\trenderGeometryAsLayer(geometry: any, prefix: string, color: string) {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\n\t\tthis.map.addSource(sourceName, {\n\t\t\ttype: 'geojson',\n\t\t\tdata: {\n\t\t\t\t\"type\": \"FeatureCollection\",\n\t\t\t\t\"features\": []\n\t\t\t}\n\t\t});\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\t// Polygon Layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-polygon\",\n\t\t\t\t\"type\": \"fill\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"fill-color\": color,\n\t\t\t\t\t\"fill-outline-color\": \"black\",\n\t\t\t\t\t\"fill-opacity\": 0.7,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-point\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 3,\n\t\t\t\t\t\"circle-color\": color,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-line\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"type\": \"line\",\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"line-join\": \"round\",\n\t\t\t\t\t\"line-cap\": \"round\"\n\t\t\t\t},\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"line-color\": color,\n\t\t\t\t\t\"line-width\": 2\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t(<any>this.map.getSource(sourceName)).setData(geometry);\n\t}\n\n\tzoomToBbox(): void {\n\t\tif (this.bboxCode != null && this.bboxType != null) {\n\t\t\tif (this.bboxDate == null) {\n\t\t\t\tthis.registryService.getGeoObjectBounds(this.bboxCode, this.bboxType).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.registryService.getGeoObjectBoundsAtDate(this.bboxCode, this.bboxType, this.bboxDate).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsaveDraw(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.postGeometry;\n\t\t}\n\n\t\treturn this.postGeometry;\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\t// TODO\n\t\tconsole.log(\"ERROR\", err);\n\t}\n\n\n}\n","<div #mapDiv class=\"map-view-port text-left\" style=\"height:400px;\"></div>\n\n<simple-edit-control [visible]=\"!readOnly\" #simpleEditControl></simple-edit-control>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-parent-versions-modal',\n\ttemplateUrl: './manage-parent-versions-modal.component.html',\n\tstyleUrls: []\n})\nexport class ManageParentVersionsModalComponent implements OnInit {\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonVersionChange: Subject<HierarchyOverTime>;\n\n\thierarchy: HierarchyOverTime = null;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onVersionChange = new Subject();\n\t}\n\n\tinit(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t}\n\n\n\thandleVersionChange(hierarchy: HierarchyOverTime): void {\n\t\tif (hierarchy != null) {\n\t\t\tthis.onVersionChange.next(hierarchy);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-parent-versions *ngIf=\"hierarchy != null\" [hierarchy]=\"hierarchy\" (onChange)=\"handleVersionChange($event)\"></manage-parent-versions>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { HierarchyOverTime, PRESENT } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'manage-parent-versions',\n\ttemplateUrl: './manage-parent-versions.component.html',\n\tstyleUrls: []\n})\nexport class ManageParentVersionsComponent implements OnInit {\n\n\toriginalHierarchy: HierarchyOverTime;\n\t@Input() hierarchy: HierarchyOverTime = null;\n\n\t@Output() onChange = new EventEmitter<HierarchyOverTime>();\n\n\thasDuplicateDate: boolean = false;\n\n\tloading: any = {};\n\n\tconstructor(private service: RegistryService, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.originalHierarchy = JSON.parse(JSON.stringify(this.hierarchy));\n\n\t\tthis.hierarchy.entries.forEach(entry => {\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\t\tif (entry.parents[current.code] == null) {\n\t\t\t\t\tentry.parents[current.code] = { text: '', geoObject: null };\n\t\t\t\t}\n\n\t\t\t\tentry.loading = {};\n\t\t\t}\n\t\t});\n\t}\n\n\tonAddNewVersion(): void {\n\n\t\tlet parents = {};\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparents[current.code] = {};\n\t\t}\n\n\t\tconst entry = {\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\tparents: parents,\n\t\t\tloading: {}\n\t\t}\n\n\t\tthis.hierarchy.entries.push(entry);\n\t}\n\n\tremove(entry: any): void {\n\n\t\tfor (let i = 0; i < this.hierarchy.entries.length; i++) {\n\t\t\tlet vals = this.hierarchy.entries[i];\n\n\t\t\tif (vals.startDate === entry.startDate) {\n\t\t\t\tthis.hierarchy.entries.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.snapDates();\n\t}\n\n\tgetTypeAheadObservable(date: string, type: any, entry: any, index: number): Observable<any> {\n\n\t\tlet geoObjectTypeCode = type.code;\n\n\t\tlet parentCode = null;\n\t\tlet parentTypeCode = null;\n\t\tlet hierarchyCode = null;\n\n\t\tif (index > 0) {\n\t\t\tlet pType = this.hierarchy.types[index - 1];\n\t\t\tconst parent = entry.parents[pType.code];\n\n\t\t\tif (parent.geoObject != null && parent.geoObject.properties.code != null) {\n\t\t\t\thierarchyCode = this.hierarchy.code;\n\t\t\t\tparentCode = parent.geoObject.properties.code;\n\t\t\t\tparentTypeCode = parent.geoObject.properties.type;\n\t\t\t}\n\t\t}\n\n\t\treturn Observable.create((observer: any) => {\n\t\t  if (parentCode == null)\n\t\t  {\n\t\t    let loopI = index;\n\t\t  \n\t\t    while (parentCode == null && loopI > 0)\n\t\t    {\n\t\t      loopI = loopI - 1;\n\t\t      \n\t\t      let parent = entry.parents[this.hierarchy.types[loopI].code];\n\t\t      \n\t\t      if (parent != null && parent.geoObject != null && parent.geoObject.properties.code != null)\n\t\t      {\n\t\t        hierarchyCode = this.hierarchy.code;\n            parentCode = parent.geoObject.properties.code;\n            parentTypeCode = parent.geoObject.properties.type;\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t\n\t\t\tthis.service.getGeoObjectSuggestions(entry.parents[type.code].text, geoObjectTypeCode, parentCode, parentTypeCode, hierarchyCode, date).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, type: any, entry: any, date: string): void {\n\t\t//        let ptn: ParentTreeNode = parent.ptn;\n\n                entry.parents[type.code].text = e.item.name + \" : \" + e.item.code;\n\n\t\tlet parentTypes = [];\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparentTypes.push(current.code);\n\n\t\t\tif (current.code === type.code) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.service.getParentGeoObjects(e.item.uid, type.code, parentTypes, true, date).then(ancestors => {\n\n\t\t\tentry.parents[type.code].geoObject = ancestors.geoObject;\n\t\t\tentry.parents[type.code].text = ancestors.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestors.geoObject.properties.code;\n\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\t\t\t\tlet ancestor = ancestors;\n\n\t\t\t\twhile (ancestor != null && ancestor.geoObject.properties.type != current.code) {\n\t\t\t\t\tif (ancestor.parents.length > 0) {\n\t\t\t\t\t\tancestor = ancestor.parents[0];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tancestor = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ancestor != null) {\n\t\t\t\t\tentry.parents[current.code].geoObject = ancestor.geoObject;\n\t\t\t\t\tentry.parents[current.code].text = ancestor.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestor.geoObject.properties.code;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}\n\n\tonRemove(type: any, entry: any): void {\n\t\tentry.parents[type.code].text = '';\n\t\tdelete entry.parents[type.code].geoObject;\n\t}\n\n\tonDateChange(): any {\n\t\tthis.snapDates();\n\t}\n\n\tsnapDates() {\n\t\tvar dateOffset = (24 * 60 * 60 * 1000) * 1; //1 days\n\n\t\tthis.hasDuplicateDate = false;\n\n\t\t// Sort the data\n\t\tthis.hierarchy.entries.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\n\n\t\tfor (let i = 1; i < this.hierarchy.entries.length; i++) {\n\t\t\tlet prev = this.hierarchy.entries[i - 1];\n\t\t\tlet current = this.hierarchy.entries[i];\n\n\t\t\tprev.endDate = this.formatDateString(new Date(new Date(current.startDate).getTime() - dateOffset));\n\n\t\t\tif (prev.startDate === current.startDate) {\n\t\t\t\tthis.hasDuplicateDate = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.hierarchy.entries.length > 0) {\n\t\t\tthis.hierarchy.entries[this.hierarchy.entries.length - 1].endDate = PRESENT;\n\t\t}\n\t}\n\n\tformatDateString(dateObj: Date): string {\n\t\tconst day = dateObj.getUTCDate();\n\n\t\treturn dateObj.getUTCFullYear() + \"-\" + (dateObj.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\t\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.hierarchy);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalHierarchy);\n\t}\n}\n","<div>\n    <ng-template #customItemTemplate let-model=\"item\" let-index=\"index\">\n      <h5>{{model.name }} : {{ model.code }}</h5>\n    </ng-template>\n\n    <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\"><localize key=\"changeovertime.manageVersions.duplicateDate\"></localize></div>\n\n    <form #form=\"ngForm\" class=\"modal-form\" style=\"height: calc(100vh - 165px);display: contents;\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"attribute-version-wrapper\">\n                            <ul class=\"list-group\" *ngIf=\"hierarchy != null\">\n                                <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                                    <table class=\"table table-striped\">\n                                    \n                                        <tbody class=\"attribute-element-wrapper\">\n\n                                          <p class=\"message\" *ngIf=\"hierarchy.entries.length === 0\">\n                                            <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                                          </p>\n                  \n                                          <tr *ngFor=\"let entry of hierarchy.entries; let i = index;\">\n                                            <td>\n                                              <table>\n                                                <tr class=\"attribute-value-row\">\n                                                  <td colspan=\"2\">\n                                                     <div style=\"float:left;width:100%;\" *ngFor=\"let type of hierarchy.types; let j = index\"> \n                                                       {{type.label}}\n                                                       <div class=\"input-group\">\n                                                          <input  style=\"width:100%;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n                                                            [name]=\"type.code + '-' + i\"\n                                                            [disabled]=\"entry.startDate == null || entry.startDate === ''\"\n                                                            [(ngModel)]=\"entry.parents[type.code].text\" \n                                                            [typeaheadAsync]=\"true\"\n                                                            [typeahead]=\"getTypeAheadObservable(entry.startDate, type, entry, j)\"\n                                                            (typeaheadOnSelect)=\"typeaheadOnSelect($event, type, entry, entry.startDate)\" \n                                                            (typeaheadLoading)=\"entry.loading[type.code] = $event\"\n                                                            [ngClass]=\"{'inline-loading':entry.loading[type.code]}\"                                                                \n                                                            [typeaheadOptionsLimit]=\"7\"\n                                                            [typeaheadItemTemplate]=\"customItemTemplate\" \n                                                            [typeaheadMinLength]=\"0\"\n                                                            [typeaheadWaitMs]=\"300\">\n                                                          \n                                                            <span class=\"input-group-addon clickable addon-alert\" (click)=\"onRemove(type, entry)\"> \n                                                              <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                                            </span>\n                                                        </div>\n                                                     </div>\n                                                  </td>\n                                                </tr>\n                                                <tr class=\"attribute-date-input-row\">\n                                                  <td>\n                                                    <h5>\n                                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                                    </h5> \n                                                    <input style=\"width: 100%;\" type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"entry.startDate\" (blur)=\"snapDates()\" required />\n                                                  </td>\n                                                  <td>\n                                                    <h5>\n                                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                                    </h5>\n                                                    <input *ngIf=\"entry.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"entry.endDate\" disabled>\n                                                    <p *ngIf=\"entry.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                                  </td>\n                                                </tr>\n                                              </table>\n                                            </td>\n                                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(entry)\">\n                                              <i class=\"fa fa-times\"></i>\n                                            </td>\n                                          </tr>\n                                        </tbody>\n                                    </table>\n                                </li>\n\n                                <li class=\"list-group-item\" style=\"text-align: left;\">\n                                  <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"><localize key=\"changeovertime.manageVersions.newVersion\"></localize></i>\n                                </li>\n                            </ul>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"holder\" style=\"border: none; width: 100%;\">\n                    <div class=\"button-holder pull-right\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\" >\n                            <localize key=\"io.cancel\"></localize>\n                        </button> \n                        <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid || hasDuplicateDate\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n</div>","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from 'angular-tree-component';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\n\tselector: 'tree-geo-selector',\n\ttemplateUrl: './tree-geo-selector.html',\n\tstyleUrls: ['./tree-geo-selector.css']\n})\nexport class TreeGeoSelector {\n\n\t@Input() hierarchy: HierarchyOverTime;\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tnodes: any[] = [];\n\t\n\tactionMapping:IActionMapping = {\n\t  mouse: {\n\t    click: null,\n\t  }\n\t}\n\n\toptions: ITreeOptions = {\n\t\tdisplayField: 'name',\n\t\tisExpandedField: 'expanded',\n\t\tidField: 'code',\n\t\tactionMapping: this.actionMapping\n\t};\n\t\n\n\tconstructor() {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n\t\tconst time = this.forDate.getTime();\n\n\t\tlet nodes = [];\n\t\tlet current = null;\n\n\t\tthis.hierarchy.entries.forEach(pot => {\n\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\tthis.hierarchy.types.forEach(type => {\n\t\t\t\t\tlet node: any = {\n\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\tlabel: type.label,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\texpanded: false\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\tnode.name = pot.parents[type.code].text;\n\t\t\t\t\t\tnode.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (current == null) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcurrent.children.push(node);\n\t\t\t\t\t\tcurrent.expanded = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent = node;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.nodes = nodes;\n\t}\n\n\tonEdit(): void {\n\t\tthis.onManageVersion.emit(this.hierarchy);\n\t}\n}\n","<div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h4 style=\"margin: 0;\">{{hierarchy.label}}</h4>\n    </div>\n    <div class=\"panel-body\">\n\n<!--       <div class=\"input-group\"> -->\n        <div *ngIf=\"nodes.length > 0\" class=\"tree\" >\n          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n        </div>\n<!--         <span *ngIf=\"!readOnly\" class=\"input-group-addon\">  -->\n<!--           <i class=\"fa fa-pencil clickable\" (click)=\"onEdit()\" aria-hidden=\"true\"></i> -->\n<!--         </span> -->\n<!--       </div> -->\n      \n      <button class=\"btn btn-primary\" style=\"width:100%;margin-top:10px;\" *ngIf=\"!readOnly\" (click)=\"onEdit()\"><localize key=\"modal.button.edit\"></localize></button>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\nimport { GeoObjectType, GeoObjectOverTime, HierarchyOverTime, ParentTreeNode, ImportError, ValueOverTime } from '@registry/model/registry';\n\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\n\n@Component({\n\tselector: 'geoobject-editor',\n\ttemplateUrl: './geoobject-editor.component.html',\n\tstyleUrls: ['./geoobject-editor.component.css'],\n\tproviders: [DatePipe]\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tisValid: boolean = false;\n\n\tisGeometryEditable: boolean;\n\n\ttabIndex: number = 0;\n\n\tdataSource: Observable<any>;\n\n\tmasterListId: string;\n\tnotes: string;\n\n\tisNewGeoObject: boolean = false;\n\n\t@Input() onSuccessCallback: Function;\n\n\tsubmitFunction: Function = null;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n    /*\n     * GeoObject Property Editor\n     */\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\tarePropertiesValid: boolean = false;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tgoPropertiesPre: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tgoPropertiesPost: GeoObjectOverTime;\n\n\t//    /*\n\t//     * GeoObject Geometry Editor\n\t//     */\n\t//    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\t//\n\t//    areGeometriesValid: boolean = false;\n\n    /*\n     * GeoObject Cascading Parent Selector\n     */\n\t@ViewChild(\"parentSelector\") parentSelector;\n\n\tareParentsValid: boolean = true;\n\n\thierarchies: HierarchyOverTime[];\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tisEditingGeometries: boolean = false;\n\n    /*\n     * The final artifacts which will be submitted\n     */\n\tprivate goSubmit: GeoObjectOverTime;\n\n\tconstructor(private modalService: BsModalService, public bsModalRef: BsModalRef,\n\t\tprivate registryService: RegistryService, private localizeService: LocalizationService,\n\t\tauthService: AuthService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tfindVotWithStartDate(votArray: ValueOverTime[], startDate: string): any {\n\t\tfor (let i: number = 0; i < votArray.length; ++i) {\n\t\t\tif (votArray[i].startDate === startDate) {\n\t\t\t\treturn votArray[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tsetMasterListId(id: string) {\n\t\tthis.masterListId = id;\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tsetOnSuccessCallback(func: Function) {\n\t\tthis.onSuccessCallback = func;\n\t}\n\n\t// Configures the widget to be used in a \"New\" context, that is to say\n\t// that it will be used to create a new GeoObject.\n\tpublic configureAsNew(typeCode: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tthis.isNewGeoObject = true;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, retJson.geoObject.attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\n\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t});\n\t}\n\n\t// Configures the widget to be used to resolve an ImportError\n\tpublic configureFromImportError(importError: ImportError, historyId: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tlet typeCode = importError.object.geoObject.attributes.type;\n\t\tthis.isNewGeoObject = importError.object.isNew;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tif (importError.object != null && importError.object.parents != null && importError.object.parents.length > 0) {\n\t\t\tthis.hierarchies = importError.object.parents;\n\t\t\tthis.areParentsValid = true;\n\t\t}\n\t\telse {\n\t\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t});\n\t\t\tthis.areParentsValid = false;\n\t\t}\n\n\t\t// TODO : Maybe we should ask the server for the pre object, if it exists.\n\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\n\t\tthis.submitFunction = () => {\n\t\t\tlet config = {\n\t\t\t\thistoryId: historyId,\n\t\t\t\timportErrorId: importError.id,\n\t\t\t\tresolution: 'APPLY_GEO_OBJECT',\n\t\t\t\tparentTreeNode: this.hierarchies,\n\t\t\t\tgeoObject: this.goSubmit,\n\t\t\t\tisNew: importError.object.isNew\n\t\t\t}\n\n\t\t\tthis.registryService.submitErrorResolve(config)\n\t\t\t\t.then(() => {\n\n\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t}\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// Configures the widget to be used in an \"Edit Existing\" context\n\tpublic configureAsExisting(code: string, typeCode: string, dateStr: string, isGeometryEditable: boolean): void {\n\t\tthis.isNewGeoObject = false;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObject(code, typeCode);\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchHierarchies(code, typeCode);\n\t\tthis.fetchLocales();\n\t}\n\n\tprivate fetchGeoObject(code: string, typeCode: string) {\n\t\tthis.registryService.getGeoObjectOverTime(code, typeCode).then(geoObject => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\t\t\t//this.goPropertiesPost = JSON.parse( JSON.stringify( this.goPropertiesPre ) );\n\n\t\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t\t//            this.areGeometriesValid = true;\n\t\t\tthis.arePropertiesValid = true;\n\t\t\tthis.isValid = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchLocales() {\n\t\tthis.registryService.getLocales().then(locales => {\n\t\t\tthis.localizeService.setLocales(locales);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchGeoObjectType(code: string) {\n\t\tthis.registryService.getGeoObjectTypes([code], null)\n\t\t\t.then(geoObjectType => {\n\t\t\t\tthis.geoObjectType = geoObjectType[0];\n\n\t\t\t\tif (this.goPropertiesPre != null) {\n\t\t\t\t\tthis.goPropertiesPre.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\t\t\t\tif (this.goPropertiesPost != null) {\n\t\t\t\t\tthis.goPropertiesPost.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\n\t\t\t\tif (!this.geoObjectType.isGeometryEditable) {\n\t\t\t\t\t//                    this.areGeometriesValid = true;\n\t\t\t\t}\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t//                this.error( err );\n\t\t\t});\n\t}\n\n\tprivate fetchHierarchies(code: string, typeTypeCode: string) {\n\t\tthis.registryService.getHierarchiesForGeoObject(code, typeTypeCode)\n\t\t\t.then((hierarchies: any) => {\n\t\t\t\tthis.hierarchies = hierarchies;\n\n\t\t\t\t//                this.parentTreeNode = CascadingGeoSelector.staticGetParents( this.hierarchies );\n\t\t\t\tthis.areParentsValid = true;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tgetTypeAheadObservable(text, typeCode) {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(text, typeCode).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, ptn: ParentTreeNode): void {\n\t\tthis.registryService.getGeoObjectByCode(e.item.code, ptn.geoObject.properties.type)\n\t\t\t.then(geoObject => {\n\n\t\t\t\tptn.geoObject = geoObject;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tprivate onValidChange() {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.arePropertiesValid = this.attributeEditor.getIsValid();\n\t\t}\n\t\t//        if ( this.geometryEditor != null ) {\n\t\t//            this.areGeometriesValid = this.geometryEditor.getIsValid();\n\t\t//        }\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.areParentsValid = this.parentSelector.getIsValid();\n\t\t}\n\n\t\t//        this.isValid = this.arePropertiesValid && this.areGeometriesValid && this.areParentsValid;\n\t\tthis.isValid = this.arePropertiesValid && this.areParentsValid;\n\t}\n\n\tchangePage(nextPage: number, force: boolean = false): void {\n\t\tif (nextPage === this.tabIndex && !force) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tthis.persistModelChanges();\n\n\t\tthis.tabIndex = nextPage;\n\n\t\tthis.onValidChange();\n\n\t\tif (nextPage === 2) {\n\t\t\tthis.isEditingGeometries = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isEditingGeometries = false;\n\t\t}\n\t}\n\n\tprivate persistModelChanges(): void {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.goPropertiesPost = this.attributeEditor.getGeoObject();\n\t\t}\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.hierarchies = this.parentSelector.getHierarchies();\n\t\t}\n\n\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t//        if ( this.parentTreeNode != null ) {\n\t\t//            this.parentTreeNode.geoObject = this.goSubmit;\n\t\t//        }\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic submit(): void {\n\t\tif (this.isValid) {\n\t\t\tthis.bsModalRef.hide();\n\n\t\t\tthis.persistModelChanges();\n\n\t\t\tif (this.submitFunction == null) {\n\t\t\t\tthis.registryService.applyGeoObjectEdit(this.hierarchies, this.goSubmit, this.isNewGeoObject, this.masterListId, this.notes)\n\t\t\t\t\t.then(() => {\n\n\t\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\t\tthis.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.submitFunction();\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"modal-body\">\n    \n    <form class=\"modal-form\" style=\"overflow: visible;\" #goForm=\"ngForm\">\n        <!-- <div class=\"row-holder\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n            \n                <div *ngIf=\"!areParentsValid\" class=\"alert alert-danger\" role=\"alert\">\n                  <localize key=\"geoobject.editor.modal.parents.must.be.assigned.message\"></localize>                \n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"btn-group geobject-editor-tab-holder\">\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 0}\" (click)=\"this.changePage(0);\">\n                        <localize key=\"geoobject.editor.tabZero\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 1, error: !areParentsValid}\" (click)=\"this.changePage(1);\">\n                        <localize key=\"geoobject.editor.tabOne\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 2, disabled: !isGeometryEditable}\" (click)=\"isGeometryEditable && this.changePage(2);\">\n                        <localize key=\"geoobject.editor.tabTwo\"></localize>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- Attributes tab -->\n        <geoobject-shared-attribute-editor \n            *ngIf=\"(this.tabIndex === 0 || this.tabIndex === 2) && this.geoObjectType && this.goPropertiesPre && this.goPropertiesPost\"\n            #attributeEditor \n            (valid)=\"this.onValidChange()\" \n            [geoObjectType]=\"this.geoObjectType\"\n            [preGeoObject]=\"this.goPropertiesPre\" \n            [postGeoObject]=\"this.goPropertiesPost\" \n            [forDate]=\"this.forDate\" \n            [isNew]=\"this.isNewGeoObject\"\n            [isEditingGeometries]=\"this.isEditingGeometries\">\n        </geoobject-shared-attribute-editor>\n\n\n        <!-- Parents tab -->\n        <div *ngIf=\"this.tabIndex === 1 && this.hierarchies != null\">\n          <cascading-geo-selector #parentSelector \n            [isValid]=\"this.isValid\" (valid)=\"this.onValidChange()\"\n            [forDate]=\"this.forDate\"             \n            [hierarchies]=\"this.hierarchies\">\n          </cascading-geo-selector>\n        </div>\n\n         <!-- Geometry tab -->\n         <!--\n         <div class=\"row-holder\">\n            <div class=\"label-holder\"></div>\n            <div class=\"holder\">\n              <geoobject-editor-map #geometryEditor *ngIf=\"this.tabIndex === 2\" [geometryType]=\"this.geoObjectType.geometryType\" [readOnly]=\"true\" [preGeometry]=\"this.goGeometries.getVotAtDate(this.forDate, 'geometry', this.geoObjectType, this.localizeService).value\" [bboxCode]=\"this.goGeometries.attributes.code\" [bboxType]=\"this.geoObjectType.code\"></geoobject-editor-map>\n            </div>\n        </div>\n        -->\n\n        <div *ngIf=\"!isMaintainer\" class=\"row-holder\" style=\"padding-top: 10px;\">\n            <div class=\"label-holder\"><label><localize key=\"change.request.action.detail.contributorNotes\"></localize></label></div>\n            <div class=\"holder text-left\">\n              <textarea style=\"width: 100%;border-radius: 8px;height: 70px; padding:5px;\" class=\"detail-value\" [(ngModel)]=\"notes\" name=\"notes\" required></textarea>\n              <div class=\"form-input-validation-error-message-wrapper\">\n                <p *ngIf=\"!notes\" class=\"error-message\">Notes are required.</p>\n              </div>\n            </div>\n        </div>\n\n         <div class=\"row-holder\" style=\"margin-bottom: 20px;\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input style=\"width:100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"button-holder text-left\">\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                        <localize key=\"modal.button.cancel\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"goForm.invalid || !this.isValid\">\n                        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\nimport { Step, StepConfig } from '@registry/model/registry';\n\n\n@Component( { \n    selector: 'step-indicator',\n    templateUrl: './step-indicator.component.html',\n    styleUrls: ['./step-indicator.css']\n} )\nexport class StepIndicatorComponent {\n\n    @Input('steps')\n    set steps(value: StepConfig) {\n        this._stepConfig = value;\n    }\n\n    _stepConfig: StepConfig;\n    step: Step;\n\n\n    constructor( private localizeService: LocalizationService ) {\n\n        this._stepConfig = {\"steps\": []};\n    }\n\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n       \n    }\n}\n","<div class=\"step-indicator\">\n    <ul *ngIf=\"_stepConfig && _stepConfig.steps && _stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\"\n            *ngFor=\"let step of _stepConfig.steps\"\n            [ngClass]=\"{'complete':step.status === 'COMPLETE', 'stuck':step.status === 'STUCK', 'working': step.status === 'WORKING'}\">\n            {{step.label}}\n        </li>\n    </ul>\n</div>","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { ContextLayer, ContextLayerGroup, MasterList } from '@registry/model/registry';\nimport { ContextLayerModalComponent } from './context-layer-modal.component';\nimport { RegistryService } from '@registry/service';\n\n@Component({\n\tselector: 'layer-panel',\n\ttemplateUrl: './layer-panel.component.html',\n\tstyleUrls: ['./location-manager.css']\n})\nexport class LayerPanelComponent implements OnInit, OnChanges {\n\n\t@Input() filter: string[] = [];\n\t@Output() layerChange = new EventEmitter<ContextLayer>();\n\n\tbaselayerIconHover = false;\n\n\tlists: MasterList[] = [];\n\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'baselayer.satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n\t];\n\n\tcontextLayerGroups: ContextLayerGroup[] = [];\n\n\tconstructor(private modalService: BsModalService, public service: RegistryService) {\n\t}\n\n\n\tngOnInit(): void {\n\n\t\tthis.service.getAllMasterListVersions().then(lists => {\n\t\t\tthis.lists = lists;\n\n\t\t\tthis.updateContextGroups();\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.filter.currentValue !== changes.filter.previousValue) {\n\t\t\tthis.updateContextGroups();\n\t\t}\n\t}\n\n\tupdateContextGroups(): void {\n\n\t\tthis.lists.forEach(list => {\n\n\t\t\tlet contextGroup = { oid: list.oid, displayLabel: list.displayLabel.localizedValue, contextLayers: [] };\n\t\t\t\n\t\t\tlist.versions.forEach(version => {\n\n\t\t\t\tconst index = this.filter.indexOf(version.oid);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tlet thisContextLayer = { oid: version.oid, displayLabel: version.forDate, active: false, enabled: false };\n\n\t\t\t\t\tcontextGroup.contextLayers.push(thisContextLayer);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (contextGroup.contextLayers.length > 0) {\n\t\t\t\tthis.contextLayerGroups.push(contextGroup);\n\t\t\t}\n\t\t});\n\n\t}\n\n\tgroupHasEnabledContextLayers(group: string): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif (cLayerGroup.oid === group) {\n\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\t\thasEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\thasEnabledContextLayers(): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\thasEnabled = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\ttoggleContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = !layer.active;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\tremoveContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = false;\n\t\tlayer.enabled = false;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\taddContextLayerModal(): void {\n\t\tlet bsModalRef = this.modalService.show(ContextLayerModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'context-layer-modal'\n\t\t});\n\t\tbsModalRef.content.contextLayerGroups = this.contextLayerGroups;\n\n\t\t//\t\tbsModalRef.content.onSubmit.subscribe(() => {\n\t\t//\n\t\t//\t\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t//\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t//\n\t\t//\t\t\t\t\tconsole.log(\"Emitting event\", cLayer);\n\t\t//\t\t\t\t\tthis.layerChange.emit(cLayer);\n\t\t//\t\t\t\t});\n\t\t//\t\t\t})\n\t\t//\n\t\t//\t\t});\n\t}\n\n\n\n}\n","\n<div class=\"layer-toggle\" (mouseenter)=\"baselayerIconHover = true\" (mouseleave)=\"baselayerIconHover = false\">\n\n  <i class=\"fa fa-bars\" *ngIf=\"!baselayerIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n  <div *ngIf=\"baselayerIconHover\">\n\n    <div style=\"margin-bottom: 10px;\">\n      <h4>\n        <localize key=\"explorer.base.layers.label\"></localize>\n      </h4>\n      <div class=\"row-form\" *ngFor=\"let baseLayer of baseLayers\">\n        <input class=\"layer-toggle-input\" type='radio' name='rtoggle' [value]='baseLayer.id' [checked]=\"baseLayer.selected\">\n        <label class=\"layer-toggle-label\"><localize [key]=\"baseLayer.label\"></localize></label>\n      </div>\n    </div>\n    <div>\n      <div *ngIf=\"hasEnabledContextLayers()\">\n        <h4>\n          <localize key=\"explorer.context.layers.label\"></localize>\n        </h4>\n        <div class=\"list-group\">\n          <div *ngFor=\"let cLayerGroup of contextLayerGroups;\">\n            <div *ngIf=\"groupHasEnabledContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n              <label>{{ cLayerGroup.displayLabel }}</label>\n              <div class=\"list-group\">\n                <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                  <div class=\"list-group-item\" style=\"border: none;\" *ngIf=\"cLayer.enabled\">\n                    <input type=\"checkbox\" [checked]=\"cLayer.active\" (click)=\"toggleContextLayer(cLayer)\"> {{ cLayer.displayLabel }} <i class=\"fa fa-times delete-btn clickable\" aria-hidden=\"true\" (click)=\"removeContextLayer(cLayer)\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"addContextLayerModal()\">+ <localize key=\"explorer.add.context.layer.button.label\"></localize></button>\n    </div>\n\n  </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, HierarchyOverTime, ValueOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorModalComponent, ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\n@Component({\n\tselector: 'feature-panel',\n\ttemplateUrl: './feature-panel.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class FeaturePanelComponent implements OnInit {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY',\n\t\tGEOMETRY: 'GEOMETRY'\n\t}\n\n\t@Input() datasetId: string;\n\n\t@Input() type: GeoObjectType;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() set code(value: string) {\n\t\tthis.updateCode(value);\n\t}\n\n\t_code: string = null;\n\n\t@Input() geometryChange: Subject<any>;\n\n\t@Output() geometryEdit = new EventEmitter<ValueOverTime>();\n\t@Output() featureChange = new EventEmitter<GeoObjectOverTime>();\n\t@Output() modeChange = new EventEmitter<boolean>();\n\t\n\tisValid: boolean = true;\n\n\tbsModalRef: BsModalRef;\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tpreGeoObject: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tpostGeoObject: GeoObjectOverTime;\n\n\tattribute: Attribute = null;\n\n\tisNew: boolean = false;\n\n\tisEdit: boolean = false;\n\n\thierarchies: HierarchyOverTime[];\n\n\thierarchy: HierarchyOverTime = null;\n\t\n\treason: string = \"\";\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, authService: AuthService) {\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.mode = 'ATTRIBUTES';\n\t\tthis.geometryChange.subscribe(v => {\n\t\t\tthis.updateGeometry(v);\n\t\t});\n\t}\n\t\n\tsetValid(valid: boolean): void {\n\t\tthis.isValid = valid;\n\t}\n\n\tupdateCode(code: string): void {\n\t\tthis._code = code;\n\t\tthis.postGeoObject = null;\n\t\tthis.preGeoObject = null;\n\t\tthis.hierarchies = null;\n\t\tthis.setEditMode(false);\n\n\t\tif (code != null && this.type != null) {\n\n\t\t\tif (code !== '__NEW__') {\n\t\t\t\tthis.isNew = false;\n\n\t\t\t\tthis.service.getGeoObjectOverTime(code, this.type.code).then(geoObject => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t\tthis.service.getHierarchiesForGeoObject(code, this.type.code).then((hierarchies: HierarchyOverTime[]) => {\n\t\t\t\t\tthis.hierarchies = hierarchies;\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.isNew = true;\n\n\t\t\t\tthis.service.newGeoObjectOverTime(this.type.code).then(retJson => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, retJson.geoObject.attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\n\t\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t\t\tthis.setEditMode(true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\t\n\n\tonEditGeometryVersion(vot: ValueOverTime): void {\n\t\tthis.geometryEdit.emit(vot);\n\t}\n\n\tupdateGeometry(geometry: any): void {\n\t\t// Check if the geometry has been updated\n\t\tif (geometry != null && this.postGeoObject != null) {\n\n\t\t\tlet values = this.postGeoObject.attributes['geometry'].values;\n\t\t\tconst time = this.forDate.getTime();\n\n\t\t\tvalues.forEach(vot => {\n\n\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tvot.value = geometry;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tcalculateGeometry(goot: GeoObjectOverTime): any {\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tlet values = goot.attributes['geometry'].values;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst vot = values[i];\n\n\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\treturn vot.value;\n\t\t\t}\n\t\t};\n\n\t\treturn null;\n\t}\n\n\tonCancel(): void {\n\n\t\tif (this._code === '__NEW__') {\n\t\t\tthis.updateCode(null);\n\t\t}\n\t\telse {\n\t\t\tthis.updateCode(this._code);\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.applyGeoObjectEdit(this.hierarchies, this.postGeoObject, this.isNew, this.datasetId, this.reason).then(() => {\n\t\t\tthis.featureChange.emit(this.postGeoObject);\n\n\t\t\tthis.updateCode(this._code);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonManageAttributeVersion(attribute: Attribute): void {\n\t\tthis.attribute = attribute;\n\t\tthis.mode = this.MODE.VERSIONS;\n\t}\n\n\tonManageHiearchyVersion(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t\tthis.mode = this.MODE.HIERARCHY;\n\t}\n\n\tonAttributeChange(postGeoObject: GeoObjectOverTime): void {\n\t\tthis.postGeoObject = postGeoObject;\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\n\t\tthis.geometryEdit.emit(null);\n\t}\n\n\tonHierarchyChange(hierarchy: HierarchyOverTime): void {\n\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\tif (index !== -1) {\n\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t}\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\t}\n\n\tonEditAttributes(): void {\n\t\tthis.setEditMode(!this.isEdit);\n\t}\n\n\tsetEditMode(value: boolean): void {\n\t\tthis.isEdit = value;\n\t\tthis.reason = null;\n\n\t\tthis.modeChange.emit(this.isEdit)\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <div *ngIf=\"mode == MODE.ATTRIBUTES && postGeoObject != null\">\n    <!-- Attributes tab -->\n    <geoobject-shared-attribute-editor \n      #attributeEditor \n      [geoObjectType]=\"type\" \n      [preGeoObject]=\"preGeoObject\" \n      [postGeoObject]=\"postGeoObject\" \n      [forDate]=\"this.forDate\" \n      [isNew]=\"isNew\" \n      [isEditingGeometries]=\"false\" \n      [customEvent]=\"true\"\n      (onManageVersion)=\"onManageAttributeVersion($event)\" \n      (onChange)=\"onAttributeChange($event)\" \n      [readOnly]=\"!isEdit\"\n      [animate]=true\n      (valid)=\"setValid($event)\"\n      > \n    </geoobject-shared-attribute-editor>\n    \n    <div *ngIf=\"isEdit && type.isGeometryEditable\" class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <h4 style=\"margin:0;\">\n          <localize key=\"explorer.geometry.section\"></localize>\n        </h4>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"button-holder text-left\" style=\"margin:0;\">\n          <button type=\"submit\" style=\"width:100%;\" (click)=\"this.mode = this.MODE.GEOMETRY\" class=\"btn btn-primary\" role=\"button\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"hierarchies != null\">\n      <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"this.forDate\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEdit\" (onManageVersion)=\"onManageHiearchyVersion($event)\"> </tree-geo-selector>\n    </div>\n    \n    <div *ngIf=\"isEdit && !isMaintainer\" class=\"form-group\" style=\"z-index: 0;\">\n      <label> \n        <localize key=\"change.request.reason.label\"></localize>\n      </label>\n      <textarea rows=\"4\" cols=\"50\" [(ngModel)]=\"reason\" class=\"form-control\" name=\"reason-input\" required></textarea>\n    </div>\n\n    <div class=\"button-holder text-right\" style=\"margin-bottom: 20px;\">\n      <button *ngIf=\"!readOnly && !isEdit\" type=\"submit\" (click)=\"onEditAttributes()\" class=\"btn btn-primary\" style=\"width:100%;\" role=\"button\">\n        <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n      </button>\n      \n      <button *ngIf=\"isEdit\" type=\"button\" class=\"btn btn-default\" (click)=\"onCancel()\">\n        <localize key=\"modal.button.cancel\"></localize>\n      </button>\n      <button *ngIf=\"isEdit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || (!isMaintainer && (!reason || (reason && reason.trim().length === 0)))\">\n        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n      </button>\n    </div>\n  </div>\n  <div *ngIf=\"mode == MODE.VERSIONS && attribute != null\">\n    <!-- Attributes tab -->\n    <manage-versions \n      [attribute]=\"attribute\"\n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\">\n    </manage-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.HIERARCHY && hierarchy != null\">\n    <!-- Attributes tab -->\n    <manage-parent-versions \n      [hierarchy]=\"hierarchy\"\n      (onChange)=\"onHierarchyChange($event)\">\n    </manage-parent-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.GEOMETRY\">\n    <!-- Attributes tab -->\n    <geometry-panel \n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\"\n      (onEdit)=\"onEditGeometryVersion($event)\">\n    </geometry-panel>\n  </div>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\n@Component({\n\tselector: 'create-hierarchy-type-modal',\n\ttemplateUrl: './create-hierarchy-type-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateHierarchyTypeModalComponent implements OnInit {\n\n\thierarchyType: HierarchyType;\n\torganizations: any = [];\n\tmessage: string = null;\n\n\tedit: boolean = false; // if true, we are updating an existing. If false, we are creating new\n\n\treadOnly: boolean = false;\n\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onHierarchytTypeCreate: Subject<HierarchyType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, private hierarchyService: HierarchyService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onHierarchytTypeCreate = new Subject();\n\n\t\tthis.hierarchyType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"rootGeoObjectTypes\": [],\n\t\t\t\"organizationCode\": \"\"\n\t\t};\n\n\t\tthis.registryService.getOrganizations().then(orgs => {\n\n\t\t\t// Filter out organizations they're not RA's of, unless we're readOnly.\n\t\t\tif (!this.readOnly) {\n\t\t\t\tthis.organizations = [];\n\n\t\t\t\tfor (var i = 0; i < orgs.length; ++i) {\n\t\t\t\t\tif (this.auth.isOrganizationRA(orgs[i].code)) {\n\t\t\t\t\t\tthis.organizations.push(orgs[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.organizations = orgs;\n\t\t\t}\n\n\t\t\tif (!this.edit && this.organizations.length === 1) {\n\t\t\t\tthis.hierarchyType.organizationCode = this.organizations[0].code;\n\t\t\t\tthis.organizationLabel = this.organizations[0].label.localizedValue;\n\t\t\t}\n\t\t\telse if (this.edit || this.readOnly) {\n\t\t\t\tthis.organizationLabel = this.getOrganizationLabelFromCode(this.hierarchyType.organizationCode);\n\t\t\t}\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tgetOrganizationLabelFromCode(orgCode: string) {\n\t\tfor (var i = 0; i < this.organizations.length; ++i) {\n\t\t\tif (this.organizations[i].code === orgCode) {\n\t\t\t\treturn this.organizations[i].label.localizedValue;\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(\"Did not find org with code [\" + orgCode + \"]\");\n\t\treturn orgCode;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tif (this.readOnly) {\n\t\t\tthis.bsModalRef.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.edit) {\n\t\t\tconsole.log(this.hierarchyType);\t\t\t\n\t\t\t\n\t\t\tthis.hierarchyService.updateHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.hierarchyService.createHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<form>\n\n  <div class=\"modal-body\">\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n      <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"heading text-center\">\n          <h1>\n            <localize key=\"hierarchy.management.create.hierarchy.title\"></localize> \n          </h1>\n        </div> \n        \n      <div class=\"form-group\">\n        <label for=\"codeInput\">\n          <localize key=\"data.property.label.code\"></localize>\n        </label>\n        <input [(ngModel)]=\"hierarchyType.code\" name=\"code\" type=\"input\" class=\"form-control\" id=\"codeInput\"\n          [disabled]=\"edit || readOnly\" required>\n      </div>\n      <div class=\"form-group\" *ngFor=\"let localeValue of hierarchyType.label.localeValues\">\n        <label for=\"labelInput\">\n          <localize key=\"data.property.label.label\"></localize> \n          <span  style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n        </label>\n        <input [disabled]=\"readOnly\" [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\"\n          required>\n      </div>\n      \n      <localized-text [(value)]=\"hierarchyType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\" [disabled]=\"readOnly\"></localized-text>\n\n      <div class=\"form-group\">\n        <label for=\"organization\">\n          <localize key=\"attribute.organization.label\"></localize>\n        </label>\n        <select *ngIf=\"!edit && organizations.length > 1\" [disabled]=\"edit || readOnly\" class=\"select-area\" name=\"organization\"\n          [(ngModel)]=\"hierarchyType.organizationCode\" required>\n          <option></option>\n          <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label.localizedValue}}</option>\n        </select>\n        <span *ngIf=\"!edit && organizations.length == 1\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n        <span *ngIf=\"edit\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.progress\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.progress\" name=\"progress\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.acknowledgement\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.acknowledgement\" name=\"acknowledgement\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.disclaimer\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.disclaimer\" name=\"disclaimer\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.accessConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.useConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      \n      <hr/>\n      \n      <div class=\"form-group\">\n        <h4>\n          <localize key=\"masterlist.contact\"></localize>\n        </h4>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.contact\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.contact\" name=\"contact\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.phoneNumber\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.phoneNumber\" name=\"phoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.email\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>      \n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readOnly\" type=\"submit\" [disabled]=\"hierarchyType.code.length < 1 || form.invalid\" class=\"btn btn-primary\"\n              (click)=\"handleOnSubmit()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { Organization } from '@shared/model/core';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\n@Component({\n\tselector: 'create-geoobjtype-modal',\n\ttemplateUrl: './create-geoobjtype-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateGeoObjTypeModalComponent implements OnInit {\n\n\tgeoObjectType: GeoObjectType;\n\torganization: Organization = null;\n\tmessage: string = null;\n\tparents: GeoObjectType[];\n\thierarchyType: HierarchyType;\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onGeoObjTypeCreate: Subject<GeoObjectType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjTypeCreate = new Subject();\n\n\t\tthis.geoObjectType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"geometryType\": \"MULTIPOINT\",\n\t\t\t\"isLeaf\": false,\n\t\t\t\"isGeometryEditable\": true,\n\t\t\t\"organizationCode\": \"\",\n\t\t\t\"attributes\": [],\n\t\t};\n\t}\n\n\tinit(organization: Organization, parents: GeoObjectType[], groupSuperType: GeoObjectType, isAbstract: boolean) {\n\n\t\tthis.geoObjectType.isAbstract = isAbstract ? isAbstract : false;\n\n\t\tif (groupSuperType) {\n\t\t\tthis.geoObjectType.superTypeCode = groupSuperType.code;\n\t\t\tthis.geoObjectType.geometryType = groupSuperType.geometryType;\n\t\t\tthis.geoObjectType.isPrivate = groupSuperType.isPrivate;\n\t\t}\n\n\t\t// Filter out parents that are not abstract\n\t\tthis.parents = parents.filter(parent => parent.isAbstract);\n\n\t\t// Filter out organizations they're not RA's of\n\t\tthis.organization = organization;\n\t\tthis.geoObjectType.organizationCode = this.organization.code;\n\t\tthis.organizationLabel = this.organization.label.localizedValue;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tthis.registryService.createGeoObjectType(JSON.stringify(this.geoObjectType)).then(data => {\n\t\t\tthis.onGeoObjTypeCreate.next(data);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\ttoggleIsLeaf(): void {\n\t\tthis.geoObjectType.isLeaf = !this.geoObjectType.isLeaf;\n\t}\n\n\ttoggleIsGeometryEditable(): void {\n\t\tthis.geoObjectType.isGeometryEditable = !this.geoObjectType.isGeometryEditable;\n\t}\n\n\ttoggleIsAbstract(): void {\n\t\tthis.geoObjectType.isAbstract = !this.geoObjectType.isAbstract;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"form.valid && handleOnSubmit()\" class=\"modal-form\">\n\n  <div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize *ngIf=\"geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.group.title\"></localize> \n        <localize *ngIf=\"!geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.title\"></localize> \n      </h1>\n    </div> \n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <div>\n            <label for=\"codeInput\">\n              <localize key=\"data.property.label.code\"></localize>\n            </label>\n            <input [(ngModel)]=\"geoObjectType.code\" name=\"code\" type=\"text\" class=\"form-control\" id=\"codeInput\"\n              required>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\" *ngFor=\"let localeValue of geoObjectType.label.localeValues\">\n          <label>\n            <localize key=\"data.property.label.label\"></localize> \n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\"\n            class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <localized-text [(value)]=\"geoObjectType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\"></localized-text>\n      </div>\n    </div>\n    \n    <div class=\"row\" *ngIf=\"!geoObjectType.superTypeCode\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <label style=\"display: block;\">\n            <localize key=\"attribute.group.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n        \n          <label style=\"display: block;\">\n            <localize key=\"geoObjectType.attr.visibility.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"geoObjectType.superTypeCode != null\" [(value)]=\"geoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"geometryType\">\n            <localize key=\"data.property.label.geometryType\"></localize>\n          </label>\n          <select class=\"select-area\" name=\"geometryType\" [(ngModel)]=\"geoObjectType.geometryType\" required [disabled]=\"geoObjectType.superTypeCode != null && geoObjectType.superTypeCode != ''\">\n            <option></option>\n            <!-- <option value=\"POINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"LINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"POLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n            <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.multipoint\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.multiline\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.multipolygon\"></localize>\n            </option> -->\n             <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <!-- \n    <div class=\"form-group\">\n      <div >\n        <div class=\"check-block\" style=\"display:inline-block;\">\n         <div (click)=\"toggleIsLeaf()\" [ngClass]=\"{'chk-checked' : geoObjectType.isLeaf}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n          <span></span>\n         </div>\n    \n         <label class=\"checkbox-label\" style=\"line-height: normal;\"> <localize key=\"hierarchy.management.option.label.isLeafNode\"></localize></label>\n        </div>\n       </div>\n    </div>\n -->\n\n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <div class=\"check-block\">\n            <div (click)=\"toggleIsGeometryEditable()\" [ngClass]=\"{'chk-checked' : geoObjectType.isGeometryEditable}\"\n              style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n              <span></span>\n            </div>\n\n            <label class=\"checkbox-label\">\n              <localize key=\"hierarchy.management.option.label.isGeometryEditable\"></localize>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"organization\">\n            <localize key=\"attribute.organization.label\"></localize>\n          </label>\n          <span class=\"text\">\n            <input type=\"text\" name=\"organization\" [(ngModel)]=\"organizationLabel\" disabled required>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-primary\">\n            <localize key=\"modal.button.ok\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyService, GeoObjectTypeManagementService } from '@registry/service';\n\n\n@Component({\n\tselector: 'manage-geoobjecttype-modal',\n\ttemplateUrl: './manage-geoobjecttype-modal.component.html',\n\tstyleUrls: ['./manage-geoobjecttype-modal.css']\n})\nexport class ManageGeoObjectTypeModalComponent implements OnInit {\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": \"\", \"termOption\": \"\" };\n\tmodalStateSubscription: Subscription;\n\tgeoObjectType: GeoObjectType;\n\tpublic onGeoObjectTypeSubmitted: Subject<GeoObjectType>;\n\treadOnly: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, geoObjectTypeManagementService: GeoObjectTypeManagementService) {\n\t\tthis.modalStateSubscription = geoObjectTypeManagementService.modalStepChange.subscribe(modalState => {\n\t\t\tthis.modalState = modalState;\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjectTypeSubmitted = new Subject();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.modalStateSubscription.unsubscribe();\n\t}\n\n\tonModalStateChange(state: any): void {\n\t\tthis.modalState = state;\n\t}\n\n\tonGeoObjectTypeChange(data: any): void {\n\t\t// send persisted geoobjecttype to the parent calling component (hierarchy.component) so the \n\t\t// updated GeoObjectType can be reflected in the template\n\t\tthis.onGeoObjectTypeSubmitted.next(data);\n\t}\n\n\tupdate(): void {\n\n\t}\n\n\tclose(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","\n<form>\n\n  <modal-step-indicator></modal-step-indicator>\n\n  <geoobjecttype-input *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\" [readOnly]=\"readOnly\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\" [geoObjectType]=\"geoObjectType\" [setGeoObjectType]=\"geoObjectType\"></geoobjecttype-input>\n\n  <manage-attributes-modal *ngIf=\"modalState.state === 'MANAGE-ATTRIBUTES'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></manage-attributes-modal>\n\n  <define-attribute-modal-content *ngIf=\"modalState.state === 'DEFINE-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></define-attribute-modal-content>\n\n  <edit-attribute-modal-content *ngIf=\"modalState.state === 'EDIT-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></edit-attribute-modal-content>\n\n  <manage-term-options *ngIf=\"modalState.state === 'MANAGE-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\"></manage-term-options>\n\n  <edit-term-option-input *ngIf=\"modalState.state === 'EDIT-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" [termOption]=\"modalState.termOption\"></edit-term-option-input>\n\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { StepConfig } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component( {\n    selector: 'geoobjecttype-input',\n    templateUrl: './geoobjecttype-input.component.html',\n    styleUrls: ['./geoobjecttype-input.css']\n} )\nexport class GeoObjectTypeInputComponent implements OnInit {\n\n    @Input() readOnly: boolean = false;\n    @Input() geoObjectType: GeoObjectType;\n    @Output() geoObjectTypeChange:  EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n    editGeoObjectType: GeoObjectType;\n    \n    organizationLabel: string;\n    \n    @Input('setGeoObjectType') \n    set in(geoObjectType: GeoObjectType){\n        if(geoObjectType){\n          this.editGeoObjectType = JSON.parse(JSON.stringify(geoObjectType));\n        //   this.geoObjectType = geoObjectType;\n        }\n    }\n    message: string = null;\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\":\"\", \"termOption\":\"\"};\n\n    modalStepConfig: StepConfig = {\"steps\": [\n        {\"label\":this.localizationService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\":true, \"enabled\":true}\n    ]};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, \n        private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, \n        private localizationService: LocalizationService, private registryService: RegistryService ) {\n    \n    }\n\n    ngOnInit(): void {\n\n        this.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n        this.geoObjectTypeManagementService.setModalState(this.modalState);\n        \n        this.fetchOrganizationLabel();\n    }\n\n    fetchOrganizationLabel(): void {\n        \n      this.registryService.getOrganizations().then(orgs => {\n      \n        for (var i = 0; i < orgs.length; ++i)\n        {\n          if (orgs[i].code === this.editGeoObjectType.organizationCode)\n          {\n            this.organizationLabel = orgs[i].label.localizedValue;\n          }\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n      });\n    }\n\n    manageAttributes(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageAttributes, \"attribute\":\"\", \"termOption\":\"\"})\n    }\n\n    onModalStateChange(state: ManageGeoObjectTypeModalState): void {\n        this.modalState = state;\n    }\n\n    update(): void {\n        this.registryService.updateGeoObjectType( this.editGeoObjectType ).then( geoObjectType => {\n\n            // emit the persisted geoobjecttype to the parent widget component (manage-geoobjecttype.component)\n            // so that the change can be updated in the template\n            this.geoObjectTypeChange.emit(geoObjectType);\n\n            this.close();\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // resetGeoObjectType(): void {\n    //     this.geoObjectType = this.geoObjectTypeOriginal;\n    // }\n\n    close(): void {\n        // this.resetGeoObjectType();\n        this.bsModalRef.hide();\n    }\n\n\n    isValid(): boolean {\n        // if(this.attribute.code && this.attribute.label) {\n\n        //     // if code has a space\n        //     if(this.attribute.code.indexOf(\" \") !== -1){\n        //         return false;\n        //     }\n\n        //     // If label is only spaces\n        //     if(this.attribute.label.replace(/\\s/g, '').length === 0) {\n        //         return false\n        //     }\n\n        //     return true;\n        // }\n        \n        // return false;\n\n        return true;\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","\n<div class=\"modal-body\" *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"editGeoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading text-center\">\n            <h1>\n                <localize key=\"hierarchy.management.edit.geoobjecttype.title\"></localize>\n                : {{editGeoObjectType.label.localizedValue}}\n            </h1>\n        </div>\n        <fieldset>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.code\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"editGeoObjectType.code\" name=\"code\" disabled required>\n                    </span>\n                </div>\n            </div>\n            \n            <localized-input [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.label\" key=\"data.property.label.label\"></localized-input>\n            <localized-text [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.description\" key=\"data.property.label.description\"></localized-text>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"attribute.group.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"geoObjectType.attr.visibility.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"geoObjectType.superTypeCode\" [(value)]=\"editGeoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\" *ngIf=\"!geoObjectType.isAbstract && geoObjectType.superTypeCode\">\n                <div class=\"label-holder\">\n                    <localize key=\"attribute.parentType.label\"></localize>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> \n                        {{geoObjectType.superTypeCode}}\n                    </span>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.geometryType\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select name=\"geometryType\" [(ngModel)]=\"editGeoObjectType.geometryType\" disabled>\n                        <option></option>\n                         <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <!-- <option value=\"POINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"LINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"POLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.multipoint\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.multiline\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.multipolygon\"></localize></option> -->\n                    </select>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.option.label.geometryEditable\"></localize></label>\n                </div>\n                <div class=\"holder\">\n\n                    <boolean-field [disable]=\"readOnly\" [(value)]=\"editGeoObjectType.isGeometryEditable\" [localizeLabelKey]=\"'hierarchy.management.option.label.isGeometryEditable'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"attribute.organization.label\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n              </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group list-group-flush\">\n                                <li *ngFor=\"let attr of editGeoObjectType.attributes\" class=\"list-group-item\">{{attr.label.localizedValue}}</li>\n                            </ul>\n\n                            <button [disabled]=\"readOnly || geoObjectType.superTypeCode\" type=\"button\" class=\"btn btn-primary full-width\" (click)=\"manageAttributes()\">\n                                <localize key=\"modal.button.manageAttributes\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.cancel\"></localize>\n                        </button>\n                        <button *ngIf=\"!readOnly\" type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"update()\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n        </fieldset>\n    </form>\n</div>\n\n<!-- </form> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component({\n\tselector: 'manage-attributes-modal',\n\ttemplateUrl: './manage-attributes-modal.component.html',\n\tstyleUrls: ['./manage-attributes-modal.css']\n})\nexport class ManageAttributesModalComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": this.attribute, \"termOption\": \"\" };\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onDeleteAttribute: Subject<boolean>;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, private localizeService: LocalizationService,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onDeleteAttribute = new Subject();\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.onDeleteAttribute.unsubscribe();\n\t}\n\n\tdefineAttributeModal(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\teditAttribute(attr: Attribute, e: any): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": attr, \"termOption\": \"\" })\n\t}\n\n\tremoveAttributeType(attr: Attribute, e: any): void {\n\n\t\tthis.confirmBsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.confirmBsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + attr.label.localizedValue + ']';\n\t\tthis.confirmBsModalRef.content.data = { 'attributeType': attr, 'geoObjectType': this.geoObjectType };\n\t\tthis.confirmBsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.confirmBsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.confirmBsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteAttributeType(data.geoObjectType.code, data.attributeType);\n\t\t});\n\t}\n\n\tdeleteAttributeType(geoObjectTypeCode: string, attr: Attribute): void {\n\n\t\tthis.registryService.deleteAttributeType(geoObjectTypeCode, attr.code).then(data => {\n\t\t\tthis.onDeleteAttribute.next(data);\n\n\t\t\tif (data) {\n\t\t\t\tthis.geoObjectType.attributes.splice(this.geoObjectType.attributes.indexOf(attr), 1);\n\t\t\t}\n\t\t\t\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"geoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading\">\n            <h1>\n                <localize key=\"hierarchy.management.manage.attributes.title\"></localize> {{geoObjectType.label.localizedValue}}</h1>\n        </div>\n        <fieldset>\n\n            <div>\n                <div class=\"label-holder\">\n                    <label>\n                        <localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder dataset-attr-holder\">\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <localize key=\"data.property.label.label\"></localize>\n                                    </th>\n                                    <th class=\"button-column-header\">\n                                        <localize key=\"data.property.label.actions\"></localize>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let attr of geoObjectType.attributes\">\n                                    <td>{{attr.label.localizedValue}}</td>\n                                    <td class=\"button-column\">\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\"\n                                            [title]=\"'modal.button.edit' | localize\"></a>\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\"\n                                            [title]=\"'modal.button.remove' | localize\"></a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <!-- <table class=\"list-table table table-bordered table-striped\">\n                        <tbody>\n                        <tr *ngFor=\"let attr of geoObjectType.attributes\" class=\"fade-ngRepeat-item\">\n                            <td class=\"button-column\">\n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\" title=\"<localize key='modal.button.edit'></localize>\"></a>                             \n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\" title=\"<localize key='modal.button.remove'></localize>\"></a>\n                            </td>                  \n                            <td class=\"submit-form\">\n                            <dl>\n                                <dd>\n                                <h4 class=\"disabled\" >{{attr.label}}</h4>\n                                </dd>\n                            </dl>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table> -->\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <i class=\"fa fa-plus clickable\" style=\"font-size:20px;margin:10px 0 10px 0;\" aria-hidden=\"true\" (click)=\"defineAttributeModal()\">\n                        <localize key=\"modal.button.add\"></localize>\n                    </i>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n\n</div>\n\n","import { Component, OnInit, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, AttributeTerm, AttributeDecimal, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n@Component({\n\tselector: 'define-attribute-modal-content',\n\ttemplateUrl: './define-attribute-modal-content.component.html',\n\tstyleUrls: ['./define-attribute-modal-content.css']\n})\nexport class DefineAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tnewAttribute: Attribute = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.create.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" };\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.setAttribute(\"character\");\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit(): void {\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tthis.attributeInputComponent.animate();\n\t\t}\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.addAttributeType(this.geoObjectType.code, this.newAttribute).then(data => {\n\t\t\tthis.geoObjectType.attributes.push(data);\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsetAttribute(type: string): void {\n\t\tif (type === 'term') {\n\t\t\tthis.newAttribute = new AttributeTerm(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse if (type === 'float') {\n\t\t\tthis.newAttribute = new AttributeDecimal(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse {\n\t\t\tthis.newAttribute = new Attribute(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t}\n\n\tisFormValid(): boolean {\n\n\t\tlet isAttrValid: boolean = false;\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tisAttrValid = this.attributeInputComponent.isValid();\n\t\t}\n\n\t\tif (isAttrValid) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <!-- <error-message [message]=\"message\"></error-message> -->\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.define.attribute.title\"></localize>\n                    </h1>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\" style=\"margin-bottom: 20px;\">\n                        <div class=\"btn-group define-attribute-btns\">\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'character'}\" (click)=\"setAttribute('character')\">\n                                <localize key=\"data.type.label.text\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'integer'}\" (click)=\"setAttribute('integer')\">\n                                <localize key=\"data.type.label.integer\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'float'}\" (click)=\"setAttribute('float')\">\n                                <localize key=\"data.type.label.float\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'date'}\" (click)=\"setAttribute('date')\">\n                                <localize key=\"data.type.label.date\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'boolean'}\" (click)=\"setAttribute('boolean')\">\n                                <localize key=\"data.type.label.boolean\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'term'}\" (click)=\"setAttribute('term')\">\n                                <localize key=\"data.type.label.term\"></localize>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"false\" [excludeDescription]=\"false\" [isDecimal]=\"newAttribute.type === 'float' ? true : false\" [(attribute)]=\"newAttribute\"></attribute-input>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidatorFn, Validator, FormControl } from '@angular/forms';\n\n\n// validation function\nfunction validateGeoObjectAttributeCodeValidator() : ValidatorFn {\n  return (c: AbstractControl) => {\n    if(c.value){\n        let isValid = c.value.indexOf(\" \") === -1;\n        \n        if(isValid) {\n            return null;\n        } else {\n            return {\n                geoObjectAttributeCode: {\n                     valid: false\n                }\n            };\n        }\n    }\n\n  }\n}\n\n\n@Directive({\n  selector: '[geoObjectAttributeCode][ngModel]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: GeoObjectAttributeCodeValidator, multi: true }\n  ]\n})\nexport class GeoObjectAttributeCodeValidator implements Validator {\n  validator: ValidatorFn;\n  \n  constructor() {\n    this.validator = validateGeoObjectAttributeCodeValidator();\n  }\n  \n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n  \n}","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\n\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n\n@Component({\n\tselector: 'edit-attribute-modal-content',\n\ttemplateUrl: './edit-attribute-modal-content.component.html',\n\tstyleUrls: ['./edit-attribute-modal-content.css']\n})\nexport class EditAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\tconstructor(public bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeType(this.geoObjectType.code, this.attribute).then(data => {\n\n\t\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\t\tif (attr.code === data.code) {\n\t\t\t\t\tObject.assign(attr, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\tback(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n            \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.attribute.title\"></localize>: {{attribute.label.localizedValue}}\n                    </h1>\n                    \n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'character'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.text\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'integer'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.integer\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'float'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.float\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'boolean'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.boolean\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'date'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.date\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'term'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.term\"></localize></h4>                    \n                </div>\n                \n                \n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"true\" [excludeDescription]=\"attribute.type === 'term' ? true : false\" [isDecimal]=\"attribute.type === 'float' ? true : false\" [(attribute)]=\"attribute\"></attribute-input>\n\n                    <!-- *ngIf=\"attribute.type === 'term' && isFormValid()\" -->\n                    <term-option-widget *ngIf=\"attribute.type === 'term' && isFormValid()\" [(attribute)]=\"attribute\" [geoObjectType]=\"geoObjectType\"></term-option-widget>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n    \n\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, AttributeTerm, GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, Term} from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service/hierarchy.service';\nimport { GeoObjectTypeManagementService } from '@registry/service/geoobjecttype-management.service'\n\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component( {\n    selector: 'term-option-widget',\n    templateUrl: './term-option-widget.component.html',\n    styleUrls: ['./term-option-widget.css'],\n    animations: [\n        trigger('toggleInputs', [\n            state('none, void', \n                style({ 'opacity': 0})\n              ),\n              state('show', \n                style({ 'opacity': 1})\n              ),\n              transition('none => show', animate('300ms')),\n              transition('show => none', animate('100ms'))\n        ]),\n        trigger('openClose', \n            [\n            transition(\n                ':enter', [\n                style({ 'opacity': 0}),\n                animate('500ms', style({ 'opacity': 1}))\n                ]\n            ),\n            transition(\n                ':leave', [\n                style({ 'opacity': 1}),\n                animate('0ms', style({'opacity': 0})),\n                \n                ]\n            )]\n      )\n    ]\n} )\nexport class TermOptionWidgetComponent implements OnInit {\n\n    @Input() geoObjectType: GeoObjectType;\n    @Input() attribute: AttributeTerm;\n    @Output() attributeChange = new EventEmitter<AttributeTerm>();\n    message: string = null;\n    state: string = 'none';\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\":\"\"};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService ) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit() {\n        this.state = 'show';\n        this.cdr.detectChanges();\n    }\n\n    ngOnDestroy(){\n    \n    }\n\n    handleOnSubmit(): void {\n        \n    }\n\n    animate(): void {\n        this.state = \"none\";\n    }\n\n    onAnimationDone(event: AnimationEvent): void {\n        this.state = \"show\";\n    }\n\n    // isValid(): boolean {\n    //     if(this.termOption.code && this.termOption.code.length > 0 && this.termOption.label && this.termOption.label.length > 0){\n            \n    //         // If code has a space\n    //         if(this.termOption.code.indexOf(\" \") !== -1){\n    //             return false;\n    //         }\n\n    //         // If label is only spaces\n    //         if(this.termOption.label.replace(/\\s/g, '').length === 0) {\n    //             return false\n    //         }\n\n    //         return true;\n    //     }\n    //     else if(this.termOption.code && this.termOption.code.indexOf(\" \") !== -1){\n    //         return false;\n    //     }\n            \n    //     return false\n    // }\n\n    openAddTermOptionForm(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\": \"\"})\n\n    }    \n}\n","<div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n\n    <div>\n        <div class=\"label-holder\">\n            <label>\n                <localize key=\"hierarchy.management.manage.attributes.label.displayTerms\"></localize>\n            </label>\n        </div>\n        <div class=\"holder\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <ul class=\"list-group list-group-flush\">\n                        <li *ngFor=\"let term of attribute.rootTerm.children\" class=\"list-group-item\">{{term.label.localizedValue}}</li>\n                    </ul>\n\n                    <button type=\"button\" class=\"btn btn-primary full-width\" (click)=\"openAddTermOptionForm()\">\n                        <localize key=\"modal.button.manageTermOptions\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { GeoObjectType, AttributeTerm, Term, GeoObjectTypeModalStates } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-term-options',\n\ttemplateUrl: './manage-term-options.component.html',\n\tstyleUrls: ['./manage-term-options.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms')),\n\t\t\ttransition('show => none', animate('100ms'))\n\t\t]),\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class ManageTermOptionsComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Output() attributeChange = new EventEmitter<AttributeTerm>();\n\tmessage: string = null;\n\ttermOption: Term;\n\tstate: string = 'none';\n\tenableTermOptionForm = false;\n\tmodalStepConfig: StepConfig = {\r\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": true }\n\t\t]\r\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t\tthis.termOption = new Term(\"\", this.localizeService.create(), this.localizeService.create());\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.termOption.code && this.termOption.code.length > 0) {\n\n\t\t\t// If code has a space\n\t\t\tif (this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If label is only spaces\n\t\t\tfor (let i = 0; i < this.termOption.label.localeValues.length; i++) {\n\t\t\t\tif (this.termOption.label.localeValues[i].value.replace(/\\s/g, '').length === 0) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.termOption.code && this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false\n\t}\n\n\taddTermOption(): void {\n\n\t\tthis.registryService.addAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\n\t\t\tthis.attribute.rootTerm.children.push(data);\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t\tthis.enableTermOptionForm = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tdeleteTermOption(termOption: Term): void {\n\n\t\tthis.registryService.deleteAttributeTermTypeOption(this.attribute.rootTerm.code, termOption.code).then(data => {\n\n\t\t\tif (this.attribute.rootTerm.children.indexOf(termOption) !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children.splice(this.attribute.rootTerm.children.indexOf(termOption), 1);\n\t\t\t}\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tremoveTermOption(termOption: Term): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + termOption.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteTermOption(termOption);\n\t\t});\n\t}\n\n\teditTermOption(termOption: Term): void {\n\n\t\tconst state = {\n\t\t\t\"state\": GeoObjectTypeModalStates.editTermOption,\n\t\t\t\"attribute\": this.attribute,\n\t\t\t\"termOption\": JSON.parse(JSON.stringify(termOption))\n\t\t};\n\n\t\tthis.geoObjectTypeManagementService.setModalState(state);\n\t}\n\n\tclearTermOption(): void {\n\t\tthis.termOption.code = \"\";\n\t\tthis.termOption.label = this.localizeService.create();\n\t\tthis.termOption.description = this.localizeService.create();\n\t}\n\n\tcancelTermOption(): void {\n\t\tthis.clearTermOption();\n\t\tthis.enableTermOptionForm = false;\n\t}\n\n\topenAddTermOptionForm(): void {\n\t\tthis.enableTermOptionForm = true;\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <fieldset>\n\n            <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n            <div class=\"heading\">\n                <h1>\n                    <localize key=\"hierarchy.management.edit.term.options.title\">: {{attribute.label.localizedValue}}</localize>\n                </h1>\n            </div>\n            <div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n                <div [@openClose]>\n                    <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"term.option.input.label.existingTypes\"></localize>\n                        </label>\n                    </div>\n                    <div class=\"holder\">\n                        <span class=\"text\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>\n                                                <localize key=\"data.property.label.code\"></localize>\n                                            </th>\n                                            <th *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <localize key=\"data.property.label.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n                                            </th>\n                                            <th class=\"button-column-header\">\n                                                <localize key=\"data.property.label.actions\"></localize>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let option of attribute.rootTerm.children\">\n                                            <td>{{option.code}}</td>\n                                            <td *ngFor=\"let localeValue of option.label.localeValues\">{{localeValue.value}}</td>\n                                            <td class=\"button-column\">\n                                                <a class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editTermOption(option, $event)\"></a>\n                                                <a class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeTermOption(option, $event)\"></a>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <input type=\"text\" [(ngModel)]=\"termOption.code\" name=\"termOptionCode\" [required]=\"termOption.label ? true : null \">\n                                            </td>\n                                            <td *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <input type=\"text\" [(ngModel)]=\"localeValue.value\" [name]=\"'termOptionLabel-' + localeValue.locale\" [required]=\"termOption.code ? true : null \">\n                                            </td>\n                                            <td class=\"button-column\">\n                                                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"addTermOption()\">\n                                                    <localize key=\"modal.button.add\"></localize>\n                                                </button>\n                                                <!-- <a class=\"fa fa-plus-square ico-edit\" [routerLink]=\"\" (click)=\"addTermOption()\"></a> -->\n                                                <!-- <a class=\"fa fa-trash ico-remove\" [routerLink]=\"\" (click)=\"cancelTermOption()\"></a> -->\n                                                <!-- <button type=\"button\" class=\"btn btn-default\" (click)=\"cancelTermOption()\">\n                                    <localize key=\"modal.button.cancel\"></localize> \n                                </button> -->\n\n                                            </td>\n                                        </tr>\n                                        <!-- <tr>\n                          <td></td>\n                          <td></td>\n                          <td class=\"button-column\"> \n                            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"enableTermOptionForm === false\" (click)=\"openAddTermOptionForm()\">\n                                <localize key=\"modal.button.add\"></localize>\n                            </button>\n                          </td>\n                        </tr> -->\n                                        <!-- <a class=\"fa fa-plus\" [routerLink]=\"\" (click)=\"openAddTermOptionForm()\"></a> -->\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.done\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig } from '@shared/model/modal';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { GeoObjectType, AttributeTerm, Term, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\n@Component({\n\tselector: 'edit-term-option-input',\n\ttemplateUrl: './edit-term-option-input.component.html',\n\tstyleUrls: [],\n\tanimations: [\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class EditTermOptionInputComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Input() termOption: Term;\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.term.option\"), \"active\": true, \"enabled\": true }\n\n\t\t]\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\t\t\t// Update the term definition on the attribute\n\t\t\tconst index = this.attribute.rootTerm.children.findIndex(t => t.code === data.code);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children[index] = data;\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #tForm=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"!tForm.invalid && handleOnSubmit()\">\n    \n        <div class=\"\">\n            <div class=\"\">\n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.term.option.title\"></localize>\n                    </h1>\n                </div>\n\n                <fieldset>\n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                            <label>\n                                <localize key=\"data.property.label.code\"></localize>\n                            </label>\n                        </div>\n                        <div class=\"holder\">\n                            <span class=\"text\">\n                                <input type=\"text\" [disabled]=\"true\" [(ngModel)]=\"termOption.code\" name=\"code\">\n                            </span>\n                        </div>\n                    </div>\n                    \n                    <localized-input [(value)]=\"termOption.label\" key=\"data.property.label.label\"></localized-input>\n                    \n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                        </div>\n                        <div class=\"holder\">\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"tForm.invalid\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n\n</div>\n","import * as d3 from 'd3';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyComponent } from '../hierarchy.component';\nimport { SvgHierarchyNode } from './svg-hierarchy-node';\nimport { calculateTextWidth, svgPoint } from './svg-util';\nimport { INHERITED_NODE_BANNER_COLOR, DEFAULT_NODE_BANNER_COLOR, RELATED_NODE_BANNER_COLOR, DEFAULT_NODE_FILL, INHERITED_NODE_FILL } from '../hierarchy.component';\n\nimport { LocalizationService } from '@shared/service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { TREE_SCALE_FACTOR_X, TREE_SCALE_FACTOR_Y } from '../hierarchy.component'; \n\nexport class SvgHierarchyType {\n\n\tpublic static gotRectW: number = 150;\n\tpublic static gotRectH: number = 25;\n\tpublic static gotBodyFontSize: number = 8;\n\tpublic static gotOptionsButtonFontSize: number = 12;\n\n\tpublic static gotHeaderW: number = 150;\n\tpublic static gotHeaderH: number = 14;\n\tpublic static gotHeaderFontSize: number = 8;\n\t\n\tpublic static MOUSE_HOVER_EVENT_ENTER = \"mouseenter\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_MOVE = \"mousemove\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_EXIT = \"mouseleave\";\n\t\n\thierarchyComponent: HierarchyComponent;\n\n\thierarchyType: HierarchyType;\n\n\tsvgEl: any;\n\n\td3Hierarchy: any;\n\n\td3Tree: any;\n\n\tisPrimary: boolean;\n\t\n\ttooltip: any;\n\n\tpublic constructor(hierarchyComponent: HierarchyComponent, svgEl: any, ht: HierarchyType, isPrimary: boolean, public localizationService: LocalizationService, public modalService: BsModalService) {\n\t\tconst hierarchyType = ht;\n\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.hierarchyType = hierarchyType;\n\t\tthis.svgEl = svgEl;\n\n\t\tthis.d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]);\n\t\tthis.isPrimary = isPrimary;\n\n\t\tthis.d3Tree = d3.tree().nodeSize([ SvgHierarchyType.gotRectW*TREE_SCALE_FACTOR_X, (SvgHierarchyType.gotRectH + SvgHierarchyType.gotHeaderH)*TREE_SCALE_FACTOR_Y ]).separation((a, b) => 0.8)(this.d3Hierarchy);\n\t}\n\t\n\tpublic getD3Tree() {\n\t\treturn this.d3Tree;\n\t}\n\n\tpublic getCode(): string {\n\t\treturn this.hierarchyType.code\n\t}\n\n\tpublic getNodeByCode(gotCode: string): SvgHierarchyNode {\n\t\tlet treeNode = this.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n\t\t\n\t\tif (treeNode == null)\n\t\t{\n\t\t  return null;\n\t\t}\n\t\t\n\t\treturn new SvgHierarchyNode(this.hierarchyComponent, this, this.hierarchyComponent.findGeoObjectTypeByCode(gotCode), treeNode, this.localizationService, this.modalService);\n\t}\n\n\tpublic renderHierarchyHeader(hg: any, colHeaderLabel: string) {\n\t\tlet bbox = hg.node().getBBox();\n\n\t\tlet colHeader = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tlet headerg = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tconst headerFontSize: number = 10;\n\t\tconst iconWidth: number = 20;\n\t\tconst maxHierarchyLabelLength = 200;\n\t\t\n\t\tlet hierarchyLabelW: number = calculateTextWidth(this.hierarchyType.label.localizedValue, headerFontSize);\n\t\tlet hierarchyLabelH:number = headerFontSize*2;\n\t\tlet hierarchyLabelY:number = bbox.y + headerFontSize*1.6;\n\t\tif (hierarchyLabelW > maxHierarchyLabelLength)\n\t\t{\n\t\t  hierarchyLabelW = maxHierarchyLabelLength;\n\t\t  hierarchyLabelH = headerFontSize*3;\n\t\t  hierarchyLabelY = bbox.y + headerFontSize;\n\t\t}\n\n\t\tlet lineWidth = bbox.width;\n\t\tlet textWidth = hierarchyLabelW + iconWidth;\n\n\t\tif (textWidth > lineWidth) {\n\t\t\tlineWidth = textWidth;\n\t\t}\n\n\t\t// Hierarchy icon (font awesome)\n\t\theaderg.append(\"text\").classed(\"hierarchy-header-icon\", true)\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"font-size\", 12)\n\t\t\t.text('\\uf0e8');\n\n\t\t// Hierarchy display label\n\t\tcolHeader.append(\"foreignObject\").classed(\"hierarchy-header-label\", true)\n      .attr(\"font-size\", headerFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"x\", bbox.x + iconWidth)\n      .attr(\"y\", hierarchyLabelY)\n      .attr(\"width\", hierarchyLabelW)\n      .attr(\"height\", hierarchyLabelH)\n      .append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"text-align\", \"left\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"gray\")\n      //.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n      .style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n      .html((d: any) => this.hierarchyType.label.localizedValue)\n\n\t\t// Line underneath the header\n\t\theaderg.append(\"line\").classed(\"hierarchy-header-line\", true)\n\t\t\t.attr(\"x1\", bbox.x)\n\t\t\t.attr(\"y1\", bbox.y + headerFontSize)\n\t\t\t.attr(\"x2\", bbox.x + lineWidth)\n\t\t\t.attr(\"y2\", bbox.y + headerFontSize)\n\t\t\t.attr(\"stroke\", \"grey\")\n\t\t\t.attr(\"stroke-width\", .5);\n\n\t\tlet headerGBbox = headerg.node().getBBox();\n\t\theaderg.attr(\"transform\", \"translate(0 -\" + headerGBbox.height + \")\");\n\n\t\t// Col header label\n\t\tcolHeader.append(\"text\").classed(\"hierarchy-header-label\", true)\n\t\t\t.attr(\"font-size\", headerFontSize + 2)\n\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.text(colHeaderLabel);\n\t  \n\t\tcolHeader.attr(\"transform\", \"translate(0 -\" + headerGBbox.height * 2.5 + \")\");\n\n\t\treturn headerg;\n\t}\n\n\tgetRelatedHierarchies(gotCode: string): string[] {\n\t\tlet got: GeoObjectType = this.hierarchyComponent.findGeoObjectTypeByCode(gotCode);\n\n\t\tif (got.relatedHierarchies == null) {\n\t\t\tgot.relatedHierarchies = this.hierarchyComponent.calculateRelatedHierarchies(got);\n\t\t}\n\n    let relatedHiers: string[] = got.relatedHierarchies;\n\n\t\tlet index = null;\n\t\tfor (let i = 0; i < relatedHiers.length; ++i) {\n\t\t\tif (relatedHiers[i] === this.getCode()) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\n\t\tif (index != null) {\n\t\t\trelatedHiers.splice(index, 1);\n\t\t}\n\n\t\treturn relatedHiers;\n\t}\n\t\n\tprivate nodeMouseover(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 1);\n\t}\n\t\n\tprivate nodeMousemove(event: any, element: any, data:any)\n\t{\n    d3.select(\"#hierarchyLabel\").html(this.hierarchyType.label.localizedValue);\n    d3.select(\"#hierarchyCodeLabel\").html(this.hierarchyType.code);\n    \n    d3.select(\"#geoObjectTypeLabel\").html(data.data.label);\n    d3.select(\"#geoObjectTypeCodeLabel\").html(data.data.geoObjectType);\n    \n    d3.select(\"#hierarchyOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyType.organizationCode).label.localizedValue);\n    d3.select(\"#geoObjectTypeOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyComponent.findGeoObjectTypeByCode(data.data.geoObjectType).organizationCode).label.localizedValue);\n    \n    let nodeTooltip: any = d3.select(\"#NodeTooltip\").node();\n    let nodeTooltipBbox: DOMRect = nodeTooltip.getBoundingClientRect();\n    \n    let pos = {x: event.pageX, y: event.pageY};\n    const yPointerOffset: number = 50;\n    const xPointerOffset: number = 0;\n    \n    // If overflow off bottom of page\n    if ((event.pageY + nodeTooltipBbox.height + yPointerOffset) > document.documentElement.scrollHeight)\n    {\n      // render above mouse pointer\n      pos.y = event.pageY - nodeTooltipBbox.height - yPointerOffset;\n    }\n    \n    // If overflow off right side of page\n    if ((event.pageX + nodeTooltipBbox.width + xPointerOffset) > document.documentElement.scrollWidth)\n    {\n      // render to the left of the mouse pointer\n      pos.x = event.pageX - nodeTooltipBbox.width - xPointerOffset;\n    }\n    \n    d3.select(\"#NodeTooltip\")\n      .style(\"left\", pos.x + \"px\")\n      .style(\"top\", pos.y + \"px\");\n\t}\n\t\n\tprivate nodeMouseleave(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 0)\n      .style(\"left\", \"-10000px\")\n      .style(\"top\", \"-10000px\");\n\t}\n\n\tpublic render() {\n\t\tlet that = this;\n\t\tlet descends: any = this.d3Tree.descendants();\n\n\t\td3.select('.g-hierarchy[data-primary=\"false\"]').remove();\n\t\tif (this.isPrimary) {\n\t\t\td3.select('.g-hierarchy[data-primary=\"true\"]').remove();\n\t\t}\n\n\t\tlet hg = this.svgEl.insert(\"g\", \".g-hierarchy\").classed(\"g-hierarchy\", true).attr(\"data-code\", this.hierarchyType.code).attr(\"data-primary\", this.isPrimary);\n\t\thg.attr(\"font-family\", \"sans-serif\");\n\n\t\tlet gtree = hg.append(\"g\").classed(\"g-hierarchy-tree\", true).attr(\"data-code\", this.hierarchyType.code);\n\n\t\t// Edge\n\t\tgtree.append(\"g\").classed(\"g-got-edge\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(this.d3Tree.links())\n\t\t\t.join(\"path\")\n\t\t\t//.attr(\"d\", d3.linkVertical().x(function(d:any) { return d.x; }).y(function(d:any) { return d.y; })); // draws edges as curved lines\n\t\t\t.attr(\"d\", (d: any, i) => { // draws edges as square bracket lines\n\t\t\t\treturn \"M\" + d.source.x + \",\" + (d.source.y)\n\t\t\t\t\t+ \"V\" + ((d.source.y + d.target.y) / 2)\n\t\t\t\t\t+ \"H\" + d.target.x\n\t\t\t\t\t+ \"V\" + (d.target.y);\n\t\t\t});\n\n\t\t// Header on square which denotes which hierarchy it's a part of\n\t\tlet gHeader = gtree.append(\"g\").classed(\"g-got-header\", true);\n\t\tgHeader.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotHeaderW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotHeaderH)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) =>\n\t\t\t\td.data.inheritedHierarchyCode != null\n\t\t\t)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Write the name of the hierarchy on the header\n\t\tgHeader.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => \n\t\t\t    d.x - (SvgHierarchyType.gotHeaderW / 2)\n\t\t\t  )\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-weight\", \"bold\")\n      .attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"width\", SvgHierarchyType.gotHeaderW)\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n\t\t\t.append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"fill\", \"white\")\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n      .style(\"text-align\", \"center\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"white\")\n      .style(\"height\", (SvgHierarchyType.gotHeaderH - 4) + \"px\")\n      .style(\"width\", SvgHierarchyType.gotHeaderW + \"px\")\n      .html(function (d: any) {\n        let name = d.data.inheritedHierarchyCode != null ? that.hierarchyComponent.findHierarchyByCode(d.data.inheritedHierarchyCode).label.localizedValue : that.hierarchyType.label.localizedValue;\n        calculateTextWidth(name, SvgHierarchyType.gotHeaderFontSize) > (SvgHierarchyType.gotHeaderW - 5) ? name = name.substring(0,34) + \"...\" : true;\n        return name;\n       })\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// GeoObjectType Body Square \n\t\tgtree.append(\"g\").classed(\"g-got\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-body-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"fill\", (d: any) => d.data.inheritedHierarchyCode != null ? INHERITED_NODE_FILL : DEFAULT_NODE_FILL)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.each(function(d: any) {\n\t\t\t\tif (d.data.geoObjectType != \"GhostNode\") {\n\t\t\t\t\tif (d.data.activeDropZones) {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW * 2 + 100, height: SvgHierarchyType.gotRectH * 4 };\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Arrows on Edges\n\t\tconst arrowRectD = { height: 7, width: 10 };\n\t\tlet gArrow = gtree.append(\"g\").classed(\"g-got-connector-arrow\", true);\n\t\tgArrow.selectAll(\"rect\").data(this.d3Tree.links()).join(\"rect\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.source.x - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", (d: any) => d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.source.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.selectAll(\"path\").data(this.d3Tree.links()).join(\"path\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", (d: any) => \"M\" + (d.source.x - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (d.source.x) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + (arrowRectD.height / 3))\n\t\t\t\t+ \"L\" + (d.source.x - arrowRectD.width / 2 + (arrowRectD.width / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 + arrowRectD.height / 2 - arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Ghost Drop Zone (Sibling) Backer\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-backer\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-backer-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"white\")\n\n\t\t// Ghost Drop Zone (Sibling) Body Rectangle\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-body\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-body-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#6BA542\")\n\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\n\t\t// GeoObjectType label\n\t\tgtree.append(\"g\").classed(\"g-got-codelabel\", true)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotBodyFontSize)\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.classed(\"svg-got-label-text\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2) + 5)\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2) + 2)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW - 32 + 5)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH - 4)\n\t\t\t// .filter(function(d: any) {\n\t\t\t// \treturn calculateTextWidth(d.data.label, 10) > SvgHierarchyType.gotRectW - 32 + 5;\n\t\t\t// })\n\t\t\t// .style(\"height\", SvgHierarchyType.gotRectH + 20 + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.append(\"xhtml:p\")\n\t\t\t.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n\t\t\t.attr(\"text-anchor\", \"start\")\n\t\t\t.attr(\"text-align\", \"left\")\n\t\t\t.style(\"vertical-align\", \"middle\")\n\t\t\t.style(\"display\", \"table-cell\")\n\t\t\t.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n\t\t\t.style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n\t\t\t.html((d: any) => d.data.label)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\tlet headerg;\n\t\tif (this.isPrimary) {\n\t\t\tgtree.append(\"g\").classed(\"g-got-relatedhiers-button\", true)\n\t\t\t\t.selectAll(\"text\")\n\t\t\t\t.data(descends)\n\t\t\t\t.join(\"text\")\n\t\t\t\t.filter(function(d: any) {\n\t\t\t\t\treturn (d.data.geoObjectType === \"GhostNode\" ? false : true) && d.data.inheritedHierarchyCode == null;\n\t\t\t\t})\n\t\t\t\t.classed(\"svg-got-relatedhiers-button\", true)\n\t\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\t.attr(\"x\", (d: any) => d.x + (SvgHierarchyType.gotRectW / 2) - (SvgHierarchyType.gotOptionsButtonFontSize) - 3)\n\t\t\t\t.attr(\"y\", (d: any) => d.y + (SvgHierarchyType.gotOptionsButtonFontSize*0.8) - SvgHierarchyType.gotOptionsButtonFontSize/2)\n\t\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.style(\"fill\", \"#767676\")\n\t\t\t\t.style(\"font-size\", SvgHierarchyType.gotOptionsButtonFontSize + \"px\")\n\t\t\t\t.text('\\uf013')\n\t\t\t\t.on('click', function(event, node) { that.getNodeByCode(node.data.geoObjectType).renderRelatedHierarchiesMenu(); });\n\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Selected Hierarchy\");\n\t\t}\n\t\telse {\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Related Hierarchy\");\n\t\t}\n\n\n\t\tlet paddingTop = (headerg.node().getBBox().height + 20);\n\t\t//gtree.attr(\"transform\", \"translate(0 \" + paddingTop + \")\");\n\t}\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'shapefile-modal',\n    templateUrl: './shapefile-modal.component.html',\n    styleUrls: []\n} )\nexport class ShapefileModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n    constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n        private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.message = null;\n\n        this.service.importShapefile( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n                this.bsModalRef.hide()\n\n                this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n                this.bsModalRef.content.cancelText = this.localizeService.decode( \"modal.button.close\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n            }\n        } ).catch(( response: HttpErrorResponse ) => {\n            this.error( response );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.message = null;\n\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\n\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-problem',\n    templateUrl: './location-problem.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: LocationProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    entityLabel: string;\n    entityId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.entityLabel, this.problem.type, this.problem.parent, this.configuration.hierarchy ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.entityLabel = null;\n        this.entityId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.entityId = e.item.id;\n        this.hasSynonym = ( this.entityId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createGeoObjectSynonym( this.entityId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    vOid: response.vOid, \n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    ignoreDataAtLocation(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNOREATLOCATION',\n            label: locationLabel,\n        };\n    }\n\n    undoAction(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        if ( this.problem.resolved ) {\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNOREATLOCATION' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteGeoObjectSynonym( action.synonymId, action.vOid ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n\n                    this.entityLabel = null;\n                    this.hasSynonym = ( this.entityLabel != null );\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n\n        }\n    }\n}\n","<div class=\"row\" style=\"padding-bottom: 10px;\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">\n      <ol *ngIf=\"problem.context.length > 0\">\n        <li *ngFor=\"let context of problem.context\">{{context.label}} ({{context.type}})</li>\n      </ol>\n    </div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}} ({{problem.typeLabel}})</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"entityLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymFromLocationTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreDataAtLocation()\" [title]=\"'dataUploader.ignoreAtLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <a (click)=\"toggle()\"> <i class=\"fa fa-caret-right clickable\" aria-hidden=\"true\"></i> <i class=\"fa fa-caret-down\" style=\"display: none;\" aria-hidden=\"true\"></i> <localize key=\"dataUploader.resolvedSynonym\"></localize> [{{problem.action.label}}]\n        </a>\n        <span *ngIf=\"show\">\n          <ul>\n            <localize key=\"dataUploader.locatedWithin\"></localize>\n            <li *ngFor=\"let ancestor of problem.action.ancestors\">{{ancestor.label}}</li>\n          </ul>\n        </span>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNOREATLOCATION'\">\n        <localize key=\"dataUploader.resolvedIgnoreAtLocation\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'term-problem',\n    templateUrl: './term-problem.component.html',\n    styleUrls: []\n} )\nexport class TermProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: TermProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    termLabel: string;\n    termId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getTermSuggestions( this.problem.mdAttributeId, this.termLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.termLabel = null;\n        this.termId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n        this.hasSynonym = ( this.termId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createTermSynonym( this.termId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    createOption(): void {\n        this.onError.emit( null );\n        \n        this.service.createTerm( this.problem.label, uuid(), this.problem.parentCode).then( term => {\n            this.problem.resolved = true;\n            this.problem.action = {\n                name: 'OPTION',\n                term: term\n            };\n        } ).catch( e => {\n            this.onError.emit( e.error );\n        } );\n    }\n\n    ignoreValue(): void {\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNORE'\n        };\n    }\n\n    undoAction(): void {\n\n        if ( this.problem.resolved ) {\n\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNORE' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteTermSynonym( action.synonymId ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n            else if ( action.name == 'OPTION' ) {\n                this.onError.emit( null );\n\n                this.service.removeTerm(this.problem.parentCode, action.term.code ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n        }\n    }\n}\n","<div class=\"row\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">{{problem.attributeLabel}}</div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}}</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"termLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"label\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymCategoryTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-plus clickable\" (click)=\"createOption()\" [title]=\"'dataUploader.createNewOptionTooltip' | localize\"></i>        \n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreValue()\" [title]=\"'dataUploader.ignoreCategoryTooltip' | localize\"></i>      \n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'OPTION'\">\n        <localize key=\"dataUploader.resolvedCategoryOption\"></localize>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <localize key=\"dataUploader.resolvedSynonym\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNORE'\">\n        <localize key=\"dataUploader.resolvedIgnoreCategory\"></localize>\n        [{{problem.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedCategoryTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'spreadsheet-modal',\n    templateUrl: './spreadsheet-modal.component.html',\n    styleUrls: []\n} )\nexport class SpreadsheetModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n  constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n    private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.service.importSpreadsheet( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n              this.bsModalRef.hide()\n\n              this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n\n            }\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-page',\n    templateUrl: './data-page.component.html',\n    styleUrls: ['./data-page.css']\n} )\nexport class DataPageComponent implements OnInit {\n\n\tcontent: string = \"SPREADSHEET\";\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n\t\tthis.isMaintainer ? this.renderContent(\"SPREADSHEET\") : this.renderContent(\"EXPORT\");\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\n\t\tif(content === \"SPREADSHEET\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"spreadsheet.title\");\n\t\t}\n\t\telse if(content === \"SHAPEFILE\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"shapefile.title\");\n\t\t}\n\t\telse if(content === \"EXPORT\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"io.export.title\");\n\t\t}\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <!-- <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"spreadsheet.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"spreadsheet.description\"></localize>\n            </p>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-1\"></div>\n\t\t\t<div class=\"col-md-10\" style=\"padding-top: 30px;\">\n\t\t\t\t\n\t\t\t\t<div class=\"heading\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{{pageTitle}}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SPREADSHEET'}\" (click)=\"renderContent('SPREADSHEET')\">\n                      <localize key=\"import-spreadsheet-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SHAPEFILE'}\" (click)=\"renderContent('SHAPEFILE')\">\n                      <localize key=\"import-shapefile-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px;margin-top: 10px;\">\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SPREADSHEET'\" [format]=\"'EXCEL'\"></dataimporter>\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SHAPEFILE'\" [format]=\"'SHAPEFILE'\"></dataimporter>\n\t\t\t\t</div>\n\t\t\t\t\n            </div>\n            <div class=\"col-md-1\"></div>\n        </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService, EventService, ExternalSystemService } from '@shared/service';\nimport { ExternalSystem } from '@shared/model/core';\n\nimport { SpreadsheetModalComponent } from './modals/spreadsheet-modal.component';\nimport { ShapefileModalComponent } from './modals/shapefile-modal.component';\nimport { IOService } from '@registry/service';\nimport { ImportStrategy } from '@registry/model/registry';\n\ndeclare var acp: string;\n\n@Component({\n\n\tselector: 'dataimporter',\n\ttemplateUrl: './dataimporter.component.html',\n\tstyleUrls: ['./dataimporter.css']\n})\nexport class DataImporterComponent implements OnInit {\n\n\tshowImportConfig: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n\timportStrategy: ImportStrategy;\n\timportStrategies: any[] = [\n\t\t{ \"strategy\": ImportStrategy.NEW_AND_UPDATE, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_AND_UPDATE\") },\n\t\t{ \"strategy\": ImportStrategy.NEW_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_ONLY\") },\n\t\t{ \"strategy\": ImportStrategy.UPDATE_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.UPDATE_ONLY\") }\n\t]\n\n    /*\n     * Currently selected code\n     */\n\tcode: string = null;\n\n    /*\n     * Currently start date\n     */\n\tstartDate: string = null;\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n    /*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\t@Input()\n\tformat: string; // Can be SHAPEFILE or EXCEL\n\n\tisExternal: boolean = false;\n\n\t/*\n\t * List of available external systems (filtered based on user's org)\n\t */\n\texternalSystems: ExternalSystem[];\n\n\t/*\n\t * currently selected external system.\n\t */\n\texternalSystemId: string;\n\n\tisLoading: boolean = true;\n\n\tconstructor(private service: IOService,\n\t\tprivate eventService: EventService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate localizationService: LocalizationService,\n\t\tprivate authService: AuthService,\n\t\tprivate sysService: ExternalSystemService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.sysService.getExternalSystems(1, 100).then(paginatedSystems => {\n\n\t\t\tthis.externalSystems = paginatedSystems.resultSet;\n\n\t\t\tif (this.externalSystems.length === 0) {\n\t\t\t\tthis.isExternal = false;\n\t\t\t\tthis.showImportConfig = true; // Show the upload widget if there are no external systems registered\n\t\t\t}\n\n\t\t\tthis.isLoading = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.service.listGeoObjectTypes(false).then(types => {\n\n\t\t\tconst myOrgTypes = [];\n\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.orgCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isOrganizationRA(orgCode) || this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.types = myOrgTypes;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tvar getUrl = acp + '/excel/get-configuration';\n\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\tgetUrl = acp + '/shapefile/get-shapefile-configuration';\n\n\t\t\t//this.showImportConfig = true; // show the upload widget if shapefile because external system from shapefile isn't supported\n\t\t}\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('type', this.code);\n\n\t\t\tif (this.startDate != null) {\n\t\t\t\tform.append('startDate', this.startDate);\n\t\t\t}\n\t\t\tif (this.importStrategy) {\n\t\t\t\tform.append('strategy', this.importStrategy)\n\t\t\t}\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst configuration = JSON.parse(response);\n\n\t\t\tconfiguration.isExternal = this.isExternal;\n\n\t\t\tlet externalSystem: ExternalSystem = null;\n\t\t\tfor (let i = 0; i < this.externalSystems.length; ++i) {\n\t\t\t\tlet sys: ExternalSystem = this.externalSystems[i];\n\n\t\t\t\tif (sys.oid === this.externalSystemId) {\n\t\t\t\t\texternalSystem = sys;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfiguration.externalSystemId = this.externalSystemId;\n\t\t\tconfiguration.externalSystem = externalSystem;\n\n\t\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\t\tthis.bsModalRef = this.modalService.show(ShapefileModalComponent, { backdrop: true });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef = this.modalService.show(SpreadsheetModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.configuration = configuration;\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\n\tonClick(): void {\n\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetImportSource(event, type): void {\n\t\tif (type === \"EXTERNAL\") {\n\t\t\tthis.isExternal = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isExternal = false;\n\t\t}\n\t}\n\n\tonNext(): void {\n\t\tthis.showImportConfig = true;\n\t}\n\n\tonBack(): void {\n\t\tthis.showImportConfig = false;\n\t}\n\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<div *ngIf=\"!isLoading && !showImportConfig && externalSystems.length > 0\">\n  <div>\n    <div class=\"row\">\n\n        <div class=\"col-xs-1\"></div>\n        <div class=\"col-xs-9 radio-btn-wrapper\">\n\n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"true\" [checked]=\"!isExternal\" (change)=\"setImportSource($event, 'FILE')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : !isExternal}\">\n                    <localize key=\"importer.import.from-file.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-file.description\"></localize>\n                </p>\n            </label>\n            \n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"false\" [checked]=\"isExternal\" (change)=\"setImportSource($event, 'EXTERNAL')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : isExternal}\">\n                    <localize key=\"importer.import.from-external.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-external.description\"></localize>\n                </p>\n            </label>\n\n            <div class=\"button-holder\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onNext()\">\n                    <localize key=\"io.next\"></localize>\n                </button>\n            </div>\n        </div>\n        <div class=\"col-xs-2\"></div>\n\t  </div>\n  </div>\n</div>\n\n<div *ngIf=\"!isLoading && isExternal !== null && showImportConfig\">\n    <div >\n        <form #form=\"ngForm\">\n            <div *ngIf=\"isExternal\" class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"externalSystem\">\n                    <localize key=\"io.import.externalSystems\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"externalSystem\" name=\"externalSystem\" class=\"select-area\" [(ngModel)]=\"externalSystemId\" required>\n                        <option *ngFor=\"let externalSystem of externalSystems\" value={{externalSystem.oid}}>{{externalSystem.label.localizedValue}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\" *ngIf=\"types\">\n                <label class=\"col-md-2 text-right\" for=\"code\"> <localize key=\"io.geoObjectType\"></localize></label>\n                <div class=\"col-md-8\">\n                    <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" value={{type.code}}>{{type.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"strategy\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"spreadsheet.import.import.strategy\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"shapefile.import.import.strategy\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"strategy\" name=\"strategy\" class=\"select-area\" [(ngModel)]=\"importStrategy\" required>\n                        <option *ngFor=\"let strategy of importStrategies\" value={{strategy.strategy}}>{{strategy.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"startDate\"><localize key=\"io.startDate\"></localize></label>\n                <div class=\"col-md-8\">\n                    <input name=\"startDate\" [(ngModel)]=\"startDate\" type=\"date\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"file\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <input *ngIf=\"this.format === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".xls, .xlsx\" required />\n                    <input *ngIf=\"this.format === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".zip\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n\n            <div class=\"form-group row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"button-holder col-md-8 text-right\">\n                    <button type=\"submit\" class=\"btn btn-default\" (click)=\"onBack()\">\n                        <localize key=\"io.back\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onClick()\">\n                        <localize key=\"io.submit\"></localize>\n                    </button>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-manager',\n\ttemplateUrl: './master-list-manager.component.html',\n\tstyleUrls: ['./master-list-manager.css']\n})\nexport class MasterListManagerComponent implements OnInit {\n\tmessage: string = null;\n\torgs: MasterListByOrg[];\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.service.getMasterListsByOrg().then(response => {\n\t\t\tthis.orgs = response.orgs;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonCreate(org: MasterListByOrg): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(org);\n\t\tthis.bsModalRef.content.isNew = true;\n\t\tthis.bsModalRef.content.onMasterListChange.subscribe((list: any) => {\n\t\t\tconst obj = {\n\t\t\t\tlabel: list.displayLabel.localizedValue,\n\t\t\t\toid: list.oid,\n\t\t\t\tcreateDate: list.createDate,\n\t\t\t\tlastUpdateDate: list.lastUpdateDate,\n\t\t\t\tisMaster: list.isMaster,\n\t\t\t\twrite: list.write,\n\t\t\t\tread: list.read,\n\t\t\t\tvisibility: list.visibility\n\t\t\t};\n\n\t\t\torg.lists.push(obj);\n\t\t});\n\t}\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-view/', code])\n\t}\n\n\tonEdit(pair: { label: string, oid: string, visibility: string }): void {\n\t\tthis.service.getMasterList(pair.oid).then(list => {\n\n\t\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.edit = true;\n\t\t\tthis.bsModalRef.content.readonly = !list.write;\n\t\t\tthis.bsModalRef.content.master = list;\n\t\t\tthis.bsModalRef.content.isNew = false;\n\n\t\t\tthis.bsModalRef.content.onMasterListChange.subscribe(ret => {\n\t\t\t\tpair.label = ret.displayLabel.localizedValue;\n\t\t\t\tpair.visibility = ret.visibility;\n\t\t\t});\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDelete(org: MasterListByOrg, list: { label: string, oid: string }): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + list.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = \"danger\";\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterList(list.oid).then(response => {\n\t\t\t\torg.lists = org.lists.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== list.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <div class=\"heading\">\n            <h2>\n                <localize key=\"masterlists.manager.organizations\"></localize>\n            </h2>\n        </div>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\" *ngFor=\"let org of orgs;\">\n            <div class=\"col-md-12 order-md-1\">\n                <div style=\"margin-top: 30px;\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <h3>{{org.label}}</h3>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"org.lists && org.lists.length === 0\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <p class=\"inline-message\"><localize key=\"masterlists.no.lists.in.org.message\"></localize></p>\n                        </div>\n                    </div>\n                </div>\n\n                <ul *ngIf=\"org.lists && org.lists.length > 0\" class=\"list-group\" style=\"border-bottom: 2px solid lightgrey; margin-top: 30px;\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th style=\"width: 70%;\"><localize key=\"masterlist.menu\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let list of org.lists; let i = index;\" class=\"clickable\">\n                                <td style=\"width: 70%; vertical-align: middle;\">\n                                  <a [routerLink]=\"'/registry/master-list-view/' + list.oid\" routerLinkActive=\"active\">\n                                    {{list.label}}\n                                    <span *ngIf=\"list.isMaster\"><localize key=\"masterlist.master\"></localize></span>\n                                    <span>\n                                      (\n                                      <localize *ngIf=\"list.visibility === 'PUBLIC'\" key=\"masterlist.public\"></localize>\n                                      <localize *ngIf=\"list.visibility === 'PRIVATE'\" key=\"masterlist.private\"></localize>\n                                      )\n                                    </span>                                    \n                                  </a>\n                                </td>\n                                <td style=\"width: 30%; text-align: right;\">\n                                    <button type=\"submit\" (click)=\"onView(list.oid)\" class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"modal.button.view\"></localize>\n                                    </button>\n                                    <button type=\"submit\" (click)=\"onEdit(list)\" class=\"btn btn-default\" role=\"button\">\n                                        <localize key=\"masterlist.button.metadata\"></localize>\n                                    </button>\n                                    <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(org, list)\" class=\"btn btn-danger\" role=\"button\">\n                                        <localize key=\"modal.button.delete\"></localize>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ul>\n                <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div *ngIf=\"org.write\">\n                            <button type=\"submit\" (click)=\"onCreate(org)\" class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"hierarchy.management.button.create\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n\n@Component( {\n    selector: 'export-format-modal',\n    templateUrl: './export-format-modal.component.html',\n    styleUrls: []\n} )\nexport class ExportFormatModalComponent {\n\n    format: string;\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onFormat = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onFormat.next( this.format );\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"heading text-center\">\n        <h1>\n            <localize key=\"export-modal.title\"></localize>\n        </h1>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <label>\n                        <localize key=\"export-modal.message\"></localize>\n                    </label>\n\n                    <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                        <option></option>\n                        <option value=\"EXCEL\">\n                            <localize key=\"io.spreadsheet\"></localize>\n                        </option>\n                        <option value=\"SHAPEFILE\">\n                            <localize key=\"io.shapefile\"></localize>\n                        </option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" [disabled]=\"format == null || format == ''\"\n                            class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ChangeRequest, AbstractAction, AddChildAction, SetParentAction, CreateGeoObjectAction, RemoveChildAction, UpdateGeoObjectAction } from '@registry/model/crtable';\n\nimport { ChangeRequestService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ActionDetailModalComponent } from './action-detail/action-detail-modal.component'\n\nimport { ErrorHandler, ErrorModalComponent, ConfirmModalComponent } from '@shared/component';\n\n@Component({\n\n\tselector: 'request-table',\n\ttemplateUrl: './request-table.component.html',\n\tstyleUrls: ['./request-table.css'],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class RequestTableComponent {\n\n\tobjectKeys = Object.keys;\n\n\tbsModalRef: BsModalRef;\n\n\trequests: ChangeRequest[] = [];\n\n\tactions: AbstractAction[] | SetParentAction[] | AddChildAction[] | CreateGeoObjectAction[] | RemoveChildAction[] | UpdateGeoObjectAction[];\n\n\tcolumns: any[] = [];\n\n\ttoggleId: string;\n\n\tfilterCriteria: string = 'ALL';\n\n\tisMaintainer: boolean = false;\n\n\tconstructor(private service: ChangeRequestService, private modalService: BsModalService, private authService: AuthService, private localizationService: LocalizationService) {\n\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\n\t\tthis.columns = [\n\t\t\t{ name: localizationService.decode('change.request.user'), prop: 'createdBy', sortable: false },\n\t\t\t{ name: localizationService.decode('change.request.createDate'), prop: 'createDate', sortable: false, width: 195 },\n\t\t\t{ name: localizationService.decode('change.request.status'), prop: 'approvalStatus', sortable: false }\n\t\t];\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(): void {\n\n\t\tthis.service.getAllRequests(\"ALL\").then(requests => {\n\n\t\t\tthis.requests = requests;\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t}\n\n\n\tonSelect(selected: any): void {\n\n\t\t// this.request = selected.selected;\n\n\t\tthis.service.getAllActions(selected.selected[0].oid).then(actions => {\n\n\t\t\tthis.actions = actions;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonExecute(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tthis.service.execute(changeRequest.oid).then(request => {\n\t\t\t\tchangeRequest = request;\n\n\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\tthis.refresh();\n\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\tthis.error(response);\n\t\t\t});\n\t\t}\n\t}\n\n\t// onConfirmChangeRequest(request: any): void {\n\n\t//     if ( request != null ) {\n\t//         this.service.confirmChangeRequest( request.oid ).then( request => {\n\t//             this.request = request;\n\n\t//             // TODO: Determine if there is a way to update an individual record\n\t//             this.refresh();\n\t//         } ).catch(( response: HttpErrorResponse ) => {\n\t//             this.error( response );\n\t//         } );\n\t//     }\n\t// }\n\n\tapplyActionStatusProperties(action: any): void {\n\t\t// var action = JSON.parse(JSON.stringify(this.action));\n\t\t// action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n\t\tthis.service.applyActionStatusProperties(action).then(response => {\n\t\t\taction.decisionMaker = (action.approvalStatus !== 'PENDING') ? this.authService.getUsername() : '';\n\t\t\t\n\t\t\tconsole.log(action);\n\t\t\t// this.crtable.refresh()\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonApproveAll(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.approveAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\n\t\t}\n\t}\n\n\tonRejectAll(changeRequest: ChangeRequest): void {\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.rejectAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\n\t\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\t\t// this.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\trequestTrackBy(index: number, request: ChangeRequest) {\n\t\treturn request.oid;\n\t}\n\n\ttoggle(event: any, oid: string): void {\n\n\t\tif (!event.target.parentElement.className.includes(\"btn\") && !event.target.className.includes(\"btn\")) {\n\t\t\tif (this.toggleId === oid) {\n\t\t\t\tthis.toggleId = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.toggleId = oid;\n\t\t\t\tthis.onSelect({ selected: [{ oid: oid }] });\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter(criteria: string): void {\n\n\t\tthis.service.getAllRequests(criteria).then(requests => {\n\t\t\tthis.requests = requests;\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t\tthis.filterCriteria = criteria;\n\t}\n\n\tsetActionStatus(action: AbstractAction, status: string): void {\n\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\taction.approvalStatus = status;\n\n\t\t\tthis.applyActionStatusProperties(action);\n\t\t});\n\t}\n\n\tgetActiveDetailComponent(action: AbstractAction): any {\n\t\t// TODO: I know this scales poorly to lots of different action types but I'm not sure how to do it better\n\t\tif (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction')) {\n\t\t\t// return this.cuDetail;\n\t\t}\n\t\t//   if (this.arDetail != null && (this.action.actionType.endsWith('AddChildAction') || this.action.actionType.endsWith('RemoveChildAction')))\n\t\t//   {\n\t\t//     return this.arDetail;\n\t\t//   }\n\n\t\treturn action;\n\t}\n\n\tshowActionDetail(action: any) {\n\n\t\tthis.bsModalRef = this.modalService.show(ActionDetailModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.curAction = action;\n\n\t\t//   var detail = this.getActiveDetailComponent();\n\t\t//   if (detail != null)\n\t\t//   {\n\t\t// action.onSelect(action);\n\t\t//   }\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizationService.formatDateForDisplay(date);\n\t}\n\n}\n","<!-- <div class=\"row text-center\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"change.request.title\"></localize>\n        </h2>\n    </div>\n</div> -->\n\n<!-- <div class=\"row text-center\">\n    <div class=\"col-md-12 text-left\" style=\"margin-top: 40px;\">\n        <h3>\n            <localize key=\"change.request.table.title\"></localize>\n        </h3>\n    </div>\n</div> -->\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"form-group button-row\">\n\n      <a [routerLink]=\"\" (click)=\"filter('ALL')\" [ngClass]=\"filterCriteria === 'ALL' ? 'cr-filter-link-active' : ''\" >\n        <localize key=\"change.request.all.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('PENDING')\" [ngClass]=\"filterCriteria === 'PENDING' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.pending.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('ACCEPTED')\" [ngClass]=\"filterCriteria === 'ACCEPTED' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.accepted.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('REJECTED')\" [ngClass]=\"filterCriteria === 'REJECTED' ? 'cr-filter-link-active' : ''\"style=\"margin-left: 5px;\" >\n        <localize key=\"change.request.rejected.filter.link\"></localize>\n      </a>\n\n    </div>\n\n    <hr style=\"border-top:solid 3px #6BA542\" />\n\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n\n  <table class=\"table\">\n    <thead>\n      <tr style=\"height: 50px;color: grey;\">\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.contributor.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.id.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.date.contributed.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.status.label\"></localize> </th>\n        <!-- <th style=\"vertical-align: middle;\">Actions</th> -->\n        <th></th>\n      </tr>\n    </thead>\n        <tbody>\n      <ng-template ngFor let-req [ngForOf]=\"requests\" [ngForTrackBy]=\"requestTrackBy\">\n        <tr class=\"clickable\" [ngClass]=\"{'row-active':toggleId === req.oid}\" (click)=\"toggle($event, req.oid)\" style=\"height: 50px;\">\n          <td class=\"col-md-3\">\n            <h5><strong>{{req.createdBy}}</strong></h5>\n          </td>\n          <td class=\"col-md-4\">\n            <h5><strong>{{req.oid}}</strong></h5>\n          </td>\n          <td class=\"col-md-2\" style=\"vertical-align: middle; color:grey;\">\n             <span class=\"date-string-display\">\n                {{formatDate(req.createDate)}}\n             </span>\n          </td>\n          <td class=\"col-md-2\">\n            <h5 [ngClass]=\"{'status-pending':req.approvalStatus === 'PENDING', 'status-accepted':req.approvalStatus === 'ACCEPTED', 'status-rejected':req.approvalStatus === 'REJECTED'}\">\n               <strong>{{req.statusLabel}}</strong>\n            </h5>\n          </td>\n          <td class=\"col-md-1\" style=\"vertical-align:middle;text-align:right;padding-right:25px;\">\n            <i class=\"arrow arrow-right\" aria-hidden=\"true\"></i>\n          </td>\n        </tr>\n        <tr *ngIf=\"toggleId === req.oid\" style=\"background-color:#f7f7f7;\">\n          <td colspan=\"5\" >\n\n            <div class=\"row\" style=\"margin:0;\">\n              <!-- <div class=\"col-md-1\"></div> -->\n              <div class=\"col-md-12\">\n\n                <div *ngFor=\"let action of actions\" class=\"action-card\" [ngClass]=\"{'status-pending-container':action.approvalStatus === 'PENDING', 'status-accepted-container':action.approvalStatus === 'ACCEPTED', 'status-rejected-container':action.approvalStatus === 'REJECTED'}\" style=\"margin-bottom:10px; background-color:white;\"> \n                  <div class=\"row\" style=\"margin:0; padding-top:5px; padding-bottom:5px;\">\n                    <div class=\"col-md-3\" style=\"border-right:2px grey solid; height:50px;\">\n                      <i class=\"fa fa-circle\" style=\"float:left; line-height: 50px;\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" aria-hidden=\"true\"></i>\n                      <h4 class=\"vertical-center\" style=\"margin:0; float:left; padding-left:20px;\">{{req.createdBy}}</h4>\n                    </div>\n                    <div class=\"col-md-5\" style=\"height: 50px;\">\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\" class=\"fa fa-refresh vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\" class=\"fa fa-plus vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\" class=\"fa fa-link vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\" class=\"fa fa-chain-broken vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n\n                      <ul class=\"vertical-center\" style=\"list-style-type:none; float:left; padding-left:20px;\">\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\">\n                          <localize key=\"change.request.table.update\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\">\n                          <localize key=\"change.request.table.create\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.SetParentAction'\">\n                          <localize key=\"change.request.table.setparent\" [params]=\"{'{0}':action.childCode}\"></localize>\n                        </li>        \n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\">\n                          <localize key=\"change.request.table.setchild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\">\n                          <localize key=\"change.request.table.removechild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>                                        \n                        <li>\n                          <localize key=\"change.request.table.on\"></localize>\n                          <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(action.createActionDate)}}\n                          </span>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-md-4\" style=\"height: 50px;text-align: center;\">\n                      <h4 *ngIf=\"req.approvalStatus !== 'PENDING'\" class=\"vertical-center\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" style=\"margin: 0;\">{{action.approvalStatus}}</h4>\n                      <span *ngIf=\"isMaintainer\">\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'ACCEPTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'ACCEPTED')\" class=\"btn btn-primary vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.accept.btn\"></localize>\n                        <!-- <i *ngIf=\"action.approvalStatus === 'ACCEPTED'\" class=\"fa fa-check\" aria-hidden=\"true\"></i> -->\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'REJECTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'REJECTED')\" class=\"btn btn-danger vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.reject.btn\"></localize>\n                          <!-- <i *ngIf=\"action.approvalStatus === 'REJECTED'\" class=\"fa fa-check\" aria-hidden=\"true\"></i> -->\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'PENDING'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'PENDING')\" class=\"btn btn-warning vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.pending.btn\"></localize>\n                          <!-- <i *ngIf=\"action.approvalStatus === 'PENDING'\" class=\"fa fa-check\" aria-hidden=\"true\"></i> -->\n                        </button>\n                      </span>\n                    </div>\n                  </div>\n\n<!--                   <div class=\"row\" style=\"border-top: 1px grey solid;margin:0;margin-bottom:20px\" *ngIf=\"action.approvalStatus !== 'PENDING'\"> -->\n<!--                     <div class=\"col-md-5\" *ngIf=\"action.decisionMaker !== ''\"> -->\n<!--                         <label>  -->\n<!--                           <localize *ngIf=\"action.approvalStatus !== 'REJECTED'\" key=\"change.request.status.approvedBy\"></localize> -->\n<!--                           <localize *ngIf=\"action.approvalStatus === 'REJECTED'\" key=\"change.request.status.rejectedBy\"></localize> -->\n<!--                         </label> {{action.decisionMaker}} -->\n<!--                     </div> -->\n<!--                   </div> -->\n                  \n                  <div class=\"row\" style=\"border-top: 1px grey solid;margin:0;padding: 10px 0;\">\n                    \n                    <div class=\"col-md-4\" >\n                      <div class=\"form-group\">\n                        <label for=\"contribNotesInput-{{req.oid}}\"> <localize key=\"change.request.contributor.notes.label\"></localize> </label>\n                        <textarea id=\"contribNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;\" [(ngModel)]=\"action.contributorNotes\" readonly=\"true\"></textarea>\n                      </div>  \n                      \n                      <button type=\"submit\" (click)=\"showActionDetail(action)\" class=\"btn btn-default \" style=\"float:right;margin:0;\" role=\"button\">\n                        <localize style=\"text-transform:uppercase;\" key=\"change.request.action.details.label\"></localize>\n                      </button>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.email\"></localize>:\n                          </span>\n                          <label>{{req.email}}</label>\n                      </div>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.phone\"></localize>:\n                          </span>\n                          <label>{{req.phoneNumber}}</label>\n                      </div>\n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div class=\"form-group\">\n                        <label for=\"maintainerNotesInput-{{req.oid}}\"> <localize key=\"change.request.maintainer.notes.label\"></localize> </label>\n                        <textarea id=\"maintainerNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;margin:0\" [(ngModel)]=\"action.maintainerNotes\" [readonly]=\"req.approvalStatus !== 'PENDING'\"></textarea>\n                      </div>  \n                      \n                        <div *ngIf=\"action.approvalStatus !== 'PENDING' && action.decisionMaker !== ''\">\n                            <span style=\"font-style: italic;\">\n                                <localize *ngIf=\"action.approvalStatus !== 'REJECTED'\" key=\"change.request.status.approvedBy\"></localize>\n                                <localize *ngIf=\"action.approvalStatus === 'REJECTED'\" key=\"change.request.status.rejectedBy\"></localize>:\n                            </span>\n                            <label> {{action.decisionMaker}} </label>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div class=\"form-group\">\n                        <label for=\"additionalNotes-{{req.oid}}\"> <localize key=\"change.request.action.detail.additionalNotes\"></localize> </label>\n                        <textarea id=\"additionalNotes-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;\" [(ngModel)]=\"action.additionalNotes\" [readonly]=\"req.approvalStatus !== 'PENDING'\"></textarea>\n                      </div>  \n                    </div>\n                  </div>\n                </div> <!-- END action-card -->\n\n\n                <div *ngIf=\"isMaintainer\" class=\"button-holder\">\n                  <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onApproveAll(req)\" class=\"btn btn-primary\" style=\"\" role=\"button\">\n                    <localize key=\"change.request.accept.all.btn\"></localize>\n                  </button>\n                  <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onRejectAll(req)\" class=\"btn btn-danger\" style=\"\" role=\"button\">\n                    <localize key=\"change.request.reject.all.btn\"></localize>\n                  </button>  \n                  <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onExecute(req)\" class=\"btn btn-primary\" style=\"\" role=\"button\">\n                    <localize key=\"change.request.accept.changes.btn\"></localize>\n                  </button>\n                </div>\n              </div>\n              <!-- <div class=\"col-md-1\"></div> -->\n            </div>\n\n          </td>\n            </tr>\n      </ng-template>\n        </tbody>\n  </table>\n  </div>   \n</div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nexport interface ActionDetailComponent {\n    endEdit(): void;\n}\n\n@Component( {\n    selector: 'action-detail-modal',\n    templateUrl: './action-detail-modal.component.html',\n    styleUrls: []\n} )\nexport class ActionDetailModalComponent {\n\n    action: any;\n\n    @ViewChild( \"cuDetail\" ) cuDetail: ActionDetailComponent;\n    @ViewChild( \"arDetail\" ) arDetail: ActionDetailComponent;\n    @ViewChild( \"spDetail\" ) spDetail: ActionDetailComponent;\n\n    @Input()\n    set curAction( action: any ) {\n        this.action = action;\n    }\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n    }\n\n    cancel(): void {\n        if ( this.cuDetail != null ) {\n            this.cuDetail.endEdit();\n        }\n\n        if ( this.arDetail != null ) {\n            this.arDetail.endEdit();\n        }\n\n        if ( this.spDetail != null ) {\n            this.spDetail.endEdit();\n        }\n\n        this.bsModalRef.hide();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <!-- <div class=\"heading\">\n        <h2>\n            <localize key=\"export-modal.title\"></localize>\n        </h2>\n\t</div> -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <crtable-detail-create-geo-object #cuDetail *ngIf=\"action && (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction'))\" [(action)]=\"action\"> </crtable-detail-create-geo-object>\n            <crtable-detail-add-remove-child #arDetail *ngIf=\"action && (action.actionType.endsWith('AddChildAction') || action.actionType.endsWith('RemoveChildAction'))\" [(action)]=\"action\"> </crtable-detail-add-remove-child>\n            <set-parent-detail #spDetail *ngIf=\"action && (action.actionType.endsWith('SetParentAction'))\" [(action)]=\"action\"> </set-parent-detail>\n        </div>\n    </div>\n\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"button-holder text-right\">\n                <button type=\"button\" (click)=\"cancel();\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n                    <span> <localize key=\"modal.button.close\"></localize>\n                    </span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, GeoObjectOverTime } from '@registry/model/registry';\n\n\n@Component({\n\tselector: 'manage-versions-modal',\n\ttemplateUrl: './manage-versions-modal.component.html',\n\tstyleUrls: ['./manage-versions-modal.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition('* => void', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t])\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsModalComponent implements OnInit {\n\treadonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonAttributeVersionChange: Subject<GeoObjectOverTime>;\n\n\tattribute: Attribute;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\tisNewGeoObject: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onAttributeVersionChange = new Subject();\n\t}\n\n\tonVersionChange(geoObjectOverTime: GeoObjectOverTime): void {\n\t\tif (geoObjectOverTime != null) {\n\t\t\tthis.onAttributeVersionChange.next(geoObjectOverTime);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n}\n","<div class=\"modal-body\">\n\n    <div class=\"text-center\">\n        <h2 *ngIf=\"!readonly\">\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    <manage-versions\n      *ngIf=\"attribute != null\"\n      [attribute]=\"attribute\"\n      [geoObjectType]=\"geoObjectType\"\n      [geoObjectOverTimeInput]=\"geoObjectOverTime\"\n      [isNewGeoObject]=\"isNewGeoObject\"\n      (onChange)=\"onVersionChange($event)\"\n    ></manage-versions>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'geoObjectAttributeExcludesFilter',\n    pure: true\n})\nexport class GeoObjectAttributeExcludesPipe implements PipeTransform {\n    transform(items: any[], filter: string[]): any {\n        if (!items || !filter) {\n            return items;\n        }\n       \n        return items.filter(item => filter.indexOf(item.code) === -1)\n    }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\nimport { GeoObjectType, GeoObjectOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'submit-change-request',\n\ttemplateUrl: './submit-change-request.component.html',\n\tstyleUrls: []\n})\nexport class SubmitChangeRequestComponent implements OnInit {\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectTypes: GeoObjectType[] = [];\n\n\tgeoObjectId: string = \"\";\n\n\treason: string = \"\";\n\n\tdataSource: Observable<any>;\n\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t/*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\tpreGeoObject: GeoObjectOverTime = null;\n\n\t/*\n\t * The state of the GeoObject after our Change Request has been approved \n\t */\n\tpostGeoObject: GeoObjectOverTime = null;\n\n\tisValid: boolean = false;\n\n\tloading: boolean = false;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\", \"status\"];\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService,\n\t\tprivate changeRequestService: ChangeRequestService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.dataSource = Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(this.geoObjectId, this.geoObjectType.code).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.registryService.getGeoObjectTypes([], null).then(types => {\n\n\t\t\tvar myOrgTypes = [];\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.organizationCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null && type.superTypeCode != '' ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isGeoObjectTypeRC(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.geoObjectTypes = myOrgTypes;\n\n\t\t\tthis.geoObjectTypes.sort((a, b) => {\n\t\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\t\telse return 0;\n\t\t\t});\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(\"ROOT\");\n\t\t\tif (pos) {\n\t\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t}\n\n\t\t\t// this.currentGeoObjectType = this.geoObjectTypes[1];\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\n\n\tprivate onValidChange(newValid: boolean) {\n\t\tif (this.preGeoObject == null) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.geometryEditor != null && !this.geometryEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.attributeEditor != null && !this.attributeEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isValid = true;\n\t}\n\n\tprivate getGeoObjectTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\tlet obj = this.geoObjectTypes[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tchangeTypeaheadLoading(e: boolean): void {\n\t\tthis.loading = e;\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch): void {\n\t\tthis.registryService.getGeoObjectOverTime(e.item.code, this.geoObjectType.code).then(geoObject => {\n\t\t\tthis.preGeoObject = geoObject;\n\t\t\tthis.postGeoObject = JSON.parse(JSON.stringify(this.preGeoObject)); // Object.assign is a shallow copy. We want a deep copy.\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsubmit(): void {\n\n\t\tlet goSubmit: GeoObjectOverTime = this.attributeEditor.getGeoObject();\n\n\t\tif (this.geometryEditor != null) {\n\t\t\t//\t\t\tlet goGeometries: GeoObjectOverTime = this.geometryEditor.saveDraw();\n\t\t\t//            goSubmit.geometry = goGeometries.geometry;\n\t\t}\n\n\t\tlet actions = [{\n\t\t\t\"actionType\": \"geoobject/update\", // TODO: account for create\n\t\t\t\"apiVersion\": \"1.0-SNAPSHOT\", // TODO: make dynamic\n\t\t\t\"createActionDate\": new Date().getTime(),\n\t\t\t\"geoObject\": goSubmit,\n\t\t\t\"contributorNotes\": this.reason\n\t\t}]\n\n\t\tthis.changeRequestService.submitChangeRequest(JSON.stringify(actions))\n\t\t\t.then(geoObject => {\n\t\t\t\tthis.cancel();\n\n\t\t\t\tthis.bsModalRef = this.modalService.show(SuccessModalComponent, { backdrop: true });\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"change.request.success.message\");\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\tthis.isValid = false;\n\t}\n\n\tcancel(): void {\n\t\tthis.isValid = false;\n\t\tthis.preGeoObject = null;\n\t\tthis.postGeoObject = null;\n\t\tthis.geoObjectId = null;\n\t\tthis.geoObjectType = null;\n\t\tthis.reason = null;\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}","<!-- <div class=\"new-admin-design-main\" style=\"height: 100vh;\">\n    <cgr-header></cgr-header> -->\n<loading-bar></loading-bar>\n\n<div class=\"row\">\n  <div class=\"col-md-2\"></div>\n  <div class=\"col-md-8\">\n    <form class=\"modal-form\" name=\"geobject-shared-attribute-editor\" #attributeForm=\"ngForm\">\n      <fieldset>\n        <div style=\"min-height: 50vh;\">\n\n          <div class=\"form-group\">\n              <label> \n                <localize key=\"dropdown.select.geoobjecttype.label\"></localize>\n              </label>\n                <select id=\"geoObjectTypeSelect\" name=\"geoObjectTypeSelect\" class=\"form-control select-area\" [(ngModel)]=\"geoObjectType\" required>\n                  <!-- <option> <localize key=\"dropdown.select.geoobjecttype.option.label\"></localize> </option> -->\n                  <option *ngFor=\"let got of geoObjectTypes\" [ngValue]=\"got\">{{got.label.localizedValue}}</option>\n                </select>\n          </div>\n\n          <div class=\"form-group\" style=\"overflow: visible;\">\n              <label> \n                <localize key=\"dropdown.select.geoobject.label\"></localize>\n              </label>\n              <input type=\"text\" [ngClass]=\"{'inline-loading':loading}\" [(ngModel)]=\"geoObjectId\" [disabled]=\"!geoObjectType\" name=\"geoObjectId\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\"\n                (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" [placeholder]=\"('masterlist.search' | localize) + '...'\" class=\"form-control\"\n                autocomplete=\"off\" required>\n          </div>\n\n          <div *ngIf=\"preGeoObject\">\n            <geoobject-shared-attribute-editor \n            #attributeEditor (valid)=\"this.onValidChange($event)\" \n            [geoObjectType]=\"this.geoObjectType\" \n            [preGeoObject]=\"this.preGeoObject\" \n            [(postGeoObject)]=\"this.postGeoObject\" \n            [isGeometryInlined]=\"true\"\n            [animate]=false>\n            </geoobject-shared-attribute-editor>\n          </div>\n\n          <div class=\"form-group\">\n              <div class=\"button-holder\">\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                  <localize key=\"modal.button.cancel\"></localize>\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"!attributeForm.valid\">\n                  <localize key=\"modal.button.submit\"></localize>\n                </button>\n              </div>\n          </div>\n\n        </div>\n      </fieldset>\n    </form>\n  </div>\n  <div class=\"col-md-2\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'change-request-page',\n    templateUrl: './change-request-page.component.html',\n    styleUrls: ['./change-request-page.css']\n} )\nexport class ChangeRequestPageComponent implements OnInit {\n\n\tcontent: string = \"SUBMIT\";\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n//\t\tthis.isMaintainer ? this.renderContent(\"MANAGE\") : this.renderContent(\"SUBMIT\");\n\t\tthis.renderContent(\"MANAGE\");\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\n\t\tif(content === \"SUBMIT\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"change.request.page.title\");\n\t\t}\n\t\telse if(content === \"MANAGE\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"change.request.table.title\");\n\t\t}\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\n\t\t\t\t<div class=\"heading\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{{pageTitle}}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isContributor\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'MANAGE'}\" (click)=\"renderContent('MANAGE')\">\n                      <localize key=\"hierarchy.current.management.panel.title\"></localize>\n                    </a> \n<!-- \n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isContributor\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SUBMIT'}\" (click)=\"renderContent('SUBMIT')\">\n                      <localize key=\"modal.button.submit\"></localize>\n                    </a>\n -->                    \n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px;margin-top: 10px;\">\n<!-- \n\t\t\t\t\t<submit-change-request *ngIf=\"content === 'SUBMIT'\"></submit-change-request>\n -->        \n\t\t\t\t\t<request-table *ngIf=\"content === 'MANAGE'\"></request-table>\n\t\t\t\t</div>\n\t\t\t\t\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ManageParentVersionsModalComponent } from './manage-parent-versions-modal.component';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n@Component({\n\n\tselector: 'cascading-geo-selector',\n\ttemplateUrl: './cascading-geo-selector.html',\n})\nexport class CascadingGeoSelector {\n\n\t@Input() hierarchies: HierarchyOverTime[];\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Input() isValid: boolean = true;\n\t@Input() readOnly: boolean = false;\n\n\t@ViewChild(\"mainForm\") mainForm;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() customEvent: boolean = false;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tdateStr: string;\n\n\tcHierarchies: any[] = [];\n\n\tparentMap: any = {};\n\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tconst day = this.forDate.getUTCDate();\n\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\n\t\t// Truncate any hours/minutes/etc which may be part of the date\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n\t\tconst time = this.forDate.getTime();\n\n\t\tthis.isValid = true;\n\n\t\tthis.cHierarchies = [];\n\t\tthis.hierarchies.forEach(hierarchy => {\n\t\t\tconst object = {};\n\t\t\tobject['label'] = hierarchy.label;\n\t\t\tobject['code'] = hierarchy.code;\n\n\t\t\tthis.isValid = this.isValid && (this.hierarchies.length > 0);\n\n\t\t\thierarchy.entries.forEach(pot => {\n\t\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tlet parents = [];\n\n\t\t\t\t\thierarchy.types.forEach(type => {\n\t\t\t\t\t\tlet parent: any = {\n\t\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\t\tlabel: type.label\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\t\tparent.text = pot.parents[type.code].text;\n\t\t\t\t\t\t\tparent.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparents.push(parent);\n\t\t\t\t\t});\n\n\t\t\t\t\tobject['parents'] = parents;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.cHierarchies.push(object);\n\n\t\t});\n\n\t\tthis.valid.emit();\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getHierarchies(): any {\n\t\treturn this.hierarchies;\n\t}\n\n\tonManageVersions(code: string): void {\n\t\tconst hierarchy = this.hierarchies.find(h => h.code === code);\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(hierarchy);\n\t\t}\n\t\telse {\n\n\t\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.init(hierarchy);\n\t\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<form style=\"overflow:visible;\" class=\"modal-form\" name=\"cascading-geo-selector\" #mainForm=\"ngForm\">\n  <fieldset>\n    <div>\n      <div class=\"row-holder\" style=\"overflow:visible;\" *ngFor=\"let hierarchy of this.cHierarchies\">\n        <div class=\"label-holder\">\n          <label>\n            {{hierarchy.label}}\n          </label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"container\" style=\"width:100%;\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" style=\"float:left;width:150px;\" *ngFor=\"let parent of hierarchy.parents; let i = index\">\n                {{parent.label}}\n\n                <input style=\"width:150px;\" type=\"text\" class=\"form-control\" disabled\n                  [value]=\"parent.geoObject.properties.displayLabel.localizedValue + ' : ' + parent.geoObject.properties.code\" [name]=\"hierarchy.code + '-' + parent.code + '-input'\">\n                  \n              </div>\n              \n            </div>\n\n            <div class=\"row\" *ngIf=\"!readOnly\">\n              <div class=\"col-sm-12\">\n                  <div class=\"button-holder\" style=\"padding: 20px 0 20px 0;text-align: left;\">\n                      <button type=\"submit\" style=\"\" (click)=\"onManageVersions(hierarchy.code)\" class=\"btn btn-primary\" role=\"button\">\n                          <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n                      </button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { MasterListVersion } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ExportFormatModalComponent } from './export-format-modal.component';\nimport { GeoObjectEditorComponent } from '../geoobject-editor/geoobject-editor.component';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService, ProgressService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'master-list',\n\ttemplateUrl: './master-list.component.html',\n\tstyleUrls: []\n})\nexport class MasterListComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterListVersion = null;\n\tp: number = 1;\n\tcurrent: string = '';\n\tfilter: { attribute: string, value: string, label: string }[] = [];\n\tselected: string[] = [];\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 100,\n\t\tresults: []\n\t};\n\tsort = { attribute: 'code', order: 'ASC' };\n\tisPublished: boolean = true;\n\tisRefreshing: boolean = false;\n\tisWritable: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tpublic searchPlaceholder = \"\";\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\n\tconstructor(public service: RegistryService, private pService: ProgressService, private route: ActivatedRoute,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.searchPlaceholder = localizeService.decode(\"masterlist.search\");\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\t\tthis.isPublished = (this.route.snapshot.paramMap.get('published') == \"true\");\n\n\t\tthis.service.getMasterListVersion(oid).then(version => {\n\t\t\tthis.list = version;\n\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\tattribute.isCollapsed = true;\n\t\t\t});\n\t\t\tconst orgCode = this.list.orgCode;\n\t\t\tconst typeCode = this.list.superTypeCode != null ? this.list.superTypeCode : this.list.typeCode;\n\n\t\t\tthis.isWritable = this.authService.isGeoObjectTypeRC(orgCode, typeCode);\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/progress/' + oid);\n\t\tthis.notifier.subscribe(message => {\n\t\t\tthis.handleProgressChange(message.content)\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\n\tonPageChange(pageNumber: number): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.data(this.list.oid, pageNumber, this.page.pageSize, this.filter, this.sort).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t//    onSearch(): void {\n\t//        this.filter = this.current;\n\t//\n\t//        this.onPageChange( 1 );\n\t//    }\n\n\tonSort(attribute: { name: string, label: string }): void {\n\t\tif (this.sort.attribute === attribute.name) {\n\t\t\tthis.sort.order = (this.sort.order === 'ASC' ? 'DESC' : 'ASC');\n\t\t}\n\t\telse {\n\t\t\tthis.sort = { attribute: attribute.name, order: 'ASC' };\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tattr.search = null;\n\t\t});\n\n\t\tthis.filter = [];\n\t\tthis.selected = [];\n\n\t\tthis.onPageChange(1);\n\t}\n\n\ttoggleFilter(attribute: any): void {\n\t\tattribute.isCollapsed = !attribute.isCollapsed;\n\t}\n\n\tgetValues(attribute: any): void {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.message = null;\n\n\t\t\t// Get the valid values\n\t\t\tthis.service.values(this.list.oid, attribute.search, attribute.name, attribute.base, this.filter).then(options => {\n\t\t\t\toptions.unshift({ label: '[' + this.localizeService.decode(\"masterlist.nofilter\") + ']', value: null });\n\n\t\t\t\tobserver.next(options);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\thandleProgressChange(progress: any): void {\n\n\t\tthis.isRefreshing = (progress.current < progress.total);\n\n\t\tthis.pService.progress(progress);\n\t}\n\n\thandleDateChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && (attribute.value.start !== '' || attribute.value.end !== '')) {\n\n\t\t\tlet label = '[' + attribute.label + '] : [';\n\n\t\t\tif (attribute.value.start != null) {\n\t\t\t\tlabel += attribute.value.start;\n\t\t\t}\n\n\t\t\tif (attribute.value.start != null && attribute.value.end != null) {\n\t\t\t\tlabel += ' - ';\n\t\t\t}\n\n\t\t\tif (attribute.value.end != null) {\n\t\t\t\tlabel += attribute.value.end;\n\t\t\t}\n\n\t\t\tlabel += ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleInputChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && attribute.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleListChange(e: TypeaheadMatch, attribute: any): void {\n\t\tattribute.value = e.item;\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tif (attr.base === attribute.base) {\n\t\t\t\tattr.search = '';\n\t\t\t}\n\t\t});\n\n\t\tif (attribute.value.value != null && attribute.value.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value.label + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: e.item.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t\tattribute.search = e.item.label;\n\t\t}\n\t\telse {\n\t\t\tattribute.search = '';\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tisFilterable(attribute: any): boolean {\n\t\treturn attribute.type !== 'none' && (attribute.dependency.length === 0 || this.selected.indexOf(attribute.base) !== -1 || this.selected.filter(value => attribute.dependency.includes(value)).length > 0);\n\t}\n\n\tonEdit(data): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\teditModal.content.configureAsExisting(data.code, this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterList(this.list.oid).toPromise()\n\t\t\t.then(list => {\n\t\t\t\tthis.list = list;\n\t\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\t\tattribute.isCollapsed = true;\n\t\t\t\t});\n\n\t\t\t\t// Refresh the resultSet\n\t\t\t\tthis.onPageChange(1);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tonNewGeoObject(): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t//editModal.content.fetchGeoObject( data.code, this.list.typeCode );\n\t\teditModal.content.configureAsNew(this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonExport(): void {\n\t\tthis.bsModalRef = this.modalService.show(ExportFormatModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.onFormat.subscribe(format => {\n\t\t\tif (format == 'SHAPEFILE') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-shapefile?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t\telse if (format == 'EXCEL') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-spreadsheet?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t});\n\t}\n\n\tchangeTypeaheadLoading(attribute: any, loading: boolean): void {\n\t\tattribute.loading = loading;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n    <!-- <progress-bar></progress-bar> -->\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\">\n            <div *ngIf=\"list\" class=\"col-md-12\">\n                <h2>\n                    <!-- <localize key=\"masterlist.title\"></localize> -->\n                    {{list.displayLabel}}\n                </h2>\n            </div>\n        </div>\n        <div *ngIf=\"list\" class=\"row form-group\">\n\n            <div class=\"col-md-12\">\n                <h4>\n                    <localize key=\"masterlist.publishDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.publishDate)}}\n                      </span>\n                </h4>\n                \n                <h4>\n                    <localize key=\"masterlist.forDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.forDate)}}\n                      </span>\n                </h4>\n            </div>\n        </div>\n<!--         <div class=\"row\"> -->\n<!--             <div *ngIf=\"list\" class=\"col-md-12\"> -->\n<!--               <a [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, (!isWritable || list.isAbstract), list.forDate]\" routerLinkActive=\"active\"> -->\n<!--                 <localize key=\"masterlist.gotoMap\"></localize> -->\n<!--               </a> -->\n                \n<!--             </div> -->\n<!--         </div> -->\n\n\n        <div *ngIf=\"filter.length > 0\" class=\"row form-group\">\n            <div class=\"col-md-12 table-responsive\" style=\"\">\n                <localize key=\"masterlist.filters\"></localize>\n                <ol>\n                    <li *ngFor=\"let f of filter\">{{f.label}}</li>\n                </ol>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            \n                <div class=\"button-holder pull-right\">\n            \n                    <span class=\"clickable\" (click)=\"clearFilters()\" style=\"padding: 10px;\">\n                        <span class=\"fa-stack fa-md\">\n                            <i class=\"fa fa-filter fa-stack-2x\" style=\"font-size: 25px;\"></i>\n                            <i class=\"fa fa-times-circle fa-stack-1x\" style=\"font-size: 13px;top: 4px;left: 6px;\"></i>\n                        </span>\n                        <localize key=\"masterlist.clearFilters\"></localize>\n                    </span>\n                    \n                    <span *ngIf=\"!isPublished\" class=\"clickable\" (click)=\"onPublish()\" style=\"padding: 10px;\">\n                        <i [ngClass]=\"{'fa fa-refresh clickable':true, 'fa-spin':isRefreshing}\" style=\"font-size: 24px;vertical-align: middle;padding-right: 5px;\" aria-hidden=\"true\"></i>\n                        <localize key=\"masterlist.publish\"></localize>\n                    </span>\n\n\n                        <button *ngIf=\"isWritable && !list.isAbstract\" type=\"submit\"\n                           [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, '__NEW__', (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"\n                         class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"masterlist.newGeoObject\"></localize>\n                        </button>\n                        <button type=\"submit\" (click)=\"onExport()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize *ngIf=\"filter.length === 0\" key=\"io.export.allrows\"></localize>\n                            <localize *ngIf=\"filter.length > 0\" key=\"io.export.filteredrows\"></localize>\n                        </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div *ngIf=\"list\" class=\"col-md-12 table-responsive\" style=\"\">\n                <table class=\"list-table table table-bordered table-striped\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 3%\" class=\"label-column\"><localize key=\"masterlist.view.column\"></localize></th>\n                            <th *ngFor=\"let attribute of list.attributes\" class=\"label-column\">\n\n                                <div style=\"display: table-cell; padding-right: 10px; vertical-align: middle;\" *ngIf=\"isFilterable(attribute)\">\n                                    <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\"> \n\t\t\t\t\t\t\t\t\t\t<i style=\"font-size: 20px;\" class=\"fa fa-filter\" [title]=\"'button.filter.helptext' | localize\"></i>\n                                    </a>\n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; word-break: keep-all; word-wrap: normal;\">{{attribute.label}} </a> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; vertical-align: middle; padding-left: 5px;\"> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'ASC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-down\" style=\"font-size: inherit;\"></i> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'DESC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-up\" style=\"font-size: inherit;\"></i>\n                            \t</a>\n\n                                <div *ngIf=\"isFilterable(attribute)\">\n                                    <!-- <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-filter\"></i>\n\t\t\t\t\t\t\t\t</a> -->\n                                    <div id=\"collapseBasic\" [collapse]=\"attribute.isCollapsed\">\n                                        <input *ngIf=\"attribute.type === 'input'\" [name]=\"attribute.name\" [(ngModel)]=\"attribute.value\" (keyup.enter)=\"handleInputChange(attribute)\" type=\"text\" class=\"form-control search-input\" />\n                                        <div *ngIf=\"attribute.type === 'date'\">\n                                            <input [name]=\"attribute.name + 'Start'\" [(ngModel)]=\"attribute.value.start\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" /> <input [name]=\"attribute.name + 'End'\" [(ngModel)]=\"attribute.value.end\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" />\n                                        </div>\n                                        <input *ngIf=\"attribute.type === 'list'\" \n                                          type=\"text\" \n                                          [placeholder]=\"('masterlist.search' | localize) + '...'\" \n                                          [name]=\"attribute.name\"\n                                          [(ngModel)]=\"attribute.search\"\n                                          [typeaheadAsync]=\"true\"\n                                          [typeahead]=\"getValues(attribute)\"\n                                          (typeaheadOnSelect)=\"handleListChange($event, attribute)\"\n                                          [typeaheadOptionsLimit]=\"100\"\n                                          [typeaheadMinLength]=\"0\"\n                                          [typeaheadWaitMs]=\"300\"\n                                          [ngClass]=\"{'inline-loading':attribute.loading}\"    \n                                          (typeaheadLoading)=\"changeTypeaheadLoading(attribute, $event)\"                                      \n                                          typeaheadOptionField=\"label\"\n                                          class=\"form-control\" autocomplete=\"off\">\n\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\">\n                            <td style=\"width: 3%; text-align: center;\" class=\"label-column\">\n                              <a class=\"fa fa-pencil\" [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, result.code, (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"></a>\n                            </td>\n                            <td *ngFor=\"let attribute of list.attributes\" class=\"label-column\">{{ result[attribute.name] }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!-- <div class=\"row form-group\">\n            <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            </div>\n        </div>\n    </div>\n    <!-- </div> -->\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { PublishModalComponent } from './publish-modal.component';\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { RegistryService } from '@registry/service';\nimport { AuthService, LocalizationService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'published-master-list-history',\n\ttemplateUrl: './published-master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class PublishedMasterListHistoryComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tpage: any = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresults: []\n\t};\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tisAdmin: boolean;\n\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, public authService: AuthService, private localizeService: LocalizationService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'PUBLISH_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\t//isGeoObjectTypeRM(type: string): boolean {\n\t//\treturn this.authService.isGeoObjectTypeRM(type);\n\t//}\n\n\tonDeleteMasterListVersion(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.updateList();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdateList(): void {\n\t\t// update the list of versions. \n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterListVersions(this.list.oid).then((data: { job: string }) => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.list != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getPublishMasterListJobs(this.list.oid, this.page.pageSize, pageNumber, \"createDate\", true).then(response => {\n\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.updateList();\n\t\t}\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, true])\n\t}\n\n\tonPublishShapefile(version: MasterListVersion): void {\n\n\t\tthis.service.publishShapefile(version.oid).then(() => {\n\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDownloadShapefile(version: MasterListVersion): void {\n\t\twindow.location.href = acp + '/master-list/download-shapefile?oid=' + version.oid;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n     <div *ngIf=\"list && ((list.write))\" style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" \n                    [title]=\"'masterList.publish.help.text' | localize\">\n                        <localize key=\"masterlist.publish.versions\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\" style=\"border-bottom: solid lightgrey 3px;\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.publishDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onPublishShapefile(version)\" class=\"btn btn-default\" role=\"button\">\n                                    <localize key=\"masterlist.publish-shapefile\"></localize>\n                                </button>                                \n                                <button *ngIf=\"version.shapefile\" type=\"submit\" (click)=\"onDownloadShapefile(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"masterlist.download\"></localize>\n                                </button>   \n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onDeleteMasterListVersion( version )\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>  \n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.publishDate)}}\n                          </span>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12 order-md-1\">\n            <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <tr style=\"height: 56px;\">\n                                <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let job of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <td style=\"vertical-align: middle;\">\n                                    <div class=\"wrapper\">\n                                        <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                        <p style=\"padding-left: 60px;\">\n                                            <span style=\"display: block;\"> {{job.createDate}} </span>\n                                            <span style=\"display: block;\"> {{job.author}} </span>\n                                            <span style=\"display: block;\"> {{job.type}} </span>\n                                            <span style=\"display: block;\"> {{job.status}} </span>\n                                            <span *ngIf=\"job.exception\" style=\"display: block;\"> {{job.exception.message}} </span>\n                                        </p>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                    </div>\n                </div>\n            </ul>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-history',\n\ttemplateUrl: './master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class MasterListHistoryComponent implements OnInit {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tforDate: string = '';\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, private localizeService: LocalizationService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"EXPLORATORY\").then(list => {\n\t\t\tthis.list = list;\n\t\t});\n\t}\n\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.createMasterListVersion(this.list.oid, this.forDate).then(version => {\n\t\t\tthis.list.versions.push(version);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, false])\n\t}\n\n\tonDelete(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.list.versions = this.list.versions.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== version.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div *ngIf=\"list && list.exploratory\" style=\"margin-bottom: 10px;\" class=\"row\">\n\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\" style=\"margin-left: 10px;\">\n                <div class=\"form-group\">\n                    <label for=\"forDate\" style=\"display: block; margin-bottom: 0;\"><localize key=\"masterlist.publishingFor\"></localize></label> <input id=\"forDate\" type=\"date\" name=\"forDate\" [(ngModel)]=\"forDate\" required>\n\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\">\n                        <localize key=\"masterlist.publishNewVersion\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.generatedDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\"> -->\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(version)\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>\n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.createDate)}}\n                          </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { MasterList } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\n@Component({\n\n\tselector: 'master-list-view',\n\ttemplateUrl: './master-list-view.component.html',\n\tstyleUrls: ['./master-list-view.component.css']\n})\nexport class MasterListViewComponent implements OnInit {\n\n\tcontent: string = \"\";\n\tlist: MasterList = null;\n\n\t/*\n\t * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute) {\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tif (oid != null) {\n\t\t\tthis.content = \"PUB\";\n\t\t}\n\n\t\tthis.service.getMasterList(oid).then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tif (list.read) {\n\t\t\t\tthis.content = \"EXP\";\n\t\t\t}\n\t\t});\n\t}\n\n\tonViewMetadata(event: any): void {\n\t\tevent.preventDefault();\n\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h3>{{list.displayLabel.localizedValue}}</h3>\n                    </div>\n                </div>\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h5>\n                            <b> <a href=\"#\" (click)=\"onViewMetadata($event)\"><localize key=\"masterlist.view\"></localize> </a></b>\n                        </h5>\n                    </div>\n                </div>\n                \n                <div>\n                    <a *ngIf=\"list && list.read\" style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'EXP'}\" (click)=\"renderContent('EXP')\"><localize key=\"lists.exploratory.link.label\"></localize></a>\n                    <a style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'PUB'}\" (click)=\"renderContent('PUB')\"><localize key=\"lists.published.link.label\"></localize></a>\n                </div>\n\n                <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n                    <published-master-list-history *ngIf=\"list && content === 'PUB'\" [oid]=\"list.oid\"></published-master-list-history>\n                    <master-list-history *ngIf=\"list && content === 'EXP'\" [oid]=\"list.oid\"></master-list-history>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { interval } from 'rxjs';\n\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob, ScheduledJobOverview, PaginationPage } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\n@Component({\n\tselector: 'scheduled-jobs',\n\ttemplateUrl: './scheduled-jobs.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class ScheduledJobsComponent implements OnInit {\n\tmessage: string = null;\n\n\tactiveJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompleteJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tisViewAllOpen: boolean = false;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.onActiveJobsPageChange(1);\n\n\t\tthis.pollingData = interval(1000).subscribe(() => {\n\t\t\tthis.activeTimeCounter++\n\t\t\tthis.completeTimeCounter++\n\n\t\t\tif (this.isViewAllOpen) {\n\t\t\t\tif (this.activeTimeCounter >= 4) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t\tif (this.completeTimeCounter >= 7) {\n\t\t\t\t\tthis.onCompleteJobsPageChange(this.completeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.completeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.activeTimeCounter >= 2) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.pollingData.unsubscribe();\n\t}\n\n\tformatJobStatus(job: ScheduledJobOverview) {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PaginationPage): void {\n\n\t\tpage.results.forEach(job => {\n\n\t\t\tlet stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{ \"label\": this.localizeService.decode(\"scheduler.step.fileImport\"), \"status\": \"COMPLETE\" },\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.staging\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.validation\"),\n\t\t\t\t\t\t\"status\": job.stage === \"VALIDATE\" || job.stage === \"VALIDATION_RESOLVE\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"VALIDATE\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.databaseImport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"IMPORT\" || job.stage === \"IMPORT_RESOLVE\" || job.stage === \"RESUME_IMPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tjob = job as ScheduledJobOverview;\n\t\t\tjob.stepConfig = stepConfig;\n\t\t});\n\n\t}\n\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"NEW\", \"VALIDATE\", \"VALIDATION_RESOLVE\", \"IMPORT\", \"IMPORT_RESOLVE\", \"RESUME_IMPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\tonViewAllCompleteJobs(): void {\n\t\tthis.onCompleteJobsPageChange(1);\n\n\t\tthis.isViewAllOpen = true;\n\t}\n\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-history/', code])\n\t}\n\n\tonActiveJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJobs(this.activeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.activeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.activeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCompleteJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getCompletedScheduledJobs(this.completeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.completeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.completeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\tonCancelScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(job.configuration).then(response => {\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"py-5\">\n            <h2>\n                <localize key=\"scheduledjobs.title\"></localize>\n            </h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n                <ul class=\"list-group\">\n                    <div class=\"solid-table-wrapper\">\n                        <table class=\"table table-striped\"> \n                            <thead > \n                                <tr style=\"height: 56px;\"> \n                                    <th style=\"vertical-align: middle;\">\n                                        <localize key=\"scheduledjobs.jobs.table.header\"></localize>                                      \n                                    </th> \n                                </tr> \n                            </thead> \n                            <tbody> \n                                <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                                <tr *ngFor=\"let job of activeJobsPage.results | paginate: { id: 'activeJobs', itemsPerPage: activeJobsPage.pageSize, currentPage: activeJobsPage.pageNumber, totalItems: activeJobsPage.count }\" >\n                                    <td style=\"vertical-align: middle;\">\n                                        <div class=\"wrapper\">\n                                            <i style=\"position: absolute;font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            <p style=\"padding-left: 60px;\">\n                                                <span style=\"display: block;\">\n                                                    {{job.fileName}}\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    <span class=\"date-string-display\">\n                                                        {{formatDate(job.createDate)}}\n                                                    </span>\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    {{formatJobStatus(job)}}\n                                                </span>\n                                            </p>\n\n                                            <step-indicator [steps]=\"job.stepConfig\"></step-indicator>\n\n                                        </div>\n                                    </td> \n                                    <td *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;vertical-align: middle;\">  \n\n                                        <div class=\"button-holder\" style=\"float: right;\">\n                                            <a [routerLink]=\"'/registry/job/' + job.historyId\" routerLinkActive=\"active\">\n                                                <button class=\"btn btn-primary\" role=\"button\">\n                                                    <localize *ngIf=\"job.stage === 'IMPORT_RESOLVE' || job.stage === 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.fix.problems.button\"></localize>\n                                                    <localize *ngIf=\"job.stage != 'IMPORT_RESOLVE' && job.stage != 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.detail.button\"></localize>\n                                                </button>\n                                            </a>\n                                            <button *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\" type=\"button\" (click)=\"onCancelScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n                                                <localize key=\"etl.import.cancel.openModal\"></localize>\n                                            </button>\n                                            <button *ngIf=\"job.stage === 'IMPORT_RESOLVE'\" type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n\t\t\t\t\t\t\t\t\t\t\t\t                    </button>\n                                        </div>\n                                    </td> \n                                </tr> \n\n                            </tbody> \n                        </table>\n                        <div *ngIf=\"activeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                            <pagination-controls id=\"activeJobs\" (pageChange)=\"onActiveJobsPageChange($event)\"></pagination-controls>\n                        </div>\n                    </div>\n\n                    <div class=\"solid-table-wrapper\">\n\t                    <table class=\"table table-striped\"> \n\t                      <thead> \n\t                        <tr> \n\t                          <th style=\"width:40%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.completedjobs.table.header\"></localize>                                      \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.status\"></localize>                   \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importedRecords\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importStartDate\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importEndDate\"></localize>                   \n                            </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length < 1\" style=\"border-bottom: none; width:15%\">\n\t                            <button type=\"submit\" (click)=\"onViewAllCompleteJobs()\" class=\"btn btn-default pull-right\" role=\"button\">\n\t                              <localize key=\"scheduledjobs.view.completed.jobs.button\"></localize>\n\t                            </button>\n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"border-bottom: none; width:0%\">\n                            </th>\n\t                        </tr> \n\t                      </thead> \n\t                      <tbody> \n\t                      <!-- <tr *ngFor=\"let job of completedJobs; let i = index;\">  -->\n\t                      <tr *ngFor=\"let job of completeJobsPage.results | paginate: { id: 'completeJobs', itemsPerPage: completeJobsPage.pageSize, currentPage: completeJobsPage.pageNumber, totalItems: completeJobsPage.count }\" >\n\t                        <td style=\"width:40%; vertical-align: middle;\">\n\t                          <div class=\"wrapper\">\n                              <i class=\"fa fa-file\" style=\"position: absolute;\" aria-hidden=\"true\"></i>\n                              <p style=\"padding-left: 30px;margin: 0;\">{{job.fileName}}</p>\n\t                          </div>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n\t                          <p style=\"padding-left: 0px;margin: 0;\">{{formatJobStatus(job)}}</p>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n                            <p style=\"padding-left: 0px;margin: 0;\">{{job.importedRecords}}</p>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                              <span class=\"date-string-display\">\n                                {{formatDate(job.createDate)}}\n                              </span>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                            <span class=\"date-string-display\">\n                                {{formatDate(job.lastUpdateDate)}}\n                            </span>\n                          </td>\n\t                        <td *ngIf=\"isAdmin || isMaintainer\" style=\"width:15%;text-align: right;vertical-align: middle;\">                                \n\t                           <!-- \n\t                           <button type=\"submit\" (click)=\"onView(job.historyId)\" class=\"btn btn-primary\" role=\"button\"><localize key=\"scheduledjobs.detail.button\"></localize></button>\n\t                           -->\n\t                           <!-- <button type=\"submit\" (click)=\"onDelete(job)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"modal.button.delete\"></localize></button> -->\n\t                        </td>\n\t                       </tr> \n\t                      </tbody> \n\t                    </table>\n\t\n\t                    <div *ngIf=\"completeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls id=\"completeJobs\" (pageChange)=\"onCompleteJobsPageChange($event)\"></pagination-controls>\n\t                    </div>\n                    </div>\n                </ul>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { JobConflictModalComponent } from './conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './conflict-widgets/reupload-modal.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'job',\n\ttemplateUrl: './job.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class JobComponent implements OnInit {\n\tmessage: string = null;\n\tjob: ScheduledJob;\n\tallSelected: boolean = false;\n\thistoryId: string = \"\";\n\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\ttimeCounter: number = 0;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tisPolling: boolean = false;\n\thasRowValidationProblem: boolean = false;\n\n\tnotifier: WebSocketSubject<{ type: string, message: string }>;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService,\n\t\tprivate router: Router, private route: ActivatedRoute,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.historyId = this.route.snapshot.params[\"oid\"];\n\n\t\tthis.onPageChange(1);\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'IMPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\tformatAffectedRows(rows: string) {\n\t\treturn rows.replace(/,/g, \", \");\n\t}\n\n\tformatValidationResolve(obj: any) {\n\t\treturn JSON.stringify(obj);\n\t}\n\n\tonProblemResolved(problem: any): void {\n\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\tlet pageConflict = this.page.results[i];\n\n\t\t\tif (pageConflict.id === problem.id) {\n\t\t\t\tthis.page.results.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFriendlyProblemType(probType: string): string {\n\n\t\tif (probType === \"net.geoprism.registry.io.ParentCodeException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.PostalCodeLocationException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.postal.code.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.AmbiguousParentException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.multi.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.InvalidGeometryException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.invalid.geom.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.DataNotFoundException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.datanotfound\");\n\t\t}\n\n\t\tif (\n\t\t\tprobType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.permission\");\n\t\t}\n\n\t\t// if(probType === \"net.geoprism.registry.io.TermValueException\"){\n\t\t//   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n\t\t// }\n\n\t\tif (\n\t\t\tprobType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.duplicate.data.lookup\");\n\t\t}\n\n\t\treturn probType;\n\t}\n\n\n\tonEdit(problem: any): void {\n\t\t// this.router.navigate( ['/registry/master-list-history/', code] )\n\n\t\tthis.bsModalRef = this.modalService.show(JobConflictModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.problem = problem;\n\t\tthis.bsModalRef.content.job = this.job;\n\t\tthis.bsModalRef.content.onConflictAction.subscribe(data => {\n\t\t\tif (data.action === 'RESOLVED') {\n\t\t\t\tthis.onProblemResolved(data.data);\n\t\t\t}\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJob(this.historyId, this.page.pageSize, pageNumber, true).then(response => {\n\n\t\t\tthis.job = response;\n\n\t\t\tif (this.job.stage === 'IMPORT_RESOLVE') {\n\t\t\t\tthis.page = this.job.importErrors;\n\t\t\t}\n\t\t\telse if (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.page = this.job.problems;\n\n\t\t\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\t\t\tlet problem = this.page.results[i];\n\n\t\t\t\t\tif (problem.type === 'RowValidationProblem') {\n\t\t\t\t\t\tthis.hasRowValidationProblem = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonViewAllActiveJobs(): void {\n\n\t}\n\n\tonViewAllCompleteJobs(): void {\n\n\t}\n\n\ttoggleAll(): void {\n\t\tthis.allSelected = !this.allSelected;\n\n\t\tthis.job.importErrors.results.forEach(row => {\n\t\t\trow.selected = this.allSelected;\n\t\t})\n\t}\n\n\tonReuploadAndResume(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ReuploadModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.job = this.job;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string): void {\n\t\tif (this.page.results.length == 0) {\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs']);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tif (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.validationDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.validationButton\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t});\n\t\t}\n\t}\n\n\tonCancelScheduledJob(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(this.job.configuration).then(response => {\n\t\t\t\t//this.bsModalRef.hide()\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                                <strong>{{job.fileName}}</strong>\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              <span class=\"date-string-display\">\n                                    {{formatDate(job.createDate)}}\n                              </span>\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.importedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.importedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n                <div class=\"col-md-5 order-md-1\">\n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'VALIDATION_RESOLVE'\" style=\"display:block; margin: 10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.validation.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.reimport.button\"></localize>\n                    </button>\n                  </div>\n                  \n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'IMPORT_RESOLVE'\" style=\"display:block; margin:10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.import.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                    </button>\n                  </div>\n      \n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && !hasRowValidationProblem\" class=\"button-holder\" style=\"display:block; margin:10px;text-align: right;\">\n                      <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <localize *ngIf=\"job && job.stage === 'VALIDATION_RESOLVE'\" key=\"etl.import.resume.openModal\"></localize>\n                        <span *ngIf=\"job && job.stage === 'IMPORT_RESOLVE'\">\n                          <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <div *ngIf=\"hasRowValidationProblem\"class=\"button-holder\" style=\"display:block; margin:10px;\">\n                    <button type=\"submit\" (click)=\"onReuploadAndResume(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <span>\n                          <localize key=\"scheduledjobs.reupload.resume.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <!--\n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && job.stage === 'VALIDATION_RESOLVE'\" class=\"button-holder\" style=\"display:block; margin:10px;\">\n                      <button type=\"button\" (click)=\"onCancelScheduledJob(job.historyId)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"etl.import.cancel.openModal\"></localize></button>\n                  </div>\n                  -->\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr>\n\t                                <!-- <th class=\"label-column\">\n\t                                  <div class=\"check-block\">\n\t                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n\t                                     <span></span>\n\t                                   </div>\n\t                                  </div>\n\t                                </th> -->\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"scheduledjobs.import.table.problem.type.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n\t                                    \n\t                                </th>\n                                </tr>\n                            </thead>\n                            <thead *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n                              <tr>\n                                <!-- <th class=\"label-column\">\n                                  <div class=\"check-block\">\n                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n                                     <span></span>\n                                   </div>\n                                  </div>\n                                </th> -->\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.problem.type.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.label.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  \n                                </th>\n                              </tr>\n                            </thead>\n\n                            <tbody *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <!-- <tr *ngFor=\"let row of job.errors.page; let i = index;\"> -->\n                                    <!-- <td class=\"label-column\">\n                                      <boolean-field [(value)]=\"row.selected\"></boolean-field>\n                                    </td> -->\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{getFriendlyProblemType(row.exception.type)}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.exception.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                    <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n                                        <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                            <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n\n                            <tbody *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n\t                            <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n\t                             <!-- <td class=\"label-column\">\n\t                               <boolean-field [(value)]=\"row.selected\"></boolean-field>\n\t                             </td> -->\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n\t                               <p>{{row.type}}</p> \n\t                             </td>\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p *ngIf=\"row.type === 'RowValidationProblem'\">{{row.exception.message}}</p>\n                                 <p *ngIf=\"row.type === 'ParentReferenceProblem' || row.type === 'TermReferenceProblem'\">{{row.label}}</p>\n                               </td>\n                               <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p>{{formatAffectedRows(row.affectedRows)}}</p>\n                               </td>\n\t                             <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n\t                              <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                    <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n\t                              </button>\n\t                             </td>\n\t                            </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ScheduledJobOverview } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'job-conflict-modal',\n    templateUrl: './job-conflict-modal.component.html',\n    styleUrls: []\n} )\nexport class JobConflictModalComponent implements OnInit {\n    message: string = null;\n    problem: any;\n    job: ScheduledJobOverview;\n    \n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef ) {\n      this.onConflictAction = new Subject();\n    }\n\n    ngOnInit(): void {\n      \n    }\n    \n    onProblemResolvedListener(problem: any): void {\n      this.onConflictAction.next({action:\"RESOLVED\", data: problem});\n    }\n\n    onCancel(): void {\n        this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"scheduledjobs.problemdetail.modal.title\"></localize>\n        </h2>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            \n            <div *ngIf=\"problem && job && job.stage === 'IMPORT_RESOLVE'\">\n                <import-problem-widget (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\"></import-problem-widget>\n            </div>\n            <div *ngIf=\"problem && job && job.stage === 'VALIDATION_RESOLVE'\">\n              <parent-reference-problem-widget *ngIf=\"problem.type === 'ParentReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></parent-reference-problem-widget>\n              <term-reference-problem-widget *ngIf=\"problem.type === 'TermReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></term-reference-problem-widget>\n              <row-validation-problem-widget *ngIf=\"problem.type === 'RowValidationProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></row-validation-problem-widget>\n            </div>\n            \n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize key=\"io.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { GeoObjectType, MasterList, ScheduledJob, ImportError } from '@registry/model/registry';\n\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'import-problem-widget',\n    templateUrl: './import-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ImportProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: ImportError;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n    }\n\n    onEditGeoObject(): void {\n        let editModal = this.modalService.show( GeoObjectEditorComponent, {\n            backdrop: true,\n            ignoreBackdropClick: true\n        } );\n\n        editModal.content.configureFromImportError(this.problem, this.job.historyId, this.job.configuration.startDate, true);\n        editModal.content.setMasterListId( null );\n        editModal.content.setOnSuccessCallback(() => {\n\n          this.onProblemResolved.emit(this.problem);\n          this.bsModalRef.hide()\n            \n        } );\n    }\n\n    getFriendlyProblemType(probType: string): string {\n\n        if(probType === \"net.geoprism.registry.io.ParentCodeException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.PostalCodeLocationException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.AmbiguousParentException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.multi.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.InvalidGeometryException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.invalid.geom.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.DataNotFoundException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.datanotfound\" );\n        }\n        \n        if(\n            probType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.permission\" );\n        }\n\n        // if(probType === \"net.geoprism.registry.io.TermValueException\"){\n        //   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        // }\n        if(\n          probType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.duplicate.data.lookup\" );\n        }\n\n        return probType;\n    }\n\n    onSubmit(): void {\n\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide();\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>:\n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row equal\" style=\"display: flex;display: -webkit-flex;flex-wrap: wrap;\">\n                <div class=\"col-md-6\" style=\"padding-right: 5px;\">\n                    <div style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;\">\n                        <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{getFriendlyProblemType(problem.exception.type)}}</p>\n\n                        <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{problem.exception.message}}</p>\n\n                        <!-- <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                        <p>TODO: how to address the issue.</p> -->\n                    </div>\n                </div>\n                <div class=\"col-md-6\" style=\"padding-left: 5px;\">\n                    <div style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;text-align: center;\">\n                        <button style=\"width: 90%;\" type=\"submit\" (click)=\"onEditGeoObject()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"scheduledjobs.editGeoObject\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'parent-reference-problem-widget',\n    templateUrl: './parent-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ParentReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.parentProblem.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p>\n                      <localize key=\"etl.parentProblem.toResolve\"></localize>\n                    </p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"etl.problem.parent.context\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <div *ngIf=\"problem.context.length > 0\" style=\"margin-top:10px;\">\n\t\t                    <ol *ngFor=\"let con of problem.context\">\n\t\t\t\t\t\t\t\t          <li>{{con.label}} ({{con.type}})</li>\n\t\t\t\t\t\t\t\t        </ol>\n\t\t\t\t\t\t\t        </div>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.parent.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"parentSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem.typeCode, problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"name\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"problem.parent == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n    selector: 'term-reference-problem-widget',\n    templateUrl: './term-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class TermReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    termId: string = null;\n    searchLabel: string;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( conflict: any ): Observable<any> {\n        return Observable.create(( observer: any ) => {\n            this.iService.getTermSuggestions( conflict.mdAttributeId, this.searchLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n    \n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        classifierId: this.termId,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div *ngIf=\"problem\" class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.problem.termReference.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.termReference.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.attributeLabel\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{problem.attributeLabel}}</span>\n                    </div>\n                  </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.termReference.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"termSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"label\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"termId == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'row-validation-problem-widget',\n    templateUrl: './row-validation-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class RowValidationProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    formatAffectedRows(rows: string)\n    {\n      return rows.replace(/,/g, \", \");\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\"><localize key=\"etl.problem.rowValidation.message\"></localize></p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.rowValidation.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{formatAffectedRows(problem.affectedRows)}}</span>\n                    </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.rowValidation.message\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.exception.message}}</span>\n\t                  </div>\n\t                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ModalTypes } from '@shared/model/modal';\nimport { LocalizationService, EventService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { ScheduledJob } from '@registry/model/registry';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'reupload-modal',\n    templateUrl: './reupload-modal.component.html',\n    styleUrls: []\n} )\nexport class ReuploadModalComponent {\n  @Input() title: string = this.localizeService.decode(\"reuploadmodal.title\");\n\n  @Input() message: string = this.localizeService.decode(\"reuploadmodal.message\");\n  \n  @Input() data: any;\n  \n  @Input() submitText: string = this.localizeService.decode(\"reuploadmodal.import\");\n  \n  @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n  \n  @Input() type: ModalTypes = ModalTypes.warning;\n  \n  @Input() job: ScheduledJob;\n  \n  @ViewChild( 'myFile' )\n  fileRef: ElementRef;\n  \n  /*\n   * File uploader\n   */\n  uploader: FileUploader;\n  \n  errorMessage: string;\n  \n  /*\n   * Called on confirm\n   */\n  public onConfirm: Subject<any>;\n  \n  constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService, private eventService: EventService ) { }\n  \n  ngOnInit(): void {\n    this.onConfirm = new Subject();\n    \n    let options: FileUploaderOptions = {\n      queueLimit: 1,\n      removeAfterUpload: true,\n      url: acp + '/etl/reimport'\n    };\n    \n    this.uploader = new FileUploader( options );\n    this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n        form.append( 'json', JSON.stringify(this.job.configuration) );\n    };\n    this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n        this.eventService.start();\n    };\n    this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n        this.fileRef.nativeElement.value = \"\";\n        this.eventService.complete();\n    };\n    this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.onConfirm.next( this.data );\n      this.bsModalRef.hide();\n    };\n    this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.error( JSON.parse( response ) );\n    }\n  }\n  \n  toString(data: any): string\n  {\n    return JSON.stringify(data);\n  }\n  \n  confirm(): void {\n    if ( this.uploader.queue != null && this.uploader.queue.length > 0 ) {\n      this.uploader.uploadAll();\n    }\n    else {\n      this.error( { message: this.localizeService.decode( 'io.missing.file' ), error: {} } );\n    }\n  }\n  \n  public error( err: any ): void {\n    this.errorMessage = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div class=\"modal-body\">\n\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">{{errorMessage}}</div>\n\n  <div class=\"heading\">\n    <h3>{{title}}</h3>\n  </div>\n\n  <div>{{message}}</div>\n\n  <form *ngIf=\"job\" style=\"margin-top: 30px;\" #form=\"ngForm\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 text-right\" for=\"file\">\n        <localize *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n        <localize *ngIf=\"job.configuration.formatType === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n      </label>\n      <div class=\"col-md-9\">\n        <input *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".zip\" required />\n        <input *ngIf=\"job.configuration.formatType === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".xlsx,.zip\" required />\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\"\n          style=\"padding: 4px 18px;\">\n          <span>{{cancelText}}</span>\n        </button>\n        <button type=\"button\" (click)=\"confirm()\"\n          [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n          aria-disabled=\"false\" style=\"padding: 4px 18px;\">\n          <span>{{submitText}}</span>\n        </button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { TaskService } from '@registry/service';\nimport { GeoObjectType, PaginationPage } from '@registry/model/registry';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'task-viewer',\n\ttemplateUrl: './task-viewer.component.html',\n\tstyleUrls: ['./task-viewer.component.css'],\n\tproviders: [DatePipe]\n})\n\nexport class TaskViewerComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tinProgressTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompletedTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tisViewAllOpen: boolean = false;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tconstructor(private taskService: TaskService, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.onInProgressTasksPageChange(1);\n\t}\n\n\tupper(str: string): string {\n\t\tif (str != null) {\n\t\t\treturn str.toUpperCase();\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tonInProgressTasksPageChange(pageNumber: any): void {\n\t\tthis.taskService.getMyTasks(pageNumber, this.inProgressTasks.pageSize, 'UNRESOLVED').then(page => {\n\t\t\tthis.inProgressTasks = page;\n\t\t});\n\t}\n\n\tonCompletedTasksPageChange(pageNumber: any): void {\n\n\t\tthis.taskService.getMyTasks(pageNumber, this.completedTasks.pageSize, 'RESOLVED').then(page => {\n\t\t\tthis.completedTasks = page;\n\t\t});\n\t}\n\n\tonCompleteTask(task: any): void {\n\t\t// this.isViewAllOpen = true;\n\n\t\tthis.taskService.completeTask(task.id).then(() => {\n\n\t\t\tconst index = this.inProgressTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.inProgressTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.push(task);\n\t\t\t// this.onCompletedTasksPageChange(1);\n\t\t});\n\t}\n\n\tonMoveTaskToInProgress(task: any): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.taskService.setTaskStatus(task.id, 'UNRESOLVED').then(() => {\n\n\t\t\tconst index = this.completedTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\tthis.inProgressTasks.results.push(task);\n\t\t});\n\t}\n\n\tonViewAllCompletedTasks(): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.onCompletedTasksPageChange(1);\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n    <message></message>\n\n    <h2>\n      <localize key=\"tasks.openTasksTitle\"></localize>\n    </h2>\n    <hr>\n  \n\t\t<div class=\"row\" *ngIf=\"inProgressTasks.results.length > 0\">\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\">\n\t        <div *ngFor=\"let task of inProgressTasks.results | paginate: { id: 'inProgressTasks', itemsPerPage: inProgressTasks.pageSize, currentPage: inProgressTasks.pageNumber, totalItems: inProgressTasks.count }\" class=\"panel panel-default\">\n\t          <div class=\"panel-heading\">\n\t            <h4>{{upper(task.title)}}</h4>\n\t          </div>\n\t          \n\t          <div class=\"panel-body\">\n\t            <div class=\"row\">\n\t             <div class=\"col-md-9\">\n\t              <label><localize key=\"tasks.taskMessage\"></localize></label>\n\t              <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n\t              <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                  <span class=\"date-string-display\">\n                      {{formatDate(task.createDate)}}\n                  </span>\n\t             </div>\n\t             <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" checked id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                \n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" (click)=\"onCompleteTask(task)\" type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n\t             </div>\n\t            </div>\n\t          </div>\n\t        </div>\n\t        <div *ngIf=\"inProgressTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"inProgressTasks\" (pageChange)=\"onInProgressTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n      </div>\n\t\t</div>\n\t\t\n\t\t\n\t\t<div class=\"row\">\n\t\t<h2 class=\"col-md-9\">\n      <localize key=\"tasks.completedTasksTitle\"></localize>\n    </h2>\n    <button class=\"col-md-3\" style=\"margin-top:20px;\" type=\"submit\" (click)=\"onViewAllCompletedTasks()\" class=\"btn btn-default pull-right\" role=\"button\">\n      <localize key=\"tasks.viewCompletedTasksButton\"></localize>\n    </button>\n    </div>\n    <hr>\n  \n    <div class=\"row\" >\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\" *ngIf=\"isViewAllOpen && completedTasks.results.length > 0\">\n          <div *ngFor=\"let task of completedTasks.results | paginate: { id: 'completedTasks', itemsPerPage: completedTasks.pageSize, currentPage: completedTasks.pageNumber, totalItems: completedTasks.count }\" class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h4>{{upper(task.title)}}</h4>\n            </div>\n            \n            <div class=\"panel-body\">\n              <div class=\"row\">\n               <div class=\"col-md-9\">\n                <label><localize key=\"tasks.taskMessage\"></localize></label>\n                <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                <span class=\"date-string-display\" style=\"margin-right:30px;\">\n                   {{formatDate(task.createDate)}}\n                </span>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.completeDateLabel\"></localize></label>\n                <span class=\"date-string-display\" >\n                   {{formatDate(task.completedDate)}}\n                </span>\n               </div>\n               <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" (click)=\"onMoveTaskToInProgress(task)\" id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" checked type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n               </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"completedTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"completedTasks\" (pageChange)=\"onCompletedTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n        <div class=\"content-wrapper\" *ngIf=\"completedTasks.results.length === 0 && isViewAllOpen\">\n          <p style=\"font-style:italic;color:grey;\"><localize key=\"tasks.no.completed.tasks.message\"></localize></p>\n        </div>\n      </div>\n    </div>\n\n\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { SynchronizationConfig } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { SynchronizationConfigModalComponent } from './synchronization-config-modal.component';\n\n@Component({\n\tselector: 'synchronization-config-manager',\n\ttemplateUrl: './synchronization-config-manager.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigManagerComponent implements OnInit {\n\tmessage: string = null;\n\n\tpage: PageResult<SynchronizationConfig> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 20\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: SynchronizationConfigService, private lService: LocalizationService, private router: Router, private modalService: BsModalService) { }\n\n\tngOnInit(): void {\n\t\tthis.onPageChange(1);\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tthis.service.getPage(pageNumber, this.page.pageSize).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcreate(): void {\n\t\tthis.service.edit(null).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(null, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonEdit(config: SynchronizationConfig): void {\n\n\t\tthis.service.edit(config.oid).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(response.config, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonRemove(config: SynchronizationConfig): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.lService.decode(\"confirm.modal.verify.delete\") + ' [' + config.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.submitText = this.lService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(() => {\n\t\t\tthis.service.remove(config.oid).then(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tonView(config: SynchronizationConfig): void {\n\t\tthis.router.navigate(['/registry/synchronization-config/', config.oid])\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div class=\"heading\">\n      <h2>\n        <localize key=\"synchronization.config.manager\"></localize>\n      </h2>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12 order-md-1\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th style=\"width: 70%;\"><localize key=\"synchronization.config.label\"></localize></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let config of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"clickable\">\n              <td style=\"width: 70%; vertical-align: middle;\">\n                <a [routerLink]=\"'/registry/synchronization-config/' + config.oid\" routerLinkActive=\"active\"> {{config.label.localizedValue}} </a>\n              </td>\n              <td style=\"width: 30%; text-align: right;\">\n                <button type=\"submit\" (click)=\"onView(config)\" class=\"btn btn-primary\" role=\"button\">\n                  <localize key=\"modal.button.view\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onEdit(config)\" class=\"btn btn-default\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.edit\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onRemove(config)\" class=\"btn btn-danger\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.delete\"></localize>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n\n        <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n          <div class=\"col-md-6\">\n            <button type=\"submit\" (click)=\"create()\" class=\"btn btn-primary\" role=\"button\">\n              <localize key=\"hierarchy.management.button.create\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { SynchronizationConfig, OrgSyncInfo, GeoObjectType } from '@registry/model/registry';\nimport { SynchronizationConfigService, RegistryService } from '@registry/service';\nimport { CustomAttributeConfig } from '@registry/model/sync';\n\nexport interface LevelRow {\n\tisAttributeEditor: boolean;\n\n\tlevel?: any;\n\tlevelNum?: number;\n\thasAttributes?: boolean;\n\n\tattrCfg?: GOTAttributeConfig;\n}\nexport interface GOTAttributeConfig {\n\tgeoObjectTypeCode?: string;\n\tattrs: CustomAttributeConfig[];\n}\n\n@Component({\n\tselector: 'synchronization-config-modal',\n\ttemplateUrl: './synchronization-config-modal.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigModalComponent implements OnInit {\n\tmessage: string = null;\n\n\t@ViewChild('form') form;\n\n\tconfig: SynchronizationConfig = {\n\t\torganization: null,\n\t\tsystem: null,\n\t\thierarchy: null,\n\t\tlabel: this.lService.create(),\n\t\tconfiguration: {}\n\t};\n\n\torganizations: OrgSyncInfo[] = [];\n\n\tcOrg: OrgSyncInfo = null;\n\tcSystem: { label: string, oid: string, type: string } = null;\n\n\ttypes: GeoObjectType[] = [];\n\n\tlevelRows: LevelRow[] = [];\n\t\n\torgUnitGroups: any[] = [];\n\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonSuccess: Subject<SynchronizationConfig>;\n\n\n\tconstructor(private service: SynchronizationConfigService, private registryService: RegistryService, private lService: LocalizationService, private bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tinit(config: SynchronizationConfig, organizations: OrgSyncInfo[]): void {\n\n\t\tthis.organizations = organizations;\n\n\t\tif (config != null) {\n\t\t\tthis.config = config;\n\n\t\t\tlet oIndex = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\t\tif (oIndex !== -1) {\n\t\t\t\tthis.cOrg = this.organizations[oIndex];\n\t\t\t}\n\n\t\t\tlet sIndex = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\t\tif (sIndex !== -1) {\n\t\t\t\tthis.cSystem = this.cOrg.systems[sIndex];\n\t\t\t}\n\n\t\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t\t// Get the types\t\n\t\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t\t//\tthis.types = types;\n\t\t\t\t//});\n\t\t\t\t\n\t\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n          this.types = esConfig.types;\n          this.orgUnitGroups = esConfig.orgUnitGroups;\n        }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n        });\n\n\t\t\t}\n\n\t\t\tthis.levelRows = [];\n\t\t\tfor (var i = 0; i < this.config.configuration.levels.length; ++i) {\n\t\t\t\tvar level = this.config.configuration.levels[i];\n\n\t\t\t\tvar levelRow: LevelRow = { level: level, levelNum: i, isAttributeEditor: false };\n\n\t\t\t\tif (level.attributes != null && Object.keys(level.attributes).length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\t\t\t\t}\n\n\t\t\t\tthis.levelRows.push(levelRow);\n\t\t\t}\n\t\t}\n\t}\n\n\tonOrganizationSelected(): void {\n\t\tlet index = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cOrg = this.organizations[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cOrg = null;\n\t\t\tthis.cSystem = null;\n\t\t}\n\t}\n\n\tonChangeExternalSystem(): void {\n\t\tlet index = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cSystem = this.cOrg.systems[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cSystem = null;\n\t\t}\n\n\n\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t// Get the types\t\n\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t//\tthis.types = types;\n\t\t\t//});\n\t\t\t\n\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n        this.types = esConfig.types;\n        this.orgUnitGroups = esConfig.orgUnitGroups;\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n\t\t\tif (this.config.configuration['levels'] == null) {\n\t\t\t\tvar lvl = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tgeoObjectType: null,\n\t\t\t\t\tlevel: 0\n\t\t\t\t};\n\t\t\t\tthis.config.configuration['levels'] = [lvl];\n\t\t\t\tthis.levelRows.push({ level: lvl, levelNum: 0, isAttributeEditor: false });\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tthis.types = [];\n\t\t}\n\t}\n\n\taddLevel(): void {\n\t\tvar lvl = {\n\t\t\ttype: null,\n\t\t\tgeoObjectType: null,\n\t\t\tlevel: this.config.configuration.levels.length\n\t\t};\n\t\tvar len = this.config.configuration['levels'].push(lvl);\n\t\tthis.levelRows.push({ level: lvl, levelNum: len - 1, isAttributeEditor: false });\n\t}\n\n\tremoveLevel(levelNum: number, levelRowIndex: number): void {\n\t\tif (levelNum < this.config.configuration['levels'].length) {\n\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\tif (editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex, 1);\n\n\t\t\tvar newLevelNum = 0;\n\t\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[i];\n\n\t\t\t\tlevelRow.levelNum = newLevelNum;\n\n\t\t\t\tif (!levelRow.isAttributeEditor) {\n\t\t\t\t\tnewLevelNum = newLevelNum + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.config.configuration['levels'].splice(levelNum, 1);\n\t\t}\n\t}\n\n\tgetEditorIndex(): number {\n\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\tvar levelRow = this.levelRows[i];\n\n\t\t\tif (levelRow.isAttributeEditor) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tconfigureAttributes(levelRow: any): void {\n\t\tvar editorIndex = this.getEditorIndex();\n\n\t\tif (editorIndex != -1) {\n\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\tif (editorIndex == levelRow.levelNum + 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.onSelectGeoObjectType(levelRow.level.geoObjectType, levelRow.levelNum, false);\n\t}\n\n\tgetTermOptions(attr: CustomAttributeConfig, dhis2Id: string) {\n\t\tfor (var i = 0; i < attr.dhis2Attrs.length; ++i) {\n\t\t\tvar dhis2Attr = attr.dhis2Attrs[i];\n\n\t\t\tif (dhis2Attr.dhis2Id === dhis2Id) {\n\t\t\t\treturn dhis2Attr.options;\n\t\t\t}\n\t\t}\n\t}\n\n\tonChangeAttrMapping(attr: any, newValue: string, levelRow: LevelRow) {\n\t\tif (newValue == null || newValue === \"\") {\n\t\t\tif (attr.terms != null) {\n\t\t\t\tattr.terms = {};\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var j = 0; j < levelRow.attrCfg.attrs.length; j++) {\n\t\t\tif (levelRow.attrCfg.attrs[j].name === attr.name) {\n\t\t\t\tvar attrCfgAttr: any = levelRow.attrCfg.attrs[j];\n\n\t\t\t\tif (attrCfgAttr.terms != null) {\n\t\t\t\t\tattr.terms = {};\n\n\t\t\t\t\tfor (var i = 0; i < attrCfgAttr.terms.length; ++i) {\n\t\t\t\t\t\tvar term = attrCfgAttr.terms[i];\n\n\t\t\t\t\t\tattr.terms[term.code] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tonSelectGeoObjectType(geoObjectTypeCode: string, levelRowIndex: number, isDifferentGot: boolean = true) {\n\t\tif (geoObjectTypeCode === \"\" || geoObjectTypeCode == null) {\n\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\n\t\t\tlevelRow.hasAttributes = false;\n\t\t\tlevelRow.attrCfg = null;\n\t\t\tlevelRow.level.attributes = {};\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar attrCfg = this.levelRows[levelRowIndex].attrCfg;\n\t\tif (attrCfg != null && attrCfg.geoObjectTypeCode === geoObjectTypeCode) {\n\t\t\t// Resume an editing session on attributes that we fetched previously\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex !== levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: attrCfg });\n\t\t}\n\t\telse {\n\t\t\tthis.service.getCustomAttrCfg(geoObjectTypeCode, this.config.system).then((attrs: CustomAttributeConfig[]) => {\n\t\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\t\t\t\tvar level = levelRow.level;\n\n\t\t\t\tif (isDifferentGot) {\n\t\t\t\t\tlevel.attributes = {};\n\t\t\t\t}\n\n\t\t\t\tlevelRow.attrCfg = { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs };\n\n\t\t\t\tif (editorIndex != -1 && (editorIndex === levelRowIndex + 1 || attrs.length > 0)) {\n\t\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attrs.length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\n\t\t\t\t\tfor (var i = 0; i < attrs.length; ++i) {\n\t\t\t\t\t\tvar attr = attrs[i];\n\n\t\t\t\t\t\tif (isDifferentGot || level.attributes[attr.name] == null) {\n\t\t\t\t\t\t\tlevel.attributes[attr.name] = {\n\t\t\t\t\t\t\t\tname: attr.name,\n\t\t\t\t\t\t\t\texternalId: null,\n\t\t\t\t\t\t\t\tisOrgUnitGroup: false\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (attr.terms != null && attr.terms.length > 0) {\n\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms = {};\n\n\t\t\t\t\t\t\t\tfor (var j = 0; j < attr.terms.length; ++j) {\n\t\t\t\t\t\t\t\t\tvar term = attr.terms[j];\n\n\t\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms[term.code] = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//else if (level.attributes[attr.name] != null)\n\t\t\t\t\t\t//{\n\t\t\t\t\t\t//  level.attributes[attr.name].isOrgUnitGroup = level.attributes[attr.name].isOrgUnitGroup || attr.isOrgUnitGroup || false;\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs } });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlevelRow.hasAttributes = false;\n\t\t\t\t}\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonChangeTargetType(attr: any): void {\n\t  attr.externalId = null;\n\t  \n\t  for (const key in attr.terms) {\n      if (attr.terms.hasOwnProperty(key)) {\n        attr.terms[key] = null;\n      }\n    }\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.apply(this.config).then(cfg => {\n\n\t\t\tthis.onSuccess.next(cfg);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcancel(): void {\n\n\t\tif (this.config.oid != null) {\n\t\t\tthis.service.unlock(this.config.oid).then(() => {\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"synchronization.config.title\"></localize>\n    </h2>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n\n    <fieldset>\n      <div class=\"row-holder\" *ngFor=\"let localeValue of config.label.localeValues\">\n        <div class=\"label-holder\">\n          <label> <localize key=\"synchronization.config.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n          </label>\n        </div>\n        <div class=\"holder\">\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.organization\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.organization\" name=\"organization\" (change)='onOrganizationSelected()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n      <div *ngIf=\"cOrg != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.hierarchy\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.hierarchy\" name=\"hierarchy\" [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of cOrg.hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"config.hierarchy != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.system\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.system\" name=\"system\" (change)='onChangeExternalSystem()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let system of cOrg.systems\" [value]=\"system.oid\">{{system.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"row-holder\" *ngIf=\"cSystem != null && cSystem.type === 'DHIS2ExternalSystem'\">\n\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.units\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"list-table-wrapper\">\n            <table id=\"manage-systems-table\" class=\"list-table table table-bordered\">\n              <thead>\n                <tr>\n                  <th style=\"width:3%\">\n                    <localize key=\"settings.external.synchronization.level.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                  </th>\n                  <th style=\"width:17%\">\n                    <localize key=\"synchronization.config.orgUnitGroup\"></localize>\n                  </th>\n                  <th style=\"width:25%; text-align: center;\">\n                    <localize key=\"settings.external.synchronization.actions.label\"></localize>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let levelRow of levelRows; let i = index;\" [style.background-color]=\"levelRow.isAttributeEditor === false ? '#F7F7F7' : ''\">\n                  <td style=\"width:3%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <label style=\"padding: 10px 0; margin: 0;\"><localize key=\"sync.level.label\"></localize> {{levelRow.levelNum + 1}}</label>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.geoObjectType\" (change)=\"onSelectGeoObjectType(levelRow.level.geoObjectType, i)\" [name]=\"'geoObjectType' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label.localizedValue}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.type\" [name]=\"'type' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option value=\"ORG_UNITS\"><localize key=\"synchronization.config.units\"></localize></option>\n                      <option value=\"RELATIONSHIPS\"><localize key=\"synchronization.config.relationships\"></localize></option>\n                      <option value=\"ALL\"><localize key=\"synchronization.config.all\"></localize></option>\n                    </select>\n                  </td>\n                  <td style=\"width:17%\" *ngIf=\"levelRow.isAttributeEditor === false && orgUnitGroups.length > 0\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.orgUnitGroupId\" [name]=\"'group' + levelRow.levelNum\">\n                      <option></option>\n                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <a style=\"padding: 10px;\" (click)=\"removeLevel(levelRow.levelNum, i)\" [title]=\"'button.delete.helptext' | localize\">\n\t\t\t\t\t\t\t\t\t      <icon class=\"fa fa-trash-o ico-remove\"></icon>\n\t\t\t\t\t\t\t\t\t      <label style=\"cursor:pointer; margin-left:9px;\"><localize key=\"sync.level.delete\"></localize></label>\n\t\t\t\t\t\t\t\t\t    </a> \n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n                      <a *ngIf=\"levelRow.hasAttributes\" style=\"padding: 10px;\" (click)=\"configureAttributes(levelRow)\" [title]=\"'sync.attr.configureAttributes.helptext' | localize\">\n                        <icon class=\"fa fa-edit\"></icon>\n                        <label style=\"cursor:pointer; margin-left:3px;\"><localize key=\"sync.attr.configureAttributes\"></localize></label>\n                      </a> \n                    </div>\n\t\t\t\t\t\t\t\t\t</td>\n                  <td colspan=\"4\" *ngIf=\"levelRow.isAttributeEditor === true\">\n                    <h4>Attributes</h4>\n\t                  <table class=\"table\">\n\t                    <thead>\n\t                      <tr>\n\t                        <th></th>\n\t                      </tr>\n\t                    </thead>\n\t                    <tbody>\n\t                      <tr *ngFor=\"let attr of levelRow.attrCfg.attrs\">\n\t                        <td class=\"row-holder\">\n\t                          <table class=\"row\" style=\"width:80%; margin-left:80px; margin-top:15px; margin-bottom: 10px;\">\n\t                            <thead>\n\t                              <tr>\n\t                                <th style=\"width:25%\">\n\t                                  <label><localize key=\"sync.attr.sourceAttribute\"></localize></label>\n\t                                </th>\n\t                                <th style=\"width:25%\">\n                                    <label><localize key=\"sync.attr.type\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label *ngIf=\"attr.type === 'term'\"><localize key=\"sync.attr.targetTypeHeader\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label>\n                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.targetAttribute\"></localize>\n                                    </label>\n                                  </th>\n\t                              </tr>\n\t                            </thead>\n\t                            <tbody>\n\t                              <tr>\n\t                                <td><label style=\"color:#999;\">{{attr.label}}</label></td>\n\t                                <td>\n\t                                  <label style=\"color:#999;\">{{attr.typeLabel}}</label>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type === 'term'\" style=\"margin-right:20px;\">\n\t                                  <select style=\"width:95%\" *ngIf=\"attr.type === 'term'\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" (change)=\"onChangeTargetType(levelRows[i-1].level.attributes[attr.name])\" [name]=\"'isOrgUnitGroup' + i + attr.name\">\n                                      <option [ngValue]=\"false\"><localize key=\"sync.attr.targetTypeOptionSet\"></localize></option>\n                                      <option [ngValue]=\"true\"><localize key=\"sync.attr.targetTypeOrgUnitGroup\"></localize></option>\n                                    </select>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type !== 'term'\" style=\"float:right; margin-right:20px;\">\n\t                                  <label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label>\n\t                                </td>\n\t                                <td>\n\t                                  <select *ngIf=\"attr.dhis2Attrs.length > 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].externalId\" [ngModelOptions]=\"{standalone: true}\" (change)=\"onChangeAttrMapping(levelRows[i-1].level.attributes[attr.name], levelRows[i-1].level.attributes[attr.name].externalId, levelRow)\">\n\t                                    <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                    <option [value]=\"dhis2Attr.dhis2Id\" *ngFor=\"let dhis2Attr of attr.dhis2Attrs\">\n\t                                      {{dhis2Attr.name}}\n\t                                    </option>\n\t                                  </select>\n\t                                  <label *ngIf=\"attr.dhis2Attrs.length == 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" style=\"color:#999;\"><localize key=\"sync.noValid\"></localize></label>\n\t                                </td>\n\t                              </tr>\n\t                            </tbody>\n\t                          </table>\n\t                          <div *ngIf=\"(levelRows[i-1].level.attributes[attr.name].externalId != null && levelRows[i-1].level.attributes[attr.name].externalId.length > 0) || levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\">\n\t\t                          <table *ngFor=\"let term of attr.terms\" class=\"row\" style=\"width:80%; margin-left:80px;\">\n\t                              <thead>\n\t                                <tr>\n\t                                  <th style=\"width:25%\">\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label><localize key=\"sync.attr.term.cgrTerm\"></localize></label>\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <!-- To -->\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label>\n\t                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.dhis2Option\"></localize>\n\t                                      <localize *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.targetOrgUnitGroup\"></localize>\n\t                                    </label>\n\t                                  </th>\n\t                                </tr>\n\t                              </thead>\n\t                              <tbody>\n\t                                <tr>\n\t                                  <td></td>\n\t                                  <td><label style=\"color:#999;\">{{term.label}}</label></td>\n\t                                  <td style=\"float:right; margin-right:20px;\"><label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label></td>\n\t                                  <td>\n\t                                    <select *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t                                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                      <option *ngFor=\"let option of getTermOptions(attr, levelRows[i-1].level.attributes[attr.name].externalId)\" [value]=\"option.code\">\n\t                                        {{option.name}}\n\t                                      </option>\n\t                                    </select>\n\t                                    <select *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" type=\"text\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t\t\t\t                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t\t\t\t\t\t\t\t\t                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n\t\t\t\t\t\t\t\t\t                    </select>\n\t                                  </td>\n\t                                </tr>\n\t                              </tbody>\n\t                            </table>\n                            </div>\n\t                        </td>\n\t                      </tr>\n\t                    </tbody>\n\t                  </table>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"button-column\">\n                    <a class=\"fa fa-plus\" (click)=\"addLevel()\"></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          \n          </div>\n      </div>\n\n\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\"></div>\n        <div class=\"holder\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\n\nimport { SynchronizationConfig, ExportScheduledJob } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component/error-handler/error-handler';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'synchronization-config',\n\ttemplateUrl: './synchronization-config.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigComponent implements OnInit {\n\tmessage: string = null;\n\n\tconfig: SynchronizationConfig = null;\n\n\tpage: PageResult<ExportScheduledJob> = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresultSet: []\n\t};\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tconstructor(private service: SynchronizationConfigService, private lService: LocalizationService, private route: ActivatedRoute) { }\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tthis.service.get(oid).then(config => {\n\t\t\tthis.config = config;\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'DATA_EXPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\n\t\tif (this.notifier != null) {\n\t\t\tthis.notifier.complete();\n\t\t}\n\t}\n\n\tonRun(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.run(this.config.oid).then(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.config != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getJobs(this.config.oid, pageNumber, this.page.pageSize).then(response => {\n\n\t\t\t\tthis.formatStepConfig(response);\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tformatJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PageResult<ExportScheduledJob>): void {\n\n\t\tpage.resultSet.forEach((job: ExportScheduledJob) => {\n\n\t\t\tjob.stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Queued\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Connecting\"),\n\t\t\t\t\t\t\"status\": job.stage === \"CONNECTING\" || job.stage === \"CONNECTION_FAILED\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"CONNECTION_FAILED\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.DatabaseExport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"EXPORT\" || job.stage === \"EXPORT_RESOLVE\" || job.stage === \"RESUME_EXPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"CONNECTING\", \"CONNECTION_FAILED\", \"EXPORT\", \"EXPORT_RESOLVE\", \"RESUME_EXPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\" || job.status === \"FAILURE\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"row\">\n      <div *ngIf=\"config != null\" class=\"col-md-12\">\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h3>{{config.label.localizedValue}}</h3>\n          </div>\n        </div>\n\n        <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <label style=\"vertical-align: middle;\">CGR</label> \n              <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" style=\"font-size: 23px;padding: 0 7px;vertical-align: middle; color: #bdbdbd;margin-bottom: 4px;\"></i> \n              <label style=\"vertical-align: middle;\">{{config.systemLabel}}</label>\n            </div>\n            <div class=\"col-md-4\">\n              <form #myForm=\"ngForm\">\n                <div class=\"form-group text-right\" style=\"margin: 0;\">\n                  <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onRun()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" [title]=\"'synchronization.config.run' | localize\">\n                    <localize key=\"synchronization.config.run\"></localize>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div class=\"row\" *ngIf=\"config != null && config.type === 'DHIS2ExternalSystem'\">\n            <div class=\"col-md-12\">\n\n                <h4>\n                    <localize key=\"synchronization.config.units\"></localize>\n                </h4>\n                <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <localize key=\"settings.external.synchronization.level.label\"></localize>\n                        </th>\n                        <th>\n                          <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                        </th>\n                        <th style=\"text-align: right;\">\n                          <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let level of this.config.configuration['levels']; let i = index;\" >\n                        <td style=\"vertical-align: middle;\">\n                          <localize key=\"settings.external.synchronization.level.label\"></localize> {{i + 1}}\n                        </td>\n                        <td style=\"\">\n                          {{level.geoObjectType}}\n                        </td>\n                        <td style=\"text-align: right;\">\n                          <localize *ngIf=\"level.type === 'ORG_UNITS'\" key=\"synchronization.config.units\"></localize>\n                          <localize *ngIf=\"level.type === 'RELATIONSHIPS'\" key=\"synchronization.config.relationships\"></localize>\n                          <localize *ngIf=\"level.type === 'ALL'\" key=\"synchronization.config.all\"></localize>\n                        </td>\n                      </tr>\n                    </tbody>\n                </table>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n              <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                  <table class=\"table table-striped\">\n                    <thead>\n                      <tr style=\"height: 56px;\">\n                        <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                      <tr *ngFor=\"let job of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                        <td style=\"vertical-align: middle;\">\n                          <div class=\"wrapper\">\n                            <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                            <p style=\"padding-left: 60px;\">\n                              <span style=\"display: block;\"> {{job.fileName}} </span>\n                              <span style=\"display: block;\"> {{job.createDate}} </span>\n                              <span style=\"display: block;\"> {{formatJobStatus(job)}} </span>\n                              <span *ngIf=\"job.exception != null && job.exception.type != 'java.lang.RuntimeException'\" style=\"display: block;\">\n                                {{job.exception.message}}\n                              </span>\n                            </p>\n\n                            <step-indicator *ngIf=\"job.status !== 'SUCCESS' && job.status !== 'FAILURE' && job.status !== 'CANCELED'\" [steps]=\"job.stepConfig\"></step-indicator>\n\n                          </div>\n                        </td>\n                        <td style=\"text-align: right; vertical-align: middle;\">\n                          <div class=\"button-holder\" style=\"float: right;\">\n                            <a *ngIf=\"job.status === 'FAILURE'\" [routerLink]=\"'/registry/sync/details/' + job.historyId\" routerLinkActive=\"active\">\n                              <button class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"scheduledjobs.detail.button\"></localize>\n                              </button>\n                            </a>\n                           </div>\n                         </td>\n                      </tr>\n\n                    </tbody>\n                  </table>\n                  <div *ngIf=\"page.resultSet.length > 0\" class=\"solid-table-footer\">\n                    <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\n@Component({\n  selector: 'job',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.css']\n})\nexport class SyncDetailsComponent implements OnInit {\n  message: string = null;\n  job: ScheduledJob;\n  historyId: string = \"\";\n\n  page: any = {\n    count: 0,\n    pageNumber: 1,\n    pageSize: 10,\n    results: []\n  };\n\n  isAdmin: boolean;\n  isMaintainer: boolean;\n  isContributor: boolean;\n\n  constructor(public service: RegistryService, private route: ActivatedRoute, authService: AuthService, public ioService: IOService) {\n    this.isAdmin = authService.isAdmin();\n    this.isMaintainer = this.isAdmin || authService.isMaintainer();\n    this.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n  }\n\n  ngOnInit(): void {\n\n    this.historyId = this.route.snapshot.params[\"oid\"];\n\n    this.onPageChange(1);\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  formatAffectedRows(rows: string) {\n    return rows.replace(/,/g, \", \");\n  }\n\n  formatValidationResolve(obj: any) {\n    return JSON.stringify(obj);\n  }\n\n  onPageChange(pageNumber: any): void {\n\n    this.message = null;\n\n    this.service.getExportDetails(this.historyId, this.page.pageSize, pageNumber).then(response => {\n\n      this.job = response;\n      \n      this.page = this.job.exportErrors;\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n  error(err: HttpErrorResponse): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              {{job.createDate}}\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.exportedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.exportedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead>\n                                <tr>\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"geoObject.label\"></localize>&nbsp;<localize key=\"geoObjectType.attr.code\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.code}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { Map, LngLatBoundsLike, NavigationControl, MapboxEvent, AttributionControl, IControl } from 'mapbox-gl';\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AllGeoJSON } from '@turf/helpers'\nimport bbox from '@turf/bbox';\n\nimport { Subject } from 'rxjs';\n\nimport { GeoObject, ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { ModalState } from '@registry/model/location-manager';\n\nimport { MapService, RegistryService } from '@registry/service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n  selector: 'location-manager',\n  templateUrl: './location-manager.component.html',\n  styleUrls: ['./location-manager.css']\n})\nexport class LocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  MODE: ModalState = {\n    SEARCH: 0,\n    VIEW: 1,\n  }\n\n  bsModalRef: BsModalRef;\n\n    /* \n     * Root nodes of the tree\n     */\n  data: GeoObject[] = [];\n\n    /* \n     *  Search Text\n     */\n  text: string = '';\n\n    /* \n     *  MODE\n     */\n  mode: number = this.MODE.SEARCH;\n\n    /*\n     * Date of data for explorer\n     */\n  dateStr: string = null;\n\n  forDate: Date = new Date();\n\n\n    /* \n     * Currently selected geo object\n     */\n  current: GeoObject;\n\n    /* \n     * Currently selected geo object type\n     */\n  type: GeoObjectType;\n\n    /* \n     * Flag denoting if an object is currently being editted\n     */\n  isEdit: boolean = false;\n\n    /* \n     * mapbox-gl map\n     */\n  map: Map;\n\n    /* \n     * Flag denoting the draw control is active\n     */\n  active: boolean = false;\n\n  vectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n  baseLayers: any[] = [\n    {\n      name: 'Satellite',\n      label: 'Satellite',\n      id: 'satellite-v9',\n      sprite: 'mapbox://sprites/mapbox/satellite-v9',\n      url: 'mapbox://mapbox.satellite',\n      selected: true\n    },\n    // {\n    //   name: 'Streets',\n    //   label: 'Streets',\n    //   id: 'streets-v9',\n    //   sprite: 'mapbox://sprites/mapbox/basic-v9',\n    //   url: 'mapbox://mapbox.basic-v9'\n    // }\n  ];\n\n  hoverFeatureId: string;\n\n  preventSingleClick: boolean = false;\n\n  /* \n     * Timer for determining double click vs single click\n     */\n  timer: any;\n\n  /* \n     * debounced subject for map extent change events\n     */\n  subject: Subject<MapboxEvent<MouseEvent | TouchEvent | WheelEvent>>;\n\n\n  // \n  // Editing of geomemtries\n  //\n  geometryChange: Subject<any> = new Subject();\n\n  vot: ValueOverTime = null;\n\n  @ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\n  editingControl: any;\n\n\n  constructor(private modalService: BsModalService, private mapService: MapService, public service: RegistryService) {\n    mapService.init();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.map.remove();\n  }\n\n  ngAfterViewInit() {\n\n    const layer = this.baseLayers[0];\n\n    this.map = new Map({\n      container: 'map',\n      style: {\n        \"version\": 8,\n        \"name\": layer.name,\n        \"metadata\": {\n          \"mapbox:autocomposite\": true\n        },\n        \"sources\": {\n          \"mapbox\": {\n            \"type\": \"raster\",\n            \"url\": layer.url,\n            \"tileSize\": 256\n          }\n        },\n        \"sprite\": layer.sprite,\n        \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n        \"layers\": [\n          {\n            \"id\": layer.id,\n            \"type\": 'raster',\n            \"source\": 'mapbox',\n            // \"source-layer\": \"mapbox_satellite_full\"\n          }\n        ]\n      },\n      zoom: 2,\n      attributionControl: false,\n      center: [-78.880453, 42.897852]\n    });\n\n    this.map.on('load', () => {\n      this.initMap();\n    });\n\n    this.map.addControl(this.simpleEditControl);\n  }\n\n  changeMode(mode: number): void {\n    this.mode = mode;\n\n    if (this.mode === this.MODE.SEARCH) {\n      this.isEdit = false;\n    }\n\n    this.clearGeometryEditing();\n\n    this.vot = null;\n  }\n\n  onModeChange(value: boolean): void {\n    this.isEdit = value;\n  }\n\n  handleDateChange(): void {\n    this.forDate = new Date(Date.parse(this.dateStr));\n  }\n\n  initMap(): void {\n\n    this.map.on('style.load', () => {\n      this.addLayers();\n    });\n\n    this.addLayers();\n\n    // Add zoom and rotation controls to the map.\n    this.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n    this.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n    this.map.on('click', 'children-points', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n\n    this.map.on('click', 'children-polygon', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n  }\n\n  handleMapClickEvent(event: any): void {\n    if (!this.isEdit && event.features != null && event.features.length > 0) {\n      const feature = event.features[0];\n\n      if (feature.properties.code != null && (this.current == null || this.current.properties.code !== feature.properties.code)) {\n        this.select(feature, null);\n      }\n    }\n  }\n\n\n\n  addLayers(): void {\n\n    const source = 'children';\n\n    this.map.addSource(source, {\n      type: 'geojson',\n      data: {\n        \"type\": \"FeatureCollection\",\n        \"features\": []\n      }\n    });\n\n    // Polygon layer\n    this.map.addLayer({\n      'id': source + '-polygon',\n      'type': 'fill',\n      'source': source,\n      'layout': {},\n      'paint': {\n        'fill-color': DEFAULT_COLOR,\n        'fill-opacity': 0.8,\n        'fill-outline-color': 'black'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      ]\n    });\n\n    // Point layer\n    this.map.addLayer({\n      \"id\": source + \"-points\",\n      \"type\": \"circle\",\n      \"source\": source,\n      \"paint\": {\n        \"circle-radius\": 10,\n        \"circle-color\": DEFAULT_COLOR,\n        \"circle-stroke-width\": 2,\n        \"circle-stroke-color\": '#FFFFFF'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      ]\n    });\n\n    //    // Selected layers\n    //    this.map.addLayer({\n    //      \"id\": source + \"-points-selected\",\n    //      \"type\": \"circle\",\n    //      \"source\": source,\n    //      \"paint\": {\n    //        \"circle-radius\": 10,\n    //        \"circle-color\": DEFAULT_COLOR,\n    //        \"circle-stroke-width\": 2,\n    //        \"circle-stroke-color\": '#FFFFFF'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n    //      ]\n    //    });\n    //\n    //    this.map.addLayer({\n    //      'id': source + '-polygon-selected',\n    //      'type': 'fill',\n    //      'source': source,\n    //      'layout': {},\n    //      'paint': {\n    //        'fill-color': DEFAULT_COLOR,\n    //        'fill-opacity': 0.8,\n    //        'fill-outline-color': 'black'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n    //      ]\n    //    });\n\n    // Label layer\n    this.map.addLayer({\n      \"id\": source + \"-label\",\n      \"source\": source,\n      \"type\": \"symbol\",\n      \"paint\": {\n        \"text-color\": \"black\",\n        \"text-halo-color\": \"#fff\",\n        \"text-halo-width\": 2\n      },\n      \"layout\": {\n        \"text-field\": ['get', 'localizedValue', ['get', 'displayLabel']],\n        \"text-font\": [\"NotoSansRegular\"],\n        \"text-offset\": [0, 0.6],\n        \"text-anchor\": \"top\",\n        \"text-size\": 12,\n      }\n    });\n\n    this.vectorLayers.forEach(cLayer => {\n      this.addVectorLayer(cLayer);\n    });\n  }\n\n  handleBasemapStyle(layer: any): void {\n    // this.map.setStyle('mapbox://styles/mapbox/' + layer.id);\n\n    this.baseLayers.forEach(baseLayer => {\n      baseLayer.selected = false;\n    });\n\n    layer.selected = true;\n\n    this.map.setStyle({\n      \"version\": 8,\n      \"name\": layer.name,\n      \"metadata\": {\n        \"mapbox:autocomposite\": true\n      },\n      \"sources\": {\n        \"mapbox\": {\n          \"type\": \"raster\",\n          \"url\": layer.url,\n          \"tileSize\": 256\n        },\n      },\n      \"sprite\": layer.sprite,\n      \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n      \"layers\": [\n        {\n          \"id\": layer.id,\n          \"type\": 'raster',\n          \"source\": 'mapbox',\n          // \"source-layer\": \"mapbox_satellite_full\"\n        }\n      ]\n    });\n  }\n\n  search(): void {\n    this.mapService.search(this.text, this.dateStr).then(data => {\n      (<any>this.map.getSource('children')).setData(data);\n\n\n      this.setData(data.features);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n\n  zoomToFeature(node: GeoObject, event: MouseEvent): void {\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.preventSingleClick = false;\n    const delay = 200;\n\n    this.timer = setTimeout(() => {\n      if (!this.preventSingleClick) {\n        if (node.geometry != null) {\n          const bounds = bbox(node as AllGeoJSON) as LngLatBoundsLike;\n          \n          let padding = 50;\n          let maxZoom = 20;\n          \n          // Zoom level was requested to be reduced when displaying point types as per #420\n          if (node.geometry.type === \"Point\" || node.geometry.type === \"MultiPoint\")\n          {\n            padding = 100;\n            maxZoom = 12;\n          }\n\n          this.map.fitBounds(bounds, { padding: padding, animate:true, maxZoom: maxZoom });\n        }\n      }\n    }, delay);\n  }\n\n  select(node: GeoObject, event: MouseEvent): void {\n\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.service.getGeoObjectTypes([node.properties.type], null).then(types => {\n      this.type = types[0];\n      this.current = node;\n      this.mode = this.MODE.VIEW;\n\n      //      const code = this.current.properties.code;\n      //\n      //      // Update the filter properties\n      //      this.map.setFilter('children-points-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      //      ]);\n      //\n      //      this.map.setFilter('children-polygon-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      //      ]);\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  setData(data: GeoObject[]): void {\n    this.data = data;\n  }\n\n  onContextLayerChange(layer: ContextLayer): void {\n\n    if (layer.active) {\n      this.addVectorLayer(layer.oid);\n    }\n    else {\n      this.removeVectorLayer(layer.oid);\n    }\n\n  }\n\n  removeVectorLayer(source: string): void {\n\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index !== -1) {\n      this.map.removeLayer(source + \"-points\");\n      this.map.removeLayer(source + \"-polygon\");\n      this.map.removeLayer(source + \"-label\");\n      this.map.removeSource(source);\n\n      this.vectorLayers.splice(index, 1);\n    }\n\n  }\n\n  addVectorLayer(source: string): void {\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index === -1) {\n      const prevLayer = 'children-polygon';\n\n      var protocol = window.location.protocol;\n      var host = window.location.host;\n\n      this.map.addSource(source, {\n        type: 'vector',\n        tiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n      });\n\n      // Point layer\n      this.map.addLayer({\n        \"id\": source + \"-points\",\n        \"type\": \"circle\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"paint\": {\n          \"circle-radius\": 10,\n          \"circle-color\": SELECTED_COLOR,\n          \"circle-stroke-width\": 2,\n          \"circle-stroke-color\": '#FFFFFF'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n        ]\n      }, prevLayer);\n\n      // Polygon layer\n      this.map.addLayer({\n        'id': source + '-polygon',\n        'type': 'fill',\n        'source': source,\n        \"source-layer\": 'context',\n        'layout': {},\n        'paint': {\n          'fill-color': SELECTED_COLOR,\n          'fill-opacity': 0.8,\n          'fill-outline-color': 'black'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n        ]\n      }, prevLayer);\n\n\n      // Label layer\n      this.map.addLayer({\n        \"id\": source + \"-label\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"type\": \"symbol\",\n        \"paint\": {\n          \"text-color\": \"black\",\n          \"text-halo-color\": \"#fff\",\n          \"text-halo-width\": 2\n        },\n        \"layout\": {\n          \"text-field\": [\"case\",\n            [\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n            [\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n            [\"string\", [\"get\", \"displayLabel\"]]\n          ],\n          \"text-font\": [\"NotoSansRegular\"],\n          \"text-offset\": [0, 0.6],\n          \"text-anchor\": \"top\",\n          \"text-size\": 12,\n        }\n      }, prevLayer);\n\n\n      this.vectorLayers.push(source);\n    }\n  }\n\n\n  //\n  // Editing of features\n  //\n  clearGeometryEditing(): void {\n    if (this.editingControl != null) {\n      this.editingControl.deleteAll();\n      this.map.removeControl(this.editingControl);\n    }\n\n    this.editingControl = null;\n  }\n\n\n  onGeometryEdit(vot: ValueOverTime): void {\n\n    this.clearGeometryEditing();\n\n    this.vot = vot;\n\n    this.addEditLayers(vot);\n  }\n\n  addEditLayers(vot: ValueOverTime): void {\n    if (vot != null) {\n      //      this.renderGeometryAsLayer(this.calculatedPreObject.geometry.value, \"pre\", \"#EFA22E\");\n\n      this.enableEditing(vot);\n    }\n  }\n\n  enableEditing(vot: ValueOverTime): void {\n    if (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: false,\n          polygon: true,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: true,\n          line_string: false,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: true,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    this.map.addControl(this.editingControl);\n\n    if (vot.value != null) {\n      this.editingControl.add(vot.value);\n    }\n  }\n\n  onMapSave(): void {\n    const geometry = this.getDrawGeometry();\n\n    this.editingControl.deleteAll();\n    this.map.removeControl(this.editingControl);\n    //    this.geometryChange.next(geometry);\n\n    this.vot.value = geometry;\n    this.vot = null;\n\n    this.editingControl = null;\n  }\n\n  getDrawGeometry(): any {\n    if (this.editingControl != null) {\n      let featureCollection: any = this.editingControl.getAll();\n\n      if (featureCollection.features.length > 0) {\n\n        // The first Feature is our GeoObject.\n\n        // Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n        if (this.type.geometryType === \"MULTIPOLYGON\") {\n          let polygons = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPolygon') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                polygons.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              polygons.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: polygons,\n            type: 'MultiPolygon'\n          };\n        }\n        else if (this.type.geometryType === \"MULTIPOINT\") {\n          let points = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPoint') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                points.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              points.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: points,\n            type: 'MultiPoint'\n          };\n        }\n        else if (this.type.geometryType === \"MULTILINE\") {\n          let lines = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiLineString') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                lines.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              lines.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: lines,\n            type: 'MultiLineString'\n          };\n        }\n        else {\n          return featureCollection.features[0].geometry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  error(err: HttpErrorResponse): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div id=\"navigator-left-sidebar\" class=\"col-md-3 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n  <!--             <div *ngIf=\"current != null && type != null\"> -->\n  <!--               <i class=\"fa fa-arrow-right clickable\" aria-hidden=\"true\" (click)=\"this.mode = this.MODE.VIEW\"></i>               -->\n  <!--             </div> -->\n  \n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n<!--                     <label> -->\n<!--                       <localize key=\"explorer.date.label\"></localize> -->\n<!--                     </label> -->\n                    <input style=\"width: 100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" [disabled]=\"mode !== MODE.SEARCH\"/>\n                  </div>\n                </div>\n              </div>\n  \n              <!-- Search bar -->\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"search()\" [(ngModel)]=\"text\" name=\"text\" [disabled]=\"mode !== MODE.SEARCH\">\n                      <span class=\"input-group-btn\">\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"search()\" [disabled]=\"mode !== MODE.SEARCH\">\n                          <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span> \n<!--                           <localize key=\"explorer.search.button.message\"></localize> -->\n                        </button>\n                      </span>\n                    </div>\n                       <div *ngIf=\"mode === MODE.VIEW && current != null\" style=\"padding: 20px 0;\">\n              <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>              \n            </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <div class=\"row\"  *ngIf=\"mode === MODE.SEARCH\">\n            <div class=\"col-md-12\">\n              <div id=\"hierarchy-tree-container\" class=\"location-management-widget-section location-management-list-container\">\n                    <div class=\"list-group\">\n  \n                      <div *ngFor=\"let node of data; let i = index\" class=\"list-group-item\">\n                        <!-- Single column card -->\n                        <div class=\"card card-default\" (click)=\"select(node, $event)\">\n                          <div class=\"card-body\">\n                            <i class=\"fa fa-map-marker clickable\" style=\"float:right;font-size:25px;\" aria-hidden=\"true\" (click)=\"zoomToFeature(node, $event)\" [title]=\"'explorer.zoom.label' | localize\"></i>\n                            <h4 class=\"clickable\" style=\"word-break: break-all;\" title=\"View Geo-Object details\">{{node.properties.code}} - {{node.properties.displayLabel.localizedValue}}</h4>\n                          </div>\n                        </div>\n                      </div>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>    \n        <div *ngIf=\"mode === MODE.VIEW && current != null\" class=\"row\">\n          <div class=\"col-md-12\">\n<!--             <div style=\"padding: 20px 0;\"> -->\n<!--               <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>               -->\n<!--             </div> -->\n            <feature-panel\n              [type]=\"type\"\n              [code]=\"current.properties.code\"              \n              [forDate]=\"forDate\"\n              [readOnly]=\"!current.properties.writable\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"search()\"\n              (modeChange)=\"onModeChange($event)\"              \n            ></feature-panel>\n          </div>\n        </div>            \n      </div>\n\n      <div class=\"col-md-9\" id=\"site-explorer-map\">\n        <div class=\"row\">\n          \n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\"></layer-panel>\n          </article>\n\n          <div id=\"map\" class=\"map-view-port\"></div>\n          <simple-edit-control [visible]=\"editingControl != null\" [save]=\"true\" (editEmitter)=\"onMapSave()\" #simpleEditControl></simple-edit-control>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { MasterList, ContextLayer, ContextLayerGroup } from '@registry/model/registry';\n\n\n@Component( {\n    selector: 'context-layer-modal',\n    templateUrl: './context-layer-modal.component.html',\n    styleUrls: ['./location-manager.css']\n} )\nexport class ContextLayerModalComponent {\n\n    contextLayerGroups: ContextLayerGroup[];\n\n\n    /*\n     * Called on confirm\n     */\n    public onSubmit: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onSubmit = new Subject();\n    }\n\n    groupHasContextLayers(group:string): boolean {\n\t\tlet hasCLayers = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif(cLayerGroup.oid === group && cLayerGroup.contextLayers.length > 0){\n\t\t\t\thasCLayers = true;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn hasCLayers;\n\t}\n\n    confirm(): void {\n        this.onSubmit.next( this.contextLayerGroups );\n        this.bsModalRef.hide();\n    }\n\n}\n","<div class=\"modal-body\">\n    <div class=\"heading\">\n        <h2>\n            <localize key=\"explorer.add.context.layers.modal.title\"></localize>\n        </h2>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"list-group\">\n                        <div *ngFor=\"let cLayerGroup of contextLayerGroups;\" >\n                            <div *ngIf=\"groupHasContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n                                <h4>{{ cLayerGroup.displayLabel }}</h4>\n                                <div class=\"list-group\">\n                                    <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                                        <input type=\"checkbox\" [checked]=\"cLayer.enabled\" (change)=\"cLayer.enabled = !cLayer.enabled\" style=\"margin-left: 10px;\"> {{ cLayer.displayLabel }}\n                                        \n                                        <!-- <boolean-field [(value)]=\"cLayer.enabled\" [label]=\"cLayer.displayLabel\"></boolean-field> -->\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input, Output, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, PRESENT } from '@registry/model/registry';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\nimport * as moment from 'moment';\n\n\n@Component({\n\tselector: 'geometry-panel',\n\ttemplateUrl: './geometry-panel.component.html',\n\tstyleUrls: [],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition('* => void', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t])\n\t\t\t])\n\t\t]]\n})\nexport class GeometryPanelComponent implements OnInit {\n\tmessage: string = null;\n\n\treadonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Output() onEdit = new EventEmitter<ValueOverTime>()\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\t\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\thasDuplicateDate: boolean = false;\n\n\tconstructor(private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\n\tonDateChange(event: any, vAttribute: ValueOverTime): any {\n\n\t\t//        console.log( event.currentTarget.value );\n\t\t//\n\t\t//        let dt = new Date( event.currentTarget.value );\n\t\t//let dt = new Date(event);\n\n\t\tlet vAttributes = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\t//        vAttribute.startDate = Utils.formatDateString( dt );\n\n\t\tthis.snapDates(vAttributes);\n\n\t\t//        this.changeDetectorRef.detectChanges();\n\t}\n\n\tsnapDates(votArr: ValueOverTime[]): void {\n\t\tvar dateOffset = (24 * 60 * 60 * 1000) * 1; //1 days\n\n\t\tthis.hasDuplicateDate = false;\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\n\t\tfor (let i = 1; i < votArr.length; i++) {\n\t\t\tlet prev = votArr[i - 1];\n\t\t\tlet current = votArr[i];\n\n\t\t\tif (current.startDate) {\n\t\t\t\tprev.endDate = Utils.formatDateString(new Date(new Date(current.startDate).getTime() - dateOffset));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprev.endDate = PRESENT;\n\t\t\t}\n\n\t\t\tif (prev.startDate === current.startDate) {\n\t\t\t\tthis.hasDuplicateDate = true;\n\t\t\t}\n\t\t}\n\n\t\tif (votArr.length > 0) {\n\t\t\tvotArr[votArr.length - 1].endDate = PRESENT;\n\t\t}\n\t}\n\n\tedit(vot: ValueOverTime): void {\n\t\tthis.onEdit.emit(vot);\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\tvot.value.type = \"Polygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\tvot.value.type = \"Point\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\tvot.value.type = \"MultiPoint\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\tvot.value.type = \"Line\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\tvot.value.type = \"MultiLine\";\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tthis.snapDates(votArr);\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes['geometry'];\n\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tval.values.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.snapDates(val.values);\n\t}\n\t\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n  \t\tvar format = localeData.longDateFormat('L');\n  \t\treturn moment().format(format);\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n\n                <ul class=\"list-group\">\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                    <table class=\"table table-striped\">\n\n                      <tbody class=\"attribute-element-wrapper\">\n                        <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\">\n                          <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                        </p>\n\n                        <tr *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\">\n                          <td>\n                            <table>\n                              <tr class=\"attribute-value-row\">\n                                <td colspan=\"2\">\n                                  <button class=\"btn btn-primary\" (click)=\"edit(vAttribute)\" role=\"button\">\n                                    <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                                  </button>\n                                </td>\n                              </tr>\n                              <tr class=\"attribute-date-input-row\">\n                                <td>\n                                  <h5>\n                                    <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                  </h5> <input type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required>\n                                </td>\n                                <td>\n                                  <h5>\n                                    <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                  </h5>\n                                  <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                                  <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                </td>\n                              </tr>\n                            </table>\n                          </td>\n                          <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                            <i class=\"fa fa-times\"></i>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </li>\n\n                  <li class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"io.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!versionsform.valid\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Map, NavigationControl, AttributionControl, LngLatBounds, IControl } from 'mapbox-gl';\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nimport { ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { MapService, RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorModalComponent, ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n\tselector: 'dataset-location-manager',\n\ttemplateUrl: './dataset-location-manager.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class DatasetLocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY'\n\t}\n\n\ttoolsIconHover: boolean = false;\n\n\tdatasetId: string;\n\n\ttypeCode: string;\n\n\treadOnly: boolean = false;\n\n\teditOnly: boolean = false;\n\n\tisEdit: boolean = false;\n\n\tdate: string;\n\n\tcode: string;\n\n\ttype: GeoObjectType;\n\n\tbsModalRef: BsModalRef;\n\n    /* \n     * mapbox-gl map\n     */\n\tmap: Map;\n\n\tvectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'Satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n\t\t// {\n\t\t// \tname: 'Streets',\n\t\t// \tlabel: 'Streets',\n\t\t// \tid: 'streets-v9',\n\t\t// \tsprite: 'mapbox://sprites/mapbox/basic-v9',\n\t\t// \turl: 'mapbox://mapbox.basic-v9'\n\t\t// }\n\t];\n\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\tforDate: Date = new Date();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\teditingControl: any;\n\n\tgeometryChange: Subject<any> = new Subject();\n\n\tvot: ValueOverTime;\n\n\tconstructor(private mapService: MapService, public service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute, authService: AuthService) {\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.mapService.init();\n\n\t\tthis.datasetId = this.route.snapshot.params[\"datasetId\"];\n\t\tthis.typeCode = this.route.snapshot.params[\"typeCode\"];\n\t\tthis.date = this.route.snapshot.params[\"date\"];\n\t\tthis.readOnly = this.route.snapshot.params[\"readOnly\"] === 'true';\n\t\tthis.editOnly = this.route.snapshot.params[\"editOnly\"] === 'true';\n\t\t\n\t\tif (this.route.snapshot.params[\"code\"] != null) {\n\t\t\tthis.code = this.route.snapshot.params[\"code\"];\n\t\t}\n\t\t\n\t\tthis.forDate = new Date(Date.parse(this.date));\n\n\t\tthis.service.getGeoObjectTypes([this.typeCode], null).then(types => {\n\t\t\tthis.type = types[0];\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tngAfterViewInit() {\n\n\t\tconst layer = this.baseLayers[0];\n\n\t\tthis.map = new Map({\n\t\t\tcontainer: 'dataset-map',\n\t\t\tstyle: {\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\t\"source\": 'mapbox',\n\t\t\t\t\t\t// \"source-layer\": \"mapbox_satellite_full\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tzoom: 2,\n\t\t\tattributionControl: false,\n\t\t\tcenter: [-78.880453, 42.897852]\n\t\t});\n\n\t\tthis.map.on('load', () => {\n\t\t\tthis.initMap();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tonModeChange(value: boolean): void {\n\t\tthis.isEdit = value;\n\t}\n\n\tinitMap(): void {\n    this.service.getGeoObjectBoundsAtDate(this.code, this.typeCode, this.date).then(bounds => {\n      let llb = new LngLatBounds([bounds[0], bounds[1]], [bounds[2], bounds[3]]);\n\n      let padding = 50;\n      let maxZoom = 20;\n      \n      // Zoom level was requested to be reduced when displaying point types as per #420\n      if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\")\n      {\n        padding = 100;\n        maxZoom = 12;\n      }\n      \n      this.map.fitBounds(llb, { padding: padding, animate:false, maxZoom: maxZoom });\n    });\n    \n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t});\n\n\t\tthis.addLayers();\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n\t\tthis.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n\t\tthis.map.on('click', this.datasetId + '-points', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\t\tthis.map.on('click', this.datasetId + '-polygon', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\n\t\t//\t\tthis.map.on('draw.selectionchange', (e: any) => {\n\t\t//\t\t\tif (this.vot != null && e.features.length === 0) {\n\t\t//\t\t\t\tconst geometry = this.getDrawGeometry();\n\t\t//\t\t\t\tthis.vot.value = geometry;\n\t\t//\t\t\t}\n\t\t//\t\t});\n\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\taddLayers(): void {\n\n\t\tthis.vectorLayers.forEach(vLayer => {\n\t\t\tthis.addVectorLayer(vLayer);\n\t\t});\n\t}\n\n\thandleBasemapStyle(layer: any): void {\n\t\t// this.map.setStyle('mapbox://styles/mapbox/' + layer.id);\n\n\t\tthis.baseLayers.forEach(baseLayer => {\n\t\t\tbaseLayer.selected = false;\n\t\t});\n\n\t\tlayer.selected = true;\n\n\t\tthis.map.setStyle({\n\t\t\t\"version\": 8,\n\t\t\t\"name\": layer.name,\n\t\t\t\"metadata\": {\n\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t},\n\t\t\t\"sources\": {\n\t\t\t\t\"mapbox\": {\n\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"sprite\": layer.sprite,\n\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\"layers\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\"source\": 'mapbox',\n\t\t\t\t\t// \"source-layer\": \"mapbox_satellite_full\"\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tonContextLayerChange(layer: ContextLayer): void {\n\n\t\tif (layer.active) {\n\t\t\tthis.addVectorLayer(layer.oid);\n\t\t}\n\t\telse {\n\t\t\tthis.removeVectorLayer(layer.oid);\n\t\t}\n\n\t}\n\n\tremoveVectorLayer(source: string): void {\n\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index !== -1) {\n\t\t\tthis.map.removeLayer(source + \"-points\");\n\t\t\tthis.map.removeLayer(source + \"-polygon\");\n\t\t\tthis.map.removeLayer(source + \"-points-selected\");\n\t\t\tthis.map.removeLayer(source + \"-polygon-selected\");\n\t\t\tthis.map.removeLayer(source + \"-label\");\n\t\t\tthis.map.removeSource(source);\n\n\t\t\tthis.vectorLayers.splice(index, 1);\n\t\t}\n\n\t}\n\n\taddVectorLayer(source: string): void {\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index === -1) {\n\t\t\tconst prevLayer = (source !== this.datasetId) ? this.datasetId + '-points' : null;\n\n\t\t\tvar protocol = window.location.protocol;\n\t\t\tvar host = window.location.host;\n\n\t\t\tthis.map.addSource(source, {\n\t\t\t\ttype: 'vector',\n\t\t\t\ttiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n\t\t\t});\n\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-points\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\"circle-color\": DEFAULT_COLOR,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Polygon layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t'id': source + '-polygon',\n\t\t\t\t'type': 'fill',\n\t\t\t\t'source': source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t'layout': {},\n\t\t\t\t'paint': {\n\t\t\t\t\t'fill-color': DEFAULT_COLOR,\n\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Selected object layers\n\t\t\tif (source === this.datasetId) {\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t\"id\": source + \"-points-selected\",\n\t\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\t\"source\": source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t\"paint\": {\n\t\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\t\"circle-color\": SELECTED_COLOR,\n\t\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t'id': source + '-polygon-selected',\n\t\t\t\t\t'type': 'fill',\n\t\t\t\t\t'source': source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t'layout': {},\n\t\t\t\t\t'paint': {\n\t\t\t\t\t\t'fill-color': SELECTED_COLOR,\n\t\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\t\t\t}\n\n\t\t\t// Label layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-label\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"type\": \"symbol\",\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"text-color\": \"black\",\n\t\t\t\t\t\"text-halo-color\": \"#fff\",\n\t\t\t\t\t\"text-halo-width\": 2\n\t\t\t\t},\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"text-field\": [\"case\",\n\t\t\t\t\t\t[\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n\t\t\t\t\t\t[\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n\t\t\t\t\t\t[\"string\", [\"get\", \"displayLabel\"]]\n\t\t\t\t\t],\n\t\t\t\t\t\"text-font\": [\"NotoSansRegular\"],\n\t\t\t\t\t\"text-offset\": [0, 0.6],\n\t\t\t\t\t\"text-anchor\": \"top\",\n\t\t\t\t\t\"text-size\": 12,\n\t\t\t\t}\n\t\t\t}, prevLayer);\n\n\n\t\t\tthis.vectorLayers.push(source);\n\t\t}\n\t}\n\n\n\t/*\n\t * EDIT FUNCTIONALITY\n\t */\n\n\tclearGeometryEditing(): void {\n\t\tif (this.editingControl != null) {\n\t\t\tthis.editingControl.deleteAll();\n\t\t\tthis.map.removeControl(this.editingControl);\n\t\t}\n\n\t\tthis.editingControl = null;\n\t}\n\n\tonFeatureChange(): void {\n\t\t// Refresh the layer\n\t\tthis.removeVectorLayer(this.datasetId);\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\thandleMapClickEvent(event: any): void {\n\t\tif (!this.isEdit && event.features != null && event.features.length > 0) {\n\t\t\tconst feature = event.features[0];\n\n\t\t\tif (feature.properties.code != null && this.code !== feature.properties.code) {\n\t\t\t\tthis.code = feature.properties.code;\n\n\t\t\t\t// Update the filter properties\n\t\t\t\tthis.map.setFilter(this.datasetId + '-points-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]);\n\n\t\t\t\tthis.map.setFilter(this.datasetId + '-polygon-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n\n\tonMapSave(): void {\n\t\tconst geometry = this.getDrawGeometry();\n\n\t\tthis.editingControl.deleteAll();\n\t\tthis.map.removeControl(this.editingControl);\n\t\tthis.geometryChange.next(geometry);\n\n\t\tthis.vot.value = geometry;\n\t\tthis.vot = null;\n\n\t\tthis.editingControl = null;\n\t}\n\n\tonGeometryEdit(vot: ValueOverTime): void {\n\t\tthis.clearGeometryEditing();\n\n\t\tthis.vot = vot;\n\n\t\tthis.addEditLayers(vot);\n\t}\n\n\t//\tonMapEdit(): void {\n\t//\t\t// Enable editing\n\t//\t\tif (this.editingControl == null) {\n\t//\t\t\tthis.addEditLayers();\n\t//\t\t}\n\t//\t}\n\n\taddEditLayers(vot: ValueOverTime): void {\n\t\tif (vot != null) {\n\t\t\tthis.enableEditing(vot);\n\t\t}\n\t}\n\n\tenableEditing(vot: ValueOverTime): void {\n\t\tif (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (vot.value != null) {\n\t\t\tthis.editingControl.add(vot.value);\n\t\t}\n\t}\n\n\n\tgetDrawGeometry(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.type.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tonNewGeoObject(): void {\n\t\tthis.code = '__NEW__';\n\t}\n\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div *ngIf=\"type != null && code != null\" id=\"navigator-left-sidebar\" class=\"col-md-3 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            \n            <h3></h3>\n            \n            <feature-panel\n              [type]=\"type\"\n              [code]=\"code\"              \n              [forDate]=\"forDate\"\n              [datasetId]=\"datasetId\"\n              [readOnly]=\"readOnly\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"onFeatureChange($event)\"              \n              (modeChange)=\"onModeChange($event)\"\n            ></feature-panel>\n          </div>\n        </div>\n      </div>\n\n      <div [ngClass]=\"{'col-md-9':code != null, 'col-md-12':code == null}\" id=\"site-explorer-map\">\n        <div class=\"row\">\n\n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\" [filter]=\"[datasetId]\"></layer-panel>\n            \n            <div *ngIf=\"!editOnly\" class=\"layer-toggle\" style=\"margin-top:10px;\" (mouseenter)=\"toolsIconHover = true\" (mouseleave)=\"toolsIconHover = false\">\n             \n              <i class=\"fa fa-plus-square\" *ngIf=\"!toolsIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n              <div *ngIf=\"toolsIconHover\" style=\"margin-top:10px;\">\n            \n                <span (click)=\"onNewGeoObject()\" role=\"button\">\n                  <button class=\"btn btn-primary\">\n                    <localize key=\"masterlist.newGeoObject\"></localize>              \n                  </button>\n                </span>\n              </div>\n            \n            </div>\n          </article>\n\n          <div id=\"dataset-map\" class=\"map-view-port\"></div>     \n          <simple-edit-control [visible]=\"editingControl != null\" [save]=\"true\" (editEmitter)=\"onMapSave()\"  #simpleEditControl></simple-edit-control>\n          \n<!--           <span *ngIf=\"!readOnly\" (click)=\"onNewGeoObject()\" style=\"position: absolute; bottom: 70px; right: 10px\" role=\"button\"> -->\n<!--             <button class=\"btn btn-primary\"> -->\n<!--               <localize key=\"masterlist.newGeoObject\"></localize>               -->\n<!--             </button> -->\n<!--           </span> -->\n               \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import * as d3 from 'd3';\nimport { svgPoint } from './svg-util';\n\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\nimport { SvgHierarchyType } from './svg-hierarchy-type';\nimport { calculateTextWidth } from './svg-util';\nimport { HierarchyComponent, RELATED_NODE_BANNER_COLOR } from '../hierarchy.component';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\nexport class SvgHierarchyNode {\n\n\tprivate hierarchyComponent: HierarchyComponent;\n\n\tprivate svgHierarchyType: SvgHierarchyType;\n\n\tprivate geoObjectType: GeoObjectType;\n\n\tprivate treeNode: any;\n\n\t/*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tconstructor(hierarchyComponent: HierarchyComponent, svgHierarchyType: SvgHierarchyType, geoObjectType: GeoObjectType, treeNode: any,\n\t\tpublic localizeService: LocalizationService, public modalService: BsModalService) {\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.svgHierarchyType = svgHierarchyType;\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.treeNode = treeNode;\n\t}\n\n\tgetCode(): string {\n\t\treturn this.geoObjectType.code;\n\t}\n\n\tsetPos(x: number, y: number, dragging: boolean) {\n\t\tlet bbox = this.getBbox();\n\n\t\t// Move the GeoObjectType with the pointer when they move their mouse\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-header-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y - SvgHierarchyType.gotRectH / 2 + 2);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-label-text[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + 5)\n\t\t\t.attr(\"y\", y + 1);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-relatedhiers-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + bbox.width - 20)\n\t\t\t.attr(\"y\", y + 17);\n\n\n\t\t// Move inherit and uninherit buttons with the node they're moving\n\n\t\tlet inheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (inheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 60);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet inheritBbox = inheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - inheritBbox.x) + \" \" + (heritY - inheritBbox.y) + \")\");\n\t\t}\n\n\t\tlet uninheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (uninheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 71);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet uninheritBbox = uninheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - uninheritBbox.x) + \" \" + (heritY - uninheritBbox.y) + \")\");\n\t\t}\n\t}\n\n\tgetPos() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) };\n\t}\n\n\tgetBbox() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) - 3, width: parseInt(select.attr(\"width\")), height: parseInt(select.attr(\"height\")) + 3 };\n\t}\n\n\tgetTreeNode() {\n\t\treturn this.treeNode;\n\t}\n\t\n\thideRelatedHierarchy(): string {\n\t  let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n    if (existingSecondary.node() != null) {\n      existingSecondary.remove();\n      this.hierarchyComponent.calculateSvgViewBox();\n      \n      let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n      return existingSecondaryCode;\n    }\n\t}\n\n\trenderRelatedHierarchiesMenu() {\n\t\tlet that = this;\n\t\tlet existingMenu = d3.select(\".g-context-menu\");\n\n\t\tif (existingMenu.node() == null) {\n\t\t\t//let parent = d3.select('g.g-hierarchy-tree[data-code=\"' + this.svgHierarchyType.hierarchyType.code + '\"]');\n\t\t\tlet parent = d3.select('#svg');\n\n\t\t\tlet contextMenuGroup = parent.append(\"g\").classed(\"g-context-menu\", true);\n\n\t\t\tlet relatedHierarchies = this.svgHierarchyType.getRelatedHierarchies(this.getCode());\n\n\t\t\tlet bbox = this.getBbox();\n\t\t\tlet x = bbox.x + bbox.width - 5;\n\t\t\tlet y = bbox.y + bbox.height / 2 - 8;\n\t\t\tconst height = 20;\n\t\t\tconst fontSize = 8;\n\t\t\tconst widthPadding = 10;\n\t\t\tconst borderColor = \"#aaaaaa\";\n\t\t\tconst dividerColor = \"#e4e4e4\";\n\t\t\tconst fontFamily = \"sans-serif\";\n\t\t\tconst titleFontSize = 9;\n\t\t\t\n\t\t\tconst titleLabel = this.hierarchyComponent.localize(\"hierarchy.content.relatedHierarchies\");\n\t\t\tconst actionsTitle = this.hierarchyComponent.localize(\"hierarchy.content.actionsTitle\");\n\t\t\tconst removeFromHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.removeFromHierarchy\");\n\t\t\tconst noRelatedHierLabel = this.hierarchyComponent.localize(\"hierarchy.content.noRelatedHierarchies\");\n\t\t\tconst hideRelatedHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.hideRelatedHierarchy\");\n\t\t\tconst uninheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.uninherit\");\n\t\t\tconst inheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.inherit\");\n\t\t\t\n      let isSecondaryHierarchyRendered = (d3.select('.g-hierarchy[data-primary=\"false\"]').node() != null);\n      \n      let numActions = (isSecondaryHierarchyRendered) ? 2 : 1;\n\n\t\t\t// Calculate the width of our title\n\t\t\tlet width = calculateTextWidth(titleLabel, titleFontSize);\n\t\t\t\n\t\t\t// Calculate with of remove text\n\t\t\tlet removeWidth = calculateTextWidth(removeFromHierarchyLabel, fontSize);\n\t\t\twidth = removeWidth > width ? removeWidth : width;\n\t\t\t\n\t\t\tif (isSecondaryHierarchyRendered)\n\t\t\t{\n  \t\t\t// Calculate width of \"hide related hierarchy\" label\n        let hideRelatedWidth = calculateTextWidth(hideRelatedHierarchyLabel, fontSize);\n        width = hideRelatedWidth > width ? hideRelatedWidth : width;\n      }\n      \n      if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n        let uninheritWidth = calculateTextWidth(uninheritLabel, fontSize);\n        width = uninheritWidth > width ? uninheritWidth : width;\n        numActions++;\n      }\n      else\n      {\n        let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n        if (existingSecondary.node() != null) {\n          let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n          let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n          \n          let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService);\n          let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n          \n          if (this.treeNode.parent == null && relatedGotHasParents)\n          {\n            let inheritWidth = calculateTextWidth(inheritLabel, fontSize);\n            width = inheritWidth > width ? inheritWidth : width;\n            numActions++;\n          }\n        }\n      }\n      \n\t\t\t\n\t\t\t// Calculate the width of our context menu, which is based on how long the text inside it will be.\n\t\t\t// We don't know how long text is until we render it. So we'll need to loop over all the text and\n\t\t\t// render and destroy all of it.\n\t\t\tif (relatedHierarchies.length > 0)\n\t\t\t{\n  \t\t\trelatedHierarchies.forEach((relatedHierarchyCode: string) => {\n  \t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n  \n  \t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n  \t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n  \t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n  \t\t\t\t}\n  \n  \t\t\t\tlet textWidth = calculateTextWidth(relatedHierarchyLabel, fontSize);\n  \n  \t\t\t\tif (textWidth > width) {\n  \t\t\t\t\twidth = textWidth;\n  \t\t\t\t}\n  \t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t  let noHierLabelWidth = calculateTextWidth(noRelatedHierLabel, fontSize);\n\t\t\t  width = noHierLabelWidth > width ? noHierLabelWidth : width;\n\t\t\t}\n\n\t\t\twidth = width + widthPadding;\n\n\t\t\tlet heightAdditions: number = relatedHierarchies.length > 0 ? (numActions + 2) : (numActions + 3);\n\n\t\t\t// Background rectangle with border\n\t\t\tcontextMenuGroup.append(\"rect\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-background\", true)\n\t\t\t\t.attr(\"x\", x)\n\t\t\t\t.attr(\"y\", y)\n\t\t\t\t.attr(\"rx\", 5)\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height * (relatedHierarchies.length + heightAdditions))\n\t\t\t\t.attr(\"fill\", \"white\")\n\t\t\t\t.attr(\"stroke-width\", .5)\n\t\t\t\t.attr(\"stroke\", borderColor);\n\n\t\t\t// Related Hierarchies Title\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n\t\t\t\t.attr(\"font-size\", titleFontSize)\n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.text(titleLabel);\n\n\t\t\ty = y + height;\n\n\t\t\t// Dividing line at the bottom\n\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t.attr(\"x1\", x)\n\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t.attr(\"x2\", x + width)\n\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t.attr(\"stroke\", borderColor)\n\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t\n\t\t\tif (relatedHierarchies.length > 0) {\n\t\t\t\t// Loop over all related hierarchies and draw them as list items\n\t\t\t\tfor (let i = 0; i < relatedHierarchies.length; ++i) {\n\t\t\t\t\tlet relatedHierarchyCode = relatedHierarchies[i];\n\t\t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n\n\t\t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n\t\t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n\t\t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text that says the hierarchy's display label\n\t\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t\t.text(relatedHierarchyLabel)\n\t\t\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t\t\t.on('click', function(event, node) { that.renderSecondaryHierarchy(relatedHierarchy); });\n\n\t\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\t\tif (i < relatedHierarchies.length) {\n\t\t\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t\t\t.attr(\"stroke-width\", .5);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// Text that says \"No related Hierarchies\"\n\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t.text(noRelatedHierLabel)\n\n\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t}\n\n\t\t\t// Actions Title\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n\t\t\t\t.attr(\"font-size\", titleFontSize)\n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.text(actionsTitle);\n\n\t\t\ty = y + height;\n\n\t\t\t// Dividing line at the bottom\n\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t.attr(\"x1\", x)\n\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t.attr(\"x2\", x + width)\n\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t.attr(\"stroke\", borderColor)\n\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t.attr(\"data-remove\", \"REPLACE---gotCode\")\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t.attr(\"font-size\", fontSize) \n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.text(removeFromHierarchyLabel)\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.on('click', function (event, node) { that.removeGotFromHierarchy(); });\n\t\t  \n\t\t  y = y + height;\n\t\t  \n\t\t  // Inherit / Uninherit buttons\n\t\t  if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n        contextMenuGroup.append(\"line\")\n          .classed(\"contextmenu-relatedhiers-divider\", true)\n          .attr(\"x1\", x)\n          .attr(\"y1\", y)\n          .attr(\"x2\", x + width)\n          .attr(\"y2\", y)\n          .attr(\"stroke\", borderColor)\n          .attr(\"stroke-width\", .5);\n        \n        contextMenuGroup.append(\"text\")\n          .classed(\"contextmenu-relatedhiers-text\", true)\n          .attr(\"x\", x + widthPadding / 2)\n          .attr(\"y\", y + (height / 2) + (fontSize / 2))\n          .attr(\"font-size\", fontSize)\n          .attr(\"font-family\", fontFamily)\n          .text(uninheritLabel)\n          .style(\"cursor\", \"pointer\")\n          .on('click', function (event, node) { that.onClickUninheritHierarchy(); });\n\n        y = y + height;\n      }\n      else\n      {\n        let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n        if (existingSecondary.node() != null) {\n          let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n          let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n          \n          let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService);\n          let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n          \n          if (this.treeNode.parent == null && relatedGotHasParents)\n          {\n            contextMenuGroup.append(\"line\")\n              .classed(\"contextmenu-relatedhiers-divider\", true)\n              .attr(\"x1\", x)\n              .attr(\"y1\", y)\n              .attr(\"x2\", x + width)\n              .attr(\"y2\", y)\n              .attr(\"stroke\", borderColor)\n              .attr(\"stroke-width\", .5);\n          \n            contextMenuGroup.append(\"text\")\n              .classed(\"contextmenu-relatedhiers-text\", true)\n              .attr(\"x\", x + widthPadding / 2)\n              .attr(\"y\", y + (height / 2) + (fontSize / 2))\n              .attr(\"font-size\", fontSize)\n              .attr(\"font-family\", fontFamily)\n              .text(inheritLabel)\n              .style(\"cursor\", \"pointer\")\n              .on('click', function (event, node) { that.onClickInheritHierarchy(secondaryHierarchy); });\n    \n            y = y + height;\n          }\n        }\n      }\n\t\t\t\n      if (isSecondaryHierarchyRendered) {\n  \t\t  contextMenuGroup.append(\"line\")\n          .classed(\"contextmenu-relatedhiers-divider\", true)\n          .attr(\"x1\", x)\n          .attr(\"y1\", y)\n          .attr(\"x2\", x + width)\n          .attr(\"y2\", y)\n          .attr(\"stroke\", borderColor)\n          .attr(\"stroke-width\", .5);\n  \t\t  \n  \t\t  contextMenuGroup.append(\"text\")\n          .classed(\"contextmenu-relatedhiers-text\", true)\n          .attr(\"x\", x + widthPadding / 2)\n          .attr(\"y\", y + (height / 2) + (fontSize / 2))\n          .attr(\"font-size\", fontSize) \n          .attr(\"font-family\", fontFamily)\n          .text(hideRelatedHierarchyLabel)\n          .style(\"cursor\", \"pointer\")\n          .on('click', function (event, node) {\n            that.hideRelatedHierarchy();\n            \n            let existingMenu = d3.select(\".g-context-menu\");\n            if (existingMenu.node() != null) {\n              existingMenu.remove();\n            }\n            \n            d3.select(\".g-hierarchy-got-connector\").remove();\n          });\n      }\n      \n\t\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t\t}\n\t\telse {\n\t\t\texistingMenu.remove();\n\t\t}\n\t}\n\n\tremoveGotFromHierarchy(){\n\t\t\n\t\tlet svgGot = this.hierarchyComponent.primarySvgHierarchy.getNodeByCode(this.geoObjectType.code);\n\n\t\tlet startPoint: any = svgGot.getPos();\n\t\t// let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\n\t\t// let deltaX: number = startPoint.x - svgMousePoint.x;\n\t\t// let deltaY: number = startPoint.y - svgMousePoint.y;\n\n\t\tlet obj = this.hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tlet message = this.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n\t\tmessage = message.replace(\"{label}\", obj.label.localizedValue);\n\n\t\tthis.bsModalRef.content.message = message;\n\t\tthis.bsModalRef.content.data = obj.code;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tlet treeNode = svgGot.getTreeNode();\n\t\t\tlet parent = null;\n\t\t\tif (treeNode.parent == null) {\n\t\t\t\tparent = \"ROOT\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (treeNode.parent.data.inheritedHierarchyCode != null) {\n\t\t\t\t\tparent = \"ROOT\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent = treeNode.parent.data.geoObjectType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { console.log(err) });\n\t\t});\n\n\t\t// (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n\t\t// \tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t// });\n\t}\n\n\trenderSecondaryHierarchy(relatedHierarchy: HierarchyType) {\n\t\td3.select(\".g-context-menu\").remove();\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\n\t\tlet that = this;\n\t\tlet myBbox = this.getBbox();\n\t\tlet svg = d3.select(\"#svg\");\n\n\t\t// Remove any secondary hierarchy that may already be rendered\n\t\tif (this.hideRelatedHierarchy() === relatedHierarchy.code)\n\t\t{\n\t\t  return;\n\t\t}\n\t\t\n\t\t// Get the bounding box for our primary hierarchy\n\t\tlet primaryHierBbox = (d3.select(\".g-hierarchy[data-primary=true]\").node() as any).getBBox();\n\n\t\t// Render the secondary hierarchy\n\t\tlet svgHt: SvgHierarchyType = new SvgHierarchyType(this.hierarchyComponent, svg, relatedHierarchy, false, this.localizeService, this.modalService);\n\t\tsvgHt.render();\n\t\tlet gSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]')\n\n\t\t// Translate the secondary hierarchy to the right of the primary hierarchy\n\t\tlet gHierarchy: any = d3.select('.g-hierarchy[data-primary=\"false\"]').node();\n\t\tlet bbox = gHierarchy.getBBox();\n\t\tlet paddingLeft: number = primaryHierBbox.width + 40 + (primaryHierBbox.x - bbox.x);\n\t\tgSecondary.attr(\"transform\", \"translate(\" + paddingLeft + \" 0)\");\n\n\t\t// Draw dotted line between the shared node in the hierarchies\n\t\tlet secondaryGot = d3.select('.g-hierarchy[data-primary=false] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\t\tlet secondaryGotBbox = { x: parseInt(secondaryGot.attr(\"x\")), y: parseInt(secondaryGot.attr(\"y\")) - 3, width: parseInt(secondaryGot.attr(\"width\")), height: parseInt(secondaryGot.attr(\"height\")) + 3 };\n\t\tsecondaryGotBbox.x = secondaryGotBbox.x + paddingLeft; // Apply transformation\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\t\tlet gConnector = d3.select(\"#svg\").append(\"g\").classed(\"g-hierarchy-got-connector\", true);\n\t\tgConnector.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\n\t\t\t\t  \"d\",\n\t\t\t\t  \"M\" + (myBbox.x + myBbox.width) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"H\" + (((secondaryGotBbox.x) - (myBbox.x + myBbox.width)) / 2 + myBbox.x + myBbox.width)\n\t\t\t\t+ \"V\" + (secondaryGotBbox.y + secondaryGotBbox.height / 2)\n\t\t\t\t+ \"H\" + secondaryGotBbox.x\n\t\t\t);\n\n\t\t// Draw arrow for dotted line\n\t\tconst arrowRectD = { height: 10, width: 7 };\n\t\tlet gArrow = gConnector.append(\"g\").classed(\"g-hierarchy-got-connector-arrow\", true);\n\t\tgArrow.append(\"rect\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", myBbox.x + myBbox.width - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", myBbox.y + myBbox.height / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", \n\t\t\t\t\"M\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width + arrowRectD.width / 2 - ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Recalculate the viewbox (should probably be the last thing that happens)\n\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t}\n\n\tonClickInheritHierarchy(hierarchy: HierarchyType) {\n\t\tthis.hierarchyComponent.handleInheritHierarchy(this.svgHierarchyType.getCode(), hierarchy.code, this.getCode());\n\t}\n\n\tonClickUninheritHierarchy() {\n\t\tthis.hierarchyComponent.handleUninheritHierarchy(this.svgHierarchyType.getCode(), this.getCode());\n\t}\n\n}\n\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { TreeNode } from 'angular-tree-component';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\n\n\n@Component( {\n    selector: 'add-child-to-hierarchy-modal',\n    templateUrl: './add-child-to-hierarchy-modal.component.html',\n    styleUrls: []\n} )\nexport class AddChildToHierarchyModalComponent implements OnInit {\n\n\t /*\n     * parent id of the node being created\n     */\n    public parent: TreeNode;\n\n    public hierarchyType: HierarchyType;\n\n    public nodes: HierarchyNode[];\n\n    public allGeoObjectTypes: GeoObjectType[];\n\n    public selectedGeoObjectType: GeoObjectType;\n\n    private selectUndefinedOptionValue: any;\n\n\tprivate toRoot: boolean = false;\n\n    message: string = null;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n    public onNodeChange: Subject<HierarchyType>;\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef ) {\n    }\n\n    ngOnInit(): void {\n        this.onNodeChange = new Subject();\n    }\n    \n    onSelect(value: string): void {\n    \tthis.allGeoObjectTypes.forEach(gObj => {\n    \t\tif(gObj.code === value){\n    \t\t\tthis.selectedGeoObjectType = gObj;\n    \t\t}\n    \t})\n    }\n    \n    handleOnSubmit(): void {\n        this.message = null;\n        \n        let parent = (this.toRoot) ? \"ROOT\" : this.parent.data.geoObjectType;\n        this.hierarchyService.addChildToHierarchy( this.hierarchyType.code, parent, this.selectedGeoObjectType.code ).then( data => {\n            this.onNodeChange.next( data );\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n        \n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<form class=\"modal-form\">\n\n  <div *ngIf=\"parent != null\" class=\"modal-body\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"hierarchy.management.button.addRelationship\"></localize>\n      </h1>\n    </div>\n    <fieldset>\n\n      <div class=\"form-group\">\n\n        <select *ngIf=\"allGeoObjectTypes\" (change)=\"onSelect($event.target.value)\">\n          <option disabled hidden [value]=\"selectUndefinedOptionValue\">-- <localize\n              key=\"hierarchy.management.create.child.option.label.selectType\"></localize> --</option>\n          <!-- to filter out all geoobjecttypes that are already in hierarchies use this pip in the iterator > | geoobjecttype:nodes -->\n          <option></option>\n          <option *ngFor=\"let geoObjType of allGeoObjectTypes\" value={{geoObjType.code}}>\n            {{geoObjType.label.localizedValue}}\n          </option>\n        </select>\n\n      </div>\n\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.cancel\"></localize>\n          </span>\n        </button>\n        <button type=\"submit\" (click)=\"handleOnSubmit()\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.ok\"></localize>\n          </span>\n        </button>\n      </div>\n    </fieldset>\n  </div>\n</form>\n","import { Input, Component, OnInit, OnDestroy, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { GeoObjectOverTime, GeoObjectType } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate } from \"@shared/service\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-create-geo-object',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./crtable-detail-create-geo-object.css'],\n    encapsulation: ViewEncapsulation.None\n} )\nexport class CreateUpdateGeoObjectDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n    @Input() action: any;\n\n    preGeoObject: GeoObjectOverTime = null;\n\n    postGeoObject: GeoObjectOverTime = null;\n\n    geoObjectType: GeoObjectType = null;\n\n    readOnly: boolean = true;\n\n    @ViewChild( \"attributeEditor\" ) attributeEditor;\n\n    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\n    bsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    dateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    forDate: Date = null;\n\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private registryService: RegistryService ) {\n\n        this.forDate = new Date();\n\n        const day = this.forDate.getUTCDate();\n        this.dateStr = this.forDate.getUTCFullYear() + \"-\" + ( this.forDate.getUTCMonth() + 1 ) + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n    ngOnInit(): void {\n\n        this.postGeoObject = this.action.geoObjectJson;\n        this.geoObjectType = this.action.geoObjectType;\n\n        if ( this.isNew() ) {\n            this.preGeoObject = this.postGeoObject;\n        }\n\n        this.onSelect( this.action );\n    }\n\n    isNew(): boolean {\n        return ( this.action.actionType === \"net.geoprism.registry.action.geoobject.CreateGeoObjectAction\" );\n    }\n\n    handleDateChange(): void {\n        this.forDate = new Date( Date.parse( this.dateStr ) );\n    }\n\n    applyAction() {\n        var action = JSON.parse( JSON.stringify( this.action ) );\n        action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n        if ( this.geometryEditor != null ) {\n            action.geoObjectJson.geometry = this.geometryEditor.saveDraw().geometry;\n        }\n\n        this.changeRequestService.applyAction( action ).then( response => {\n            this.endEdit();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    onSelect( action: AbstractAction ) {\n\n        // There are multiple ways we could show a diff of an object.\n        //\n        // This line will show a diff only when a person is typing so as to show the\n        // change they are creating.\n        //\n        // The method below (getGeoObjectByCode) will compare what is in the database\n        // at that time with the change request. This will only track state compared to\n        // what is currently in the database which isn't necessarily the original change.\n        //\n        // A third option which is NOT implemented yet would store the state of a geoobject\n        // (original and target) with the change request so as to manage state at time of\n        // the change request submission.\n        //\n        // Display diff when a user is changing a value\n        // this.preGeoObject = JSON.parse(JSON.stringify(this.postGeoObject));\n\n        // Display diff of what's in the database\n        if (\n            this.action.actionType === \"net.geoprism.registry.action.geoobject.UpdateGeoObjectAction\"\n            //    && typeof this.postGeoObject.properties.createDate !== 'undefined'\n        ) {\n            this.registryService.getGeoObjectOverTime( this.postGeoObject.attributes.code, this.geoObjectType.code ).then( geoObject => {\n                this.preGeoObject = geoObject;\n\n            } ).catch(( err: HttpErrorResponse ) => {\n                console.log( \"Error\", err );\n                this.error( err );\n            } );\n        }\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    @HostListener( 'window:beforeunload' )\n    canDeactivate(): Observable<boolean> | boolean {\n        if ( !this.readOnly ) {\n            //event.preventDefault();\n            //event.returnValue = 'Are you sure?';\n            //return 'Are you sure?';\n\n            return false;\n        }\n\n        return true;\n    }\n\n    afterDeactivate( isDeactivating: boolean ) {\n        if ( isDeactivating && !this.readOnly ) {\n            this.unlockActionSync();\n        }\n    }\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.readOnly = false;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( true );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.readOnly = true;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( false );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n\n    <div class=\"heading text-center\">\n        <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n\t  </div>\n    \n    <div class=\"detail-content\">\n      <h4>\n        <localize key=\"io.geoObjectType\"></localize>: {{action.geoObjectType.code}}\n      </h4>\n    \n      <div style=\"margin: 20px 0;\">\n        <span style=\"margin-right:10px;\"><localize key=\"changeOverTime.forDate\"></localize></span>\n        <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n      </div>    \n    \n\n        <geoobject-shared-attribute-editor \n          #attributeEditor\n          *ngIf=\"preGeoObject\"\n          [readOnly]=\"true\"\n          [geoObjectType]=\"geoObjectType\"\n          [postGeoObject]=\"postGeoObject\"\n          [preGeoObject]=\"preGeoObject\"\n          [forDate]=\"forDate\"\n          [isGeometryInlined]=\"true\">\n        </geoobject-shared-attribute-editor>\n\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" disabled></textarea>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.maintainerNotes\"></localize> :\n            </label>\n            <textarea [disabled]=\"readOnly\" style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.maintainerNotes\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"readOnly\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Input, Component, OnInit, OnDestroy, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\nimport { AddChildAction } from '@registry/model/crtable';\nimport { ChangeRequestService } from '@registry/service';\nimport { ComponentCanDeactivate } from \"@shared/service\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-add-remove-child',\n    templateUrl: './detail.component.html',\n    styleUrls: []\n} )\nexport class AddRemoveChildDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n    @Input() action: AddChildAction;\n\n    original: AddChildAction;\n\n    readOnly: boolean = true;\n\n\n    private bsModalRef: BsModalRef;\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService ) {\n\n    }\n\n    ngOnInit(): void {\n        this.original = Object.assign( {}, this.action );\n    }\n\n    applyAction() {\n        this.changeRequestService.applyAction( this.action ).then( response => {\n            this.original = Object.assign( {}, this.action );\n\n            this.unlockAction();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    @HostListener( 'window:beforeunload' )\n    canDeactivate(): Observable<boolean> | boolean {\n        if ( !this.readOnly ) {\n            //event.preventDefault();\n            //event.returnValue = 'Are you sure?';\n            //return 'Are you sure?';\n\n            return false;\n        }\n\n        return true;\n    }\n\n    afterDeactivate( isDeactivating: boolean ) {\n        if ( isDeactivating && !this.readOnly ) {\n            this.unlockActionSync();\n        }\n    }\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.readOnly = false;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.readOnly = true;\n\n            this.action = this.original;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n    onSelect( action: AddChildAction ) {\n        this.action = action;\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childId\" [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childTypeCode\" [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.parentid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentId\"  [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentTypeCode\"  [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.hierarchycode.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.hierarchyTypeCode\"  [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\">\n            <localize key=\"change.request.status\"></localize> :\n        </label>\n        <select style=\"float:none;\" [ngClass]=\"{'status-rejected': action.approvalStatus === 'REJECTED', 'status-accepted': action.approvalStatus === 'ACCEPTED', 'status-pending': action.approvalStatus === 'PENDING'}\" [(ngModel)]=action.approvalStatus   [disabled]=\"readOnly\">\n            <option value=\"REJECTED\">\n                <localize key=\"change.request.status.rejected\"></localize>\n            </option>\n            <option value=\"ACCEPTED\">\n                <localize key=\"change.request.status.accepted\"></localize>\n            </option>\n            <option value=\"PENDING\">\n                <localize key=\"change.request.status.pending\"></localize>\n            </option>\n        </select>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\"  disabled></textarea>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.maintainerNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.maintainerNotes\"  [disabled]=\"readOnly\"></textarea>\n        </div>\n        \n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"readOnly\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n        \n    </div>\n</div>","import { GeoObjectOverTime, HierarchyOverTime } from './registry';\n\nexport class ChangeRequest {\n\toid: string;\n\tcreatedBy: string;\n\tcreateDate: Date;\n\tapprovalStatus: string;\n\tstatusLabel?: string;\t\n\ttotal: number;\n\tpending: number;\n\tphoneNumber?: string;\n\temail?: string;\n}\n\nexport class AbstractAction {\n\tapprovalStatus: string;\n\tcreateActionDate: Date;\n\tlabel: string;\n\toid: string;\n\tactionType: string;\n\tactionLabel: string;\n\tdecisionMaker?: string;\n}\n\nexport class UpdateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class CreateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class AddChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyTypeCode: string;\n\tcontributorNotes: string;\n\tmaintainerNotes: string;\n}\n\nexport class RemoveChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyCode: string;\n}\n\nexport class GovernanceStatus {\n\tkey: string;\n\tlabel: string;\n}\n\nexport class PageEvent {\n\ttype: string;\n\tdata: any;\n}\n\nexport class SetParentAction extends AbstractAction {\n\tchildCode: string;\n\tchildTypeCode: string;\n\tjson: HierarchyOverTime[];\n}\n\n","import { Input, Component, OnInit, OnDestroy, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate } from \"@shared/service\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\nimport { ManageParentVersionsModalComponent } from '@registry/component/cascading-geo-selector/manage-parent-versions-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component({\n\n\tselector: 'set-parent-detail',\n\ttemplateUrl: './set-parent-detail.component.html',\n\tstyleUrls: [],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SetParentDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n\t@Input() action: any;\n\n\thierarchies: HierarchyOverTime[] = [];\n\treadOnly: boolean = true;\n\n\tbsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tconstructor(private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private registryService: RegistryService) {\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.hierarchies = this.action.json;\n\n\t\tthis.onSelect(this.action);\n\t}\n\n\tapplyAction() {\n\t\tvar action = JSON.parse(JSON.stringify(this.action));\n\n\t\tthis.changeRequestService.applyAction(action).then(response => {\n\t\t\tthis.endEdit();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tonSelect(action: AbstractAction) {\n\n\t}\n\n\tonManageVersions(hierarchy: HierarchyOverTime): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(hierarchy);\n\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\t\t\n\t\t\tif(index !== -1) {\n\t\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t// Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n\t@HostListener('window:beforeunload')\n\tcanDeactivate(): Observable<boolean> | boolean {\n\t\tif (!this.readOnly) {\n\t\t\t//event.preventDefault();\n\t\t\t//event.returnValue = 'Are you sure?';\n\t\t\t//return 'Are you sure?';\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tafterDeactivate(isDeactivating: boolean) {\n\t\tif (isDeactivating && !this.readOnly) {\n\t\t\tthis.unlockActionSync();\n\t\t}\n\t}\n\n\tstartEdit(): void {\n\t\tthis.lockAction();\n\t}\n\n\tpublic endEdit(): void {\n\t\tthis.unlockAction();\n\t}\n\n\tlockAction() {\n\t\tthis.changeRequestService.lockAction(this.action.oid).then(response => {\n\t\t\tthis.readOnly = false;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tunlockAction() {\n\t\tthis.changeRequestService.unlockAction(this.action.oid).then(response => {\n\t\t\tthis.readOnly = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n\tunlockActionSync() {\n\t\t$.ajax({\n\t\t\turl: acp + '/changerequest/unlockAction',\n\t\t\tmethod: \"POST\",\n\t\t\tdata: { actionId: this.action.oid },\n\t\t\tsuccess: function(a) {\n\n\t\t\t},\n\t\t\tasync: false\n\t\t});\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n        <div>\n          <localize key=\"changeOverTime.forDate\"></localize>\n          <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n        </div>    \n        \n        <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"forDate\" [hierarchy]=\"hierarchy\" [readOnly]=\"true\" (onManageVersion)=\"onManageVersions($event)\"> </tree-geo-selector>\n            \n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.status\"></localize> :\n            </label>\n            <select [disabled]=\"readOnly\" style=\"float:none;\" [ngClass]=\"{'status-rejected': action.approvalStatus === 'REJECTED', 'status-accepted': action.approvalStatus === 'ACCEPTED', 'status-pending': action.approvalStatus === 'PENDING'}\" [(ngModel)]=\"action.approvalStatus\">\n                <option value=\"REJECTED\">\n                    <localize key=\"change.request.status.rejected\"></localize>\n                </option>\n                <option value=\"ACCEPTED\">\n                    <localize key=\"change.request.status.accepted\"></localize>\n                </option>\n                <option value=\"PENDING\">\n                    <localize key=\"change.request.status.pending\"></localize>\n                </option>\n            </select>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" disabled></textarea>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.maintainerNotes\"></localize> :\n            </label>\n            <textarea [disabled]=\"readOnly\" style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.maintainerNotes\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"readOnly\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { IOService } from '@registry/service';\nimport { AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-export',\n    templateUrl: './data-export.component.html',\n    styleUrls: []\n} )\nexport class DataExportComponent implements OnInit {\n\n    /*\n     * List of geo object types from the system\n     */\n    types: { label: string, code: string }[]\n\n    /*\n     * Currently selected code\n     */\n    code: string = null;\n\n    /*\n     * List of the hierarchies this type is part of\n     */\n    hierarchies: { label: string, code: string }[] = [];\n\n    /*\n     * Currently selected hierarchy\n     */\n    hierarchy: string = null;\n\n    /*\n     * Currently selected format\n     */\n    format: string = null;\n\n\n    /*\n     * Reference to the modal current showing\n     */\n    bsModalRef: BsModalRef;\n\n\n    constructor( private service: IOService, private modalService: BsModalService, private authService: AuthService ) { }\n\n    ngOnInit(): void {\n        this.service.listGeoObjectTypes( true ).then( types => {\n        \n            //this.types = types;\n            \n            var myOrgTypes = [];\n            for (var i = 0; i < types.length; ++i)\n            {\n              if (this.authService.isOrganizationRA(types[i].orgCode))\n              {\n                myOrgTypes.push(types[i]);\n              }\n            }\n            this.types = myOrgTypes;\n\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    onChange( code: string ): void {\n\n        if ( code != null && code.length > 0 ) {\n            this.service.getHierarchiesForType( code, false ).then( hierarchies => {\n                this.hierarchies = hierarchies;\n                this.hierarchy = null;\n            } ).catch(( err: HttpErrorResponse) => {\n                this.error( err );\n            } );\n        }\n        else {\n            this.hierarchies = [];\n            this.hierarchy = null;\n        }\n\n    }\n\n    onExport(): void {\n\n        if ( this.format == 'SHAPEFILE' ) {\n            window.location.href = acp + '/shapefile/export-shapefile?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n        else if ( this.format == 'EXCEL' ) {\n            window.location.href = acp + '/excel/export-spreadsheet?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n}\n","<!-- <div class=\"new-admin-design-main\"> -->\n    <!-- <cgr-header></cgr-header> -->\n    <loading-bar></loading-bar>\n\n    <!-- <div id=\"app-container\" class=\"container\">\n        <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"io.export.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"io.export.description\"></localize>\n            </p>\n        </div> -->\n\n        <!-- <div class=\"row\">\n            <div class=\"col-md-2\"></div>\n            <div class=\"col-md-8\" *ngIf=\"types\"> -->\n                <form #form=\"ngForm\" *ngIf=\"types\">\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"code\">\n                            <localize key=\"io.geoObjectType\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" (change)=\"onChange($event.target.value)\"\n                                required>\n                                <option></option>\n                                <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\" *ngIf=\"hierarchies.length > 0\">\n                        <label class=\"col-sm-3 text-right\">\n                            <localize key=\"io.modal.hierarchy\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"hierarchy\" required>\n                                <option></option>\n                                <option *ngFor=\"let hierarchy of hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"format\">\n                            <localize key=\"io.format\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                                <option></option>\n                                <option value=\"EXCEL\">\n                                    <localize key=\"io.spreadsheet\"></localize>\n                                </option>\n                                <option value=\"SHAPEFILE\">\n                                    <localize key=\"io.shapefile\"></localize>\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-12 text-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onExport()\">\n                                <localize key=\"io.export\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            <!-- </div>\n            <div class=\"col-md-2\"></div> -->\n        <!-- </div>\n    </div>\n</div> -->\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\n@Pipe({\n  name: 'geoobjecttype',\n  pure: false\n})\nexport class GeoObjectTypePipe implements PipeTransform {\n  transform(items: GeoObjectType[], filter: HierarchyNode[]): any {\n\t  if (!items || !filter) {\n          return items;\n      }\n\t  \n\t  let unassignedGeoObjTypes:string[] = [];\n      this.buildUnassignedGeoObjTypes(filter, unassignedGeoObjTypes)\n      \n      // filter items array, items which match and return true will be\n      // kept, false will be filtered out\n      return items.filter(item => unassignedGeoObjTypes.indexOf(item.code) === -1);\n  }\n  \n  buildUnassignedGeoObjTypes(filter: HierarchyNode[], unassignedGeoObjTypes: string[]): void{\n\t  filter.forEach(f => {\n\t\t  this.processHierarchyNodes(f, unassignedGeoObjTypes);\n\t  })\n  }\n  \n  processHierarchyNodes(node: HierarchyNode, unassignedGeoObjTypes: string[]){\n\t  unassignedGeoObjTypes.push(node.geoObjectType)\n\t  \n\t  node.children.forEach(child => {\n\t\t  this.processHierarchyNodes(child, unassignedGeoObjTypes);\n\t  })\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toEpochDateTime',\n    pure: true\n})\nexport class ToEpochDateTimePipe implements PipeTransform {\n    transform(date: string): any {\n        if (!date ) {\n            return date;\n        }\n       \n        return new Date(date).getTime();\n    }\n}","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\n\nimport { MaintainerGuard, ContributerGuard, AuthGuard } from '../shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'hierarchies',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'data',\n        component: DataPageComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'change-requests',\n        component: ChangeRequestPageComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'master-lists',\n        component: MasterListManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'scheduled-jobs',\n        component: ScheduledJobsComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'job/:oid',\n        component: JobComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'master-list/:oid/:published',\n        component: MasterListComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'master-list-view/:oid',\n        component: MasterListViewComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'change-request',\n        component: SubmitChangeRequestComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'tasks',\n        component: TaskViewerComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'synchronization-configs',\n        component: SynchronizationConfigManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'synchronization-config/:oid',\n        component: SynchronizationConfigComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'location-manager',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code/:editOnly',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'sync/details/:oid',\n        component: SyncDetailsComponent,\n        canActivate: [MaintainerGuard]\n    },\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class RegistryRoutingModule { }"],"sourceRoot":""}