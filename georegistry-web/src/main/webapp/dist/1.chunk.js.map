{"version":3,"sources":["webpack:///./src/app/registry/registry.module.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/registry/service/index.ts","webpack:///./src/app/registry/model/io.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.html","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.ts","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.html","webpack:///./src/app/registry/service/geoobjecttype-management.service.ts","webpack:///./src/app/registry/service/hierarchy.service.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.html","webpack:///./src/app/registry/component/master-list/publish-modal.component.ts","webpack:///./src/app/registry/component/master-list/publish-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.html","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.ts","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.html","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.html","webpack:///./src/app/registry/service/change-request.service.ts","webpack:///./src/app/registry/service/io.service.ts","webpack:///./src/app/registry/service/localization-manager.service.ts","webpack:///./src/app/registry/service/map.service.ts","webpack:///./src/app/registry/service/registry.service.ts","webpack:///./src/app/registry/service/synchronization-config.service.ts","webpack:///./src/app/registry/service/task.service.ts","webpack:///./src/app/registry/component/hierarchy/d3/svg-util.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.html","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.html","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.ts","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.html","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.ts","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.html","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.ts","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.html","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.html","webpack:///./src/app/registry/component/location-manager/layer-panel.component.ts","webpack:///./src/app/registry/component/location-manager/layer-panel.component.html","webpack:///./src/app/registry/component/location-manager/feature-panel.component.ts","webpack:///./src/app/registry/component/location-manager/feature-panel.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.html","webpack:///./src/app/registry/factory/form-validation.factory.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-type.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem.component.html","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.html","webpack:///./src/app/registry/component/data-page/data-page.component.ts","webpack:///./src/app/registry/component/data-page/data-page.component.html","webpack:///./src/app/registry/component/importer/dataimporter.component.ts","webpack:///./src/app/registry/component/importer/dataimporter.component.html","webpack:///./src/app/registry/component/master-list/master-list-manager.component.ts","webpack:///./src/app/registry/component/master-list/master-list-manager.component.html","webpack:///./src/app/registry/component/master-list/export-format-modal.component.ts","webpack:///./src/app/registry/component/master-list/export-format-modal.component.html","webpack:///./src/app/registry/component/crtable/request-table.component.ts","webpack:///./src/app/registry/component/crtable/request-table.component.html","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.html","webpack:///./src/app/registry/pipe/geoobject-attribute-excludes.pipe.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.ts","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.html","webpack:///./src/app/registry/component/master-list/master-list.component.ts","webpack:///./src/app/registry/component/master-list/master-list.component.html","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-view.component.ts","webpack:///./src/app/registry/component/master-list/master-list-view.component.html","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.html","webpack:///./src/app/registry/component/scheduled-jobs/job.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/job.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.html","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.ts","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.html","webpack:///./src/app/registry/component/synchronization-config/details.component.ts","webpack:///./src/app/registry/component/synchronization-config/details.component.html","webpack:///./src/app/registry/component/location-manager/location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/location-manager.component.html","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.ts","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.html","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.ts","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.html","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-node.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.html","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.html","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.html","webpack:///./src/app/registry/model/crtable.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.html","webpack:///./src/app/registry/component/data-export/data-export.component.ts","webpack:///./src/app/registry/component/data-export/data-export.component.html","webpack:///./src/app/registry/pipe/geoobjecttype.pipe.ts","webpack:///./src/app/registry/pipe/to-epoch-date-time.pipe.ts","webpack:///./src/app/registry/registry-routing.module.ts"],"names":["RegistryModule","MapService","HierarchyService","LocalizationManagerService","ChangeRequestService","IOService","GeoObjectTypeManagementService","RegistryService","TaskService","DatePipe","ToEpochDateTimePipe","StepIndicatorComponent","SynchronizationConfigService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","TabsModule","CollapseModule","NgxPaginationModule","SharedModule","RegistryRoutingModule","AccordionModule","forRoot","HierarchyComponent","RequestTableComponent","CreateUpdateGeoObjectDetailComponent","AddRemoveChildDetailComponent","SetParentDetailComponent","CreateHierarchyTypeModalComponent","AddChildToHierarchyModalComponent","CreateGeoObjTypeModalComponent","ManageAttributesModalComponent","DefineAttributeModalContentComponent","ShapefileModalComponent","AttributesPageComponent","LocationPageComponent","LocationProblemPageComponent","LocationProblemComponent","TermProblemPageComponent","TermProblemComponent","SpreadsheetModalComponent","GeoObjectTypePipe","GeoObjectAttributeCodeValidator","EditAttributeModalContentComponent","TermOptionWidgetComponent","AttributeInputComponent","EditTermOptionInputComponent","ManageGeoObjectTypeModalComponent","GeoObjectTypeInputComponent","ManageTermOptionsComponent","LocalizedInputComponent","LocalizedTextComponent","GeoObjectSharedAttributeEditorComponent","ManageVersionsComponent","ManageVersionsModalComponent","SubmitChangeRequestComponent","GeoObjectEditorComponent","GeoObjectAttributeExcludesPipe","GeoObjectEditorMapComponent","SimpleEditControl","DataPageComponent","ChangeRequestPageComponent","CascadingGeoSelector","TreeGeoSelector","ManageParentVersionsModalComponent","ManageParentVersionsComponent","ActionDetailModalComponent","DataImporterComponent","DataExportComponent","MasterListManagerComponent","MasterListComponent","MasterListHistoryComponent","PublishedMasterListHistoryComponent","PublishModalComponent","MasterListViewComponent","ExportFormatModalComponent","ScheduledJobsComponent","JobComponent","JobConflictModalComponent","ReuploadModalComponent","ParentReferenceProblemWidgetComponent","TermReferenceProblemWidgetComponent","RowValidationProblemWidgetComponent","ImportProblemWidgetComponent","TaskViewerComponent","SynchronizationConfigManagerComponent","SynchronizationConfigModalComponent","SynchronizationConfigComponent","SyncDetailsComponent","LocationManagerComponent","DatasetLocationManagerComponent","ContextLayerModalComponent","LayerPanelComponent","FeaturePanelComponent","GeometryPanelComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","services","ImportSheet","Location","Term","TermProblem","LocationProblem","Exclusion","Synonym","ImportConfiguration","key","disabled","inlinelayout","valueChange","EventEmitter","TREE_SCALE_FACTOR_X","TREE_SCALE_FACTOR_Y","DEFAULT_NODE_FILL","DEFAULT_NODE_BANNER_COLOR","INHERITED_NODE_FILL","INHERITED_NODE_BANNER_COLOR","RELATED_NODE_BANNER_COLOR","Instance","hierarchyService","modalService","contextMenuService","localizeService","registryService","authService","userOrganization","currentHierarchy","instance","geoObjectTypes","hierarchiesByOrg","typesByOrg","filter","filteredHierarchiesByOrg","filteredTypesByOrg","hierarchyTypeDeleteExclusions","geoObjectTypeDeleteExclusions","_opened","isSRA","options","displayField","actionMapping","mouse","click","tree","node","$event","treeNodeOnClick","contextMenu","handleOnMenu","this","ngOnInit","refreshAll","fromEvent","searchInput","nativeElement","pipe","Boolean","debounceTime","distinctUntilChanged","tap","onFilterChange","subscribe","localize","decode","renderTree","rootGeoObjectTypes","length","d3","select","remove","forEach","got","canDrag","overflowDiv","scrollLeft","scrollRight","svg","append","attr","primarySvgHierarchy","SvgHierarchyType","render","calculateSvgViewBox","overflowDiv2","calculateCanDrag","getBBox","x","y","width","height","xPadding","yPadding","style","hierarchyComponent","isOrganizationRA","organizationCode","isGeoObjectTypeRM","hierarchyType","getNodeByCode","isAbstract","child","superTypeCode","calculateRelatedHierarchies","relatedHiers","i","hierarchies","hierarchy","descendants","find","data","geoObjectType","inheritedHierarchyCode","push","registerDragHandlers","deltaX","deltaY","that","dropTargets","dropSelector","onDrag","dragEl","dropEl","emptyHierarchyDropZone","closest","onDrop","addChild","mouseTarget","event","clearDropZones","lastDropEl","svgMousePoint","svgPoint","sourceEvent","pageX","pageY","getD3Tree","isPointWithin","dropZoneBbox","activeDropZones","parent","gotRectW","gotRectH","clearGhostNodes","isDragGroup","classed","dropNode","isDropGroup","findGeoObjectTypeByCode","dropElX","parseInt","dropElY","childW","childH","dzg","dropTargetHasChildren","children","isChildDZActive","childDzBacker","childDz","addChildLabel","childDzText","calculateTextWidth","text","parentDzBacker","gotHeaderH","parentDz","addParentLabel","parentDzText","ghostCode","parentIndex","addSiblingLabel","splice","ghostingCode","label","siblingGhostBody","getBboxFromSelection","activeDz","dragGot","youngest","insertBetweenTypes","ghostNode","drag","on","rect","getBoundingClientRect","left","top","selThis","target","document","elementFromPoint","selectAll","each","sidebarDragHandler","registerSvgHandlers","startPoint","svgGot","getPos","setPos","split","svgDragHandler","findHierarchyByCode","ht","findOrganizationByCode","organizations","org","hierarchyCode","parentGeoObjectTypeCode","childGeoObjectTypeCode","addChildToHierarchy","then","index","relatedHierarchies","refreshPrimaryHierarchy","catch","err","error","middleGeoObjectTypeCode","youngestGeoObjectTypeCode","ngAfterViewInit","isRA","orgCode","dropZone","getTypesByOrg","orgTypes","getHierarchiesByOrg","orgHierarchies","desiredHierarchy","init","response","setLocales","locales","setGeoObjectTypes","types","pos","getGeoObjectTypePosition","setHierarchies","setNodesOnInit","updateViewDatastructures","setAbstractTypes","type","sort","a","b","localizedValue","toLowerCase","setType","excludeHierarchyTypeDeletes","indexOf","excludeGeoObjectTypeDeletes","findIndex","h","setCurrentHierarchy","getHierarchy","hierarchyId","rootGeoObjectType","processHierarchyNodes","getHierarchyLabel","geoObjectTypeCode","gOT","show","next","childType","nodeMenuComponent","leafMenuComponent","item","preventDefault","stopPropagation","treeModel","setFocusedNode","isExpanded","collapse","expandAll","hierarchyOnClick","createHierarchy","bsModalRef","animated","backdrop","ignoreBackdropClick","content","onHierarchytTypeCreate","nameA","toUpperCase","nameB","deleteHierarchyType","obj","ConfirmModalComponent","message","submitText","onConfirm","removeHierarchyType","editHierarchyType","readOnly","edit","getHierarchyTypePosition","description","progress","acknowledgement","disclaimer","useConstraints","accessConstraints","contact","phoneNumber","email","isPrimaryHierarchy","createGeoObjectType","groupSuperType","onGeoObjTypeCreate","deleteGeoObjectType","ModalTypes","danger","removeGeoObjectType","errCallback","manageGeoObjectType","attributes","onGeoObjectTypeSubmitted","position","removeFromHierarchy","parentGotCode","gotCode","isActive","filtered","setTimeout","handleInheritHierarchy","hierarchyTypeCode","inheritedHierarchyTypeCode","setInheritedHierarchy","handleUninheritHierarchy","removeInheritedHierarchy","ErrorHandler","showErrorAsDialog","modalStateChangedSource","Subject","modalStepChange","asObservable","getModalState","modalState","setModalState","state","http","eventService","getHierarchyTypes","params","HttpParams","set","JSON","stringify","get","acp","toPromise","headers","HttpHeaders","start","post","finalize","complete","createHierarchyType","htJSON","updateHierarchyType","cdr","disableCodeField","excludeDescription","isDecimal","attributeChange","detectChanges","ngOnChanges","ngOnDestroy","handleOnSubmit","toggleIsUnique","attribute","unique","animate","onAnimationDone","isValid","localeValues","value","console","log","precision","toString","scale","trigger","transition","service","iService","lService","currentDate","Date","readonly","isNew","onMasterListChange","master","listGeoObjectTypes","myOrgTypes","typeCode","oid","displayLabel","create","representativityDate","publishingStartDate","publishDate","listAbstract","process","acknowledgements","contactName","organization","telephoneNumber","subtypeHierarchies","leaf","frequency","isMaster","visibility","getIsDisabled","elClasses","classList","onChange","getHierarchiesForType","getHierarchiesForSubtypes","onSubmit","createMasterList","hide","onCancel","getMessageFromError","isContributorOnly","preGeoObject","postGeoObject","calculatedPreObject","calculatedPostObject","attributeExcludes","forDate","isEditingGeometries","isGeometryInlined","valid","onManageVersion","customEvent","modifiedTermOption","currentTermOption","geoObjectAttributeExcludes","isContributerOnly","apply","geomAttr","geometry","Attribute","LocalizedValue","attributeForm","statusChanges","result","emit","changes","GeoObjectOverTime","parse","calculate","calculateCurrent","geometryEditor","reload","goot","object","time","getTime","startDate","endDate","isChangeOverTime","values","vot","formatDate","Array","isArray","date","formatDateForDisplay","handleChangeCode","onManageAttributeVersions","geoObjectOverTime","isNewGeoObject","onAttributeVersionChange","versionObj","onManageGeometryVersions","isDifferentText","trim","isDifferentValue","onSelectPropertyOption","option","getGeoObjectTypeTermAttributeOptions","termAttributeCode","attrOpts","rootTerm","removeStatuses","isStatusChanged","pre","preCompare","postCompare","getTypeDefinition","getIsValid","getGeoObject","opacity","arr","newArray","formatDateString","dateObj","day","getUTCDate","month","getUTCMonth","getUTCFullYear","dateRangeOverlaps","a_start","a_end","b_start","b_end","dateEndBeforeStart","end","elRef","editEmitter","visible","editSessionEnabled","save","onAdd","onRemove","onClick","getAllActions","requestId","applyAction","action","applyActionStatusProperties","lockAction","actionId","unlockAction","getAllRequests","getRequestDetails","confirmChangeRequest","execute","delete","rejectAllActions","actions","approveAllActions","submitChangeRequest","deleteFile","fileId","actionOid","vfOid","importSpreadsheet","configuration","json","cancelImport","importShapefile","includeAbstractTypes","getTypeAncestors","includeInheritedTypes","includeTypes","getGeoObjectSuggestions","createGeoObjectSynonym","entityId","deleteGeoObjectSynonym","synonymId","vOid","getTermSuggestions","mdAttributeId","limit","createTermSynonym","classifierId","deleteTermSynonym","createTerm","parentTermCode","termJSON","removeTerm","termCode","getNewLocaleInfo","installLocale","language","country","variant","mapboxgl","accessToken","roots","search","getGeoObjectTypes","getParentGeoObjects","childId","childTypeCode","parentTypes","recursive","getChildGeoObjects","parentId","parentTypeCode","childrenTypes","newGeoObjectInstance","gtJSON","updateGeoObjectType","addAttributeType","geoObjTypeId","updateAttributeType","deleteAttributeType","attributeName","addAttributeTermTypeOption","term","updateAttributeTermTypeOption","deleteAttributeTermTypeOption","getGeoObjectBounds","getGeoObjectBoundsAtDate","getGeoObjectByCode","getHierarchiesForGeoObject","getGeoObjectSuggestionsTypeAhead","getScheduledJobs","pageSize","pageNumber","sortAttr","isAscending","getCompletedScheduledJobs","getScheduledJob","historyId","onlyUnresolved","getExportDetails","resolveScheduledJob","submitValidationResolve","config","submitErrorResolve","getMasterLists","getMasterListHistory","versionType","getAllMasterListVersions","getMasterListVersion","getLocales","getGeoObjectOverTime","geoObjectCode","newGeoObjectOverTime","setAttributeVersions","collection","list","createMasterListVersion","publishMasterListVersions","deleteMasterList","deleteMasterListVersion","publishMasterList","getMasterList","applyGeoObjectEdit","parentTreeNode","geoObject","masterListId","notes","valueAttribute","publishShapefile","getMasterListsByOrg","getPublishMasterListJobs","getDatasetBounds","getOrganizations","getPage","getCustomAttrCfg","externalId","getConfigForES","externalSystemId","unlock","run","getJobs","getMyTasks","pageNum","whereStatus","completeTask","taskId","setTaskStatus","status","point","bbox","fontSize","pt","createSVGPoint","matrixTransform","getScreenCTM","inverse","bbox1","bbox2","selection","configurationChange","stateChange","onNext","locations","onBack","hasProblems","locationProblems","resolved","handleError","exclusions","problem","name","exclusion","termProblems","attributeCode","changeDetectorRef","editingGeometry","hasDuplicateDate","hasConflict","originalGeoObjectOverTime","geometryChange","vAttribute","onDateChange","vAttributes","j","h1","conflict","conflictMessage","s1","e1","h2","s2","e2","onAddNewVersion","votArr","ValueOverTime","geometryType","terms","editGeometry","getVersionData","versions","val","getDefaultLocaleVal","locale","defVal","locVal","setDateAttribute","version","setInfinity","PRESENT","mapService","onClickEdit","mapDiv","Math","floor","random","Map","container","zoom","center","initMap","onValidChange","removeLayers","addLayers","editingControl","getAll","features","saveDraw","preGeometry","zoomToBbox","addControl","NavigationControl","addEditButton","enableEditing","simpleEditControl","controls","line_string","polygon","trash","combine_features","uncombine_features","postGeometry","add","removeSource","prefix","sourceName","removeLayer","getSource","renderGeometryAsLayer","color","addSource","addLayer","setData","bboxCode","bboxType","bboxDate","boundArr","bounds","LngLatBounds","fitBounds","padding","featureCollection","polygons","feature","coordinates","points","lines","onVersionChange","handleVersionChange","loading","originalHierarchy","entries","entry","current","parents","getTypeAheadObservable","parentCode","pType","properties","Observable","observer","loopI","goCode","results","typeaheadOnSelect","uid","ancestors","ancestor","format","moment","localeData","longDateFormat","hierarchyOverTime","nodes","isExpandedField","idField","pot","expanded","onEdit","changeRequestService","geoObjectId","reason","showGeoObjectDetails","dataSource","isGeoObjectTypeRC","newValid","attributeEditor","changeTypeaheadLoading","submit","goSubmit","cancel","SuccessModalComponent","tabIndex","submitFunction","arePropertiesValid","areParentsValid","dateStr","isAdmin","isMaintainer","isContributor","isContributer","findVotWithStartDate","votArray","setMasterListId","handleDateChange","setOnSuccessCallback","func","onSuccessCallback","configureAsNew","isGeometryEditable","fetchGeoObjectType","fetchLocales","retJson","goPropertiesPre","goPropertiesPost","configureFromImportError","importError","importErrorId","resolution","configureAsExisting","fetchGeoObject","fetchHierarchies","typeTypeCode","ptn","parentSelector","changePage","nextPage","force","persistModelChanges","getHierarchies","_stepConfig","layerChange","baseLayerChange","baselayerIconHover","lists","baseLayers","sprite","url","selected","contextLayerGroups","updateContextGroups","currentValue","previousValue","contextGroup","contextLayers","thisContextLayer","active","enabled","groupHasEnabledContextLayers","group","hasEnabled","cLayerGroup","cLayer","hasEnabledContextLayers","toggleContextLayer","layer","removeContextLayer","addContextLayerModal","toggleBaseLayer","bl","MODE","VERSIONS","ATTRIBUTES","HIERARCHY","GEOMETRY","_code","geometryEdit","featureChange","modeChange","mode","isEdit","updateCode","v","updateGeometry","setValid","setEditMode","onEditGeometryVersion","calculateGeometry","datasetId","onManageAttributeVersion","onManageHiearchyVersion","onAttributeChange","onHierarchyChange","onEditAttributes","auth","orgs","organizationLabel","getOrganizationLabelFromCode","isPrivate","toggleIsLeaf","isLeaf","toggleIsGeometryEditable","toggleIsAbstract","confirmBsModalRef","geoObjectTypeManagementService","GeoObjectTypeModalStates","modalStateSubscription","unsubscribe","onModalStateChange","onGeoObjectTypeChange","update","close","modalStepIndicatorService","localizationService","geoObjectTypeChange","modalStepConfig","editGeoObjectType","setStepConfig","fetchOrganizationLabel","manageAttributes","onDeleteAttribute","defineAttributeModal","defineAttribute","editAttribute","removeAttributeType","attributeType","newAttribute","setAttribute","attributeInputComponent","AttributeTerm","AttributeDecimal","isFormValid","isAttrValid","validator","c","geoObjectAttributeCode","validate","provide","NG_VALIDATORS","useExisting","multi","assign","back","manageTermOption","openAddTermOptionForm","enableTermOptionForm","termOption","replace","addTermOption","clearTermOption","deleteTermOption","removeTermOption","editTermOption","cancelTermOption","t","svgEl","isPrimary","d3Hierarchy","d3Tree","nodeSize","separation","getCode","treeNode","SvgHierarchyNode","renderHierarchyHeader","hg","colHeaderLabel","colHeader","headerg","hierarchyLabelW","hierarchyLabelH","headerFontSize","hierarchyLabelY","lineWidth","textWidth","html","d","headerGBbox","getRelatedHierarchies","nodeMouseover","element","nodeMousemove","nodeTooltipBbox","documentElement","scrollHeight","scrollWidth","nodeMouseleave","descends","insert","gtree","links","join","source","gHeader","gotHeaderW","MOUSE_HOVER_EVENT_ENTER","MOUSE_HOVER_EVENT_MOVE","MOUSE_HOVER_EVENT_EXIT","gotHeaderFontSize","substring","arrowRectD","gArrow","gotBodyFontSize","gotOptionsButtonFontSize","renderRelatedHierarchiesMenu","router","onStateChange","handleBack","handleNext","handleCancel","postalCode","handleSubmit","cancelText","navigate","onError","entityLabel","hasSynonym","createSynonym","ignoreDataAtLocation","locationLabel","undoAction","termLabel","termId","createOption","ignoreValue","renderContent","pageTitle","sysService","showImportConfig","importStrategies","ImportStrategy","NEW_AND_UPDATE","NEW_ONLY","UPDATE_ONLY","isExternal","isLoading","copyBlank","getExternalSystems","paginatedSystems","externalSystems","resultSet","getUrl","queueLimit","removeAfterUpload","uploader","FileUploader","onBuildItemForm","fileItem","form","importStrategy","onBeforeUploadItem","onCompleteItem","fileRef","onSuccessItem","externalSystem","sys","onErrorItem","queue","uploadAll","setImportSource","onCreate","createDate","lastUpdateDate","write","read","onView","pair","ret","onDelete","onFormat","confirm","objectKeys","requests","columns","filterCriteria","hasBaseDropZoneOver","prop","sortable","refresh","targetActionId","documents","onUpload","onDownloadFile","fileOid","window","location","href","onDeleteFile","docPos","fileOverBase","onSelect","onExecute","changeRequest","request","firstGeoObject","getFirstGeoObjectInActions","hasOwnProperty","deletedRequestId","decisionMaker","approvalStatus","getUsername","onApproveAll","onRejectAll","requestTrackBy","toggle","parentElement","className","includes","toggleId","criteria","setActionStatus","getActiveDetailComponent","actionType","endsWith","showActionDetail","cr","curAction","permissions","cuDetail","endEdit","arDetail","spDetail","transform","items","cHierarchies","parentMap","onManageVersions","pService","route","p","page","count","order","isPublished","isRefreshing","isWritable","searchPlaceholder","snapshot","paramMap","isCollapsed","onPageChange","baseUrl","hostname","port","notifier","webSocket","handleProgressChange","onSort","clearFilters","toggleFilter","getValues","base","unshift","total","f","s","handleInputChange","handleListChange","isFilterable","dependency","editModal","onPublish","onNewGeoObject","onExport","encodeURIComponent","onDeleteMasterListVersion","updateList","onViewMetadata","onPublishShapefile","onDownloadShapefile","ioService","activeJobsPage","completeJobsPage","activeTimeCounter","completeTimeCounter","isViewAllOpen","onActiveJobsPageChange","pollingData","interval","onCompleteJobsPageChange","formatJobStatus","job","formatStepConfig","stepConfig","stage","getJobStatus","getCompletedStatus","jobStage","targetStage","jobPos","onViewAllCompleteJobs","onCancelScheduledJob","jobId","onResolveScheduledJob","allSelected","timeCounter","isPolling","hasRowValidationProblem","formatAffectedRows","rows","formatValidationResolve","onProblemResolved","getFriendlyProblemType","probType","onConflictAction","importErrors","problems","onViewAllActiveJobs","toggleAll","row","onReuploadAndResume","onProblemResolvedListener","onEditGeoObject","searchLabel","getString","getValidationProblemDisplayLabel","onIgnore","cfg","validationProblemId","onCreateSynonym","title","warning","errorMessage","taskService","inProgressTasks","completedTasks","onInProgressTasksPageChange","upper","str","onCompletedTasksPageChange","onCompleteTask","task","onMoveTaskToInProgress","onViewAllCompletedTasks","onSuccess","level","system","cOrg","cSystem","levelRows","orgUnitGroups","oIndex","sIndex","systems","esConfig","levels","levelRow","levelNum","isAttributeEditor","hasAttributes","onOrganizationSelected","onChangeExternalSystem","lvl","addLevel","len","removeLevel","levelRowIndex","editorIndex","getEditorIndex","newLevelNum","configureAttributes","onSelectGeoObjectType","getTermOptions","dhis2Id","dhis2Attrs","dhis2Attr","onChangeAttrMapping","newValue","attrCfg","attrs","attrCfgAttr","isDifferentGot","isOrgUnitGroup","onChangeTargetType","onRun","exportErrors","SEARCH","VIEW","vectorLayers","preventSingleClick","urlSubscriber","geoObjectUid","geoObj","protocol","host","attributionControl","changeMode","clearGeometryEditing","onModeChange","AttributionControl","compact","handleMapClickEvent","fc","zoomToFeature","addVectorLayer","handleBasemapStyle","baseLayer","setStyle","timer","maxZoom","onContextLayerChange","removeVectorLayer","tiles","navigator","deleteAll","removeControl","onGeometryEdit","addEditLayers","onMapSave","getDrawGeometry","groupHasContextLayers","hasCLayers","isVersionForHighlight","toolsIconHover","editOnly","llb","vLayer","prevLayer","onFeatureChange","setFilter","svgHierarchyType","dragging","getBbox","inheritNode","heritX","heritY","inheritBbox","uninheritNode","uninheritBbox","getTreeNode","hideRelatedHierarchy","existingSecondary","existingMenu","contextMenuGroup","hasActionsPermissions","titleLabel","actionsTitle","removeFromHierarchyLabel","noRelatedHierLabel","hideRelatedHierarchyLabel","uninheritLabel","inheritLabel","isSecondaryHierarchyRendered","numActions","removeWidth","hideRelatedWidth","uninheritWidth","existingSecondaryCode","secondaryHierarchy","relatedGotHasParents","inheritWidth","relatedHierarchyCode","relatedHierarchy","relatedHierarchyLabel","noHierLabelWidth","heightAdditions","widthPadding","renderSecondaryHierarchy","removeGotFromHierarchy","onClickUninheritHierarchy","onClickInheritHierarchy","myBbox","primaryHierBbox","gSecondary","paddingLeft","secondaryGot","secondaryGotBbox","gConnector","toRoot","onNodeChange","allGeoObjectTypes","gObj","selectedGeoObjectType","isEditing","geoObjectJson","startEdit","unlockActionSync","$","ajax","method","success","async","original","canDeactivate","afterDeactivate","isDeactivating","ChangeRequest","Document","AbstractAction","UpdateGeoObjectAction","CreateGeoObjectAction","AddChildAction","RemoveChildAction","GovernanceStatus","PageEvent","SetParentAction","unassignedGeoObjTypes","buildUnassignedGeoObjTypes","routes","path","component","canActivate","AuthGuard","MaintainerGuard","ContributerGuard","LocationStrategy","useClass","HashLocationStrategy","forChild"],"mappings":"mKAAA,SACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UAEA,UAEA,O,8UAGA,4B,wCAoJaA,I,8DAAAA,IAAc,UA9Cf,CACV,GAAAC,WACA,GAAAC,iBACA,GAAAC,2BACA,GAAAC,qBACA,GAAAC,UACA,GAAAC,+BACA,GAAAC,gBACA,GAAAC,YACA,EAAAC,SACA,GAAAC,oBACA,GAAAC,uBACA,GAAAC,8BACA,SAlHQ,CACR,EAAAC,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBACA,GAAAC,gBAAgBC,c,EAnBlB,GAoJa,EAAA9B,mB,iEAAAA,GAAc,eA9HzB,EAAA+B,mBACA,EAAAC,sBACA,EAAAC,qCACA,EAAAC,8BACA,EAAAC,yBACA,EAAAC,kCACA,EAAAC,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAC,wBACA,EAAAC,wBACA,EAAAC,sBACA,EAAAC,6BACA,EAAAC,yBACA,EAAAC,yBACA,EAAAC,qBACA,EAAAC,0BACA,GAAAC,kBACA,GAAAC,gCACA,EAAAC,mCACA,EAAAC,0BACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,kCACA,EAAAC,4BACA,EAAAC,2BACA,EAAAC,wBACA,EAAAC,uBACA,EAAAC,wCACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,6BACA,EAAAC,yBACA,GAAAC,+BACA,GAAAvD,oBACA,GAAAwD,4BACA,GAAAC,kBACA,EAAAC,kBACA,EAAAC,2BACA,GAAAC,qBACA,GAAAC,gBACA,GAAAC,mCACA,GAAAC,8BACA,GAAAC,2BACA,EAAA3C,mBACA,GAAA4C,sBACA,GAAAC,oBAEA,EAAAC,2BACA,GAAAC,oBACA,GAAAC,2BACA,GAAAC,oCACA,EAAAC,sBACA,GAAAC,wBAEA,EAAAC,2BACA,GAAAC,uBACA,GAAAC,aACA,GAAAC,0BACA,GAAAC,uBACA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,oCACA,GAAA/E,uBACA,GAAAgF,6BACA,GAAAC,oBAEA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,+BACA,GAAAC,qBAEA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,2BACA,GAAAC,oBACA,GAAAC,sBACA,GAAAC,wBAAsB,SAlGtB,EAAAzF,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBAAqB,sB,uBAgDrB,GAAA8C,2BAA0B,2nEAC1B,EAAA3C,mBA5CA,EAAAC,sBACA,EAAAC,qCACA,EAAAC,8BACA,EAAAC,yBACA,EAAAC,kCACA,EAAAC,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAC,wBACA,EAAAC,wBACA,EAAAC,sBACA,EAAAC,6BACA,EAAAC,yBACA,EAAAC,yBACA,EAAAC,qBACA,EAAAC,0BAEA,GAAAE,gCACA,EAAAC,mCACA,EAAAC,0BACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,kCACA,EAAAC,4BACA,EAAAC,2BACA,EAAAC,wBACA,EAAAC,uBACA,EAAAC,wCACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,6BACA,EAAAC,yBAGA,GAAAE,4BACA,GAAAC,kBACA,EAAAC,kBACA,EAAAC,2BACA,GAAAC,qBACA,GAAAC,gBACA,GAAAC,mCACA,GAAAC,8BACA,GAAAC,2BAEA,GAAAC,sBACA,GAAAC,oBAEA,EAAAC,2BACA,GAAAC,oBACA,GAAAC,2BACA,GAAAC,oCACA,EAAAC,sBACA,GAAAC,wBAEA,EAAAC,2BACA,GAAAC,uBACA,GAAAC,aACA,GAAAC,0BACA,GAAAC,uBACA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,oCACA,GAAA/E,uBACA,GAAAgF,6BACA,GAAAC,oBAEA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,+BACA,GAAAC,qBAEA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,2BACA,GAAAC,oBACA,GAAAC,sBACA,GAAAC,wBAAsB,qPA5DtB,GAAArD,kBAgBA,GAAAgB,+BACA,GAAAvD,uB,oBCzKF,IAAI6F,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,WAAY,IACZ,cAAe,IACf,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,uZCnSpB,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEa,EAAAY,SAAkB,CAC9B,EAAAlH,qBACA,EAAAE,+BACA,EAAAJ,iBACA,EAAAG,UACA,EAAAF,2BACA,EAAAF,WACA,EAAAM,gBACA,EAAAK,6BACA,EAAAJ,aAGD,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,a,qMC5BA,mBAAa,EAAA+G,cAUb,mBAAa,EAAAC,WAOb,mBAAa,EAAAC,OAKb,mBAAa,EAAAC,cAUb,mBAAa,EAAAC,kBAUb,mBAAa,EAAAC,YAKb,mBAAa,EAAAC,UAMb,mBAAa,EAAAC,uB,kHCvDb,W,GACA,O,oPCAA,0BACE,4BACE,4BACE,4BACE,4BACE,4BACE,4BACA,6BAA6B,iBAAO,qCAAkE,iBAAC,iBACzG,iBACF,iBACA,6BACE,8BACE,kCAAU,2FAAmG,iBAC/G,iBACF,iBACF,iBACF,iBACF,iBACF,iB,8CAjBO,6FACE,8EAEI,+EAES,yCAC6C,4CAGtD,+EAES,+CAA+B,sBAA/B,CAA+B,iCDVrD,iBAYI,aANgB,KAAAC,IAAc,GAEd,KAAAC,UAAoB,EACvB,KAAAC,cAAwB,EACpB,KAAAC,YAAc,IAAI,EAAAC,a,wCAL1BxE,I,iCAAAA,EAAsB,wVCPnC,gC,KAAK,8C,0ODEL,GAKa,EAAAA,0B,qSERb,SAEA,QACA,QAIA,GAHA,MAEA,OACA,QAEA,SACA,SACA,SAEA,SAEA,GADA,MACA,QAOA,GAFA,OAEA,QACA,S,sMCWS,6BACC,gCAAQ,mIAA6B,MAAM,EAAO,EAAF,QAE/C,6BACD,iBAE8B,gCAAQ,mIAA6B,MAAM,EAAM,EAAF,QAE3C,6BACJ,iBAC/B,kB,mDAWE,2BAEC,2I,uBAEgC,iB,KADhC,kE,mDAQgC,2BACI,qKAAmC,EAAO,EAAF,QAE5C,kB,mDAhBlC,8BAEC,6BAMA,2BACC,uIAAmC,M,uBAEH,iBAEA,6BAIlC,iB,+DAdE,sEAOA,+EAGmC,kD,mDAMrC,8BACC,2BACC,uIAAmC,M,uBACU,iBAC/C,iB,MADE,gF,+FA7BH,4BAKC,YAEA,gCAmBA,gCAKD,kB,4CA7BuD,0BAAgB,yFADrD,mGAA6G,0BAI9H,oEAEM,2EAmBA,6E,yBA7CT,4BACC,0BAEC,6BACC,4BAAO,YAAsC,iBAC9C,iBAEA,+BAYA,+BAgCD,iBACD,kB,2CAhDU,+DAGH,6EAca,gD,mDAiDlB,6BACC,gCAAQ,mGAEP,6BACD,iBACD,kB,mDASE,2BAEC,2I,uBAC8C,iB,KAA9C,kE,mDAJF,8BACC,6BAIA,2BACC,qIAAsC,M,uBACO,iBAC/C,iB,+DAPI,sEAMF,gF,mDAGF,8BACC,2BACC,qIAAsC,M,uBACO,iBAC/C,iB,MADE,gF,mGAnBH,4BAGC,0HACA,sBAA8B,YAE9B,gCAUA,gCAKD,iB,+CArB0D,0BAAqB,2GAIhD,oEAExB,2EAUA,6E,yBA9BT,4BACC,0BAEC,6BACC,4BAAO,YAA2C,iBACnD,iBAEA,+BAOA,8BAsBD,iBACD,kB,2CAjCU,+DAGH,6EAOD,sD,sBAgCR,6BAEC,6BACC,6BACC,2BACC,6BACD,iBACD,iBACD,iBACD,kBDvHQ,EAAAyE,oBAA8B,IAC9B,EAAAC,oBAA8B,IAE9B,EAAAC,kBAAoB,UACpB,EAAAC,0BAA4B,UAC5B,EAAAC,oBAAsB,UACtB,EAAAC,4BAA8B,UAC9B,EAAAC,0BAA4B,EAAAD,4BAEzC,mBAAa,EAAAE,WAYb,iBAqFE,WAAYC,EAA4CC,EAC9CC,EACRC,EAA8CC,EAA0CC,GAF1F,WAAwD,KAAAJ,eAC9C,KAAAC,qBACsC,KAAAE,kBAA0C,KAAAC,cA/E1F,KAAAC,iBAA2B,KAG3B,KAAAC,iBAAkC,KAElC,KAAAC,SAAqB,IAAIT,EAGzB,KAAAU,eAAkC,GAElC,KAAAC,iBAA0E,GAC1E,KAAAC,WAA8D,GAE9D,KAAAC,OAAiB,GACjB,KAAAC,yBAAkF,GAClF,KAAAC,mBAAsE,GAGtE,KAAAC,8BAA0C,CAAC,YAAa,mBACxD,KAAAC,8BAA0C,CAAC,QAE3C,KAAAC,SAAmB,EAsBnB,KAAAC,OAAiB,EAMjB,KAAAC,QAAU,CAMRC,aAAc,QACdC,cAAe,CACbC,MAAO,CACLC,MAAO,SAACC,EAAWC,EAAWC,GAC5B,EAAKC,gBAAgBF,EAAMC,IAE7BE,YAAa,SAACJ,EAAWC,EAAWC,GAClC,EAAKG,aAAaJ,EAAMC,MAI9BJ,MAAO,IAePQ,KAAKZ,MAAQb,EAAYa,QAEzBY,KAAK9B,iBAAmBA,EACxB8B,KAAK3B,gBAAkBA,E,OAGzB,YAAA4B,SAAA,sBACED,KAAKE,WAAW,MAEhB,EAAAC,UAAUH,KAAKI,YAAYC,cAAe,SAASC,KAGjD,EAAAxB,OAAOyB,SACP,EAAAC,aAAa,KACb,EAAAC,uBACA,EAAAC,KAAI,WACF,EAAKC,qBAGPC,aAGJ,YAAAC,SAAA,SAASxD,GACP,OAAO2C,KAAK3B,gBAAgByC,OAAOzD,IAG7B,YAAA0D,WAAR,sBACE,GAA6B,MAAzBf,KAAKvB,kBAAwE,MAA5CuB,KAAKvB,iBAAiBuC,oBAAiF,GAAnDhB,KAAKvB,iBAAiBuC,mBAAmBC,OAKhI,OAJAC,EAAGC,OAAO,QAAQC,cAClBpB,KAAKrB,eAAe0C,SAAQ,SAACC,GAC3BA,EAAIC,SAAU,KAKlBL,EAAGC,OAAO,mBAAmBC,SAC7BF,EAAGC,OAAO,6BAA6BC,SACvCF,EAAGC,OAAO,8BAA8BC,SAExC,IAAII,EAAmBN,EAAGC,OAAO,iBAAiBxB,OAC9C8B,EAAaD,EAAYC,WACzBC,EAAcF,EAAYE,YAE1BC,EAAMT,EAAGC,OAAO,QAEF,MAAdQ,EAAIhC,SACNgC,EAAMT,EAAGC,OAAO,cAAcS,OAAO,QACjCC,KAAK,KAAM,OAGjB7B,KAAK8B,oBAAsB,IAAI,EAAAC,iBAAiB/B,KAAM2B,EAAK3B,KAAKvB,kBAAkB,EAAMuB,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aACtIyB,KAAK8B,oBAAoBE,SAEzBhC,KAAKiC,sBAEL,IAAIC,EAAoBhB,EAAGC,OAAO,iBAAiBxB,OACnDuC,EAAaT,WAAaA,EAC1BS,EAAaR,YAAcA,EAI3B1B,KAAKrB,eAAe0C,SAAQ,SAACC,GAC3BA,EAAIC,QAAU,EAAKY,iBAAiBb,OAIxC,YAAAW,oBAAA,WACE,IAAIN,EAAWT,EAAGC,OAAO,QAGrB,EAFeQ,EAAIhC,OAEeyC,UAAhCC,EAAC,IAAEC,EAAC,IAAEC,EAAK,QAAEC,EAAM,SAIzBb,EAAIE,KAAK,UAAYQ,EAFJ,GAEoB,KAAOC,EAD3B,IAC2C,KAAOC,EAAQE,IAAgB,KAAOD,EAASE,KAE3GH,GAASA,EAAQE,IAAgB,EAAA/E,oBACjC8E,GAAUA,EAASE,IAAgB,EAAA/E,oBAEnCuD,EAAGC,OAAO,cAAcwB,MAAM,QAASJ,EAAQ,OAIjD,YAAAJ,iBAAA,SAAiBb,GACf,IAAIsB,EAAqB5C,KAEzB,GAAgC,MAA5BA,KAAK8B,oBAuCP,OAAO,EArCP,KAAQ9B,KAAKzB,YAAYa,SAAWY,KAAKzB,YAAYsE,iBAAiBvB,EAAIwB,mBACnE9C,KAAKzB,YAAYwE,kBAAkB/C,KAAK8B,oBAAoBkB,cAAcF,iBAAkBxB,EAAIhF,OAGrG,OAAO,EAIT,GAAwD,MAApD0D,KAAK8B,oBAAoBmB,cAAc3B,EAAIhF,MAC7C,OAAO,EAIT,GAAIgF,EAAI4B,WAAY,CAClB,IAAI,GAAiB,EAUrB,GARAlD,KAAKrB,eAAe0C,SAAQ,SAAC8B,GACvBA,EAAMC,gBAAkB9B,EAAIhF,MAC0C,MAApEsG,EAAmBd,oBAAoBmB,cAAcE,EAAM7G,QAC7D,GAAiB,MAKnB,EACF,OAAO,OAIN,GAAyB,MAArBgF,EAAI8B,eACoE,MAA3ER,EAAmBd,oBAAoBmB,cAAc3B,EAAI8B,eAC3D,OAAO,EASb,OAAO,GAGT,YAAAC,4BAAA,SAA4B/B,GAG1B,IAFA,IAAIgC,EAAe,GAEVC,EAAI,EAAGA,EAAIvD,KAAKwD,YAAYvC,SAAUsC,EAAG,CAChD,IAAIP,EAAgBhD,KAAKwD,YAAYD,GAErC,GAAwC,MAApCP,EAAchC,oBAA8BgC,EAAchC,mBAAmBC,OAAS,EACtEC,EAAGuC,UAAUT,EAAchC,mBAAmB,IAAI0C,cAE5CC,MAAK,SAAChE,GAC5B,OAAOA,EAAKiE,KAAKC,gBAAkBvC,EAAIhF,MAA4C,MAApCqD,EAAKiE,KAAKE,2BAIzDR,EAAaS,KAAKf,EAAc1G,MAKtC,OAAOgH,GAGD,YAAAU,qBAAR,WACE,IAsRIC,EAAgBC,EAAgB3B,EAtRhC4B,EAAOnE,KAEPoE,EAA4B,GAGhCA,EAAYL,KAAK,CACfM,aAAc,sBAAuBC,OAAQ,SAASC,EAAiBC,GAMrE,GALmB,MAAfxE,KAAKwE,SACPxE,KAAKwE,OAAO7B,MAAM,eAAgB,MAClC3C,KAAKwE,OAAS,MAGF,MAAVA,EAAgB,CAClB,IAAIC,EAAyBD,EAAOE,QAAQ,uBAEd,MAA1BD,IACFzE,KAAKwE,OAAStD,EAAGC,OAAOsD,GAAwB9B,MAAM,eAAgB,cAGzEgC,OAAQ,SAASJ,GACC,MAAfvE,KAAKwE,SACPxE,KAAKwE,OAAO7B,MAAM,eAAgB,MAClCwB,EAAKS,SAAST,EAAK1F,iBAAiBnC,KAAM,OAAQ4E,EAAGC,OAAOoD,GAAQ1C,KAAK,OACzE7B,KAAKwE,OAAS,SAMpBJ,EAAYL,KAAK,CACfM,aAAc,qBAAsBC,OAAQ,SAASC,EAAiBM,EAAsBC,GAAhD,WAC1C9E,KAAK+E,iBAEL,IAAIC,EAAahF,KAAKwE,OAKtB,GAAW,MAFItD,EAAGC,OAAO,QAAQxB,OAEjC,CAGA,IAAIsF,EAAgB,EAAAC,SAASJ,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,OA0BxE,GAtBAlB,EAAKrC,oBAAoBwD,YAAY5B,cAAcrC,SAAQ,SAAC1B,GAC1B,cAA5BA,EAAKiE,KAAKC,eAAiC,EAAA0B,cAAcN,EAAetF,EAAKiE,KAAK4B,eACpF,EAAKhB,OAAStD,EAAGC,OAAO,oEAAsExB,EAAKiE,KAAKC,cAAgB,MACxHlE,EAAKiE,KAAK6B,iBAAkB,EAET,MAAf9F,EAAK+F,SACP/F,EAAKiE,KAAK4B,aAAe,CAAEnD,EAAG1C,EAAK0C,EAAI,EAAAN,iBAAiB4D,SAAW,EAAGrD,EAAG3C,EAAK2C,EAAgC,EAA5B,EAAAP,iBAAiB6D,SAAcrD,MAAO,EAAAR,iBAAiB4D,SAAUnD,OAAoC,EAA5B,EAAAT,iBAAiB6D,aAI9KjG,EAAKiE,KAAK6B,iBAAkB,EAET,MAAf9F,EAAK+F,SACP/F,EAAKiE,KAAK4B,aAAe,CAAEnD,EAAG1C,EAAK0C,EAAI,EAAAN,iBAAiB4D,SAAW,EAAGrD,EAAG3C,EAAK2C,EAAI,EAAAP,iBAAiB6D,SAAW,EAAGrD,MAAO,EAAAR,iBAAiB4D,SAAUnD,OAAQ,EAAAT,iBAAiB6D,gBAK/J,MAAf5F,KAAKwE,QAAiC,MAAdQ,GAAqC,MAAfhF,KAAKwE,QAAkBQ,EAAWnD,KAAK,iBAAmB7B,KAAKwE,OAAO3C,KAAK,kBAC3H7B,KAAK6F,iBAAgB,GAGJ,MAAf7F,KAAKwE,OAAgB,CACvB,IAAIsB,EAAc5E,EAAGC,OAAOoD,GAAQwB,QAAQ,oBACtC,EAAU/F,KAAKwE,OAAO3C,KAAK,gBAC7BmE,EAAW7B,EAAKrC,oBAAoBwD,YAAY3B,MAAK,SAAChE,GAAW,OAAOA,EAAKiE,KAAKC,gBAAkB,KACpGoC,EAAc9B,EAAK+B,wBAAwB,GAAShD,WAExDlD,KAAKwE,OAAO3C,KAAK,SAAU,QAE3B,IAAMsE,EAAUC,SAASpG,KAAKwE,OAAO3C,KAAK,MACpCwE,EAAUD,SAASpG,KAAKwE,OAAO3C,KAAK,MAGpCyE,EAAiB,EAAAvE,iBAAiB4D,SAClCY,EAAiB,EAAAxE,iBAAiB6D,SAEpCY,EAAMtF,EAAGC,OAAO,QAAQS,OAAO,KAAKmE,QAAQ,kBAAkB,GAG9DU,IAA+C,MAArBT,EAASU,UAAgD,GAA5BV,EAASU,SAASzF,QACzE0F,IAAmBV,GAAiBH,GAAgBW,GACxD,GAAIE,EAAiB,CACnB3G,KAAK4G,cAAgBJ,EAAI5E,OAAO,QAAQmE,QAAQ,2BAA2B,GACxElE,KAAK,IAAKsE,EAAW,EAAApE,iBAAiB4D,SAAW,EAAMW,EAAS,GAChEzE,KAAK,IAAKwE,EAAU,EAAAtE,iBAAiB6D,SAAW,IAChD/D,KAAK,QAASyE,GACdzE,KAAK,SAAU0E,GACf1E,KAAK,OAAQ,SAEhB7B,KAAK6G,QAAUL,EAAI5E,OAAO,QAAQmE,QAAQ,oBAAoB,GAC3DlE,KAAK,IAAKsE,EAAW,EAAApE,iBAAiB4D,SAAW,EAAMW,EAAS,GAChEzE,KAAK,IAAKwE,EAAU,EAAAtE,iBAAiB6D,SAAW,IAChD/D,KAAK,QAASyE,GACdzE,KAAK,SAAU0E,GACf1E,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,mBAAoB,OAE5B,IAAIiF,EAAgBL,EAAwBtC,EAAK9F,gBAAgByC,OAAO,oCAAsCqD,EAAK9F,gBAAgByC,OAAO,8BAC1Id,KAAK+G,YAAcP,EAAI5E,OAAO,QAAQmE,QAAQ,yBAAyB,GACpElE,KAAK,cAAe,cACpBA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbA,KAAK,IAAKsE,EAAW,EAAApE,iBAAiB4D,SAAW,EAAK,EAAAqB,mBAAmBF,EAAe,IAAM,GAC9FjF,KAAK,IAAKwE,EAAU,EAAAtE,iBAAiB6D,SAAW,GAAKW,EAAS,EAAI,GAClEU,KAAKH,GAIV,IAAKhB,EACL,CACE9F,KAAKkH,eAAiBV,EAAI5E,OAAO,QAAQmE,QAAQ,4BAA4B,GAC1ElE,KAAK,IAAKsE,EAAW,EAAApE,iBAAiB4D,SAAW,EAAMW,EAAS,GAChEzE,KAAK,IAAKwE,EAAU,EAAAtE,iBAAiBoF,WAAaZ,GAClD1E,KAAK,QAASyE,GACdzE,KAAK,SAAU0E,GACf1E,KAAK,OAAQ,SAEhB7B,KAAKoH,SAAWZ,EAAI5E,OAAO,QAAQmE,QAAQ,qBAAqB,GAC7DlE,KAAK,IAAKsE,EAAW,EAAApE,iBAAiB4D,SAAW,EAAMW,EAAS,GAChEzE,KAAK,IAAKwE,EAAU,EAAAtE,iBAAiBoF,WAAaZ,GAClD1E,KAAK,QAASyE,GACdzE,KAAK,SAAU0E,GACf1E,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,mBAAoB,OAE5BX,EAAGC,OAAO,2BAA2BC,SACrC,IAAIiG,EAAoC,MAAnBrB,EAASN,OAAiBvB,EAAK9F,gBAAgByC,OAAO,+BAAiCqD,EAAK9F,gBAAgByC,OAAO,qCACxId,KAAKsH,aAAed,EAAI5E,OAAO,QAAQmE,QAAQ,0BAA0B,GACtElE,KAAK,cAAe,cACpBA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbA,KAAK,IAAKsE,EAAW,EAAApE,iBAAiB4D,SAAW,EAAK,EAAAqB,mBAAmBK,EAAgB,IAAM,GAC/FxF,KAAK,IAAKwE,EAAU,EAAAtE,iBAAiBoF,WAAaZ,EAAS,EAAI,GAC/DU,KAAKI,GAIV,GAAIrH,KAAKuH,WAAa,IAGE,MAAlBvH,KAAKuH,WACPvH,KAAK6F,gBAAmC,MAAnBG,EAASN,QAGT,MAAnBM,EAASN,QAAgB,CAE3B,IADA,IAAI8B,EAAc,KACTjE,EAAI,EAAGA,EAAIyC,EAASN,OAAO9B,KAAK8C,SAASzF,SAAUsC,EAAG,CAC/CyC,EAASN,OAAO9B,KAAK8C,SAASnD,GAErCM,gBAAkB,IACvB2D,EAAcjE,EAAI,GAItB,IAAIkE,EAAkBtD,EAAK9F,gBAAgByC,OAAO,8BAClDkF,EAASN,OAAO9B,KAAK8C,SAASgB,OAAOF,EAAa,EAAG,CAAEG,aAAc,EAAS9D,cAAe,YAAa+D,MAAOH,EAAiBf,SAAU,KAE5IvC,EAAKpD,aACLf,KAAKuH,UAAY,EAIrB,IAAIM,EAAmB3G,EAAGC,OAAO,+BAE5B2E,GAAe,EAAAP,cAAcN,EAAe,EAAA6C,qBAAqB9H,KAAKoH,YACzEpH,KAAKoH,SAASvF,KAAK,SAAU,QAC7B7B,KAAKsH,aAAazF,KAAK,OAAQ,QAC/B8E,GAAmB3G,KAAK6G,QAAQhF,KAAK,SAAU,SAC/C8E,GAAmB3G,KAAK+G,YAAYlF,KAAK,OAAQ,SACjDgG,EAAiBhG,KAAK,SAAU,SAChC7B,KAAK+H,SAAW/H,KAAKoH,UAEdT,GAAmB,EAAApB,cAAcN,EAAe,EAAA6C,qBAAqB9H,KAAK6G,YAChFf,GAAe9F,KAAKoH,SAASvF,KAAK,SAAU,UAC5CiE,GAAe9F,KAAKsH,aAAazF,KAAK,OAAQ,SAC/C7B,KAAK6G,QAAQhF,KAAK,SAAU,QAC5B7B,KAAK+G,YAAYlF,KAAK,OAAQ,QAC9BgG,EAAiBhG,KAAK,SAAU,SAChC7B,KAAK+H,SAAW/H,KAAK6G,SAEa,MAA3BgB,EAAiBlI,QAAkB,EAAA4F,cAAcN,EAAe,EAAA6C,qBAAqBD,OAC3F/B,GAAe9F,KAAKoH,SAASvF,KAAK,SAAU,UAC5CiE,GAAe9F,KAAKsH,aAAazF,KAAK,OAAQ,SAC/C8E,GAAmB3G,KAAK6G,QAAQhF,KAAK,SAAU,SAC/C8E,GAAmB3G,KAAK+G,YAAYlF,KAAK,OAAQ,SACjDgG,EAAiBhG,KAAK,SAAU,QAChC7B,KAAK+H,SAAW,cAGnBpD,OAAQ,SAASJ,GAClB,GAAmB,MAAfvE,KAAKwE,QAAmC,MAAjBxE,KAAK+H,SAAkB,CAChD,IAAI,EAAU/H,KAAKwE,OAAO3C,KAAK,gBAC3BmE,EAAW7B,EAAKrC,oBAAoBwD,YAAY3B,MAAK,SAAChE,GAAW,OAAOA,EAAKiE,KAAKC,gBAAkB,KACpGmE,EAAU9G,EAAGC,OAAOoD,GAAQ1C,KAAK,MAErC,GAAI7B,KAAK+H,WAAa/H,KAAK6G,QACzB,GAAqC,GAAjCb,EAASpC,KAAK8C,SAASzF,OACzBkD,EAAKS,SAAST,EAAK1F,iBAAiBnC,KAAM,EAAS0L,OAEhD,CAGH,IAFA,IAAIC,EAAW,GAEN1E,EAAI,EAAGA,EAAIyC,EAASpC,KAAK8C,SAASzF,SAAUsC,EACnD0E,GAAsBjC,EAASpC,KAAK8C,SAASnD,GAAGM,cAE5CN,EAAIyC,EAASpC,KAAK8C,SAASzF,OAAS,IACtCgH,GAAsB,KAI1B9D,EAAK+D,mBAAmB/D,EAAK1F,iBAAiBnC,KAAM,EAAS0L,EAASC,QAGjEjI,KAAK+H,WAAa/H,KAAKoH,SACP,MAAnBpB,EAASN,OACXvB,EAAK+D,mBAAmB/D,EAAK1F,iBAAiBnC,KAAM,OAAQ0L,EAAS,GAGrE7D,EAAK+D,mBAAmB/D,EAAK1F,iBAAiBnC,KAAM0J,EAASN,OAAO9B,KAAKC,cAAemE,EAAS,GAG1E,YAAlBhI,KAAK+H,UACZ5D,EAAKS,SAAST,EAAK1F,iBAAiBnC,KAAM0J,EAASN,OAAO9B,KAAKC,cAAe3C,EAAGC,OAAOoD,GAAQ1C,KAAK,OAGzG7B,KAAK+E,iBACL/E,KAAK6F,iBAAgB,IACpBd,eAAgB,WACE,MAAf/E,KAAKwE,QACPxE,KAAKwE,OAAO3C,KAAK,SAAU,MAG7B7B,KAAKwE,OAAS,KACdxE,KAAK+H,SAAW,KAEhB/H,KAAK6G,QAAU,KACf7G,KAAKoH,SAAW,KAEhBlG,EAAGC,OAAO,mBAAmBC,UAE5ByE,gBAAiB,SAAS9E,GAAT,WAClB,GAAsB,MAAlBf,KAAKuH,UAAmB,CAC1B,IAAIY,EAAYhE,EAAKrC,oBAAoBwD,YAAY3B,MAAK,SAAChE,GAAW,OAAOA,EAAKiE,KAAK+D,eAAiB,EAAKJ,aAE7G,GAAiB,MAAbY,EAAmB,CAErB,IADA,IAAIX,EAAc,KACTjE,EAAI,EAAGA,EAAI4E,EAAUzC,OAAO9B,KAAK8C,SAASzF,SAAUsC,EAAG,CAChD4E,EAAUzC,OAAO9B,KAAK8C,SAASnD,GAEtCoE,eAAiB3H,KAAKuH,YAC3BC,EAAcjE,GAIC,MAAfiE,IACFW,EAAUzC,OAAO9B,KAAK8C,SAASgB,OAAOF,EAAa,GAC/CzG,GACFoD,EAAKpD,cAKXf,KAAKuH,UAAY,SAOErG,EAAGkH,OACzBC,GAAG,SAAS,SAASvD,GAEpB,GAAgB,UADF5D,EAAGC,OAAOnB,MAAM6B,KAAK,gBACnC,CAIA,IAAIyG,EAAOtI,KAAKuI,wBAChBtE,EAASqE,EAAKE,KAAO1D,EAAMK,YAAYC,MACvClB,EAASoE,EAAKG,IAAM3D,EAAMK,YAAYE,MACtC9C,EAAQ+F,EAAK/F,UAEd8F,GAAG,QAAQ,SAASvD,GAEnB,GAAgB,UADF5D,EAAGC,OAAOnB,MAAM6B,KAAK,gBACnC,CAIAX,EAAGC,OAAO,mBAAmBC,SAE7B,IAAIsH,EAAUxH,EAAGC,OAAOnB,MAGxB0I,EAAQ/F,MAAM,UAAW,QAEzB,IAAIgG,EAASC,SAASC,iBAAiB/D,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,OAElFqD,EAAQ/F,MAAM,UAAW,MAEzB,IAAK,IAAIY,EAAI,EAAGA,EAAIa,EAAYnD,SAAUsC,EACxCa,EAAYb,GAAGe,OAAOtE,KAAM2I,EAAQ7D,GAWtC,GAPA4D,EACG3C,QAAQ,YAAY,GACpBpD,MAAM,OAASmC,EAAMK,YAAYC,MAAQnB,EAAU,MACnDtB,MAAM,MAAQmC,EAAMK,YAAYE,MAAQnB,EAAU,MAClDvB,MAAM,QAASJ,EAAQ,MAGtBmG,EAAQ3C,QAAQ,oBAAqB,CACvC,IAAI,EAAQ,EACZ7E,EAAG4H,UAAU,wCAA0CJ,EAAQ7G,KAAK,MAAQ,MAAMkH,MAAK,WAEzE7H,EAAGC,OADDnB,MAIX+F,QAAQ,YAAY,GACpBpD,MAAM,OAASmC,EAAMK,YAAYC,MAAQnB,EAAU,MACnDtB,MAAM,MAAQmC,EAAMK,YAAYE,MAAQnB,GAN7BlE,KAM0CuI,wBAAwB/F,OAAS,GAAK,EAAS,MACpGG,MAAM,QAASJ,EAAQ,MAE1B,YAGH8F,GAAG,OAAO,SAASvD,GACpB,IAAI4D,EAAUxH,EAAGC,OAAOnB,MACrB+F,QAAQ,YAAY,GACpBpD,MAAM,OAAQ,MACdA,MAAM,MAAO,MACbA,MAAM,QAAS,MAGd+F,EAAQ3C,QAAQ,qBAClB7E,EAAG4H,UAAU,wCAA0CJ,EAAQ7G,KAAK,MAAQ,MAAMkH,MAAK,WACzE7H,EAAGC,OAAOnB,MAGnB+F,QAAQ,YAAY,GACpBpD,MAAM,OAAQ,MACdA,MAAM,MAAO,MACbA,MAAM,QAAS,SAItB,IAAK,IAAIY,EAAI,EAAGA,EAAIa,EAAYnD,SAAUsC,EACxCa,EAAYb,GAAGoB,OAAO3E,KAAM8E,KAIlCkE,CAAmB9H,EAAG4H,UAAU,2DAG1B,YAAAG,oBAAR,WACE,IAGIhF,EAAgBC,EAChBgF,EACAC,EALAvG,EAAqB5C,KAMJkB,EAAGkH,OACrBC,GAAG,SAAS,SAASvD,GACpB,IAAIG,EAAqB,EAAAC,SAASJ,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,OAG7E8D,EAASvG,EAAmBd,oBAAoBmB,cAAc/B,EAAGC,OAAOnB,MAAM6B,KAAK,iBAiCnFqH,EAAaC,EAAOC,SAEpBnF,EAASiF,EAAW7G,EAAI4C,EAAc5C,EACtC6B,EAASgF,EAAW5G,EAAI2C,EAAc3C,KAEvC+F,GAAG,QAAQ,SAASvD,GAEnB5D,EAAGC,OAAO,mBAAmBC,SAE7B,IAAI6D,EAAgB,EAAAC,SAASJ,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,QAExE8D,EAASvG,EAAmBd,oBAAoBmB,cAAc/B,EAAGC,OAAOnB,MAAM6B,KAAK,kBAE5EwH,OAAOpE,EAAc5C,EAAI4B,EAAQgB,EAAc3C,EAAI4B,GAAQ,MAEjEmE,GAAG,OAAO,SAASvD,GAEC5D,EAAGC,OAAO,QAAQU,KAAK,WAAWyH,MAAM,KAE7DH,EAAOE,OAAOH,EAAW7G,EAAG6G,EAAW5G,GAAG,KAoD9CiH,CAAerI,EAAG4H,UAAU,mIAGvB,YAAA5C,wBAAP,SAA+B5J,GAC7B,IAAK,IAAIiH,EAAI,EAAGA,EAAIvD,KAAKrB,eAAesC,SAAUsC,EAAG,CACnD,IAAIjC,EAAqBtB,KAAKrB,eAAe4E,GAE7C,GAAIjC,EAAIhF,OAASA,EACf,OAAOgF,IAKN,YAAAkI,oBAAP,SAA2BlN,GACzB,IAAK,IAAIiH,EAAI,EAAGA,EAAIvD,KAAKwD,YAAYvC,SAAUsC,EAAG,CAChD,IAAIkG,EAAoBzJ,KAAKwD,YAAYD,GAEzC,GAAIkG,EAAGnN,OAASA,EACd,OAAOmN,IAKN,YAAAC,uBAAP,SAA8BpN,GAC5B,IAAK,IAAIiH,EAAI,EAAGA,EAAIvD,KAAK2J,cAAc1I,SAAUsC,EAAG,CAClD,IAAIqG,EAAoB5J,KAAK2J,cAAcpG,GAE3C,GAAIqG,EAAItN,OAASA,EACf,OAAOsN,IAKL,YAAAhF,SAAR,SAAiBiF,EAAuBC,EAAiCC,GAAzE,WACE/J,KAAK9B,iBAAiB8L,oBAAoBH,EAAeC,EAAyBC,GAAwBE,MAAK,SAACR,GAI9G,IAHA,IAAInI,EAAM,EAAK4E,wBAAwB6D,GAEnCG,EAAQ,KACH3G,EAAI,EAAGA,EAAIjC,EAAI6I,mBAAmBlJ,SAAUsC,EACnD,GAAIjC,EAAI6I,mBAAmB5G,KAAOsG,EAAe,CAC/CK,EAAQ3G,EACR,MAIS,MAAT2G,GACF5I,EAAI6I,mBAAmBpG,KAAK8F,GAG9B,EAAKO,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIP,YAAApC,mBAAR,SAA2B2B,EAAuBC,EAAiCU,EAAiCC,GAApH,WACEzK,KAAK9B,iBAAiBgK,mBAAmB2B,EAAeC,EAAyBU,EAAyBC,GAA2BR,MAAK,SAACR,GACzI,EAAKW,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIf,YAAAI,gBAAA,aAIA,YAAAC,KAAA,WACE,OAAO3K,KAAKzB,YAAYoM,QAG1B,YAAA9H,iBAAA,SAAiB+H,EAAiBC,GAChC,YADgC,IAAAA,OAAA,GACzB7K,KAAKZ,OAASY,KAAKzB,YAAYsE,iBAAiB+H,IAGzD,YAAAE,cAAA,SAAclB,GAGZ,IAFA,IAAImB,EAA4B,GAEvBxH,EAAI,EAAGA,EAAIvD,KAAKrB,eAAesC,SAAUsC,EAAG,CACnD,IAAIM,EAA+B7D,KAAKrB,eAAe4E,GAEnDM,EAAcf,mBAAqB8G,EAAItN,MACzCyO,EAAShH,KAAKF,GAIlB,OAAOkH,GAGT,YAAAC,oBAAA,SAAoBpB,GAGlB,IAFA,IAAIqB,EAAkC,GAE7B1H,EAAI,EAAGA,EAAIvD,KAAKwD,YAAYvC,SAAUsC,EAAG,CAChD,IAAIE,EAA2BzD,KAAKwD,YAAYD,GAE5CE,EAAUX,mBAAqB8G,EAAItN,MACrC2O,EAAelH,KAAKN,GAIxB,OAAOwH,GAGF,YAAA/K,WAAP,SAAkBgL,GAAlB,WAGElL,KAAKrB,eAAiB,GAEtBqB,KAAK1B,gBAAgB6M,OAAOlB,MAAK,SAAAmB,GAC/B,EAAK/M,gBAAgBgN,WAAWD,EAASE,SAEzC,EAAKC,kBAAkBH,EAASI,OAEhC,EAAK7B,cAAgByB,EAASzB,cAE9B,EAAKA,cAActI,SAAQ,SAAAuI,GACrB,EAAK/G,iBAAiB+G,EAAItN,QAC5B,EAAKkC,iBAAmBoL,EAAItN,SAIhC,IAAImP,EAAM,EAAKC,yBAAyB,QACpCD,GACF,EAAK9M,eAAe+I,OAAO+D,EAAK,GAGlC,EAAKE,eAAeP,EAAS5H,aAE7B,EAAKoI,eAAeV,GAEpB,EAAKW,8BAEJxB,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIR,YAAAiB,kBAAP,SAAyBC,GAAzB,WAGExL,KAAK8L,iBAAiBN,GAGtBA,EAAMnK,SAAQ,SAAA0K,GACPA,EAAK7I,YACH6I,EAAK3I,eACR,EAAKzE,eAAeoF,KAAKgI,MAM/B/L,KAAKrB,eAAeqN,MAAK,SAACC,EAAGC,GAC3B,OAAID,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,eAAuB,EAChFH,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,cAAsB,EACjF,KAIdZ,EAAMnK,SAAQ,SAAA0K,GACZ,IAAKA,EAAK7I,YACJ6I,EAAK3I,eAAiB2I,EAAK3I,cAAcnC,OAAS,EAEpD,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAK5E,eAAesC,OAAQsC,IAAK,CACnD,IAAI8I,EAAU,EAAK1N,eAAe4E,GAC9BwI,EAAK3I,gBAAkBiJ,EAAQ/P,MACjC,EAAKqC,eAAe+I,OAAOnE,EAAI,EAAG,EAAGwI,QAUzC,YAAAD,iBAAR,SAAyBN,GAAzB,WACEA,EAAMnK,SAAQ,SAAA0K,GACRA,EAAK7I,YACP,EAAKvE,eAAeoF,KAAKgI,OAKxB,YAAAF,yBAAP,sBACE7L,KAAKpB,iBAAmB,GACxBoB,KAAKnB,WAAa,GAElB,IAAK,IAAI0E,EAAI,EAAGA,EAAIvD,KAAK2J,cAAc1I,SAAUsC,EAAG,CAClD,IAAIqG,EAAoB5J,KAAK2J,cAAcpG,GAE3CvD,KAAKpB,iBAAiBmF,KAAK,CAAE6F,IAAKA,EAAKpG,YAAaxD,KAAKgL,oBAAoBpB,KAC7E5J,KAAKnB,WAAWkF,KAAK,CAAE6F,IAAKA,EAAK4B,MAAOxL,KAAK8K,cAAclB,KAG7D5J,KAAKrB,eAAe0C,SAAQ,SAACC,GAC3BA,EAAIC,QAAU,EAAKY,iBAAiBb,GACpCA,EAAI6I,mBAAqB,EAAK9G,4BAA4B/B,MAG5DtB,KAAKW,kBAGA,YAAA2L,4BAAP,SAAmC7I,GACjC,OAAwE,IAAhEzD,KAAKf,8BAA8BsN,QAAQ9I,EAAUnH,OAGxD,YAAAkQ,4BAAP,SAAmC3I,GACjC,OAA4E,IAApE7D,KAAKd,8BAA8BqN,QAAQ1I,EAAcvH,OAG3D,YAAAsP,eAAR,SAAuBV,GAErB,IAAIhB,GAAS,EASb,GAPwB,MAApBgB,EACFhB,EAAQlK,KAAKwD,YAAYiJ,WAAU,SAAAC,GAAK,OAAAA,EAAEpQ,OAAS4O,EAAiB5O,QAE7D0D,KAAKwD,YAAYvC,OAAS,IACjCiJ,EAAQ,GAGNA,GAAS,EAAG,CACd,IAAMzG,EAAYzD,KAAKwD,YAAY0G,GAEnClK,KAAK2M,oBAAoBlJ,GAEzBzD,KAAKe,eAID,YAAA6L,aAAR,SAAqBC,GACnB,IAAIlE,EAAwB,KAO5B,OANA3I,KAAKwD,YAAYnC,SAAQ,SAAAoC,GACnBoJ,IAAgBpJ,EAAUnH,OAC5BqM,EAASlF,MAINkF,GAGD,YAAAgD,eAAR,SAAuB/H,GAAvB,WACMJ,EAA+B,GACnCI,EAAKvC,SAAQ,SAAC2B,EAAekH,GAEvBlH,EAAchC,mBAAmBC,OAAS,GAC5C+B,EAAchC,mBAAmBK,SAAQ,SAAAyL,GACvC,EAAKC,sBAAsBD,MAI/BtJ,EAAYO,KAAKf,MAInBhD,KAAKwD,YAAcA,EAEnBxD,KAAKwD,YAAYwI,MAAK,SAACC,EAAGC,GACxB,OAAID,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,eAAuB,EAChFH,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,cAAsB,EACjF,MAIR,YAAAW,sBAAR,SAA8BpN,GAA9B,WACc,MAARA,IACFA,EAAKiI,MAAQ5H,KAAKgN,kBAAkBrN,EAAKkE,eAEzClE,EAAK+G,SAASrF,SAAQ,SAAA8B,GACpB,EAAK4J,sBAAsB5J,QAKzB,YAAA6J,kBAAR,SAA0BC,GACxB,IAAIrF,EAAgB,KAOpB,OANA5H,KAAKrB,eAAe0C,SAAQ,SAAS6L,GAC/BA,EAAI5Q,OAAS2Q,IACfrF,EAAQsF,EAAItF,MAAMuE,mBAIfvE,GAGF,YAAA7H,aAAP,SAAoBJ,EAAWC,GACzBI,KAAK6C,iBAAiB7C,KAAKvB,iBAAiBqE,mBAC9C9C,KAAK5B,mBAAmB+O,KAAKC,KAAK,CAChCtN,YAAsC,OAAxBH,EAAKiE,KAAKyJ,UAAqBrN,KAAKsN,kBAAoBtN,KAAKuN,kBAC3EzI,MAAOlF,EACP4N,KAAM7N,IAERC,EAAO6N,iBACP7N,EAAO8N,oBAGP9N,EAAO6N,iBACP7N,EAAO8N,oBAIJ,YAAA7N,gBAAP,SAAuBF,EAAWC,GAEhCD,EAAKgO,UAAUC,eAAejO,GAE1BA,EAAKgO,UAAUE,WAAWlO,GAC5BA,EAAKmO,WAGLnO,EAAKgO,UAAUI,aAIZ,YAAAC,iBAAP,SAAwBlJ,EAAY0I,GAClCxN,KAAK2M,oBAAoBa,GACzBxN,KAAKe,cAGA,YAAAkN,gBAAP,sBACEjO,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAAzV,kCAAmC,CAC1EyW,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,iBAGyBrO,KAAKkO,WAAWI,QAASC,uBAAuB3N,WAAU,SAAAgD,GAE5F,EAAKJ,YAAYO,KAAKH,GAEtB,EAAKJ,YAAYwI,MAAK,SAACC,EAAkBC,GACvC,IAAIsC,EAAQvC,EAAErE,MAAMuE,eAAesC,cAC/BC,EAAQxC,EAAEtE,MAAMuE,eAAesC,cAEnC,OAAID,EAAQE,GACF,EAGNF,EAAQE,EACH,EAGF,KAGT,EAAK7C,+BAIF,YAAA8C,oBAAP,SAA2BC,GAA3B,WACE5O,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC9DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEvBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO8N,EAAIhH,MAAMuE,eAAiB,IACjInM,KAAKkO,WAAWI,QAAQ1K,KAAOgL,EAAItS,KACnC0D,KAAKkO,WAAWI,QAAQvC,KAAO,SAC/B/L,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,uBAEzCd,KAAKkO,WAAWI,QAASU,UAAUpO,WAAU,SAAAgD,GACnE,EAAKqL,oBAAoBrL,OAItB,YAAAsL,kBAAP,SAAyBN,EAAoBO,GAA7C,WAEEnP,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAAzV,kCAAmC,CAC1EyW,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,iBAEXrO,KAAKkO,WAAWI,QAAQc,MAAO,EAC/BpP,KAAKkO,WAAWI,QAAQa,SAAWA,EACnCnP,KAAKkO,WAAWI,QAAQtL,cAAgB4L,EACxC5O,KAAKkO,WAAWI,QAAQC,uBAAuB3N,WAAU,SAAAgD,GACvD,IAAI6H,EAAM,EAAK4D,yBAAyBzL,EAAKtH,MAE7C,EAAKkH,YAAYiI,GAAK7D,MAAQhE,EAAKgE,MACnC,EAAKpE,YAAYiI,GAAK6D,YAAc1L,EAAK0L,YACzC,EAAK9L,YAAYiI,GAAK8D,SAAW3L,EAAK2L,SACtC,EAAK/L,YAAYiI,GAAK+D,gBAAkB5L,EAAK4L,gBAC7C,EAAKhM,YAAYiI,GAAKgE,WAAa7L,EAAK6L,WACxC,EAAKjM,YAAYiI,GAAKiE,eAAiB9L,EAAK8L,eAC5C,EAAKlM,YAAYiI,GAAKkE,kBAAoB/L,EAAK+L,kBAC/C,EAAKnM,YAAYiI,GAAKmE,QAAUhM,EAAKgM,QACrC,EAAKpM,YAAYiI,GAAKoE,YAAcjM,EAAKiM,YACzC,EAAKrM,YAAYiI,GAAKqE,MAAQlM,EAAKkM,MAEnC,EAAKjE,2BAED,EAAKpN,iBAAiBnC,OAASsH,EAAKtH,OACtC,EAAKqQ,oBAAoB,EAAKnJ,YAAYiI,IAE1C,EAAK1K,kBAKX,YAAA4L,oBAAA,SAAoB3J,GAClBhD,KAAKvB,iBAAmBuE,GAG1B,YAAA+M,mBAAA,SAAmBtM,GAEjB,OAAOA,EAAUnH,OAAS0D,KAAKvB,iBAAiBnC,MAG3C,YAAA2S,oBAAP,SAA2B3S,GAA3B,WACE0D,KAAK9B,iBAAiByQ,oBAAoBrS,GAAM2N,MAAK,SAAAmB,GAEnD,IAAIK,EAAM,EAAK4D,yBAAyB/S,GACxC,EAAKkH,YAAYkE,OAAO+D,EAAK,GAC7B,EAAKI,2BAED,EAAKrI,YAAYvC,OAAS,EAC5B,EAAK0L,oBAAoB,EAAKnJ,YAAY,IAG1C,EAAK/E,iBAAmB,KAG1B,EAAKsC,gBAEJsJ,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIR,YAAA0F,oBAAP,SAA2BC,EAA+B/M,EAAqB0G,GAA/E,WACE5J,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAAvV,+BAAgC,CACvEuW,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,iBAEXrO,KAAKkO,WAAWI,QAAQnD,KAAKvB,EAAK5J,KAAKrB,eAAgBsR,EAAgB/M,GAEvElD,KAAKkO,WAAWI,QAAQ4B,mBAAmBtP,WAAU,SAAAgD,GAEnDA,EAAKuG,mBAAqB,EAAK9G,4BAA4BO,GAE3D,EAAK1D,WAAW,EAAKzB,sBAKlB,YAAA0R,oBAAP,SAA2BvB,GAA3B,WACE5O,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC9DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEvBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO8N,EAAIhH,MAAMuE,eAAiB,IACjInM,KAAKkO,WAAWI,QAAQ1K,KAAOgL,EAAItS,KACnC0D,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,uBACjEd,KAAKkO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAElBrQ,KAAKkO,WAAWI,QAASU,UAAUpO,WAAU,SAAAgD,GACnE,EAAK0M,oBAAoB1M,OAItB,YAAA0M,oBAAP,SAA2BhU,EAAciU,GAAzC,gBAAyC,IAAAA,MAAA,MACvCvQ,KAAK1B,gBAAgB6R,oBAAoB7T,GAAM2N,MAAK,SAAAmB,GAElD,IAAIK,EAAM,EAAKC,yBAAyBpP,GACxC,EAAKqC,eAAe+I,OAAO+D,EAAK,GAEhC,EAAKvL,WAAW,EAAKzB,qBAEpB4L,OAAM,SAACC,GACW,MAAfiG,GACFA,EAAYjG,GAEd,EAAKC,MAAMD,OAIR,YAAAkG,oBAAP,SAA2B3M,EAA8BsL,GAAzD,WAEEnP,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAAtU,kCAAmC,CAC1EsV,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,+BAGXxK,EAAc4M,WAAWzE,MAAK,SAACC,EAAGC,GAChC,OAAID,EAAErE,MAAMuE,eAAiBD,EAAEtE,MAAMuE,gBAAwB,EACpDF,EAAErE,MAAMuE,eAAiBD,EAAEtE,MAAMuE,eAAuB,EACrD,KAEdnM,KAAKkO,WAAWI,QAAQzK,cAAgBA,EACxC7D,KAAKkO,WAAWI,QAAQa,SAAWA,EAECnP,KAAKkO,WAAWI,QAASoC,yBAAyB9P,WAAU,SAAAgD,GAE9F,GAAIA,EAAKV,WACP,EAAKhD,WAAW,EAAKzB,sBAElB,CACH,IAAMkS,EAAW,EAAKjF,yBAAyB9H,EAAKtH,OAElC,IAAdqU,IACF,EAAKhS,eAAegS,GAAY/M,GAIlC,EAAKiI,2BAEL,EAAKrI,YAAYnC,SAAQ,SAAC2B,GACxB,EAAK+J,sBAAsB/J,EAAchC,mBAAmB,OAIjC,MAAzB,EAAKvC,kBACP,EAAKsO,sBAAsB,EAAKtO,iBAAiBuC,mBAAmB,IAGtE,EAAKD,kBAKH,YAAAsO,yBAAR,SAAiC/S,GAC/B,IAAK,IAAIiH,EAAI,EAAGA,EAAIvD,KAAKwD,YAAYvC,OAAQsC,IAAK,CAEhD,GADUvD,KAAKwD,YAAYD,GACnBjH,OAASA,EACf,OAAOiH,IAKL,YAAAmI,yBAAR,SAAiCpP,GAC/B,IAAK,IAAIiH,EAAI,EAAGA,EAAIvD,KAAKrB,eAAesC,OAAQsC,IAAK,CAEnD,GADUvD,KAAKrB,eAAe4E,GACtBjH,OAASA,EACf,OAAOiH,EAIX,OAAO,MAGF,YAAA6G,wBAAP,SAA+BpH,GAC7BhD,KAAK+M,sBAAsB/J,EAAchC,mBAAmB,IAE5D,IAAK,IAAIuC,EAAI,EAAGA,EAAIvD,KAAKwD,YAAYvC,SAAUsC,EAAG,CAChCvD,KAAKwD,YAAYD,GAEnBjH,OAAS0G,EAAc1G,OACnC0D,KAAKwD,YAAYD,GAAKP,EAEtBhD,KAAK2M,oBAAoB3J,IAI7BhD,KAAK6L,2BAEL7L,KAAKe,cAGA,YAAA6P,oBAAP,SAA2BC,EAAeC,EAASP,GAAnD,gBAAmD,IAAAA,MAAA,MACjD,IAAMpM,EAAOnE,KAEbA,KAAK9B,iBAAiB0S,oBAAoB5Q,KAAKvB,iBAAiBnC,KAAMuU,EAAeC,GAAS7G,MAAK,SAAAjH,GAKjG,IAHA,IAAI1B,EAAM6C,EAAK+B,wBAAwB4K,GAEnC5G,EAAQ,KACH3G,EAAI,EAAGA,EAAIjC,EAAI6I,mBAAmBlJ,SAAUsC,EACnD,GAAIjC,EAAI6I,mBAAmB5G,KAAOP,EAAc1G,KAAM,CACpD4N,EAAQ3G,EACR,MAIS,MAAT2G,GACF5I,EAAI6I,mBAAmBzC,OAAOwC,EAAO,GAGvC/F,EAAKiG,wBAAwBpH,MAE5BqH,OAAM,SAACC,GACW,MAAfiG,GACFA,EAAYjG,GAGd,EAAKC,MAAMD,OAIR,YAAAyG,SAAP,SAAgBvD,GACd,OAAOxN,KAAKvB,mBAAqB+O,GAGnC,YAAA7M,eAAA,sBACQiH,EAAQ5H,KAAKlB,OAAOsN,cAE1BpM,KAAKjB,yBAA2B,GAChCiB,KAAKhB,mBAAqB,GAE1BgB,KAAKpB,iBAAiByC,SAAQ,SAACmM,GAE7B,IAAMwD,EAAWxD,EAAKhK,YAAY1E,QAAO,SAAC2E,GAGxC,OAAmB,IAFLA,EAAUmE,MAAMuE,eAAeC,cAAcG,QAAQ3E,MAKrE,EAAK7I,yBAAyBgF,KAAK,CAAE6F,IAAK4D,EAAK5D,IAAKpG,YAAawN,OAGnEhR,KAAKnB,WAAWwC,SAAQ,SAACmM,GAEvB,IAAMwD,EAAWxD,EAAKhC,MAAM1M,QAAO,SAACiN,GAGlC,OAAmB,IAFLA,EAAKnE,MAAMuE,eAAeC,cAAcG,QAAQ3E,MAKhE,EAAK5I,mBAAmB+E,KAAK,CAAE6F,IAAK4D,EAAK5D,IAAK4B,MAAOwF,OAGvDC,YAAW,WAAQ,EAAKjN,yBAA2B,MAGrD,YAAAkN,uBAAA,SAAuBC,EAA2BC,EAAoCnE,GAAtF,WACEjN,KAAK9B,iBAAiBmT,sBAAsBF,EAAmBC,EAA4BnE,GAAmBhD,MAAK,SAACR,GAClH,EAAKW,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIf,YAAAgH,yBAAA,SAAyBH,EAA2BlE,GAApD,WACEjN,KAAK9B,iBAAiBqT,yBAAyBJ,EAAmBlE,GAAmBhD,MAAK,SAACR,GACzF,EAAKW,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIR,YAAAC,MAAP,SAAaD,GACXtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCAn1ClD9G,GAAkB,+O,iCAAlBA,EAAkB,oD,OAAA,M,qkHCrD/B,4BACC,4BAEA,6BAEA,4BAGC,4BAEC,4BAEC,4BACC,4BACC,gCAC0D,+D,wBAD1D,iBAED,iBACD,iBACA,mCACC,yCACC,8BACC,4BACC,uBACD,iBACA,8BACD,iBACA,8BACC,+BAqDD,iBACD,iBACA,0CACC,8BACC,4BACC,uBACD,iBACA,8BACD,iBACA,8BACC,+BAsCD,iBACD,iBACD,iBACD,iBAEA,8BACC,8BAEC,gCAWA,yBAGA,8BACS,8BACE,8BACE,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACA,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACA,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACF,iBACA,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACA,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACF,iBACF,iBACF,iBAmBR,iBACD,iBACD,iBACD,iBAED,kB,MAtNO,8FAAwD,oBAGhD,6CAAmB,kBACZ,sEAQX,4DAuDW,yCAAe,0CAQ1B,kEA8CD,2N,isIDzFV,GAMa,EAAAA,sB,0HErDb,SACA,Q,OAIA,aAOC,aAHQ,KAAAqa,wBAA0B,IAAI,EAAAC,QACtC,KAAAC,gBAAkB5R,KAAK0R,wBAAwBG,e,OAIxC,YAAAC,cAAP,WACC,OAAO9R,KAAK+R,YAGN,YAAAC,cAAP,SAAqBC,GACpBjS,KAAK+R,WAAaE,EAElBjS,KAAK0R,wBAAwBtE,KAAKpN,KAAK+R,a,iCAf5Bnc,I,oCAAAA,EAA8B,QAA9BA,EAA8B,O,EAD3C,GACa,EAAAA,kC,4GCab,SACA,QAEA,Q,GAIA,M,sBAIA,aAGC,WAAoBsc,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAC,kBAAA,SAAkB5G,GACjB,IAAI6G,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,QAASC,KAAKC,UAAUjH,IAErCxL,KAAKkS,KACVQ,IAAqBC,IAAM,6BAA8B,CAAEN,OAAQA,IACnEO,aAGH,YAAA5I,oBAAA,SAAoBH,EAAuBC,EAAiCC,GAA5E,WAEK8I,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,yBAA0BH,KAAKC,UAAU,CAAE5I,cAAeA,EAAeC,wBAAyBA,EAAyBC,uBAAwBA,IAA2B,CAAE8I,QAASA,IACnNvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA1K,mBAAA,SAAmB2B,EAAuBC,EAAiCU,EAAiCC,GAA5G,WAEKoI,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,gCAAiCH,KAAKC,UAAU,CAAE5I,cAAeA,EAAeC,wBAAyBA,EAAyBU,wBAAyBA,EAAyBC,0BAA2BA,IAA8B,CAAEoI,QAASA,IAClRvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAhC,oBAAA,SAAoB/G,EAAuBC,EAAiCC,GAA5E,WAEK8I,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,4BAA6BH,KAAKC,UAAU,CAAE5I,cAAeA,EAAeC,wBAAyBA,EAAyBC,uBAAwBA,IAA2B,CAAE8I,QAASA,IACtNvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAO,oBAAA,SAAoBC,GAApB,WAEKP,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,4BAA6BH,KAAKC,UAAU,CAAE,OAAUW,IAAW,CAAEP,QAASA,IACxGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAS,oBAAA,SAAoBD,GAApB,WAEKP,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,4BAA6BH,KAAKC,UAAU,CAAE,OAAUW,IAAW,CAAEP,QAASA,IACxGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAjE,oBAAA,SAAoBrS,GAApB,WAEKuW,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAiBL,IAAM,4BAA6B,CAAE,KAAQrW,GAAQ,CAAEuW,QAASA,IACjFvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAvB,sBAAA,SAAsBF,EAA2BC,EAAoCnE,GAArF,WAEK4F,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,0BAA2BH,KAAKC,UAAU,CAAE,kBAAqBtB,EAAmB,2BAA8BC,EAA4B,kBAAqBnE,IAAsB,CAAE4F,QAASA,IAC9NvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAArB,yBAAA,SAAyBJ,EAA2BlE,GAApD,WAEK4F,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,6BAA8BH,KAAKC,UAAU,CAAE,kBAAqBtB,EAAmB,kBAAqBlE,IAAsB,CAAE4F,QAASA,IACvKvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,a,iCA1ISpd,GAAgB,sD,oCAAhBA,EAAgB,QAAhBA,EAAgB,O,EAD7B,GACa,EAAAA,oB,mHC/Bb,WACA,O,GASA,OACA,O,6HCIE,uCAA4C,+GAAwE,iB,gCAAxE,+C,mDAG5C,4BACE,4BACE,4BACE,6BACF,iBACF,iBACA,4BACE,6BACE,+BAAmB,+GAAnB,iBACF,iBACF,iBACF,iB,gCAHyB,8D,mDAKzB,4BACE,4BACE,4BACE,6BACF,iBACF,iBACA,4BACE,6BACE,+BAAmB,2GAAnB,iBACF,iBACF,iBACF,iB,gCAHyB,0DDtB3B,iBA6BC,WAAoB0I,EAA4CoV,GAA5C,KAAApV,mBAA4C,KAAAoV,MAVvD,KAAAC,kBAA4B,EAC5B,KAAAC,oBAA8B,EAC9B,KAAAC,WAAqB,EAGpB,KAAAC,gBAAkB,IAAI,EAAAjW,aAChC,KAAAqR,QAAkB,KAElB,KAAAmD,MAAgB,O,OAKhB,YAAAhS,SAAA,aAIA,YAAAyK,gBAAA,WACC1K,KAAKiS,MAAQ,OACbjS,KAAKsT,IAAIK,iBAGV,YAAAC,YAAA,aAIA,YAAAC,YAAA,aAIA,YAAAC,eAAA,aAIA,YAAAC,eAAA,WACC/T,KAAKgU,UAAUC,QAAUjU,KAAKgU,UAAUC,QAGzC,YAAAC,QAAA,WACClU,KAAKiS,MAAQ,QAGd,YAAAkC,gBAAA,SAAgBrP,GACf9E,KAAKiS,MAAQ,QAGd,YAAAmC,QAAA,WACC,QAAIpU,KAAKgU,UAAU1X,QAGwB,IAAtC0D,KAAKgU,UAAU1X,KAAKiQ,QAAQ,OAI0B,IAAtDvM,KAAKgU,UAAUpM,MAAMyM,aAAa,GAAGC,MAAMrT,SAI3CjB,KAAKyT,WACRc,QAAQC,IAAIxU,KAAKgU,aAGdhU,KAAKyT,WAA0C,MAA5BzT,KAAKgU,UAAUS,WAA4D,IAAvCzU,KAAKgU,UAAUS,UAAUC,eAIhF1U,KAAKyT,WAAsC,MAAxBzT,KAAKgU,UAAUW,OAAoD,IAAnC3U,KAAKgU,UAAUW,MAAMD,gB,iCApElE/b,GAAuB,mF,iCAAvBA,EAAuB,khCClCpC,0BACE,4BACE,4BACE,4BACE,4BACF,iBACF,iBACA,4BACE,6BACE,8BAA2D,uEAA3D,iBACF,iBACF,iBACF,iBAEA,wCAAiB,sEAA4D,iBAC7E,yCAGA,+BAaA,+BAYF,kB,MAlCqC,2DAA6B,4BAK/C,uDACD,0DAGQ,gDAaA,kD,+eDVb,CACX,EAAAic,QAAQ,eAAgB,CACvB,EAAA3C,MAAM,aACL,EAAAtP,MAAM,CAAE,QAAW,KAEpB,EAAAsP,MAAM,OACL,EAAAtP,MAAM,CAAE,QAAW,KAEpB,EAAAkS,WAAW,eAAgB,EAAAX,QAAQ,gB,EAZtC,GAiBa,EAAAvb,2B,iHElCb,KACA,MADA,IAEA,QAMA,GAFA,OAEA,Q,GACA,M,wFCRI,6BAAqE,YAAW,kB,6BAAX,+C,sBAGjE,yBACI,6BACJ,kB,yBACA,yBACI,YACA,6BACJ,kB,6BAFI,mF,mDAQA,4BACI,4BACI,4BAAQ,6BACR,8BAA6B,iBAAO,sCAAkE,gBAAC,iBACvG,iBACJ,iBACA,6BACI,+BAAO,2FAAP,iBACJ,iBACJ,iB,8CAN+D,4CAIhD,+CAA+B,yBAA/B,CAA+B,sBAA/B,CAA+B,wC,yBAWlC,gCAAuD,YAAc,kB,uBAAlC,6BAAoB,6C,mDARnE,4BACI,4BACI,+BAAuB,6BACvB,iBACJ,iBACA,6BACI,gCAA0D,2GAA6B,iFACnF,wBACA,kCACJ,iBACJ,iBACJ,iB,gCALkE,yDAE9C,gD,mDAIpB,4BACI,4BACI,+BAAuB,6BACvB,iBACJ,iBACA,6BACE,+BAAO,2HAAP,iBACF,iBACJ,iB,gCAFa,0E,sBAwBL,+BAAuE,6BAAuD,kB,sBAmKtI,4BACI,uBACA,6BACI,6BACJ,iBACJ,kB,2GAQY,6BAGI,6BAGI,6BAAK,kHAAiC,KAAO,EAAH,wBACtC,sBACJ,iBAEA,+BAAiC,YAAgB,iBAGrD,iBAGJ,iB,+CAVyF,4FAIhD,6C,yBAhBrD,0BACI,4BACI,4BACI,4BAAQ,YAAoB,iBAChC,iBACA,6BACI,+BAiBJ,iBACJ,iBACJ,kB,uBAtBoB,qDAGS,kD,mDA2BjB,6BAGI,6BAGI,6BAAK,kHAAiC,KAAO,EAAH,wBACtC,sBACJ,iBAEA,+BAAiC,YAAmB,iBACxD,iBACJ,iB,+CAN+F,4FAItD,6C,yBAhBrD,0BACI,4BACI,4BACI,4BAAQ,6BAA0D,iBACtE,iBACA,6BACI,+BAaJ,iBACJ,iBACJ,kB,6BAf6B,oE,mDAwBjB,gCAAwC,2FACpC,6BACJ,iB,iDAFmG,oCD5R3H,iBAiCC,WAAoBmc,EAAkCC,EAA6BC,EAAsC9G,EAAgC3P,GAArI,KAAAuW,UAAkC,KAAAC,WAA6B,KAAAC,WAAsC,KAAA9G,aAAgC,KAAA3P,cA3BzJ,KAAA0W,YAAqB,IAAIC,KACzB,KAAApG,QAAkB,KAiBlB,KAAAqG,UAAoB,EAKpB,KAAA/F,MAAgB,EAEhB,KAAAgG,OAAiB,E,OAIjB,YAAAnV,SAAA,sBAECD,KAAKqV,mBAAqB,IAAI,EAAA1D,QAEX,MAAf3R,KAAKsV,QAAmBtV,KAAKmV,WAChCnV,KAAK+U,SAASQ,oBAAmB,GAAMtL,MAAK,SAAAuB,GAG3C,IADA,IAAIgK,EAAa,GACRjS,EAAI,EAAGA,EAAIiI,EAAMvK,SAAUsC,EAAG,CACtC,IAAMqH,EAAUY,EAAMjI,GAAGqH,QACnB6K,EAAqC,MAA1BjK,EAAMjI,GAAGH,cAAwBoI,EAAMjI,GAAGH,cAAgBoI,EAAMjI,GAAGjH,KAEhF,EAAKiC,YAAYwE,kBAAkB6H,EAAS6K,IAC/CD,EAAWzR,KAAKyH,EAAMjI,IAGxB,EAAKiI,MAAQgK,KAEXnL,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZtK,KAAKsV,OAAS,CACbI,IAAK,KACLD,SAAU,GACVE,aAAc3V,KAAKgV,SAASY,SAC5BtZ,KAAM,GACNuZ,qBAAsB,KACtBC,oBAAqB,KACrBC,YAAa,KACbC,aAAc,GACdC,QAAS,GACT1G,SAAU,GACVI,kBAAmB,GACnBD,eAAgB,GAChBwG,iBAAkB,GAClBzG,WAAY,GACZ0G,YAAa,GACbC,aAAc,GACdC,gBAAiB,GACjBvG,MAAO,GACPtM,YAAa,GACb8S,mBAAoB,GACpBC,MAAM,EACNC,UAAW,SACXC,SAAU,KACVC,WAAY,QAKf,YAAAvL,KAAA,SAAKvB,GACJ5J,KAAKsV,OAAOc,aAAexM,EAAI8L,KAGhC,YAAAiB,cAAA,SAAc7R,GAEb,IADA,IAAI8R,EAAY9R,EAAM6D,OAAOkO,UACpBtT,EAAI,EAAGA,EAAIqT,EAAU3V,OAAQsC,IAAK,CAE1C,GAAU,aADFqT,EAAUrT,GAEjB,OAAO,EAIT,OAAO,GAGR,YAAAuT,SAAA,sBAE6B,MAAxB9W,KAAKsV,OAAOG,UAAoBzV,KAAKsV,OAAOG,SAASxU,OAAS,GACjEjB,KAAK+U,SAASgC,sBAAsB/W,KAAKsV,OAAOG,UAAU,GAAMxL,MAAK,SAAAzG,GACpE,EAAK8R,OAAO9R,YAAcA,KACxB6G,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZtK,KAAK+U,SAASiC,0BAA0BhX,KAAKsV,OAAOG,UAAU,GAAOxL,MAAK,SAAAzG,GACzE,EAAK8R,OAAOgB,mBAAqB9S,KAC/B6G,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIZtK,KAAKsV,OAAO9R,YAAc,IAI5B,YAAAyT,SAAA,sBACCjX,KAAK8U,QAAQoC,iBAAiBlX,KAAKsV,QAAQrL,MAAK,SAAAmB,GAE/C,EAAKiK,mBAAmBjI,KAAKhC,GAC7B,EAAK8C,WAAWiJ,UACd9M,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA8M,SAAA,WACCpX,KAAKkO,WAAWiJ,QAGjB,YAAA5M,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCApIrC/P,GAAqB,0L,iCAArBA,EAAqB,quH,GAAA,MChBlC,4BACI,8BAEA,4BACI,6BAGA,6BAIJ,iBAEA,+BAEI,+BACI,+BAUA,8BAYA,+BASA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,oEAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BAAyD,iBACrE,iBACA,8BACI,oCAA6C,yEACzC,yBACA,iCAAuB,8BAAwD,iBAC/E,iCAAyB,8BAA0D,iBACnF,iCAAwB,8BAAyD,iBACjF,iCAAwB,8BAAyD,iBACrF,iBACA,kCACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,mF,oBAAP,iBACJ,iBACJ,iBAEA,6BACI,6BACI,6BAAO,8BAAiD,iBAC5D,iBACA,8BACI,iCAA8C,0EAC1C,yBACA,iCAAuB,8BAA6C,iBACpE,iCAAwB,8BAA8C,iBAC1E,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BAAgD,iBAC5D,iBACA,8BACI,8BACI,8BAEI,8BAAK,yCAAS,EAAAoc,cAAA,GAAwB,KAAO,EAAH,sCACtC,uBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAyBA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,mCAAU,4EAAiG,iBAC/G,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,mCAAU,uEAAuF,iBACrG,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,wEAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,iFAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,8EAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,mCAAU,gFAAyG,iBACvH,iBACJ,iBACA,6BACI,6BACI,6BAAQ,+BACR,iBACJ,iBACA,+BACI,oCAAU,0EAA6F,iBAC3G,iBACJ,iBAEA,8BACI,yBACA,+BACI,+BACJ,iBACJ,iBAEA,8BACI,8BACI,8BAAQ,+BACR,iBACJ,iBACA,+BACI,iCAAO,2EAAP,iBACJ,iBACJ,iBACA,8BACI,8BACI,8BAAQ,+BACR,iBACJ,iBACA,+BACI,iCAAO,+EAAP,iBACJ,iBACJ,iBACA,8BACI,8BACI,8BAAQ,+BACR,iBACJ,iBACA,+BACI,iCAAO,qEAAP,iBACJ,iBACJ,iBAEA,gCAOA,iCA2BA,gCAuBA,8BACI,yBACA,+BACI,+BACI,kCAAsB,wCAAS,EAAAS,cAC3B,+BACJ,iBACA,oCAGJ,iBACJ,iBACJ,iBAEJ,iBACJ,iBAEJ,kB,6BAhTS,oDAGG,4CAGA,6CASwB,0EAUA,mEAYA,kEAeT,qDAAyB,+BAQa,0DAA8B,uBAOpE,qDAS2H,8FAA3H,qDAAwC,uBASD,2DAA+B,uBAe4B,qGAqC/F,6DAAiC,uBASjC,wDAA4B,uBAS/B,yDAA6B,uBAS7B,kEAAsC,uBAStC,+DAAmC,uBAShC,iEAAqC,uBASrC,2DAA+B,uBAiBlC,6DAAgC,uBAShC,gEAAoC,uBASpC,sDAA0B,uBAIjB,kEAOnB,4DA2BA,yEA4BqB,oEAEN,kD,8UD5RhC,GAKa,EAAA7c,yB,mIEhBb,WAGA,GAFA,MAEA,MACA,OAQA,SAIA,GAHA,MACA,MAEA,QAEA,SAEA,S,wICFoB,2BACE,6BACF,kB,sBACA,2BACE,6BACF,kB,yBACA,2BAAoE,YAA8B,kB,wCAA9B,qE,yBAPtE,4BACE,+BAGA,+BAGA,+BAeF,kB,uCArBQ,oDAGA,4DAGA,8E,yBAmBN,2BACE,YACF,kB,6DADE,sI,yBAHJ,yBACE,6BACA,+BAGF,kB,4DAHQ,8I,mDAUN,+BAAyC,4JAA6C,0FAAtF,iB,gEAA2H,gDAAuB,kDAAzG,uDAA6C,sB,yBADxF,0BACE,iCACF,kB,8BADS,qD,6EAKL,0B,6DAA2I,gDAAuB,kDAArI,0DAA+C,iD,mDAC5E,8BACE,2BAAkC,iJAA6D,iBACjG,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,yBAVJ,0BACE,6BACE,iCACA,gCAGF,iBAEA,6BAKF,kB,4DAXW,oDACD,oEAKgB,oE,mDAmBd,8BAAqF,iJACjF,sBACJ,kB,yBAIF,2BACE,6BACA,YACF,kB,uFADE,wG,yBAlBR,4BACE,6BACE,6BACE,yBAAI,sCAAkE,iBACxE,iBAEA,6BAEE,6BACE,0BACA,gCAGF,iBAGA,6BAIF,iBACF,iBACF,kB,qFAnB6B,4CAML,yEAA+C,sCAA/C,CAA+C,kBAA/C,CAA+C,mCACzD,oEAMgB,oL,yBAjBhC,2BACE,+BAuBF,kB,6DAvB8B,0F,yBAFhC,0BACE,8BAyBF,kB,4DAzByB,gF,mDA+BrB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,Y,mBACF,kB,6DADE,qG,yBAXJ,0BAEE,6BACE,0B,mBACA,gCAGF,iBAEA,6BAKF,kB,4DAX6I,+DAAuB,kDAA7I,0DAA+C,gFAC5D,oEAKgB,qE,mDAqBtB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,yBArBJ,0BAGE,6BACE,6BACE,+BACE,0BACA,2BAAM,6BAA8D,iBACtE,iBACA,+BACE,0BACA,2BAAM,8BAA+D,iBACvE,iBACF,iBACA,iCAGF,iBAEA,8BAKF,kB,4DApBS,0EAEwH,oEAA4B,uDAAtG,6DAAiD,YAI2B,qEAA6B,wDAAzG,8DAAkD,YAI/F,oEAKgB,qE,mDAWtB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,mDAXJ,0BAEE,6BACE,+BAA8E,iKAA9E,iBACA,gCAGF,iBAEA,6BAKF,iB,+DAXsI,+DAAuB,kDAAzI,0DAA+C,gDACzD,oEAKgB,qE,mDAWtB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,mDAXJ,0BAEE,6BACE,+BAAqE,iKAArE,iBACA,gCAGF,iBAEA,6BAKF,iB,+DAXsI,+DAAuB,kDAAlJ,0DAA+C,gDAChD,oEAKgB,qE,yBAYpB,gCAAqG,YAA+B,kB,uBAArD,6BAAsB,4D,mDAEvG,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,oDAdJ,0BAEE,6BACE,gCAA+J,iKAC7J,2BACA,kCACF,iBACA,gCAGF,iBAEA,6BAKF,iB,+DAd4D,+DAAuB,uDAAvE,0DAA+C,gDAE7C,sFAEJ,oEAKgB,2I,sBAsBlB,6B,sBACA,6B,oDAhBR,0BAaI,6BACE,gCAA0C,4GACxC,qCACA,qCACF,iBACF,iBACJ,iB,iCAJkB,gDACA,gD,0BAnMxB,2BAEE,6BACE,6BACE,8BAwBA,6BAOF,iBAEA,6BAEE,8BAIA,8BAeA,8BA4BA,+BAgBA,iCA0BA,+BAgBA,+BAgBA,gCAmBA,gCA2BF,iBACF,iBACF,kB,4CA5MU,wDAwBA,wDAWC,oDAIA,0EAeA,qDA4BA,oDAgBA,uDA0BA,qDAgBA,uDAgBA,oDAmBA,8E,0BA5LjB,4BAME,4BACE,wBACA,2BACE,gC,+CAiNF,iBACF,iBACF,kB,8BAnNiF,mH,oDAoNjF,0BACI,iDAQE,kHAEA,iBACN,iB,iCATM,yEAAgD,sBAAhD,CAAgD,6FAAhD,CAAgD,gGAAhD,CAAgD,0CAAhD,CAAgD,gCAAhD,CAAgD,mD,0BAjOxD,0BACE,+BA6NA,+BAaF,kB,6BA1OO,2DA6NA,iFD1MX,kBAgGC,WAAoB4D,EAAsC6W,EAAuCzW,GAA7E,KAAAJ,eAAsC,KAAA6W,WAAuC,KAAAzW,cAxDjG,KAAA+Y,mBAA6B,EAIpB,KAAApD,SAAmB,EAKnB,KAAAqD,aAAkC,KAKlC,KAAAC,cAAmC,KAG5C,KAAAC,oBAA2B,GAE3B,KAAAC,qBAA4B,GAInB,KAAAC,kBAA8B,GAE9B,KAAAC,QAAgB,IAAI1C,KAEpB,KAAA/F,UAAoB,EAEpB,KAAAiG,OAAiB,EAEjB,KAAAyC,qBAAsB,EAEtB,KAAAC,mBAAoB,EAInB,KAAAC,MAAQ,IAAI,EAAAta,aAEZ,KAAAua,gBAAkB,IAAI,EAAAva,aAKtB,KAAAqZ,SAAW,IAAI,EAAArZ,aAEhB,KAAAwa,aAAuB,EAEhC,KAAAC,mBAA2B,KAC3B,KAAAC,kBAA0B,KAC1B,KAAA/D,SAAmB,EAEnB,KAAAgE,2BAAuC,CAAC,MAAO,WAAY,OAAQ,iBAAkB,cAKpFpY,KAAKsX,kBAAoBtX,KAAKzB,YAAY8Z,oB,OAG3C,YAAApY,SAAA,WAE+B,MAA1BD,KAAK2X,oBACR3X,KAAKoY,2BAA2BrU,KAAKuU,MAAMtY,KAAKoY,2BAA4BpY,KAAK2X,mBAE5E3X,KAAK8X,mBACT9X,KAAKoY,2BAA2BrU,KAAK,aAKvC,IADA,IAAIwU,EAAW,KACNhV,EAAI,EAAGA,EAAIvD,KAAK6D,cAAc4M,WAAWxP,SAAUsC,EACb,aAA1CvD,KAAK6D,cAAc4M,WAAWlN,GAAGjH,OACpCic,EAAWvY,KAAK6D,cAAc4M,WAAWlN,IAG3C,GAAgB,MAAZgV,EAAkB,CACrB,IAAIC,EAAsB,IAAI,EAAAC,UAAU,WAAY,WAAY,IAAI,EAAAC,eAAe,WAAY,MAAO,IAAI,EAAAA,eAAe,WAAY,OAAO,GAAM,GAAO,GAAO,GAChK1Y,KAAK6D,cAAc4M,WAAW1M,KAAKyU,KAIrC,YAAA9N,gBAAA,sBACC1K,KAAK2Y,cAAcC,cAAchY,WAAU,SAAAiY,GAC1C,EAAKzE,QAAsB,UAAXyE,GAAiC,aAAXA,EAEtC,EAAKd,MAAMe,KAAK,EAAK1E,aAIvB,YAAAR,YAAA,SAAYmF,GAEXxE,QAAQC,IAAI,gBAERuE,EAAsB,cAAKA,EAAsB,cAEpD/Y,KAAKuX,aAAe,IAAI,EAAAyB,kBAAkBhZ,KAAK6D,cAAe2O,KAAKyG,MAAMzG,KAAKC,UAAUzS,KAAKuX,eAAe9G,YAElF,MAAtBzQ,KAAKwX,cACRxX,KAAKwX,cAAgB,IAAI,EAAAwB,kBAAkBhZ,KAAK6D,cAAe2O,KAAKyG,MAAMzG,KAAKC,UAAUzS,KAAKuX,eAAe9G,YAG7GzQ,KAAKwX,cAAgB,IAAI,EAAAwB,kBAAkBhZ,KAAK6D,cAAe2O,KAAKyG,MAAMzG,KAAKC,UAAUzS,KAAKwX,gBAAgB/G,YAG/GzQ,KAAKkZ,aAEGH,EAAiB,SACzB/Y,KAAKkZ,aAIP,YAAAA,UAAA,WACClZ,KAAKyX,oBAAsBzX,KAAKmZ,iBAAiBnZ,KAAKuX,cACtDvX,KAAK0X,qBAAuB1X,KAAKmZ,iBAAiBnZ,KAAKwX,eAE5B,MAAvBxX,KAAKoZ,gBACRpZ,KAAKoZ,eAAeC,UAItB,YAAAF,iBAAA,SAAiBG,GAKhB,IALD,WACOC,EAAS,GAETC,EAAOxZ,KAAK4X,QAAQ6B,U,WAEjBlW,GACR,IAAI1B,EAAO,EAAKgC,cAAc4M,WAAWlN,IACzCgW,EAAO1X,EAAKvF,MAAQ,KAEF,UAAduF,EAAKkK,OACRwN,EAAO1X,EAAKvF,MACZ,CACCod,UAAW,KACXC,QAAS,KACTrF,MAAO,EAAKU,SAASY,WAInB/T,EAAK+X,kBACKN,EAAK7I,WAAW5O,EAAKvF,MAAMud,OAEjCxY,SAAQ,SAAAyY,GAEd,IAAMJ,EAAYxE,KAAK+D,MAAMa,EAAIJ,WAC3BC,EAAUzE,KAAK+D,MAAMa,EAAIH,SAE3BH,GAAQE,GAAaF,GAAQG,IAEd,UAAd9X,EAAKkK,KACRwN,EAAO1X,EAAKvF,MAAQ,CACnBod,UAAW,EAAKK,WAAWD,EAAIJ,WAC/BC,QAAS,EAAKI,WAAWD,EAAIH,SAC7BrF,MAAO9B,KAAKyG,MAAMzG,KAAKC,UAAUqH,EAAIxF,SAGhB,SAAdzS,EAAKkK,MAAgC,MAAb+N,EAAIxF,OAAiB0F,MAAMC,QAAQH,EAAIxF,QAAUwF,EAAIxF,MAAMrT,OAAS,EACpGsY,EAAO1X,EAAKvF,MAAQ,CACnBod,UAAW,EAAKK,WAAWD,EAAIJ,WAC/BC,QAAS,EAAKI,WAAWD,EAAIH,SAC7BrF,MAAOwF,EAAIxF,MAAM,IAIlBiF,EAAO1X,EAAKvF,MAAQ,CACnBod,UAAW,EAAKK,WAAWD,EAAIJ,WAC/BC,QAAS,EAAKI,WAAWD,EAAIH,SAC7BrF,MAAOwF,EAAIxF,WAOfiF,EAAO1X,EAAKvF,MAAQgd,EAAK7I,WAAW5O,EAAKvF,O,OAhDlCiH,EAAI,EAAGA,EAAIvD,KAAK6D,cAAc4M,WAAWxP,SAAUsC,E,EAAnDA,GAoDT,IAASA,EAAI,EAAGA,EAAIvD,KAAK6D,cAAc4M,WAAWxP,SAAUsC,EAAG,CAC9D,IAAI1B,EAAO7B,KAAK6D,cAAc4M,WAAWlN,GAErC1B,EAAK+X,kBAAyC,MAArBL,EAAO1X,EAAKvF,QACxCid,EAAO1X,EAAKvF,MAAQ,CACnBod,UAAW,KACXC,QAAS,KACTrF,MAAO,KAKV,OAAOiF,GAGR,YAAAQ,WAAA,SAAWG,GACV,OAAOla,KAAKgV,SAASmF,qBAAqBD,IAG3C,YAAAE,iBAAA,SAAiBhe,GAChB4D,KAAKwX,cAAc/G,WAAWnU,KAAO0D,KAAK0X,qBAA2B,KAErE1X,KAAK8W,SAASgC,KAAK9Y,KAAKwX,gBAGzB,YAAA6C,0BAAA,SAA0BrG,GAA1B,WAEKhU,KAAKiY,YACRjY,KAAKgY,gBAAgBc,KAAK9E,IAG1BhU,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA/T,6BAA8B,CACtE+U,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAItBrO,KAAKkO,WAAWI,QAAQgM,kBAAoBta,KAAKwX,cACjDxX,KAAKkO,WAAWI,QAAQzK,cAAgB7D,KAAK6D,cAC7C7D,KAAKkO,WAAWI,QAAQiM,eAAiBva,KAAKoV,MAC9CpV,KAAKkO,WAAWI,QAAQ0F,UAAYA,EACpChU,KAAKkO,WAAWI,QAAQkM,yBAAyB5Z,WAAU,SAAA6Z,GAC1D,EAAKvB,eAGNlZ,KAAKkO,WAAWI,QAAQ6G,SAAWnV,KAAKmP,WAI1C,YAAAuL,yBAAA,WAEC,IADA,IAAIlC,EAAW,KACNjV,EAAI,EAAGA,EAAIvD,KAAK6D,cAAc4M,WAAWxP,SAAUsC,EACb,aAA1CvD,KAAK6D,cAAc4M,WAAWlN,GAAGjH,OACpCkc,EAAWxY,KAAK6D,cAAc4M,WAAWlN,IAI3CvD,KAAKqa,0BAA0B7B,IAGhC,YAAAmC,gBAAA,SAAgB3G,GACf,OAAiD,MAA7ChU,KAAK0X,qBAAqB1D,EAAU1X,OAA6D,MAA5C0D,KAAKyX,oBAAoBzD,EAAU1X,OAIpF0D,KAAK0X,qBAAqB1D,EAAU1X,MAAMgY,OAAStU,KAAK0X,qBAAqB1D,EAAU1X,MAAMgY,MAAMsG,SAAW5a,KAAKyX,oBAAoBzD,EAAU1X,MAAMgY,OAGhK,YAAAuG,iBAAA,SAAiB7G,GAChB,OAAiD,MAA7ChU,KAAK0X,qBAAqB1D,EAAU1X,OAA6D,MAA5C0D,KAAKyX,oBAAoBzD,EAAU1X,OAIpF0D,KAAK0X,qBAAqB1D,EAAU1X,MAAMgY,OAAStU,KAAK0X,qBAAqB1D,EAAU1X,MAAMgY,QAAUtU,KAAKyX,oBAAoBzD,EAAU1X,MAAMgY,OAGzJ,YAAAwG,uBAAA,SAAuBhW,EAAYiW,GAClC/a,KAAKmY,kBAAoB3F,KAAKyG,MAAMzG,KAAKC,UAAUzS,KAAKkY,sBAGzD,YAAA8C,qCAAA,SAAqCC,GACpC,IAAK,IAAI1X,EAAI,EAAGA,EAAIvD,KAAK6D,cAAc4M,WAAWxP,OAAQsC,IAAK,CAC9D,IAAI1B,EAAY7B,KAAK6D,cAAc4M,WAAWlN,GAE9C,GAAkB,SAAd1B,EAAKkK,MAAmBlK,EAAKvF,OAAS2e,EAAmB,CAG5D,IAAIC,GADJrZ,EAAsBA,GACFsZ,SAASzU,SAE7B,MAAkB,WAAd7E,EAAKvF,KACD,UAAM8e,eAAeF,GAGrBA,GAKV,OAAO,MAGR,YAAAG,gBAAA,SAAgBrI,EAAMsI,GAErB,GAAW,MAAPA,GAAuB,MAARtI,EAClB,OAAO,EAGR,GAAW,MAAPsI,GAAuB,MAARtI,GAA8B,GAAdsI,EAAIra,QAA8B,GAAf+R,EAAK/R,OAC1D,OAAO,EAGR,IAAIsa,EAAaD,EACbtB,MAAMC,QAAQqB,KACjBC,EAAaD,EAAI,IAGlB,IAAIE,EAAcxI,EAKlB,OAJIgH,MAAMC,QAAQjH,KACjBwI,EAAcxI,EAAK,IAGbuI,IAAeC,GAGvB,YAAAC,kBAAA,SAAkBpe,GAEjB,IAAK,IAAIkG,EAAI,EAAGA,EAAIvD,KAAK6D,cAAc4M,WAAWxP,OAAQsC,IAAK,CAC9D,IAAI1B,EAAO7B,KAAK6D,cAAc4M,WAAWlN,GAEzC,GAAI1B,EAAKvF,OAASe,EACjB,OAAOwE,EAAKkK,KAId,OAAO,MAGD,YAAA2P,WAAP,WACC,OAAO1b,KAAKoU,SAGN,YAAAuH,aAAP,WACC,OAAO3b,KAAKwX,e,iCAnUDte,GAAuC,sH,iCAAvCA,EAAuC,0E,OAAA,M,qlBAlCxC,CAAC,EAAAnD,WAAS,wiFC3BtB,+BACE,+BAEE,+BA6OF,iBACF,kB,MA9OS,qD,osEDyBI,CACX,CACC,EAAA6e,QAAQ,YAAa,CACpB,EAAAC,WAAW,SAAU,CACpB,EAAAlS,MAAM,CACLiZ,QAAS,IAEV,EAAA1H,QAAQ,WAET,EAAAW,WAAW,SACV,EAAAX,QAAQ,QACP,EAAAvR,MAAM,CACLiZ,QAAS,QAKb,EAAAhH,QAAQ,QAAS,CAChB,EAAA3C,MAAM,OAAQ,EAAAtP,MAAM,CAAE6F,KAAM,KACvB,EAAAyJ,MAAM,QAAS,EAAAtP,MAAM,CAAE6F,KAAM,UAC7B,EAAAqM,WAAW,SAAU,EAAAX,QAAQ,a,EAzBtC,GAsCa,EAAAhb,4C,mHE7Db,W,GACA,O,yFCDA,4BACE,4BACE,4BACE,4BACA,6BAA6B,iBAAO,qCAAkE,gBAAC,iBACzG,iBACF,iBACA,4BACE,6BACE,+BAAO,2FAAP,iBACF,iBACF,iBACF,iB,8CATgB,yCAC6C,4CAKhD,+CAA+B,yBAA/B,CAA+B,sBAA/B,CAA+B,wCDN5C,iBAWI,aALgB,KAAAmE,IAAc,GAEd,KAAAC,UAAoB,EACnB,KAAAE,YAAc,IAAI,EAAAC,a,wCAJ1BzE,I,iCAAAA,EAAuB,8YCRpC,+B,KAAwB,8C,wJDGxB,GAKa,EAAAA,2B,kFERb,+BA4CA,OAtCQ,EAAAoiB,eAAP,SAAuBS,GAGjB,IAFA,IAAIC,EAAW,GAELvY,EAAI,EAAGA,EAAIsY,EAAI5a,SAAUsC,EACV,mBAAhBsY,EAAItY,GAAGjH,MACU,uBAAhBuf,EAAItY,GAAGjH,MAEbwf,EAAS/X,KAAK8X,EAAItY,IAItB,OAAOuY,GAQN,EAAAC,iBAAP,SAAwBC,GACjB,IAAMC,EAAMD,EAAQE,aACdC,EAAQH,EAAQI,cAAgB,EAEtC,OAAOJ,EAAQK,iBAAmB,KAAQF,EAAQ,GAAK,IAAM,IAAOA,EAAQ,KAAQF,EAAM,GAAK,IAAM,IAAOA,GAG5G,EAAAK,kBAAP,SAAyBC,EAAiBC,EAAeC,EAAiBC,GACzE,OAAIH,GAAWE,GAAWA,GAAWD,IACjCD,GAAWG,GAASA,GAASF,GAC7BC,EAAUF,GAAWC,EAAQE,IAI3B,EAAAC,mBAAP,SAA0B5J,EAAe6J,GACxC,OAAIA,EAAM7J,GAIZ,EA5CA,G,0HCCA,W,8ICAE,+BAKE,0F,uBACF,iB,gCAJE,8DAAwD,0E,sBAK1D,4BACE,4BACE,4BACF,iBACA,uBACF,kBDVF,iBAcC,WAAY8J,GANF,KAAAC,YAAc,IAAI,EAAArf,aAEnB,KAAAsf,SAAmB,EACnB,KAAAC,oBAA8B,EAC9B,KAAAC,MAAgB,EAGxBjd,KAAK6c,MAAQA,E,OAGd,YAAAK,MAAA,SAAMrhB,GACL,OAAOmE,KAAK6c,MAAMxc,eAGnB,YAAA8c,SAAA,SAASthB,GACRmE,KAAK6c,MAAMxc,cAAce,UAG1B,YAAAgc,QAAA,WACCpd,KAAK8c,YAAYhE,Q,iCAtBNrf,GAAiB,oC,iCAAjBA,EAAiB,qkBCR9B,4BACE,iCAOA,8BAMF,kB,MAbU,yDAOH,2D,mmCDLP,GAKa,EAAAA,qB,gHERb,SACA,QACA,Q,GAGA,M,sBAOA,aAGI,WAAqByY,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAEhD,YAAAkL,cAAA,SAAeC,GACV,IAAIjL,EAAqB,IAAI,EAAAC,WAQ7B,OANkB,MAAbgL,IACDjL,EAASA,EAAOE,IAAK,YAAa+K,IAK/Btd,KAAKkS,KACPQ,IAAuBC,IAAM,+BAAgC,CAAEN,OAAQA,IAChF/R,KAAK,EAAA2S,UAAS,gBAGLL,aAGT,YAAA2K,YAAA,SAAaC,GAAb,WACQ3K,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACPc,KAAYL,IAAM,6BAA8BH,KAAKC,UAAW,CAAE+K,OAAQA,IAAY,CAAE3K,QAASA,IAC1GvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGZ,YAAA6K,4BAAA,SAA6BD,GAA7B,WACW3K,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACPc,KAAYL,IAAM,6CAA8CH,KAAKC,UAAW,CAAE+K,OAAQA,IAAY,CAAE3K,QAASA,IAC1HvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAIT,YAAA8K,WAAA,SAAYC,GAAZ,WACQ9K,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACPc,KAAYL,IAAM,4BAA6BH,KAAKC,UAAW,CAAEkL,SAAUA,IAAc,CAAE9K,QAASA,IAC7GvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGT,YAAAgL,aAAA,SAAcD,GAAd,WACQ9K,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACPc,KAAYL,IAAM,8BAA+BH,KAAKC,UAAW,CAAEkL,SAAUA,IAAc,CAAE9K,QAASA,IAC/GvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGT,YAAAiL,eAAA,SAAe/e,GACjB,IAAIuT,EAAqB,IAAI,EAAAC,WAIvB,OAFND,EAASA,EAAOE,IAAI,SAAUzT,GAEjBkB,KAAKkS,KAAKQ,IAAsBC,IAAM,kCAAmC,CAAEN,OAAQA,IACrFO,aAGT,YAAAkL,kBAAA,SAAmBR,GAAnB,WACQjL,EAAqB,IAAI,EAAAC,WAK7B,OAJAD,EAASA,EAAOE,IAAK,YAAa+K,GAElCtd,KAAKmS,aAAaY,QAEX/S,KAAKkS,KAAKQ,IAAoBC,IAAM,qCAAsC,CAAEN,OAAQA,IAC/F/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGZ,YAAAmL,qBAAA,SAAsBT,GAAtB,WACWzK,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KAAKc,KAAqBL,IAAM,wCAAyCH,KAAKC,UAAW,CAAE6K,UAAWA,IAAe,CAAEzK,QAASA,IAChJvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGT,YAAAoL,QAAA,SAASV,GAAT,WACQzK,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KAAKc,KAAqBL,IAAM,iCAAkCH,KAAKC,UAAW,CAAE6K,UAAWA,IAAe,CAAEzK,QAASA,IACzIvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGT,YAAAqL,OAAA,SAAQX,GAAR,WACQzK,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KAAKc,KAAcL,IAAM,wBAAyBH,KAAKC,UAAW,CAAE6K,UAAWA,IAAe,CAAEzK,QAASA,IACzHvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGT,YAAAsL,iBAAA,SAAkBZ,EAAmBa,GAArC,WACQtL,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KAAKc,KAAwBL,IAAM,oCAAqCH,KAAKC,UAAW,CAAE6K,UAAWA,EAAWa,QAASA,IAAa,CAAEtL,QAASA,IACjKvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGT,YAAAwL,kBAAA,SAAmBd,EAAmBa,GAAtC,WACQtL,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KAAKc,KAAwBL,IAAM,qCAAsCH,KAAKC,UAAW,CAAE6K,UAAWA,EAAWa,QAASA,IAAa,CAAEtL,QAASA,IAClKvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGT,YAAAyL,oBAAA,SAAqBF,GAArB,WACQtL,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAGhBT,EAAqB,IAAI,EAAAC,WAK7B,OAJAD,EAASA,EAAOE,IAAK,UAAW4L,GAEhCne,KAAKmS,aAAaY,QAEX/S,KAAKkS,KAAKc,KAAiBL,IAAM,2BAA4B,CAACwL,QAASA,GAAU,CAAEtL,QAASA,IACvGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAETN,aAGZ,YAAA0L,WAAA,SAAWX,EAAkBY,GAA7B,WACK1L,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAA0BL,IAAM,oCAAqCH,KAAKC,UAAU,CAAE+L,UAAWb,EAAUc,MAAOF,IAAW,CAAE1L,QAASA,IACxIvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,a,iCA3MSld,GAAoB,sD,oCAApBA,EAAoB,QAApBA,EAAoB,O,EADjC,GACa,EAAAA,wB,qGCbb,SACA,QACA,Q,GAGA,M,sBAIA,aAGC,WAAoBwc,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAuM,kBAAA,SAAkBC,GAAlB,WACK9L,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAA0BL,IAAM,cAAeH,KAAKC,UAAU,CAAEmM,KAAMD,IAAkB,CAAE9L,QAASA,IACnGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAiM,aAAA,SAAaF,GAAb,WACK9L,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAWL,IAAM,qBAAsBH,KAAKC,UAAU,CAAEkM,cAAeA,IAAkB,CAAE9L,QAASA,IACpGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAkM,gBAAA,SAAgBH,GAAhB,WACK9L,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAA0BL,IAAM,cAAeH,KAAKC,UAAU,CAAEmM,KAAMD,IAAkB,CAAE9L,QAASA,IACnGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA2C,mBAAA,SAAmBwJ,GAClB,IAAI1M,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,uBAAwBwM,EAAqBrK,YAE1D1U,KAAKkS,KACVQ,IAAwDC,IAAM,gCAAiC,CAAEN,OAAQA,IACzGO,aAGH,YAAAoM,iBAAA,SAAiB1iB,EAAcuN,EAAuBoV,GACrD,IAAI5M,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,OAAQjW,IACZiW,IAAI,gBAAiB1I,IACrB0I,IAAI,wBAAyB0M,EAAsBvK,YAE5D1U,KAAKkS,KACVQ,IAAgBC,IAAM,mCAAoC,CAAEN,OAAQA,IACpEO,aAGH,YAAAmE,sBAAA,SAAsBza,EAAc4iB,GAApC,WACK7M,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,OAAQjW,IACZiW,IAAI,eAAgB2M,EAAaxK,YAEjD1U,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAAmFC,IAAM,qCAAsC,CAAEN,OAAQA,IACzI/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAoE,0BAAA,SAA0B1a,EAAc4iB,GAAxC,WACK7M,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,OAAQjW,IACZiW,IAAI,eAAgB2M,EAAaxK,YAEjD1U,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAAmFC,IAAM,6CAA8C,CAAEN,OAAQA,IACjJ/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAuM,wBAAA,SAAwBlY,EAAc8E,EAAcrG,EAAgBjC,GAEnE,IAAIoP,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CACZpL,KAAMA,EACN8E,KAAMA,GAQP,OALc,MAAVrG,GAA+B,MAAbjC,IACrB4O,EAAO3M,OAASA,EAChB2M,EAAO5O,UAAYiC,GAGb1F,KAAKkS,KACVc,KAAUL,IAAM,6BAA8BH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IACjFD,aAGH,YAAAwM,uBAAA,SAAuBC,EAAkBzX,GAAzC,WACKiL,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAcL,IAAM,sCAAuCH,KAAKC,UAAU,CAAE4M,SAAUA,EAAUzX,MAAOA,IAAU,CAAEiL,QAASA,IAC5HvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA0M,uBAAA,SAAuBC,EAAmBC,GAA1C,WACK3M,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAWL,IAAM,sCAAuCH,KAAKC,UAAU,CAAE8M,UAAWA,EAAWC,KAAMA,IAAS,CAAE3M,QAASA,IACzHvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA6M,mBAAA,SAAmBC,EAAuBzY,EAAc0Y,GAEvD,IAAItN,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,gBAAiBmN,IACrBnN,IAAI,OAAQtL,IACZsL,IAAI,QAASoN,GAEtB3f,KAAKkS,KACVQ,IAAmCC,IAAM,qCAAsC,CAAEN,OAAQA,IACzFO,aAGH,YAAAgN,kBAAA,SAAkBC,EAAsBjY,GACvC,IAAIiL,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGblP,EAAO4O,KAAKC,UAAU,CAAEoN,aAAcA,EAAcjY,MAAOA,IAE/D,OAAO5H,KAAKkS,KACVc,KAAcL,IAAM,oCAAqC/O,EAAM,CAAEiP,QAASA,IAC1ED,aAGH,YAAAkN,kBAAA,SAAkBP,GACjB,IAAI1M,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGblP,EAAO4O,KAAKC,UAAU,CAAE8M,UAAWA,IAEvC,OAAOvf,KAAKkS,KACVc,KAAWL,IAAM,oCAAqC/O,EAAM,CAAEiP,QAASA,IACvED,aAGH,YAAAmN,WAAA,SAAWnY,EAAetL,EAAc0jB,GACvC,IAAInN,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CAAE2N,eAAgBA,EAAgBC,SAAU,CAAErY,MAAOA,EAAOtL,KAAMA,IAE/E,OAAO0D,KAAKkS,KACVc,KAAWL,IAAM,6BAA8BH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IAClFD,aAGH,YAAAsN,WAAA,SAAWF,EAAwBG,GAClC,IAAItN,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGjB,OAAO9S,KAAKkS,KACVc,KAAWL,IAAM,gCAAiCH,KAAKC,UAAU,CAAE,eAAkBuN,EAAgB,SAAYG,IAAa,CAAEtN,QAASA,IACzID,a,iCA7MSjd,GAAS,sD,oCAATA,EAAS,QAATA,EAAS,O,EADtB,GACa,EAAAA,a,sHCSb,SACA,Q,GAGA,M,sBAMA,aAII,WAAqBuc,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAG/C,YAAAiO,iBAAA,WACI,OAAOpgB,KAAKkS,KACPQ,IAAoBC,IAAM,yCAC1BC,aAGT,YAAAyN,cAAA,SAAeC,EAAkBC,EAAiBC,GAC9C,IAAInO,EAAqB,IAAI,EAAAC,WAc7B,OAZiB,MAAZgO,IACDjO,EAASA,EAAOE,IAAK,WAAY+N,IAGrB,MAAXC,IACDlO,EAASA,EAAOE,IAAK,UAAWgO,IAGpB,MAAXC,IACDnO,EAASA,EAAOE,IAAK,UAAWiO,IAG7BxgB,KAAKkS,KACPQ,IAAWC,IAAM,8BAA+B,CAAEN,OAAQA,IAC1DO,a,iCA7BAnd,GAA0B,sD,oCAA1BA,EAA0B,QAA1BA,EAA0B,O,EADvC,GACa,EAAAA,8B,sGC9Bb,SACA,QACA,QACA,S,GAGA,M,sBAKA,aAGC,WAAoByc,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,eAC5CsO,EAAiBC,YAAc,gG,OAIjC,YAAAC,MAAA,SAAMlL,EAAkB5L,EAAuBqQ,GAA/C,WAEK7H,EAAqB,IAAI,EAAAC,WAgB7B,OAdgB,MAAZmD,IACHpD,EAASA,EAAOE,IAAI,WAAYkD,IAGZ,MAAjB5L,IACHwI,EAASA,EAAOE,IAAI,gBAAiB1I,IAG1B,MAARqQ,IACH7H,EAASA,EAAOE,IAAI,OAAQ2H,IAG7Bla,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAAyBC,IAAM,0BAA2B,CAAEN,OAAQA,IACpE/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAgCH,YAAAgO,OAAA,SAAO3Z,EAAciT,GAArB,WACK7H,EAAqB,IAAI,EAAAC,WAS7B,OARAD,EAASA,EAAOE,IAAI,OAAQtL,GAEhB,MAARiT,IACH7H,EAASA,EAAOE,IAAI,OAAQ2H,IAG7Bla,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAA6CC,IAAM,2BAA4B,CAAEN,OAAQA,IACzF/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,a,iCA7ESrd,GAAU,sD,oCAAVA,EAAU,QAAVA,EAAU,O,EADvB,GACa,EAAAA,c,2GCOb,SACA,QAGA,Q,GAWA,M,sBAKA,aAGC,WAAoB2c,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAhH,KAAA,WACC,OAAOnL,KAAKkS,KAAKQ,IAAgHC,IAAM,aACrIC,aAIH,YAAAiO,kBAAA,SAAkBrV,EAAiBhI,GAClC,IAAI6O,EAAqB,IAAI,EAAAC,WAW7B,OARa,MAAT9G,IACH6G,EAASA,EAAOE,IAAI,QAASC,KAAKC,UAAUjH,KAG1B,MAAfhI,IACH6O,EAASA,EAAOE,IAAI,cAAeC,KAAKC,UAAUjP,KAG5CxD,KAAKkS,KACVQ,IAAqBC,IAAM,6BAA8B,CAAEN,OAAQA,IACnEO,aAGH,YAAAkO,oBAAA,SAAoBC,EAAiBC,EAAuBC,EAAkBC,EAAoBhH,GACjG,IAAI7H,EAAqB,IAAI,EAAAC,WAW7B,OANAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,UAAWwO,IACfxO,IAAI,gBAAiByO,IACrBzO,IAAI,cAAeC,KAAKC,UAAUwO,KAClC1O,IAAI,YAAaC,KAAKC,UAAUyO,IAEpC,MAARhH,IACH7H,EAASA,EAAOE,IAAI,OAAQ2H,IAGtBla,KAAKkS,KACVQ,IAAoBC,IAAM,uCAAwC,CAAEN,OAAQA,IAC5EO,aAGH,YAAAuO,mBAAA,SAAmBC,EAAkBC,EAAwBC,EAAoBJ,GAChF,IAAI7O,EAAqB,IAAI,EAAAC,WAO7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,WAAY6O,IAChB7O,IAAI,iBAAkB8O,IACtB9O,IAAI,gBAAiBC,KAAKC,UAAU6O,KACpC/O,IAAI,YAAaC,KAAKC,UAAUyO,IAEzClhB,KAAKkS,KACVQ,IAAmBC,IAAM,6BAA8B,CAAEN,OAAQA,IACjEO,aAGH,YAAA2O,qBAAA,SAAqB9L,GAArB,WACK5C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAUL,IAAM,sCAAuCH,KAAKC,UAAU,CAAE,SAAYgD,IAAa,CAAE5C,QAASA,IAC5GvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA5C,oBAAA,SAAoBwR,GAApB,WAEK3O,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,4BAA6BH,KAAKC,UAAU,CAAE,OAAU+O,IAAW,CAAE3O,QAASA,IACxGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA6O,oBAAA,SAAoBD,GAApB,WACK3O,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAoBL,IAAM,4BAA6BH,KAAKC,UAAU,CAAE,OAAU+O,IAAW,CAAE3O,QAASA,IACxGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAzC,oBAAA,SAAoB7T,GAApB,WACKuW,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAWL,IAAM,4BAA6BH,KAAKC,UAAU,CAAEnW,KAAMA,IAAS,CAAEuW,QAASA,IACzFvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA8O,iBAAA,SAAiBC,EAAsB3N,GAAvC,WAEKnB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAgBL,IAAM,kCAAmCH,KAAKC,UAAU,CAAE,aAAgBkP,EAAc,cAAiB3N,IAAc,CAAEnB,QAASA,IAClJvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAgP,oBAAA,SAAoBD,EAAsB3N,GAA1C,WAEKnB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA9S,KAAKmS,aAAaY,QAGX/S,KAAKkS,KACVc,KAAgBL,IAAM,qCAAsCH,KAAKC,UAAU,CAAE,aAAgBkP,EAAc,cAAiB3N,IAAc,CAAEnB,QAASA,IACrJvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAiP,oBAAA,SAAoBF,EAAsBG,GAA1C,WAEKjP,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA9S,KAAKmS,aAAaY,QAGX/S,KAAKkS,KACVc,KAAcL,IAAM,qCAAsCH,KAAKC,UAAU,CAAE,aAAgBkP,EAAc,cAAiBG,IAAkB,CAAEjP,QAASA,IACvJvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAmP,2BAAA,SAA2B/B,EAAwBgC,GAAnD,WAEKnP,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA9S,KAAKmS,aAAaY,QAGX/S,KAAKkS,KACVc,KAAWL,IAAM,6BAA8BH,KAAKC,UAAU,CAAE,eAAkBuN,EAAgB,SAAYgC,IAAS,CAAEnP,QAASA,IAClIvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAqP,8BAAA,SAA8BjC,EAAwBC,GAAtD,WAEKpN,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA9S,KAAKmS,aAAaY,QAGX/S,KAAKkS,KACVc,KAAWL,IAAM,gCAAiCH,KAAKC,UAAU,CAAE,eAAkBuN,EAAgB,SAAYC,IAAa,CAAEpN,QAASA,IACzIvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAsP,8BAAA,SAA8BlC,EAAwBG,GAAtD,WAEKtN,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA9S,KAAKmS,aAAaY,QAGX/S,KAAKkS,KACVc,KAAgBL,IAAM,gCAAiCH,KAAKC,UAAU,CAAE,eAAkBuN,EAAgB,SAAYG,IAAa,CAAEtN,QAASA,IAC9IvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA+I,aAAA,SAAa3f,EAAYyZ,GACxB,IAAIpD,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,KAAMvW,IACVuW,IAAI,WAAYkD,GAEzBzV,KAAKkS,KACVQ,IAAeC,IAAM,qBAAsB,CAAEN,OAAQA,IACrDO,aAGH,YAAAuP,mBAAA,SAAmB7lB,EAAcmZ,GAChC,IAAIpD,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,OAAQjW,IACZiW,IAAI,WAAYkD,GAEzBzV,KAAKkS,KACVQ,IAAcC,IAAM,4BAA6B,CAAEN,OAAQA,IAC3DO,aAGH,YAAAwP,yBAAA,SAAyB9lB,EAAcmZ,EAAkByE,GACxD,IAAI7H,EAAqB,IAAI,EAAAC,WAM7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,OAAQjW,IACZiW,IAAI,WAAYkD,IAChBlD,IAAI,OAAQ2H,GAErBla,KAAKkS,KACVQ,IAAcC,IAAM,iCAAkC,CAAEN,OAAQA,IAChEO,aAGH,YAAAyP,mBAAA,SAAmB/lB,EAAcmZ,GAChC,IAAIpD,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,OAAQjW,IACZiW,IAAI,WAAYkD,GAEzBzV,KAAKkS,KACVQ,IAAeC,IAAM,0BAA2B,CAAEN,OAAQA,IAC1DO,aAGH,YAAA0P,2BAAA,SAA2BhmB,EAAcmZ,GAAzC,WACKpD,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,OAAQjW,IACZiW,IAAI,WAAYkD,GAEhCzV,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAAyBC,IAAM,2CAA4C,CAAEN,OAAQA,IACrF/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAuM,wBAAA,SAAwBlY,EAAc8E,EAAcrG,EAAgB2b,EAAwB5d,EAAmByW,GAE9G,IAAIrH,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CACZpL,KAAMA,EACN8E,KAAMA,GAgBP,OAbc,MAAVrG,GAA+B,MAAbjC,IACrB4O,EAAO3M,OAASA,EAChB2M,EAAO5O,UAAYA,GAGE,MAAlB4d,IACFhP,EAAOgP,eAAiBA,GAGd,MAARnH,IACH7H,EAAO6H,KAAOA,GAGRla,KAAKkS,KACVc,KAAgBL,IAAM,6BAA8BH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IACvFD,aAGH,YAAA2P,iCAAA,SAAiCtb,EAAc8E,GAC9C,IAAI8G,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CACZpL,KAAMA,EACN8E,KAAMA,GAGP,OAAO/L,KAAKkS,KACVc,KAAgBL,IAAM,6BAA8BH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IACvFD,aAGH,YAAA4P,iBAAA,SAAiBC,EAAkBC,EAAoBC,EAAkBC,GAExE,IAAIvQ,EAAqB,IAAI,EAAAC,WAO7B,OAHAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,WAAYkQ,EAAS/N,aACzBnC,IAAI,aAAcmQ,EAAWhO,aAC7BnC,IAAI,WAAYoQ,IAChBpQ,IAAI,cAAeqQ,EAAYlO,YAGxC1U,KAAKkS,KACVQ,IAAoBC,IAAM,kBAAmB,CAAEN,OAAQA,IACvDO,aAGH,YAAAiQ,0BAAA,SAA0BJ,EAAkBC,EAAoBC,EAAkBC,GAEjF,IAAIvQ,EAAqB,IAAI,EAAAC,WAM7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,WAAYkQ,EAAS/N,aACzBnC,IAAI,aAAcmQ,EAAWhO,aAC7BnC,IAAI,WAAYoQ,IAChBpQ,IAAI,cAAeqQ,EAAYlO,YAExC1U,KAAKkS,KACVQ,IAAoBC,IAAM,qBAAsB,CAAEN,OAAQA,IAC1DO,aAGH,YAAAkQ,gBAAA,SAAgBC,EAAmBN,EAAkBC,EAAoBM,GACxE,IAAI3Q,EAAqB,IAAI,EAAAC,WAM7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,YAAawQ,IACjBxQ,IAAI,WAAYkQ,EAAS/N,aACzBnC,IAAI,aAAcmQ,EAAWhO,aAC7BnC,IAAI,iBAAkByQ,EAAetO,YAE9C1U,KAAKkS,KACVQ,IAAkBC,IAAM,0BAA2B,CAAEN,OAAQA,IAC7DO,aAGH,YAAAqQ,iBAAA,SAAiBF,EAAmBN,EAAkBC,GACrD,IAAIrQ,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,YAAawQ,IACjBxQ,IAAI,WAAYkQ,EAAS/N,aACzBnC,IAAI,aAAcmQ,EAAWhO,YAEtC1U,KAAKkS,KACVQ,IAAkBC,IAAM,0BAA2B,CAAEN,OAAQA,IAC7DO,aAGH,YAAAsQ,oBAAA,SAAoBH,GAApB,WACKlQ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAWL,IAAM,sBAAuBH,KAAKC,UAAU,CAAEsQ,UAAWA,IAAc,CAAElQ,QAASA,IAC7FvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAuQ,wBAAA,SAAwBC,GAAxB,WACKvQ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAiBL,IAAM,0BAA2BH,KAAKC,UAAU,CAAE2Q,OAAQA,IAAW,CAAEvQ,QAASA,IACjGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAyQ,mBAAA,SAAmBD,GAAnB,WACKvQ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAiBL,IAAM,qBAAsBH,KAAKC,UAAU,CAAE2Q,OAAQA,IAAW,CAAEvQ,QAASA,IAC5FvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA0Q,eAAA,WACC,IAAIjR,EAAqB,IAAI,EAAAC,WAE7B,OAAOtS,KAAKkS,KACVQ,IAAgHC,IAAM,wBAAyB,CAAEN,OAAQA,IACzJO,aAGH,YAAA2Q,qBAAA,SAAqB7N,EAAa8N,GACjC,IAAInR,EAAqB,IAAI,EAAAC,WAI7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,MAAOmD,IACXnD,IAAI,cAAeiR,GAE5BxjB,KAAKkS,KACVQ,IAAgBC,IAAM,wBAAyB,CAAEN,OAAQA,IACzDO,aAGH,YAAA6Q,yBAAA,WACC,IAAIpR,EAAqB,IAAI,EAAAC,WAE7B,OAAOtS,KAAKkS,KACVQ,IAAkBC,IAAM,iCAAkC,CAAEN,OAAQA,IACpEO,aAGH,YAAA8Q,qBAAA,SAAqBhO,GACpB,IAAIrD,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOmD,GAEpB1V,KAAKkS,KACVQ,IAAuBC,IAAM,uBAAwB,CAAEN,OAAQA,IAC/DO,aAGH,YAAA+Q,WAAA,WACC,IAAItR,EAAqB,IAAI,EAAAC,WAE7B,OAAOtS,KAAKkS,KACVQ,IAAcC,IAAM,4BAA6B,CAAEN,OAAQA,IAC3DO,aAGH,YAAAgR,qBAAA,SAAqBC,EAAuB5W,GAC7B,IAAI,EAAA6F,YAAY,CAC7B,eAAgB,qBADjB,IAcIT,EAAqB,IAAI,EAAAC,WAI7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,OAAQsR,IACZtR,IAAI,WAAYtF,GAEzBjN,KAAKkS,KACVQ,IAAuBC,IAAM,+BAAgC,CAAEN,OAAQA,IACvEO,aAIH,YAAAkR,qBAAA,SAAqBrO,GAArB,WACK5C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAUL,IAAM,2CAA4CH,KAAKC,UAAU,CAAE,SAAYgD,IAAa,CAAE5C,QAASA,IACjHvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAkBH,YAAAmR,qBAAA,SAAqBF,EAAuB5W,EAA2B6U,EAAuBkC,GAA9F,WACKnR,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CACZwR,cAAeA,EACf5W,kBAAmBA,EACnB6U,cAAeA,EACfkC,WAAYA,GAMb,OAFAhkB,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAeL,IAAM,sCAAuCH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IAC/FvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAsE,iBAAA,SAAiB+M,GAAjB,WACKpR,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAiBL,IAAM,sBAAuBH,KAAKC,UAAU,CAAEwR,KAAMA,IAAS,CAAEpR,QAASA,IACzFvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAsR,wBAAA,SAAwBxO,EAAakC,GAArC,WACK/E,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAwBL,IAAM,8BAA+BH,KAAKC,UAAU,CAAEiD,IAAKA,EAAKkC,QAASA,IAAY,CAAE/E,QAASA,IACxHvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAuR,0BAAA,SAA0BzO,GAA1B,WACK7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAsBL,IAAM,gCAAiCH,KAAKC,UAAU,CAAEiD,IAAKA,IAAQ,CAAE7C,QAASA,IACtGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAwR,iBAAA,SAAiB1O,GAAjB,WACK7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAWL,IAAM,sBAAuBH,KAAKC,UAAU,CAAEiD,IAAKA,IAAQ,CAAE7C,QAASA,IACjFvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAyR,wBAAA,SAAwB3O,GAAxB,WACK7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAWL,IAAM,8BAA+BH,KAAKC,UAAU,CAAEiD,IAAKA,IAAQ,CAAE7C,QAASA,IACzFvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA0R,kBAAA,SAAkB5O,GACjB,IAAI7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGjB,OAAO9S,KAAKkS,KAAKc,KAAwBL,IAAM,uBAAwBH,KAAKC,UAAU,CAAEiD,IAAKA,IAAQ,CAAE7C,QAASA,KAGjH,YAAA0R,cAAA,SAAc7O,GACb,IAAIrD,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOmD,GAEpB1V,KAAKkS,KACVQ,IAAgBC,IAAM,mBAAoB,CAAEN,OAAQA,IACpDO,aAMH,YAAA4R,mBAAA,SAAmBC,EAAqCC,EAA8BtP,EAAgBuP,EAAsBC,GAA5H,WACK/R,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CAAEqS,UAAWA,EAAWtP,MAAOA,EAAOuP,aAAcA,GAWjE,OATsB,MAAlBF,IACHpS,EAAuB,eAAIoS,GAEf,MAATG,IACHvS,EAAc,MAAIuS,GAGnB5kB,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAWL,IAAM,0BAA2BH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IAC/EvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAhP,KAAA,SAAK8R,EAAagN,EAAoBD,EAAkB3jB,EAAgDkN,GACvG,IAAI6G,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CACZqD,IAAKA,EACL1J,KAAMA,GAeP,OAZkB,MAAd0W,IACHrQ,EAAOqQ,WAAaA,GAGL,MAAZD,IACHpQ,EAAOoQ,SAAWA,GAGf3jB,EAAOmC,OAAS,IACnBoR,EAAOvT,OAASA,GAGVkB,KAAKkS,KACVc,KAAUL,IAAM,oBAAqBH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IACxED,aAGH,YAAAiH,OAAA,SAAOnE,EAAapB,EAAewN,EAAuB+C,EAAwB/lB,GACjF,IAAI+T,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CACZqD,IAAKA,EACLoM,cAAeA,EACf+C,eAAgBA,GAYjB,OATI/lB,EAAOmC,OAAS,IACnBoR,EAAOvT,OAASA,GAGJ,MAATwV,GAAiBA,EAAMrT,OAAS,IACnCoR,EAAOiC,MAAQA,GAITtU,KAAKkS,KACVc,KAAyCL,IAAM,sBAAuBH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IACzGD,aAGH,YAAAkS,iBAAA,SAAiBpP,GAChB,IAAI7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,CACZqD,IAAKA,GAGN,OAAO1V,KAAKkS,KACVc,KAAwBL,IAAM,kCAAmCH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IACpGD,aAGH,YAAArD,SAAA,SAASmG,GACR,IAAIrD,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOmD,GAEpB1V,KAAKkS,KACVQ,IAAcC,IAAM,wBAAyB,CAAEN,OAAQA,IACvDO,aAGH,YAAAmS,oBAAA,WACC,IAAI1S,EAAqB,IAAI,EAAAC,WAE7B,OAAOtS,KAAKkS,KACVQ,IAAoDC,IAAM,wBAAyB,CAAEN,OAAQA,IAC7FO,aAGH,YAAAoS,yBAAA,SAAyBtP,EAAa+M,EAAkBC,EAAoBC,EAAkBC,GAE7F,IAAIvQ,EAAqB,IAAI,EAAAC,WAQ7B,OAHAD,GADAA,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,MAAOmD,IACXnD,IAAI,WAAYkQ,EAAS/N,aACzBnC,IAAI,aAAcmQ,EAAWhO,aAC7BnC,IAAI,WAAYoQ,IAChBpQ,IAAI,cAAeqQ,EAAYlO,YAGxC1U,KAAKkS,KACVQ,IAAoBC,IAAM,gCAAiC,CAAEN,OAAQA,IACrEO,aAGH,YAAAqS,iBAAA,SAAiBvP,GAChB,IAAIrD,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOmD,GAEpB1V,KAAKkS,KACVQ,IAAcC,IAAM,sBAAuB,CAAEN,OAAQA,IACrDO,aAGH,YAAAsS,iBAAA,sBAIC,OAFAllB,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAAoBC,IAAM,8BAC1BrS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,a,iCAtwBS/c,GAAe,sD,oCAAfA,EAAe,QAAfA,EAAe,O,EAD5B,GACa,EAAAA,mB,wHCrBb,SACA,QAEA,Q,GAEA,M,sBAQA,aAGC,WAAoBqc,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAgT,QAAA,SAAQzC,EAAoBD,GAA5B,WAEKpQ,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,aAAcmQ,EAAWhO,aAC7BnC,IAAI,WAAYkQ,EAAS/N,YAEzC1U,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAAuCC,IAAM,kCAAmC,CAAEN,OAAQA,IAC1F/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAF,IAAA,SAAIgD,GAAJ,WAEKrD,EAAqB,IAAI,EAAAC,WAK7B,OAJAD,EAASA,EAAOE,IAAI,MAAOmD,GAE3B1V,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVQ,IAA2BC,IAAM,8BAA+B,CAAEN,OAAQA,IAC1E/R,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAwS,iBAAA,SAAiBnY,EAA2BoY,GAA5C,WAEOhT,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,aAAc8S,IAClB9S,IAAI,oBAAqBtF,GAEzCjN,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACTQ,IAA6BC,IAAM,0CAA2C,CAAEN,OAAQA,IACxF/R,KAAK,EAAA2S,UAAS,WACb,EAAKd,aAAae,eAEnBN,aAGN,YAAA0S,eAAA,SAAeC,EAA0BpU,GAAzC,WAEOkB,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,mBAAoBgT,IACxBhT,IAAI,oBAAqBpB,GAEzCnR,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACTQ,IAA6BC,IAAM,4CAA6C,CAAEN,OAAQA,IAC1F/R,KAAK,EAAA2S,UAAS,WACb,EAAKd,aAAae,eAEnBN,aAGN,YAAA0F,MAAA,SAAM8K,GAAN,WAEKvQ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAA4BL,IAAM,gCAAiCH,KAAKC,UAAU,CAAE2Q,OAAQA,IAAW,CAAEvQ,QAASA,IAClHvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAxD,KAAA,SAAKsG,GAAL,WAEK7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbT,EAAS,GAQb,OANW,MAAPqD,IACHrD,EAAS,CAAEqD,IAAKA,IAGjB1V,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAA6DL,IAAM,+BAAgCH,KAAKC,UAAUJ,GAAS,CAAEQ,QAASA,IACtIvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAxR,OAAA,SAAOsU,GAAP,WAEK7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAUL,IAAM,iCAAkCH,KAAKC,UAAU,CAAEiD,IAAKA,IAAQ,CAAE7C,QAASA,IAC3FvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA4S,OAAA,SAAO9P,GAAP,WAEK7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAUL,IAAM,iCAAkCH,KAAKC,UAAU,CAAEiD,IAAKA,IAAQ,CAAE7C,QAASA,IAC3FvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA6S,IAAA,SAAI/P,GAAJ,WAEK7C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAUL,IAAM,8BAA+BH,KAAKC,UAAU,CAAEiD,IAAKA,IAAQ,CAAE7C,QAASA,IACxFvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAA8S,QAAA,SAAQhQ,EAAYgN,EAAoBD,GAEvC,IAAIpQ,EAAqB,IAAI,EAAAC,WAO7B,OAJAD,GADAA,GADAA,EAASA,EAAOE,IAAI,MAAOmD,IACXnD,IAAI,aAAcmQ,EAAWhO,aAC7BnC,IAAI,WAAYkQ,EAAS/N,YAIlC1U,KAAKkS,KACVQ,IAAoCC,IAAM,mCAAoC,CAAEN,OAAQA,IAIxFO,a,iCAvKS1c,GAA4B,sD,oCAA5BA,EAA4B,QAA5BA,EAA4B,O,EADzC,GACa,EAAAA,gC,uGCdb,SACA,QACA,Q,GAGA,M,sBAKA,aAGC,WAAoBgc,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAwT,WAAA,SAAWC,EAAiBnD,EAAkBoD,GAC7C,IAAIxT,EAAqB,IAAI,EAAAC,WAO7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,UAAW,eACfA,IAAI,UAAWqT,EAAQlR,aACvBnC,IAAI,WAAYkQ,EAAS/N,aACzBnC,IAAI,cAAesT,GAE5B7lB,KAAKkS,KACVQ,IAAoBC,IAAM,aAAc,CAAEN,OAAQA,IAClDO,aAGH,YAAAkT,aAAA,SAAaC,GAAb,WACKlT,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAUL,IAAM,kBAAmBH,KAAKC,UAAU,CAAE,GAAMsT,IAAW,CAAElT,QAASA,IAChFvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,aAGH,YAAAoT,cAAA,SAAcD,EAAgBE,GAA9B,WACKpT,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA9S,KAAKmS,aAAaY,QAEX/S,KAAKkS,KACVc,KAAUL,IAAM,uBAAwBH,KAAKC,UAAU,CAAE,GAAMsT,EAAQ,OAAUE,IAAW,CAAEpT,QAASA,IACvGvS,KAAK,EAAA2S,UAAS,WACd,EAAKd,aAAae,eAElBN,a,iCA5CS9c,GAAW,sD,oCAAXA,EAAW,QAAXA,EAAW,O,EADxB,GACa,EAAAA,e,8MC9Bb,aA8BA,SAAgByP,EAAc2gB,EAAiCC,GAC9D,OAAOD,EAAM5jB,EAAI6jB,EAAK7jB,GAAK4jB,EAAM5jB,EAAK6jB,EAAK7jB,EAAI6jB,EAAK3jB,QAAW0jB,EAAM7jB,EAAI8jB,EAAK9jB,GAAK6jB,EAAM7jB,EAAK8jB,EAAK9jB,EAAI8jB,EAAK5jB,MA7B7G,8BAAmC0E,EAAcmf,GAChD,IAUID,EAVMjlB,EAAGC,OAAO,QAEIS,OAAO,KAAKmE,QAAQ,eAAe,GAEhCnE,OAAO,QAChCC,KAAK,KAAM,KACXA,KAAK,KAAM,KACXA,KAAK,YAAaukB,GAClBnf,KAAKA,GAEWtH,OAAOyC,UAIzB,OAFAlB,EAAGC,OAAO,gBAAgBC,SAEnB+kB,EAAK5jB,MAAQ,GAGrB,oBAAyBF,EAAWC,GACnC,IAAIX,EAAWT,EAAGC,OAAO,QAAQxB,OAC7B0mB,EAAK1kB,EAAI2kB,iBAKb,OAHAD,EAAGhkB,EAAIA,EACPgkB,EAAG/jB,EAAIA,EAEA+jB,EAAGE,gBAAgB5kB,EAAI6kB,eAAeC,YAG9C,kBAIA,iCAAsCC,EAAgEC,GACrG,OAAOphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAGC,EAAGokB,EAAMpkB,GAAKqkB,IAAUphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAIqkB,EAAMnkB,MAAOD,EAAGokB,EAAMpkB,EAAIokB,EAAMlkB,QAAUmkB,IAC9HphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAIqkB,EAAMnkB,MAAOD,EAAGokB,EAAMpkB,GAAKqkB,IAAUphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAGC,EAAGokB,EAAMpkB,EAAIokB,EAAMlkB,QAAUmkB,IAGhI,+BAAoCD,EAAgEC,GACnG,OAAOphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAGC,EAAGokB,EAAMpkB,GAAKqkB,IAAUphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAIqkB,EAAMnkB,MAAOD,EAAGokB,EAAMpkB,EAAIokB,EAAMlkB,QAAUmkB,IAC9HphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAIqkB,EAAMnkB,MAAOD,EAAGokB,EAAMpkB,GAAKqkB,IAAUphB,EAAc,CAAElD,EAAGqkB,EAAMrkB,EAAGC,EAAGokB,EAAMpkB,EAAIokB,EAAMlkB,QAAUmkB,IAGhI,gCAAqCC,GACpC,MAAO,CAAEvkB,EAAG+D,SAASwgB,EAAU/kB,KAAK,MAAOS,EAAG8D,SAASwgB,EAAU/kB,KAAK,MAAOU,MAAO6D,SAASwgB,EAAU/kB,KAAK,UAAWW,OAAQ4D,SAASwgB,EAAU/kB,KAAK,c,mHC7CxJ,W,GAGA,O,sDCyBc,gCAAqF,YAAmB,kB,uBAA5C,wCAAyB,6C,yBAiBrF,gCAA+F,YAAQ,kB,uBAAvB,mCAAe,uC,mDATvG,4BACE,4BACE,4BACE,8BAAgB,YAAkC,iBACpD,iBACA,6BACE,gCACE,4FACA,wBACA,kCACF,iBACF,iBACF,iBACF,iB,8CAVsB,2DAGR,wEAA4E,mBAA5E,CAA4E,uBAG1E,qF,8FAQhB,4BACE,4BACE,4BACE,8BACE,6BACF,iBACF,iBACA,6BACE,6BACE,6BAAK,6IAGH,sBACF,iBACF,iBAEF,iBACF,iBACF,iB,gCARU,0F,yBAmBF,gCAAmF,YAAQ,kB,uBAAvB,mCAAe,uC,yBAanF,gCAAmF,YAAQ,kB,uBAAvB,mCAAe,uC,mDARzF,4BACE,4BACE,8BAAgB,6BAA6D,iBAC/E,iBACA,6BACE,gCACE,+HACA,wBACA,kCACF,iBACF,iBACF,iB,iCALM,4EAAgD,eAExC,8E,mDAtBhB,4BACE,4BACE,4BACE,8BAAgB,6BAA6C,iBAC/D,iBACA,6BACE,gCACE,mIACA,wBACA,kCACF,iBACF,iBACF,iBAEA,+BAYF,iB,gCAnBQ,iFAAqD,eAE7C,6EAKT,wI,qBA+CG,6B,qBACA,6BDlIhB,iBAWI,aAHU,KAAAglB,oBAAsB,IAAI,EAAAppB,aAC1B,KAAAqpB,YAAc,IAAI,EAAArpB,a,OAK5B,YAAAspB,OAAA,WACI/mB,KAAK6mB,oBAAoB/N,KAAM9Y,KAAK2e,eACpC3e,KAAK8mB,YAAYhO,KAAM,SAG3B,YAAA1B,SAAA,WACIpX,KAAK8mB,YAAYhO,KAAM,W,iCAflB9gB,I,iCAAAA,EAAuB,s2C,GAAA,MCVpC,0BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBAQE,+BAEE,4BACE,4BACE,6BACE,+BACE,8BACF,iBACF,iBACA,8BACE,iCAA6C,gFAC3C,yBACA,mCACF,iBACF,iBACF,iBACF,iBAEA,qBAEA,gCAeA,qBAEA,gCAoBA,iCAsDA,6BACE,6BACE,8BACE,iCAAsB,wCAAS,EAAAof,cAC3B,8BACJ,iBACA,iCAAsB,wCAAS,EAAA2P,YAC3B,qCACA,qCACJ,iBACF,iBACF,iBACF,iBACF,iBAEJ,kB,4BApHyD,kEAEnC,mEAQQ,uEAiBnB,kEAoBA,+DA4DgF,kDACjE,gEACA,iE,kRDlI1B,GAKa,EAAA/uB,2B,iHEVb,W,GAEA,OAEA,O,+DCmBkB,gCAAgF,YAAQ,kB,uBAAvB,wBAAe,uC,sBAWnF,gCAA0D,6BAA6C,kB,sBACvG,gCAA2H,6BAA8C,kB,mDAvBlL,6BACE,4BACE,6BACE,6BAA2B,4BAAQ,YAAmB,iBAAQ,iBAC9D,6BACE,6BACE,4BAAO,6BAAyD,iBAClE,iBACA,8BACE,iCAA4B,4FAC1B,4BACA,mCACF,iBACF,iBACA,8BACE,6BAAO,8BAAgE,iBACzE,iBACA,8BACE,iCAA0D,mGAC3D,yBACA,iCAAoB,8BAAwC,iBAC5D,iCAAqB,8BAAyC,iBAC9D,mCACA,mCACF,iBACC,iBACF,iBACF,iBACF,iBACF,iB,wDA1ByC,qDAMH,gDAA6B,sBAE/C,6EAOF,uDAA6B,0BAA7B,CAA6B,0CAI9B,+DACA,6HD7BvB,iBAYI,WAAqB8c,GAAA,KAAAA,UAHX,KAAA+R,oBAAsB,IAAI,EAAAppB,aAC1B,KAAAqpB,YAAc,IAAI,EAAArpB,a,OAI5B,YAAAwC,SAAA,sBACID,KAAK8U,QAAQkK,iBAAkBhf,KAAK2e,cAAc5S,KAAKzP,KAAM0D,KAAK2e,cAAclb,WAAW,GAAOwG,MAAM,SAAA+c,GACpG,EAAKrI,cAAcqI,UAAYA,MAIvC,YAAAD,OAAA,WAEI/mB,KAAK6mB,oBAAoB/N,KAAM9Y,KAAK2e,eACpC3e,KAAK8mB,YAAYhO,KAAM,SAG3B,YAAAmO,OAAA,WACIjnB,KAAK8mB,YAAYhO,KAAM,SAG3B,YAAA1B,SAAA,WACIpX,KAAK8mB,YAAYhO,KAAM,W,iCAzBlB7gB,GAAqB,mC,iCAArBA,EAAqB,uzC,GAAA,MCZlC,6BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBACA,4BACE,kCAEE,+BA+BA,6BACE,6BACE,8BACE,iCAAsB,wCAAS,EAAAgvB,YAC3B,8BACJ,iBACA,iCAAmB,wCAAS,EAAA7P,cACxB,8BACJ,iBACA,iCAAsB,wCAAS,EAAA2P,YAC3B,8BACJ,iBACF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,4BAjD8B,iEAwC6D,oD,wQD9C3F,GAMa,EAAA9uB,yB,wHEZb,WAEA,GADA,OACA,Q,6DCQI,4BACE,6BACE,6BACF,iBACF,kB,yBACA,4BACE,6BAAgC,YAAW,iBAC7C,kB,6BADkC,+C,mDAyBhC,0BACE,0CAAkF,kGAAgC,iBACpH,iB,wDADoB,yCAAmB,gCAAnB,CAAmB,Y,qBAW/B,6B,qBACA,6BDlDd,iBAYI,aAHU,KAAA6uB,YAAc,IAAI,EAAArpB,aAC5B,KAAAqR,QAAkB,K,OAIlB,YAAA7O,SAAA,aAGA,YAAAinB,YAAA,WACI,IAAM,IAAI3jB,EAAI,EAAGA,EAAIvD,KAAK2e,cAAcwI,iBAAiBlmB,OAAQsC,IAE7D,IAAMvD,KAAK2e,cAAcwI,iBAAiB5jB,GAAG6jB,SACzC,OAAO,EAIf,OAAO,GAGX,YAAAC,YAAA,SAAa/c,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,IAGxD,YAAAyc,OAAA,WAC0C,MAAjC/mB,KAAK2e,cAAc2I,aACpBtnB,KAAK2e,cAAc2I,WAAa,IAGpC,IAAM,IAAI/jB,EAAI,EAAGA,EAAIvD,KAAK2e,cAAcwI,iBAAiBlmB,OAAQsC,IAAM,CACnE,IAAMgkB,EAAUvnB,KAAK2e,cAAcwI,iBAAiB5jB,GAEpD,GAAKgkB,EAAQH,UAAmC,oBAAvBG,EAAQ/J,OAAOgK,KAA6B,CACjE,IACMC,EAAY,CAAEnrB,KAAM,aAAcgY,MADN,MAAlBiT,EAAQ7hB,OAAiB6hB,EAAQ7hB,OAAS,IAAM6hB,EAAQ3f,MAAQ2f,EAAQ3f,OAGxF5H,KAAK2e,cAAc2I,WAAWvjB,KAAM0jB,IAK5CznB,KAAK8mB,YAAYhO,KAAM,SAG3B,YAAA1B,SAAA,WACIpX,KAAK8mB,YAAYhO,KAAM,W,iCA/ClB5gB,I,iCAAAA,EAA4B,q6BCVzC,0BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBACA,0BACE,8BAKA,8BAGA,kCACE,6BACE,6BACE,6BACE,6BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACF,iBACA,gCAGA,6BACE,8BACE,iCAAsB,wCAAS,EAAAkf,cAC7B,4BACE,8BACF,iBACF,iBACA,iCAAsB,wCAAS,EAAA2P,YAC7B,4BACE,qCACA,qCACF,iBACF,iBACF,iBACF,iBACF,iBACF,iBACF,kB,MAnDS,oDAKA,oDA0BE,yEAU8E,wDAEjE,uEACA,yE,mKDlDxB,GAMa,EAAA7uB,gC,oHEVb,W,GACA,O,4DCSI,4BACE,6BACE,6BACF,iBACF,kB,yBACA,4BACE,6BAAgC,YAAW,iBAC7C,kB,6BADkC,+C,mDAyBhC,0BACE,sCAA8E,kGAAgC,iBAChH,iB,wDADgB,yCAAmB,gCAAnB,CAAmB,YDvCzC,iBAYI,aAHU,KAAA4uB,YAAc,IAAI,EAAArpB,aAC5B,KAAAqR,QAAkB,K,OAIlB,YAAA7O,SAAA,aAGA,YAAAinB,YAAA,WACI,IAAM,IAAI3jB,EAAI,EAAGA,EAAIvD,KAAK2e,cAAc+I,aAAazmB,OAAQsC,IAEzD,IAAMvD,KAAK2e,cAAc+I,aAAankB,GAAG6jB,SACrC,OAAO,EAIf,OAAO,GAGX,YAAAL,OAAA,WAC0C,MAAjC/mB,KAAK2e,cAAc2I,aACpBtnB,KAAK2e,cAAc2I,WAAa,IAGpC,IAAM,IAAI/jB,EAAI,EAAGA,EAAIvD,KAAK2e,cAAc+I,aAAazmB,OAAQsC,IAAM,CAC/D,IAAMgkB,EAAUvnB,KAAK2e,cAAc+I,aAAankB,GAEhD,GAAKgkB,EAAQH,UAAmC,UAAvBG,EAAQ/J,OAAOgK,KAAmB,CACvD,IAAMC,EAAY,CAAEnrB,KAAMirB,EAAQI,cAAerT,MAAOiT,EAAQ3f,OAEhE5H,KAAK2e,cAAc2I,WAAWvjB,KAAM0jB,IAI5CznB,KAAK8mB,YAAYhO,KAAM,SAG3B,YAAA1B,SAAA,WACIpX,KAAK8mB,YAAYhO,KAAM,W,iCAzClB1gB,I,iCAAAA,EAAwB,80BCTrC,0BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBACA,4BACE,8BAKA,8BAGA,kCACE,6BACE,6BACE,6BACE,6BACF,iBACF,iBACA,8BACE,6BACE,8BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,6BACE,8BACF,iBACF,iBACF,iBACA,gCAGA,6BACE,8BACE,iCAAsB,wCAAS,EAAAgf,cAC7B,4BACE,8BACF,iBACF,iBACA,iCAAsB,wCAAS,EAAA2P,YAC7B,4BACE,8BACF,iBACF,iBACF,iBACF,iBACF,iBACF,iBACF,kB,MAlDS,oDAKA,oDA0BE,qEAU8E,0D,+JDhDzF,GAMa,EAAA3uB,4B,mHETb,WACA,OAOA,SAMA,GAJA,OAEA,MAEA,Q,gGCbE,6BACE,6BACF,kB,sBAwBwB,2BAA4F,6BAA8E,kB,sBAY9J,2BACE,6BACF,kB,mDATN,4BACE,4BACE,yBAAI,sCAA0D,iBAE9D,+BAA4E,2FAAuB,8EAAnG,iBAEA,6BACE,6BAGF,iBACF,iBACF,iB,8DAV2B,4CAEiB,uDAAmC,kBAAnC,CAAmC,uCAGtE,0E,sBAcH,2BACE,6BACF,kB,mDASA,+BAAuF,6GAAgC,kFAAvH,iB,wDAA+D,kCAAuB,sB,sBACtF,2BAAiF,6BAAgF,kB,mDAG/J,2BAA+C,8LAAuF,6BAAmE,kB,mDACzM,2BAA+C,8LAAuF,6BAAsE,kB,sBAI5M,2BACE,6BACF,kB,yBASN,2BACE,YACF,kB,uBADE,gD,yBALJ,yBAIE,6BAGF,kB,uCAHK,0D,+FAvDX,4BACE,yBACE,4BACE,8BAaA,4BACE,yBACE,yBACE,6BACF,iBACA,+BAA6C,+FAAkC,kF,mBAA/E,iBAEA,8BACE,8BAGF,iBACF,iBACA,0BACE,8BACE,0BACE,8BACF,iBAEA,kCACA,8BAEA,4BACE,8BACA,8BACF,iBAEA,8BACE,8BAGF,iBACF,iBACF,iBACF,iBACA,+BAQF,iBACF,iBAEA,6BAAI,6G,wBACF,uBACF,iBACF,iB,yDAjEI,kCAAU,8CAGwB,4DAkB4E,6FAArF,oCAAyB,uBAGvC,iDAWI,6DACJ,6DAGE,6DACA,6DAIA,+CAOP,+CAWiE,0G,yBAjE7E,+BACE,6BAEA,gCAkEF,kB,8BApEqB,uGAEJ,gG,sBAsEf,2BAA4F,6BAA8E,kB,yBAU1J,gCAA0G,YAA+B,kB,uBAArD,6BAAsB,4D,mDAHhH,0BACE,gCAAwG,2GACpG,2BACA,kCACJ,iBACF,iB,6EAJU,yEAA4B,wDAA+C,mBAEvE,iG,mDAGd,0BACE,+BAAiE,2GAA8B,8FAA/F,iBACF,iB,wDAD0C,kDAAwB,oB,mDAGlE,0BACE,+BAAkH,kJ,mBAAlH,iBACF,iB,wDAD0C,kDAAwB,oD,mDAGlE,0BACE,+BAAkE,2GAA8B,8FAAhG,iBACF,iB,wDAD4C,iDAAuB,oB,mDAGnE,0BACI,+BACE,+BAAoG,2GAApG,iBACA,2BAAM,6BAA8D,iBACtE,iBACA,+BACE,+BAAsG,2GAAtG,iBACA,2BAAM,6BAA+D,iBACvE,iBACJ,iB,wDAPyI,+DAAoB,kDAAxG,qCAAqC,WAArC,CAAqC,mBAIiD,gEAAqB,mDAA3G,qCAAsC,WAAtC,CAAsC,oB,mDAmBzF,+BAAuF,6GAAgC,kFAAvH,iB,wDAA+D,kCAAuB,sB,sBACtF,2BAAiF,6BAAgF,kB,mDAG/J,2BAA+C,8LAAuF,6BAAmE,kB,mDACzM,2BAA+C,8LAAuF,6BAAsE,kB,sBAI5M,2BACE,6BACF,kB,yBASN,2BACE,YACF,kB,uBADE,gD,yBALJ,yBAIE,6BAGF,kB,uCAHK,0D,mDApEX,4BACE,yBACE,4BACE,4BACE,4BACE,+BAMA,+BAIA,+BAIA,+BAIA,gCAUF,iBACF,iBACA,6BACE,0BACE,0BACE,8BACF,iBACA,gCAAkE,+FAAkC,kF,oBAApG,iBACF,iBACA,0BACE,8BACE,0BACE,8BACF,iBAEA,kCACA,8BAEA,4BACE,8BACA,8BACF,iBAEA,8BACE,8BAGF,iBACF,iBACF,iBACF,iBACA,+BAQF,iBACF,iBACA,6BAAgJ,6G,wBAC9I,uBACF,iBACF,iB,yDA7EI,kCAAU,8CAKC,8DAMA,mEAIA,8DAIA,6FAIA,iEAiBwH,8FAArF,oCAAyB,uBAQxD,6DACJ,6DAGE,6DACA,6DAIA,+CAOP,+CAUoE,0G,yBA7EhF,+BACE,6BAEA,gCA8EF,kB,8BAhFqB,uGAEJ,gG,yBA/ErB,0BAEE,+BAEE,iCAwEA,iCAmFF,iBACF,kB,8BA5J6C,+DAwEA,gE,sBAwF3C,2BAAwF,6BAA8E,kB,mDAY9J,gCAAsD,+HACpD,6BACF,kB,mDACA,iDACI,iJAEJ,iB,+DAHyE,0DAAgD,2DAAhD,CAAgD,uBAAhD,CAAgD,+CAAhD,CAAgD,gCAAhD,CAAgD,yB,sBAQzH,2BAAwE,6BAAgF,kB,mDACxJ,+BAAuF,6GAAgC,kFAAvH,iB,6EAA+D,kCAAuB,oBAAvB,CAAuB,wB,sBAGpF,2BACE,6BACF,kB,0IAnBN,4BACE,4BACE,kCAGA,gDAIF,iBACA,4BAAoC,+BAA0C,+FAAkC,kFAA5E,iBAAoI,iBACxK,4BAEE,6BACA,iCAEA,6BACE,8BAGF,iBAEF,iBACA,6BAAoC,4BAA+F,6HAA0C,iBAAI,iBACnL,iB,yDAxBI,kCAAU,0DAEF,yDAGc,0DAK+B,kEAAuB,oCAAkC,uBAG3G,6DACI,6DAGF,+CAM+D,wF,0BAnC9E,0BAEE,6BAEA,+BACE,+BACE,4BAAwB,6BAAiF,iBACzG,4BAAwB,6BAAqF,iBAC7G,4BAAwB,6BAAmF,iBAC3G,6BAAwB,8BAAmF,iBAC7G,iBACA,gCACE,kCAyBF,iBACF,iBACF,kB,8BArCqB,8FAU+C,wF,oDA+BtE,4BACE,2BAAgC,mGAC9B,6BACF,iBACF,kB,0BA1NR,6BACE,yBAAI,YAAkC,iBAEtC,0BACE,0BACE,4BAEE,4BAEE,+BAkKA,iCAyCF,iBAEA,+BAKF,iBACF,iBACF,iBACF,kB,6BA7NM,qEAQS,kEAkKA,kEA2CH,iD,oDAoBV,gCAAwC,2FACtC,6BACF,iB,mDAFmG,kDDtO/G,kBA8DC,WAAoB0c,EAAkCE,EAAsC4S,GAAxE,KAAA9S,UAAkC,KAAAE,WAAsC,KAAA4S,oBArC5F,KAAA9Y,QAAkB,KAElB,KAAAmG,YAAqB,IAAIC,KAEhB,KAAAC,UAAoB,EAKnB,KAAA2B,SAAW,IAAI,EAAArZ,aAchB,KAAA8c,gBAA0B,EAMnC,KAAAsN,iBAA2B,EAE3B,KAAAC,kBAA4B,EAE5B,KAAAC,aAAuB,E,OAfvB,sBAAa,qCAAsB,C,IAAnC,SAAoCzT,GACnCtU,KAAKgoB,0BAA4BxV,KAAKyG,MAAMzG,KAAKC,UAAU6B,IAC3DtU,KAAKsa,kBAAoBhG,G,gCAmB1B,YAAArU,SAAA,aAGA,YAAAyK,gBAAA,sBAC6B,aAAxB1K,KAAKgU,UAAU1X,MAAgG,IAAzE0D,KAAKsa,kBAAkB7J,WAAWzQ,KAAKgU,UAAU1X,MAAMud,OAAO5Y,QAEvGgQ,YAAW,WACV,EAAK4W,gBAAkB,IACrB,IAIL,YAAAI,eAAA,SAAeC,EAAYpjB,GAC1BojB,EAAW5T,MAAQxP,GAGpB,YAAAqjB,aAAA,WACCnoB,KAAK+nB,aAAc,EAMnB,IAJA,IAAIK,EAAcpoB,KAAKsa,kBAAkB7J,WAAWzQ,KAAKgU,UAAU1X,MAAMud,OAIhEwO,EAAI,EAAGA,EAAID,EAAYnnB,OAAQonB,IAAK,CAC5C,IAAMC,EAAKF,EAAYC,GAIvB,GAHAC,EAAGC,UAAW,EACdD,EAAGE,gBAAkB,GAEC,MAAhBF,EAAG5O,WAAsC,KAAjB4O,EAAG5O,WAAqC,MAAd4O,EAAG3O,SAAkC,KAAf2O,EAAG3O,QAAiB,CACjG,IAAI8O,EAAU,IAAIvT,KAAKoT,EAAG5O,WACtBgP,EAAU,IAAIxT,KAAKoT,EAAG3O,SAEtB,UAAMgD,mBAAmB8L,EAAIC,KAChCJ,EAAGC,UAAW,EACdD,EAAGE,gBAAgBzkB,KAAK/D,KAAKgV,SAASlU,OAAO,oDAC7Cd,KAAK+nB,aAAc,GAGpB,IAAK,IAAIxkB,EAAI,EAAGA,EAAI6kB,EAAYnnB,OAAQsC,IAEvC,GAAI8kB,IAAM9kB,EAAG,CACZ,IAAMolB,EAAKP,EAAY7kB,GACvB,GAAsB,MAAhBolB,EAAGjP,WAAsC,KAAjBiP,EAAGjP,WAAqC,MAAdiP,EAAGhP,SAAkC,KAAfgP,EAAGhP,QAAiB,CACjG,IAAIiP,EAAU,IAAI1T,KAAKyT,EAAGjP,WACtBmP,EAAU,IAAI3T,KAAKyT,EAAGhP,SAGtB,UAAM2C,kBAAkBmM,EAAGhP,UAAWiP,EAAGjP,UAAWmP,EAAGnP,UAAWoP,EAAGpP,aACxE6O,EAAGC,UAAW,EACdD,EAAGE,gBAAgBzkB,KAAK/D,KAAKgV,SAASlU,OAAO,oCAE7Cd,KAAK+nB,aAAc,MASzB/nB,KAAKgM,KAAKoc,IAGX,YAAAU,gBAAA,WACC,IAAIC,EAA0B/oB,KAAKsa,kBAAkB7J,WAAWzQ,KAAKgU,UAAU1X,MAAMud,OAEjFC,EAAqB,IAAI,EAAAkP,cAI7B,GAHAlP,EAAIJ,UAAY,KAChBI,EAAIH,QAAU,KAEc,UAAxB3Z,KAAKgU,UAAUjI,KAElB+N,EAAIxF,MAAQtU,KAAKgV,SAASY,cAEtB,GAA4B,aAAxB5V,KAAKgU,UAAUjI,KAEnBgd,EAAO9nB,OAAS,GACU,GAAzBjB,KAAK6nB,iBAAiD,MAAxB7nB,KAAK6nB,gBACtC/N,EAAIxF,MAAQyU,EAAO/oB,KAAK6nB,iBAAiBvT,MAGzCwF,EAAIxF,MAAQyU,EAAO,GAAGzU,OAIvBwF,EAAIxF,MAAQ,CAAE,KAAQtU,KAAK6D,cAAcolB,aAAc,YAAe,IAE9B,iBAApCjpB,KAAK6D,cAAcolB,aACtBnP,EAAIxF,MAAMvI,KAAO,eAE2B,YAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,UAE2B,UAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,QAE2B,eAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,aAE2B,SAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,OAE2B,cAApC/L,KAAK6D,cAAcolB,eAC3BnP,EAAIxF,MAAMvI,KAAO,mBAIf,GAA4B,SAAxB/L,KAAKgU,UAAUjI,KAAiB,CACxC,IAAImd,EAAQlpB,KAAKgb,qCAAqChb,KAAKgU,UAAU1X,MAEjE4sB,EAAMjoB,OAAS,IAClB6Y,EAAIxF,MAAQ4U,EAAM,GAAG5sB,MAIvBysB,EAAOhlB,KAAK+V,GAEgB,aAAxB9Z,KAAKgU,UAAU1X,OAClB0D,KAAK6nB,gBAAkBkB,EAAO9nB,OAAS,GAGxCjB,KAAK4nB,kBAAkBjU,iBAGxB,YAAAwV,aAAA,SAAajf,GACZlK,KAAK6nB,gBAAkB3d,GAGxB,YAAAkf,eAAA,SAAepV,GACd,IAAIqV,EAA4B,GAOhC,OALArpB,KAAKsa,kBAAkB7J,WAAWuD,EAAU1X,MAAMud,OAAOxY,SAAQ,SAAA6mB,GAChEA,EAAW5T,MAAMD,aAAahT,SAAQ,SAAAioB,GACrCD,EAAStlB,KAAKulB,SAGTD,GAGR,YAAAE,oBAAA,SAAoBC,GACnB,IAAIC,EAAS,KASb,OAPAD,EAAOnV,aAAahT,SAAQ,SAAAqoB,GACL,kBAAlBA,EAAOF,SACVC,EAASC,EAAOpV,UAKXmV,GAGR,YAAAE,iBAAA,SAAiB7P,EAAoBwP,GACpCxP,EAAIxF,MAAQ,IAAIY,KAAKoU,GAAK7P,UAAU/E,YAGrC,YAAAsG,qCAAA,SAAqCC,GACpC,IAAK,IAAI1X,EAAI,EAAGA,EAAIvD,KAAK6D,cAAc4M,WAAWxP,OAAQsC,IAAK,CAC9D,IAAI1B,EAAY7B,KAAK6D,cAAc4M,WAAWlN,GAE9C,GAAkB,SAAd1B,EAAKkK,MAAmBlK,EAAKvF,OAAS2e,EAAmB,CAG5D,IAAIC,GADJrZ,EAAsBA,GACFsZ,SAASzU,SAG7B,GAAIwU,EAASja,OAAS,EACrB,MAAkB,WAAdY,EAAKvF,KACD,UAAM8e,eAAeF,GAGrBA,GAMX,OAAO,MAGR,YAAA9Z,OAAA,SAAOwoB,GAKN,IAHA,IAAIN,EAAMtpB,KAAKsa,kBAAkB7J,WAAWzQ,KAAKgU,UAAU1X,MAEvDqU,GAAY,EACPpN,EAAI,EAAGA,EAAI+lB,EAAIzP,OAAO5Y,OAAQsC,IAAK,CAChC+lB,EAAIzP,OAAOtW,GAGbmW,YAAckQ,EAAQlQ,YAC9B/I,EAAWpN,GAIVoN,GAAY,GACd2Y,EAAIzP,OAAOnS,OAAOiJ,EAAU,IAI9B,YAAAiJ,iBAAA,SAAiB/X,GAAjB,WACK+X,GAAmB,EAQvB,OANA5Z,KAAK6D,cAAc4M,WAAWpP,SAAQ,SAAA2S,GACjC,EAAKA,UAAU1X,OAASuF,EAAKvF,OAChCsd,EAAmB/X,EAAK+X,qBAInBA,GAGR,YAAAiQ,YAAA,SAAY3B,EAAYzX,GAEpByX,EAAWvO,UAAY,EAAAmQ,QACzB5B,EAAWvO,QAAU,IAAIzE,KAGzBgT,EAAWvO,QAAU,EAAAmQ,QAGtB9pB,KAAKmoB,eAELnoB,KAAKgM,KAAKyE,IAGX,YAAAzE,KAAA,SAAK+c,GAGJA,EAAO/c,MAAK,SAASC,EAAGC,GAEvB,OAAmB,MAAfD,EAAEyN,WAAqC,KAAhBzN,EAAEyN,UACrB,EAEgB,MAAfxN,EAAEwN,WAAqC,KAAhBxN,EAAEwN,WACzB,EAGQ,IAAIxE,KAAKjJ,EAAEyN,WACZ,IAAIxE,KAAKhJ,EAAEwN,eAK7B,YAAAzC,SAAA,WAEC1C,QAAQC,IAAI,oBAAqBxU,KAAKsa,mBAEtCta,KAAK8W,SAASgC,KAAK9Y,KAAKsa,oBAGzB,YAAAlD,SAAA,WACCpX,KAAK8W,SAASgC,KAAK9Y,KAAKgoB,4B,iCAnSb7uB,GAAuB,6H,iCAAvBA,EAAuB,2E,u+ICzCpC,0BACE,8BAKA,+BAEE,+BACE,4BAGE,4BACE,gCA+NF,iBAEF,iBAEA,4BAEE,4BACE,6BACE,gCAAsB,wCAAS,EAAAie,cAC7B,8BACF,iBACA,oCAGF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,MA/PO,uDAY0C,wDA0O7B,kD,qbDjOP,CACX,CACC,EAAAxC,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAlS,MAAM,CACLiZ,QAAS,IAEV,EAAA1H,QAAQ,WAET,EAAAW,WAAW,SACV,EAAAX,QAAQ,QACP,EAAAvR,MAAM,CACLiZ,QAAS,a,EAjBhB,GAwBa,EAAAziB,4B,uHEzCb,WAKA,GAFA,OAEA,QACA,S,oFAKA,aA8DC,WAAoBmF,EAA0CyrB,GAA1C,KAAAzrB,kBAA0C,KAAAyrB,aA1CpD,KAAA9B,eAAiB,IAAI,EAAAxqB,aA2BtB,KAAA0R,UAAoB,EAKnB,KAAA6a,YAAc,IAAI,EAAAvsB,a,OAc5B,YAAAwC,SAAA,aAIA,YAAAyK,gBAAA,sBACCuG,YAAW,WAEV,EAAKgZ,OAAO5pB,cAAcrE,GAAKkuB,KAAKC,MAAsB,OAAhBD,KAAKE,UAAuB,IAEtE,EAAKvuB,IAAM,IAAI,EAAAwuB,IAAI,CAClBC,UAAW,EAAKL,OAAO5pB,cAAcrE,GACrC2G,MAAO,sCACP4nB,KAAM,EACNC,OAAQ,CAAC,WAAY,aAGtB,EAAK3uB,IAAIwM,GAAG,QAAQ,WACnB,EAAKoiB,aAGN,EAAK5uB,IAAIwM,GAAG,eAAe,WAC1B,EAAKqiB,mBAEN,EAAK7uB,IAAIwM,GAAG,eAAe,WAC1B,EAAKqiB,mBAEN,EAAK7uB,IAAIwM,GAAG,eAAe,WAC1B,EAAKqiB,qBAGJ,IAGJ,YAAA9W,YAAA,SAAYmF,IACPA,EAAqB,aAAKA,EAAsB,eACnD/Y,KAAKqZ,UAIA,YAAAA,OAAP,WACiB,MAAZrZ,KAAKnE,MACRmE,KAAK2qB,eACL3qB,KAAK4qB,cAIP,YAAA/W,YAAA,WACC7T,KAAKnE,IAAIuF,UAGV,YAAAsa,WAAA,WACC,IAAK1b,KAAKmP,SAAU,CACnB,IAAIiF,GAAmB,EAEvB,GAA2B,MAAvBpU,KAAK6qB,eACqB7qB,KAAK6qB,eAAeC,SAE3BC,SAAS9pB,OAAS,IACvCmT,GAAU,GAIZ,OAAOA,EAGR,OAAO,GAGA,YAAAsW,cAAR,WACC1qB,KAAKioB,eAAenP,KAAK9Y,KAAKgrB,aAG/B,YAAAP,QAAA,sBAECzqB,KAAKnE,IAAIwM,GAAG,cAAc,WACzB,EAAKuiB,YACL,EAAKF,mBAIN1qB,KAAK4qB,YAEmB,MAApB5qB,KAAKirB,aAA4C,KAArBjrB,KAAKirB,aACpCjrB,KAAKkrB,aAINlrB,KAAKnE,IAAIsvB,WAAW,IAAI,EAAAC,mBAEnBprB,KAAKmP,SAITnP,KAAKqrB,gBAHLrrB,KAAKsrB,gBAMNtrB,KAAK0qB,iBAGN,YAAAW,cAAA,sBACCrrB,KAAKurB,kBAAkBzO,YAAYlc,WAAU,SAAA6Z,GAC5C,EAAKuP,YAAYlR,UAGlB9Y,KAAKnE,IAAIsvB,WAAWnrB,KAAKurB,oBAG1B,YAAAD,cAAA,WAC2B,iBAAtBtrB,KAAKipB,cAAyD,YAAtBjpB,KAAKipB,aAChDjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACTtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIQ,UAAtB7rB,KAAKipB,cAAkD,eAAtBjpB,KAAKipB,aAC9CjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACTtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIQ,SAAtB7rB,KAAKipB,cAAiD,cAAtBjpB,KAAKipB,eAC7CjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACTtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,MAIvB7rB,KAAKnE,IAAIsvB,WAAWnrB,KAAK6qB,gBAEA,MAArB7qB,KAAK8rB,cACR9rB,KAAK6qB,eAAekB,IAAI/rB,KAAK8rB,eAI/B,YAAAE,aAAA,SAAaC,GACZ,IAAIC,EAAqBD,EAAS,aAER,iBAAtBjsB,KAAKipB,cAAyD,YAAtBjpB,KAAKipB,aAChDjpB,KAAKnE,IAAIswB,YAAYD,EAAa,YAEJ,UAAtBlsB,KAAKipB,cAAkD,eAAtBjpB,KAAKipB,aAC9CjpB,KAAKnE,IAAIswB,YAAYD,EAAa,UAEJ,SAAtBlsB,KAAKipB,cAAiD,cAAtBjpB,KAAKipB,cAC7CjpB,KAAKnE,IAAIswB,YAAYD,EAAa,SAGnClsB,KAAKnE,IAAImwB,aAAaE,IAGvB,YAAAvB,aAAA,WACK3qB,KAAKnE,IAAIuwB,UAAU,kBACtBpsB,KAAKgsB,aAAa,OAEfhsB,KAAKnE,IAAIuwB,UAAU,mBACtBpsB,KAAKgsB,aAAa,SAIpB,YAAApB,UAAA,WACyB,MAApB5qB,KAAKirB,aAA4C,KAArBjrB,KAAKirB,aACpCjrB,KAAKqsB,sBAAsBrsB,KAAKirB,YAAa,MAAO,WAEjDjrB,KAAKmP,UAAiC,MAArBnP,KAAK8rB,cAA8C,KAAtB9rB,KAAK8rB,cACtD9rB,KAAKqsB,sBAAsBrsB,KAAK8rB,aAAc,OAAQ,YAIxD,YAAAO,sBAAA,SAAsB7T,EAAeyT,EAAgBK,GACpD,IAAIJ,EAAqBD,EAAS,aAElC1X,QAAQC,IAAI,QAEZxU,KAAKnE,IAAI0wB,UAAUL,EAAY,CAC9BngB,KAAM,UACNnI,KAAM,CACL,KAAQ,oBACR,SAAY,MAIY,iBAAtB5D,KAAKipB,cAAyD,YAAtBjpB,KAAKipB,aAEhDjpB,KAAKnE,IAAI2wB,SAAS,CACjB,GAAMN,EAAa,WACnB,KAAQ,OACR,OAAUA,EACV,MAAS,CACR,aAAcI,EACd,qBAAsB,QACtB,eAAgB,MAIY,UAAtBtsB,KAAKipB,cAAkD,eAAtBjpB,KAAKipB,aAE9CjpB,KAAKnE,IAAI2wB,SAAS,CACjB,GAAMN,EAAa,SACnB,KAAQ,SACR,OAAUA,EACV,MAAS,CACR,gBAAiB,EACjB,eAAgBI,EAChB,sBAAuB,EACvB,sBAAuB,aAIK,SAAtBtsB,KAAKipB,cAAiD,cAAtBjpB,KAAKipB,cAC7CjpB,KAAKnE,IAAI2wB,SAAS,CACjB,GAAMN,EAAa,QACnB,OAAUA,EACV,KAAQ,OACR,OAAU,CACT,YAAa,QACb,WAAY,SAEb,MAAS,CACR,aAAcI,EACd,aAAc,KAKXtsB,KAAKnE,IAAIuwB,UAAUF,GAAaO,QAAQjU,IAG/C,YAAA0S,WAAA,sBACsB,MAAjBlrB,KAAK0sB,UAAqC,MAAjB1sB,KAAK2sB,WACZ,MAAjB3sB,KAAK4sB,SACR5sB,KAAK1B,gBAAgB6jB,mBAAmBniB,KAAK0sB,SAAU1sB,KAAK2sB,UAAU1iB,MAAK,SAAA4iB,GAC1E,IAAIC,EAAS,IAAI,EAAAC,aAAa,CAACF,EAAS,GAAIA,EAAS,IAAK,CAACA,EAAS,GAAIA,EAAS,KAEjF,EAAKhxB,IAAImxB,UAAUF,EAAQ,CAAEG,QAAS,QACpC5iB,OAAM,SAACC,GACT,EAAKC,MAAMD,MAIZtK,KAAK1B,gBAAgB8jB,yBAAyBpiB,KAAK0sB,SAAU1sB,KAAK2sB,SAAU3sB,KAAK4sB,UAAU3iB,MAAK,SAAA4iB,GAC/F,IAAIC,EAAS,IAAI,EAAAC,aAAa,CAACF,EAAS,GAAIA,EAAS,IAAK,CAACA,EAAS,GAAIA,EAAS,KAEjF,EAAKhxB,IAAImxB,UAAUF,EAAQ,CAAEG,QAAS,QACpC5iB,OAAM,SAACC,GACT,EAAKC,MAAMD,QAMf,YAAA0gB,SAAA,WACC,GAA2B,MAAvBhrB,KAAK6qB,eAAwB,CAChC,IAAIqC,EAAyBltB,KAAK6qB,eAAeC,SAEjD,GAAIoC,EAAkBnC,SAAS9pB,OAAS,EAAG,CAK1C,GAA0B,iBAAtBjB,KAAKipB,aAAiC,CAGzC,IAFA,IAAIkE,EAAW,GAEN5pB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAG3D,GAA8B,kBAF1B6pB,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACpB,IAAK,IAAIsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACxD8E,EAASppB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAI5C8E,EAASppB,KAAKqpB,EAAQ5U,SAAS6U,aAIjC,MAAO,CACNA,YAAaF,EACbphB,KAAM,gBAGH,GAA0B,eAAtB/L,KAAKipB,aAA+B,CAC5C,IAAIqE,EAAS,GAEb,IAAS/pB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAG3D,GAA8B,gBAF1B6pB,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACpB,IAASsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACxDiF,EAAOvpB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAI1CiF,EAAOvpB,KAAKqpB,EAAQ5U,SAAS6U,aAI/B,MAAO,CACNA,YAAaC,EACbvhB,KAAM,cAGH,GAA0B,cAAtB/L,KAAKipB,aAA8B,CAC3C,IAAIsE,EAAQ,GAEZ,IAAShqB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAC3D,IAAI6pB,EAEJ,GAA8B,qBAF1BA,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACpB,IAASsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACxDkF,EAAMxpB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAIzCkF,EAAMxpB,KAAKqpB,EAAQ5U,SAAS6U,aAI9B,MAAO,CACNA,YAAaE,EACbxhB,KAAM,mBAIP,OAAOmhB,EAAkBnC,SAAS,GAAGvS,SAIvC,OAAOxY,KAAK8rB,aAGb,OAAO9rB,KAAK8rB,cAGN,YAAAvhB,MAAP,SAAaD,GAEZiK,QAAQC,IAAI,QAASlK,I,iCAxZV9Q,GAA2B,2E,iCAA3BA,EAA2B,+E,OAAA,M,mmBCrBxC,yBAEA,0C,MAAqB,qD,iDDSrB,GAUa,EAAAA,+B,8HErBb,KACA,MADA,IAEA,Q,0FCKI,+CAA0E,2GAAyC,iB,gCAAjE,uCDDtD,iBAaC,WAAmB0U,GAAA,KAAAA,aAFnB,KAAAzK,UAA+B,K,OAI/B,YAAAxD,SAAA,WACCD,KAAKwtB,gBAAkB,IAAI,EAAA7b,SAG5B,YAAAxG,KAAA,SAAK1H,GACJzD,KAAKyD,UAAYA,GAIlB,YAAAgqB,oBAAA,SAAoBhqB,GACF,MAAbA,GACHzD,KAAKwtB,gBAAgBpgB,KAAK3J,GAG3BzD,KAAKkO,WAAWiJ,Q,iCAxBLrd,GAAkC,oC,iCAAlCA,EAAkC,yPCX/C,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,iDACJ,kB,MAD4B,wD,4FDD5B,GAKa,EAAAA,sC,yHEXb,WACA,OAOA,QAGA,SAKA,GAHA,OACA,MAEA,MACA,S,0FCfM,yBAAI,YAAkC,kB,kBAAlC,gE,sBAGN,6BAAsE,6BAAuE,kB,sBAavG,2BACE,6BACF,kB,iGAOW,6BACE,YACA,6BACG,+BAGE,4IAA2C,qKAA3C,CAA2C,6HAH7C,iBAcE,8BAAsD,+IACpD,sBACF,iBACJ,iBACH,iB,wHApBE,qDAGK,iDAA4B,+CAA5B,CAA4B,iCAA5B,CAA4B,oBAA5B,CAA4B,wDAA5B,CAA4B,oDAA5B,CAA4B,0BAA5B,CAA4B,0BAA5B,CAA4B,uBAA5B,CAA4B,wB,mDAiClC,+BAAkF,6GAA2B,kFAA7G,iB,wDAA0D,kCAAuB,sB,sBACjF,2BAA4E,6BAAgF,kB,mDAG1J,2BAA0C,0JAAgD,6BAAmE,kB,mDAC7J,2BAA0C,0JAAgD,6BAAsE,kB,sBAIhK,2BACE,6BACF,kB,yBASJ,2BACE,YACF,kB,uBADE,gD,yBALN,yBAII,6BAGJ,kB,uCAHO,0D,+FA9Db,4BACE,yBACE,4BACE,4BACE,4BACG,gCAsBH,iBACF,iBACA,4BACE,yBACE,yBACE,6BACF,iBACA,gCAAkE,+FAA6B,kF,oBAA/F,iBACF,iBACA,0BACE,8BACE,0BACE,8BACF,iBAEA,kCACA,8BAEA,4BACE,8BACA,8BACF,iBAEA,8BACE,8BAGF,iBACF,iBACF,iBACF,iBACA,+BAQF,iBACF,iBACA,6BAAgJ,6G,wBAC9I,uBACF,iBACF,iB,yDAvEI,kCAAU,8CAKiC,yDA6BmF,8FAAhF,oCAAyB,uBAQxD,6DACJ,6DAGE,6DACA,6DAIA,+CAOP,+CAUoE,0G,mDA9E5F,4BACI,4BACI,+BAEI,+BAEE,6BAIA,gCAwEF,iBACJ,iBACJ,iBAEA,4BACE,2BAAgC,kGAA4B,6BAAoE,iBAClI,iBACJ,iB,gCAnFiC,mEAIJ,4DDHzD,iBAqCC,WAAoBgb,EAAkCzW,GAAlC,KAAAyW,UAAkC,KAAAzW,kBAXtD,KAAA4W,YAAoB,IAAIC,KAGf,KAAAzR,UAA+B,KAE9B,KAAAqT,SAAW,IAAI,EAAArZ,aAEzB,KAAAqqB,kBAA4B,EAE5B,KAAA4F,QAAe,G,OAIf,YAAAztB,SAAA,sBAECD,KAAK2tB,kBAAoBnb,KAAKyG,MAAMzG,KAAKC,UAAUzS,KAAKyD,YAExDzD,KAAKyD,UAAUmqB,QAAQvsB,SAAQ,SAAAwsB,GAC9B,IAAK,IAAItqB,EAAI,EAAGA,EAAI,EAAKE,UAAU+H,MAAMvK,OAAQsC,IAAK,CACrD,IAAIuqB,EAAU,EAAKrqB,UAAU+H,MAAMjI,GAEA,MAA/BsqB,EAAME,QAAQD,EAAQxxB,QACzBuxB,EAAME,QAAQD,EAAQxxB,MAAQ,CAAE2K,KAAM,GAAIyd,UAAW,OAGtDmJ,EAAMH,QAAU,QAKnB,YAAA5E,gBAAA,WAIC,IAFA,IAAIiF,EAAU,GAELxqB,EAAI,EAAGA,EAAIvD,KAAKyD,UAAU+H,MAAMvK,OAAQsC,IAAK,CAGrDwqB,EAFc/tB,KAAKyD,UAAU+H,MAAMjI,GAEnBjH,MAAQ,GAGzB,IAAMuxB,EAAQ,CACbnU,UAAW,KACXC,QAAS,KACToU,QAASA,EACTL,QAAS,IAGV1tB,KAAKyD,UAAUmqB,QAAQ7pB,KAAK8pB,IAG7B,YAAAzsB,OAAA,SAAOysB,GAEN,IAAK,IAAItqB,EAAI,EAAGA,EAAIvD,KAAKyD,UAAUmqB,QAAQ3sB,OAAQsC,IAAK,CAC5CvD,KAAKyD,UAAUmqB,QAAQrqB,GAEzBmW,YAAcmU,EAAMnU,WAC5B1Z,KAAKyD,UAAUmqB,QAAQlmB,OAAOnE,EAAG,GAInCvD,KAAKmoB,gBAGN,YAAA6F,uBAAA,SAAuB9T,EAAcnO,EAAW8hB,EAAY3jB,GAA5D,WAEK+C,EAAoBlB,EAAKzP,KAEzB2xB,EAAa,KACb5M,EAAiB,KACjBxX,EAAgB,KAEpB,GAAIK,EAAQ,EAAG,CACd,IAAIgkB,EAAQluB,KAAKyD,UAAU+H,MAAMtB,EAAQ,GACnC,EAAS2jB,EAAME,QAAQG,EAAM5xB,MAEX,MAApB,EAAOooB,WAAyD,MAApC,EAAOA,UAAUyJ,WAAW7xB,OAC3DuN,EAAgB7J,KAAKyD,UAAUnH,KAC/B2xB,EAAa,EAAOvJ,UAAUyJ,WAAW7xB,KACzC+kB,EAAiB,EAAOqD,UAAUyJ,WAAWpiB,MAI/C,OAAO,EAAAqiB,WAAWxY,QAAO,SAACyY,GACxB,GAAkB,MAAdJ,EAIF,IAFA,IAAIK,EAAQpkB,EAES,MAAd+jB,GAAsBK,EAAQ,GACrC,CACEA,GAAgB,EAEhB,IAAI,EAAST,EAAME,QAAQ,EAAKtqB,UAAU+H,MAAM8iB,GAAOhyB,MAEzC,MAAV,IAEsB,MAApB,EAAOooB,WAAyD,MAApC,EAAOA,UAAUyJ,WAAW7xB,MAExD2xB,EAAa,EAAOvJ,UAAUyJ,WAAW7xB,KACzCuN,EAAgB,EAAKpG,UAAUnH,KAC/B+kB,EAAiB,EAAK5d,UAAU+H,MAAM8iB,GAAOhyB,MAErB,MAAjB,EAAOiyB,SAEdN,EAAa,EAAOM,OACpB1kB,EAAgB,EAAKpG,UAAUnH,KAC/B+kB,EAAiB,EAAK5d,UAAU+H,MAAM8iB,GAAOhyB,OAMxD,EAAKwY,QAAQqK,wBAAwB0O,EAAME,QAAQhiB,EAAKzP,MAAM2K,KAAMgG,EAAmBghB,EAAY5M,EAAgBxX,EAAeqQ,GAAMjQ,MAAK,SAAAukB,GAC5IH,EAASjhB,KAAKohB,UAKjB,YAAAC,kBAAA,SAAkBryB,EAAmB2P,EAAW8hB,EAAY3T,GAA5D,WAGG2T,EAAME,QAAQhiB,EAAKzP,MAAM2K,KAAO7K,EAAEoR,KAAKga,KAAO,MAAQprB,EAAEoR,KAAKlR,KAC7DuxB,EAAME,QAAQhiB,EAAKzP,MAAMiyB,OAASnyB,EAAEoR,KAAKlR,KAI3C,IAFA,IAAI2kB,EAAc,GAET1d,EAAI,EAAGA,EAAIvD,KAAKyD,UAAU+H,MAAMvK,OAAQsC,IAAK,CACrD,IAAIuqB,EAAU9tB,KAAKyD,UAAU+H,MAAMjI,GAInC,GAFA0d,EAAYld,KAAK+pB,EAAQxxB,MAErBwxB,EAAQxxB,OAASyP,EAAKzP,KACzB,MAIF0D,KAAK8U,QAAQgM,oBAAoB1kB,EAAEoR,KAAKkhB,IAAK3iB,EAAKzP,KAAM2kB,GAAa,EAAM/G,GAAMjQ,MAAK,SAAA0kB,UAE3Ed,EAAME,QAAQhiB,EAAKzP,MAAMiyB,OACnCV,EAAME,QAAQhiB,EAAKzP,MAAMooB,UAAYiK,EAAUjK,UAC/CmJ,EAAME,QAAQhiB,EAAKzP,MAAM2K,KAAO0nB,EAAUjK,UAAUyJ,WAAWxY,aAAaxJ,eAAiB,MAAQwiB,EAAUjK,UAAUyJ,WAAW7xB,KAEpI,IAAK,IAAIiH,EAAI,EAAGA,EAAI,EAAKE,UAAU+H,MAAMvK,OAAQsC,IAAK,CAIrD,IAHA,IAAIuqB,EAAU,EAAKrqB,UAAU+H,MAAMjI,GAC/BqrB,EAAWD,EAEI,MAAZC,GAAoBA,EAASlK,UAAUyJ,WAAWpiB,MAAQ+hB,EAAQxxB,MAEvEsyB,EADGA,EAASb,QAAQ9sB,OAAS,EAClB2tB,EAASb,QAAQ,GAGjB,KAIG,MAAZa,IACHf,EAAME,QAAQD,EAAQxxB,MAAMooB,UAAYkK,EAASlK,UACjDmJ,EAAME,QAAQD,EAAQxxB,MAAM2K,KAAO2nB,EAASlK,UAAUyJ,WAAWxY,aAAaxJ,eAAiB,MAAQyiB,EAASlK,UAAUyJ,WAAW7xB,WAOzI,YAAA6gB,SAAA,SAASpR,EAAW8hB,GACnBA,EAAME,QAAQhiB,EAAKzP,MAAM2K,KAAO,UACzB4mB,EAAME,QAAQhiB,EAAKzP,MAAMooB,iBACzBmJ,EAAME,QAAQhiB,EAAKzP,MAAMiyB,QAGjC,YAAApG,aAAA,WAGC,IAAK,IAAIE,EAAI,EAAGA,EAAIroB,KAAKyD,UAAUmqB,QAAQ3sB,OAAQonB,IAAK,CACvD,IAAMC,EAAKtoB,KAAKyD,UAAUmqB,QAAQvF,GAIlC,GAHAC,EAAGC,UAAW,EACdD,EAAGE,gBAAkB,GAEC,MAAhBF,EAAG5O,WAAsC,KAAjB4O,EAAG5O,WAAqC,MAAd4O,EAAG3O,SAAkC,KAAf2O,EAAG3O,QAAiB,CACjG,IAAI8O,EAAU,IAAIvT,KAAKoT,EAAG5O,WACtBgP,EAAU,IAAIxT,KAAKoT,EAAG3O,SAEtB,UAAMgD,mBAAmB8L,EAAIC,KAChCJ,EAAGC,UAAW,EACdD,EAAGE,gBAAgBzkB,KAAK/D,KAAK3B,gBAAgByC,OAAO,qDAGrD,IAAK,IAAIyC,EAAI,EAAGA,EAAIvD,KAAKyD,UAAUmqB,QAAQ3sB,OAAQsC,IAElD,GAAI8kB,IAAM9kB,EAAG,CACZ,IAAMolB,EAAK3oB,KAAKyD,UAAUmqB,QAAQrqB,GAClC,GAAsB,MAAhBolB,EAAGjP,WAAsC,KAAjBiP,EAAGjP,WAAqC,MAAdiP,EAAGhP,SAAkC,KAAfgP,EAAGhP,QAAiB,CACjG,IAAIiP,EAAU,IAAI1T,KAAKyT,EAAGjP,WACtBmP,EAAU,IAAI3T,KAAKyT,EAAGhP,SAGtB,UAAM2C,kBAAkBmM,EAAGhP,UAAWiP,EAAGjP,UAAWmP,EAAGnP,UAAWoP,EAAGpP,aACxE6O,EAAGC,UAAW,EACdD,EAAGE,gBAAgBzkB,KAAK/D,KAAK3B,gBAAgByC,OAAO,wCAQ1Dd,KAAKgM,KAAKhM,KAAKyD,YAGhB,YAAAsY,iBAAA,SAAiBC,GAChB,IAAMC,EAAMD,EAAQE,aAEpB,OAAOF,EAAQK,iBAAmB,KAAOL,EAAQI,cAAgB,GAAK,KAAOH,EAAM,GAAK,IAAM,IAAMA,GAGrG,YAAAlC,WAAA,SAAWG,GACV,IACI2U,EADaC,EAAOC,WAAW7U,GACX8U,eAAe,KACvC,OAAOF,IAASD,OAAOA,IAKxB,YAAAhF,YAAA,SAAY3B,EAAY+G,GAEpB/G,EAAWvO,UAAY,EAAAmQ,QACzB5B,EAAWvO,QAAU,IAAIzE,KAGzBgT,EAAWvO,QAAU,EAAAmQ,QAGtB9pB,KAAKmoB,gBAGN,YAAAnc,KAAA,SAAKijB,GAGJA,EAAkBrB,QAAQ5hB,MAAK,SAASC,EAAGC,GAE1C,OAAmB,MAAfD,EAAEyN,WAAqC,KAAhBzN,EAAEyN,UACrB,EAEgB,MAAfxN,EAAEwN,WAAqC,KAAhBxN,EAAEwN,WACzB,EAGQ,IAAIxE,KAAKjJ,EAAEyN,WACZ,IAAIxE,KAAKhJ,EAAEwN,eAK7B,YAAAzC,SAAA,WACCjX,KAAK8W,SAASgC,KAAK9Y,KAAKyD,YAGzB,YAAA2T,SAAA,WACCpX,KAAK8W,SAASgC,KAAK9Y,KAAK2tB,oB,iCAnQb5zB,GAA6B,oF,iCAA7BA,EAA6B,kF,2wFC3C1C,0BACI,oEAIA,8BAEA,+BACI,+BACI,4BACI,4BACI,4BACQ,8BA0FR,iBACJ,iBAEJ,iBAEA,6BAEI,6BACI,8BACI,iCAAsB,wCAAS,EAAAqd,cAC3B,8BACJ,iBACA,iCAAsB,wCAAS,EAAAH,cAC3B,8BACJ,iBACJ,iBACJ,iBACJ,iBAEJ,iBACJ,iBACJ,kB,4BAtHS,uDAO0C,sDAsGsD,wE,4RD1F5F,CACX,CACC,EAAArC,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAlS,MAAM,CACLiZ,QAAS,IAEV,EAAA1H,QAAQ,WAET,EAAAW,WAAW,SACV,EAAAX,QAAQ,QACP,EAAAvR,MAAM,CACLiZ,QAAS,a,EAjBhB,GAwBa,EAAA7hB,iC,2GE3Cb,W,GAGA,O,uDCMQ,4BACE,6BACF,kB,6BADa,6CAAe,sB,mDAO9B,+BAAsF,yFAAmB,4BAA6C,kBDZ5J,iBAgCC,aAtBS,KAAAoV,UAAoB,EAEpB,KAAAyI,QAAgB,KAEf,KAAAI,gBAAkB,IAAI,EAAAva,aAEhC,KAAAyxB,MAAe,GAEf,KAAA3vB,cAA+B,CAC7BC,MAAO,CACLC,MAAO,OAIX,KAAAJ,QAAwB,CACvBC,aAAc,OACd6vB,gBAAiB,WACjBC,QAAS,OACT7vB,cAAeS,KAAKT,e,OAQrB,YAAAU,SAAA,WACCD,KAAKkZ,aAGN,YAAAtF,YAAA,SAAYmF,GAEPA,EAAiB,SACpB/Y,KAAKkZ,aAIP,YAAAA,UAAA,sBACOM,EAAO,KAES,MAAhBxZ,KAAK4X,UAET4B,EAAOxZ,KAAK4X,QAAQ6B,WAGtB,IAAIyV,EAAQ,GACRpB,EAAU,KAEdvZ,QAAQC,IAAIxU,KAAKyD,WAEjBzD,KAAKyD,UAAUmqB,QAAQvsB,SAAQ,SAAAguB,GAC9B,IAAM3V,EAAYxE,KAAK+D,MAAMoW,EAAI3V,WAC3BC,EAAUzE,KAAK+D,MAAMoW,EAAI1V,UAEnB,MAARH,GAAgBA,GAAQE,GAAaF,GAAQG,IAChD,EAAKlW,UAAU+H,MAAMnK,SAAQ,SAAA0K,GAC5B,IAAIpM,EAAY,CACfrD,KAAMyP,EAAKzP,KACXsL,MAAOmE,EAAKnE,MACZlB,SAAU,GACV4oB,UAAU,GAGmB,MAA1BD,EAAItB,QAAQhiB,EAAKzP,QACpBqD,EAAK6nB,KAAO6H,EAAItB,QAAQhiB,EAAKzP,MAAM2K,KAEvB,MAARuS,IAEF7Z,EAAK6nB,KAAO7nB,EAAK6nB,KAAO,KAAO6H,EAAI3V,UAAY,OAAS2V,EAAI1V,QAAU,KAGxEha,EAAK+kB,UAAY2K,EAAItB,QAAQhiB,EAAKzP,MAAMooB,WAG1B,MAAXoJ,EACHoB,EAAMnrB,KAAKpE,IAGXmuB,EAAQpnB,SAAS3C,KAAKpE,GACtBmuB,EAAQwB,UAAW,GAGpBxB,EAAUnuB,KAIZmuB,EAAU,QAGX9tB,KAAKkvB,MAAQA,GAGd,YAAAK,OAAA,WACCvvB,KAAKgY,gBAAgBc,KAAK9Y,KAAKyD,Y,iCAjGpB5J,I,iCAAAA,EAAe,+iBCX5B,0BAEE,4BACE,4BACE,2BAAuB,YAAmB,iBAC5C,iBACA,4BAGI,8BAQF,iCAEF,iBACF,iBACF,kB,MAjB6B,sDAKhB,qDAQ6D,kD,wEDZ1E,GAMa,EAAAA,mB,wHEXb,KAEA,MAFA,IAIA,QAGA,S,GACA,MAEA,O,6JCAY,gCAA2D,YAA4B,kB,uBAA5C,0BAAgB,4D,qBAWvD,6B,qBACA,6B,mDAHJ,8BACA,kBAAE,2BAAG,qIACD,oCACA,oCACF,iBACF,iB,gCAHc,4DACA,4D,mDAId,0BACE,8DACiB,kGAAoC,kGAOrD,iBACH,iB,gCAPG,6DAAoC,8BAApC,CAAoC,gCAApC,CAAoC,uBAApC,CAAoC,cAApC,CAAoC,e,uFAU1C,6BACE,uBACA,2BAEE,gCAAoD,6BAA4E,iBAClI,iBACF,kB,6BAJK,+H,8CD5Bb,aA4CC,WAAoBsE,EAAsCG,EACjDkxB,EAAoDnxB,EAA8CE,GAD3G,WAAoB,KAAAJ,eAAsC,KAAAG,kBACjD,KAAAkxB,uBAAoD,KAAAnxB,kBAA8C,KAAAE,cA/B3G,KAAAI,eAAkC,GAElC,KAAA8wB,YAAsB,GAEtB,KAAAC,OAAiB,GAWjB,KAAAnY,aAAkC,KAKlC,KAAAC,cAAmC,KAEnC,KAAAmY,sBAAgC,EAEhC,KAAAvb,SAAmB,EAEnB,KAAAsZ,SAAmB,EAEnB,KAAAtV,2BAAuC,CAAC,MAAO,WAAY,OAAQ,iBAAkB,aAAc,UAKlGpY,KAAK4vB,WAAa,EAAAxB,WAAWxY,QAAO,SAACyY,GACpC,EAAK/vB,gBAAgBikB,iCAAiC,EAAKkN,YAAa,EAAK5rB,cAAcvH,MAAM2N,MAAK,SAAAukB,GACrGH,EAASjhB,KAAKohB,S,OAKjB,YAAAvuB,SAAA,sBACCD,KAAK1B,gBAAgBuiB,kBAAkB,GAAI,MAAM5W,MAAK,SAAAuB,GAGrD,IADA,IAAIgK,EAAa,GACRjS,EAAI,EAAGA,EAAIiI,EAAMvK,SAAUsC,EAAG,CACtC,IAAMwI,EAAOP,EAAMjI,GACbqH,EAAUmB,EAAKjJ,iBACf2S,EAAiC,MAAtB1J,EAAK3I,eAA+C,IAAtB2I,EAAK3I,cAAsB2I,EAAK3I,cAAgB2I,EAAKzP,KAEhG,EAAKiC,YAAYsxB,kBAAkBjlB,EAAS6K,IAC/CD,EAAWzR,KAAKyH,EAAMjI,IAGxB,EAAK5E,eAAiB6W,EAEtB,EAAK7W,eAAeqN,MAAK,SAACC,EAAGC,GAC5B,OAAID,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,eAAuB,EAChFH,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,cAAsB,EACjF,KAGb,IAAIX,EAAM,EAAKC,yBAAyB,QACpCD,GACH,EAAK9M,eAAe+I,OAAO+D,EAAK,MAK/BpB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAOL,YAAAogB,cAAR,SAAsBoF,GACI,MAArB9vB,KAAKuX,eAKkB,MAAvBvX,KAAKoZ,gBAA2BpZ,KAAKoZ,eAAesC,gBAK5B,MAAxB1b,KAAK+vB,iBAA4B/vB,KAAK+vB,gBAAgBrU,cAK1D1b,KAAKoU,SAAU,EAddpU,KAAKoU,SAAU,GAiBT,YAAA1I,yBAAR,SAAiCpP,GAChC,IAAK,IAAIiH,EAAI,EAAGA,EAAIvD,KAAKrB,eAAesC,OAAQsC,IAAK,CAEpD,GADUvD,KAAKrB,eAAe4E,GACtBjH,OAASA,EAChB,OAAOiH,EAIT,OAAO,MAGR,YAAAysB,uBAAA,SAAuB5zB,GACtB4D,KAAK0tB,QAAUtxB,GAGhB,YAAAqyB,kBAAA,SAAkBryB,GAAlB,WACC4D,KAAK1B,gBAAgBslB,qBAAqBxnB,EAAEoR,KAAKlR,KAAM0D,KAAK6D,cAAcvH,MAAM2N,MAAK,SAAAya,GACpF,EAAKnN,aAAemN,EACpB,EAAKlN,cAAgBhF,KAAKyG,MAAMzG,KAAKC,UAAU,EAAK8E,kBAElDlN,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA2lB,OAAA,sBAEKC,EAA8BlwB,KAAK+vB,gBAAgBpU,eAEnD3b,KAAKoZ,eAKT,IAAI+E,EAAU,CAAC,CACd,WAAc,mBACd,WAAc,eACd,kBAAoB,IAAIjJ,MAAOuE,UAC/B,UAAayW,EACb,iBAAoBlwB,KAAK0vB,SAG1B1vB,KAAKwvB,qBAAqBnR,oBAAoB7L,KAAKC,UAAU0L,IAC3DlU,MAAK,SAAAya,GACL,EAAKyL,SAEL,EAAKjiB,WAAa,EAAK/P,aAAagP,KAAK,EAAAijB,sBAAuB,CAAEhiB,UAAU,IAC5E,EAAKF,WAAWI,QAAQQ,QAAU,EAAKzQ,gBAAgByC,OAAO,qCAE5DuJ,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGbtK,KAAKoU,SAAU,GAGhB,YAAA+b,OAAA,WACCnwB,KAAKoU,SAAU,EACfpU,KAAKuX,aAAe,KACpBvX,KAAKwX,cAAgB,KACrBxX,KAAKyvB,YAAc,KACnBzvB,KAAK6D,cAAgB,KACrB7D,KAAK0vB,OAAS,MAGR,YAAAnlB,MAAP,SAAaD,GACZtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCA1KhD9E,GAA4B,yM,iCAA5BA,EAA4B,8D,OAAA,M,mnDClBzC,4BACE,4BACE,4BACE,2BAAiC,4BAAsE,iBACvG,4BAEE,4BACE,4BACA,+BAAgF,sEAC9E,wBACA,kCACF,iBACF,iBAEA,6BACE,8BACA,gCAA0D,oEAAyB,wCAAsH,EAAAo1B,kBAAA,KAA/I,CAAyB,uCACL,EAAAuB,uBAAA,M,wBAD9E,iBAGE,iCAOA,gCAWJ,iBAEA,gCAQF,iBAEF,iBACF,iBACF,kB,MA3C0F,uDAEtE,wDAMS,yEAAsC,wBAAtC,CAAsC,4BAAtC,CAAsC,oBAAtC,CAAsC,yBAAtC,CAAsC,0BAAtC,CAAsC,8DAGjD,mDAOD,2DAaJ,qD,8UD1Bb,GAKa,EAAA32B,gC,oHElBb,KACA,MACA,MAFA,IAGA,OAGA,SAMA,GAJA,OACA,MAGA,QAGA,Q,0ICFgB,6BACE,6BACF,kB,mDAsBR,8DAGI,gGAOJ,iB,gCANI,8CAAoC,iCAApC,CAAoC,mCAApC,CAAoC,oBAApC,CAAoC,yBAApC,CAAoC,8C,mDAUxC,0BACE,mDAC2B,gGAG3B,iBACF,iB,gCAJI,iDAAwB,oBAAxB,CAAwB,8B,sBAqBpB,2BAAwC,kCAAmB,kB,mDALnE,6BACI,6BAA0B,4BAAO,6BAAyE,iBAAQ,iBAClH,6BACE,kCAAiG,iGAA0C,iBAC3I,6BACE,6BACF,iBACF,iBACJ,iB,gCALuG,+CAE5F,8C,2HDvDnB,aAkFC,WAAoB8E,EAAqC+P,EAChD5P,EAA0CD,EAClDE,GAFmB,KAAAJ,eAAqC,KAAA+P,aAChD,KAAA5P,kBAA0C,KAAAD,kBApEnD,KAAA+V,SAAmB,EAInB,KAAAic,SAAmB,EAOnB,KAAA9V,gBAA0B,EAI1B,KAAA+V,eAA2B,KAW3B,KAAAC,oBAA8B,EAoB9B,KAAAC,iBAA2B,EAO3B,KAAAC,QAAkB,KAKlB,KAAA7Y,QAAgB,KAEhB,KAAAC,qBAA+B,EAW9B7X,KAAK0wB,QAAUnyB,EAAYmyB,UAC3B1wB,KAAK2wB,aAAe3wB,KAAK0wB,SAAWnyB,EAAYoyB,eAChD3wB,KAAK4wB,cAAgB5wB,KAAK0wB,SAAW1wB,KAAK2wB,cAAgBpyB,EAAYsyB,gBAEtE7wB,KAAK4X,QAAU,IAAI1C,KAEnB,IAAM+G,EAAMjc,KAAK4X,QAAQsE,aACzBlc,KAAKywB,QAAUzwB,KAAK4X,QAAQyE,iBAAmB,KAAOrc,KAAK4X,QAAQwE,cAAgB,GAAK,KAAOH,EAAM,GAAK,IAAM,IAAMA,E,OAGvH,YAAAhc,SAAA,aAIA,YAAA6wB,qBAAA,SAAqBC,EAA2BrX,GAC/C,IAAK,IAAInW,EAAY,EAAGA,EAAIwtB,EAAS9vB,SAAUsC,EAC9C,GAAIwtB,EAASxtB,GAAGmW,YAAcA,EAC7B,OAAOqX,EAASxtB,GAIlB,OAAO,MAGR,YAAAytB,gBAAA,SAAgBh1B,GACfgE,KAAK2kB,aAAe3oB,GAGrB,YAAAi1B,iBAAA,WACCjxB,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMjZ,KAAKywB,WAGzC,YAAAS,qBAAA,SAAqBC,GACpBnxB,KAAKoxB,kBAAoBD,GAKnB,YAAAE,eAAP,SAAsB5b,EAAkBgb,EAAiBa,GAAzD,WACCtxB,KAAKua,gBAAiB,EACtBva,KAAKywB,QAAUA,EACfzwB,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMjZ,KAAKywB,UACxCzwB,KAAKsxB,mBAAqBA,EAE1BtxB,KAAKuxB,mBAAmB9b,GACxBzV,KAAKwxB,eAELxxB,KAAK1B,gBAAgBwlB,qBAAqBrO,GAAUxL,MAAK,SAAAwnB,GACxD,EAAKC,gBAAkB,IAAI,EAAA1Y,kBAAkB,EAAKnV,cAAe4tB,EAAQ/M,UAAUjU,YACnF,EAAKkhB,iBAAmB,IAAI,EAAA3Y,kBAAkB,EAAKnV,cAAe2O,KAAKyG,MAAMzG,KAAKC,UAAU,EAAKif,kBAAkBjhB,YAEnH,EAAKjN,YAAciuB,EAAQjuB,gBAKtB,YAAAouB,yBAAP,SAAgCC,EAA0B9O,EAAmB0N,EAAiBa,GAA9F,WACK7b,EAAWoc,EAAYtY,OAAOmL,UAAUjU,WAAW1E,KACvD/L,KAAKua,eAAiBsX,EAAYtY,OAAOnE,MACzCpV,KAAKywB,QAAUA,EACfzwB,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMwX,IACnCzwB,KAAKsxB,mBAAqBA,EAE1BtxB,KAAKuxB,mBAAmB9b,GACxBzV,KAAKwxB,eAEqB,MAAtBK,EAAYtY,QAAgD,MAA9BsY,EAAYtY,OAAOwU,SAAmB8D,EAAYtY,OAAOwU,QAAQ9sB,OAAS,GAC3GjB,KAAKwD,YAAcquB,EAAYtY,OAAOwU,QACtC/tB,KAAKwwB,iBAAkB,IAGvBxwB,KAAK1B,gBAAgBwlB,qBAAqBrO,GAAUxL,MAAK,SAAAwnB,GACxD,EAAKjuB,YAAciuB,EAAQjuB,eAE5BxD,KAAKwwB,iBAAkB,GAIxBxwB,KAAK0xB,gBAAkB,IAAI,EAAA1Y,kBAAkBhZ,KAAK6D,cAAeguB,EAAYtY,OAAOmL,UAAUjU,YAC9FzQ,KAAK2xB,iBAAmB,IAAI,EAAA3Y,kBAAkBhZ,KAAK6D,cAAeguB,EAAYtY,OAAOmL,UAAUjU,YAE/FzQ,KAAKswB,eAAiB,WACrB,IAAIlN,EAAS,CACZL,UAAWA,EACX+O,cAAeD,EAAY71B,GAC3B+1B,WAAY,mBACZtN,eAAgB,EAAKjhB,YACrBkhB,UAAW,EAAKwL,SAChB9a,MAAOyc,EAAYtY,OAAOnE,OAG3B,EAAK9W,gBAAgB+kB,mBAAmBD,GACtCnZ,MAAK,WAEyB,MAA1B,EAAKmnB,mBACR,EAAKA,uBAGJ/mB,OAAM,SAACC,GACT,EAAKC,MAAMD,QAMR,YAAA0nB,oBAAP,SAA2B11B,EAAcmZ,EAAkBgb,EAAiBa,GAC3EtxB,KAAKua,gBAAiB,EACtBva,KAAKywB,QAAUA,EACfzwB,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMjZ,KAAKywB,UACxCzwB,KAAKsxB,mBAAqBA,EAE1BtxB,KAAKiyB,eAAe31B,EAAMmZ,GAC1BzV,KAAKuxB,mBAAmB9b,GACxBzV,KAAKkyB,iBAAiB51B,EAAMmZ,GAC5BzV,KAAKwxB,gBAGE,YAAAS,eAAR,SAAuB31B,EAAcmZ,GAArC,WACCzV,KAAK1B,gBAAgBslB,qBAAqBtnB,EAAMmZ,GAAUxL,MAAK,SAAAya,GAC9D,EAAKgN,gBAAkB,IAAI,EAAA1Y,kBAAkB,EAAKnV,cAAe2O,KAAKyG,MAAMzG,KAAKC,UAAUiS,IAAYjU,YACvG,EAAKkhB,iBAAmB,IAAI,EAAA3Y,kBAAkB,EAAKnV,cAAe2O,KAAKyG,MAAMzG,KAAKC,UAAU,EAAKif,kBAAkBjhB,YAGnH,EAAKyf,SAAW,EAAKyB,iBAGrB,EAAKpB,oBAAqB,EAC1B,EAAKnc,SAAU,KACb/J,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIL,YAAAknB,aAAR,sBACCxxB,KAAK1B,gBAAgBqlB,aAAa1Z,MAAK,SAAAqB,GACtC,EAAKjN,gBAAgBgN,WAAWC,MAC9BjB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIL,YAAAinB,mBAAR,SAA2Bj1B,GAA3B,WACC0D,KAAK1B,gBAAgBuiB,kBAAkB,CAACvkB,GAAO,MAC7C2N,MAAK,SAAApG,GACL,EAAKA,cAAgBA,EAAc,GAEP,MAAxB,EAAK6tB,kBACR,EAAKA,gBAAgB7tB,cAAgB,EAAKA,eAEd,MAAzB,EAAK8tB,mBACR,EAAKA,iBAAiB9tB,cAAgB,EAAKA,eAGvC,EAAKA,cAAcytB,sBAItBjnB,OAAM,SAACC,GACTiK,QAAQC,IAAIlK,OAKP,YAAA4nB,iBAAR,SAAyB51B,EAAc61B,GAAvC,WACCnyB,KAAK1B,gBAAgBgkB,2BAA2BhmB,EAAM61B,GACpDloB,MAAK,SAACzG,GACN,EAAKA,YAAcA,EAGnB,EAAKgtB,iBAAkB,KAErBnmB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAId,YAAA0jB,uBAAA,SAAuB/mB,EAAMwO,GAA7B,WACC,OAAO,EAAA2Y,WAAWxY,QAAO,SAACyY,GACzB,EAAK/vB,gBAAgBikB,iCAAiCtb,EAAMwO,GAAUxL,MAAK,SAAAukB,GAC1EH,EAASjhB,KAAKohB,UAKjB,YAAAC,kBAAA,SAAkBryB,EAAmBg2B,GAArC,WACCpyB,KAAK1B,gBAAgB+jB,mBAAmBjmB,EAAEoR,KAAKlR,KAAM81B,EAAI1N,UAAUyJ,WAAWpiB,MAC5E9B,MAAK,SAAAya,GAEL0N,EAAI1N,UAAYA,KAEdra,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIN,YAAAogB,cAAR,WAC6B,MAAxB1qB,KAAK+vB,kBACR/vB,KAAKuwB,mBAAqBvwB,KAAK+vB,gBAAgBrU,cAKrB,MAAvB1b,KAAKqyB,iBACRryB,KAAKwwB,gBAAkBxwB,KAAKqyB,eAAe3W,cAI5C1b,KAAKoU,QAAUpU,KAAKuwB,oBAAsBvwB,KAAKwwB,iBAGhD,YAAA8B,WAAA,SAAWC,EAAkBC,QAAA,IAAAA,OAAA,IACxBD,IAAavyB,KAAKqwB,UAAamC,KAKnCxyB,KAAKyyB,sBAELzyB,KAAKqwB,SAAWkC,EAEhBvyB,KAAK0qB,gBAGJ1qB,KAAK6X,oBADW,IAAb0a,IAQG,YAAAE,oBAAR,WAC6B,MAAxBzyB,KAAK+vB,kBACR/vB,KAAK2xB,iBAAmB3xB,KAAK+vB,gBAAgBpU,gBAEnB,MAAvB3b,KAAKqyB,iBACRryB,KAAKwD,YAAcxD,KAAKqyB,eAAeK,kBAGxC1yB,KAAKkwB,SAAWlwB,KAAK2xB,kBAOf,YAAApnB,MAAP,SAAaD,GACZtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,eAGrD,YAAAgyB,OAAP,WACCnwB,KAAKkO,WAAWiJ,QAGV,YAAA8Y,OAAP,sBACKjwB,KAAKoU,UACRpU,KAAKkO,WAAWiJ,OAEhBnX,KAAKyyB,sBAEsB,MAAvBzyB,KAAKswB,eACRtwB,KAAK1B,gBAAgBkmB,mBAAmBxkB,KAAKwD,YAAaxD,KAAKkwB,SAAUlwB,KAAKua,eAAgBva,KAAK2kB,aAAc3kB,KAAK4kB,OACpH3a,MAAK,WAEyB,MAA1B,EAAKmnB,mBACR,EAAKA,uBAGJ/mB,OAAM,SAACC,GACT,EAAKC,MAAMD,MAIbtK,KAAKswB,mB,iCA3VIh3B,GAAwB,+L,iCAAxBA,EAAwB,yD,OAAA,M,+RAPzB,CAAC,EAAAvD,YAAS,umD,GAAA,MCvBtB,4BAEI,+BAQI,4BACI,4BAEI,8BAGJ,iBACJ,iBACA,4BAEI,4BACI,4BACI,8BAAqF,wCAAS,aAAgB,MAC1G,6BACJ,iBACA,+BAA8G,wCAAS,aAAgB,MACnI,6BACJ,iBACA,+BAAoH,8DAA+B,aAAgB,MAC/J,8BACJ,iBACJ,iBACJ,iBACJ,iBAIA,8DAcA,gCAkBA,gCAUC,8BACG,8BAA0B,6BAAO,8BAAkD,iBAAQ,iBAC3F,8BACI,gCAAuC,gEAAqB,4BAAW,EAAAk7B,sBAAvE,iBACJ,iBACJ,iBAEA,6BAEI,6BACI,8BACI,iCAA8C,wCAAS,EAAAd,YACnD,8BACJ,iBACA,iCAA8C,wCAAS,EAAAF,YACnD,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,4BAvFqB,uDAS0C,8EAGA,iGAGA,oGAUnD,6HAaC,wEAkBA,oDAa0C,iDAW8B,8DACnD,sG,ixCD3ElC,GAWa,EAAA32B,4B,kHE9Bb,KACA,MAEA,OAHA,I,uGCEQ,2BAGI,YACJ,kB,uBAFI,6GACA,sD,yBAJR,2BACI,6BAKJ,kB,6BAJQ,4DDGZ,iBAgBI,WAAqB+E,GAAA,KAAAA,kBAEjB2B,KAAK2yB,YAAc,CAAC,MAAS,I,OAXjC,sBACI,oBAAK,C,IADT,SACUre,GACNtU,KAAK2yB,YAAcre,G,gCAavB,YAAArU,SAAA,aAGA,YAAA4T,YAAA,a,iCApBS5d,GAAsB,6C,iCAAtBA,EAAsB,iRCXnC,4BACI,6BAOJ,kB,MAPQ,uG,ioDDKR,GAKa,EAAAA,0B,+GEXb,WAIA,GAHA,MAGA,Q,GACA,O,2DCFE,qB,mDAOI,6BACE,+BAAuH,sHAAvH,iBACA,+BAAkC,6BAA6C,iBACjF,iB,0BAFmE,0CAAsB,sBAC3C,4C,mDAclC,6BACE,+BAAiD,yIAAjD,iBAAuF,YAA0B,2BAA+D,yIAAqC,iBACvN,iB,0CADyB,gDAAgE,6D,yBAF3F,0BACE,+BAGF,kB,uBAHqD,+C,yBAJzD,6BACE,4BAAO,YAA8B,iBACrC,6BACE,+BAKF,iBACF,kB,uCARS,mDAEA,wD,yBAJX,0BACE,+BAUF,kB,4CAVO,2E,yBANX,0BACE,yBACE,6BACF,iBACA,6BACE,+BAaF,iBACF,kB,6BAdS,6DDdf,iBAuCC,WAAoBkI,EAAqC2W,GAArC,KAAA3W,eAAqC,KAAA2W,UAhChD,KAAAhW,OAAmB,GAClB,KAAA8zB,YAAc,IAAI,EAAAn1B,aAClB,KAAAo1B,gBAAkB,IAAI,EAAAp1B,aAEhC,KAAAq1B,oBAAqB,EAErB,KAAAC,MAAsB,GAMtB,KAAAC,WAAoB,CACnB,CACCxL,KAAM,YACN5f,MAAO,sBACP5L,GAAI,eACJi3B,OAAQ,uCACRC,IAAK,4BACLC,UAAU,IAWZ,KAAAC,mBAA0C,G,OAM1C,YAAAnzB,SAAA,sBAECD,KAAK8U,QAAQ2O,2BAA2BxZ,MAAK,SAAA8oB,GAC5C,EAAKA,MAAQA,EAEb,EAAKM,0BAIP,YAAAzf,YAAA,SAAYmF,GAEPA,EAAQja,OAAOw0B,eAAiBva,EAAQja,OAAOy0B,eAClDvzB,KAAKqzB,uBAIP,YAAAA,oBAAA,sBAECrzB,KAAK+yB,MAAM1xB,SAAQ,SAAA4iB,GAElB,IAAIuP,EAAe,CAAE9d,IAAKuO,EAAKvO,IAAKC,aAAcsO,EAAKtO,aAAaxJ,eAAgBsnB,cAAe,IAEnGxP,EAAKoF,SAAShoB,SAAQ,SAAAuoB,GAIrB,IAAe,IAFD,EAAK9qB,OAAOyN,QAAQqd,EAAQlU,KAExB,CACjB,IAAIge,EAAmB,CAAEhe,IAAKkU,EAAQlU,IAAKC,aAAciU,EAAQhS,QAAS+b,QAAQ,EAAOC,SAAS,GAElGJ,EAAaC,cAAc1vB,KAAK2vB,OAI9BF,EAAaC,cAAcxyB,OAAS,GACvC,EAAKmyB,mBAAmBrvB,KAAKyvB,OAMhC,YAAAK,6BAAA,SAA6BC,GAC5B,IAAIC,GAAa,EAWjB,OAVA/zB,KAAKozB,mBAAmB/xB,SAAQ,SAAA2yB,GAC3BA,EAAYte,MAAQoe,GACvBE,EAAYP,cAAcpyB,SAAQ,SAAA4yB,GAC7BA,EAAOL,UACVG,GAAa,SAMVA,GAGR,YAAAG,wBAAA,WACC,IAAIH,GAAa,EASjB,OARA/zB,KAAKozB,mBAAmB/xB,SAAQ,SAAA2yB,GAC/BA,EAAYP,cAAcpyB,SAAQ,SAAA4yB,GAC7BA,EAAOL,UACVG,GAAa,SAKTA,GAGR,YAAAI,mBAAA,SAAmBC,GAClBA,EAAMT,QAAUS,EAAMT,OAEtB3zB,KAAK4yB,YAAY9Z,KAAKsb,IAGvB,YAAAC,mBAAA,SAAmBD,GAClBA,EAAMT,QAAS,EACfS,EAAMR,SAAU,EAEhB5zB,KAAK4yB,YAAY9Z,KAAKsb,IAGvB,YAAAE,qBAAA,WACkBt0B,KAAK7B,aAAagP,KAAK,EAAA1R,2BAA4B,CACnE0S,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,wBAECC,QAAQ8kB,mBAAqBpzB,KAAKozB,oBAgB9C,YAAAmB,gBAAA,SAAgBH,GACfp0B,KAAKgzB,WAAW3xB,SAAQ,SAAAmzB,GACvBA,EAAGb,QAAS,KAGbS,EAAMT,QAAS,EAEf3zB,KAAK6yB,gBAAgB/Z,KAAKsb,I,iCArJf14B,GAAmB,+E,iCAAnBA,EAAmB,6jCCXhC,4BAA0B,mEAAmC,IAAnC,CAAwC,sDAAoC,KAEpG,4BACA,4BAEE,4BACE,yBACE,4BACF,iBACA,8BAIF,iBACA,0BACE,8BAqBA,+BAAgC,wCAAS,EAAA44B,0BAAwB,kBAAE,6BAAmE,iBACxI,iBAEF,iBAEF,kB,MAvCwB,0DACjB,4DAMqB,oDAMjB,kE,82CDTX,GAKa,EAAA54B,uB,iHEZb,WAIA,GAFA,MAEA,QAGA,GAFA,OACA,MACA,Q,GACA,M,sJCYI,4BACE,6BACE,4BACE,6BACF,iBACF,iBACA,6BACE,6BACE,gCAA0C,8GACxC,6BACF,iBACF,iBACF,iBACF,kB,mDAGE,2CAA+H,uHAAqD,iB,+CAA3H,kCAAwB,cAAxB,CAAwB,uB,yBADnF,0BACE,6CACF,kB,8BADqB,sD,mDAGrB,6BACE,4BACE,6BACF,iBACA,kCAA6B,mGAAuE,iBACtG,iB,iCAD+B,iD,mDAI7B,gCAAmD,oGACjD,6BACF,kB,mDAEA,gCAA6D,4FAC3D,6BACF,kB,mDACA,gCAAqC,4FACnC,6BACF,iB,iCAFgG,wGACpF,qG,mDAtDhB,0BAEE,4DASE,uHAAoD,2FAApD,CAAoD,gFAMtD,iBAEA,8BAeA,8BAIA,8BAOA,4BACE,iCAIA,iCAGA,iCAGF,iBACF,iB,gCArDI,oDAAsB,8BAAtB,CAAsB,gCAAtB,CAAsB,oBAAtB,CAAsB,gBAAtB,CAAsB,yBAAtB,CAAsB,iBAAtB,CAAsB,qBAAtB,CAAsB,cAenB,wEAeA,wDAIA,8DAQK,2DAIA,6CAGA,8C,mDAKZ,0BAEE,yCAKE,yGACF,iBACF,iB,gCANI,qDAAuB,uBAAvB,CAAuB,yCAAvB,CAAuB,sB,mDAO3B,0BAEE,gDAEE,yGACF,iBACF,iB,gCAHI,sD,mDAIJ,0BAEE,wCAIE,yGAAsC,8FAExC,iBACF,iB,gCANI,oDAAsB,yCAAtB,CAAsB,sBDrE5B,iBA2DC,WAAmBoZ,EAAkC3W,EAAsCI,GAAxE,KAAAuW,UAAkC,KAAA3W,eAAsC,KAAAI,cArD3F,KAAAk2B,KAAO,CACNC,SAAU,WACVC,WAAY,aACZC,UAAW,YACXC,SAAU,YAOF,KAAAjd,QAAgB,IAAI1C,KAEpB,KAAA/F,UAAoB,EAM7B,KAAA2lB,MAAgB,KAIN,KAAAC,aAAe,IAAI,EAAAt3B,aACnB,KAAAu3B,cAAgB,IAAI,EAAAv3B,aACpB,KAAAw3B,WAAa,IAAI,EAAAx3B,aAE3B,KAAA2W,SAAmB,EAInB,KAAA8gB,KAAe,KAUf,KAAAlhB,UAAuB,KAEvB,KAAAoB,OAAiB,EAEjB,KAAA+f,QAAkB,EAIlB,KAAA1xB,UAA+B,KAE/B,KAAAisB,OAAiB,G,OApCjB,sBAAa,mBAAI,C,IAAjB,SAAkBpb,GACjBtU,KAAKo1B,WAAW9gB,I,gCAwCjB,YAAArU,SAAA,sBACED,KAAK2wB,aAAe3wB,KAAKzB,YAAYmyB,WAAa1wB,KAAKzB,YAAYwE,kBAAkB/C,KAAK+L,KAAKjJ,iBAAkB9C,KAAK+L,KAAKzP,MAC5H0D,KAAKk1B,KAAO,aACZl1B,KAAKioB,eAAernB,WAAU,SAAAy0B,GAC7B,EAAKC,eAAeD,OAItB,YAAAE,SAAA,SAASxd,GACR/X,KAAKoU,QAAU2D,GAGhB,YAAAqd,WAAA,SAAW94B,GAAX,WACC0D,KAAK80B,MAAQx4B,EACb0D,KAAKwX,cAAgB,KACrBxX,KAAKuX,aAAe,KACpBvX,KAAKwD,YAAc,KACnBxD,KAAKw1B,aAAY,GAEL,MAARl5B,GAA6B,MAAb0D,KAAK+L,OAEX,YAATzP,GACH0D,KAAKoV,OAAQ,EAEbpV,KAAK8U,QAAQ8O,qBAAqBtnB,EAAM0D,KAAK+L,KAAKzP,MAAM2N,MAAK,SAAAya,GAC5D,EAAKnN,aAAe,IAAI,EAAAyB,kBAAkB,EAAKjN,KAAMyG,KAAKyG,MAAMzG,KAAKC,UAAUiS,IAAYjU,YAC3F,EAAK+G,cAAgB,IAAI,EAAAwB,kBAAkB,EAAKjN,KAAMyG,KAAKyG,MAAMzG,KAAKC,UAAU,EAAK8E,eAAe9G,eAClGpG,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZtK,KAAK8U,QAAQwN,2BAA2BhmB,EAAM0D,KAAK+L,KAAKzP,MAAM2N,MAAK,SAACzG,GACnE,EAAKA,YAAcA,KACjB6G,OAAM,SAACC,GACT,EAAKC,MAAMD,QAIZtK,KAAKoV,OAAQ,EAEbpV,KAAK8U,QAAQgP,qBAAqB9jB,KAAK+L,KAAKzP,MAAM2N,MAAK,SAAAwnB,GACtD,EAAKla,aAAe,IAAI,EAAAyB,kBAAkB,EAAKjN,KAAM0lB,EAAQ/M,UAAUjU,YACvE,EAAK+G,cAAgB,IAAI,EAAAwB,kBAAkB,EAAKjN,KAAMyG,KAAKyG,MAAMzG,KAAKC,UAAU,EAAK8E,eAAe9G,YAEpG,EAAKjN,YAAciuB,EAAQjuB,YAC3B,EAAKgyB,aAAY,SAQrB,YAAAC,sBAAA,SAAsB3b,GACrB9Z,KAAK+0B,aAAajc,KAAKgB,IAGxB,YAAAwb,eAAA,SAAe9c,GAEd,GAAgB,MAAZA,GAA0C,MAAtBxY,KAAKwX,cAAuB,CAEnD,IAAIqC,EAAS7Z,KAAKwX,cAAc/G,WAAqB,SAAEoJ,OACjD,EAAO7Z,KAAK4X,QAAQ6B,UAE1BI,EAAOxY,SAAQ,SAAAyY,GAEd,IAAMJ,EAAYxE,KAAK+D,MAAMa,EAAIJ,WAC3BC,EAAUzE,KAAK+D,MAAMa,EAAIH,SAE3B,GAAQD,GAAa,GAAQC,IAChCG,EAAIxF,MAAQkE,QAMhB,YAAAkd,kBAAA,SAAkBpc,GAMjB,IAJA,IAAME,EAAOxZ,KAAK4X,QAAQ6B,UAEtBI,EAASP,EAAK7I,WAAqB,SAAEoJ,OAEhCtW,EAAI,EAAGA,EAAIsW,EAAO5Y,OAAQsC,IAAK,CACvC,IAAMuW,EAAMD,EAAOtW,GAEbmW,EAAYxE,KAAK+D,MAAMa,EAAIJ,WAC3BC,EAAUzE,KAAK+D,MAAMa,EAAIH,SAE/B,GAAIH,GAAQE,GAAaF,GAAQG,EAChC,OAAOG,EAAIxF,MAIb,OAAO,MAGR,YAAA8C,SAAA,WAEoB,YAAfpX,KAAK80B,MACR90B,KAAKo1B,WAAW,MAGhBp1B,KAAKo1B,WAAWp1B,KAAK80B,QAIvB,YAAA7d,SAAA,sBACCjX,KAAK8U,QAAQ0P,mBAAmBxkB,KAAKwD,YAAaxD,KAAKwX,cAAexX,KAAKoV,MAAOpV,KAAK21B,UAAW31B,KAAK0vB,QAAQzlB,MAAK,WACnH,EAAK+qB,cAAclc,KAAK,EAAKtB,eAE7B,EAAK4d,WAAW,EAAKN,UACnBzqB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAsrB,yBAAA,SAAyB5hB,GACxBhU,KAAKgU,UAAYA,EACjBhU,KAAKk1B,KAAOl1B,KAAKy0B,KAAKC,UAGvB,YAAAmB,wBAAA,SAAwBpyB,GACvBzD,KAAKyD,UAAYA,EACjBzD,KAAKk1B,KAAOl1B,KAAKy0B,KAAKG,WAGvB,YAAAkB,kBAAA,SAAkBte,GAEjBjD,QAAQC,IAAI,gBAAiBgD,GAE7BxX,KAAKwX,cAAgBA,EAErBxX,KAAKk1B,KAAOl1B,KAAKy0B,KAAKE,WAEtB30B,KAAK+0B,aAAajc,KAAK,OAGxB,YAAAid,kBAAA,SAAkBtyB,GACjB,IAAMyG,EAAQlK,KAAKwD,YAAYiJ,WAAU,SAAAC,GAAK,OAAAA,EAAEpQ,OAASmH,EAAUnH,SACpD,IAAX4N,IACHlK,KAAKwD,YAAY0G,GAASzG,GAG3BzD,KAAKk1B,KAAOl1B,KAAKy0B,KAAKE,YAGvB,YAAAqB,iBAAA,WACCh2B,KAAKw1B,aAAax1B,KAAKm1B,SAGxB,YAAAK,YAAA,SAAYlhB,GACXtU,KAAKm1B,OAAS7gB,EACdtU,KAAK0vB,OAAS,KAEd1vB,KAAKi1B,WAAWnc,KAAK9Y,KAAKm1B,SAGpB,YAAA5qB,MAAP,SAAaD,GACZtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCAvNhDxC,GAAqB,kH,iCAArBA,EAAqB,62DCflC,0BACE,gCA0DA,8BAUA,8BAOA,8BAUF,kB,MArFO,qFA0DA,+EAUA,gFAOA,8D,o1CDlEP,GAKa,EAAAA,yB,6HEfb,KACA,MADA,IAEA,QAEA,S,GAEA,OAEA,M,iGCHM,6BAAqE,YAAW,kB,6BAAX,+C,mDAerE,4BACE,+BACE,6BACA,8BAA8B,iBAAO,sCAAkE,gBAAC,iBAC1G,iBACA,+BAA6B,2FAA7B,iBAEF,iB,8CAJ4D,4CAEnD,mDAAqB,kBAArB,CAAqB,2B,yBAa1B,gCAA6D,YAA4B,kB,uBAA/C,6BAAmB,4D,mDAH/D,gCACE,0HACA,wBACA,kCACF,iB,gCAJkD,4CAA6B,4CAGrE,wD,mDAEV,8BAA8D,+BAAmB,6GAAnB,iBAAyF,iB,gCAAtE,4D,mDACjF,8BAAgC,+BAAmB,6GAAnB,iBAAyF,iB,gCAAtE,4D,mDAwD/C,gCACE,iGACA,6BACF,iB,mDAHwC,mEDtFpD,iBAsBC,WAAoBqZ,EAAuCihB,EAA2B33B,EAA0CJ,EAA2CgQ,GAAvJ,KAAA8G,WAAuC,KAAAihB,OAA2B,KAAA33B,kBAA0C,KAAAJ,mBAA2C,KAAAgQ,aAd3K,KAAAvE,cAAqB,GACrB,KAAAmF,QAAkB,KAElB,KAAAM,MAAgB,EAEhB,KAAAD,UAAoB,E,OAWpB,YAAAlP,SAAA,sBACCD,KAAKuO,uBAAyB,IAAI,EAAAoD,QAElC3R,KAAKgD,cAAgB,CACpB,KAAQ,GACR,MAAShD,KAAKgV,SAASY,SACvB,YAAe5V,KAAKgV,SAASY,SAC7B,mBAAsB,GACtB,iBAAoB,IAGrB5V,KAAK1B,gBAAgB4mB,mBAAmBjb,MAAK,SAAAisB,GAG5C,GAAK,EAAK/mB,SAUT,EAAKxF,cAAgBusB,MAVF,CACnB,EAAKvsB,cAAgB,GAErB,IAAK,IAAIpG,EAAI,EAAGA,EAAI2yB,EAAKj1B,SAAUsC,EAC9B,EAAK0yB,KAAKpzB,iBAAiBqzB,EAAK3yB,GAAGjH,OACtC,EAAKqN,cAAc5F,KAAKmyB,EAAK3yB,IAQ3B,EAAK6L,MAAsC,IAA9B,EAAKzF,cAAc1I,QAI5B,EAAKmO,MAAQ,EAAKD,YAC1B,EAAKgnB,kBAAoB,EAAKC,6BAA6B,EAAKpzB,cAAcF,oBAJ9E,EAAKE,cAAcF,iBAAmB,EAAK6G,cAAc,GAAGrN,KAC5D,EAAK65B,kBAAoB,EAAKxsB,cAAc,GAAG/B,MAAMuE,mBAMpD9B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA8rB,6BAAA,SAA6BxrB,GAC5B,IAAK,IAAIrH,EAAI,EAAGA,EAAIvD,KAAK2J,cAAc1I,SAAUsC,EAChD,GAAIvD,KAAK2J,cAAcpG,GAAGjH,OAASsO,EAClC,OAAO5K,KAAK2J,cAAcpG,GAAGqE,MAAMuE,eAKrC,OADAoI,QAAQC,IAAI,+BAAiC5J,EAAU,KAChDA,GAGR,YAAAkJ,eAAA,sBACC9T,KAAK8O,QAAU,KAEX9O,KAAKmP,SACRnP,KAAKkO,WAAWiJ,OAIbnX,KAAKoP,MACRmF,QAAQC,IAAIxU,KAAKgD,eAEjBhD,KAAK9B,iBAAiBmV,oBAAoBb,KAAKC,UAAUzS,KAAKgD,gBAAgBiH,MAAK,SAAArG,GAClF,EAAK2K,uBAAuBnB,KAAKxJ,GACjC,EAAKsK,WAAWiJ,UACd9M,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIZtK,KAAK9B,iBAAiBiV,oBAAoBX,KAAKC,UAAUzS,KAAKgD,gBAAgBiH,MAAK,SAAArG,GAClF,EAAK2K,uBAAuBnB,KAAKxJ,GACjC,EAAKsK,WAAWiJ,UACd9M,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKd,YAAAC,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAnGrC5S,GAAiC,iM,iCAAjCA,EAAiC,8pFChB9C,2BAEE,4BACE,+BAEE,8BAEE,4BACE,yBACE,4BACF,iBACF,iBAEF,4BACE,8BACE,6BACF,iBACA,+BAAO,2EAAP,iBAEF,iBACA,gCASA,yCAAgB,gFAAwH,iBAExI,6BACE,gCACE,8BACF,iBACA,mCAKA,iCACA,iCACF,iBAEA,6BACE,6BAAO,8BAAwD,iBAC/D,mCAAU,+EAAgG,iBAC5G,iBAEA,6BACE,6BAAO,8BAA+D,iBACtE,mCAAU,sFAA8G,iBAC1H,iBACA,6BACE,6BAAO,8BAA0D,iBACjE,mCAAU,iFAAgH,iBAC5H,iBAEA,6BACE,6BAAO,8BAAiE,iBACxE,mCAAU,wFAA8H,iBAC1I,iBAEA,6BACE,6BAAO,8BAA8D,iBACrE,mCAAU,qFAAwH,iBACpI,iBAEA,qBAEA,6BACE,0BACE,8BACF,iBACF,iBAEA,6BACE,6BAAO,8BAAuD,iBAC9D,gCAAO,8EAAP,iBACF,iBAEA,6BACE,6BAAO,8BAA2D,iBAClE,gCAAO,kFAAP,iBACF,iBAEA,6BACE,6BAAO,8BAAqD,iBAC5D,gCAAO,4EAAP,iBACF,iBAEA,8BACE,8BACE,8BACE,iCAA8C,wCAAS,EAAAwW,WAAA,UACrD,8BACF,iBACA,mCAIF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,MAtGW,oDAYI,4DAAgC,+BAGjB,0EASR,iEAAqC,kBAArC,CAAqC,uBAM3C,sEAKF,uEACA,2CAKI,gEAAoC,uBAKpC,uEAA2C,uBAI3C,kEAAsC,uBAKtC,yEAA6C,uBAK7C,sEAA0C,uBAa7C,+DAAmC,uBAKnC,mEAAuC,uBAKvC,6DAAiC,uBAS5B,kD,0UDtFpB,GAKa,EAAAxW,qC,0HEhBb,KACA,MADA,IAEA,QAEA,S,GAGA,OACA,M,0GCLI,6BAAqE,YAAW,kB,6BAAX,+C,qBAIjE,6B,qBACA,6B,mDAoBA,4BACE,4BACE,6BACA,8BAA6B,iBAAO,sCAAkE,gBAAC,iBACzG,iBACA,+BAAO,2FAAP,iBAEF,iB,0BAJ2D,4CAElD,+CAA+B,yBAA/B,CAA+B,wC,mDAY5C,4BACE,6BACE,4BACE,+BACE,6BACF,iBACA,6BACE,uCAAgC,kHAAuF,iBACzH,iBACF,iBACF,iBACF,iB,gCAJuB,0CAAgB,mCAAhB,CAAgB,kD,2CDxC3C,aAmBC,WAAoBsd,EAAuCihB,EAA2B33B,EAAyC4P,GAA3G,KAAA8G,WAAuC,KAAAihB,OAA2B,KAAA33B,kBAAyC,KAAA4P,aAX/H,KAAAkI,aAA6B,KAC7B,KAAAtH,QAAkB,K,OAYlB,YAAA7O,SAAA,WACCD,KAAKkQ,mBAAqB,IAAI,EAAAyB,QAE9B3R,KAAK6D,cAAgB,CACpB,KAAQ,GACR,MAAS7D,KAAKgV,SAASY,SACvB,YAAe5V,KAAKgV,SAASY,SAC7B,aAAgB,aAChB,QAAU,EACV,oBAAsB,EACtB,iBAAoB,GACpB,WAAc,KAIhB,YAAAzK,KAAA,SAAKiL,EAA4B2X,EAA0B9d,EAA+B/M,GAEzFlD,KAAK6D,cAAcX,WAAaA,IAA0B,EAEtD+M,IACHjQ,KAAK6D,cAAcT,cAAgB6M,EAAe3T,KAClD0D,KAAK6D,cAAcolB,aAAehZ,EAAegZ,aACjDjpB,KAAK6D,cAAcwyB,UAAYpmB,EAAeomB,WAI/Cr2B,KAAK+tB,QAAUA,EAAQjvB,QAAO,SAAA4G,GAAU,OAAAA,EAAOxC,cAG/ClD,KAAKoW,aAAeA,EACpBpW,KAAK6D,cAAcf,iBAAmB9C,KAAKoW,aAAa9Z,KACxD0D,KAAKm2B,kBAAoBn2B,KAAKoW,aAAaxO,MAAMuE,gBAGlD,YAAA2H,eAAA,sBACC9T,KAAK8O,QAAU,KAEf9O,KAAK1B,gBAAgB0R,oBAAoBwC,KAAKC,UAAUzS,KAAK6D,gBAAgBoG,MAAK,SAAArG,GACjF,EAAKsM,mBAAmB9C,KAAKxJ,GAC7B,EAAKsK,WAAWiJ,UACd9M,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAgsB,aAAA,WACCt2B,KAAK6D,cAAc0yB,QAAUv2B,KAAK6D,cAAc0yB,QAGjD,YAAAC,yBAAA,WACCx2B,KAAK6D,cAAcytB,oBAAsBtxB,KAAK6D,cAAcytB,oBAG7D,YAAAmF,iBAAA,WACCz2B,KAAK6D,cAAcX,YAAclD,KAAK6D,cAAcX,YAGrD,YAAAqH,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA3ErC1S,GAA8B,yJ,iCAA9BA,EAA8B,wjE,2BCjB3C,+BAAqB,sFAA0B,EAAAkc,oBAE7C,4BACE,8BAEA,4BACE,yBACE,mCACA,mCACF,iBACF,iBAEA,4BACE,4BACE,6BACE,2BACE,gCACE,8BACF,iBACA,gCAAO,2EAAP,iBAEF,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,gCAQF,iBACF,iBAEA,6BACE,6BACE,yCAAgB,gFAAkG,iBACpH,iBACF,iBAEA,gCAaA,6BACE,8BACE,6BAEE,gCACE,8BACF,iBACA,8BACE,wCAA+D,8EAAwF,iBACzJ,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,gCACE,8BACF,iBACA,iCAAgD,mFAC9C,yBAmBC,iCACC,8BACF,iBACA,iCACE,8BACF,iBACA,iCACE,8BACF,iBACF,iBACF,iBACF,iBACF,iBAeA,6BACE,8BACE,6BACE,8BACE,8BAAK,wCAAS,EAAA0iB,8BAEZ,uBACF,iBAEA,gCACE,8BACF,iBACF,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,gCACE,8BACF,iBACA,+BACE,gCAAuC,0EAAvC,iBACF,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,8BACE,iCAA8C,wCAAS,EAAAtoB,WAAA,UACrD,8BACF,iBACA,iCACE,8BACF,iBACF,iBACF,iBACF,iBAEF,iBACF,iB,+BAtKS,oDAIS,+DACA,gEAWC,4DASa,0EAaR,iEAAqC,mBAIxC,mEAqBM,2EAA+C,kCAA/C,CAA+C,mDAYhB,oEAAwC,mFAmD5C,mGAoBH,4DAYnB,oD,4WDrJhC,GAKa,EAAAtW,kC,6HEjBb,KACA,MADA,IAGA,QAGA,SACA,S,GAEA,O,wJCJE,4CAAiG,wHAAyH,iB,gCAA/I,oCAAqB,gCAArB,CAAqB,qC,mDAEhG,gDAA0G,wHAAsD,iB,gCAAtF,+C,mDAE1E,uDAAgH,wHAAsD,iB,gCAAtF,+C,mDAEhF,qDAA+I,wHAAsD,iB,gCAAzH,8CAA+B,qC,wBAE3G,uC,6BAAuE,8CAA+B,qC,wBAEtG,0C,6BAAwE,8CAA+B,mCAA/B,CAA+B,uCDHzG,iBAaC,WAAmBsW,EAA+BwoB,EAA+BC,GAAjF,WAAmB,KAAAzoB,aAA+B,KAAAwoB,oBAPlD,KAAA5nB,QAAkB,KAClB,KAAAiD,WAA4C,CAAE,MAAS,EAAA6kB,yBAAyBpmB,oBAAqB,UAAa,GAAI,WAAc,IAIpI,KAAArB,UAAoB,EAGnBnP,KAAK62B,uBAAyBF,EAA+B/kB,gBAAgBhR,WAAU,SAAAmR,GACtF,EAAKA,WAAaA,K,OAIpB,YAAA9R,SAAA,WACCD,KAAK0Q,yBAA2B,IAAI,EAAAiB,SAGrC,YAAAkC,YAAA,WACC7T,KAAK62B,uBAAuBC,eAG7B,YAAAC,mBAAA,SAAmB9kB,GAClBjS,KAAK+R,WAAaE,GAGnB,YAAA+kB,sBAAA,SAAsBpzB,GAGrB5D,KAAK0Q,yBAAyBtD,KAAKxJ,IAGpC,YAAAqzB,OAAA,aAIA,YAAAC,MAAA,WACCl3B,KAAKkO,WAAWiJ,QAGjB,YAAA5M,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAzCrCzR,GAAiC,4H,iCAAjCA,EAAiC,unBChB9C,2BAEE,sCAEA,8CAEA,kDAEA,yDAEA,uDAEA,8CAEA,iDAEF,kB,MAZuB,kFAEI,6EAEO,4EAEF,0EAET,8EAEG,8E,2UDH1B,GAKa,EAAAA,qC,uHEjBb,WAMA,GALA,MACA,MAIA,QAIA,GAFA,MAEA,Q,GACA,O,0GCTI,4BAAqE,YAAW,kB,8BAAX,+C,yBAyC7D,4BACI,6BACI,6BACJ,iBACA,6BACI,8BACI,YACJ,iBACJ,iBACJ,kB,8BAHY,4E,yBAsDQ,4BAA8E,YAA6B,kB,uBAA7B,4D,mDAgBtF,gCAAwF,0FACpF,6BACJ,iB,iCAFgE,uC,mDAnHpF,+BAAkE,wFAC9D,4BACI,yBACI,4BACA,YACJ,iBACJ,iBACA,+BACI,4BACI,6BACI,4BAAO,8BAAoD,iBAC/D,iBACA,8BACI,+BAAoB,gCAAmB,mHAAnB,iBACpB,iBACJ,iBACJ,iBAEA,0CAAuC,kHAAoE,iBAC3G,yCAAsC,wHAAgF,iBAEtH,6BACI,8BACI,6BAAO,8BAAiD,iBAC5D,iBACA,8BACI,wCAAgC,mHAAuF,iBAC3H,iBACJ,iBAEA,6BACI,8BACI,6BAAO,8BAA+D,iBAC1E,iBACA,8BACI,wCAAuD,sHAA4F,iBACvJ,iBACJ,iBAEA,gCAYA,6BACI,8BACI,6BAAO,8BAA4D,iBACvE,iBACA,8BACI,iCAA4B,2HACxB,yBACC,iCAA2B,8BAAsD,iBAClF,iCAA0B,8BAAqD,iBAC/E,iCAA6B,8BAAwD,iBAOzF,iBACJ,iBACJ,iBAGA,6BACI,8BACI,6BAAO,8BAA8E,iBACzF,iBACA,8BAEI,wCAAoC,+HAA6H,iBACrK,iBACJ,iBAEA,6BACE,8BACE,6BAAO,8BAAwD,iBACjE,iBACA,8BACE,+BAAoB,gCAAmB,8GAAnB,iBAAyF,iBAC/G,iBACF,iBAEA,6BACI,8BACI,6BAAO,8BAA0F,iBACrG,iBACA,8BACI,8BACI,8BACI,6BACI,+BACJ,iBAEA,iCAA8G,oGAC1G,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEA,6BACQ,8BACI,iCAA8C,yFAC1C,8BACJ,iBACA,mCAGJ,iBACJ,iBACR,iBACJ,iB,iCArHY,wFAS2C,gEAK9B,mDAAqB,mCACtB,mDAAqB,yCAOd,0CAAgB,mCAAhB,CAAgB,iDAShB,qEAAuC,sCAAvC,CAAuC,mDAItC,+FAiBY,wEAsBb,mDAAoB,+CAApB,CAAoB,2EASA,2DAYnB,sEAGA,kFAaJ,iD,yBAtHhC,4BACI,8BAEA,iCA0HJ,kB,6BA5HS,oDAEgB,yDDSzB,iBA4BI,WAAqBqF,EAA2CgQ,EAA+BwoB,EAAuCv4B,EAC1Hg5B,EAA8DR,EAC9DS,EAAkD94B,GAFzC,KAAAJ,mBAA2C,KAAAgQ,aAA+B,KAAAwoB,oBAAuC,KAAAv4B,eAC1H,KAAAg5B,4BAA8D,KAAAR,iCAC9D,KAAAS,sBAAkD,KAAA94B,kBAvBrD,KAAA6Q,UAAoB,EAEnB,KAAAkoB,oBAAoD,IAAI,EAAA55B,aAYlE,KAAAqR,QAAkB,KAClB,KAAAiD,WAA4C,CAAC,MAAQ,EAAA6kB,yBAAyBpmB,oBAAqB,UAAY,GAAI,WAAa,IAEhI,KAAA8mB,gBAA8B,CAAC,MAAS,CACpC,CAAC,MAAQt3B,KAAKo3B,oBAAoBt2B,OAAO,6CAA8C,QAAS,EAAM,SAAU,K,OAXpH,sBACI,iBAAE,C,IADN,SACO+C,GACAA,IACD7D,KAAKu3B,kBAAoB/kB,KAAKyG,MAAMzG,KAAKC,UAAU5O,M,gCAiBzD,YAAA5D,SAAA,WAEID,KAAKm3B,0BAA0BK,cAAcx3B,KAAKs3B,iBAClDt3B,KAAK22B,+BAA+B3kB,cAAchS,KAAK+R,YAEvD/R,KAAKy3B,0BAGT,YAAAA,uBAAA,sBAEEz3B,KAAK1B,gBAAgB4mB,mBAAmBjb,MAAK,SAAAisB,GAE3C,IAAK,IAAI3yB,EAAI,EAAGA,EAAI2yB,EAAKj1B,SAAUsC,EAE7B2yB,EAAK3yB,GAAGjH,OAAS,EAAKi7B,kBAAkBz0B,mBAE1C,EAAKqzB,kBAAoBD,EAAK3yB,GAAGqE,MAAMuE,mBAI1C9B,OAAM,SAACC,GACN,EAAKC,MAAMD,OAIjB,YAAAotB,iBAAA,WACI13B,KAAK22B,+BAA+B3kB,cAAc,CAAC,MAAQ,EAAA4kB,yBAAyBc,iBAAkB,UAAY,GAAI,WAAa,MAGvI,YAAAX,mBAAA,SAAmB9kB,GACfjS,KAAK+R,WAAaE,GAGtB,YAAAglB,OAAA,sBACIj3B,KAAK1B,gBAAgBmjB,oBAAqBzhB,KAAKu3B,mBAAoBttB,MAAM,SAAApG,GAIrE,EAAKwzB,oBAAoBve,KAAKjV,GAE9B,EAAKqzB,WAEL7sB,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAQpB,YAAA4sB,MAAA,WAEIl3B,KAAKkO,WAAWiJ,QAIpB,YAAA/C,QAAA,WAkBI,OAAO,GAGX,YAAA7J,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA5G/CxR,GAA2B,6U,iCAA3BA,EAA2B,0nECjBxC,8B,KAAwB,oE,gpBDYxB,GAKa,EAAAA,+B,0HElBb,WAGA,GAFA,MACA,MACA,OAGA,SACA,SAGA,GAFA,MAEA,Q,GACA,O,gGCVI,4BAAqE,YAAW,kB,6BAAX,+C,mDAiCjC,2BAAoG,uI,uBACvD,iB,KAAzC,6D,mDACJ,2BAAuG,6I,uBACxD,iB,KAA3C,+D,yBANZ,yBACI,yBAAI,YAA6B,iBACjC,4BACI,6BAEA,6BAEJ,iBACJ,kB,uBAPQ,2DAEG,qEAEA,sE,mDAjCvC,+BAA8D,wFAC1D,4BACI,yBACI,4BAAyE,YAAsC,iBACvH,iBACA,+BAEI,0BACI,4BACI,4BACI,6BACJ,iBACJ,iBACA,8BAEI,8BACI,gCACI,6BACI,0BACI,0BACI,8BACJ,iBACA,6BACI,8BACJ,iBACJ,iBACJ,iBACA,6BACI,+BASJ,iBACJ,iBACJ,iBAkBJ,iBACJ,iBACA,8BACI,wBAEA,8BACI,4BAAgG,uGAC5F,8BACJ,iBACJ,iBACJ,iBAEA,8BACI,8BACI,8BACI,iCAA8C,wFAC1C,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,gCA5EqF,iFAyBrD,oEDlBpC,iBAyBC,WAAmBoV,EAA+BwoB,EAAuCv4B,EAAsCE,EACtH84B,EAA8DR,EAAwEr4B,GAD5H,KAAA4P,aAA+B,KAAAwoB,oBAAuC,KAAAv4B,eAAsC,KAAAE,kBACtH,KAAA84B,4BAA8D,KAAAR,iCAAwE,KAAAr4B,kBAjBrI,KAAA+4B,oBAAmD,IAAI,EAAA55B,aAEjE,KAAAqR,QAAkB,KAClB,KAAAwoB,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASt3B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,KAG/G,KAAAiR,WAA4C,CAAE,MAAS,EAAA6kB,yBAAyBc,iBAAkB,UAAa13B,KAAKgU,UAAW,WAAc,I,OAW7I,YAAA/T,SAAA,WACCD,KAAK23B,kBAAoB,IAAI,EAAAhmB,QAC7B3R,KAAKm3B,0BAA0BK,cAAcx3B,KAAKs3B,kBAGnD,YAAAzjB,YAAA,WACC7T,KAAK23B,kBAAkBb,eAGxB,YAAAc,qBAAA,WACC53B,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBiB,gBAAiB,UAAa,GAAI,WAAc,MAGvI,YAAAC,cAAA,SAAcj2B,EAAiBzF,GAC9B4D,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBkB,cAAe,UAAaj2B,EAAM,WAAc,MAGvI,YAAAk2B,oBAAA,SAAoBl2B,EAAiBzF,GAArC,WAEC4D,KAAK02B,kBAAoB12B,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CACtEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAK02B,kBAAkBpoB,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,+BAAiC,IAAMe,EAAK+F,MAAMuE,eAAiB,IACxInM,KAAK02B,kBAAkBpoB,QAAQ1K,KAAO,CAAE,cAAiB/B,EAAM,cAAiB7B,KAAK6D,eACrF7D,KAAK02B,kBAAkBpoB,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,uBACxEd,KAAK02B,kBAAkBpoB,QAAQvC,KAAO,EAAAqE,WAAWC,OAEzBrQ,KAAK02B,kBAAkBpoB,QAASU,UAAUpO,WAAU,SAAAgD,GAC3E,EAAKie,oBAAoBje,EAAKC,cAAcvH,KAAMsH,EAAKo0B,mBAIzD,YAAAnW,oBAAA,SAAoB5U,EAA2BpL,GAA/C,WAEC7B,KAAK1B,gBAAgBujB,oBAAoB5U,EAAmBpL,EAAKvF,MAAM2N,MAAK,SAAArG,GAC3E,EAAK+zB,kBAAkBvqB,KAAKxJ,GAExBA,GACH,EAAKC,cAAc4M,WAAW/I,OAAO,EAAK7D,cAAc4M,WAAWlE,QAAQ1K,GAAO,GAGnF,EAAKw1B,oBAAoBve,KAAK,EAAKjV,kBAEjCwG,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA4sB,MAAA,WACCl3B,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBpmB,oBAAqB,UAAaxQ,KAAKgU,UAAW,WAAc,MAGvJ,YAAAzJ,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA/ErCzS,GAA8B,qS,iCAA9BA,EAA8B,40CClB3C,4BACI,8BAEA,gCAiFJ,kB,MAnFS,oDAEgB,sD,ilBDUzB,GAKa,EAAAA,kC,gIElBb,WAGA,GAFA,MAEA,QAKA,GAFA,MAEA,QAEA,GADA,OACA,Q,yFCHgB,6BAAqE,YAAW,kB,6BAAX,+C,oCDMrF,aAwBC,WACQqW,EACCipB,EACAR,EACAt4B,EACAC,GAJD,KAAA4P,aACC,KAAAipB,4BACA,KAAAR,iCACA,KAAAt4B,kBACA,KAAAC,kBArBC,KAAA+4B,oBAAmD,IAAI,EAAA55B,aAEjE,KAAAqR,QAAkB,KAClB,KAAAmpB,aAA0B,KAC1B,KAAAX,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASt3B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,yCAA0C,QAAU,EAAM,SAAW,KAG9G,KAAAiR,WAA4C,CAAE,MAAS,EAAA6kB,yBAAyBiB,gBAAiB,UAAa,GAAI,WAAc,I,OAchI,YAAA53B,SAAA,WACCD,KAAKk4B,aAAa,aAClBl4B,KAAKm3B,0BAA0BK,cAAcx3B,KAAKs3B,kBAGnD,YAAA5sB,gBAAA,WAEK1K,KAAKm4B,yBACRn4B,KAAKm4B,wBAAwBjkB,WAI/B,YAAAJ,eAAA,sBAEC9T,KAAK1B,gBAAgBojB,iBAAiB1hB,KAAK6D,cAAcvH,KAAM0D,KAAKi4B,cAAchuB,MAAK,SAAArG,GACtF,EAAKC,cAAc4M,WAAW1M,KAAKH,GAEnC,EAAK+yB,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,KAEvI,EAAKL,oBAAoBve,KAAK,EAAKjV,kBACjCwG,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA4tB,aAAA,SAAansB,GAEX/L,KAAKi4B,aADO,SAATlsB,EACiB,IAAI,EAAAqsB,cAAc,GAAIrsB,EAAM/L,KAAK3B,gBAAgBuX,SAAU5V,KAAK3B,gBAAgBuX,UAAU,GAAO,GAAO,GAAO,GAElH,UAAT7J,EACY,IAAI,EAAAssB,iBAAiB,GAAItsB,EAAM/L,KAAK3B,gBAAgBuX,SAAU5V,KAAK3B,gBAAgBuX,UAAU,GAAO,GAAO,GAAO,GAGlH,IAAI,EAAA6C,UAAU,GAAI1M,EAAM/L,KAAK3B,gBAAgBuX,SAAU5V,KAAK3B,gBAAgBuX,UAAU,GAAO,GAAO,GAAO,IAIjI,YAAA0iB,YAAA,WAEC,IAAIC,GAAuB,EAM3B,OAJIv4B,KAAKm4B,0BACRI,EAAcv4B,KAAKm4B,wBAAwB/jB,aAGxCmkB,GAOL,YAAApI,OAAA,WACCnwB,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,MAGxI,YAAAntB,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCArFrCxS,GAAoC,6N,iCAApCA,EAAoC,uE,OAAA,K,cAgBrC,EAAAa,yBAAuB,G,kkCClCnC,4BAII,+BAAwC,2CAAY,EAAAmb,oBAChD,4BACI,4BACI,8BAEA,4BACI,yBACI,4BACJ,iBACJ,iBAEA,4BACI,6BACI,6BACI,gCAAmG,wCAAS,EAAAokB,aAAa,gBACrH,8BACJ,iBACA,gCAAiG,wCAAS,EAAAA,aAAa,cACnH,8BACJ,iBACA,gCAA+F,wCAAS,EAAAA,aAAa,YACjH,8BACJ,iBACA,gCAA8F,wCAAS,EAAAA,aAAa,WAChH,8BACJ,iBACA,gCAAiG,wCAAS,EAAAA,aAAa,cACnH,8BACJ,iBACA,gCAA8F,wCAAS,EAAAA,aAAa,WAChH,8BACJ,iBACJ,iBACJ,iBACJ,iBAEA,gCAEI,0CAAoI,uEAA6B,iBAEjK,6BACI,8BAII,8BACI,iCAA8C,wCAAS,EAAA/H,YACnD,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAzDqB,oDAWkD,iGAGA,+FAGA,6FAGA,4FAGA,+FAGA,4FASlC,mDAA0B,wBAA1B,CAA0B,0CAA1B,CAA0B,4BAWe,2D,sqCDxC9E,GAKa,EAAAr4B,wC,2HElBb,SACA,Q,OAwBA,iBASE,aACEkI,KAAKw4B,UA7BA,SAACC,GACN,GAAGA,EAAEnkB,MAGD,OAFwC,IAA1BmkB,EAAEnkB,MAAM/H,QAAQ,KAGnB,KAEA,CACHmsB,uBAAwB,CACnB3gB,OAAO,K,OAuB1B,YAAA4gB,SAAA,SAASF,GACP,OAAOz4B,KAAKw4B,UAAUC,I,iCARbjgC,I,iCAAAA,EAA+B,yFAJ/B,CACT,CAAEogC,QAAS,EAAAC,cAAeC,YAAatgC,EAAiCugC,OAAO,Q,EAHnF,GAMa,EAAAvgC,mC,8HC/Bb,WAIA,GAHA,MAGA,QAEA,SAOA,GAJA,MAEA,OAEA,Q,kGCRgB,6BAAqE,YAAW,kB,6BAAX,+C,sBAOjE,4BAA6D,6BAAwE,iBAAE,6BAAgD,kB,sBACvL,4BAA2D,6BAAwE,iBAAE,6BAAmD,kB,sBACxL,4BAAyD,6BAAwE,iBAAE,6BAAiD,kB,sBACpL,4BAA2D,6BAAwE,iBAAE,6BAAmD,kB,sBACxL,4BAAwD,6BAAwE,iBAAE,6BAAgD,kB,sBAClL,4BAAwD,6BAAwE,iBAAE,6BAAgD,kB,mDAUlL,4CAAuE,uGAA0D,iB,gCAA1D,sCAAyB,kCDVpH,iBAuBC,WAAmB0V,EACVipB,EACAR,EACAt4B,EACAC,GAJU,KAAA4P,aACV,KAAAipB,4BACA,KAAAR,iCACA,KAAAt4B,kBACA,KAAAC,kBAlBC,KAAA+4B,oBAAmD,IAAI,EAAA55B,aAEjE,KAAAqR,QAAkB,KAClB,KAAAiD,WAA4C,CAAE,MAAS,EAAA6kB,yBAAyBkB,cAAe,UAAa93B,KAAKgU,UAAW,WAAc,IAC1I,KAAAsjB,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASt3B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,uCAAwC,QAAU,EAAM,SAAW,K,OAa5G,YAAAb,SAAA,WACCD,KAAKm3B,0BAA0BK,cAAcx3B,KAAKs3B,kBAGnD,YAAA5sB,gBAAA,aAIA,YAAAmJ,YAAA,aAGA,YAAAC,eAAA,sBAEC9T,KAAK1B,gBAAgBsjB,oBAAoB5hB,KAAK6D,cAAcvH,KAAM0D,KAAKgU,WAAW/J,MAAK,SAAArG,GAEtF,IAAK,IAAIL,EAAI,EAAGA,EAAI,EAAKM,cAAc4M,WAAWxP,OAAQsC,IAAK,CAC9D,IAAI1B,EAAO,EAAKgC,cAAc4M,WAAWlN,GACzC,GAAI1B,EAAKvF,OAASsH,EAAKtH,KAAM,CAC5BE,OAAOw8B,OAAOn3B,EAAM+B,GACpB,OAIF,EAAK+yB,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,KAEvI,EAAKL,oBAAoBve,KAAK,EAAKjV,kBACjCwG,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAguB,YAAA,WASC,OAAO,GAGR,YAAAnI,OAAA,WACCnwB,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,MAGxI,YAAAuB,KAAA,WACCj5B,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,MAGxI,YAAAntB,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA7ErC7R,GAAkC,6N,iCAAlCA,EAAkC,qE,OAAA,K,cAgBnC,EAAAE,yBAAuB,G,6rCCtCnC,4BAEI,+BAAwC,sFAA0B,EAAAmb,oBAC9D,4BACI,4BACI,8BAEA,4BACI,yBACI,4BAAqE,YACzE,iBAEA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACJ,iBAIA,gCAEI,yCAAmK,oEAA0B,iBAG7L,8CAEA,8BACI,8BAII,8BACI,iCAA8C,wCAAS,EAAAqc,YACnD,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAGJ,iB,MA7CqB,oDAIwE,+EAGnD,mEACA,iEACA,+DACA,iEACA,8DACA,8DAOL,mDAAyB,+CAAzB,CAAyB,uCAAzB,CAAyB,yBAGtB,+EAWsC,2D,26CDrB9E,GAKa,EAAA13B,sC,qHEtBb,WACA,OASA,GAFA,MAEA,Q,GACA,OACA,O,wECAwB,4BAA6E,YAA6B,kB,uBAA7B,4DDMrG,iBA0CI,WAAqByF,EAA2CgQ,EAAgCoF,EAAgCqjB,GAA3G,KAAAz4B,mBAA2C,KAAAgQ,aAAgC,KAAAoF,MAAgC,KAAAqjB,iCALtH,KAAAjjB,gBAAkB,IAAI,EAAAjW,aAChC,KAAAqR,QAAkB,KAClB,KAAAmD,MAAgB,OAChB,KAAAF,WAA4C,CAAC,MAAQ,EAAA6kB,yBAAyBsC,iBAAkB,UAAYl5B,KAAKgU,UAAW,WAAa,I,OAKzI,YAAA/T,SAAA,aAIA,YAAAyK,gBAAA,WACI1K,KAAKiS,MAAQ,OACbjS,KAAKsT,IAAIK,iBAGb,YAAAE,YAAA,aAIA,YAAAC,eAAA,aAIA,YAAAI,QAAA,WACIlU,KAAKiS,MAAQ,QAGjB,YAAAkC,gBAAA,SAAgBrP,GACZ9E,KAAKiS,MAAQ,QAyBjB,YAAAknB,sBAAA,WACIn5B,KAAK22B,+BAA+B3kB,cAAc,CAAC,MAAQ,EAAA4kB,yBAAyBsC,iBAAkB,UAAYl5B,KAAKgU,UAAW,WAAc,M,iCA5D3Itb,GAAyB,2K,iCAAzBA,EAAyB,sjBCnDtC,4BAAgD,sDAAsB,EAAAyb,gBAAA,MAElE,0BACI,4BACI,4BACI,4BACJ,iBACJ,iBACA,4BACI,4BACI,4BACI,2BACI,6BACJ,iBAEA,gCAAyD,wCAAS,EAAAglB,2BAC9D,6BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAvBwB,sCAYI,uE,2nBDUZ,CACR,EAAAvkB,QAAQ,eAAgB,CACpB,EAAA3C,MAAM,aACF,EAAAtP,MAAM,CAAE,QAAW,KAErB,EAAAsP,MAAM,OACJ,EAAAtP,MAAM,CAAE,QAAW,KAErB,EAAAkS,WAAW,eAAgB,EAAAX,QAAQ,UACnC,EAAAW,WAAW,eAAgB,EAAAX,QAAQ,YAEzC,EAAAU,QAAQ,YACJ,CACA,EAAAC,WACI,SAAU,CACV,EAAAlS,MAAM,CAAE,QAAW,IACnB,EAAAuR,QAAQ,QAAS,EAAAvR,MAAM,CAAE,QAAW,OAGxC,EAAAkS,WACI,SAAU,CACV,EAAAlS,MAAM,CAAE,QAAW,IACnB,EAAAuR,QAAQ,MAAO,EAAAvR,MAAM,CAAC,QAAW,a,EA1BjD,GAiCa,EAAAjK,6B,sHEnDb,WACA,OAWA,GAJA,MACA,MAGA,QACA,SAIA,GAHA,MAEA,OACA,Q,iGCZY,6BAAqE,YAAW,kB,6BAAX,+C,yBAuBrC,yBACI,6BAAsD,iBAAC,sCAAkE,iBAC7H,kB,uBAD8E,6C,yBAU9E,yBAA0D,YAAqB,kB,uBAArB,6C,mDAF9D,yBACI,yBAAI,YAAe,iBACnB,8BACA,4BACI,2BAAiD,uHAAyC,iBAC1F,2BAAoD,yHAA2C,iBACnG,iBACJ,iB,0BANQ,2CACA,6D,mDAUJ,yBACI,+BAAmB,2FAAnB,iBACJ,iB,8CADuB,+CAA+B,mCAA/B,CAA+B,uCD/BlG,iBAmDC,WAAmBwV,EAAgCoF,EAAgCqjB,EAC1Ex4B,EAAsCE,EAA8C84B,EACpF74B,GAFU,KAAA4P,aAAgC,KAAAoF,MAAgC,KAAAqjB,iCAC1E,KAAAx4B,eAAsC,KAAAE,kBAA8C,KAAA84B,4BACpF,KAAA74B,kBAhBC,KAAAoV,gBAAkB,IAAI,EAAAjW,aAChC,KAAAqR,QAAkB,KAElB,KAAAmD,MAAgB,OAChB,KAAAmnB,sBAAuB,EACvB,KAAA9B,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASt3B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,uCAAwC,QAAU,EAAM,SAAW,GAC1G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,4CAA6C,QAAU,EAAM,SAAW,K,OASjH,YAAAb,SAAA,WACCD,KAAKm3B,0BAA0BK,cAAcx3B,KAAKs3B,iBAClDt3B,KAAKq5B,WAAa,IAAI,EAAAt8B,KAAK,GAAIiD,KAAK3B,gBAAgBuX,SAAU5V,KAAK3B,gBAAgBuX,WAGpF,YAAAlL,gBAAA,WACC1K,KAAKiS,MAAQ,OACbjS,KAAKsT,IAAIK,iBAGV,YAAAE,YAAA,aAIA,YAAAC,eAAA,aAIA,YAAAI,QAAA,WACClU,KAAKiS,MAAQ,QAGd,YAAAkC,gBAAA,SAAgBrP,GACf9E,KAAKiS,MAAQ,QAGd,YAAAmC,QAAA,WACC,GAAIpU,KAAKq5B,WAAW/8B,MAAQ0D,KAAKq5B,WAAW/8B,KAAK2E,OAAS,EAAG,CAG5D,IAA2C,IAAvCjB,KAAKq5B,WAAW/8B,KAAKiQ,QAAQ,KAChC,OAAO,EAIR,IAAK,IAAIhJ,EAAI,EAAGA,EAAIvD,KAAKq5B,WAAWzxB,MAAMyM,aAAapT,OAAQsC,IAC9D,GAA8E,IAA1EvD,KAAKq5B,WAAWzxB,MAAMyM,aAAa9Q,GAAG+Q,MAAMglB,QAAQ,MAAO,IAAIr4B,OAClE,OAAO,EAKT,OAAO,EAEH,OAAIjB,KAAKq5B,WAAW/8B,MAAQ0D,KAAKq5B,WAAW/8B,KAAKiQ,QAAQ,MACtD,GAMT,YAAAgtB,cAAA,sBAECv5B,KAAK1B,gBAAgByjB,2BAA2B/hB,KAAKgU,UAAUmH,SAAS7e,KAAM0D,KAAKq5B,YAAYpvB,MAAK,SAAArG,GAEnG,EAAKoQ,UAAUmH,SAASzU,SAAS3C,KAAKH,GAEtC,EAAK8P,gBAAgBoF,KAAK,EAAK9E,WAE/B,EAAKwlB,kBAEL,EAAKJ,sBAAuB,KAE1B/uB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAmvB,iBAAA,SAAiBJ,GAAjB,WAECr5B,KAAK1B,gBAAgB4jB,8BAA8BliB,KAAKgU,UAAUmH,SAAS7e,KAAM+8B,EAAW/8B,MAAM2N,MAAK,SAAArG,IAExC,IAA1D,EAAKoQ,UAAUmH,SAASzU,SAAS6F,QAAQ8sB,IAC5C,EAAKrlB,UAAUmH,SAASzU,SAASgB,OAAO,EAAKsM,UAAUmH,SAASzU,SAAS6F,QAAQ8sB,GAAa,GAG/F,EAAK3lB,gBAAgBoF,KAAK,EAAK9E,WAE/B,EAAKwlB,qBAEHnvB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAovB,iBAAA,SAAiBL,GAAjB,WACCr5B,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,+BAAiC,IAAMu4B,EAAWzxB,MAAQ,IACxH5H,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,uBACjEd,KAAKkO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAElBrQ,KAAKkO,WAAWI,QAASU,UAAUpO,WAAU,SAAAgD,GACpE,EAAK61B,iBAAiBJ,OAIxB,YAAAM,eAAA,SAAeN,GAEd,IAAMpnB,EAAQ,CACb,MAAS,EAAA2kB,yBAAyB+C,eAClC,UAAa35B,KAAKgU,UAClB,WAAcxB,KAAKyG,MAAMzG,KAAKC,UAAU4mB,KAGzCr5B,KAAK22B,+BAA+B3kB,cAAcC,IAGnD,YAAAunB,gBAAA,WACCx5B,KAAKq5B,WAAW/8B,KAAO,GACvB0D,KAAKq5B,WAAWzxB,MAAQ5H,KAAK3B,gBAAgBuX,SAC7C5V,KAAKq5B,WAAW/pB,YAActP,KAAK3B,gBAAgBuX,UAGpD,YAAAgkB,iBAAA,WACC55B,KAAKw5B,kBACLx5B,KAAKo5B,sBAAuB,GAG7B,YAAAD,sBAAA,WACCn5B,KAAKo5B,sBAAuB,GAG7B,YAAAlC,MAAA,WACCl3B,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBkB,cAAe,UAAa93B,KAAKgU,UAAW,WAAc,MAGjJ,YAAAzJ,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA5JrCvR,GAA0B,4S,iCAA1BA,EAA0B,grC,2BCpDvC,4BAEI,+BAAwC,wFACpC,+BAEI,8BAEA,4BACI,yBACI,iCAA6D,YAAoC,iBACrG,iBACJ,iBACA,4BAAgD,sDAAsB,EAAAob,gBAAA,MAClE,2BACI,6BACI,6BACI,6BACJ,iBACJ,iBACA,6BACI,+BACI,8BACI,gCACI,6BACI,0BACI,0BACI,8BACJ,iBACA,+BAGA,6BACI,8BACJ,iBACJ,iBACJ,iBACA,6BACI,+BAQA,0BACI,0BACI,gCAAmB,wEAAnB,iBACJ,iBACA,+BAGA,6BACI,iCAAsE,wCAAS,EAAAolB,mBAC3E,8BACJ,iBAOJ,iBACJ,iBAYJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEA,6BACI,wBAEA,6BACI,8BACI,iCAA8C,wCAAS,EAAArC,WACnD,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,MA3FiB,oDAIgE,8EAG7C,qDACf,iDAe2B,wEASJ,qEAUuB,yDAA6B,uCAEhD,uEAI8C,uD,uyBD9BjF,CACX,EAAAtiB,QAAQ,eAAgB,CACvB,EAAA3C,MAAM,aACL,EAAAtP,MAAM,CAAE,QAAW,KAEpB,EAAAsP,MAAM,OACL,EAAAtP,MAAM,CAAE,QAAW,KAEpB,EAAAkS,WAAW,eAAgB,EAAAX,QAAQ,UACnC,EAAAW,WAAW,eAAgB,EAAAX,QAAQ,YAEpC,EAAAU,QAAQ,YACP,CACC,EAAAC,WACC,SAAU,CACV,EAAAlS,MAAM,CAAE,QAAW,IACnB,EAAAuR,QAAQ,QAAS,EAAAvR,MAAM,CAAE,QAAW,OAGrC,EAAAkS,WACC,SAAU,CACV,EAAAlS,MAAM,CAAE,QAAW,IACnB,EAAAuR,QAAQ,MAAO,EAAAvR,MAAM,CAAE,QAAW,a,EA1BvC,GAiCa,EAAA5J,8B,wHEpDb,SACA,OAWA,GALA,MAIA,MACA,QAEA,S,GACA,O,wFCdI,6BAAqE,YAAW,kB,6BAAX,+CDgBzE,iBA0CC,WAAmBmV,EAAgCipB,EAA8DR,EACxGt4B,EAA8CC,GADpC,KAAA4P,aAAgC,KAAAipB,4BAA8D,KAAAR,iCACxG,KAAAt4B,kBAA8C,KAAAC,kBAdvD,KAAAwQ,QAAkB,KAClB,KAAAiD,WAA4C,CAAE,MAAS,EAAA6kB,yBAAyBkB,cAAe,UAAa93B,KAAKgU,UAAW,WAAc,IAC1I,KAAAsjB,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASt3B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,uCAAwC,QAAU,EAAM,SAAW,GAC1G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,4CAA6C,QAAU,EAAM,SAAW,GAC/G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,yCAA0C,QAAU,EAAM,SAAW,K,OAS9G,YAAAb,SAAA,WACCD,KAAKm3B,0BAA0BK,cAAcx3B,KAAKs3B,kBAGnD,YAAA5sB,gBAAA,aAIA,YAAAmJ,YAAA,aAGA,YAAAC,eAAA,sBAEC9T,KAAK1B,gBAAgB2jB,8BAA8BjiB,KAAKgU,UAAUmH,SAAS7e,KAAM0D,KAAKq5B,YAAYpvB,MAAK,SAAArG,GAEtG,IAAMsG,EAAQ,EAAK8J,UAAUmH,SAASzU,SAAS+F,WAAU,SAAAotB,GAAK,OAAAA,EAAEv9B,OAASsH,EAAKtH,SAE/D,IAAX4N,IACH,EAAK8J,UAAUmH,SAASzU,SAASwD,GAAStG,GAG3C,EAAK+yB,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBsC,iBAAkB,UAAa,EAAKllB,UAAW,WAAc,UACjJ3J,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAguB,YAAA,WAQC,OAAO,GAGR,YAAAnI,OAAA,WACCnwB,KAAK22B,+BAA+B3kB,cAAc,CAAE,MAAS,EAAA4kB,yBAAyBsC,iBAAkB,UAAal5B,KAAKgU,UAAW,WAAc,QAGpJ,YAAAzJ,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAlErC1R,GAA4B,6N,iCAA5BA,EAA4B,yzB,2BCxCzC,4BACI,8BAEA,+BAAyC,yFAA8B,EAAAkb,oBAEnE,4BACI,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,+BACI,6BACI,6BACI,6BACI,6BACJ,iBACJ,iBACA,8BACI,+BACI,gCAAqC,wEAArC,iBACJ,iBACJ,iBACJ,iBAEA,0CAAiB,uEAA6D,iBAE9E,6BACI,wBAEA,8BACI,8BACI,iCAA8C,wCAAS,EAAAqc,YACnD,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAGJ,iB,+BAhDS,oDAqB0C,4CAAiB,6BAK/B,wDAUyC,oD,uNDhBjE,CACX,EAAAvb,QAAQ,YACP,CACC,EAAAC,WACC,SAAU,CACV,EAAAlS,MAAM,CAAE,QAAW,IACnB,EAAAuR,QAAQ,QAAS,EAAAvR,MAAM,CAAE,QAAW,OAGrC,EAAAkS,WACC,SAAU,CACV,EAAAlS,MAAM,CAAE,QAAW,IACnB,EAAAuR,QAAQ,MAAO,EAAAvR,MAAM,CAAE,QAAW,a,EAhBvC,GAuBa,EAAA/J,gC,4GExCb,aAMA,SACA,SACA,SAKA,SAEA,aA+BC,WAAmBgK,EAAwCk3B,EAAYrwB,EAAmBswB,EAA2B3C,EAAiDj5B,EAAqCI,GAAtF,KAAA64B,sBAAiD,KAAAj5B,eAAqC,KAAAI,cAC1M,IAAMyE,EAAgByG,EAEtBzJ,KAAK4C,mBAAqBA,EAC1B5C,KAAKgD,cAAgBA,EACrBhD,KAAK85B,MAAQA,EAEb95B,KAAKg6B,YAAc94B,EAAGuC,UAAUT,EAAchC,mBAAmB,IACjEhB,KAAK+5B,UAAYA,EAEjB/5B,KAAKi6B,OAAS/4B,EAAGxB,OAAOw6B,SAAS,CAAEn4B,EAAiB4D,SAAS,EAAAjI,qBAAsBqE,EAAiB6D,SAAW7D,EAAiBoF,YAAY,EAAAxJ,sBAAuBw8B,YAAW,SAACluB,EAAGC,GAAM,WAA1KhL,CAA+KlB,KAAKg6B,aAkapM,OA/ZQ,YAAA10B,UAAP,WACC,OAAOtF,KAAKi6B,QAGN,YAAAG,QAAP,WACC,OAAOp6B,KAAKgD,cAAc1G,MAGpB,YAAA2G,cAAP,SAAqB6N,GACpB,IAAIupB,EAAWr6B,KAAKsF,YAAY3B,MAAK,SAAChE,GAAW,OAAOA,EAAKiE,KAAKC,gBAAkBiN,KAEpF,OAAgB,MAAZupB,EAEK,KAGF,IAAI,EAAAC,iBAAiBt6B,KAAK4C,mBAAoB5C,KAAMA,KAAK4C,mBAAmBsD,wBAAwB4K,GAAUupB,EAAUr6B,KAAKo3B,oBAAqBp3B,KAAK7B,aAAc6B,KAAKzB,cAG3K,YAAAg8B,sBAAP,SAA6BC,EAASC,GAAtC,WACKtU,EAAOqU,EAAG76B,OAAOyC,UAEjBs4B,EAAYF,EAAG54B,OAAO,KAAKmE,QAAQ,sBAAsB,GAEzD40B,EAAUH,EAAG54B,OAAO,KAAKmE,QAAQ,sBAAsB,GAMvD60B,EAA0B,EAAA5zB,mBAAmBhH,KAAKgD,cAAc4E,MAAMuE,eAJ3C,IAK3B0uB,EAAyBC,GACzBC,EAAyB5U,EAAK7jB,EAAIw4B,GAClCF,EAL4B,MAO9BA,EAP8B,IAQ9BC,EAAkBC,GAClBC,EAAkB5U,EAAK7jB,EAXM,IAc/B,IAAI04B,EAAY7U,EAAK5jB,MACjB04B,EAAYL,EAdU,GAgBtBK,EAAYD,IACfA,EAAYC,GAIbN,EAAQ/4B,OAAO,QAAQmE,QAAQ,yBAAyB,GACtDlE,KAAK,IAAKskB,EAAK9jB,GACfR,KAAK,IAAKskB,EAAK7jB,GACfK,MAAM,cAAe,eACrBd,KAAK,OAAQ,QACbA,KAAK,YAAa,IAClBoF,KAAK,KAGPyzB,EAAU94B,OAAO,iBAAiBmE,QAAQ,0BAA0B,GAC/DlE,KAAK,YAhCqB,IAiC1BA,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBA,KAAK,IAAKskB,EAAK9jB,EAlCM,IAmCrBR,KAAK,IAAKk5B,GACVl5B,KAAK,QAAS+4B,GACd/4B,KAAK,SAAUg5B,GACfj5B,OAAO,WACPC,KAAK,QAAS,gCACdA,KAAK,cAAe,SACpBA,KAAK,aAAc,QACnBc,MAAM,iBAAkB,UACxBA,MAAM,UAAW,cACjBA,MAAM,QAAS,QAEfA,MAAM,SAAUZ,EAAiB6D,SAAW,EAAI,MAChDs1B,MAAK,SAACC,GAAW,SAAKn4B,cAAc4E,MAAMuE,kBAG/CwuB,EAAQ/4B,OAAO,QAAQmE,QAAQ,yBAAyB,GACtDlE,KAAK,KAAMskB,EAAK9jB,GAChBR,KAAK,KAAMskB,EAAK7jB,EArDa,IAsD7BT,KAAK,KAAMskB,EAAK9jB,EAAI24B,GACpBn5B,KAAK,KAAMskB,EAAK7jB,EAvDa,IAwD7BT,KAAK,SAAU,QACfA,KAAK,eAAgB,IAEvB,IAAIu5B,EAAcT,EAAQh7B,OAAOyC,UAgBjC,OAfAu4B,EAAQ94B,KAAK,YAAa,gBAAkBu5B,EAAY54B,OAAS,KAGjEk4B,EAAU94B,OAAO,QAAQmE,QAAQ,0BAA0B,GACzDlE,KAAK,YAAai5B,IAClBj5B,KAAK,cAAe,QACpBA,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBA,KAAK,OAAQ,QACbA,KAAK,IAAKskB,EAAK9jB,GACfR,KAAK,IAAKskB,EAAK7jB,GACf2E,KAAKwzB,GAEPC,EAAU74B,KAAK,YAAa,gBAAuC,IAArBu5B,EAAY54B,OAAe,KAElEm4B,GAGR,YAAAU,sBAAA,SAAsBvqB,GACrB,IAAIxP,EAAqBtB,KAAK4C,mBAAmBsD,wBAAwB4K,GAE3C,MAA1BxP,EAAI6I,qBACP7I,EAAI6I,mBAAqBnK,KAAK4C,mBAAmBS,4BAA4B/B,IAM9E,IAHE,IAAIgC,EAAyBhC,EAAI6I,mBAE/BD,EAAQ,KACH3G,EAAI,EAAGA,EAAID,EAAarC,SAAUsC,EACtCD,EAAaC,KAAOvD,KAAKo6B,YAC5BlwB,EAAQ3G,GAQV,OAJa,MAAT2G,GACH5G,EAAaoE,OAAOwC,EAAO,GAGrB5G,GAGA,YAAAg4B,cAAR,SAAsBH,EAAQI,EAAc33B,GAE1C1C,EAAGC,OAAO,gBACNwB,MAAM,UAAW,IAGf,YAAA64B,cAAR,SAAsB12B,EAAYy2B,EAAc33B,GAE7C1C,EAAGC,OAAO,mBAAmB+5B,KAAKl7B,KAAKgD,cAAc4E,MAAMuE,gBAC3DjL,EAAGC,OAAO,uBAAuB+5B,KAAKl7B,KAAKgD,cAAc1G,MAEzD4E,EAAGC,OAAO,uBAAuB+5B,KAAKt3B,EAAKA,KAAKgE,OAChD1G,EAAGC,OAAO,2BAA2B+5B,KAAKt3B,EAAKA,KAAKC,eAEpD3C,EAAGC,OAAO,+BAA+B+5B,KAAKl7B,KAAK4C,mBAAmB8G,uBAAuB1J,KAAKgD,cAAcF,kBAAkB8E,MAAMuE,gBACxIjL,EAAGC,OAAO,mCAAmC+5B,KAAKl7B,KAAK4C,mBAAmB8G,uBAAuB1J,KAAK4C,mBAAmBsD,wBAAwBtC,EAAKA,KAAKC,eAAef,kBAAkB8E,MAAMuE,gBAElM,IACIsvB,EADmBv6B,EAAGC,OAAO,gBAAgBxB,OACN4I,wBAEvCkD,EAAM,CAACpJ,EAAGyC,EAAMM,MAAO9C,EAAGwC,EAAMO,OAK/BP,EAAMO,MAAQo2B,EAAgBj5B,OAJJ,GAI+BoG,SAAS8yB,gBAAgBC,eAGrFlwB,EAAInJ,EAAIwC,EAAMO,MAAQo2B,EAAgBj5B,OAPT,IAW1BsC,EAAMM,MAAQq2B,EAAgBl5B,MAVJ,EAU8BqG,SAAS8yB,gBAAgBE,cAGpFnwB,EAAIpJ,EAAIyC,EAAMM,MAAQq2B,EAAgBl5B,MAbT,GAgB/BrB,EAAGC,OAAO,gBACPwB,MAAM,OAAQ8I,EAAIpJ,EAAI,MACtBM,MAAM,MAAO8I,EAAInJ,EAAI,OAGnB,YAAAu5B,eAAR,SAAuBV,EAAQI,EAAc33B,GAE3C1C,EAAGC,OAAO,gBACNwB,MAAM,UAAW,GACjBA,MAAM,OAAQ,YACdA,MAAM,MAAO,aAGZ,YAAAX,OAAP,sBACKmC,EAAOnE,KACP87B,EAAgB97B,KAAKi6B,OAAOv2B,cAEhCxC,EAAGC,OAAO,sCAAsCC,SAC5CpB,KAAK+5B,WACR74B,EAAGC,OAAO,qCAAqCC,SAGhD,IAAIo5B,EAAKx6B,KAAK85B,MAAMiC,OAAO,IAAK,gBAAgBh2B,QAAQ,eAAe,GAAMlE,KAAK,YAAa7B,KAAKgD,cAAc1G,MAAMuF,KAAK,eAAgB7B,KAAK+5B,WAClJS,EAAG34B,KAAK,cAAe,cAEvB,IAAIm6B,EAAQxB,EAAG54B,OAAO,KAAKmE,QAAQ,oBAAoB,GAAMlE,KAAK,YAAa7B,KAAKgD,cAAc1G,MAGlG0/B,EAAMp6B,OAAO,KAAKmE,QAAQ,cAAc,GACtClE,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,eAAgB,KACrBiH,UAAU,QACVlF,KAAK5D,KAAKi6B,OAAOgC,SACjBC,KAAK,QAELr6B,KAAK,KAAK,SAACs5B,EAAQ53B,GACnB,MAAO,IAAM43B,EAAEgB,OAAO95B,EAAI,IAAO84B,EAAEgB,OAAQ,EACxC,KAAQhB,EAAEgB,OAAO75B,EAAI64B,EAAExyB,OAAOrG,GAAK,EACnC,IAAM64B,EAAExyB,OAAOtG,EACf,IAAO84B,EAAExyB,OAAQ,KAItB,IAAIyzB,EAAUJ,EAAMp6B,OAAO,KAAKmE,QAAQ,gBAAgB,GACxDq2B,EAAQtzB,UAAU,QAChBlF,KAAKk4B,GACLI,KAAK,QACLp9B,QAAO,SAASq8B,GAAU,MAAgC,cAAzBA,EAAEv3B,KAAKC,iBACxCkC,QAAQ,uBAAuB,GAC/BlE,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE94B,EAAKN,EAAiB4D,SAAW,KACzD9D,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE74B,EAAIP,EAAiB6D,SAAS,EAAI7D,EAAiBoF,WAAa,KACxFtF,KAAK,QAAQ,SAACs5B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAEv3B,KAAKE,uBAAiC,EAAA/F,4BAA8B,EAAAF,0BAA6B,EAAAG,6BAC9I6D,KAAK,QAASE,EAAiBs6B,YAC/Bx6B,KAAK,SAAUE,EAAiBoF,YAChCtF,KAAK,UAAU,SAACs5B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAEv3B,KAAKE,uBAAiC,KAAO,OAAU,QACtGjC,KAAK,KAAM,GACXA,KAAK,gBAAgB,SAACs5B,GAAW,OAAAA,EAAEv3B,KAAKC,iBACxChC,KAAK,kBAAkB,SAACs5B,GACxB,OAAiC,MAAjCA,EAAEv3B,KAAKE,0BAEPuE,GAAGtG,EAAiBu6B,yBAAyB,SAASx3B,EAAYlB,GAAYO,EAAKm3B,cAAcx2B,EAAO9E,KAAM4D,MAC3GyE,GAAGtG,EAAiBw6B,wBAAwB,SAASz3B,EAAYlB,GAAYO,EAAKq3B,cAAc12B,EAAO9E,KAAM4D,MAC7GyE,GAAGtG,EAAiBy6B,wBAAwB,SAAS13B,EAAYlB,GAAYO,EAAK03B,eAAe/2B,EAAO9E,KAAM4D,MAGnHw4B,EAAQtzB,UAAU,iBAChBlF,KAAKk4B,GACLI,KAAK,iBACLp9B,QAAO,SAASq8B,GAAU,MAAgC,cAAzBA,EAAEv3B,KAAKC,iBACxCkC,QAAQ,uBAAuB,GAC/BlE,KAAK,KAAK,SAACs5B,GACR,OAAAA,EAAE94B,EAAKN,EAAiBs6B,WAAa,KAExCx6B,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE74B,EAAIP,EAAiB6D,SAAS,EAAI7D,EAAiBoF,WAAa,KACxFtF,KAAK,YAAaE,EAAiB06B,kBAAoB,MACvD56B,KAAK,UAAU,SAACs5B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAEv3B,KAAKE,uBAAiC,KAAO,OAAU,QACtGjC,KAAK,gBAAgB,SAACs5B,GAAW,OAAAA,EAAEv3B,KAAKC,iBACxChC,KAAK,kBAAkB,SAACs5B,GAAW,OAAiC,MAAjCA,EAAEv3B,KAAKE,0BAC1CjC,KAAK,cAAe,cACpBA,KAAK,cAAe,QACjBA,KAAK,YAAaE,EAAiB06B,mBACnC56B,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBA,KAAK,QAASE,EAAiBs6B,YAC/Bx6B,KAAK,SAAUE,EAAiBoF,WAAa,GAChDvF,OAAO,WACJC,KAAK,QAAS,gCACdA,KAAK,OAAQ,SACbA,KAAK,SAAUE,EAAiBoF,WAAa,GAC7CxE,MAAM,aAAc,UACpBA,MAAM,iBAAkB,UACxBA,MAAM,UAAW,cACjBA,MAAM,QAAS,SACfA,MAAM,SAAWZ,EAAiBoF,WAAa,EAAK,MACpDxE,MAAM,QAASZ,EAAiBs6B,WAAa,MAC7CnB,MAAK,SAAUC,GACd,IAAI3T,EAAwC,MAAjC2T,EAAEv3B,KAAKE,uBAAiCK,EAAKvB,mBAAmB4G,oBAAoB2xB,EAAEv3B,KAAKE,wBAAwB8D,MAAMuE,eAAiBhI,EAAKnB,cAAc4E,MAAMuE,eAE9K,QADA,EAAAnF,mBAAmBwgB,EAAMzlB,EAAiB06B,mBAAsB16B,EAAiBs6B,WAAa,KAAK7U,EAAOA,EAAKkV,UAAU,EAAE,IAAM,OAC1HlV,KAERnf,GAAGtG,EAAiBu6B,yBAAyB,SAASx3B,EAAYlB,GAAYO,EAAKm3B,cAAcx2B,EAAO9E,KAAM4D,MAC9GyE,GAAGtG,EAAiBw6B,wBAAwB,SAASz3B,EAAYlB,GAAYO,EAAKq3B,cAAc12B,EAAO9E,KAAM4D,MAC7GyE,GAAGtG,EAAiBy6B,wBAAwB,SAAS13B,EAAYlB,GAAYO,EAAK03B,eAAe/2B,EAAO9E,KAAM4D,MAGnHo4B,EAAMp6B,OAAO,KAAKmE,QAAQ,SAAS,GACjC+C,UAAU,QACVlF,KAAKk4B,GACLI,KAAK,QACLp9B,QAAO,SAASq8B,GAAU,MAAgC,cAAzBA,EAAEv3B,KAAKC,iBACxCkC,QAAQ,qBAAqB,GAC7BlE,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE94B,EAAKN,EAAiB4D,SAAW,KACzD9D,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE74B,EAAKP,EAAiB6D,SAAW,KACzD/D,KAAK,QAAQ,SAACs5B,GAAW,OAAiC,MAAjCA,EAAEv3B,KAAKE,uBAAiC,EAAAhG,oBAAsB,EAAAF,qBACvFiE,KAAK,QAASE,EAAiB4D,UAC/B9D,KAAK,SAAUE,EAAiB6D,UAChC/D,KAAK,KAAM,GACXA,KAAK,UAAU,SAACs5B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAEv3B,KAAKE,uBAAiC,KAAO,OAAU,QACtGjC,KAAK,gBAAgB,SAACs5B,GAAW,OAAAA,EAAEv3B,KAAKC,iBACxChC,KAAK,kBAAkB,SAACs5B,GAAW,OAAiC,MAAjCA,EAAEv3B,KAAKE,0BAC1CiF,MAAK,SAASoyB,GACc,aAAxBA,EAAEv3B,KAAKC,gBACNs3B,EAAEv3B,KAAK6B,gBACV01B,EAAEv3B,KAAK4B,aAAe,CAAEnD,EAAG84B,EAAE94B,EAAIN,EAAiB4D,SAAW,EAAGrD,EAAG64B,EAAE74B,EAAgC,EAA5BP,EAAiB6D,SAAcrD,MAAmC,EAA5BR,EAAiB4D,SAAe,IAAKnD,OAAoC,EAA5BT,EAAiB6D,UAG7Ku1B,EAAEv3B,KAAK4B,aAAe,CAAEnD,EAAG84B,EAAE94B,EAAIN,EAAiB4D,SAAW,EAAGrD,EAAG64B,EAAE74B,EAAIP,EAAiB6D,SAAW,EAAGrD,MAAOR,EAAiB4D,SAAUnD,OAAQT,EAAiB6D,cAIrKyC,GAAGtG,EAAiBu6B,yBAAyB,SAASx3B,EAAYlB,GAAYO,EAAKm3B,cAAcx2B,EAAO9E,KAAM4D,MAC3GyE,GAAGtG,EAAiBw6B,wBAAwB,SAASz3B,EAAYlB,GAAYO,EAAKq3B,cAAc12B,EAAO9E,KAAM4D,MAC7GyE,GAAGtG,EAAiBy6B,wBAAwB,SAAS13B,EAAYlB,GAAYO,EAAK03B,eAAe/2B,EAAO9E,KAAM4D,MAGnH,IAmFI+2B,EAnFEgC,EAAuB,EAAvBA,EAAiC,GACnCC,EAASZ,EAAMp6B,OAAO,KAAKmE,QAAQ,yBAAyB,GAChE62B,EAAO9zB,UAAU,QAAQlF,KAAK5D,KAAKi6B,OAAOgC,SAASC,KAAK,QACtDn2B,QAAQ,4BAA4B,GACpClE,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAEgB,OAAO95B,EAAIs6B,EAAmB,KACtD96B,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAEgB,OAAO75B,EAAIP,EAAiB6D,SAAW,EAAI+2B,EAAoB,KACvF96B,KAAK,QAAS86B,GACd96B,KAAK,SAAU86B,GACf96B,KAAK,QAAQ,SAACs5B,GAAW,SAAKpB,UAAqD,MAAxCoB,EAAEgB,OAAOv4B,KAAKE,uBAAiC,EAAA/F,4BAA8B,EAAAF,0BAA6B,EAAAG,6BACvJ4+B,EAAO9zB,UAAU,QAAQlF,KAAK5D,KAAKi6B,OAAOgC,SAASC,KAAK,QACtDn2B,QAAQ,4BAA4B,GACpClE,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,KAAK,SAACs5B,GAAW,WAAOA,EAAEgB,OAAO95B,EAAIs6B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOxB,EAAEgB,OAAO75B,EAAIP,EAAiB6D,SAAW,EAAI+2B,EAAoB,EAA0B,EAApBA,EAAyB,GACtM,IAAOxB,EAAEgB,OAAQ,EAAI,KAAOhB,EAAEgB,OAAO75B,EAAIP,EAAiB6D,SAAW,EAAI+2B,EAAoB,EAAKA,EAAoB,GACtH,KAAOxB,EAAEgB,OAAO95B,EAAIs6B,EAAmB,EAAKA,EAAmB,GAAM,KAAOxB,EAAEgB,OAAO75B,EAAIP,EAAiB6D,SAAW,EAAI+2B,EAAoB,EAAIA,EAAoB,MAIzKX,EAAMp6B,OAAO,KAAKmE,QAAQ,0BAA0B,GAClD+C,UAAU,QACVlF,KAAKk4B,GACLI,KAAK,QACLp9B,QAAO,SAASq8B,GAAU,MAAgC,cAAzBA,EAAEv3B,KAAKC,iBACxCkC,QAAQ,+BAA+B,GACvClE,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE94B,EAAKN,EAAiB4D,SAAW,KACzD9D,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE74B,EAAKP,EAAiB6D,SAAW,KACzD/D,KAAK,QAASE,EAAiB4D,UAC/B9D,KAAK,SAAUE,EAAiB6D,UAChC/D,KAAK,OAAQ,SAGfm6B,EAAMp6B,OAAO,KAAKmE,QAAQ,wBAAwB,GAChD+C,UAAU,QACVlF,KAAKk4B,GACLI,KAAK,QACLp9B,QAAO,SAASq8B,GAAU,MAAgC,cAAzBA,EAAEv3B,KAAKC,iBACxCkC,QAAQ,6BAA6B,GACrClE,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE94B,EAAKN,EAAiB4D,SAAW,KACzD9D,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE74B,EAAKP,EAAiB6D,SAAW,KACzD/D,KAAK,QAASE,EAAiB4D,UAC/B9D,KAAK,SAAUE,EAAiB6D,UAChC/D,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,KACrBA,KAAK,mBAAoB,OACzBA,KAAK,gBAAgB,SAACs5B,GAAW,OAAAA,EAAEv3B,KAAKC,iBAG1Cm4B,EAAMp6B,OAAO,KAAKmE,QAAQ,mBAAmB,GAC3ClE,KAAK,cAAe,cACpBA,KAAK,YAAaE,EAAiB86B,iBACnCh7B,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBiH,UAAU,iBACVlF,KAAKk4B,GACLI,KAAK,iBACLn2B,QAAQ,sBAAsB,GAC9BlE,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE94B,EAAKN,EAAiB4D,SAAW,EAAK,KAC9D9D,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE74B,EAAKP,EAAiB6D,SAAW,EAAK,KAC9D/D,KAAK,QAASE,EAAiB4D,SAAW,GAAK,GAC/C9D,KAAK,SAAUE,EAAiB6D,SAAW,GAK3C/D,KAAK,UAAU,SAACs5B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAEv3B,KAAKE,uBAAiC,KAAO,OAAU,QACtGjC,KAAK,gBAAgB,SAACs5B,GAAW,OAAAA,EAAEv3B,KAAKC,iBACxChC,KAAK,kBAAkB,SAACs5B,GAAW,OAAiC,MAAjCA,EAAEv3B,KAAKE,0BAC1ClC,OAAO,WACPC,KAAK,QAAS,gCACdA,KAAK,cAAe,SACpBA,KAAK,aAAc,QACnBc,MAAM,iBAAkB,UACxBA,MAAM,UAAW,cACjBA,MAAM,QAASZ,EAAiB4D,SAAW,GAAK,EAAI,MACpDhD,MAAM,SAAUZ,EAAiB6D,SAAW,EAAI,MAChDs1B,MAAK,SAACC,GAAW,OAAAA,EAAEv3B,KAAKgE,SACxBS,GAAGtG,EAAiBu6B,yBAAyB,SAASx3B,EAAYlB,GAAYO,EAAKm3B,cAAcx2B,EAAO9E,KAAM4D,MAC3GyE,GAAGtG,EAAiBw6B,wBAAwB,SAASz3B,EAAYlB,GAAYO,EAAKq3B,cAAc12B,EAAO9E,KAAM4D,MAC7GyE,GAAGtG,EAAiBy6B,wBAAwB,SAAS13B,EAAYlB,GAAYO,EAAK03B,eAAe/2B,EAAO9E,KAAM4D,MAG/G5D,KAAK+5B,WACRiC,EAAMp6B,OAAO,KAAKmE,QAAQ,6BAA6B,GACrD+C,UAAU,QACVlF,KAAKk4B,GACLI,KAAK,QACLp9B,QAAO,SAASq8B,GAChB,MAAiC,cAAzBA,EAAEv3B,KAAKC,eAAkF,MAAjCs3B,EAAEv3B,KAAKE,0BAEvEiC,QAAQ,+BAA+B,GACvClE,KAAK,gBAAgB,SAACs5B,GAAW,OAAAA,EAAEv3B,KAAKC,iBACxChC,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE94B,EAAKN,EAAiB4D,SAAW,EAAM5D,EAAyC,yBAAI,KAC5GF,KAAK,KAAK,SAACs5B,GAAW,OAAAA,EAAE74B,EAA+C,GAA1CP,EAAiB+6B,yBAAgC/6B,EAAiB+6B,yBAAyB,KACxHn6B,MAAM,cAAe,eACrBA,MAAM,SAAU,WAChBA,MAAM,OAAQ,WACdA,MAAM,YAAaZ,EAAiB+6B,yBAA2B,MAC/D71B,KAAK,KACLoB,GAAG,SAAS,SAASvD,EAAOnF,GAAQwE,EAAKlB,cAActD,EAAKiE,KAAKC,eAAek5B,kCAElFpC,EAAU36B,KAAKu6B,sBAAsBC,EAAI,uBAGzCG,EAAU36B,KAAKu6B,sBAAsBC,EAAI,qBAIxBG,EAAQh7B,OAAOyC,UAAUI,QAtc9B,EAAAmD,SAAmB,IACnB,EAAAC,SAAmB,GACnB,EAAAi3B,gBAA0B,EAC1B,EAAAC,yBAAmC,GAEnC,EAAAT,WAAqB,IACrB,EAAAl1B,WAAqB,GACrB,EAAAs1B,kBAA4B,EAE5B,EAAAH,wBAA0B,aAE1B,EAAAC,uBAAyB,YAEzB,EAAAC,uBAAyB,aA4bxC,EA3cA,GAAa,EAAAz6B,oB,mHCfb,KACA,MACA,MAEA,MAEA,MANA,IAOA,S,GAIA,O,2GCVE,4BAAqE,YAAW,kB,6BAAX,+C,mDAGnE,0BACE,wCAAiB,gHAAiC,4FAAuC,iBAC3F,iB,iCADmB,8D,mDAEnB,0BACE,sCAAe,gHAAiC,4FAAuC,iBACzF,iB,iCADiB,8D,mDAEjB,0BACE,8CAAuB,gHAAiC,4FAAuC,iBACjG,iB,iCADyB,8D,mDAEzB,0BACE,0CAAmB,gHAAiC,4FAAuC,iBAC7F,iB,iCADqB,8D,yBAXvB,0BACE,8BAGA,8BAGA,8BAGA,8BAGF,kB,6BAZO,oDAGA,yDAGA,iEAGA,8DDAT,iBAWI,WAAqB+S,EAA2B5G,EAAgC/P,EACpEE,EAA8C2+B,GADrC,KAAAloB,UAA2B,KAAA5G,aAAgC,KAAA/P,eACpE,KAAAE,kBAA8C,KAAA2+B,SAJ1D,KAAAluB,QAAkB,KAClB,KAAAmD,MAAgB,M,OAMhB,YAAAhS,SAAA,aAGA,YAAAg9B,cAAA,SAAen4B,GACI,SAAVA,EACD9E,KAAKk9B,aAEW,SAAVp4B,EACN9E,KAAKm9B,aAEW,WAAVr4B,GACN9E,KAAKo9B,gBAIb,YAAAF,WAAA,WACwB,aAAfl9B,KAAKiS,QACNjS,KAAKiS,MAAQ,QAIrB,YAAAkrB,WAAA,WACwB,QAAfn9B,KAAKiS,MAEAjS,KAAK2e,cAAc0e,WAIrBr9B,KAAKs9B,eAHLt9B,KAAKiS,MAAQ,WAMI,aAAfjS,KAAKiS,MACXjS,KAAKs9B,eAEgB,qBAAft9B,KAAKiS,MAE6B,MAAnCjS,KAAK2e,cAAc+I,aACpB1nB,KAAKiS,MAAQ,eAGbjS,KAAKs9B,eAGY,iBAAft9B,KAAKiS,OACXjS,KAAKs9B,gBAIb,YAAAA,aAAA,sBACIt9B,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQgK,gBAAiB9e,KAAK2e,eAAgB1U,MAAM,SAAAmZ,GAErB,MAA3BA,EAAO+D,kBACR,EAAKlV,MAAQ,mBACb,EAAK0M,cAAgByE,GAEQ,MAAvBA,EAAOsE,cACb,EAAKzV,MAAQ,eACb,EAAK0M,cAAgByE,IAGrB,EAAKlV,WAAWiJ,OAEhB,EAAKjJ,WAAa,EAAK/P,aAAagP,KAAM,EAAA0B,sBAAuB,CAC7DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEzB,EAAKH,WAAWI,QAAQQ,QAAU,EAAKzQ,gBAAgByC,OAAQ,oDAC/D,EAAKoN,WAAWI,QAAQS,WAAa,EAAK1Q,gBAAgByC,OAAQ,2CAClE,EAAKoN,WAAWI,QAAQivB,WAAa,EAAKl/B,gBAAgByC,OAAQ,sBAEzC,EAAKoN,WAAWI,QAAUU,UAAUpO,WAAW,SAAAgD,GACpE,EAAKo5B,OAAOQ,SAAS,CAAC,oCAG9BnzB,OAAM,SAAEe,GACR,EAAKb,MAAOa,OAKpB,YAAAgyB,aAAA,sBACIp9B,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQ+J,aAAc7e,KAAK2e,eAAgB1U,MAAM,SAAAmB,GAClD,EAAK8C,WAAWiJ,UAChB9M,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAC,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAxG/CvS,GAAuB,oL,iCAAvBA,EAAuB,0QClBpC,4BACE,8BAEA,8BAcF,kB,MAhBO,oDAEA,6E,oJDUP,GAKa,EAAAA,2B,oHElBb,WAEA,Q,GAEA,OACA,O,iFCDQ,yBAA4C,YAAoC,kB,uBAApC,iE,yBAD9C,yBACE,6BACF,kB,6BADM,0D,yFAIR,0BACE,4BACE,8BAAgC,uGAAyB,qGAAzD,iBACF,iBACA,4BACE,0BAA8E,gG,uBAA+F,iBAC7K,0BAA8C,uG,uBAA6F,iBAC7I,iBACF,iB,gCANW,oDAAwB,wBAAxB,CAAwB,oBAAxB,CAAwB,yBAAxB,CAAwB,2BAG5B,6EAAmC,4EACyC,iG,yBAU3E,yBAAsD,YAAkB,kB,uBAAlB,6C,yBAH1D,2BACE,yBACE,6BACA,6BACF,iBACF,kB,8BAFQ,mE,mDANV,4BACE,2BAAG,0FAAoB,sBAA+D,sBAA2E,6BAAyD,YAC1N,iBACA,+BAMF,iB,iCAR4N,sEAEpN,4C,yBAOR,4BACE,6BACA,YACF,kB,8BADE,uE,mDAbJ,0BACE,+BAUA,+BAIA,4BACE,2BAAsC,6F,uBAAoF,iBAC5H,iBACF,iB,gCAjBwB,qEAUA,8EAKyC,iGD1BrE,iBAoBI,WAAqB+c,GAArB,WAAqB,KAAAA,UATX,KAAA2oB,QAA6B,IAAI,EAAAhgC,aAUvCuC,KAAK4vB,WAAa,EAAAxB,WAAWxY,QAAO,SAAEyY,GAClC,EAAKvZ,QAAQqK,wBAAyB,EAAKue,YAAa,EAAKnW,QAAQxb,KAAM,EAAKwb,QAAQ7hB,OAAQ,EAAKiZ,cAAclb,WAAYwG,MAAM,SAAAukB,GACjIH,EAASjhB,KAAMohB,S,OAK3B,YAAAvuB,SAAA,WACID,KAAK09B,YAAc,KACnB19B,KAAKqf,SAAW,KAChBrf,KAAK29B,YAAa,GAGtB,YAAAlP,kBAAA,SAAmBryB,GACf4D,KAAKqf,SAAWjjB,EAAEoR,KAAKxR,GACvBgE,KAAK29B,WAAgC,MAAjB39B,KAAKqf,UAG7B,YAAAue,cAAA,sBACS59B,KAAK29B,aACN39B,KAAKy9B,QAAQ3kB,KAAM,MAEnB9Y,KAAK8U,QAAQsK,uBAAwBpf,KAAKqf,SAAUrf,KAAKunB,QAAQ3f,OAAQqC,MAAM,SAAAmB,GAC3E,EAAKmc,QAAQH,UAAW,EACxB,EAAKG,QAAQ/J,OAAS,CAClBgK,KAAM,UACNjI,UAAWnU,EAASmU,UACpBC,KAAMpU,EAASoU,KACf5X,MAAOwD,EAASxD,UAEpByC,OAAO,SAAAjO,GACP,EAAKqhC,QAAQ3kB,KAAM1c,EAAEmO,YAKjC,YAAAszB,qBAAA,WACI,IAAIC,EAAgB99B,KAAKunB,QAAQ3f,MACjB5H,KAAKunB,QAAQxb,KAE7B/L,KAAKunB,QAAQH,UAAW,EAExBpnB,KAAKunB,QAAQ/J,OAAS,CAClBgK,KAAM,mBACN5f,MAAOk2B,IAIf,YAAAC,WAAA,sBACwB/9B,KAAKunB,QAAQ3f,MACjB5H,KAAKunB,QAAQxb,KAE7B,GAAK/L,KAAKunB,QAAQH,SAAW,CACzB,IAAI5J,EAASxd,KAAKunB,QAAQ/J,OAEN,oBAAfA,EAAOgK,MACRxnB,KAAKunB,QAAQH,UAAW,EACxBpnB,KAAKunB,QAAQ/J,OAAS,MAED,WAAfA,EAAOgK,OACbxnB,KAAKy9B,QAAQ3kB,KAAM,MAEnB9Y,KAAK8U,QAAQwK,uBAAwB9B,EAAO+B,UAAW/B,EAAOgC,MAAOvV,MAAM,SAAAmB,GACvE,EAAKmc,QAAQH,UAAW,EACxB,EAAKG,QAAQ/J,OAAS,KAEtB,EAAKkgB,YAAc,KACnB,EAAKC,WAAmC,MAApB,EAAKD,eACzBrzB,OAAO,SAAAjO,GACP,EAAKqhC,QAAQ3kB,KAAM1c,EAAEmO,a,iCApF5BpS,GAAwB,mC,iCAAxBA,EAAwB,o9BCbrC,4BACE,kCACE,4BACE,6BAGF,iBACA,4BAAoC,YAAyC,iBAC7E,+BASA,8BAmBF,iBACF,kB,MAlCU,+DAI8B,qFAC/B,wDASA,yD,iPDVT,GAMa,EAAAA,4B,gHEbb,WAEA,QACA,S,GAEA,OACA,O,6ICFI,0BACE,4BACE,8BAAgC,qGAAuB,qGAAvD,iBACF,iBACA,4BACE,0BAA8E,gG,uBAA2F,iBACzK,0BAAsC,+F,uBAAoF,iBAC1H,0BAA8C,8F,uBAAkF,iBAClI,iBACF,iB,gCAPW,oDAAwB,sBAAxB,CAAwB,oBAAxB,CAAwB,yBAAxB,CAAwB,2BAG5B,6EAAmC,wEACyB,+FACO,+F,sBAIxE,4BACE,6BACF,kB,yBACA,4BACE,6BACA,YACF,kB,8BADE,uE,yBAEF,4BACE,6BACA,YACF,kB,8BADE,gE,mDAVJ,0BACE,+BAGA,+BAIA,+BAIA,4BACE,2BAAsC,6F,uBAAoF,iBAC5H,iBACF,iB,gCAdwB,oEAGA,qEAIA,oEAKyC,iGDnBrE,iBAoBI,WAAqB2c,GAArB,WAAqB,KAAAA,UATX,KAAA2oB,QAA6B,IAAI,EAAAhgC,aAUvCuC,KAAK4vB,WAAa,EAAAxB,WAAWxY,QAAO,SAAEyY,GAClC,EAAKvZ,QAAQ2K,mBAAoB,EAAK8H,QAAQ7H,cAAe,EAAKse,UAAW,MAAO/zB,MAAM,SAAAukB,GACtFH,EAASjhB,KAAMohB,S,OAK3B,YAAAvuB,SAAA,WACID,KAAKg+B,UAAY,KACjBh+B,KAAKi+B,OAAS,KACdj+B,KAAK29B,YAAa,GAGtB,YAAAlP,kBAAA,SAAmBryB,GACf4D,KAAKi+B,OAAS7hC,EAAEoR,KAAK8G,MACrBtU,KAAK29B,WAA8B,MAAf39B,KAAKi+B,QAG7B,YAAAL,cAAA,sBACS59B,KAAK29B,aACN39B,KAAKy9B,QAAQ3kB,KAAM,MAEnB9Y,KAAK8U,QAAQ8K,kBAAmB5f,KAAKi+B,OAAQj+B,KAAKunB,QAAQ3f,OAAQqC,MAAM,SAAAmB,GACpE,EAAKmc,QAAQH,UAAW,EACxB,EAAKG,QAAQ/J,OAAS,CAClBgK,KAAM,UACNjI,UAAWnU,EAASmU,UACpB3X,MAAOwD,EAASxD,UAEpByC,OAAO,SAAAjO,GACP,EAAKqhC,QAAQ3kB,KAAM1c,EAAEmO,YAKjC,YAAA2zB,aAAA,sBACIl+B,KAAKy9B,QAAQ3kB,KAAM,MAEnB9Y,KAAK8U,QAAQiL,WAAY/f,KAAKunB,QAAQ3f,MAAO,OAAQ5H,KAAKunB,QAAQ0G,YAAYhkB,MAAM,SAAA+X,GAChF,EAAKuF,QAAQH,UAAW,EACxB,EAAKG,QAAQ/J,OAAS,CAClBgK,KAAM,SACNxF,KAAMA,MAEV3X,OAAO,SAAAjO,GACP,EAAKqhC,QAAQ3kB,KAAM1c,EAAEmO,WAI7B,YAAA4zB,YAAA,WACIn+B,KAAKunB,QAAQH,UAAW,EAExBpnB,KAAKunB,QAAQ/J,OAAS,CAClBgK,KAAM,WAId,YAAAuW,WAAA,sBAEI,GAAK/9B,KAAKunB,QAAQH,SAAW,CAEzB,IAAI5J,EAASxd,KAAKunB,QAAQ/J,OAEN,UAAfA,EAAOgK,MACRxnB,KAAKunB,QAAQH,UAAW,EACxBpnB,KAAKunB,QAAQ/J,OAAS,MAED,WAAfA,EAAOgK,MACbxnB,KAAKy9B,QAAQ3kB,KAAM,MAEnB9Y,KAAK8U,QAAQgL,kBAAmBtC,EAAO+B,WAAYtV,MAAM,SAAAmB,GACrD,EAAKmc,QAAQH,UAAW,EACxB,EAAKG,QAAQ/J,OAAS,QACtBnT,OAAO,SAAAjO,GACP,EAAKqhC,QAAQ3kB,KAAM1c,EAAEmO,WAGJ,UAAfiT,EAAOgK,OACbxnB,KAAKy9B,QAAQ3kB,KAAM,MAEnB9Y,KAAK8U,QAAQoL,WAAWlgB,KAAKunB,QAAQ0G,WAAYzQ,EAAOwE,KAAK1lB,MAAO2N,MAAM,SAAAmB,GACtE,EAAKmc,QAAQH,UAAW,EACxB,EAAKG,QAAQ/J,OAAS,QACtBnT,OAAO,SAAAjO,GACP,EAAKqhC,QAAQ3kB,KAAM1c,EAAEmO,a,iCAnG5BlS,GAAoB,mC,iCAApBA,EAAoB,y1BCdjC,4BACE,kCACE,4BAAsB,YAA0B,iBAChD,4BAAoC,YAAiB,iBACrD,gCAUA,8BAgBF,iBACF,kB,MA7B0B,6DACc,oDAC/B,wDAUA,yD,uODNT,GAMa,EAAAA,wB,qHEdb,KAEA,MACA,MACA,MAEA,MANA,IAOA,S,GAGA,O,2GCTE,4BAAqE,YAAW,kB,6BAAX,+C,mDAGnE,0BACE,wCAAiB,gHAAiC,4FAAuC,iBAC3F,iB,iCADmB,8D,mDAEnB,0BACE,sCAAe,gHAAiC,4FAAuC,iBACzF,iB,iCADiB,8D,mDAEjB,0BACE,8CAAuB,gHAAiC,4FAAuC,iBACjG,iB,iCADyB,8D,mDAEzB,0BACE,0CAAmB,gHAAiC,4FAAuC,iBAC7F,iB,iCADqB,8D,yBAXvB,0BACE,8BAGA,8BAGA,8BAGA,8BAGF,kB,6BAZO,oDAGA,yDAGA,iEAGA,8DDDT,iBAWE,WAAqByc,EAA2B5G,EAAgC/P,EACtEE,EAA8C2+B,GADnC,KAAAloB,UAA2B,KAAA5G,aAAgC,KAAA/P,eACtE,KAAAE,kBAA8C,KAAA2+B,SAJtD,KAAAluB,QAAkB,KAClB,KAAAmD,MAAgB,M,OAMhB,YAAAhS,SAAA,aAGA,YAAAg9B,cAAA,SAAen4B,GACI,SAAVA,EACD9E,KAAKk9B,aAEW,SAAVp4B,EACN9E,KAAKm9B,aAEW,WAAVr4B,GACN9E,KAAKo9B,gBAIb,YAAAF,WAAA,WACwB,aAAfl9B,KAAKiS,QACNjS,KAAKiS,MAAQ,QAIrB,YAAAkrB,WAAA,WACwB,QAAfn9B,KAAKiS,MACAjS,KAAK2e,cAAc0e,WAIrBr9B,KAAKs9B,eAHLt9B,KAAKiS,MAAQ,WAMI,aAAfjS,KAAKiS,MACXjS,KAAKs9B,eAEgB,qBAAft9B,KAAKiS,MAE6B,MAAnCjS,KAAK2e,cAAc+I,aACpB1nB,KAAKiS,MAAQ,eAGbjS,KAAKs9B,eAGY,iBAAft9B,KAAKiS,OACXjS,KAAKs9B,gBAIb,YAAAA,aAAA,sBACIt9B,KAAK8U,QAAQ4J,kBAAmB1e,KAAK2e,eAAgB1U,MAAM,SAAAmZ,GAEvB,MAA3BA,EAAO+D,kBACR,EAAKlV,MAAQ,mBACb,EAAK0M,cAAgByE,GAEQ,MAAvBA,EAAOsE,cACb,EAAKzV,MAAQ,eACb,EAAK0M,cAAgByE,IAGvB,EAAKlV,WAAWiJ,OAEhB,EAAKjJ,WAAa,EAAK/P,aAAagP,KAAM,EAAA0B,sBAAuB,CAC3DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEzB,EAAKH,WAAWI,QAAQQ,QAAU,EAAKzQ,gBAAgByC,OAAQ,oDAC/D,EAAKoN,WAAWI,QAAQS,WAAa,EAAK1Q,gBAAgByC,OAAQ,2CAEzC,EAAKoN,WAAWI,QAAUU,UAAUpO,WAAW,SAAAgD,GACpE,EAAKo5B,OAAOQ,SAAS,CAAC,oCAI9BnzB,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAA8yB,aAAA,sBACIp9B,KAAK8U,QAAQ+J,aAAc7e,KAAK2e,eAAgB1U,MAAM,SAAAmB,GAClD,EAAK8C,WAAWiJ,UAChB9M,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAC,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAnG/ChS,GAAyB,oL,iCAAzBA,EAAyB,4QCjBtC,4BACE,8BAEA,8BAcF,kB,MAhBO,oDAEA,6E,oJDSP,GAKa,EAAAA,6B,6GEjBb,KAGA,MAHA,IAOA,S,GACA,M,0JCkBK,0BAAoI,2FAAuB,kBAC1I,6BACF,iB,gCAFmE,0E,mDAGlF,0BAAkI,2FAAuB,gBACxI,6BACF,iB,gCAFmE,wE,qBAMlF,iC,KAAgD,+B,qBAChD,iC,KAA8C,mCDxBnD,iBAeI,WAAqB8+B,EAAkDj5B,EAAsC2W,GAAxF,KAAAsiB,sBAAkD,KAAAj5B,eAAsC,KAAA2W,UAPhH,KAAAxG,QAAkB,cAQXtO,KAAK0wB,QAAU5b,EAAQ4b,UACvB1wB,KAAK2wB,aAAe3wB,KAAK0wB,SAAW5b,EAAQ6b,eAClD3wB,KAAK4wB,cAAgB5wB,KAAK0wB,SAAW1wB,KAAK2wB,cAAgB7b,EAAQ+b,gBAElE7wB,KAAK2wB,aAAe3wB,KAAKo+B,cAAc,eAAiBp+B,KAAKo+B,cAAc,U,OAGzE,YAAAn+B,SAAA,aAGH,YAAAm+B,cAAA,SAAc9vB,GACbtO,KAAKsO,QAAUA,EAEA,gBAAZA,EACFtO,KAAKq+B,UAAYr+B,KAAKo3B,oBAAoBt2B,OAAO,qBAE9B,cAAZwN,EACPtO,KAAKq+B,UAAYr+B,KAAKo3B,oBAAoBt2B,OAAO,mBAE9B,WAAZwN,IACPtO,KAAKq+B,UAAYr+B,KAAKo3B,oBAAoBt2B,OAAO,qBAKzC,YAAAyJ,MAAP,SAAcD,GACNtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCApC1DzE,GAAiB,sH,iCAAjBA,EAAiB,qmBClB9B,4BACI,4BACA,6BAEA,4BAWI,4BACI,uBACT,4BAEC,4BACC,yBACC,YACD,iBACD,iBAEA,2BACC,6BAGA,6BAGD,iBAEA,6BACC,wCACA,wCACD,iBAEQ,iBACA,wBACJ,iBACR,iBA1CA,kB,MAqBM,yDAK4C,mDAGA,mDAM/B,8DACA,8D,+NDxBnB,GAMa,EAAAA,qB,iHElBb,KAEA,MAFA,IAIA,SAGA,SAIA,GAHA,MAGA,QACA,SAEA,GADA,OACA,Q,yKCbA,0BACE,0BACE,4BAEI,uBACA,4BAEI,8BACI,8BAA8D,iGAAkC,WAAhG,iBACA,6BACI,4BACJ,iBACA,0BACI,6BACJ,iBACJ,iBAEA,+BACI,+BAA8D,iGAAkC,eAAhG,iBACA,8BACI,8BACJ,iBACA,2BACI,8BACJ,iBACJ,iBAEA,8BACI,iCAA8C,yFAC1C,8BACJ,iBACJ,iBACJ,iBACA,yBACL,iBACD,iBACF,iB,gCA5BuC,wCAAc,yBAC/B,4EASiB,wCAAe,wBAChC,4E,yBA4BE,gCAAoF,YAAuC,kB,uBAApE,uCAA6B,4D,mDANhG,6BACI,+BACI,6BACJ,iBACA,6BACI,gCAAsE,6GAClE,kCACJ,iBACJ,iBACA,wBACJ,iB,iCAL8E,0DAC1D,0D,yBAUR,gCAAuD,YAAc,kB,uBAAlC,wCAAoB,6C,mDALnE,6BACI,+BAA+C,6BAA4C,iBAC3F,6BACI,gCAAkD,iGAC9C,wBACA,kCACJ,iBACJ,iBACA,wBACJ,iB,iCAN0D,8CAEtC,gD,qBAOZ,6B,qBACA,6B,yBAII,gCAA8E,YAAkB,kB,uBAA9C,4CAA4B,6C,mDAiBpF,+BAAmE,oGAAnE,iB,iCAAmE,mC,sBACnE,2BAAsE,6BAAgF,kB,mDAGpJ,2BAAoC,gHAA+B,6BAAmE,kB,mDACtI,2BAAoC,gHAA+B,6BAAsE,kB,qBAgBzI,6B,qBACA,6B,wBAGA,6B,8BACI,qC,wBACJ,6B,8BACI,qC,mDA5ExB,0BACI,0BACI,mCACI,+BAWA,+BAUA,6BACI,+BACI,oCACA,oCACJ,iBACA,8BACI,iCAA0D,0GACtD,mCACJ,iBACJ,iBACA,yBACJ,iBACA,8BACI,gCAAmD,8BAAwC,iBAC3F,8BACI,gCAAwB,qG,oBAAxB,iBACJ,iBACA,yBACJ,iBACA,8BACI,gCAAiD,8BAAsC,iBACvF,8BAGE,kCACA,8BAEA,4BACE,8BACA,8BACF,iBACF,iBAEA,yBACJ,iBACA,8BAEI,gCAAiD,iCAAiB,iBAClE,8BACG,wCAAe,mGAA+B,iBACjD,iBACA,yBACJ,iBACA,8BACI,gCACI,qCACA,qCACJ,iBACA,8BACI,kCAEA,kCAEJ,iBACA,yBACJ,iBAEA,8BACI,yBACA,8BACI,iCAA8C,yFAC1C,8BACJ,iBACA,iCAAwE,0FACpE,8BACJ,iBACJ,iBACA,yBACJ,iBACJ,iBACJ,iBACJ,iB,mDA5FiB,iDAWuB,4CAYV,uDACA,2DAGgD,wDAC9C,0DAQgD,8FAApC,oCASnB,6DACJ,6DAGE,6DACA,6DAUW,iDAMJ,uDACA,2DAGH,uDAEA,2DAYuC,mDD5GlE,iBAuEC,WAAoBob,EACX3C,EACAhU,EACAi5B,EACA74B,EACA+/B,GALW,KAAAxpB,UACX,KAAA3C,eACA,KAAAhU,eACA,KAAAi5B,sBACA,KAAA74B,cACA,KAAA+/B,aApET,KAAArpB,YAAqB,IAAIC,KAEzB,KAAAqpB,kBAA4B,EAQ5B,KAAAC,iBAA0B,CACzB,CAAE,SAAY,EAAAC,eAAeC,eAAgB,MAAS1+B,KAAKo3B,oBAAoBt2B,OAAO,6CACtF,CAAE,SAAY,EAAA29B,eAAeE,SAAU,MAAS3+B,KAAKo3B,oBAAoBt2B,OAAO,uCAChF,CAAE,SAAY,EAAA29B,eAAeG,YAAa,MAAS5+B,KAAKo3B,oBAAoBt2B,OAAO,2CAMpF,KAAAxE,KAAe,KAKf,KAAAod,UAAkB,KAKlB,KAAAC,QAAyB,KAkBzB,KAAAklB,YAAsB,EAYtB,KAAAC,WAAqB,EAErB,KAAAC,WAAqB,E,OAUrB,YAAA9+B,SAAA,sBACCD,KAAKs+B,WAAWU,mBAAmB,EAAG,KAAK/0B,MAAK,SAAAg1B,GAE/C,EAAKC,gBAAkBD,EAAiBE,UAEJ,IAAhC,EAAKD,gBAAgBj+B,SACxB,EAAK49B,YAAa,EAClB,EAAKN,kBAAmB,GAGzB,EAAKO,WAAY,KAEfz0B,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZtK,KAAK8U,QAAQS,oBAAmB,GAAOtL,MAAK,SAAAuB,GAI3C,IAFA,IAAMgK,EAAa,GAEVjS,EAAI,EAAGA,EAAIiI,EAAMvK,SAAUsC,EAAG,CACtC,IAAMwI,EAAOP,EAAMjI,GACbqH,EAAUmB,EAAKnB,QACf6K,EAAiC,MAAtB1J,EAAK3I,cAAwB2I,EAAK3I,cAAgB2I,EAAKzP,MAEpE,EAAKiC,YAAYsE,iBAAiB+H,IAAY,EAAKrM,YAAYwE,kBAAkB6H,EAAS6K,KAC7FD,EAAWzR,KAAKyH,EAAMjI,IAIxB,EAAKiI,MAAQgK,KACXnL,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZ,IAAI80B,EAASzsB,IAAM,2BACC,cAAhB3S,KAAK6uB,SACRuQ,EAASzsB,IAAM,0CAKhB,IAAItT,EAA+B,CAClCggC,WAAY,EACZC,mBAAmB,EACnBpM,IAAKkM,GAGNp/B,KAAKu/B,SAAW,IAAI,EAAAC,aAAangC,GAEjCW,KAAKu/B,SAASE,gBAAkB,SAACC,EAAeC,GAC/CA,EAAK/9B,OAAO,OAAQ,EAAKtF,MACzBqjC,EAAK/9B,OAAO,YAAa,EAAKm9B,WAER,MAAlB,EAAKrlB,WACRimB,EAAK/9B,OAAO,YAAa,EAAK8X,WAEX,MAAhB,EAAKC,SACRgmB,EAAK/9B,OAAO,UAAW,EAAK+X,SAEzB,EAAKimB,gBACRD,EAAK/9B,OAAO,WAAY,EAAKg+B,iBAG/B5/B,KAAKu/B,SAASM,mBAAqB,SAACH,GACnC,EAAKvtB,aAAaY,SAEnB/S,KAAKu/B,SAASO,eAAiB,SAACtyB,EAAWpC,EAAe6a,EAAapT,GACtE,EAAKktB,QAAQ1/B,cAAciU,MAAQ,GACnC,EAAKnC,aAAae,YAEnBlT,KAAKu/B,SAASS,cAAgB,SAACxyB,EAAWpC,EAAkB6a,EAAgBpT,GAC3E,IAAM8L,EAAgBnM,KAAKyG,MAAM7N,GAEjCuT,EAAckgB,WAAa,EAAKA,WAGhC,IADA,IAAIoB,EAAiC,KAC5B18B,EAAI,EAAGA,EAAI,EAAK27B,gBAAgBj+B,SAAUsC,EAAG,CACrD,IAAI28B,EAAsB,EAAKhB,gBAAgB37B,GAE3C28B,EAAIxqB,MAAQ,EAAK6P,mBACpB0a,EAAiBC,GAInBvhB,EAAc4G,iBAAmB,EAAKA,iBACtC5G,EAAcshB,eAAiBA,EAEX,cAAhB,EAAKpR,OACR,EAAK3gB,WAAa,EAAK/P,aAAagP,KAAK,EAAApV,wBAAyB,CAAEqW,UAAU,EAAMC,qBAAqB,IAGzG,EAAKH,WAAa,EAAK/P,aAAagP,KAAK,EAAA7U,0BAA2B,CAAE8V,UAAU,EAAMC,qBAAqB,IAG5G,EAAKH,WAAWI,QAAQqQ,cAAgBA,GAEzC3e,KAAKu/B,SAASY,YAAc,SAAC3yB,EAAWpC,EAAkB6a,EAAgBpT,GACzE,IAAMtI,EAAQiI,KAAKyG,MAAM7N,GAEzB,EAAKb,MAAM,CAAEA,MAAOA,MAItB,YAAA6S,QAAA,WAE4B,MAAvBpd,KAAKu/B,SAASa,OAAiBpgC,KAAKu/B,SAASa,MAAMn/B,OAAS,EAC/DjB,KAAKu/B,SAASc,YAGdrgC,KAAKuK,MAAM,CACVuE,QAAS9O,KAAKo3B,oBAAoBt2B,OAAO,mBACzCyJ,MAAO,MAKV,YAAA+1B,gBAAA,SAAgBx7B,EAAOiH,GAErB/L,KAAK6+B,WADO,aAAT9yB,GAQL,YAAAgb,OAAA,WACC/mB,KAAKu+B,kBAAmB,GAGzB,YAAAtX,OAAA,WACCjnB,KAAKu+B,kBAAmB,GAGzB,YAAA1U,YAAA,SAAYlQ,GAERA,IAAY,EAAAmQ,QACd9pB,KAAK2Z,QAAU,KAGf3Z,KAAK2Z,QAAU,EAAAmQ,SAKV,YAAAvf,MAAP,SAAaD,GACZtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCA3NhDlE,GAAqB,wO,iCAArBA,EAAqB,qD,OAAA,K,29FCvBlC,gCAsCA,iC,MAtCK,mFAsCA,4F,mtBDrBL,GAMa,EAAAA,yB,sHExBb,KACA,MACA,MAKA,OAPA,IAQA,SAEA,S,GACA,M,gGCEQ,4BAAqE,YAAW,kB,6BAAX,+C,sBAY7D,4BACI,6BACI,6BACI,2BAA0B,6BAA+D,iBAC7F,iBACJ,iBACJ,kB,sBAcoB,2BAA4B,6BAA6C,kB,qBAGvE,6B,qBACA,6B,mDAYF,gCAAyC,+JACrC,6BACJ,kB,mDAtBR,4BACI,4BACE,2BACE,YACA,gCACA,2BACE,kBACA,oCACA,oCACA,kBACF,iBACF,iBACF,iBACA,6BACI,iCAAsB,iHAClB,8BACJ,iBACA,iCAAsB,6GAClB,8BACJ,iBACA,mCAGJ,iBACJ,iB,0BAtBS,8EACD,qDACM,+CAGM,4DACA,6DAYJ,6C,yBA5B5B,4BACI,+BACI,4BACI,yBACI,4BAAwB,6BAA2C,iBACvE,iBACJ,iBACA,4BACI,+BAyBJ,iBACJ,iBACJ,kB,uCA3BgB,gD,mDA8BR,0BACI,gCAAsB,8HAClB,6BACJ,iBACJ,kB,yBA5DhB,4BACI,4BACI,4BACI,6BACI,6BACI,yBAAI,YAAa,iBACrB,iBACJ,iBACJ,iBAEA,+BAQA,8BAoCA,6BACI,8BACI,gCAKJ,iBACJ,iBACJ,iBACJ,kB,uBA3DwB,4CAKX,gEAQD,8DAsCS,6CD1D7B,iBAcC,WAAmB6a,EAAkC3W,EAAsC6+B,EAAwB3+B,GAAhG,KAAAyW,UAAkC,KAAA3W,eAAsC,KAAA6+B,SAAwB,KAAA3+B,kBARnH,KAAAyQ,QAAkB,K,OAUlB,YAAA7O,SAAA,sBAECD,KAAK8U,QAAQiQ,sBAAsB9a,MAAK,SAAAmB,GACvC,EAAK8qB,KAAO9qB,EAAS8qB,QAEnB7rB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAi2B,SAAA,SAAS32B,GACR5J,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA5S,sBAAuB,CAC/D4T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQnD,KAAKvB,GAC7B5J,KAAKkO,WAAWI,QAAQ8G,OAAQ,EAChCpV,KAAKkO,WAAWI,QAAQ+G,mBAAmBzU,WAAU,SAACqjB,GACrD,IAAMrV,EAAM,CACXhH,MAAOqc,EAAKtO,aAAaxJ,eACzBuJ,IAAKuO,EAAKvO,IACV8qB,WAAYvc,EAAKuc,WACjBC,eAAgBxc,EAAKwc,eACrBhqB,SAAUwN,EAAKxN,SACfiqB,MAAOzc,EAAKyc,MACZC,KAAM1c,EAAK0c,KACXjqB,WAAYuN,EAAKvN,YAGlB9M,EAAImpB,MAAMhvB,KAAK6K,OAIjB,YAAAgyB,OAAA,SAAOtkC,GACN0D,KAAKg9B,OAAOQ,SAAS,CAAC,8BAA+BlhC,KAGtD,YAAAizB,OAAA,SAAOsR,GAAP,WACC7gC,KAAK8U,QAAQyP,cAAcsc,EAAKnrB,KAAKzL,MAAK,SAAAga,GAEzC,EAAK/V,WAAa,EAAK/P,aAAagP,KAAK,EAAA5S,sBAAuB,CAC/D4T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtB,EAAKH,WAAWI,QAAQc,MAAO,EAC/B,EAAKlB,WAAWI,QAAQ6G,UAAY8O,EAAKyc,MACzC,EAAKxyB,WAAWI,QAAQgH,OAAS2O,EACjC,EAAK/V,WAAWI,QAAQ8G,OAAQ,EAEhC,EAAKlH,WAAWI,QAAQ+G,mBAAmBzU,WAAU,SAAAkgC,GACpDD,EAAKj5B,MAAQk5B,EAAInrB,aAAaxJ,eAC9B00B,EAAKnqB,WAAaoqB,EAAIpqB,iBAErBrM,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAy2B,SAAA,SAASn3B,EAAsBqa,GAA/B,WACCjkB,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAOmjB,EAAKrc,MAAQ,IACnH5H,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,uBACjEd,KAAKkO,WAAWI,QAAQvC,KAAO,SAE/B/L,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAC3C,EAAKkR,QAAQsP,iBAAiBH,EAAKvO,KAAKzL,MAAK,SAAAmB,GAC5CxB,EAAImpB,MAAQnpB,EAAImpB,MAAMj0B,QAAO,SAACwV,EAAOpK,EAAO2R,GAC3C,OAAOvH,EAAMoB,MAAQuO,EAAKvO,UAGzBrL,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAC,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA/FrCnQ,GAA0B,wJ,iCAA1BA,EAA0B,4kDClBvC,4BACI,4BACA,6BAGA,4BAEI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,8BAEA,+BAiEJ,iBACJ,kB,MApEa,oDAEY,gD,qJDFzB,GAKa,EAAAA,8B,sHElBb,KACA,MADA,IAEA,Q,+BAGA,aAcI,WAAoB+T,GAAA,KAAAA,a,OAEpB,YAAAjO,SAAA,WACID,KAAKghC,SAAW,IAAI,EAAArvB,SAGxB,YAAAsvB,QAAA,WACIjhC,KAAKkO,WAAWiJ,OAChBnX,KAAKghC,SAAS5zB,KAAMpN,KAAK6uB,S,iCAjBpBp0B,GAA0B,oC,iCAA1BA,EAA0B,4sBCVvC,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,6BACI,+BACI,4BACI,4BACI,4BACI,4BACJ,iBAEA,gCAAsD,+DAClD,yBACA,gCACI,6BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBAEA,6BACI,6BACI,8BACI,iCAAsB,wCAAS,EAAAyT,WAAA,UAE3B,4BACI,8BACJ,iBACJ,iBACA,iCAAsB,wCAAS,EAAA+yB,aAE3B,4BACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,MAhC0E,iDAqBR,wE,uPD/BlE,GAKa,EAAAxmC,8B,iHEVb,KACA,MAEA,MAHA,IAKA,OAWA,SAOA,GAFA,OACA,MACA,QAEA,S,mHCoEsB,sB,qBACA,sB,qBACA,sB,qBACA,sB,sEAGE,yBACE,6BAKF,kB,uCAJG,iL,yBAKH,yBACE,6BAKF,kB,uCAJG,iL,4DAKH,yBACE,6BACF,kB,uCADiD,0E,yBAEjD,yBACE,6BAKF,kB,uCAJG,+F,yBAKH,yBACE,6BAKF,kB,uCAJG,+F,mHAcL,4BAA2Q,YAAyB,kB,uCAA/N,wIAAsM,sD,mDAEzQ,gCAAiH,mIAAiC,eAChJ,6BACF,iB,2CAFsB,wD,mDAGtB,gCAAiH,mIAAiC,eAChJ,6BACF,iB,2CAFsB,wD,mDAGtB,gCAAgH,mIAAiC,cAC/I,6BACF,iB,2CAFsB,uD,yBAPxB,2BACE,kCAGA,kCAGA,kCAGF,kB,wCAT0E,iEAGA,iEAGD,kE,mDAUzE,6BACE,+BAA4C,6BAAmE,iBAC/G,kCAAsG,sHAAwG,iBAChN,iB,yEAFS,6EACG,4EAA4F,2CAAqC,gE,uFAqB7I,2BACI,6BACJ,kB,uCAFwM,uG,mDAOxM,6BACE,+BAA+C,6BAAkE,iBACjH,kCAAiH,qHAAsG,iBACzN,iB,yEAFS,gFACG,+EAAuG,0CAAoC,+D,mDAGvJ,6BACM,+BAA0C,6BAAyE,iBACnH,+BAA6F,qHAA7F,iBACN,iB,yEAFa,2EACY,0EAA0E,0CAAoC,+D,qBAK7H,6B,qBACA,6B,yBAHV,0BACM,8BACI,oCACA,oCAAyG,iBAC7G,iBACA,4BAAQ,YAAyB,iBACtC,kB,uCAJmB,kEACA,kEAEN,8D,mDAUN,4BACE,2BAAG,8JAA+C,YAAgB,iBAClE,2BAAG,4JAAwH,iBAC7H,iB,0BAFoD,gD,yBAH1D,6BACE,4BACI,8BAIJ,iBACF,kB,uCALU,oD,sBAMV,4BACE,8BACF,kB,mDAEA,8BAEI,+BAEA,iCAA6D,+H,uBAC3D,8BACF,iBACJ,iB,iCALiK,mDAErE,oG,2KA5IpG,6BACE,6BACE,6BACE,sBACA,4BAA6E,YAAiB,iBAChG,iBACA,6BACE,6BACA,6BACA,6BACA,8BAEA,6BACE,+BAOA,+BAOA,+BAGA,+BAOA,+BAOA,0BACE,8BACA,+BACI,aACJ,iBACF,iBACF,iBACF,iBACA,8BACE,+BACA,iCAWF,iBACF,iBAEA,8BAEE,8BACE,gCAKA,iCAAsB,uJ,wBACpB,8BACF,iBAEA,2BACI,+BACE,8BAAkF,kBACpF,iBACA,6BAAO,aAAa,iBACxB,iBAEA,2BACI,+BACE,8BAAkF,kBACpF,iBACA,6BAAO,aAAmB,iBAC9B,iBAEA,8BAIF,iBAEA,8BACE,gCAKA,gCAKA,gCAQF,iBAEA,8BACE,2BACE,6BAAO,8BAAoE,iBAC3E,gCAQA,8BAIA,gCAQF,iBAEF,iBACF,iBACF,iB,6EApJwD,yIAGa,wJACc,gDAG1E,kHACA,kHACA,sGACA,yGAGG,kHAOA,kHAOA,4GAGA,sGAOA,yGAUE,8EAMJ,iEACE,oFAiBD,qFAK4H,gFAAsD,iEAQ5K,4CAOA,kDAGR,2KAOE,oFAKA,oFAKA,uFAaE,yDAQF,2DAIE,+E,mDAgBX,2BACE,iCAAoE,mI,uBAClE,8BACF,iBACA,iCAAoE,kI,uBAClE,8BACF,iBACA,iCAAoE,gI,uBAClE,8BACF,iBACF,iB,2CATU,qEAA6C,kEAG7C,qEAA6C,kEAG7C,qEAA6C,6E,mDARzD,8BACE,kCAYA,4BAA0D,kK,uBACxD,8BACF,iBAEF,iB,2CAhBQ,oFAYH,2EAA2I,gF,yBA3KxJ,4BACE,4BAEE,6BAEE,4BAEE,iCAuJA,+BAkBF,iBAEF,iBAEF,iBACF,kB,2DArLI,kCAOS,iDAuJA,uH,6FArLb,4BAAsE,mHACpE,4BACE,yBAAI,6BAAQ,YAAiB,iBAAS,iBACxC,iBACA,4BACE,yBAAI,6BAAQ,YAAW,iBAAS,iBAClC,iBACA,4BACG,+BACG,aACH,iBACH,iBACA,6BACE,6BACG,8BAAQ,aAAmB,iBAC9B,iBACF,iBACA,6BACE,uBACF,iBACF,iBAGA,+B,8CAvBsB,kEAEN,gDAGA,0CAIR,wEAIA,uJACO,kDASE,wDDlDzB,kBA8DC,WAAoBqa,EAAuC3W,EAAsCI,EAAkC64B,EACxHjlB,EAAoC6qB,GAD3B,KAAAloB,UAAuC,KAAA3W,eAAsC,KAAAI,cAAkC,KAAA64B,sBACxH,KAAAjlB,eAAoC,KAAA6qB,SA3B/C,KAAAkE,WAAa1kC,OAAOD,KAIpB,KAAA4kC,SAA4B,GAI5B,KAAAC,QAAiB,GAMjB,KAAAC,eAAyB,MAEzB,KAAAC,qBAA8B,EAa7BthC,KAAKohC,QAAU,CACd,CAAE5Z,KAAM4P,EAAoBt2B,OAAO,uBAAwBygC,KAAM,YAAaC,UAAU,GACxF,CAAEha,KAAM4P,EAAoBt2B,OAAO,6BAA8BygC,KAAM,aAAcC,UAAU,EAAOj/B,MAAO,KAC7G,CAAEilB,KAAM4P,EAAoBt2B,OAAO,yBAA0BygC,KAAM,iBAAkBC,UAAU,IAGhGxhC,KAAKyhC,U,OAGN,YAAAxhC,SAAA,sBAGKZ,EAA+B,CAClCggC,WAAY,EACZC,mBAAmB,EACnBpM,IALYvgB,IAAM,qCAQnB3S,KAAKu/B,SAAW,IAAI,EAAAC,aAAangC,GAEjCW,KAAKu/B,SAASE,gBAAkB,SAACC,EAAeC,GAC/CA,EAAK/9B,OAAO,YAAa,EAAK8/B,iBAE/B1hC,KAAKu/B,SAASM,mBAAqB,SAACH,GACnC,EAAKvtB,aAAaY,SAEnB/S,KAAKu/B,SAASO,eAAiB,SAACtyB,EAAWpC,EAAe6a,EAAapT,GACtE,EAAKktB,QAAQ1/B,cAAciU,MAAQ,GACnC,EAAKnC,aAAae,YAEnBlT,KAAKu/B,SAASS,cAAgB,SAACxyB,EAAWpC,EAAe6a,EAAgBpT,GAExE,IAAI,IAAItP,EAAE,EAAGA,EAAE,EAAK4a,QAAQld,OAAQsC,IAAI,CACvC,IAAIia,EAAS,EAAKW,QAAQ5a,GAE1B,GAAGia,EAAO9H,MAAQ,EAAKgsB,eAAe,CAErClkB,EAAOmkB,UAAU59B,KAAKyO,KAAKyG,MAAM7N,IAEjC,SAKHpL,KAAKu/B,SAASY,YAAc,SAAC3yB,EAAWpC,EAAkB6a,EAAgBpT,GACzE,IAAMtI,EAAQiI,KAAKyG,MAAM7N,GAEzB,EAAKb,MAAM,CAAEA,MAAOA,MAItB,YAAAq3B,SAAA,SAASpkB,GACRxd,KAAK0hC,eAAiBlkB,EAAO9H,IAEF,MAAvB1V,KAAKu/B,SAASa,OAAiBpgC,KAAKu/B,SAASa,MAAMn/B,OAAS,EAC/DjB,KAAKu/B,SAASc,YAGdrgC,KAAKuK,MAAM,CACVuE,QAAS9O,KAAKo3B,oBAAoBt2B,OAAO,mBACzCyJ,MAAO,MAKV,YAAAs3B,eAAA,SAAerjB,EAAmBsjB,GACjCC,OAAOC,SAASC,KAAOtvB,IAAM,iDAAmD6L,EAAzD7L,UAAsFmvB,GAG9G,YAAAI,aAAA,SAAa1jB,EAAmBsjB,GAAhC,WACC9hC,KAAK8U,QAAQwJ,WAAWE,EAAWsjB,GAAS73B,MAAK,SAAAmB,GAGhD,IADA,IAAI+2B,GAAU,EACN5+B,EAAE,EAAGA,EAAE,EAAK4a,QAAQld,OAAQsC,IAAI,CACvC,IAAIia,EAAS,EAAKW,QAAQ5a,GAC1B,GAAGia,EAAO9H,MAAQ8I,EAAU,CAE3B,IAAI,IAAItU,EAAM,EAAGA,EAAMsT,EAAOmkB,UAAU1gC,OAAQiJ,IAAQ,CAEvD,GADUsT,EAAOmkB,UAAUz3B,GACpBwL,MAAQosB,EAAQ,CACtBK,EAASj4B,EACT,OAICi4B,GAAU,GACZ3kB,EAAOmkB,UAAUj6B,OAAOy6B,EAAQ,GAGjC,WAIA93B,OAAM,SAACe,GACT,EAAKb,MAAMa,OAIN,YAAAg3B,aAAP,SAAoBhmC,GAChB4D,KAAKshC,oBAAsBllC,GAG/B,YAAAqlC,QAAA,sBAECzhC,KAAK8U,QAAQ+I,eAAe,OAAO5T,MAAK,SAAAk3B,GAEvC,EAAKA,SAAWA,KAEd92B,OAAM,SAACe,GACT,EAAKb,MAAMa,OAMb,YAAAi3B,SAAA,SAASlP,GAAT,WAICnzB,KAAK8U,QAAQuI,cAAc8V,EAASA,SAAS,GAAGzd,KAAKzL,MAAK,SAAAkU,GAC3D5J,QAAQC,IAAI2J,GACV,EAAKA,QAAUA,KAEb9T,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAg4B,UAAA,SAAUC,GAAV,WAEsB,MAAjBA,GAEHviC,KAAK8U,QAAQkJ,QAAQukB,EAAc7sB,KAAKzL,MAAK,SAAAu4B,GAC5CD,EAAgBC,EAGhB,EAAKf,UAEL,IAAMvzB,EAAa,EAAK/P,aAAagP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBH,EAAWI,QAAQS,WAAa,EAAKqoB,oBAAoBt2B,OAAO,qDAChEoN,EAAWI,QAAQivB,WAAa,EAAKnG,oBAAoBt2B,OAAO,qDAChEoN,EAAWI,QAAQQ,QAAU,EAAKsoB,oBAAoBt2B,OAAO,kDAE7DoN,EAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAEtC,IAAI6+B,EAAiB,EAAKC,6BAGzB,EAAK1F,OAAOQ,SAAS,CAAC,6BAA8BiF,EAAehyB,WAAWie,IAAK+T,EAAe5+B,cAAcvH,aAOhH+N,OAAM,SAACe,GACR,EAAKb,MAAMa,OAKf,YAAAs3B,2BAAA,WACC,IAAI,IAAIn/B,EAAE,EAAGA,EAAEvD,KAAKme,QAAQld,OAAQsC,IAAI,CACvC,IAAIia,EAASxd,KAAKme,QAAQ5a,GAE1B,GAAGia,EAAOmlB,eAAe,iBACxB,OAAOnlB,EAAsB,cAI/B,OAAO,MAGR,YAAAujB,SAAA,SAASwB,GAAT,WAEC,GAAqB,MAAjBA,EAAuB,CAC1B,IAAMr0B,EAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBH,EAAWI,QAAQvC,KAAO,SAC1BmC,EAAWI,QAAQS,WAAa/O,KAAKo3B,oBAAoBt2B,OAAO,6CAChEoN,EAAWI,QAAQQ,QAAU9O,KAAKo3B,oBAAoBt2B,OAAO,yCAE7DoN,EAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GACtC,EAAKkR,QAAQmJ,OAAOskB,EAAc7sB,KAAKzL,MAAK,SAAA24B,GAG3C,IADA,IAAIn3B,GAAO,EACHlI,EAAE,EAAGA,EAAE,EAAK49B,SAASlgC,OAAQsC,IAAI,CAExC,GADU,EAAK49B,SAAS59B,GACjBmS,MAAQktB,EAAiB,CAC/Bn3B,EAAMlI,EACN,OAICkI,GAAO,GACT,EAAK01B,SAASz5B,OAAO+D,EAAK,GAG3B,EAAKg2B,aACHp3B,OAAM,SAACe,GACT,EAAKb,MAAMa,WAMf,YAAAqS,4BAAA,SAA4BD,GAA5B,WAICxd,KAAK8U,QAAQ2I,4BAA4BD,GAAQvT,MAAK,SAAAmB,GACrDoS,EAAOqlB,cAA2C,YAA1BrlB,EAAOslB,eAAgC,EAAKvkC,YAAYwkC,cAAgB,MAG9F14B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA04B,aAAA,SAAaT,GAAb,WAEsB,MAAjBA,GACgBviC,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGXC,QAAQU,UAAUpO,WAAU,SAAAgD,GACtC,EAAKkR,QAAQsJ,kBAAkBmkB,EAAc7sB,IAAK,EAAKyI,SAASlU,MAAK,SAAAkU,GACpE,EAAKA,QAAUA,KACb9T,OAAM,SAACe,GACT,EAAKb,MAAMa,UAOf,YAAA63B,YAAA,SAAYV,GAAZ,WACsB,MAAjBA,GACgBviC,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGXC,QAAQU,UAAUpO,WAAU,SAAAgD,GACtC,EAAKkR,QAAQoJ,iBAAiBqkB,EAAc7sB,IAAK,EAAKyI,SAASlU,MAAK,SAAAkU,GACnE,EAAKA,QAAUA,KAIb9T,OAAM,SAACe,GACT,EAAKb,MAAMa,UAMR,YAAAb,MAAP,SAAaD,GACZtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,eAG5D,YAAA+kC,eAAA,SAAeh5B,EAAes4B,GAC7B,OAAOA,EAAQ9sB,KAGhB,YAAAytB,OAAA,SAAOr+B,EAAY4Q,GAEb5Q,EAAM6D,OAAOy6B,cAAcC,UAAUC,SAAS,QAAWx+B,EAAM6D,OAAO06B,UAAUC,SAAS,SACzFtjC,KAAKujC,WAAa7tB,EACrB1V,KAAKujC,SAAW,MAGhBvjC,KAAKujC,SAAW7tB,EAChB1V,KAAKqiC,SAAS,CAAElP,SAAU,CAAC,CAAEzd,IAAKA,SAKrC,YAAA5W,OAAA,SAAO0kC,GAAP,WAECxjC,KAAK8U,QAAQ+I,eAAe2lB,GAAUv5B,MAAK,SAAAk3B,GAC1C,EAAKA,SAAWA,KACd92B,OAAM,SAACe,GACT,EAAKb,MAAMa,MAGZpL,KAAKqhC,eAAiBmC,GAGvB,YAAAC,gBAAA,SAAgBjmB,EAAwByI,GAAxC,WACoBjmB,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAKXC,QAAQU,UAAUpO,WAAU,SAAAgD,GACtC4Z,EAAOslB,eAAiB7c,EAExB,EAAKxI,4BAA4BD,OAInC,YAAAkmB,yBAAA,SAAyBlmB,GAUxB,OARIA,EAAOmmB,WAAWC,SAAS,0BAA4BpmB,EAAOmmB,WAAWC,SAAS,yBAQ/EpmB,GAGR,YAAAqmB,iBAAA,SAAiBrmB,EAAasmB,GAE7B9jC,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAAnT,2BAA4B,CACpEmU,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQy1B,UAAUvmB,GAASsmB,EAAGE,YAAYV,SAAS,mBAEpE,YAAAvpB,WAAA,SAAWG,GACV,OAAOla,KAAKo3B,oBAAoBjd,qBAAqBD,IAGtD,YAAA6oB,YAAA,WACC,OAAO/iC,KAAKzB,YAAYwkC,e,iCAvXbzrC,GAAqB,oO,iCAArBA,EAAqB,sD,OAAA,K,8qNC/ClC,4BACE,4BACE,4BAEE,0BAAmB,wCAAS,EAAAwH,OAAO,UACjC,4BACF,iBACA,0BAAmB,wCAAS,EAAAA,OAAO,cACjC,4BACF,iBACA,0BAAmB,wCAAS,EAAAA,OAAO,eACjC,4BACF,iBACA,0BAAmB,wCAAS,EAAAA,OAAO,eACjC,6BACF,iBAEF,iBAEA,uBAEF,iBACF,iBAEA,6BACE,6BAEA,gCACE,6BACE,6BACE,6BAAqC,8BAA6D,iBAClG,6BAAqC,8BAAoD,iBACzF,6BAAqC,8BAAkE,iBACvG,6BAAqC,8BAAwD,iBAE7F,qBACF,iBACF,iBACI,6BACF,0CAgNF,iBACF,iBACA,iBACF,kB,MAtPiD,2FAGI,+FAGC,gGAGA,gGA0BrB,mDAAoB,mC,mzEDpBxC,CACX,CACC,EAAA8V,QAAQ,YAAa,CACpB,EAAAC,WAAW,SAAU,CACpB,EAAAlS,MAAM,CACLiZ,QAAS,IAEV,EAAA1H,QAAQ,WAET,EAAAW,WAAW,SACV,EAAAX,QAAQ,QACP,EAAAvR,MAAM,CACLiZ,QAAS,QAKb,EAAAhH,QAAQ,SAAU,CACjB,EAAAC,WAAW,SAAU,CACpB,EAAAlS,MAAM,CACLiZ,QAAS,IAEV,EAAA1H,QAAQ,kB,EA5Bb,GAkCa,EAAA5c,0B,sHE/Db,KACA,MADA,I,+GCSY,2DAA2K,iGAA2C,iB,gCAA3C,gCAAmB,wB,mDAC9L,0DAA+J,iGAA2C,iB,gCAA3C,gCAAmB,wB,mDAClL,6CAA+F,iGAA2C,iB,gCAA3C,gCAAmB,wBDH9H,iBA0BI,WAAoB4W,GAAA,KAAAA,a,OAVpB,YAAA61B,UADA,SACWvmB,EAAarI,GACtBnV,KAAKwd,OAASA,EACdxd,KAAKmV,SAAWA,GAUlB,YAAAlV,SAAA,aAGA,YAAAkwB,OAAA,WAC0B,MAAjBnwB,KAAKikC,UACNjkC,KAAKikC,SAASC,UAGI,MAAjBlkC,KAAKmkC,UACNnkC,KAAKmkC,SAASD,UAGI,MAAjBlkC,KAAKokC,UACNpkC,KAAKokC,SAASF,UAGlBlkC,KAAKkO,WAAWiJ,QAGpB,YAAA8pB,QAAA,WACIjhC,KAAKkO,WAAWiJ,Q,iCA3CXnd,GAA0B,oC,iCAA1BA,EAA0B,4D,OAAA,M,mrBCbvC,4BAOI,4BACI,4BACI,2DACA,0DACA,4CACJ,iBACJ,iBAEA,oBACA,4BACI,4BACI,4BACI,gCAAsB,wCAAS,EAAAm2B,YAC3B,4BAAO,6BACP,iBACJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAlBwD,6JACD,kJACd,gG,oBDHzC,GAKa,EAAAn2B,8B,wHEbb,KACA,MADA,IAEA,QACA,O,6DCAQ,yBACI,4BACJ,kB,mDAGJ,wCAME,uGAED,iB,gCANC,sCAAuB,gCAAvB,CAAuB,6CAAvB,CAAuB,kCAAvB,CAAuB,wBDG7B,iBAyCC,WAAmBkU,GAAA,KAAAA,aAFnB,KAAAqM,gBAA0B,E,OAI1B,YAAAta,SAAA,WACCD,KAAKwa,yBAA2B,IAAI,EAAA7I,SAGrC,YAAA6b,gBAAA,SAAgBlT,GAEf/F,QAAQC,IAAI,+BAAgC8F,GACnB,MAArBA,GACHta,KAAKwa,yBAAyBpN,KAAKkN,GAGpCta,KAAKkO,WAAWiJ,Q,iCA9BL/d,GAA4B,oC,iCAA5BA,EAA4B,iF,0aCrCzC,4BAEI,4BACI,6BAGJ,iBAEA,0CASJ,kB,MAdY,gDAMN,wD,6xBDSO,CACX,CACC,EAAAwb,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAlS,MAAM,CACLiZ,QAAS,IAEV,EAAA1H,QAAQ,YAET,EAAAW,WAAW,SACV,EAAAX,QAAQ,QACP,EAAAvR,MAAM,CACLiZ,QAAS,a,EAjBhB,GAwBa,EAAAxiB,gC,0HErCb,S,OAEA,2B,OAKI,YAAAirC,UAAA,SAAUC,EAAcxlC,GACpB,OAAKwlC,GAAUxlC,EAIRwlC,EAAMxlC,QAAO,SAAA0O,GAAQ,OAA+B,IAA/B1O,EAAOyN,QAAQiB,EAAKlR,SAHrCgoC,G,iCAHN/qC,I,qEAAAA,EAA8B,U,EAJ3C,GAIa,EAAAA,kC,sHCNb,KACA,MAIA,MALA,IAOA,S,sFCUY,uCDNZ,iBAeI,WAAqB69B,EAAkDj5B,EAAsC2W,GAAxF,KAAAsiB,sBAAkD,KAAAj5B,eAAsC,KAAA2W,UACzG9U,KAAK0wB,QAAU5b,EAAQ4b,UACvB1wB,KAAK2wB,aAAe3wB,KAAK0wB,SAAW5b,EAAQ6b,eAClD3wB,KAAK4wB,cAAgB5wB,KAAK0wB,SAAW1wB,KAAK2wB,cAAgB7b,EAAQ+b,gBAClE7wB,KAAKsX,kBAAoBxC,EAAQuD,oB,OAG/B,YAAApY,SAAA,aAIO,YAAAsK,MAAP,SAAcD,GACNtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCArB1DxE,GAA0B,sH,iCAA1BA,EAA0B,iTCjBvC,4BACE,4BACA,6BAEA,4BAEE,4BACE,4BACE,0BACE,4BACE,yBAAI,YAAa,iBACnB,iBAEA,6BAEE,gCAEA,iDACF,iBACF,iBAEF,iBACF,iBACF,iBACF,kB,MAdgB,gDAOmB,0D,2MDNnC,GAMa,EAAAA,8B,gHEjBb,WAQA,GALA,MAIA,OACA,QAEA,S,uFCGc,6BACE,YAEA,0BAGF,kB,qDALE,qDAGE,0HAA4G,oC,mDAMlH,4BACE,6BACI,6BACI,gCAA+B,2IAC3B,6BACJ,iBACJ,iBACJ,iBACF,kB,yBA3BN,4BACE,4BACE,4BACE,YACF,iBACF,iBACA,4BACE,4BACE,4BACE,8BAQF,iBAEA,8BASF,iBACF,iBACF,kB,2CA3BM,qDAMyD,iDAUxC,iDDX7B,iBA8BC,WAAoBwE,EAAsCG,GAAtC,KAAAH,eAAsC,KAAAG,kBArBhD,KAAAyZ,MAAQ,IAAI,EAAAta,aAEb,KAAA2W,SAAmB,EACnB,KAAAjF,UAAoB,EAIpB,KAAAyI,QAAgB,IAAI1C,KAEpB,KAAA+C,aAAuB,EAEtB,KAAAD,gBAAkB,IAAI,EAAAva,aAIhC,KAAA8mC,aAAsB,GAEtB,KAAAC,UAAiB,G,OAQjB,YAAAvkC,SAAA,WACC,IAAMgc,EAAMjc,KAAK4X,QAAQsE,aAEzBlc,KAAKywB,QAAUzwB,KAAK4X,QAAQyE,iBAAmB,KAAOrc,KAAK4X,QAAQwE,cAAgB,GAAK,KAAOH,EAAM,GAAK,IAAM,IAAMA,EAGtHjc,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMjZ,KAAKywB,UAExCzwB,KAAKkZ,aAGN,YAAAtF,YAAA,SAAYmF,GAEPA,EAAiB,SACpB/Y,KAAKkZ,aAIP,YAAAA,UAAA,sBACOM,EAAOxZ,KAAK4X,QAAQ6B,UAE1BzZ,KAAKoU,SAAU,EAEfpU,KAAKukC,aAAe,GACpBvkC,KAAKwD,YAAYnC,SAAQ,SAAAoC,GACxB,IAAM8V,EAAS,GACfA,EAAc,MAAI9V,EAAUmE,MAC5B2R,EAAa,KAAI9V,EAAUnH,KAE3B,EAAK8X,QAAU,EAAKA,SAAY,EAAK5Q,YAAYvC,OAAS,EAE1DwC,EAAUmqB,QAAQvsB,SAAQ,SAAAguB,GACzB,IAAM3V,EAAYxE,KAAK+D,MAAMoW,EAAI3V,WAC3BC,EAAUzE,KAAK+D,MAAMoW,EAAI1V,SAE/B,GAAIH,GAAQE,GAAaF,GAAQG,EAAS,CACzC,IAAI,EAAU,GAEdlW,EAAU+H,MAAMnK,SAAQ,SAAA0K,GACvB,IAAIrG,EAAc,CACjBpJ,KAAMyP,EAAKzP,KACXsL,MAAOmE,EAAKnE,OAGiB,MAA1BynB,EAAItB,QAAQhiB,EAAKzP,QACpBoJ,EAAOuB,KAAOooB,EAAItB,QAAQhiB,EAAKzP,MAAM2K,KACrCvB,EAAOgf,UAAY2K,EAAItB,QAAQhiB,EAAKzP,MAAMooB,WAG3C,EAAQ3gB,KAAK2B,MAGd6T,EAAgB,QAAI,MAItB,EAAKgrB,aAAaxgC,KAAKwV,MAIxBvZ,KAAK+X,MAAMe,QAGL,YAAA4C,WAAP,WACC,OAAO,GAGD,YAAAgX,eAAP,WACC,OAAO1yB,KAAKwD,aAGb,YAAAihC,iBAAA,SAAiBnoC,GAAjB,WACOmH,EAAYzD,KAAKwD,YAAYG,MAAK,SAAA+I,GAAK,OAAAA,EAAEpQ,OAASA,KAEpD0D,KAAKiY,YACRjY,KAAKgY,gBAAgBc,KAAKrV,IAI1BzD,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAArT,mCAAoC,CAC5EqU,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQnD,KAAK1H,GAC7BzD,KAAKkO,WAAWI,QAAQkf,gBAAgB5sB,WAAU,SAAA6C,GACjD,EAAKyV,iBAKD,YAAA3O,MAAP,SAAaD,GACZtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCAzHhDvE,GAAoB,+E,iCAApBA,EAAoB,+D,OAAA,K,wiCChBjC,+BACE,+BACE,0BACE,8BA+BF,iBACF,iBACF,kB,MAjCwD,wD,wIDQxD,GAKa,EAAAA,wB,+GEjBb,KAEA,MACA,MAHA,IAMA,QACA,SAIA,GADA,OACA,QACA,SAEA,S,GACA,M,2ICTQ,6BAAqE,YAAW,kB,6BAAX,+C,yBAGjE,4BACI,yBAEI,YACJ,iBACJ,kB,6BAFQ,kE,yBAIZ,4BAEI,4BACI,yBACI,6BACA,kBAAE,8BACI,YACJ,iBACN,iBAEA,yBACI,6BACA,kBAAE,+BACI,aACJ,iBACN,iBACJ,iBACJ,kB,6BAXkB,8EAOA,2E,yBAmBN,yBAA6B,YAAW,kB,uBAAX,6C,yBAJzC,4BACI,6BACI,6BACA,yBACI,8BACJ,iBACJ,iBACJ,kB,6BAHgB,iD,uHAkBJ,8BAA6C,4FACzC,sBACA,6BACJ,iB,gCAFO,8E,qHAKH,gCAGI,6BACJ,kB,6BAHG,4I,qBAKC,6B,qBACA,6B,mDAaI,6BACI,2BAAY,mIACtC,sB,uBAC0B,iBAC5B,iB,0CAH0E,6DACvB,kF,qBAKlD,sB,qBACA,sB,mDAQ+B,+BAAkE,4GAA6B,kIAA/F,iB,2CAA0C,4BAAuB,oB,mDACjE,0BACI,+BAAyC,kHAAmC,4HAA5E,iBAAqK,+BAAuC,gHAAiC,4HAAxE,iBACzK,iB,2CADW,mDAAiC,yBAAoI,iDAA+B,wB,iGAE/M,+BAIE,6GAA8B,yIAA9B,CAA8B,+I,uBAJhC,iB,gEAEE,yEAAwD,cAAxD,CAAwD,mBAAxD,CAAwD,oBAAxD,CAAwD,2BAAxD,CAAwD,4BAAxD,CAAwD,uBAAxD,CAAwD,sBAAxD,CAAwD,8C,yBAXlE,0BAII,6BACI,iCACA,+BAGA,kCAgBJ,iBACJ,kB,uCAtB4B,sDACb,qDACF,oDAGE,qD,mDAtBnB,4BAEI,+BAKxB,2BAAG,6GAAkG,YAAoB,iBACzH,2BAAG,6GACF,6BACA,6BACoB,iBAEG,+BA2BJ,iB,+CAtCmF,sDAKF,oDAEjG,oFACA,qFAGyB,uD,yBAmCT,4BAAmE,YAA4B,kB,qDAA5B,+C,+GAJvE,4BACI,4BACE,sBACF,iBACA,8BACJ,kB,4CAHoB,+EAAqD,qIAEjE,0D,kGArDpB,6BACI,+BACI,4BACI,yBACI,4BAA2C,6BAAkD,iBAC7F,8BAyCJ,iBACJ,iBACA,4BACI,+B,uBAMJ,iBACJ,iBACJ,kB,6BApDoB,yDA4CJ,gJDnH5B,iBAiCC,WAAmBkb,EAAkC4vB,EAAmCC,EAC/ExmC,EAAsCE,EAA8CE,GAD1E,KAAAuW,UAAkC,KAAA4vB,WAAmC,KAAAC,QAC/E,KAAAxmC,eAAsC,KAAAE,kBAA8C,KAAAE,cA5B7F,KAAAuQ,QAAkB,KAClB,KAAAmV,KAA0B,KAC1B,KAAA2gB,EAAY,EACZ,KAAA9W,QAAkB,GAClB,KAAAhvB,OAAgE,GAChE,KAAAq0B,SAAqB,GACrB,KAAA0R,KAAY,CACXC,MAAO,EACPpiB,WAAY,EACZD,SAAU,IACV+L,QAAS,IAEV,KAAAxiB,KAAO,CAAEgI,UAAW,OAAQ+wB,MAAO,OACnC,KAAAC,aAAuB,EACvB,KAAAC,cAAwB,EACxB,KAAAC,YAAsB,EAOf,KAAAC,kBAAoB,GAQ1BnlC,KAAKmlC,kBAAoB9mC,EAAgByC,OAAO,qB,OAGjD,YAAAb,SAAA,sBACOyV,EAAM1V,KAAK2kC,MAAMS,SAASC,SAAS3yB,IAAI,OAC7C1S,KAAKglC,YAAgE,QAAjDhlC,KAAK2kC,MAAMS,SAASC,SAAS3yB,IAAI,aAErD1S,KAAK8U,QAAQ4O,qBAAqBhO,GAAKzL,MAAK,SAAA2f,GAC3C,EAAK3F,KAAO2F,EACZ,EAAK3F,KAAKxT,WAAWpP,SAAQ,SAAA2S,GAC5BA,EAAUsxB,aAAc,KAEzB,IAAM16B,EAAU,EAAKqZ,KAAKrZ,QACpB6K,EAAsC,MAA3B,EAAKwO,KAAK7gB,cAAwB,EAAK6gB,KAAK7gB,cAAgB,EAAK6gB,KAAKxO,SAEvF,EAAKyvB,WAAa,EAAK3mC,YAAYsxB,kBAAkBjlB,EAAS6K,GAE9D,EAAK8vB,aAAa,MAGnB,IAAIC,EAAU,SAAWzD,OAAOC,SAASyD,UAAY1D,OAAOC,SAAS0D,KAAO,IAAM3D,OAAOC,SAAS0D,KAAO,IAAM/yB,IAE/G3S,KAAK2lC,SAAW,EAAAC,UAAUJ,EAAU,uBAAyB9vB,GAC7D1V,KAAK2lC,SAAS/kC,WAAU,SAAAkO,GACvB,EAAK+2B,qBAAqB/2B,EAAQR,aAIpC,YAAAuF,YAAA,WACC7T,KAAK2lC,SAASzyB,YAIf,YAAAqyB,aAAA,SAAa7iB,GAAb,WAEC1iB,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQlR,KAAK5D,KAAKikB,KAAKvO,IAAKgN,EAAY1iB,KAAK6kC,KAAKpiB,SAAUziB,KAAKlB,OAAQkB,KAAKgM,MAAM/B,MAAK,SAAA46B,GAC7F,EAAKA,KAAOA,KACVx6B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAUb,YAAAw7B,OAAA,SAAO9xB,GACFhU,KAAKgM,KAAKgI,YAAcA,EAAUwT,KACrCxnB,KAAKgM,KAAK+4B,MAA6B,QAApB/kC,KAAKgM,KAAK+4B,MAAkB,OAAS,MAGxD/kC,KAAKgM,KAAO,CAAEgI,UAAWA,EAAUwT,KAAMud,MAAO,OAGjD/kC,KAAKulC,aAAa,IAGnB,YAAAQ,aAAA,WACC/lC,KAAKikB,KAAKxT,WAAWpP,SAAQ,SAAAQ,GAC5BA,EAAK+e,OAAS,QAGf5gB,KAAKlB,OAAS,GACdkB,KAAKmzB,SAAW,GAEhBnzB,KAAKulC,aAAa,IAGnB,YAAAS,aAAA,SAAahyB,GACZA,EAAUsxB,aAAetxB,EAAUsxB,aAGpC,YAAAW,UAAA,SAAUjyB,GAAV,WACC,OAAO,EAAAoa,WAAWxY,QAAO,SAACyY,GACzB,EAAKvf,QAAU,KAGf,EAAKgG,QAAQ+E,OAAO,EAAKoK,KAAKvO,IAAK1B,EAAU4M,OAAQ5M,EAAUwT,KAAMxT,EAAUkyB,KAAM,EAAKpnC,QAAQmL,MAAK,SAAA5K,GACtGA,EAAQ8mC,QAAQ,CAAEv+B,MAAO,IAAM,EAAKvJ,gBAAgByC,OAAO,uBAAyB,IAAKwT,MAAO,OAEhG+Z,EAASjhB,KAAK/N,MACZgL,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAu7B,qBAAA,SAAqBt2B,GAEpBvP,KAAKilC,aAAgB11B,EAASue,QAAUve,EAAS62B,MAEjDpmC,KAAK0kC,SAASn1B,SAASA,IAGxB,YAAA0hB,iBAAA,SAAiBjd,GAOhB,GANAA,EAAUsxB,aAAc,EAGxBtlC,KAAKlB,OAASkB,KAAKlB,OAAOA,QAAO,SAAAunC,GAAK,OAAAA,EAAEryB,YAAcA,EAAUkyB,QAChElmC,KAAKmzB,SAAWnzB,KAAKmzB,SAASr0B,QAAO,SAAAwnC,GAAK,OAAAA,IAAMtyB,EAAUkyB,QAEnC,MAAnBlyB,EAAUM,QAA4C,KAA1BN,EAAUM,MAAMvB,OAAwC,KAAxBiB,EAAUM,MAAMsI,KAAa,CAE5F,IAAIhV,EAAQ,IAAMoM,EAAUpM,MAAQ,QAEP,MAAzBoM,EAAUM,MAAMvB,QACnBnL,GAASoM,EAAUM,MAAMvB,OAGG,MAAzBiB,EAAUM,MAAMvB,OAAwC,MAAvBiB,EAAUM,MAAMsI,MACpDhV,GAAS,OAGiB,MAAvBoM,EAAUM,MAAMsI,MACnBhV,GAASoM,EAAUM,MAAMsI,KAG1BhV,GAAS,IAET5H,KAAKlB,OAAOiF,KAAK,CAAEiQ,UAAWA,EAAUkyB,KAAM5xB,MAAON,EAAUM,MAAO1M,MAAOA,IAC7E5H,KAAKmzB,SAASpvB,KAAKiQ,EAAUkyB,MAG9BlmC,KAAKulC,aAAa,IAGnB,YAAAgB,kBAAA,SAAkBvyB,GAOjB,GANAA,EAAUsxB,aAAc,EAGxBtlC,KAAKlB,OAASkB,KAAKlB,OAAOA,QAAO,SAAAunC,GAAK,OAAAA,EAAEryB,YAAcA,EAAUkyB,QAChElmC,KAAKmzB,SAAWnzB,KAAKmzB,SAASr0B,QAAO,SAAAwnC,GAAK,OAAAA,IAAMtyB,EAAUkyB,QAEnC,MAAnBlyB,EAAUM,OAAqC,KAApBN,EAAUM,MAAc,CACtD,IAAM1M,EAAQ,IAAMoM,EAAUpM,MAAhB,QAAuCoM,EAAUM,MAAQ,IAEvEtU,KAAKlB,OAAOiF,KAAK,CAAEiQ,UAAWA,EAAUkyB,KAAM5xB,MAAON,EAAUM,MAAO1M,MAAOA,IAC7E5H,KAAKmzB,SAASpvB,KAAKiQ,EAAUkyB,MAG9BlmC,KAAKulC,aAAa,IAGnB,YAAAiB,iBAAA,SAAiBpqC,EAAmB4X,GAcnC,GAbAA,EAAUM,MAAQlY,EAAEoR,KACpBwG,EAAUsxB,aAAc,EAGxBtlC,KAAKlB,OAASkB,KAAKlB,OAAOA,QAAO,SAAAunC,GAAK,OAAAA,EAAEryB,YAAcA,EAAUkyB,QAChElmC,KAAKmzB,SAAWnzB,KAAKmzB,SAASr0B,QAAO,SAAAwnC,GAAK,OAAAA,IAAMtyB,EAAUkyB,QAE1DlmC,KAAKikB,KAAKxT,WAAWpP,SAAQ,SAAAQ,GACxBA,EAAKqkC,OAASlyB,EAAUkyB,OAC3BrkC,EAAK+e,OAAS,OAIa,MAAzB5M,EAAUM,MAAMA,OAA2C,KAA1BN,EAAUM,MAAMA,MAAc,CAClE,IAAM1M,EAAQ,IAAMoM,EAAUpM,MAAhB,QAAuCoM,EAAUM,MAAM1M,MAAQ,IAE7E5H,KAAKlB,OAAOiF,KAAK,CAAEiQ,UAAWA,EAAUkyB,KAAM5xB,MAAOlY,EAAEoR,KAAK8G,MAAO1M,MAAOA,IAC1E5H,KAAKmzB,SAASpvB,KAAKiQ,EAAUkyB,MAC7BlyB,EAAU4M,OAASxkB,EAAEoR,KAAK5F,WAG1BoM,EAAU4M,OAAS,GAGpB5gB,KAAKulC,aAAa,IAGnB,YAAAkB,aAAA,SAAazyB,GACZ,MAA0B,SAAnBA,EAAUjI,OAAoD,IAAhCiI,EAAU0yB,WAAWzlC,SAA2D,IAA3CjB,KAAKmzB,SAAS5mB,QAAQyH,EAAUkyB,OAAgBlmC,KAAKmzB,SAASr0B,QAAO,SAAAwV,GAAS,OAAAN,EAAU0yB,WAAWpD,SAAShvB,MAAQrT,OAAS,IAGxM,YAAAsuB,OAAA,SAAO3rB,GAAP,WACK+iC,EAAY3mC,KAAK7B,aAAagP,KAAK,EAAA7T,yBAA0B,CAAE8U,UAAU,EAAMC,qBAAqB,IACxGs4B,EAAUr4B,QAAQ0jB,oBAAoBpuB,EAAKtH,KAAM0D,KAAKikB,KAAKxO,SAAUzV,KAAKikB,KAAKrM,QAAS5X,KAAKikB,KAAKqN,oBAClGqV,EAAUr4B,QAAQ0iB,gBAAgBhxB,KAAKikB,KAAKvO,KAC5CixB,EAAUr4B,QAAQ4iB,sBAAqB,WAEtC,EAAKqU,aAAa,EAAKV,KAAKniB,gBAI9B,YAAAkkB,UAAA,sBACC5mC,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQwP,kBAAkBtkB,KAAKikB,KAAKvO,KAAK9C,YAC5C3I,MAAK,SAAAga,GACL,EAAKA,KAAOA,EACZ,EAAKA,KAAKxT,WAAWpP,SAAQ,SAAA2S,GAC5BA,EAAUsxB,aAAc,KAIzB,EAAKC,aAAa,MAChBl7B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAId,YAAAu8B,eAAA,sBACKF,EAAY3mC,KAAK7B,aAAagP,KAAK,EAAA7T,yBAA0B,CAAE8U,UAAU,EAAMC,qBAAqB,IAExGs4B,EAAUr4B,QAAQ+iB,eAAerxB,KAAKikB,KAAKxO,SAAUzV,KAAKikB,KAAKrM,QAAS5X,KAAKikB,KAAKqN,oBAClFqV,EAAUr4B,QAAQ0iB,gBAAgBhxB,KAAKikB,KAAKvO,KAC5CixB,EAAUr4B,QAAQ4iB,sBAAqB,WAEtC,EAAKqU,aAAa,EAAKV,KAAKniB,gBAI9B,YAAAokB,SAAA,sBACC9mC,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA1S,2BAA4B,CACpE0T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQ0yB,SAASpgC,WAAU,SAAAiuB,GAC5B,aAAVA,EACHkT,OAAOC,SAASC,KAAOtvB,IAAM,qCAAuC,EAAKsR,KAAKvO,IAAM,WAAaqxB,mBAAmBv0B,KAAKC,UAAU,EAAK3T,SAEtH,SAAV+vB,IACRkT,OAAOC,SAASC,KAAOtvB,IAAM,uCAAyC,EAAKsR,KAAKvO,IAAM,WAAaqxB,mBAAmBv0B,KAAKC,UAAU,EAAK3T,cAK7I,YAAAkxB,uBAAA,SAAuBhc,EAAgB0Z,GACtC1Z,EAAU0Z,QAAUA,GAGrB,YAAA3T,WAAA,SAAWG,GACV,OAAOla,KAAK3B,gBAAgB8b,qBAAqBD,IAGlD,YAAA3P,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAjRrClQ,GAAmB,0O,iCAAnBA,EAAmB,k8GCxBhC,4BACI,4BACA,6BAGA,4BACI,8BAEA,4BACI,8BAMJ,iBACA,+BA4BA,8BAQA,4BACI,6BACI,6CAAiD,8CAAc,EAAAmrC,aAAA,MAAsB,iBAErF,6BAEI,+BAAwB,wCAAS,EAAAQ,kBAC7B,+BACI,uBACA,uBACJ,iBACA,8BACJ,iBAEA,iCAMI,mCAKA,iCAAsB,wCAAS,EAAAe,cAC3B,qCACA,qCACJ,iBACR,iBACJ,iBACJ,iBACA,6BACI,iCA0DJ,iBAKA,6BACI,6BACI,6CAAiD,8CAAc,EAAAvB,aAAA,MAAsB,iBACzF,iBACJ,iBACJ,iBAEJ,kB,MArJa,oDAGI,2CAOJ,2CA4BA,sDAsBa,oDAMM,qEAMM,wDACA,sDAMrB,6C,gVDlEjB,GAKa,EAAAnrC,uB,+HExBb,KACA,MACA,MAFA,IAIA,SAIA,SAGA,S,GACA,OACA,M,yGCZI,6BAAqE,YAAW,kB,6BAAX,+C,mDAEpE,6BACG,6BACI,mCACI,6BACI,gCAAiD,4F,uBAE7C,6BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,+BAP6H,kDAA2B,4D,mDA0B5H,gCAAmD,yIAC/C,6BACJ,kB,mDACA,gCAAgD,0IAC5C,6BACJ,kB,mDACA,gCAAmD,gJAC/C,6BACJ,kB,mDAdZ,yBACI,4BACI,6BACI,gCAAsB,6GAClB,6BACJ,iBACA,kCAGA,kCAGA,kCAGJ,iBACJ,iBACA,4BACE,8BACI,aACJ,iBACF,iBACA,6BACE,+BACI,aACJ,iBACF,iBAEJ,iB,+CAtBoB,yDAGA,gDAGA,yDAOV,qEAKA,0E,yBAlCtB,6BACI,+BACI,4BACI,yBACI,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAAkD,iBAClG,iBACJ,iBACA,6BACI,gCA6BJ,iBACJ,iBACJ,kB,6BA/BgB,yD,yBAuDoB,8BAAqD,YAA0B,kB,uCAA1B,kE,yBATrE,yBACI,4BACI,6BACI,sBACA,2BACI,8BAA+B,YAAmB,iBAClD,8BAA+B,YAAe,iBAC9C,8BAA+B,aAAa,iBAC5C,+BAA+B,aAAe,iBAC9C,iCACJ,iBACJ,iBACJ,iBACJ,kB,uBAR+C,0DACA,sDACA,oDACA,sDACzB,iD,mDAO9B,6BACI,6CAAqB,sGAAoC,iBAC7D,kB,yED1EpB,aA2BC,WAAmB0a,EAAkCkoB,EAAwB7+B,EAAqCI,EAAkCF,GAAjI,KAAAyW,UAAkC,KAAAkoB,SAAwB,KAAA7+B,eAAqC,KAAAI,cAAkC,KAAAF,kBArBpJ,KAAAyQ,QAAkB,KAClB,KAAAmV,KAAmB,KACnB,KAAA4gB,KAAY,CACXpiB,SAAU,GACVC,WAAY,EACZoiB,MAAO,EACPtW,QAAS,IAiBTxuB,KAAK0wB,QAAUnyB,EAAYmyB,U,OAG5B,YAAAzwB,SAAA,sBACCD,KAAK8U,QAAQyO,qBAAqBvjB,KAAK0V,IAAK,aAAazL,MAAK,SAAAga,GAC7D,EAAKA,KAAOA,EAEZ,EAAKshB,aAAa,MAGnB,IAAIC,EAAU,SAAWzD,OAAOC,SAASyD,UAAY1D,OAAOC,SAAS0D,KAAO,IAAM3D,OAAOC,SAAS0D,KAAO,IAAM/yB,IAE/G3S,KAAK2lC,SAAW,EAAAC,UAAUJ,EAAU,qBACpCxlC,KAAK2lC,SAAS/kC,WAAU,SAAAkO,GACF,uBAAjBA,EAAQ/C,MACX,EAAKw5B,aAAa,EAAKV,KAAKniB,gBAK/B,YAAA7O,YAAA,WACC7T,KAAK2lC,SAASzyB,YAOf,YAAA8zB,0BAAA,SAA0Bpd,GAA1B,WACC5pB,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO8oB,EAAQhS,QAAU,IACxH5X,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,uBAEjEd,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAC3C,EAAKkR,QAAQuP,wBAAwBuF,EAAQlU,KAAKzL,MAAK,SAAAmB,GACtD,EAAK67B,gBAEH58B,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAA28B,WAAA,sBAECjnC,KAAK8U,QAAQyO,qBAAqBvjB,KAAK0V,IAAK,aAAazL,MAAK,SAAAga,GAC7D,EAAKA,KAAOA,KACV5Z,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAs8B,UAAA,sBACC5mC,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQqP,0BAA0BnkB,KAAKikB,KAAKvO,KAAKzL,MAAK,SAACrG,GAE3D,EAAK2hC,aAAa,EAAKV,KAAKniB,eAE1BrY,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAi7B,aAAA,SAAa7iB,GAAb,WACkB,MAAb1iB,KAAKikB,OAERjkB,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQkQ,yBAAyBhlB,KAAKikB,KAAKvO,IAAK1V,KAAK6kC,KAAKpiB,SAAUC,EAAY,cAAc,GAAMzY,MAAK,SAAAmB,GAE7G,EAAKy5B,KAAOz5B,KAEVf,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZtK,KAAKinC,eAIP,YAAAC,eAAA,WACClnC,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA5S,sBAAuB,CAC/D4T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQ6G,UAAW,EACnCnV,KAAKkO,WAAWI,QAAQgH,OAAStV,KAAKikB,KACtCjkB,KAAKkO,WAAWI,QAAQ8G,OAAQ,GAIjC,YAAAwrB,OAAA,SAAOhX,GACN5pB,KAAKg9B,OAAOQ,SAAS,CAAC,yBAA0B5T,EAAQlU,KAAK,KAG9D,YAAAyxB,mBAAA,SAAmBvd,GAAnB,WAEC5pB,KAAK8U,QAAQgQ,iBAAiB8E,EAAQlU,KAAKzL,MAAK,WAE/C,EAAKs7B,aAAa,EAAKV,KAAKniB,eAE1BrY,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA88B,oBAAA,SAAoBxd,GACnBmY,OAAOC,SAASC,KAAOtvB,IAAM,uCAAyCiX,EAAQlU,KAG/E,YAAAqE,WAAA,SAAWG,GACV,OAAOla,KAAK3B,gBAAgB8b,qBAAqBD,IAGlD,YAAA3P,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAjJrChQ,GAAmC,2L,iCAAnCA,EAAmC,+4DCtBhD,0BACI,8BAEC,8BAaD,4BACI,+BA0CJ,iBAGA,4BACI,4BACI,2BACI,4BACI,8BACI,6BACI,4BACI,6BAAoC,8BAA2C,iBACnF,iBACJ,iBACA,6BACI,gC,wBAcJ,iBACJ,iBACA,gCAGJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,MA/FS,oDAEC,yDAcG,2CAwDmB,iJAgBP,8D,4MDxEzB,GAKa,EAAAA,uC,sHEtBb,KACA,MACA,MAFA,IAOA,SACA,S,GAEA,OACA,M,uFCVI,4BAAqE,YAAW,kB,6BAAX,+C,mDAErE,4BAEI,4BACI,+BACI,4BACI,+BAA+D,6BAAoD,iBAAS,+BAA+C,mGAA/C,iBAE5H,gCAAiD,4FAC7C,6BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,mDAR2L,iDAE9D,mD,mDA0BjG,gCAAyC,+HACrC,6BACJ,kB,mDARZ,yBACI,4BACI,6BACI,gCAAsB,6GAClB,6BACJ,iBACA,kCAGJ,iBACJ,iBACA,4BACE,8BACI,YACJ,iBACF,iBACA,4BACE,+BACI,aACJ,iBACF,iBACJ,iB,+CAfoB,iDAOV,qEAKA,yE,yBA7BtB,6BACI,+BACI,4BACI,yBACI,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAAoD,iBACpG,iBACJ,iBACA,6BAEI,gCAsBJ,iBACJ,iBACJ,kB,6BAxBgB,yDDjBxB,iBAiBC,WAAmBwa,EAAkCkoB,EAAwB7+B,EAAsCE,GAAhG,KAAAyW,UAAkC,KAAAkoB,SAAwB,KAAA7+B,eAAsC,KAAAE,kBAXnH,KAAAyQ,QAAkB,KAClB,KAAAmV,KAAmB,KACnB,KAAArM,QAAkB,G,OAalB,YAAA3X,SAAA,sBACCD,KAAK8U,QAAQyO,qBAAqBvjB,KAAK0V,IAAK,eAAezL,MAAK,SAAAga,GAC/D,EAAKA,KAAOA,MAKd,YAAA2iB,UAAA,sBACC5mC,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQoP,wBAAwBlkB,KAAKikB,KAAKvO,IAAK1V,KAAK4X,SAAS3N,MAAK,SAAA2f,GACtE,EAAK3F,KAAKoF,SAAStlB,KAAK6lB,MAEtBvf,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA48B,eAAA,WACClnC,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA5S,sBAAuB,CAC/D4T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQ6G,UAAW,EACnCnV,KAAKkO,WAAWI,QAAQgH,OAAStV,KAAKikB,KACtCjkB,KAAKkO,WAAWI,QAAQ8G,OAAQ,GAIjC,YAAAwrB,OAAA,SAAOhX,GACN5pB,KAAKg9B,OAAOQ,SAAS,CAAC,yBAA0B5T,EAAQlU,KAAK,KAG9D,YAAAqrB,SAAA,SAASnX,GAAT,WACC5pB,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO8oB,EAAQhS,QAAU,IACxH5X,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,uBAEjEd,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAC3C,EAAKkR,QAAQuP,wBAAwBuF,EAAQlU,KAAKzL,MAAK,SAAAmB,GACtD,EAAK6Y,KAAKoF,SAAW,EAAKpF,KAAKoF,SAASvqB,QAAO,SAACwV,EAAOpK,EAAO2R,GAC7D,OAAOvH,EAAMoB,MAAQkU,EAAQlU,UAG5BrL,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAyP,WAAA,SAAWG,GACV,OAAOla,KAAK3B,gBAAgB8b,qBAAqBD,IAIlD,YAAA3P,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA7ErCjQ,GAA0B,wJ,iCAA1BA,EAA0B,+zCClBvC,0BACI,8BAEA,+BAeA,4BACI,+BAoCJ,iBACJ,kB,MAvDS,oDAEA,+DAgBI,6C,+MDNb,GAKa,EAAAA,8B,mHElBb,KACA,MACA,MAIA,OANA,IAOA,S,2GCGgB,4BACI,4BACI,yBAAI,YAAoC,iBAC5C,iBACJ,kB,6BAFY,wE,mDAGZ,4BACI,4BACI,yBACI,wBAAI,2BAAY,mGAAiC,6BAA4C,iBAAI,iBACrG,iBACJ,iBACJ,kB,uFAGI,0BAAoH,2FAAuB,UAAQ,6BAAwD,iB,gCAAjI,kE,wBAK1E,kD,6BAAiE,gC,wBACjE,wC,6BAAuD,gCDrB3E,iBAgBC,WAAoBya,EAAkC3W,EAAsCwmC,GAAxE,KAAA7vB,UAAkC,KAAA3W,eAAsC,KAAAwmC,QAR5F,KAAAr2B,QAAkB,GAClB,KAAA2V,KAAmB,K,OAUnB,YAAAhkB,SAAA,sBACOyV,EAAM1V,KAAK2kC,MAAMS,SAASC,SAAS3yB,IAAI,OAElC,MAAPgD,IACH1V,KAAKsO,QAAU,OAGhBtO,KAAK8U,QAAQyP,cAAc7O,GAAKzL,MAAK,SAAAga,GACpC,EAAKA,KAAOA,EAERA,EAAK0c,OACR,EAAKryB,QAAU,WAKlB,YAAA44B,eAAA,SAAepiC,GACdA,EAAM2I,iBAENzN,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA5S,sBAAuB,CAC/D4T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQ6G,UAAW,EACnCnV,KAAKkO,WAAWI,QAAQgH,OAAStV,KAAKikB,KACtCjkB,KAAKkO,WAAWI,QAAQ8G,OAAQ,GAGjC,YAAAgpB,cAAA,SAAc9vB,GACbtO,KAAKsO,QAAUA,G,iCA3CJ9T,GAAuB,qH,iCAAvBA,EAAuB,qkBCfpC,4BACI,4BACA,6BAEA,4BAGI,4BACI,4BAEI,8BAKA,8BAQA,0BACI,4BACA,2BAA0F,wCAAS,EAAA4jC,cAAc,UAAQ,6BAAsD,iBACnL,iBAEA,6BACI,yDACA,+CACJ,iBAEJ,iBACJ,iBACJ,iBACJ,kB,MA1BqB,2CAKA,2CASE,wDAC6C,gFAIjB,8DACV,gE,qPDrBzC,GAMa,EAAA5jC,2B,kHEfb,KACA,MACA,MAFA,IAKA,QAMA,GAHA,OAGA,QAEA,GADA,MACA,Q,mHCRQ,6BAAqE,YAAW,kB,6BAAX,+C,qBAgDzB,6B,qBACA,6B,mDAGR,gCAAiE,uJAC7D,6BACJ,kB,mDACA,gCAA6D,wJACvE,6BACF,kB,yBAdI,4BAEI,6BACI,2BACI,gCACI,oCACA,oCACJ,iBACJ,iBACA,kCAGA,kCAGJ,iBACJ,kB,uCAbW,uEAEe,+FACA,6FAGV,mEAGA,gE,yBAlCpB,yBACI,4BACI,6BACI,sBACA,2BACI,8BACI,YACJ,iBACA,8BACI,8BACI,YACJ,iBACJ,iBACA,+BACI,aACJ,iBACJ,iBAEA,oCAEJ,iBACJ,iBACA,+BAiBJ,kB,2CAjCoB,wDAII,wEAIJ,kEAIQ,kDAIpB,+D,mDAqBhB,6BACI,6CAAqC,gHAA8C,iBACvF,kB,sBAUG,4BACE,6BACF,kB,sBACA,4BACG,6BACF,kB,sBACA,4BACE,6BACF,kB,sBACA,4BACE,6BACF,kB,mDACD,4BACE,gCAAsB,wGACpB,6BACF,iBACF,kB,qBACA,uB,qBA6BF,uB,yBAvBF,yBACE,4BACE,6BACG,sBACA,2BAAyC,YAAgB,iBAC5D,iBACF,iBACA,4BACE,2BAAwC,YAAwB,iBAClE,iBACA,4BACG,4BAAwC,aAAuB,iBACjE,iBACA,6BACI,+BACE,aACF,iBACJ,iBACA,6BACE,+BACI,aACJ,iBACF,iBACD,+BAMD,kB,2CAzB+C,+CAIJ,yDAGC,sDAIpC,wEAKA,4EAGH,+D,mDAUR,6BACG,6CAAuC,kHAAgD,iBAC1F,kB,gLD5HrB,aAsCC,WAAmBsa,EAAkC3W,EAAsC6+B,EAClF3+B,EAAsCE,EAAiC8oC,GAD7D,KAAAvyB,UAAkC,KAAA3W,eAAsC,KAAA6+B,SAClF,KAAA3+B,kBAAuE,KAAAgpC,YAjChF,KAAAv4B,QAAkB,KAElB,KAAAw4B,eAAiC,CAChCxC,MAAO,EACPpiB,WAAY,EACZD,SAAU,GACV+L,QAAS,IAGV,KAAA+Y,iBAAmC,CAClCzC,MAAO,EACPpiB,WAAY,EACZD,SAAU,GACV+L,QAAS,IAYV,KAAAgZ,kBAA4B,EAC5B,KAAAC,oBAA8B,EAI9B,KAAAC,eAAyB,EAIxB1nC,KAAK0wB,QAAUnyB,EAAYmyB,UAC3B1wB,KAAK2wB,aAAe3wB,KAAK0wB,SAAWnyB,EAAYoyB,eAChD3wB,KAAK4wB,cAAgB5wB,KAAK0wB,SAAW1wB,KAAK2wB,cAAgBpyB,EAAYsyB,gB,OAGvE,YAAA5wB,SAAA,sBAECD,KAAK2nC,uBAAuB,GAE5B3nC,KAAK4nC,YAAc,EAAAC,SAAS,KAAMjnC,WAAU,WAC3C,EAAK4mC,oBACL,EAAKC,sBAED,EAAKC,eACJ,EAAKF,mBAAqB,IAC7B,EAAKG,uBAAuB,EAAKL,eAAe5kB,YAEhD,EAAK8kB,kBAAoB,GAEtB,EAAKC,qBAAuB,IAC/B,EAAKK,yBAAyB,EAAKP,iBAAiB7kB,YAEpD,EAAK+kB,oBAAsB,IAIxB,EAAKD,mBAAqB,IAC7B,EAAKG,uBAAuB,EAAKL,eAAe5kB,YAEhD,EAAK8kB,kBAAoB,OAO7B,YAAA3zB,YAAA,WACC7T,KAAK4nC,YAAY9Q,eAGlB,YAAAiR,gBAAA,SAAgBC,GACf,MAAmB,aAAfA,EAAI/hB,OACAjmB,KAAK3B,gBAAgByC,OAAO,0BAEZ,YAAfknC,EAAI/hB,QAAuC,QAAf+hB,EAAI/hB,OACjCjmB,KAAK3B,gBAAgByC,OAAO,yBAEZ,WAAfknC,EAAI/hB,OACLjmB,KAAK3B,gBAAgByC,OAAO,wBAEZ,YAAfknC,EAAI/hB,OACLjmB,KAAK3B,gBAAgByC,OAAO,yBAEZ,aAAfknC,EAAI/hB,OACLjmB,KAAK3B,gBAAgByC,OAAO,0BAEZ,YAAfknC,EAAI/hB,OACLjmB,KAAK3B,gBAAgByC,OAAO,yBAG5Bd,KAAK3B,gBAAgByC,OAAO,0BAIrC,YAAAmnC,iBAAA,SAAiBpD,GAAjB,WAECA,EAAKrW,QAAQntB,SAAQ,SAAA2mC,GAEpB,IAAIE,EAAa,CAChB,MAAS,CACR,CAAE,MAAS,EAAK7pC,gBAAgByC,OAAO,6BAA8B,OAAU,YAE/E,CACC,MAAS,EAAKzC,gBAAgByC,OAAO,0BACrC,OAAwB,QAAdknC,EAAIG,MAAkB,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,QAG7F,CACC,MAAS,EAAK9pC,gBAAgByC,OAAO,6BACrC,OAAwB,aAAdknC,EAAIG,OAAsC,uBAAdH,EAAIG,MAAiC,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,aAGxI,CACC,MAAS,EAAK9pC,gBAAgByC,OAAO,iCACrC,OAAwB,WAAdknC,EAAIG,OAAoC,mBAAdH,EAAIG,OAA4C,kBAAdH,EAAIG,MAA4B,EAAKC,aAAaJ,GAAO,OAKlIA,EAAMA,GACFE,WAAaA,MAMnB,YAAAG,mBAAA,SAAmBC,EAAkBC,GACpC,IAAIxD,EAAQ,CAAC,MAAO,WAAY,qBAAsB,SAAU,iBAAkB,iBAE9EyD,EAASzD,EAAMx4B,QAAQ+7B,GAE3B,OADgBvD,EAAMx4B,QAAQg8B,GACdC,EACR,WAGA,IAIT,YAAAJ,aAAA,SAAaJ,GACZ,MAAmB,WAAfA,EAAI/hB,QAAsC,YAAf+hB,EAAI/hB,OAC3B,UAEgB,aAAf+hB,EAAI/hB,OACL,QAGD,IAIR,YAAAwiB,sBAAA,WACCzoC,KAAK8nC,yBAAyB,GAE9B9nC,KAAK0nC,eAAgB,GAItB,YAAA9G,OAAA,SAAOtkC,GACN0D,KAAKg9B,OAAOQ,SAAS,CAAC,iCAAkClhC,KAGzD,YAAAqrC,uBAAA,SAAuBjlB,GAAvB,WAEC1iB,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQ0N,iBAAiBxiB,KAAKsnC,eAAe7kB,SAAUC,EAAY,cAAc,GAAOzY,MAAK,SAAAmB,GAEjG,EAAKk8B,eAAiBl8B,EACtB,EAAK68B,iBAAiB,EAAKX,mBAEzBj9B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAw9B,yBAAA,SAAyBplB,GAAzB,WAEC1iB,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQ+N,0BAA0B7iB,KAAKunC,iBAAiB9kB,SAAUC,EAAY,cAAc,GAAOzY,MAAK,SAAAmB,GAE5G,EAAKm8B,iBAAmBn8B,EACxB,EAAK68B,iBAAiB,EAAKV,qBAEzBl9B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAo+B,qBAAA,SAAqB3lB,EAAmBilB,GAAxC,WACChoC,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,uCAC9Dd,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,kCAEjEd,KAAKkO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CrQ,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAE3C,EAAKyjC,UAAUxoB,aAAampB,EAAIrpB,eAAe1U,MAAK,SAAAmB,GACnD,EAAK8C,WAAWiJ,OAEhB,IAAK,IAAI5T,EAAI,EAAGA,EAAI,EAAK+jC,eAAe9Y,QAAQvtB,SAAUsC,EAAG,CAG5D,GAFgB,EAAK+jC,eAAe9Y,QAAQjrB,GAE9BolC,QAAUX,EAAIW,MAAO,CAClC,EAAKrB,eAAe9Y,QAAQ9mB,OAAOnE,EAAG,GACtC,OAIF,EAAKklC,2BAEHp+B,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMd,YAAAs+B,sBAAA,SAAsB7lB,EAAmBilB,GAAzC,WACChoC,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,6CAC9Dd,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,wCAEjEd,KAAKkO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CrQ,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAE3C,EAAKkR,QAAQoO,oBAAoBH,GAAW9Y,MAAK,SAAAmB,GAEhD,EAAK8C,WAAWiJ,OAEhB,IAAK,IAAI5T,EAAI,EAAGA,EAAI,EAAK+jC,eAAe9Y,QAAQvtB,SAAUsC,EAAG,CAG5D,GAFgB,EAAK+jC,eAAe9Y,QAAQjrB,GAE9BolC,QAAUX,EAAIW,MAAO,CAClC,EAAKrB,eAAe9Y,QAAQ9mB,OAAOnE,EAAG,GACtC,OAIF,EAAKklC,2BAEHp+B,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMd,YAAAyP,WAAA,SAAWG,GACV,OAAOla,KAAK3B,gBAAgB8b,qBAAqBD,IAGlD,YAAA3P,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAhRrC5P,GAAsB,4N,iCAAtBA,EAAsB,usFCpBnC,4BACI,4BACA,6BAEA,4BACI,8BAEA,4BACI,yBACI,4BACJ,iBACJ,iBACA,4BACI,4BACI,4BACI,6BACI,+BACI,6BACI,6BACI,6BACI,8BACJ,iBACJ,iBACJ,iBACA,6BAEI,gC,wBAyCJ,iBACJ,iBACA,gCAGJ,iBAEA,6BACC,+BACE,6BACE,0BACE,6BACE,8BACF,iBACA,+BAGA,+BAGC,+BAGA,+BAGD,+BAKA,+BAEF,iBACF,iBACA,6BAEA,gC,wBA8BA,iBACF,iBAEA,gCAGD,iBACJ,iBAEJ,iBACJ,iBACJ,iBACJ,kB,MA7Ia,oDAqBuB,2LA2CP,sEAYE,wEAGA,wEAGC,wEAGA,wEAGD,wEAKA,wEAMJ,kMAiCD,0E,skBD1H1B,GAKa,EAAAA,0B,wGEpBb,KACA,MACA,MAFA,IAKA,SAEA,SACA,SAIA,GAHA,OAGA,QAEA,GADA,MACA,Q,0GCTQ,4BAAqE,YAAW,kB,6BAAX,+C,mDA+C3D,6BACE,8BACE,6BACF,iBACA,gCAAsB,gIACpB,6BACF,iBACF,kB,mDAEA,6BACE,8BACE,6BACF,iBACA,gCAAsB,gIACpB,6BACF,iBACF,kB,qBAIM,6B,sBACA,2BACE,6BACF,kB,mDALN,6BACI,gCAAsB,gIACpB,oCACA,gCAGF,iBACJ,iB,iCALgB,8EACJ,2E,mDAMZ,6BACE,gCAAsB,8HAClB,2BACE,6BACF,iBACF,iBACJ,kB,yBAzEN,4BAKI,4BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACE,6BACA,aACF,iBACA,+BACE,8BACA,+BACM,aACN,iBACF,iBACJ,iBAEJ,iBACJ,iBACA,8BACI,2BAEI,0BAAI,yBAAG,aACL,8BACA,aACA,8BACF,iBAAI,iBACJ,0BAAI,aAAwC,8BAA6D,iBAE7G,iBACJ,iBACA,8BACE,gCASA,gCASA,gCASA,gCAaF,iBACJ,kB,6BAtE4B,mDAIV,0DAKM,4EAUL,kEAEL,6DAGE,kFAKL,wGASA,oGASA,sHASA,+D,sBAqBK,4BACI,yBAQC,4BACI,6BACJ,iBACA,4BACK,6BACL,iBACA,4BACG,6BACF,iBACD,uBAGD,iBACJ,kB,sBACA,4BACE,yBAQE,4BACE,6BACF,iBACA,4BACE,6BACF,iBACA,4BACE,6BACF,iBACA,uBAGF,iBACF,kB,mDAiBQ,4BACI,gCAAsB,6HAClB,6BACJ,iBACJ,kB,yBAlBJ,yBAKI,4BACE,wBAAG,YAA8C,iBACnD,iBACA,4BACE,wBAAG,YAAyB,iBAC9B,iBACA,4BACE,wBAAG,YAAc,iBACnB,iBACA,+BAKJ,kB,4CAbS,+EAGA,wDAGA,6CAEoB,+D,kGAfjC,4BACI,+B,uBAoBJ,kB,8BApBQ,gJ,yBA+BH,wBAA+C,YAAyB,kB,uCAAzB,yD,yBAC/C,wBAAwF,YAAa,kB,uCAAb,6C,mDAK3F,4BACC,gCAAsB,6HACjB,6BACL,iBACD,kB,yBAlBD,yBAIC,4BACE,wBAAG,YAAY,iBACjB,iBACA,4BACG,6BACA,6BACF,iBACA,4BACE,wBAAG,YAAwC,iBAC7C,iBACD,+BAKD,kB,4CAdM,2CAGC,oEACA,uGAGA,yEAEmB,+D,yBAf3B,4BACC,+B,uBAoBD,kB,8BApBK,gJ,mDAuBL,6BACI,6CAAqB,uGAAoC,iBAC7D,kB,yBArGZ,6BAEI,4BAEI,+BACI,iCAuBA,iCAwBA,iCAuBA,iCAsBJ,iBACA,6BACI,+BAGJ,iBACJ,iBACJ,kB,8BAnGmB,mEAuBA,uEAwBA,mEAuBA,uEAwBF,6D,yBApGrB,6BACI,+BAyGJ,kB,6BAzGsC,2CD7ElD,iBAkCC,WAAmBoa,EAAkC3W,EAC5C6+B,EAAwB2H,EACxBtmC,EAAsCE,EAAiC8oC,GAF7D,KAAAvyB,UAAkC,KAAA3W,eAC5C,KAAA6+B,SAAwB,KAAA2H,QACxB,KAAAtmC,kBAAuE,KAAAgpC,YA9BhF,KAAAv4B,QAAkB,KAElB,KAAA+5B,aAAuB,EACvB,KAAA9lB,UAAoB,GAEpB,KAAA8hB,KAAY,CACXC,MAAO,EACPpiB,WAAY,EACZD,SAAU,GACV+L,QAAS,IAGV,KAAAsa,YAAsB,EAWtB,KAAAC,WAAqB,EACrB,KAAAC,yBAAmC,EAOlChpC,KAAK0wB,QAAUnyB,EAAYmyB,UAC3B1wB,KAAK2wB,aAAe3wB,KAAK0wB,SAAWnyB,EAAYoyB,eAChD3wB,KAAK4wB,cAAgB5wB,KAAK0wB,SAAW1wB,KAAK2wB,cAAgBpyB,EAAYsyB,gB,OAGvE,YAAA5wB,SAAA,sBAECD,KAAK+iB,UAAY/iB,KAAK2kC,MAAMS,SAAS/yB,OAAY,IAEjDrS,KAAKulC,aAAa,GAElB,IAAIC,EAAU,SAAWzD,OAAOC,SAASyD,UAAY1D,OAAOC,SAAS0D,KAAO,IAAM3D,OAAOC,SAAS0D,KAAO,IAAM/yB,IAE/G3S,KAAK2lC,SAAW,EAAAC,UAAUJ,EAAU,qBACpCxlC,KAAK2lC,SAAS/kC,WAAU,SAAAkO,GACF,sBAAjBA,EAAQ/C,MACX,EAAKw5B,aAAa,EAAKV,KAAKniB,gBAK/B,YAAA7O,YAAA,aAGA,YAAAo1B,mBAAA,SAAmBC,GAClB,OAAOA,EAAK5P,QAAQ,KAAM,OAG3B,YAAA6P,wBAAA,SAAwBv6B,GACvB,OAAO4D,KAAKC,UAAU7D,IAGvB,YAAAw6B,kBAAA,SAAkB7hB,GACjB,IAAK,IAAIhkB,EAAI,EAAGA,EAAIvD,KAAK6kC,KAAKrW,QAAQvtB,SAAUsC,EAAG,CAC/BvD,KAAK6kC,KAAKrW,QAAQjrB,GAEpBvH,KAAOurB,EAAQvrB,IAC/BgE,KAAK6kC,KAAKrW,QAAQ9mB,OAAOnE,EAAG,KAK/B,YAAA8lC,uBAAA,SAAuBC,GAEtB,MAAiB,iDAAbA,EACItpC,KAAK3B,gBAAgByC,OAAO,gDAGnB,yDAAbwoC,EACItpC,KAAK3B,gBAAgByC,OAAO,qDAGnB,sDAAbwoC,EACItpC,KAAK3B,gBAAgByC,OAAO,sDAGnB,sDAAbwoC,EACItpC,KAAK3B,gBAAgByC,OAAO,sDAGnB,gDAAbwoC,EACItpC,KAAK3B,gBAAgByC,OAAO,+CAItB,mEAAbwoC,GACgB,kEAAbA,GACa,mEAAbA,GACa,iEAAbA,EAEItpC,KAAK3B,gBAAgByC,OAAO,6CAQtB,oDAAbwoC,GACgB,sDAAbA,GACa,0DAAbA,EAEItpC,KAAK3B,gBAAgByC,OAAO,wDAG7BwoC,GAIR,YAAA/Z,OAAA,SAAOhI,GAAP,WAGCvnB,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAAvS,0BAA2B,CACnEuT,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQiZ,QAAUA,EAClCvnB,KAAKkO,WAAWI,QAAQ05B,IAAMhoC,KAAKgoC,IACnChoC,KAAKkO,WAAWI,QAAQi7B,iBAAiB3oC,WAAU,SAAAgD,GAC9B,aAAhBA,EAAK4Z,QACR,EAAK4rB,kBAAkBxlC,EAAKA,UAK/B,YAAA2hC,aAAA,SAAa7iB,GAAb,WAEC1iB,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQgO,gBAAgB9iB,KAAK+iB,UAAW/iB,KAAK6kC,KAAKpiB,SAAUC,GAAY,GAAMzY,MAAK,SAAAmB,GAIvF,GAFA,EAAK48B,IAAM58B,EAEY,mBAAnB,EAAK48B,IAAIG,MACZ,EAAKtD,KAAO,EAAKmD,IAAIwB,kBAEjB,GAAuB,uBAAnB,EAAKxB,IAAIG,MAAgC,CACjD,EAAKtD,KAAO,EAAKmD,IAAIyB,SAErB,IAAK,IAAIlmC,EAAI,EAAGA,EAAI,EAAKshC,KAAKrW,QAAQvtB,SAAUsC,EAAG,CAG7B,yBAFP,EAAKshC,KAAKrW,QAAQjrB,GAEpBwI,OACX,EAAKi9B,yBAA0B,QAIhC3+B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAo/B,oBAAA,aAIA,YAAAjB,sBAAA,aAIA,YAAAkB,UAAA,sBACC3pC,KAAK6oC,aAAe7oC,KAAK6oC,YAEzB7oC,KAAKgoC,IAAIwB,aAAahb,QAAQntB,SAAQ,SAAAuoC,GACrCA,EAAIzW,SAAW,EAAK0V,gBAItB,YAAAgB,oBAAA,SAAoB9mB,GAApB,WACC/iB,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAAtS,uBAAwB,CAChEsT,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBrO,KAAKkO,WAAWI,QAAQ05B,IAAMhoC,KAAKgoC,IAEnChoC,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAC3C,EAAKo5B,OAAOQ,SAAS,CAAC,iCAIxB,YAAAoL,sBAAA,SAAsB7lB,GAAtB,WACiC,GAA5B/iB,KAAK6kC,KAAKrW,QAAQvtB,OACrBjB,KAAK8U,QAAQoO,oBAAoBH,GAAW9Y,MAAK,SAAAmB,GAChD,EAAK4xB,OAAOQ,SAAS,CAAC,gCACpBnzB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIZtK,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGC,uBAAnBrO,KAAKgoC,IAAIG,OACZnoC,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,iDAC9Dd,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,8CAGjEd,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,6CAC9Dd,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,yCAGlEd,KAAKkO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CrQ,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAE3C,EAAKkR,QAAQoO,oBAAoBH,GAAW9Y,MAAK,SAAAmB,GAEhD,EAAK4xB,OAAOQ,SAAS,CAAC,gCAEpBnzB,OAAM,SAACC,GACT,EAAKC,MAAMD,WAOf,YAAAo+B,qBAAA,SAAqB3lB,GAArB,WACC/iB,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAK3B,gBAAgByC,OAAO,uCAC9Dd,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAK3B,gBAAgByC,OAAO,kCAEjEd,KAAKkO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CrQ,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,SAAAgD,GAE3C,EAAKyjC,UAAUxoB,aAAa,EAAKmpB,IAAIrpB,eAAe1U,MAAK,SAAAmB,GAExD,EAAK4xB,OAAOQ,SAAS,CAAC,gCACpBnzB,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMd,YAAAyP,WAAA,SAAWG,GACV,OAAOla,KAAK3B,gBAAgB8b,qBAAqBD,IAGlD,YAAA3P,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAzQrC3P,GAAY,kQ,iCAAZA,EAAY,27FCvBzB,4BACI,4BACA,6BAEA,4BACI,8BAEI,4BACI,yBACI,4BACJ,iBACJ,iBACA,gCAkFA,8BA2GR,iBACJ,kB,MArMa,oDAOI,0CAkFA,sE,qgBD5EjB,GAKa,EAAAA,gB,qHEvBb,KACA,MADA,IAEA,QAOA,GAFA,OAEA,Q,GACA,M,mHCTI,6BAAqE,YAAW,kB,6BAAX,+C,mDAY7D,0BACI,+CAAuB,4IAAiG,iBAC5H,iB,gCAD4F,iDAAmB,c,mDAG7G,yDAAmF,6IAAkG,iB,iCAAjC,kCAAmB,c,mDACvK,uDAA+E,6IAAkG,iB,iCAAjC,kCAAmB,c,mDACnK,uDAA+E,6IAAkG,iB,iCAAjC,kCAAmB,c,yBAHrK,0BACE,2DACA,yDACA,yDACF,kB,6BAHmC,8EACF,4EACA,6EDP7C,iBAmBI,WAAqBma,EAAkCC,EAA6BC,EAAsC9G,GAArG,KAAA4G,UAAkC,KAAAC,WAA6B,KAAAC,WAAsC,KAAA9G,aAb1H,KAAAY,QAAkB,KASlB,KAAAqG,UAAoB,EACpB,KAAA/F,MAAgB,EAIdpP,KAAKupC,iBAAmB,IAAI,EAAA53B,Q,OAG9B,YAAA1R,SAAA,aAIA,YAAA6pC,0BAAA,SAA0BviB,GACxBvnB,KAAKupC,iBAAiBn8B,KAAK,CAACoQ,OAAO,WAAY5Z,KAAM2jB,KAGvD,YAAAnQ,SAAA,WACIpX,KAAKkO,WAAWiJ,QAGpB,YAAA5M,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA/B/C1P,GAAyB,uJ,iCAAzBA,EAAyB,shBCjBtC,4BACI,8BAEA,4BACI,yBACI,4BACJ,iBACJ,iBAEA,+BAEI,+BAEI,8BAGA,8BAMA,6BAEI,6BACI,6BACI,iCAAsB,wCAAS,EAAAwc,cAC3B,8BACJ,iBACJ,iBACJ,iBACJ,iBAEJ,iBACJ,iBAEJ,kB,MAnCS,oDAYQ,qFAGA,2F,iRDJjB,GAKa,EAAAxc,6B,wHEjBb,WAQA,GAPA,MACA,MAIA,OAEA,QAIA,GADA,OACA,Q,GACA,M,uECZI,6BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,6BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,yBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6E,mDA+BV,6BACI,gCAA0C,kGACtC,6BACJ,iBACJ,kBDnDpB,iBAeI,WAAqBka,EAAkCC,EAC3CC,EAAsC9G,EAAgC/P,GAD7D,KAAA2W,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA9G,aAAgC,KAAA/P,eAVlF,KAAA2Q,QAAkB,KAGD,KAAAs6B,kBAAoB,IAAI,EAAA3rC,aAEzC,KAAA0X,UAAoB,EACpB,KAAA/F,MAAgB,E,OAOhB,YAAAnP,SAAA,aAIA,YAAA8pC,gBAAA,sBACQpD,EAAY3mC,KAAK7B,aAAagP,KAAM,EAAA7T,yBAA0B,CAC9D8U,UAAU,EACVC,qBAAqB,IAGzBs4B,EAAUr4B,QAAQsjB,yBAAyB5xB,KAAKunB,QAASvnB,KAAKgoC,IAAIjlB,UAAW/iB,KAAKgoC,IAAIrpB,cAAcjF,WAAW,GAC/GitB,EAAUr4B,QAAQ0iB,gBAAiB,MACnC2V,EAAUr4B,QAAQ4iB,sBAAqB,WAErC,EAAKkY,kBAAkBtwB,KAAK,EAAKyO,SACjC,EAAKrZ,WAAWiJ,WAKtB,YAAAkyB,uBAAA,SAAuBC,GAEnB,MAAgB,iDAAbA,EACQtpC,KAAKgV,SAASlU,OAAQ,gDAGjB,yDAAbwoC,EACQtpC,KAAKgV,SAASlU,OAAQ,qDAGjB,sDAAbwoC,EACMtpC,KAAKgV,SAASlU,OAAQ,sDAGf,sDAAbwoC,EACMtpC,KAAKgV,SAASlU,OAAQ,sDAGf,gDAAbwoC,EACMtpC,KAAKgV,SAASlU,OAAQ,+CAId,mEAAbwoC,GACgB,kEAAbA,GACa,mEAAbA,GACa,iEAAbA,EAEEtpC,KAAKgV,SAASlU,OAAQ,6CAOhB,oDAAbwoC,GACgB,sDAAbA,GACa,0DAAbA,EAEItpC,KAAKgV,SAASlU,OAAQ,wDAGxBwoC,GAGX,YAAAryB,SAAA,aAIA,YAAAG,SAAA,WACEpX,KAAKkO,WAAWiJ,QAGrB,YAAA4C,WAAA,SAAWG,GACV,OAAOla,KAAKgV,SAASmF,qBAAqBD,IAGxC,YAAA3P,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA5F/CrP,GAA4B,6L,iCAA5BA,EAA4B,uoDCpBzC,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,4BACI,4BACI,4BACI,yBAAI,6BAAQ,6BAAsD,iBAAS,iBAC3E,2BAA+B,aAAkD,iBAEjF,0BAAI,8BAAQ,8BAAsD,iBAAS,iBAC3E,2BAA+B,aAA6B,iBAIhE,iBACJ,iBACA,8BACI,gCAKJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAvES,oDAWA,qDAwC8C,wFAGA,gEAO9B,+F,4DD/CzB,GAKa,EAAAA,gC,iIEpBb,WAKA,GAJA,MACA,MAGA,OAQA,GALA,OAEA,OAGA,Q,GACA,M,wFCbI,6BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,6BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,yBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6E,yBAyCR,yBACJ,yBAAI,YAA4B,iBAClC,kB,uBADM,iE,yBAFD,6BACC,8BAGP,kB,6BAHW,0DDxD1B,iBAsBI,WAAqB6Z,EAAkCC,EAC3CC,EAAsC9G,EAAgC/P,GAD7D,KAAA2W,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA9G,aAAgC,KAAA/P,eAjBlF,KAAA2Q,QAAkB,KAGD,KAAAs6B,kBAAoB,IAAI,EAAA3rC,aASzC,KAAA0X,UAAoB,EACpB,KAAA/F,MAAgB,E,OAOhB,YAAAnP,SAAA,WAMID,KAAKunB,QAAQ7hB,OAAS,KACtB1F,KAAKgqC,YAAc,IAIvB,YAAAC,UAAA,SAAU1hB,GACR,OAAO/V,KAAKC,UAAU8V,IAGxB,YAAA2hB,iCAAA,SAAiC3hB,GAC/B,OAAOA,EAASxc,MAGlB,YAAAiiB,uBAAA,SAAwBvY,EAAkB8S,GAA1C,WAGQ1e,EAAgB7J,KAAKgoC,IAAIrpB,cAAclb,UAE3C,OAAO,EAAA2qB,WAAWxY,QAAO,SAAEyY,GACvB,EAAKvZ,QAAQqK,wBAAyB,EAAK6qB,YAAav0B,EAJ3C,KAIiE,KAAM5L,EAAe,EAAKm+B,IAAItuB,WAAYzP,MAAM,SAAAukB,GAC1HH,EAASjhB,KAAMohB,UAK3B,YAAAC,kBAAA,SAAmBryB,EAAmBmsB,GAAtC,WAEIvoB,KAAK8U,QAAQgM,oBAAqB1kB,EAAEoR,KAAKkhB,IAAKnG,EAAS9S,SAAU,IAAI,EAAOzV,KAAKgoC,IAAItuB,WAAYzP,MAAM,SAAA0kB,GAEnGpG,EAAS7iB,OAASipB,EAAUjK,UAC5B,EAAKslB,YAAcrb,EAAUjK,UAAUyJ,WAAWxY,aAAaxJ,kBAE/D9B,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAA6/B,SAAA,sBACMC,EAAM,CACRrY,WAAY,SACZsY,oBAAqBrqC,KAAKunB,QAAQvrB,IAGpCgE,KAAK8U,QAAQqO,wBAAyBinB,GAAMngC,MAAM,SAAAmB,GAEhD,EAAKg+B,kBAAkBtwB,KAAK,EAAKyO,SAEjC,EAAKrZ,WAAWiJ,UAEd9M,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAAggC,gBAAA,sBACMF,EAAM,CACRC,oBAAqBrqC,KAAKunB,QAAQvrB,GAClC+1B,WAAY,UACZz1B,KAAM0D,KAAKunB,QAAQ7hB,OAAOyoB,WAAW7xB,KACrCmZ,SAAUzV,KAAKunB,QAAQ7hB,OAAOyoB,WAAWpiB,KACzCnE,MAAO5H,KAAKunB,QAAQ3f,OAGtB5H,KAAK8U,QAAQqO,wBAAyBinB,GAAMngC,MAAM,SAAAmB,GAEhD,EAAKg+B,kBAAkBtwB,KAAK,EAAKyO,SAEjC,EAAKrZ,WAAWiJ,UAEd9M,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA8M,SAAA,WACEpX,KAAKkO,WAAWiJ,QAGrB,YAAA4C,WAAA,SAAWG,GACV,OAAOla,KAAKgV,SAASmF,qBAAqBD,IAGxC,YAAA3P,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA9G/CxP,GAAqC,6L,iCAArCA,EAAqC,8wECrBlD,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,4BACI,4BACI,yBAAI,6BAAQ,4BAAsD,iBAAS,iBAC3E,2BAA+B,aAA6C,iBAE5E,0BAAI,8BAAQ,6BAAsD,iBAAS,iBAC3E,2BACE,8BACF,iBAEA,0BAAI,8BAAQ,8BAAwD,iBAAS,iBAC7E,yBACE,8BACF,iBACJ,iBACA,8BACC,8BACE,8BACC,6BACE,+BAAmB,8BAAsD,iBAC3E,iBACD,iBACA,8BACE,gCAKF,iBACF,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAAoD,iBACzE,iBACF,iBACA,8BACE,+BAA4C,aAAiB,iBAC/D,iBACF,iBACA,8BACG,8BACE,6BACE,+BAAmB,8BAAsD,iBAC3E,iBACF,iBACA,8BACE,gCAEC,oEAAyB,wCAGJ,EAAA2zB,kBAAA,gBALtB,iBAUF,iBACF,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAAsD,iBAC3E,iBACF,iBACA,8BACE,iCAA0D,wCAAS,EAAA6b,qBACjE,8BACF,iBACA,iCAAsB,wCAAS,EAAAH,cAC7B,8BACF,iBACF,iBACF,iBACF,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MA9HS,oDAWA,qDAuC0C,kFAoBzB,gEAcuC,oDAY1C,qDAAyB,oBAAzB,CAAyB,mEAAzB,CAAyB,0BAAzB,CAAyB,uBAAzB,CAAyB,uBAiBJ,iE,8IDlG5C,GAKa,EAAArvC,yC,+HErBb,WAIA,GAFA,MACA,MACA,OAOA,GAJA,OACA,OAEA,MACA,Q,yFCVI,4BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,4BACI,4BAEI,qBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,wBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6E,mDAiBlB,6BACI,6BACI,yBAAI,6BAAQ,6BAAsD,iBAAS,iBAC3E,2BAA+B,YAA6C,iBAE5E,yBAAI,6BAAQ,6BAAsD,iBAAS,iBAC3E,4BACE,8BACF,iBAEA,0BAAI,8BAAQ,8BAAwD,iBAAS,iBAC7E,yBAAG,8BAA+D,iBACtE,iBACA,8BACC,8BACG,8BACE,6BACE,+BAAmB,8BAAoE,iBACzF,iBACF,iBACA,8BACE,+BAA4C,aAA0B,iBACxE,iBACF,iBACD,8BACE,8BACE,6BACE,+BAAmB,8BAA2D,iBAChF,iBACF,iBACA,8BACE,+BAA4C,aAAiB,iBAC/D,iBACF,iBACA,8BACG,8BACE,6BACE,+BAAmB,8BAA6D,iBAClF,iBACF,iBACA,8BACE,gCAEC,uGAAyB,uHAF1B,iBAUF,iBACF,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAA6D,iBAClF,iBACF,iBACA,8BACE,iCAAkD,kGAChD,8BACF,iBACA,iCAAsB,2FACpB,8BACF,iBACF,iBACF,iBACF,iBACJ,iB,gCAlEuC,kFAkBe,8DAUD,oDAY1C,qDAAyB,oBAAzB,CAAyB,gDAAzB,CAAyB,0BAAzB,CAAyB,uBAAzB,CAAyB,uBAiBJ,wDD/F5C,iBAkBI,WAAqBga,EAAkCC,EAC3CC,EAAsC9G,EAAgC/P,GAD7D,KAAA2W,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA9G,aAAgC,KAAA/P,eAblF,KAAA2Q,QAAkB,KAGD,KAAAs6B,kBAAoB,IAAI,EAAA3rC,aAEzC,KAAAwgC,OAAiB,KAGjB,KAAA9oB,UAAoB,EACpB,KAAA/F,MAAgB,E,OAOhB,YAAAnP,SAAA,WAEID,KAAKunB,QAAQ7hB,OAAS,KACtB1F,KAAKgqC,YAAc,IAIvB,YAAAE,iCAAA,SAAiC3hB,GAC/B,OAAOA,EAASxc,MAGlB,YAAAiiB,uBAAA,SAAwBzF,GAAxB,WACI,OAAO,EAAA6F,WAAWxY,QAAO,SAAEyY,GACvB,EAAKtZ,SAAS0K,mBAAoB8I,EAAS7I,cAAe,EAAKsqB,YAAa,MAAO//B,MAAM,SAAAukB,GACrFH,EAASjhB,KAAMohB,UAK3B,YAAAC,kBAAA,SAAmBryB,GACf4D,KAAKi+B,OAAS7hC,EAAEoR,KAAK8G,OAGzB,YAAA61B,SAAA,sBACMC,EAAM,CACRrY,WAAY,SACZsY,oBAAqBrqC,KAAKunB,QAAQvrB,IAGpCgE,KAAK8U,QAAQqO,wBAAyBinB,GAAMngC,MAAM,SAAAmB,GAEhD,EAAKg+B,kBAAkBtwB,KAAK,EAAKyO,SAEjC,EAAKrZ,WAAWiJ,UAEd9M,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAAggC,gBAAA,sBACMF,EAAM,CACRC,oBAAqBrqC,KAAKunB,QAAQvrB,GAClC+1B,WAAY,UACZlS,aAAc7f,KAAKi+B,OACnBr2B,MAAO5H,KAAKunB,QAAQ3f,OAGtB5H,KAAK8U,QAAQqO,wBAAyBinB,GAAMngC,MAAM,SAAAmB,GAEhD,EAAKg+B,kBAAkBtwB,KAAK,EAAKyO,SAEjC,EAAKrZ,WAAWiJ,UAEd9M,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA8M,SAAA,WACEpX,KAAKkO,WAAWiJ,QAGrB,YAAA4C,WAAA,SAAWG,GACV,OAAOla,KAAKgV,SAASmF,qBAAqBD,IAGxC,YAAA3P,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCArF/CvP,GAAmC,6L,iCAAnCA,EAAmC,uxEClBhD,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,gCAsEJ,iBACJ,iBAEJ,kB,MAxHS,oDAWA,qDAoCQ,gD,oIDnCjB,GAKa,EAAAA,uC,+HElBb,WAKA,GAHA,MACA,MAEA,OAQA,GALA,OACA,OAIA,Q,GACA,M,uECbI,6BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,6BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,yBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6EDf9B,iBAsBI,WAAqB+Z,EAAkCC,EAC3CC,EAAsC9G,EAAgC/P,GAD7D,KAAA2W,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA9G,aAAgC,KAAA/P,eAjBlF,KAAA2Q,QAAkB,KAGD,KAAAs6B,kBAAoB,IAAI,EAAA3rC,aASzC,KAAA0X,UAAoB,EACpB,KAAA/F,MAAgB,E,OAOhB,YAAAnP,SAAA,WAMID,KAAKunB,QAAQ7hB,OAAS,KACtB1F,KAAKgqC,YAAc,IAIvB,YAAAC,UAAA,SAAU1hB,GACR,OAAO/V,KAAKC,UAAU8V,IAGxB,YAAA2hB,iCAAA,SAAiC3hB,GAC/B,OAAOA,EAASxc,MAGlB,YAAAiiB,uBAAA,SAAwBvY,EAAkB8S,GAA1C,WAGQ1e,EAAgB7J,KAAKgoC,IAAIrpB,cAAclb,UAE3C,OAAO,EAAA2qB,WAAWxY,QAAO,SAAEyY,GACvB,EAAKvZ,QAAQqK,wBAAyB,EAAK6qB,YAAav0B,EAJ3C,KAIiE,KAAM5L,EAAe,EAAKm+B,IAAItuB,WAAYzP,MAAM,SAAAukB,GAC1HH,EAASjhB,KAAMohB,UAK3B,YAAAC,kBAAA,SAAmBryB,EAAmBmsB,GAAtC,WAEIvoB,KAAK8U,QAAQgM,oBAAqB1kB,EAAEoR,KAAKkhB,IAAKnG,EAAS9S,SAAU,IAAI,EAAOzV,KAAKgoC,IAAItuB,WAAYzP,MAAM,SAAA0kB,GAEnGpG,EAAS7iB,OAASipB,EAAUjK,UAC5B,EAAKslB,YAAcrb,EAAUjK,UAAUyJ,WAAWxY,aAAaxJ,kBAE/D9B,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAA6/B,SAAA,sBACMC,EAAM,CACRrY,WAAY,SACZsY,oBAAqBrqC,KAAKunB,QAAQvrB,IAGpCgE,KAAK8U,QAAQqO,wBAAyBinB,GAAMngC,MAAM,SAAAmB,GAEhD,EAAKg+B,kBAAkBtwB,KAAK,EAAKyO,SAEjC,EAAKrZ,WAAWiJ,UAEd9M,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA2+B,mBAAA,SAAmBC,GAEjB,OAAOA,EAAK5P,QAAQ,KAAM,OAG5B,YAAAgR,gBAAA,sBACMF,EAAM,CACRC,oBAAqBrqC,KAAKunB,QAAQvrB,GAClC+1B,WAAY,UACZz1B,KAAM0D,KAAKunB,QAAQ7hB,OAAOyoB,WAAW7xB,KACrCmZ,SAAUzV,KAAKunB,QAAQ7hB,OAAOyoB,WAAWpiB,KACzCnE,MAAO5H,KAAKunB,QAAQ3f,OAGtB5H,KAAK8U,QAAQqO,wBAAyBinB,GAAMngC,MAAM,SAAAmB,GAEhD,EAAKg+B,kBAAkBtwB,KAAK,EAAKyO,SAEjC,EAAKrZ,WAAWiJ,UAEd9M,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA8M,SAAA,WACEpX,KAAKkO,WAAWiJ,QAGlB,YAAA5M,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA/G/CtP,GAAmC,6L,iCAAnCA,EAAmC,qnDCrBhD,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,4BACI,4BACI,yBAAI,6BAAQ,4BAAsD,iBAAS,iBAC3E,2BAA+B,aAA6C,iBAE5E,0BAAI,8BAAQ,6BAAsD,iBAAS,iBAC3E,2BAA+B,8BAA6D,iBAE5F,0BAAI,8BAAQ,8BAAwD,iBAAS,iBAC7E,yBAAG,8BAA+D,iBACtE,iBACA,8BACC,8BACE,8BACC,6BACE,+BAAmB,8BAA+E,iBACpG,iBACD,iBACA,8BACG,+BAA4C,aAA4C,iBAC1F,iBACH,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAA6D,iBAClF,iBACF,iBACA,8BACE,+BAA4C,aAA6B,iBAC3E,iBACF,iBACD,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MApFS,oDAWA,qDAuC0C,kFAgBe,kFAUD,kE,4DD7DjE,GAKa,EAAAA,uC,kHErBb,KACA,MADA,IAEA,QACA,SAEA,SAEA,GADA,MACA,Q,GAEA,O,4FCPE,4BAAkE,YAAgB,kB,6BAAhB,oD,qBAW5D,6B,qBACA,6B,wBAGA,6B,8BACgB,qC,wBAChB,6B,8BACgB,qC,mDAVtB,+BACE,4BACE,8BACE,mCACA,oCACF,iBACA,6BACE,iCAEA,iCAEF,iBACF,iBAEA,6BACE,8BACE,iCAAsB,6EAASkT,WAAA,UAE7B,4BAAM,aAAc,iBACtB,iBACA,iCAAsB,0FAGpB,4BAAM,aAAc,iBACtB,iBACF,iBACF,iBACF,iB,gCAxBgB,iFACA,6EAGH,iFAEA,6EASC,iDAGN,kGAEM,kDDpBhB,iBAmCE,WAAoBA,EAAgC7P,EAA8C8T,GAA9E,KAAAjE,aAAgC,KAAA7P,kBAA8C,KAAA8T,eA7BzF,KAAAo4B,MAAgBvqC,KAAK3B,gBAAgByC,OAAO,uBAE5C,KAAAgO,QAAkB9O,KAAK3B,gBAAgByC,OAAO,yBAI9C,KAAAiO,WAAqB/O,KAAK3B,gBAAgByC,OAAO,wBAEjD,KAAAy8B,WAAqBv9B,KAAK3B,gBAAgByC,OAAO,uBAEjD,KAAAiL,KAAmB,EAAAqE,WAAWo6B,Q,OAqBvC,YAAAvqC,SAAA,sBACED,KAAKgP,UAAY,IAAI,EAAA2C,QAErB,IAAItS,EAA+B,CACjCggC,WAAY,EACZC,mBAAmB,EACnBpM,IAAKvgB,IAAM,iBAGb3S,KAAKu/B,SAAW,IAAI,EAAAC,aAAcngC,GAClCW,KAAKu/B,SAASE,gBAAkB,SAAEC,EAAeC,GAC7CA,EAAK/9B,OAAQ,OAAQ4Q,KAAKC,UAAU,EAAKu1B,IAAIrpB,iBAEjD3e,KAAKu/B,SAASM,mBAAqB,SAAEH,GACjC,EAAKvtB,aAAaY,SAEtB/S,KAAKu/B,SAASO,eAAiB,SAAEtyB,EAAWpC,EAAe6a,EAAapT,GACpE,EAAKktB,QAAQ1/B,cAAciU,MAAQ,GACnC,EAAKnC,aAAae,YAEtBlT,KAAKu/B,SAASS,cAAgB,SAAExyB,EAAWpC,EAAkB6a,EAAgBpT,GAC3E,EAAK7D,UAAU5B,KAAM,EAAKxJ,MAC1B,EAAKsK,WAAWiJ,QAElBnX,KAAKu/B,SAASY,YAAc,SAAE3yB,EAAWpC,EAAkB6a,EAAgBpT,GACzE,EAAKtI,MAAOiI,KAAKyG,MAAO7N,MAI5B,YAAAsJ,SAAA,SAAS9Q,GAEP,OAAO4O,KAAKC,UAAU7O,IAGxB,YAAAq9B,QAAA,WAC8B,MAAvBjhC,KAAKu/B,SAASa,OAAiBpgC,KAAKu/B,SAASa,MAAMn/B,OAAS,EAC/DjB,KAAKu/B,SAASc,YAGdrgC,KAAKuK,MAAO,CAAEuE,QAAS9O,KAAK3B,gBAAgByC,OAAQ,mBAAqByJ,MAAO,MAI7E,YAAAA,MAAP,SAAcD,GACZtK,KAAKyqC,aAAe,EAAAj5B,aAAa6F,oBAAoB/M,I,iCA5E5CzP,GAAsB,mH,iCAAtBA,EAAsB,uD,OAAA,K,q4CClBnC,4BAEE,8BAEA,4BACE,yBAAI,YAAS,iBACf,iBAEA,0BAAK,YAAW,iBAEhB,gCA4BF,kB,MApCO,mDAGC,4CAGD,8CAEC,4C,8JDGR,GAKa,EAAAA,0B,+GElBb,SACA,O,GAEA,OACA,OAEA,M,mHCSS,6BACE,6BACE,yBAAI,YAAqB,iBAC3B,iBAEA,6BACE,4BACC,4BACC,4BAAO,6BAA6C,iBACpD,2BAA+B,aAAY,iBAC3C,gCAAkC,8BAAiD,iBAChF,+BACI,aACJ,iBACJ,iBACA,8BACE,gCACE,2BACA,4BAAM,8BAAsC,iBAC9C,iBAEA,gCACE,gCAAwE,qHAAxE,iBACA,4BAAM,8BAA0C,iBAClD,iBACF,iBACD,iBACF,iBACF,iB,+CA1BQ,qDAO6B,0CAGxB,wEAKwE,kDAAAmB,GAAA,eAA4B,uDAKY,kDAAAA,GAAA,cAA2B,uD,mDAOxJ,6BACG,6CAA0C,sHAAmD,iBAC/F,kB,uHAlCR,4BACI,4BACE,6BACC,gC,uBA6BA,+BAGD,iBACF,iBACJ,kB,6BAlCY,2LA6BA,wE,mDAqBJ,6BACE,6BACE,yBAAI,YAAqB,iBAC3B,iBAEA,6BACE,4BACC,4BACC,4BAAO,6BAA6C,iBACpD,2BAA+B,aAAY,iBAC3C,gCAAkC,8BAAiD,iBACnF,+BACG,aACH,iBACA,gCAAkC,8BAAmD,iBACrF,+BACG,aACH,iBACD,iBACA,8BAEC,gCACE,gCAAoE,6HAApE,iBACA,4BAAM,8BAAsC,iBAC9C,iBACA,gCACE,2BACA,4BAAM,8BAA0C,iBAClD,iBACD,iBACD,iBACF,iBACF,iB,+CA9BQ,qDAO6B,0CAG5B,wEAIA,2EAM0G,kDAAAA,GAAA,eAA4B,uDAI1C,kDAAAA,GAAA,cAA2B,uD,mDAOhI,6BACE,6CAAyC,qHAAkD,iBAC7F,kB,sHApCF,6BACE,gC,uBAiCA,+BAGF,kB,6BApCO,uLAiCA,uE,sBAIP,6BACE,2BAAyC,6BAA4D,iBACvG,kBDhGR,iBAgCC,WAAoB0uC,EAAkCrsC,GAAlC,KAAAqsC,cAAkC,KAAArsC,kBArBtD,KAAAssC,gBAAkC,CACjC7F,MAAO,EACPpiB,WAAY,EACZD,SAAU,GACV+L,QAAS,IAGV,KAAAoc,eAAiC,CAChC9F,MAAO,EACPpiB,WAAY,EACZD,SAAU,GACV+L,QAAS,IAGV,KAAAkZ,eAAyB,EAEzB,KAAAF,kBAA4B,EAC5B,KAAAC,oBAA8B,E,OAM9B,YAAAxnC,SAAA,WACCD,KAAK6qC,4BAA4B,IAGlC,YAAAC,MAAA,SAAMC,GACL,OAAW,MAAPA,EACIA,EAAIt8B,cAGJ,IAIT,YAAAo8B,4BAAA,SAA4BnoB,GAA5B,WACC1iB,KAAK0qC,YAAY/kB,WAAWjD,EAAY1iB,KAAK2qC,gBAAgBloB,SAAU,cAAcxY,MAAK,SAAA46B,GACzF,EAAK8F,gBAAkB9F,MAIzB,YAAAmG,2BAAA,SAA2BtoB,GAA3B,WAEC1iB,KAAK0qC,YAAY/kB,WAAWjD,EAAY1iB,KAAK4qC,eAAenoB,SAAU,YAAYxY,MAAK,SAAA46B,GACtF,EAAK+F,eAAiB/F,MAIxB,YAAAoG,eAAA,SAAeC,GAAf,WAGClrC,KAAK0qC,YAAY5kB,aAAaolB,EAAKlvC,IAAIiO,MAAK,WAE3C,IAAMC,EAAQ,EAAKygC,gBAAgBnc,QAAQ/hB,WAAU,SAAAotB,GAAK,OAAAA,EAAE79B,KAAOkvC,EAAKlvC,OAEzD,IAAXkO,GACH,EAAKygC,gBAAgBnc,QAAQ9mB,OAAOwC,EAAO,GAG5C,EAAK0gC,eAAepc,QAAQzqB,KAAKmnC,OAKnC,YAAAC,uBAAA,SAAuBD,GAAvB,WACClrC,KAAK0nC,eAAgB,EAErB1nC,KAAK0qC,YAAY1kB,cAAcklB,EAAKlvC,GAAI,cAAciO,MAAK,WAE1D,IAAMC,EAAQ,EAAK0gC,eAAepc,QAAQ/hB,WAAU,SAAAotB,GAAK,OAAAA,EAAE79B,KAAOkvC,EAAKlvC,OAExD,IAAXkO,GACH,EAAK0gC,eAAepc,QAAQ9mB,OAAOwC,EAAO,GAG3C,EAAK0gC,eAAepc,QAAQ9mB,OAAOwC,EAAO,GAC1C,EAAKygC,gBAAgBnc,QAAQzqB,KAAKmnC,OAIpC,YAAAE,wBAAA,WACCprC,KAAK0nC,eAAgB,EAErB1nC,KAAKgrC,2BAA2B,IAGjC,YAAAjxB,WAAA,SAAWG,GACV,OAAOla,KAAK3B,gBAAgB8b,qBAAqBD,I,iCA5FtChf,GAAmB,gF,iCAAnBA,EAAmB,kGAHpB,CAAC,EAAAnF,YAAS,qkDCZtB,4BACE,4BAEA,4BAEE,yBAEA,yBACE,4BACF,iBACA,oBAEF,8BAwCA,4BACA,2BACI,6BACF,iBACA,gCAAgE,wCAAS,EAAAq1C,6BACvE,6BACF,iBACA,iBACA,qBAEA,6BACE,6BACE,gCAsCA,gCAGF,iBACF,iBAGH,iBACD,kB,MAlGmB,uEAoDkB,uFAsCA,2F,oqCD9FrC,GAOa,EAAAlwC,uB,iIEfb,KAEA,MACA,MAIA,MAPA,IAQA,SACA,SAIA,GADA,OACA,Q,oICQY,4BACE,4BACE,2BAA8F,YAAgC,iBAChI,iBACA,4BACE,gCAAsB,4GACpB,6BACF,iBACA,gCAAsB,4GACpB,6BACF,iBACA,gCAAsB,8GACpB,8BACF,iBACF,iBACF,iB,0BAbO,oFAA2F,qE,yEDR9G,aAoBC,WAAmB4Z,EAA+CE,EAAuCgoB,EAAwB7+B,GAA9G,KAAA2W,UAA+C,KAAAE,WAAuC,KAAAgoB,SAAwB,KAAA7+B,eAdjI,KAAA2Q,QAAkB,KAElB,KAAA+1B,KAA0C,CACzC1F,UAAW,GACX2F,MAAO,EACPpiB,WAAY,EACZD,SAAU,I,OAUX,YAAAxiB,SAAA,WACCD,KAAKulC,aAAa,IAGnB,YAAAA,aAAA,SAAa7iB,GAAb,WACC1iB,KAAK8U,QAAQqQ,QAAQzC,EAAY1iB,KAAK6kC,KAAKpiB,UAAUxY,MAAK,SAAA46B,GACzD,EAAKA,KAAOA,KACVx6B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAsL,OAAA,sBACC5V,KAAK8U,QAAQ1F,KAAK,MAAMnF,MAAK,SAAAmB,GAE5B,IAAI8C,EAAa,EAAK/P,aAAagP,KAAK,EAAA/R,oCAAqC,CAC5E+S,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBH,EAAWI,QAAQnD,KAAK,KAAMC,EAAS8qB,MACvChoB,EAAWI,QAAQ+8B,UAAUzqC,WAAU,WACtC,EAAK2kC,aAAa,EAAKV,KAAKniB,mBAK/B,YAAA6M,OAAA,SAAOnM,GAAP,WAECpjB,KAAK8U,QAAQ1F,KAAKgU,EAAO1N,KAAKzL,MAAK,SAAAmB,GAElC,IAAI8C,EAAa,EAAK/P,aAAagP,KAAK,EAAA/R,oCAAqC,CAC5E+S,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBH,EAAWI,QAAQnD,KAAKC,EAASgY,OAAQhY,EAAS8qB,MAClDhoB,EAAWI,QAAQ+8B,UAAUzqC,WAAU,WACtC,EAAK2kC,aAAa,EAAKV,KAAKniB,mBAK/B,YAAAvF,SAAA,SAASiG,GAAT,WAECpjB,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQQ,QAAU9O,KAAKgV,SAASlU,OAAO,+BAAiC,KAAOsiB,EAAOxb,MAAMuE,eAAiB,IAC7HnM,KAAKkO,WAAWI,QAAQS,WAAa/O,KAAKgV,SAASlU,OAAO,uBAC1Dd,KAAKkO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CrQ,KAAKkO,WAAWI,QAAQU,UAAUpO,WAAU,WAC3C,EAAKkU,QAAQ1T,OAAOgiB,EAAO1N,KAAKzL,MAAK,WACpC,EAAKs7B,aAAa,EAAKV,KAAKniB,eAC1BrY,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAs2B,OAAA,SAAOxd,GACNpjB,KAAKg9B,OAAOQ,SAAS,CAAC,oCAAqCpa,EAAO1N,OAGnE,YAAAnL,MAAA,SAAMD,GACJtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCArFtCnP,GAAqC,qK,iCAArCA,EAAqC,+7BCpBlD,4BACE,4BACA,6BAEA,4BAEE,4BACE,yBACE,4BACF,iBACF,iBAEA,4BACE,4BACE,8BACE,6BACE,0BACE,4BAAwB,6BAAwD,iBAClF,iBACF,iBACA,6BACE,+B,wBAgBF,iBACF,iBACA,8CAAqB,8CAAc,EAAAoqC,aAAA,MAAsB,iBAEzD,8BACE,8BACE,iCAAsB,wCAAS,EAAA3vB,YAC7B,8BACF,iBACF,iBACF,iBACF,iBACF,iBACF,iBACF,kB,MA9BgB,qJ,uMDNhB,GAKa,EAAAza,yC,+HEpBb,KACA,MADA,IAEA,QAIA,GADA,MACA,Q,GAGA,O,4GCRE,6BAAqE,YAAW,kB,6BAAX,+C,mDAWjE,4BACE,4BACE,4BAAQ,6BAAyD,iBAAC,sCAAkE,iBACpI,iBACF,iBACA,6BACE,+BAAO,2FAAP,iBACF,iBACF,iB,0BANyF,4CAI9E,+CAA+B,yBAA/B,CAA+B,wC,yBAWlC,gCAA6D,YAAa,kB,uBAAhC,6BAAmB,6C,yBAa7D,gCAA4E,YAAmB,kB,uBAA5C,6BAAyB,6C,mDARpF,4BACE,4BACE,4BAAO,6BAA4D,iBACrE,iBACA,6BACE,8BACE,gCAAoB,4GAClB,wBACA,kCACF,iBACF,iBACF,iBACF,iB,gCAN0B,0DAA8B,+BAExC,2D,yBAcR,gCAAiE,YAAgB,kB,uBAArC,4BAAqB,6C,mDARzE,4BACE,4BACE,4BAAO,6BAAyD,iBAClE,iBACA,6BACE,8BACE,gCAAoB,yGAA2B,6FAC7C,wBACA,kCACF,iBACF,iBACF,iBACF,iB,gCAN0B,uDAA2B,+BAErC,uD,yBAmCJ,4BACE,+BAA2C,6BAA6C,YAAyB,iBACnH,kB,uCAD0F,0D,yBAKtF,gCAAuD,YAA6B,kB,uBAAjD,6BAAoB,4D,mDAH3D,4BACE,gCAAoB,yHAA0C,oKAC5D,wBACA,kCACF,iBACF,iB,+DAJsB,6DAA0C,mCAEpD,gD,mDAGZ,4BACE,gCAAoB,gHAClB,wBACA,gCAA0B,6BAAwD,iBAClF,gCAA8B,6BAAgE,iBAC9F,gCAAoB,6BAAsD,iBAC5E,iBACF,iB,0CANsB,oDAAiC,2B,yBAUnD,gCAA+D,YAAc,kB,uBAAjC,2BAAmB,4C,mDAHnE,4BACE,gCAAoB,0HAClB,wBACA,kCACF,iBACF,iB,+DAJsB,8DAA2C,2BAErD,wD,mDAWR,2BAAyD,2I,uBACvD,yBACA,+BAAgD,6BAAyD,iBAC3G,iB,KAHiG,kF,mDARrG,4BACP,0BACE,2BAA0B,2J,uBACxB,yBACA,+BAAgD,6BAA6C,iBAC/F,iBACF,iBACA,0BACW,6BAIF,iBACX,iB,0CAX0E,iFAM1D,qD,sBA2BW,4BAAoC,6BAAsD,kB,qBAIxF,6B,mDAYH,gCAAuD,iKAAyB,GAAGmwC,MAAM76B,WAAW,EAAnB,yBAA1B,CAAuE,qKAA0C,GAAG66B,MAAM76B,WAAW,EAAnB,UACtK,gCAA0B,6BAAyD,iBACnF,gCAAyB,6BAA4D,iBACvF,iB,2FAHsD,iFAAuE,kCACnH,0CACA,2C,yBAHb,4BACE,kCAIF,kB,uCAJ4B,qD,sBAK5B,4BACE,+BAA2B,6BAAwC,iBACrE,kB,yBAII,gCACE,YACF,kB,uBAFQ,gCACN,qD,2FAHJ,gCAAyG,gKAAyB,GAAG66B,MAAM76B,WAAW,EAAnB,qBAA1B,CAAmE,uLAAiF,GAAG66B,MAAM76B,WAAW,EAAnB,oBAA2C,GAAG66B,MAAM76B,WAAW,EAAnB,uBACxS,gCAAyB,6BAA0C,iBACnE,kCAGF,iB,0FALyG,6EAAmE,yCAClK,4CAC4B,qD,sBAItC,+BAA6H,6BAAwC,kB,qBAmBjK,6B,qBACA,6B,yBAaA,gCACE,YACF,kB,uBAF2G,6BACzG,qD,mDAHJ,gCAA2E,+LAAyB,GAAG66B,MAAM76B,WAAW,EAAnB,yBACnG,gCAAyB,6BAA0C,iBACnE,kCAGF,iB,yHAL2E,gFAAyE,yCAC1I,4CACA,iH,yBAMhB,gCAA+D,YAAc,kB,uBAAjC,2BAAmB,4C,mDAFzD,iCAAsF,+LAAyB,GAAG66B,MAAM76B,WAAW,EAAnB,yBACtH,gCAAyB,6BAA0C,iBACnE,kCACF,iB,yHAH8F,gFAAyE,yCAC7J,4CACA,wD,yBAjCX,+BACG,4BACE,yBACE,uBAEA,4BACE,4BAAO,6BAAkD,iBAC3D,iBACA,uBAGA,4BACE,4BACE,qCACA,qCACF,iBACF,iBACF,iBACF,iBACA,6BACE,0BACE,qBACA,0BAAI,gCAA2B,aAAc,iBAAQ,iBACrD,6BAA4C,gCAA2B,8BAAwC,iBAAQ,iBACvH,0BACE,mCAMA,mCAIF,iBACF,iBACF,iBACF,kB,sGAzBoB,+FACA,6FAQiB,4CAGrB,8FAMA,8F,yBAhClB,0BACC,kCAuCA,kB,uCAvCO,gD,yBAjDZ,yBACE,2BACE,+BACE,4BACE,yBACE,4BACE,4BAAO,6BAAqD,iBAC9D,iBACA,4BACG,4BAAO,8BAA0C,iBACnD,iBACA,6BACE,kCACF,iBACA,6BACE,6BACE,qCACF,iBACF,iBACH,iBACF,iBACA,6BACE,0BACE,0BAAI,gCAA2B,aAAc,iBAAQ,iBACrD,0BACE,gCAA2B,aAAkB,iBAC/C,iBACA,+BAMA,+BAGA,0BACE,mCAMA,kCACF,iBACF,iBACF,iBACF,iBACA,gCAyCF,iBACF,kB,uEA9EoB,qDAIK,8FAOgB,4CAEF,gDAEzB,oDAMA,oDAIM,qHAMD,sHAKV,yN,yBAzDd,4BACE,yBAAI,yBAAU,iBACf,+BACE,4BACE,yBACE,oBACF,iBACF,iBACA,4BACE,+BA2FF,iBACF,iBACD,kB,uCA7FS,wD,yBA/CX,yBACE,8BAGA,8BAMA,8BAQA,8BAMA,8BAcA,8BAuGF,kB,4CA7IuD,wEAChC,6DAGC,6DAMA,6DAQA,uFAMA,6DAcN,8D,mDAlE5B,4BAEE,4BACE,4BAAO,6BAAwD,iBACjE,iBACA,6BACE,6BACE,+BACE,4BACE,yBACE,4BACE,8BACF,iBACA,6BACE,8BACF,iBACA,6BACE,8BACF,iBACA,6BACE,8BACF,iBACA,6BACE,8BACF,iBACF,iBACF,iBACA,6BACE,+BA8IA,0BACE,6BACE,4BAAsB,2FAAqB,iBAC7C,iBACF,iBACF,iBACF,iBAEF,iBACJ,iBAGA,iB,gCA1Jc,qDDhEpB,iBAoCC,WAAoBqE,EAA+CxW,EAA0C0W,EAAuC9G,GAAhI,KAAA4G,UAA+C,KAAAxW,kBAA0C,KAAA0W,WAAuC,KAAA9G,aA9BpJ,KAAAY,QAAkB,KAIlB,KAAAsU,OAAgC,CAC/BhN,aAAc,KACdm1B,OAAQ,KACR9nC,UAAW,KACXmE,MAAO5H,KAAKgV,SAASY,SACrB+I,cAAe,IAGhB,KAAAhV,cAA+B,GAE/B,KAAA6hC,KAAoB,KACpB,KAAAC,QAAwD,KAExD,KAAAjgC,MAAyB,GAEzB,KAAAkgC,UAAwB,GAExB,KAAAC,cAAuB,G,OAWvB,YAAA1rC,SAAA,WACCD,KAAKqrC,UAAY,IAAI,EAAA15B,SAGtB,YAAAxG,KAAA,SAAKiY,EAA+BzZ,GAApC,WAIC,GAFA3J,KAAK2J,cAAgBA,EAEP,MAAVyZ,EAAgB,CACnBpjB,KAAKojB,OAASA,EAEd,IAAIwoB,EAAS5rC,KAAK2J,cAAc8C,WAAU,SAAA7C,GAAO,OAAAA,EAAItN,OAAS,EAAK8mB,OAAOhN,iBAE1D,IAAZw1B,IACH5rC,KAAKwrC,KAAOxrC,KAAK2J,cAAciiC,IAGhC,IAAIC,EAAS7rC,KAAKwrC,KAAKM,QAAQr/B,WAAU,SAAA8+B,GAAU,OAAAA,EAAO71B,MAAQ,EAAK0N,OAAOmoB,WAE9D,IAAZM,IACH7rC,KAAKyrC,QAAUzrC,KAAKwrC,KAAKM,QAAQD,IAGd,MAAhB7rC,KAAKyrC,SAAyC,wBAAtBzrC,KAAKyrC,QAAQ1/B,MAMxC/L,KAAK8U,QAAQwQ,eAAetlB,KAAKojB,OAAOmoB,OAAQvrC,KAAKojB,OAAO3f,WAAWwG,MAAK,SAAA8hC,GACtE,EAAKvgC,MAAQugC,EAASvgC,MACtB,EAAKmgC,cAAgBI,EAASJ,iBAC7BthC,OAAM,SAACC,GACR,EAAKC,MAAMD,MAKlBtK,KAAK0rC,UAAY,GACjB,IAAK,IAAInoC,EAAI,EAAGA,EAAIvD,KAAKojB,OAAOzE,cAAcqtB,OAAO/qC,SAAUsC,EAAG,CACjE,IAAI+nC,EAAQtrC,KAAKojB,OAAOzE,cAAcqtB,OAAOzoC,GAEzC0oC,EAAqB,CAAEX,MAAOA,EAAOY,SAAU3oC,EAAG4oC,mBAAmB,GAEjD,MAApBb,EAAM76B,YAAsBjU,OAAOD,KAAK+uC,EAAM76B,YAAYxP,OAAS,IACtEgrC,EAASG,eAAgB,GAG1BpsC,KAAK0rC,UAAU3nC,KAAKkoC,MAKvB,YAAAI,uBAAA,sBACKniC,EAAQlK,KAAK2J,cAAc8C,WAAU,SAAA7C,GAAO,OAAAA,EAAItN,OAAS,EAAK8mB,OAAOhN,iBAE1D,IAAXlM,EACHlK,KAAKwrC,KAAOxrC,KAAK2J,cAAcO,IAG/BlK,KAAKwrC,KAAO,KACZxrC,KAAKyrC,QAAU,OAIjB,YAAAa,uBAAA,sBACKpiC,EAAQlK,KAAKwrC,KAAKM,QAAQr/B,WAAU,SAAA8+B,GAAU,OAAAA,EAAO71B,MAAQ,EAAK0N,OAAOmoB,UAU7E,GAPCvrC,KAAKyrC,SADS,IAAXvhC,EACYlK,KAAKwrC,KAAKM,QAAQ5hC,GAGlB,KAII,MAAhBlK,KAAKyrC,SAAyC,wBAAtBzrC,KAAKyrC,QAAQ1/B,MAaxC,GAPA/L,KAAK8U,QAAQwQ,eAAetlB,KAAKojB,OAAOmoB,OAAQvrC,KAAKojB,OAAO3f,WAAWwG,MAAK,SAAA8hC,GACvE,EAAKvgC,MAAQugC,EAASvgC,MACtB,EAAKmgC,cAAgBI,EAASJ,iBAC7BthC,OAAM,SAACC,GACR,EAAKC,MAAMD,MAG2B,MAAvCtK,KAAKojB,OAAOzE,cAAsB,OAAW,CAChD,IAAI4tB,EAAM,CACTxgC,KAAM,KACNlI,cAAe,KACfynC,MAAO,GAERtrC,KAAKojB,OAAOzE,cAAsB,OAAI,CAAC4tB,GACvCvsC,KAAK0rC,UAAU3nC,KAAK,CAAEunC,MAAOiB,EAAKL,SAAU,EAAGC,mBAAmB,UAKnEnsC,KAAKwL,MAAQ,IAIf,YAAAghC,SAAA,WACC,IAAID,EAAM,CACTxgC,KAAM,KACNlI,cAAe,KACfynC,MAAOtrC,KAAKojB,OAAOzE,cAAcqtB,OAAO/qC,QAErCwrC,EAAMzsC,KAAKojB,OAAOzE,cAAsB,OAAE5a,KAAKwoC,GACnDvsC,KAAK0rC,UAAU3nC,KAAK,CAAEunC,MAAOiB,EAAKL,SAAUO,EAAM,EAAGN,mBAAmB,KAGzE,YAAAO,YAAA,SAAYR,EAAkBS,GAC7B,GAAIT,EAAWlsC,KAAKojB,OAAOzE,cAAsB,OAAE1d,OAAQ,CAC1D,IAAI2rC,EAAc5sC,KAAK6sC,iBACnBD,IAAgBD,EAAgB,GACnC3sC,KAAK0rC,UAAUhkC,OAAOklC,EAAa,GAGpC5sC,KAAK0rC,UAAUhkC,OAAOilC,EAAe,GAGrC,IADA,IAAIG,EAAc,EACTvpC,EAAI,EAAGA,EAAIvD,KAAK0rC,UAAUzqC,SAAUsC,EAAG,CAC/C,IAAI0oC,EAAqBjsC,KAAK0rC,UAAUnoC,GAExC0oC,EAASC,SAAWY,EAEfb,EAASE,oBACbW,GAA4B,GAI9B9sC,KAAKojB,OAAOzE,cAAsB,OAAEjX,OAAOwkC,EAAU,KAIvD,YAAAW,eAAA,WACC,IAAK,IAAItpC,EAAI,EAAGA,EAAIvD,KAAK0rC,UAAUzqC,SAAUsC,EAAG,CAG/C,GAFevD,KAAK0rC,UAAUnoC,GAEjB4oC,kBACZ,OAAO5oC,EAIT,OAAQ,GAGT,YAAAwpC,oBAAA,SAAoBd,GACnB,IAAIW,EAAc5sC,KAAK6sC,kBAEH,GAAhBD,IACH5sC,KAAK0rC,UAAUhkC,OAAOklC,EAAa,GAE/BA,GAAeX,EAASC,SAAW,IAKxClsC,KAAKgtC,sBAAsBf,EAASX,MAAMznC,cAAeooC,EAASC,UAAU,IAG7E,YAAAe,eAAA,SAAeprC,EAA6BqrC,GAC3C,IAAK,IAAI3pC,EAAI,EAAGA,EAAI1B,EAAKsrC,WAAWlsC,SAAUsC,EAAG,CAChD,IAAI6pC,EAAYvrC,EAAKsrC,WAAW5pC,GAEhC,GAAI6pC,EAAUF,UAAYA,EACzB,OAAOE,EAAU/tC,UAKpB,YAAAguC,oBAAA,SAAoBxrC,EAAWyrC,EAAkBrB,GAChD,GAAgB,MAAZqB,GAAiC,KAAbA,GAQxB,IAAK,IAAIjlB,EAAI,EAAGA,EAAI4jB,EAASsB,QAAQC,MAAMvsC,OAAQonB,IAClD,GAAI4jB,EAASsB,QAAQC,MAAMnlB,GAAGb,OAAS3lB,EAAK2lB,KAAM,CACjD,IAAIimB,EAAmBxB,EAASsB,QAAQC,MAAMnlB,GAE9C,GAAyB,MAArBolB,EAAYvkB,MAAe,CAC9BrnB,EAAKqnB,MAAQ,GAEb,IAAK,IAAI3lB,EAAI,EAAGA,EAAIkqC,EAAYvkB,MAAMjoB,SAAUsC,EAAG,CAClD,IAAIye,EAAOyrB,EAAYvkB,MAAM3lB,GAE7B1B,EAAKqnB,MAAMlH,EAAK1lB,MAAQ,MAI1B,aArBiB,MAAduF,EAAKqnB,QACRrnB,EAAKqnB,MAAQ,KAyBhB,YAAA8jB,sBAAA,SAAsB//B,EAA2B0/B,EAAuBe,GAAxE,WACC,QADuE,IAAAA,OAAA,GAC7C,KAAtBzgC,GAAiD,MAArBA,EAA2B,CAC1D,IAAIg/B,EAAqBjsC,KAAK0rC,UAAUiB,GAYxC,OAVAV,EAASG,eAAgB,EACzBH,EAASsB,QAAU,KACnBtB,EAASX,MAAM76B,WAAa,SAIR,IAFhBm8B,EAAc5sC,KAAK6sC,mBAEED,IAAgBD,EAAgB,GACxD3sC,KAAK0rC,UAAUhkC,OAAOklC,EAAa,IAMrC,IAIKA,EAJDW,EAAUvtC,KAAK0rC,UAAUiB,GAAeY,QAC7B,MAAXA,GAAmBA,EAAQtgC,oBAAsBA,IAKhC,IAFhB2/B,EAAc5sC,KAAK6sC,mBAEED,IAAgBD,EAAgB,IACxD3sC,KAAK0rC,UAAUhkC,OAAOklC,EAAa,GAE/BA,EAAcD,IACjBA,GAAgC,IAIlC3sC,KAAK0rC,UAAUhkC,OAAOilC,EAAgB,EAAG,EAAG,CAAER,mBAAmB,EAAMoB,QAASA,KAGhFvtC,KAAK8U,QAAQsQ,iBAAiBnY,EAAmBjN,KAAKojB,OAAOmoB,QAAQthC,MAAK,SAACujC,GAC1E,IAAIZ,EAAc,EAAKC,iBACnBZ,EAAqB,EAAKP,UAAUiB,GACpCrB,EAAQW,EAASX,MAgBrB,GAdIoC,IACHpC,EAAM76B,WAAa,IAGpBw7B,EAASsB,QAAU,CAAEtgC,kBAAmBA,EAAmBugC,MAAOA,IAE9C,GAAhBZ,IAAsBA,IAAgBD,EAAgB,GAAKa,EAAMvsC,OAAS,KAC7E,EAAKyqC,UAAUhkC,OAAOklC,EAAa,GAE/BA,EAAcD,IACjBA,GAAgC,IAI9Ba,EAAMvsC,OAAS,EAAG,CACrBgrC,EAASG,eAAgB,EAEzB,IAAK,IAAI7oC,EAAI,EAAGA,EAAIiqC,EAAMvsC,SAAUsC,EAAG,CACtC,IAAI1B,EAAO2rC,EAAMjqC,GAEjB,IAAImqC,GAAiD,MAA/BpC,EAAM76B,WAAW5O,EAAK2lB,SAC3C8jB,EAAM76B,WAAW5O,EAAK2lB,MAAQ,CAC7BA,KAAM3lB,EAAK2lB,KACXnC,WAAY,KACZsoB,gBAAgB,GAGC,MAAd9rC,EAAKqnB,OAAiBrnB,EAAKqnB,MAAMjoB,OAAS,GAAG,CAChDqqC,EAAM76B,WAAW5O,EAAK2lB,MAAM0B,MAAQ,GAEpC,IAAK,IAAIb,EAAI,EAAGA,EAAIxmB,EAAKqnB,MAAMjoB,SAAUonB,EAAG,CAC3C,IAAIrG,EAAOngB,EAAKqnB,MAAMb,GAEtBijB,EAAM76B,WAAW5O,EAAK2lB,MAAM0B,MAAMlH,EAAK1lB,MAAQ,OAUnD,EAAKovC,UAAUhkC,OAAOilC,EAAgB,EAAG,EAAG,CAAER,mBAAmB,EAAMoB,QAAS,CAAEtgC,kBAAmBA,EAAmBugC,MAAOA,UAG/HvB,EAASG,eAAgB,KAExB/hC,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKd,YAAAsjC,mBAAA,SAAmB/rC,GAGjB,IAAK,IAAMxE,KAFXwE,EAAKwjB,WAAa,KAEAxjB,EAAKqnB,MAChBrnB,EAAKqnB,MAAMyZ,eAAetlC,KAC5BwE,EAAKqnB,MAAM7rB,GAAO,OAKzB,YAAA4Z,SAAA,sBACCjX,KAAK8U,QAAQwD,MAAMtY,KAAKojB,QAAQnZ,MAAK,SAAAmgC,GAEpC,EAAKiB,UAAUj+B,KAAKg9B,GACpB,EAAKl8B,WAAWiJ,UACd9M,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA6lB,OAAA,sBAEwB,MAAnBnwB,KAAKojB,OAAO1N,IACf1V,KAAK8U,QAAQ0Q,OAAOxlB,KAAKojB,OAAO1N,KAAKzL,MAAK,WACzC,EAAKiE,WAAWiJ,UACd9M,OAAM,SAACC,GACT,EAAKC,MAAMD,MAKZtK,KAAKkO,WAAWiJ,QAIlB,YAAA5M,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA7WrClP,GAAmC,0K,iCAAnCA,EAAmC,qE,OAAA,K,onIC/BhD,4BACE,8BAEA,4BACE,yBACE,4BACF,iBACF,iBAEA,+BAAwC,sFAA0B,EAAA6b,cAEhE,+BACE,8BASA,4BACE,6BACE,6BAAO,6BAA+D,iBACxE,iBACA,8BACE,+BACE,iCAAoB,4EAAiC,4BAA+B,EAAAo1B,4BAClF,yBACA,mCACF,iBACF,iBACF,iBACF,iBACA,gCAcA,gCAcA,iCAwLA,6BACE,wBACA,8BACE,8BACE,gCAAmF,wCAAS,EAAAlc,Y,wBAA5F,iBACA,2B,wBACF,iBACF,iBACF,iBAEF,iBACF,iBAEF,iB,+BAlQO,oDAWuB,mEAeE,6DAAiC,+BAE3C,uDAKX,iDAcA,6DAcmB,4FA4LG,2EACA,2EAAqC,uB,wUDjOtE,GAKa,EAAA/0B,uC,0HE/Bb,KACA,MADA,IAGA,SAOA,GAJA,MAGA,OACA,Q,4HCJI,4BAAqE,YAAW,kB,6BAAX,+C,qBA0D/C,6B,qBACA,6B,qBACA,6B,yBAVJ,yBACE,2BACE,6BAA0E,YAC5E,iBACA,yBACE,YACF,iBACA,4BACE,oCACA,oCACA,oCACF,iBACF,kB,iCAV8E,iDAG1E,6DAGU,yDACA,6DACA,oD,yBA/B1B,4BACE,4BAEI,yBACI,6BACJ,iBACA,+BACI,4BACE,yBACE,yBACE,6BACF,iBACA,yBACE,8BACF,iBACA,6BACE,8BACF,iBACF,iBACF,iBACA,6BACE,gCAaF,iBACJ,iBAEJ,iBACF,kB,8BAjBgB,uE,yBAwCI,8BACE,YACF,kB,uCADE,kE,wBAIJ,mC,uCAA0G,oC,yBAM1G,2BACE,gCACE,6BACF,iBACF,kB,uCAJoC,kE,yBAnB1C,yBACE,2BACE,6BACE,sBACA,2BACE,8BAA+B,YAAiB,iBAChD,8BAA+B,YAAmB,iBAClD,8BAA+B,aAAyB,iBACxD,iCAGF,iBAEA,2CAEF,iBACF,iBACA,6BACE,8BACE,8BAKD,iBACF,iBACH,kB,4CArBuC,wDACA,0DACA,kEACzB,sGAKQ,sGAMb,0D,mDAWb,6BACE,6CAAqB,uGAAoC,iBAC3D,kB,4HA/GZ,4BAEE,4BACE,4BACE,yBAAI,YAA+B,iBACrC,iBACF,iBAEA,4BACE,4BACE,4BACE,8BAAuC,kBAAG,iBAC1C,uBACA,+BAAuC,aAAsB,iBAC/D,iBACA,8BACE,oCACE,8BACE,iCAAiD,wF,wBAC/C,8BACF,iBACF,iBACF,iBACF,iBACF,iBAEA,iCAyCA,6BACE,8BACE,6BACE,8BACE,gCACE,6BACE,6BACE,4BAAoC,8BAA2C,iBACjF,iBACF,iBACA,6BAEE,gC,wBA4BF,iBACF,iBACA,gCAGF,iBACF,iBACF,iBACF,iBACF,iBACF,iB,oDAjHU,kEASqC,yDAKsE,kDAA2B,0DAQ3H,0FAqDD,oJA8BH,+DDxGvB,iBAmBC,WAAoB0Z,EAA+CE,EAAuC2vB,GAAtF,KAAA7vB,UAA+C,KAAAE,WAAuC,KAAA2vB,QAb1G,KAAA71B,QAAkB,KAElB,KAAAsU,OAAgC,KAEhC,KAAAyhB,KAAuC,CACtCpiB,SAAU,GACVC,WAAY,EACZoiB,MAAO,EACP3F,UAAW,I,OAOZ,YAAAl/B,SAAA,sBACOyV,EAAM1V,KAAK2kC,MAAMS,SAASC,SAAS3yB,IAAI,OAE7C1S,KAAK8U,QAAQpC,IAAIgD,GAAKzL,MAAK,SAAAmZ,GAC1B,EAAKA,OAASA,EACd,EAAKmiB,aAAa,MAGnB,IAAIC,EAAU,SAAWzD,OAAOC,SAASyD,UAAY1D,OAAOC,SAAS0D,KAAO,IAAM3D,OAAOC,SAAS0D,KAAO,IAAM/yB,IAE/G3S,KAAK2lC,SAAW,EAAAC,UAAUJ,EAAU,qBACpCxlC,KAAK2lC,SAAS/kC,WAAU,SAAAkO,GACF,2BAAjBA,EAAQ/C,MACX,EAAKw5B,aAAa,EAAKV,KAAKniB,gBAK/B,YAAA7O,YAAA,WAEsB,MAAjB7T,KAAK2lC,UACR3lC,KAAK2lC,SAASzyB,YAIhB,YAAA26B,MAAA,sBACC7tC,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQ2Q,IAAIzlB,KAAKojB,OAAO1N,KAAKzL,MAAK,WAEtC,EAAKs7B,aAAa,EAAKV,KAAKniB,eAE1BrY,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAi7B,aAAA,SAAa7iB,GAAb,WACoB,MAAf1iB,KAAKojB,SAERpjB,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQ4Q,QAAQ1lB,KAAKojB,OAAO1N,IAAKgN,EAAY1iB,KAAK6kC,KAAKpiB,UAAUxY,MAAK,SAAAmB,GAE1E,EAAK68B,iBAAiB78B,GACtB,EAAKy5B,KAAOz5B,KAEVf,OAAM,SAACC,GACT,EAAKC,MAAMD,QAKd,YAAAy9B,gBAAA,SAAgBC,GACf,MAAmB,aAAfA,EAAI/hB,OACAjmB,KAAKgV,SAASlU,OAAO,0BAEL,YAAfknC,EAAI/hB,QAAuC,QAAf+hB,EAAI/hB,OACjCjmB,KAAKgV,SAASlU,OAAO,yBAEL,WAAfknC,EAAI/hB,OACLjmB,KAAKgV,SAASlU,OAAO,wBAEL,YAAfknC,EAAI/hB,OACLjmB,KAAKgV,SAASlU,OAAO,yBAEL,aAAfknC,EAAI/hB,OACLjmB,KAAKgV,SAASlU,OAAO,0BAEL,YAAfknC,EAAI/hB,OACLjmB,KAAKgV,SAASlU,OAAO,yBAGrBd,KAAKgV,SAASlU,OAAO,0BAI9B,YAAAmnC,iBAAA,SAAiBpD,GAAjB,WAECA,EAAK1F,UAAU99B,SAAQ,SAAC2mC,GAEvBA,EAAIE,WAAa,CAChB,MAAS,CACR,CACC,MAAS,EAAKlzB,SAASlU,OAAO,+BAC9B,OAAwB,QAAdknC,EAAIG,MAAkB,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,QAG7F,CACC,MAAS,EAAKnzB,SAASlU,OAAO,mCAC9B,OAAwB,eAAdknC,EAAIG,OAAwC,sBAAdH,EAAIG,MAAgC,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,sBAEzI,CACC,MAAS,EAAKnzB,SAASlU,OAAO,uCAC9B,OAAwB,WAAdknC,EAAIG,OAAoC,mBAAdH,EAAIG,OAA4C,kBAAdH,EAAIG,MAA4B,EAAKC,aAAaJ,GAAO,UAOpI,YAAAK,mBAAA,SAAmBC,EAAkBC,GACpC,IAAIxD,EAAQ,CAAC,aAAc,oBAAqB,SAAU,iBAAkB,iBAExEyD,EAASzD,EAAMx4B,QAAQ+7B,GAG3B,OAFgBvD,EAAMx4B,QAAQg8B,GAEdC,EACR,WAGA,IAIT,YAAAJ,aAAA,SAAaJ,GACZ,MAAmB,WAAfA,EAAI/hB,QAAsC,YAAf+hB,EAAI/hB,OAC3B,UAEgB,aAAf+hB,EAAI/hB,QAAwC,YAAf+hB,EAAI/hB,OAClC,QAGD,IAIR,YAAA1b,MAAA,SAAMD,GACLtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAhJrCjP,GAA8B,uI,iCAA9BA,EAA8B,mgECnB3C,4BACE,4BACA,6BAEA,4BAEE,8BAEA,4BACE,gCAsHF,iBACF,iBACF,kB,MA3HS,oDAGE,qD,wTDKX,GAKa,EAAAA,kC,gHEnBb,KACA,MAGA,MAJA,IAKA,S,GAEA,O,iGCFQ,4BAAqE,YAAW,kB,6BAAX,+C,yBAOjE,4BAKI,4BACI,6BAEI,sBACA,2BACI,8BACE,6BACA,YACF,iBACA,8BACE,6BACA,aACF,iBACJ,iBAEJ,iBACJ,iBACA,8BACI,2BAEI,0BAAI,yBAAG,aACL,8BACA,aACA,8BACF,iBAAI,iBACJ,0BAAI,aAAwC,8BAA6D,iBAE7G,iBACJ,iBACJ,kB,6BAtBkB,0DAIA,8DASC,kEAEL,6DAGE,mF,yBA0BI,yBACI,4BACE,wBAAG,YAAY,iBACjB,iBACA,4BACE,wBAAG,YAAe,iBACpB,iBACA,4BACE,wBAAG,YAAc,iBACnB,iBACJ,kB,uBARS,2CAGA,8CAGA,8C,mDAMb,6BACI,6CAAqB,uGAAoC,iBAC7D,kB,kGApCZ,6BAEI,4BAEI,+BACI,4BACI,yBACC,4BACI,6BAA2C,gBAAM,6BACrD,iBACA,4BACK,8BACJ,iBACD,6BACG,8BACF,iBACF,iBACJ,iBAEA,6BACI,gC,wBAWJ,iBACJ,iBACA,8BACI,gCAGJ,iBACJ,iBACJ,kB,8BAnBoB,iJAcH,6D,yBAnCrB,6BACI,gCAwCJ,kB,6BAxCsC,2CDtClD,iBAqBE,WAAmByZ,EAAkC6vB,EAAuBpmC,EAAiC8oC,GAA1F,KAAAvyB,UAAkC,KAAA6vB,QAAwD,KAAA0C,YAf7G,KAAAv4B,QAAkB,KAElB,KAAAiU,UAAoB,GAEpB,KAAA8hB,KAAY,CACVC,MAAO,EACPpiB,WAAY,EACZD,SAAU,GACV+L,QAAS,IAQTxuB,KAAK0wB,QAAUnyB,EAAYmyB,UAC3B1wB,KAAK2wB,aAAe3wB,KAAK0wB,SAAWnyB,EAAYoyB,eAChD3wB,KAAK4wB,cAAgB5wB,KAAK0wB,SAAW1wB,KAAK2wB,cAAgBpyB,EAAYsyB,gB,OAGxE,YAAA5wB,SAAA,WAEED,KAAK+iB,UAAY/iB,KAAK2kC,MAAMS,SAAS/yB,OAAY,IAEjDrS,KAAKulC,aAAa,IAIpB,YAAA1xB,YAAA,aAGA,YAAAo1B,mBAAA,SAAmBC,GACjB,OAAOA,EAAK5P,QAAQ,KAAM,OAG5B,YAAA6P,wBAAA,SAAwBv6B,GACtB,OAAO4D,KAAKC,UAAU7D,IAGxB,YAAA22B,aAAA,SAAa7iB,GAAb,WAEE1iB,KAAK8O,QAAU,KAEf9O,KAAK8U,QAAQmO,iBAAiBjjB,KAAK+iB,UAAW/iB,KAAK6kC,KAAKpiB,SAAUC,GAAYzY,MAAK,SAAAmB,GAEjF,EAAK48B,IAAM58B,EAEX,EAAKy5B,KAAO,EAAKmD,IAAI8F,gBAEpBzjC,OAAM,SAACC,GACR,EAAKC,MAAMD,OAKf,YAAAC,MAAA,SAAMD,GACFtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCA1DzChP,GAAoB,mJ,iCAApBA,EAAoB,slDCfjC,4BACI,4BACA,6BAEA,4BACI,8BAEI,4BACI,yBACI,4BACJ,iBACJ,iBACA,+BAmCA,8BA0CR,iBACJ,kB,MArFa,oDAOI,0CAmCA,sE,qgBDrCjB,GAKa,EAAAA,wB,oHEfb,KACA,MADA,IAEA,SACA,SAMA,GAJA,MAIA,QAEA,QAOA,GAFA,OAEA,Q,uLCgBoB,6BACE,2BAAyD,kHAAuC,6BAAoD,iBACtJ,kB,mDAaE,6BAEE,6BAA+B,gHAC7B,6BACE,2BAA6F,uH,uBAAiF,iBAC9K,4BAAqF,YAA0E,iBACjK,iBACF,iBACF,iB,0BAJyI,8EAC9C,6G,yBAVvG,4BACE,4BACE,6BACM,6BAEE,+BAUN,iBACF,iBACF,iBACF,kB,6BAbiB,+C,mDAenB,4BACE,4BAIE,uCAME,0GAAuC,mFAAvC,CAAuC,yFAGxC,iBACH,iBACF,iB,gCAVM,2CAAa,iCAAb,CAAa,oBAAb,CAAa,0CAAb,CAAa,oCDhD3B,IAGA,aAoHE,WAAoB6C,EAAsC4rB,EAA+BjV,EAAkC6vB,GAAvG,KAAAxmC,eAAsC,KAAA4rB,aAA+B,KAAAjV,UAAkC,KAAA6vB,QA7G3H,KAAAlQ,KAAmB,CACjBsZ,OAAQ,EACRC,KAAM,GAKR,KAAAhxB,oBAA8B,EAO9B,KAAApZ,KAAoB,GAKpB,KAAAqD,KAAe,GAKf,KAAAiuB,KAAel1B,KAAKy0B,KAAKsZ,OAKzB,KAAAtd,QAAkB,KAElB,KAAA7Y,QAAgB,IAAI1C,KAgBpB,KAAAigB,QAAkB,EAUlB,KAAAxB,QAAkB,EAElB,KAAAsa,aAAyB,GAKzB,KAAAjb,WAAoB,CAClB,CACExL,KAAM,YACN5f,MAAO,YACP5L,GAAI,eACJi3B,OAAQ,uCACRC,IAAK,4BACLC,UAAU,IAad,KAAA+a,oBAA8B,EAgB9B,KAAAjmB,eAA+B,IAAI,EAAAtW,QAEnC,KAAAmI,IAAqB,K,OAWrB,YAAA7Z,SAAA,sBACDD,KAAKmuC,cAAgBnuC,KAAK2kC,MAAMtyB,OAAOzR,WAAU,SAAAyR,GAC3C,IAAI+7B,EAAe/7B,EAAqB,aACvCpF,EAAoBoF,EAA0B,kBAEjD+7B,GAAgBnhC,GAClB,EAAK6H,QAAQ6G,aAAayyB,EAAcnhC,GAAmBhD,MAAK,SAAAokC,GAC/D,EAAK5hB,QAAQ,CAAC4hB,IACd,EAAKltC,OAAOktC,EAAQ,SAClBhkC,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMb,YAAAuJ,YAAA,WACE7T,KAAKnE,IAAIuF,SACZpB,KAAKmuC,cAAcrX,eAGlB,YAAApsB,gBAAA,sBAEQ0pB,EAAQp0B,KAAKgzB,WAAW,GAE9BhzB,KAAKnE,IAAM,IAAI,EAAAwuB,IAAI,CACjBC,UAAW,MACX3nB,MAAO,CACL,QAAW,EACX,KAAQyxB,EAAM5M,KACd,SAAY,CACV,wBAAwB,GAE1B,QAAW,CACT,OAAU,CACR,KAAQ,SACR,IAAO4M,EAAMlB,IACb,SAAY,MAGhB,OAAUkB,EAAMnB,OAChB,OAAU8O,OAAOC,SAASsM,SAAW,KAAOvM,OAAOC,SAASuM,KAAO57B,IAAM,kCACzE,OAAU,CACR,CACE,GAAMyhB,EAAMp4B,GACZ,KAAQ,SACR,OAAU,YAKhBuuB,KAAM,EACNikB,oBAAoB,EACpBhkB,OAAQ,EAAE,UAAW,aAGvBxqB,KAAKnE,IAAIwM,GAAG,QAAQ,WAClB,EAAKoiB,aAGPzqB,KAAKnE,IAAIsvB,WAAWnrB,KAAKurB,oBAG3B,YAAAkjB,WAAA,SAAWvZ,GACTl1B,KAAKk1B,KAAOA,EAERl1B,KAAKk1B,OAASl1B,KAAKy0B,KAAKsZ,SAC1B/tC,KAAKm1B,QAAS,GAGhBn1B,KAAK0uC,uBAEL1uC,KAAK8Z,IAAM,MAGb,YAAA60B,aAAA,SAAar6B,GACXtU,KAAKm1B,OAAS7gB,GAGhB,YAAA2c,iBAAA,WACEjxB,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMjZ,KAAKywB,WAG1C,YAAAhG,QAAA,sBA8BD,GA5BGzqB,KAAKnE,IAAIwM,GAAG,cAAc,WACxB,EAAKuiB,eAGP5qB,KAAK4qB,YAGL5qB,KAAKnE,IAAIsvB,WAAW,IAAI,EAAAC,kBAAkB,CAAE,gBAAkB,KAC9DprB,KAAKnE,IAAIsvB,WAAW,IAAI,EAAAyjB,mBAAmB,CAAEC,SAAS,IAAS,gBAE/D7uC,KAAKnE,IAAIwM,GAAG,QAAS,mBAAmB,SAACvD,GACvC,EAAKgqC,oBAAoBhqC,MAG3B9E,KAAKnE,IAAIwM,GAAG,QAAS,oBAAoB,SAACvD,GACxC,EAAKgqC,oBAAoBhqC,MAG9B9E,KAAKnE,IAAIwM,GAAG,wBAAwB,SAACjM,GAChCA,EAAE2uB,SAAS9pB,OAAS,GAAK7E,EAAEkxB,OAAOrsB,OAAS,EAC7C,EAAK+b,oBAAqB,EAG1B,EAAKA,oBAAqB,KAK1Bhd,KAAK4D,KAAK,CACZ,IAAImrC,EAAK,CAAC,KAAO,oBAAqB,SAAW/uC,KAAK4D,MAChD5D,KAAKnE,IAAIuwB,UAAU,YAAaK,QAAQsiB,GAE9C/uC,KAAKgvC,cAAchvC,KAAK4D,KAAK,GAAI,QAIjC,YAAAkrC,oBAAA,SAAoBhqC,GAClB,IAAK9E,KAAKm1B,QAA4B,MAAlBrwB,EAAMimB,UAAoBjmB,EAAMimB,SAAS9pB,OAAS,EAAG,CACvE,IAAMmsB,EAAUtoB,EAAMimB,SAAS,GAEA,MAA3BqC,EAAQe,WAAW7xB,MAAiC,MAAhB0D,KAAK8tB,SAAmB9tB,KAAK8tB,QAAQK,WAAW7xB,OAAS8wB,EAAQe,WAAW7xB,MAClH0D,KAAKmB,OAAOisB,EAAS,QAO3B,YAAAxC,UAAA,sBAEQuR,EAAS,WAEfn8B,KAAKnE,IAAI0wB,UAAU4P,EAAQ,CACzBpwB,KAAM,UACNnI,KAAM,CACJ,KAAQ,oBACR,SAAY,MAKhB5D,KAAKnE,IAAI2wB,SAAS,CAChB,GAAM2P,EAAS,WACf,KAAQ,OACR,OAAUA,EACV,OAAU,GACV,MAAS,CACP,aAnRc,UAoRd,eAAgB,GAChB,qBAAsB,SAExBr9B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,MAKpEkB,KAAKnE,IAAI2wB,SAAS,CAChB,GAAM2P,EAAS,UACf,KAAQ,SACR,OAAUA,EACV,MAAS,CACP,gBAAiB,GACjB,eAnSc,UAoSd,sBAAuB,EACvB,sBAAuB,WAEzBr9B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,MAsC/DkB,KAAKnE,IAAI2wB,SAAS,CAChB,GAAM2P,EAAS,SACf,OAAUA,EACV,KAAQ,SACR,MAAS,CACP,aAAc,QACd,kBAAmB,OACnB,kBAAmB,GAErB,OAAU,CACR,aAAc,CAAC,MAAO,iBAAkB,CAAC,MAAO,iBAChD,YAAa,CAAC,mBACd,cAAe,CAAC,EAAG,IACnB,cAAe,MACf,YAAa,MAIjBn8B,KAAKiuC,aAAa5sC,SAAQ,SAAA4yB,GACxB,EAAKgb,eAAehb,OAIxB,YAAAib,mBAAA,SAAmB9a,GAGjBp0B,KAAKgzB,WAAW3xB,SAAQ,SAAA8tC,GACtBA,EAAUhc,UAAW,KAGvBiB,EAAMjB,UAAW,EAEjBnzB,KAAKnE,IAAIuzC,SAAS,CAChB,QAAW,EACX,KAAQhb,EAAM5M,KACd,SAAY,CACV,wBAAwB,GAE1B,QAAW,CACT,OAAU,CACR,KAAQ,SACR,IAAO4M,EAAMlB,IACb,SAAY,MAGhB,OAAUkB,EAAMnB,OAChB,OAAU8O,OAAOC,SAASsM,SAAW,KAAOvM,OAAOC,SAASuM,KAAO57B,IAAM,kCACzE,OAAU,CACR,CACE,GAAMyhB,EAAMp4B,GACZ,KAAQ,SACR,OAAU,cAOlB,YAAA4kB,OAAA,sBACE5gB,KAAK+pB,WAAWnJ,OAAO5gB,KAAKiH,KAAMjH,KAAKywB,SAASxmB,MAAK,SAAArG,GAC7C,EAAK/H,IAAIuwB,UAAU,YAAaK,QAAQ7oB,GAG9C,EAAK6oB,QAAQ7oB,EAAKmnB,aACjB1gB,OAAM,SAACC,GACR,EAAKC,MAAMD,OAMf,YAAA0kC,cAAA,SAAcrvC,EAAiBmF,GAA/B,WACe,MAATA,GACFA,EAAM4I,kBAGR1N,KAAKkuC,oBAAqB,EAG1BluC,KAAKqvC,MAAQp+B,YAAW,WACtB,IAAK,EAAKi9B,oBACJvuC,GAAyB,MAAjBA,EAAK6Y,SAAkB,CACjC,IAAMsU,EAAS,UAAKntB,GAEhBstB,EAAU,GACVqiB,EAAU,GAGa,UAAvB3vC,EAAK6Y,SAASzM,MAA2C,eAAvBpM,EAAK6Y,SAASzM,OAElDkhB,EAAU,IACVqiB,EAAU,IAGZ,EAAKzzC,IAAImxB,UAAUF,EAAQ,CAAEG,QAASA,EAAS/Y,SAAQ,EAAMo7B,QAASA,OAjB9D,MAuBhB,YAAAnuC,OAAA,SAAOxB,EAAiBmF,GAAxB,WAEe,MAATA,GACFA,EAAM4I,kBAGR1N,KAAK8U,QAAQ+L,kBAAkB,CAAClhB,EAAKwuB,WAAWpiB,MAAO,MAAM9B,MAAK,SAAAuB,GAChE,EAAKO,KAAOP,EAAM,GAClB,EAAKsiB,QAAUnuB,EACf,EAAKu1B,KAAO,EAAKT,KAAKuZ,QAerB3jC,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIf,YAAAmiB,QAAA,SAAQ7oB,GACN5D,KAAK4D,KAAOA,GAGd,YAAA2rC,qBAAA,SAAqBnb,GAEfA,EAAMT,OACR3zB,KAAKivC,eAAe7a,EAAM1e,KAG1B1V,KAAKwvC,kBAAkBpb,EAAM1e,MAKjC,YAAA85B,kBAAA,SAAkBrT,GAEhB,IAAMjyB,EAAQlK,KAAKiuC,aAAa1hC,QAAQ4vB,IAEzB,IAAXjyB,IACFlK,KAAKnE,IAAIswB,YAAYgQ,EAAS,WAC9Bn8B,KAAKnE,IAAIswB,YAAYgQ,EAAS,YAC9Bn8B,KAAKnE,IAAIswB,YAAYgQ,EAAS,UAC9Bn8B,KAAKnE,IAAImwB,aAAamQ,GAEtBn8B,KAAKiuC,aAAavmC,OAAOwC,EAAO,KAKpC,YAAA+kC,eAAA,SAAe9S,GAGb,IAAe,IAFDn8B,KAAKiuC,aAAa1hC,QAAQ4vB,GAEtB,CAChB,IAEImS,EAAWvM,OAAOC,SAASsM,SAC3BC,EAAOxM,OAAOC,SAASuM,KAE3BvuC,KAAKnE,IAAI0wB,UAAU4P,EAAQ,CACzBpwB,KAAM,SACN0jC,MAAO,CAACnB,EAAW,KAAOC,EAAO57B,IAAM,8CAAgDo0B,mBAAmBv0B,KAAKC,UAAU,CAAEiD,IAAKymB,QAIlIn8B,KAAKnE,IAAI2wB,SAAS,CAChB,GAAM2P,EAAS,UACf,KAAQ,SACR,OAAUA,EACV,eAAgB,UAChB,MAAS,CACP,gBAAiB,GACjB,eAlgBa,UAmgBb,sBAAuB,EACvB,sBAAuB,WAEzBr9B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAvB7C,oBA4BlBkB,KAAKnE,IAAI2wB,SAAS,CAChB,GAAM2P,EAAS,WACf,KAAQ,OACR,OAAUA,EACV,eAAgB,UAChB,OAAU,GACV,MAAS,CACP,aAnhBa,UAohBb,eAAgB,GAChB,qBAAsB,SAExBr9B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,KAxClD,oBA8ClBkB,KAAKnE,IAAI2wB,SAAS,CAChB,GAAM2P,EAAS,SACf,OAAUA,EACV,eAAgB,UAChB,KAAQ,SACR,MAAS,CACP,aAAc,QACd,kBAAmB,OACnB,kBAAmB,GAErB,OAAU,CACR,aAAc,CAAC,OACb,CAAC,MAAO,gBAAkBuT,UAAUpvB,SAASlU,eAC7C,CAAC,WAAY,CAAC,SAAU,CAAC,MAAO,gBAAkBsjC,UAAUpvB,SAASlU,gBAAiB,CAAC,SAAU,CAAC,MAAO,kBACzG,CAAC,SAAU,CAAC,MAAO,kBAErB,YAAa,CAAC,mBACd,cAAe,CAAC,EAAG,IACnB,cAAe,MACf,YAAa,KAjEC,oBAsElBpM,KAAKiuC,aAAalqC,KAAKo4B,KAQ3B,YAAAuS,qBAAA,WAC6B,MAAvB1uC,KAAK6qB,iBACP7qB,KAAK6qB,eAAe8kB,YACpB3vC,KAAKnE,IAAI+zC,cAAc5vC,KAAK6qB,iBAG9B7qB,KAAK6qB,eAAiB,KACzB7qB,KAAKnE,IAAIsvB,WAAWnrB,KAAKurB,mBAEzBvrB,KAAKgd,oBAAqB,GAIzB,YAAA6yB,eAAA,SAAe/1B,GAEb9Z,KAAK0uC,uBAEL1uC,KAAK8Z,IAAMA,EAEX9Z,KAAK8vC,cAAch2B,IAGrB,YAAAg2B,cAAA,SAAch2B,GACD,MAAPA,GAGF9Z,KAAKsrB,cAAcxR,IAIvB,YAAAwR,cAAA,SAAcxR,GACmB,iBAA3B9Z,KAAK+L,KAAKkd,cAA8D,YAA3BjpB,KAAK+L,KAAKkd,aACzDjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACnCW,SAAU,CACRtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIU,UAA3B7rB,KAAK+L,KAAKkd,cAAuD,eAA3BjpB,KAAK+L,KAAKkd,aACvDjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACnCW,SAAU,CACRtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIU,SAA3B7rB,KAAK+L,KAAKkd,cAAsD,cAA3BjpB,KAAK+L,KAAKkd,eACtDjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACnCW,SAAU,CACRtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,MAI1B7rB,KAAKnE,IAAIsvB,WAAWnrB,KAAK6qB,gBAER,MAAb/Q,EAAIxF,OACNtU,KAAK6qB,eAAekB,IAAIjS,EAAIxF,QAIhC,YAAAy7B,UAAA,WACE,IAAMv3B,EAAWxY,KAAKgwC,kBAEtBhwC,KAAK6qB,eAAe8kB,YACpB3vC,KAAKnE,IAAI+zC,cAAc5vC,KAAK6qB,gBAG5B7qB,KAAK8Z,IAAIxF,MAAQkE,EACjBxY,KAAK8Z,IAAM,KAEX9Z,KAAK6qB,eAAiB,KAEzB7qB,KAAKgd,oBAAqB,GAGzB,YAAAgzB,gBAAA,WACE,GAA2B,MAAvBhwC,KAAK6qB,eAAwB,CAC/B,IAAIqC,EAAyBltB,KAAK6qB,eAAeC,SAEjD,GAAIoC,EAAkBnC,SAAS9pB,OAAS,EAAG,CAKzC,GAA+B,iBAA3BjB,KAAK+L,KAAKkd,aAAiC,CAG7C,IAFA,IAAIkE,EAAW,GAEN5pB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAG1D,GAA8B,kBAF1B6pB,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACnB,IAAK,IAAIsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACvD8E,EAASppB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAI7C8E,EAASppB,KAAKqpB,EAAQ5U,SAAS6U,aAInC,MAAO,CACLA,YAAaF,EACbphB,KAAM,gBAGL,GAA+B,eAA3B/L,KAAK+L,KAAKkd,aAA+B,CAChD,IAAIqE,EAAS,GAEb,IAAS/pB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAG1D,GAA8B,gBAF1B6pB,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACnB,IAASsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACvDiF,EAAOvpB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAI3CiF,EAAOvpB,KAAKqpB,EAAQ5U,SAAS6U,aAIjC,MAAO,CACLA,YAAaC,EACbvhB,KAAM,cAGL,GAA+B,cAA3B/L,KAAK+L,KAAKkd,aAA8B,CAC/C,IAAIsE,EAAQ,GAEZ,IAAShqB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAC1D,IAAI6pB,EAEJ,GAA8B,qBAF1BA,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACnB,IAASsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACvDkF,EAAMxpB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAI1CkF,EAAMxpB,KAAKqpB,EAAQ5U,SAAS6U,aAIhC,MAAO,CACLA,YAAaE,EACbxhB,KAAM,mBAIR,OAAOmhB,EAAkBnC,SAAS,GAAGvS,UAK3C,OAAO,MAGT,YAAAjO,MAAA,SAAMD,GACJtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCAluBlD5C,GAAwB,uJ,iCAAxBA,EAAwB,yD,OAAA,K,ynDC9BrC,4BACE,4BACA,6BAGA,4BAEE,4BACE,4BACE,0BACE,4BACE,4BAEE,4BACE,6BACE,6BACE,+BAAwC,gEAAqB,4BAAW,EAAA01B,sBAAxE,iBACF,iBACF,iBACF,iBAGA,6BACE,6BACE,6BACE,6BACE,+BAAwC,8CAAe,EAAArQ,WAAf,CAAwB,gDAAhE,iBACA,8BACE,iCAA8C,wCAAS,EAAAA,YACrD,0BAEF,iBACF,iBACF,iBACA,gCAIF,iBACF,iBACF,iBACF,iBACF,iBAEA,gCAmBF,iBACA,gCAiBF,iBAEA,8BACE,6BAEE,kCACE,sCAAa,+CAAe,EAAA2uB,qBAAA,MAA8B,iBAC5D,iBAEA,yBACA,iDAAgH,8CAAe,EAAAQ,eAAgC,iBAEjK,iBACF,iBACF,iBACF,iBACF,kB,MAjF4D,kDAAqB,mCAUM,8CAAkB,mCAEhB,+DAMhE,0EAUG,2DAoBf,0EA2BkB,8DAAkC,0CAAlC,CAAkC,a,qiDDlEjE,GAKa,EAAAx0C,4B,sHE9Bb,KACA,MADA,IAEA,Q,+DCcoC,0BACI,+BAAkD,mFAAlD,iBAA0H,YAI9H,kB,uBAJ2B,iDAAmG,6D,yBAJtI,6BACI,yBAAI,YAA8B,iBAClC,4BACI,8BAMJ,iBACJ,kB,uCATQ,mDAEK,wD,yBAJjB,0BACI,+BAWJ,kB,2CAXS,oEDNjC,iBAeI,WAAoB2S,GAAA,KAAAA,a,OAEpB,YAAAjO,SAAA,WACID,KAAKiX,SAAW,IAAI,EAAAtF,SAGxB,YAAAs+B,sBAAA,SAAsBnc,GACxB,IAAIoc,GAAa,EAOjB,OANAlwC,KAAKozB,mBAAmB/xB,SAAQ,SAAA2yB,GAC5BA,EAAYte,MAAQoe,GAASE,EAAYP,cAAcxyB,OAAS,IAClEivC,GAAa,MAIRA,GAGL,YAAAjP,QAAA,WACIjhC,KAAKiX,SAAS7J,KAAMpN,KAAKozB,oBACzBpzB,KAAKkO,WAAWiJ,Q,iCA7BX1b,GAA0B,oC,iCAA1BA,EAA0B,mqBCZvC,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,6BACI,+BACI,4BACI,4BACI,4BACI,8BAaJ,iBACJ,iBACJ,iBAEA,6BACI,6BACI,6BACI,gCAAsB,wCAAS,EAAAyS,WAAA,UAE3B,4BACI,8BACJ,iBACJ,iBACA,iCAAsB,wCAAS,EAAA+yB,aAC3B,4BACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,MApC6B,8D,g7CDL7B,GAKa,EAAAxlC,8B,kHEZb,WACA,OAOA,SAIA,GAFA,MAEA,QAEA,O,qECbE,6BACE,6BACF,kB,sBAiBsB,2BACE,6BACF,kB,mDAwBc,+BAAuF,6GAAgC,kFAAvH,iB,wDAA+D,kCAAuB,sB,sBACtF,2BAAiF,6BAAgF,kB,mDAG/J,2BAA+C,iKAAwE,SAAEoe,WAAS,6BAAmE,kB,mDACrM,2BAA+C,iKAAwE,SAAEA,WAAS,6BAAsE,kB,sBAIxM,2BACE,6BACF,kB,yBASN,2BACE,YACF,kB,uBADE,gD,yBALN,yBAII,6BAGJ,kB,uCAHO,0D,+HA1Cb,4BACE,4BACE,4BACE,4BACE,4BACE,gCAAgC,uHAC9B,6BACF,iBACF,iBACF,iBACA,4BACE,yBACE,yBACE,8BACF,iBAAM,gCAA0C,+FAAkC,wG,oBAA5E,iBACR,iBACA,0BACE,8BACI,0BACE,8BACF,iBAEA,kCACA,8BAEA,4BACE,8BACA,8BACF,iBAEA,8BACE,8BAGF,iBACF,iBACJ,iBACF,iBACA,+BAQF,iBACF,iBACA,6BAAgJ,6G,wBAC9I,uBACF,iBACF,iB,yDAnD+F,2DACzF,2FAa6B,mEAAoG,+EAA7E,oCAQrC,6DACJ,6DAGE,6DACA,6DAIA,+CAOT,+CAUoE,0G,mDA3D5F,6BAEM,4BACE,4BACE,+BAEE,+BACE,6BAIA,gCAoDF,iBACF,iBACF,iBAEA,4BACE,2BAAgC,kGAA6B,6BAC7D,iBACF,iBACF,iBACF,iB,gCAjE6B,8FAIf,uF,mDAsEhB,gCAAwC,2FACtC,6BACF,kB,mDACA,gCAAwC,2FACtC,6BACF,iB,iDAFmG,mCDhF/G,iBA6DC,WAAoB7E,EAAsC4S,GAAtC,KAAA5S,WAAsC,KAAA4S,oBAnC1D,KAAA3S,YAAqB,IAAIC,KAIzB,KAAApG,QAAkB,KAElB,KAAAqG,UAAoB,EAEpB,KAAA4S,aAAuB,EAKb,KAAAjR,SAAW,IAAI,EAAArZ,aAEf,KAAA8xB,OAAS,IAAI,EAAA9xB,aAYd,KAAA8c,gBAA0B,EAMnC,KAAAuN,kBAA4B,E,OAX5B,sBAAa,qCAAsB,C,IAAnC,SAAoCxT,GACnCtU,KAAKgoB,0BAA4BxV,KAAKyG,MAAMzG,KAAKC,UAAU6B,IAC3DtU,KAAKsa,kBAAoBhG,G,gCAa1B,YAAArU,SAAA,aAGA,YAAAkoB,aAAA,WACCnoB,KAAK+nB,aAAc,EAMnB,IAJA,IAAIK,EAAcpoB,KAAKsa,kBAAkB7J,WAAqB,SAAEoJ,OAIvDwO,EAAI,EAAGA,EAAID,EAAYnnB,OAAQonB,IAAK,CAC5C,IAAMC,EAAKF,EAAYC,GAIvB,GAHAC,EAAGC,UAAW,EACdD,EAAGE,gBAAkB,GAEC,MAAhBF,EAAG5O,WAAsC,KAAjB4O,EAAG5O,WAAqC,MAAd4O,EAAG3O,SAAkC,KAAf2O,EAAG3O,QAAiB,CACjG,IAAI8O,EAAU,IAAIvT,KAAKoT,EAAG5O,WACtBgP,EAAU,IAAIxT,KAAKoT,EAAG3O,SAEtB,UAAMgD,mBAAmB8L,EAAIC,KAChCJ,EAAGC,UAAW,EACdD,EAAGE,gBAAgBzkB,KAAK/D,KAAKgV,SAASlU,OAAO,oDAC7Cd,KAAK+nB,aAAc,GAGpB,IAAK,IAAIxkB,EAAI,EAAGA,EAAI6kB,EAAYnnB,OAAQsC,IAEvC,GAAI8kB,IAAM9kB,EAAG,CACZ,IAAMolB,EAAKP,EAAY7kB,GACvB,GAAsB,MAAhBolB,EAAGjP,WAAsC,KAAjBiP,EAAGjP,WAAqC,MAAdiP,EAAGhP,SAAkC,KAAfgP,EAAGhP,QAAiB,CACjG,IAAIiP,EAAU,IAAI1T,KAAKyT,EAAGjP,WACtBmP,EAAU,IAAI3T,KAAKyT,EAAGhP,SAGtB,UAAM2C,kBAAkBmM,EAAGhP,UAAWiP,EAAGjP,UAAWmP,EAAGnP,UAAWoP,EAAGpP,aACxE6O,EAAGC,UAAW,EACdD,EAAGE,gBAAgBzkB,KAAK/D,KAAKgV,SAASlU,OAAO,oCAE7Cd,KAAK+nB,aAAc,MASzB/nB,KAAKgM,KAAKoc,IAGX,YAAAhZ,KAAA,SAAK0K,EAAoBq2B,GACxBnwC,KAAKuvB,OAAOzW,KAAKgB,GAEjB9Z,KAAKmwC,sBAAwBA,GAG9B,YAAArnB,gBAAA,WACC,IAAIC,EAA0B/oB,KAAKsa,kBAAkB7J,WAAqB,SAAEoJ,OAExEC,EAAqB,IAAI,EAAAkP,cAC7BlP,EAAIJ,UAAY,KAChBI,EAAIH,QAAU,KAEdG,EAAIxF,MAAQ,CAAE,KAAQtU,KAAK6D,cAAcolB,aAAc,YAAe,IAE9B,iBAApCjpB,KAAK6D,cAAcolB,aACtBnP,EAAIxF,MAAMvI,KAAO,eAE2B,YAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,UAE2B,UAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,QAE2B,eAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,aAE2B,SAApC/L,KAAK6D,cAAcolB,aAC3BnP,EAAIxF,MAAMvI,KAAO,OAE2B,cAApC/L,KAAK6D,cAAcolB,eAC3BnP,EAAIxF,MAAMvI,KAAO,aAGlBgd,EAAOhlB,KAAK+V,GAEZ9Z,KAAK4nB,kBAAkBjU,iBAGxB,YAAAyV,eAAA,SAAepV,GACd,IAAIqV,EAA4B,GAOhC,OALArpB,KAAKsa,kBAAkB7J,WAAWuD,EAAU1X,MAAMud,OAAOxY,SAAQ,SAAA6mB,GAChEA,EAAW5T,MAAMD,aAAahT,SAAQ,SAAAioB,GACrCD,EAAStlB,KAAKulB,SAGTD,GAGR,YAAAE,oBAAA,SAAoBC,GACnB,IAAIC,EAAS,KASb,OAPAD,EAAOnV,aAAahT,SAAQ,SAAAqoB,GACL,kBAAlBA,EAAOF,SACVC,EAASC,EAAOpV,UAKXmV,GAGR,YAAAE,iBAAA,SAAiB7P,EAAoBwP,GACpCxP,EAAIxF,MAAQ,IAAIY,KAAKoU,GAAK7P,UAAU/E,YAGrC,YAAAtT,OAAA,SAAOwoB,GAKN,IAHA,IAAIN,EAAMtpB,KAAKsa,kBAAkB7J,WAAqB,SAElDE,GAAY,EACPpN,EAAI,EAAGA,EAAI+lB,EAAIzP,OAAO5Y,OAAQsC,IAAK,CAChC+lB,EAAIzP,OAAOtW,GAGbmW,YAAckQ,EAAQlQ,YAC9B/I,EAAWpN,GAIVoN,GAAY,GACd2Y,EAAIzP,OAAOnS,OAAOiJ,EAAU,IAK9B,YAAAoJ,WAAA,SAAWG,GACV,IACM2U,EADWC,EAAOC,WAAW7U,GACT8U,eAAe,KACvC,OAAOF,IAASD,OAAOA,IAG1B,YAAAhF,YAAA,SAAY3B,EAAYzX,GAEpByX,EAAWvO,UAAY,EAAAmQ,QACzB5B,EAAWvO,QAAU,IAAIzE,KAGzBgT,EAAWvO,QAAU,EAAAmQ,QAGtB9pB,KAAKmoB,gBAIN,YAAAnc,KAAA,SAAK+c,GAGJA,EAAO/c,MAAK,SAASC,EAAGC,GAEvB,OAAmB,MAAfD,EAAEyN,WAAqC,KAAhBzN,EAAEyN,UACrB,EAEgB,MAAfxN,EAAEwN,WAAqC,KAAhBxN,EAAEwN,WACzB,EAGQ,IAAIxE,KAAKjJ,EAAEyN,WACZ,IAAIxE,KAAKhJ,EAAEwN,eAK7B,YAAAzC,SAAA,WACCjX,KAAK8W,SAASgC,KAAK9Y,KAAKsa,oBAGzB,YAAAlD,SAAA,WACCpX,KAAK8W,SAASgC,KAAK9Y,KAAKgoB,4B,iCA1NbpsB,GAAsB,sF,iCAAtBA,EAAsB,0E,6kFCzCnC,0BACE,8BAKA,+BAEE,+BACE,4BAGE,4BACE,+BAyEF,iBAEF,iBAEA,4BAEE,4BACE,6BACE,kCAGA,mCAGF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,MAzGO,uDAY0C,wDAiF7B,gDAGA,kD,8XD3EP,CACX,CACC,EAAAgZ,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAlS,MAAM,CACLiZ,QAAS,IAEV,EAAA1H,QAAQ,YAET,EAAAW,WAAW,SACV,EAAAX,QAAQ,QACP,EAAAvR,MAAM,CACLiZ,QAAS,a,EAjBhB,GAwBa,EAAAhgB,0B,2HEzCb,KACA,MAEA,MAHA,IAIA,SACA,SAKA,GAFA,OACA,MACA,QACA,Q,GAEA,M,mJCAc,yBAAiB,YAA6B,kB,8BAA7B,iE,mDALzB,6BACE,4BACE,6BAEE,6BACE,8BACA,yBAAI,6BAAuD,YAAyB,iBACtF,iBAEA,uCAOE,0GAAuC,8FAAvC,CAAuC,yFAGxC,iBACH,iBACF,iBACF,iB,gCAjBY,2CACuD,qEAI3D,2CAAa,cAAb,CAAa,oBAAb,CAAa,wBAAb,CAAa,sBAAb,CAAa,oC,qBAsBb,sB,mDACA,6BAEE,8BAAM,kGACJ,gCACE,6BACF,iBACF,iBACF,kB,mDAVF,6BAAqE,kGAA+B,IAA/B,CAAoC,qFAAgC,KAEvI,6BACA,+BASF,iB,gCAV+B,sDACxB,sD,iFDrBnB,aA4EC,WAAoBmuB,EAA+BjV,EAAkC3W,EAAsCwmC,EAC1HpmC,EAAkCyW,GADf,KAAA+U,aAA+B,KAAAjV,UAAkC,KAAA3W,eAAsC,KAAAwmC,QACxF,KAAA3vB,WAvEnC,KAAAyf,KAAO,CACNC,SAAU,WACVC,WAAY,aACZC,UAAW,aAGZ,KAAA5X,oBAA8B,EAE9B,KAAAozB,gBAA0B,EAM1B,KAAAjhC,UAAoB,EAEpB,KAAAkhC,UAAoB,EAEpB,KAAAlb,QAAkB,EAelB,KAAA8Y,aAAyB,GAKzB,KAAAjb,WAAoB,CACnB,CACCxL,KAAM,YACN5f,MAAO,YACP5L,GAAI,eACJi3B,OAAQ,uCACRC,IAAK,4BACLC,UAAU,IAYZ,KAAA+B,KAAe,KAIf,KAAAtd,QAAgB,IAAI1C,KAKpB,KAAA+S,eAA+B,IAAI,EAAAtW,QAMjC3R,KAAK2wB,aAAepyB,EAAYmyB,WAAanyB,EAAYoyB,e,OAG3D,YAAA1wB,SAAA,sBAECD,KAAK21B,UAAY31B,KAAK2kC,MAAMS,SAAS/yB,OAAkB,UACvDrS,KAAKyV,SAAWzV,KAAK2kC,MAAMS,SAAS/yB,OAAiB,SACrDrS,KAAKka,KAAOla,KAAK2kC,MAAMS,SAAS/yB,OAAa,KAC7CrS,KAAKmP,SAAsD,SAA3CnP,KAAK2kC,MAAMS,SAAS/yB,OAAiB,SACrDrS,KAAKqwC,SAAsD,SAA3CrwC,KAAK2kC,MAAMS,SAAS/yB,OAAiB,SAEX,MAAtCrS,KAAK2kC,MAAMS,SAAS/yB,OAAa,OACpCrS,KAAK1D,KAAO0D,KAAK2kC,MAAMS,SAAS/yB,OAAa,MAG9CrS,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMjZ,KAAKka,OAExCla,KAAK8U,QAAQ+L,kBAAkB,CAAC7gB,KAAKyV,UAAW,MAAMxL,MAAK,SAAAuB,GAC1D,EAAKO,KAAOP,EAAM,MAChBnB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAuJ,YAAA,WACC7T,KAAKnE,IAAIuF,UAGV,YAAAsJ,gBAAA,sBAEO0pB,EAAQp0B,KAAKgzB,WAAW,GAE9BhzB,KAAKnE,IAAM,IAAI,EAAAwuB,IAAI,CAClBC,UAAW,cACX3nB,MAAO,CACN,QAAW,EACX,KAAQyxB,EAAM5M,KACd,SAAY,CACX,wBAAwB,GAEzB,QAAW,CACV,mBAAoB,CACnB,KAAQ,SACR,IAAO4M,EAAMlB,IACb,SAAY,MAGd,OAAUkB,EAAMnB,OAChB,OAAU8O,OAAOC,SAASsM,SAAW,KAAOvM,OAAOC,SAASuM,KAAO57B,IAAM,kCACzE,OAAU,IAQX4X,KAAM,EACNikB,oBAAoB,EACpBhkB,OAAQ,EAAE,UAAW,aAGtBxqB,KAAKnE,IAAIwM,GAAG,QAAQ,WACnB,EAAKoiB,aAGNzqB,KAAKnE,IAAIsvB,WAAWnrB,KAAKurB,oBAG1B,YAAAojB,aAAA,SAAar6B,GACZtU,KAAKm1B,OAAS7gB,GAGf,YAAAmW,QAAA,sBACoB,YAAdzqB,KAAK1D,MAER0D,KAAK8U,QAAQsN,yBAAyBpiB,KAAK1D,KAAM0D,KAAKyV,SAAUzV,KAAKka,MAAMjQ,MAAK,SAAA6iB,GAC/E,IAAIwjB,EAAM,IAAI,EAAAvjB,aAAa,CAACD,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,KAElEG,EAAU,GACVqiB,EAAU,GAGiB,UAA3B,EAAKvjC,KAAKkd,cAAuD,eAA3B,EAAKld,KAAKkd,eACnDgE,EAAU,IACVqiB,EAAU,IAGX,EAAKzzC,IAAImxB,UAAUsjB,EAAK,CAAErjB,QAASA,EAAS/Y,SAAS,EAAOo7B,QAASA,OAKxEtvC,KAAKnE,IAAIwM,GAAG,cAAc,WACzB,EAAKuiB,eAGN5qB,KAAK4qB,YAGL5qB,KAAKnE,IAAIsvB,WAAW,IAAI,EAAAC,kBAAkB,CAAE,gBAAkB,KAC9DprB,KAAKnE,IAAIsvB,WAAW,IAAI,EAAAyjB,mBAAmB,CAAEC,SAAS,IAAS,gBAE/D7uC,KAAKnE,IAAIwM,GAAG,QAASrI,KAAK21B,UAAY,WAAW,SAAC7wB,GACjD,EAAKgqC,oBAAoBhqC,MAG1B9E,KAAKnE,IAAIwM,GAAG,QAASrI,KAAK21B,UAAY,YAAY,SAAC7wB,GAClD,EAAKgqC,oBAAoBhqC,MAI1B9E,KAAKnE,IAAIwM,GAAG,wBAAwB,SAACjM,GACjCA,EAAE2uB,SAAS9pB,OAAS,GAAK7E,EAAEkxB,OAAOrsB,OAAS,EAC7C,EAAK+b,oBAAqB,EAG1B,EAAKA,oBAAqB,KAI5Bhd,KAAKivC,eAAejvC,KAAK21B,YAG1B,YAAA/K,UAAA,sBAEC5qB,KAAKnE,IAAI2wB,SAAS,CACjB,KAAQ,SACR,GAAM,gBACN,OAAU,qBAGXxsB,KAAKiuC,aAAa5sC,SAAQ,SAAAkvC,GACzB,EAAKtB,eAAesB,OAItB,YAAArB,mBAAA,SAAmB9a,GAEF,gBAAbA,EAAMp4B,GACRgE,KAAKnE,IAAIuzC,SAAShb,EAAMlB,KAEJ,iBAAbkB,EAAMp4B,IACbgE,KAAKnE,IAAIuzC,SAAS,CACjB,QAAW,EACX,KAAQhb,EAAM5M,KACd,SAAY,CACX,wBAAwB,GAEzB,QAAW,CACV,mBAAoB,CACnB,KAAQ,SACR,IAAO4M,EAAMlB,IACb,SAAY,MAGd,OAAUkB,EAAMnB,OAChB,OAAU8O,OAAOC,SAASsM,SAAW,KAAOvM,OAAOC,SAASuM,KAAO57B,IAAM,kCACzE,OAAU,CACT,CACC,GAAMyhB,EAAMp4B,GACZ,KAAQ,SACR,OAAU,wBAOf,YAAAuzC,qBAAA,SAAqBnb,GAEhBA,EAAMT,OACT3zB,KAAKivC,eAAe7a,EAAM1e,KAG1B1V,KAAKwvC,kBAAkBpb,EAAM1e,MAK/B,YAAA85B,kBAAA,SAAkBrT,GAEjB,IAAMjyB,EAAQlK,KAAKiuC,aAAa1hC,QAAQ4vB,IAEzB,IAAXjyB,IACHlK,KAAKnE,IAAIswB,YAAYgQ,EAAS,WAC9Bn8B,KAAKnE,IAAIswB,YAAYgQ,EAAS,YAC9Bn8B,KAAKnE,IAAIswB,YAAYgQ,EAAS,oBAC9Bn8B,KAAKnE,IAAIswB,YAAYgQ,EAAS,qBAC9Bn8B,KAAKnE,IAAIswB,YAAYgQ,EAAS,UAC9Bn8B,KAAKnE,IAAImwB,aAAamQ,GAEtBn8B,KAAKiuC,aAAavmC,OAAOwC,EAAO,KAKlC,YAAA+kC,eAAA,SAAe9S,GAGd,IAAe,IAFDn8B,KAAKiuC,aAAa1hC,QAAQ4vB,GAEtB,CACjB,IAAMqU,EAAarU,IAAWn8B,KAAK21B,UAAa31B,KAAK21B,UAAY,UAAY,KAEzE2Y,EAAWvM,OAAOC,SAASsM,SAC3BC,EAAOxM,OAAOC,SAASuM,KAE3BvuC,KAAKnE,IAAI0wB,UAAU4P,EAAQ,CAC1BpwB,KAAM,SACN0jC,MAAO,CAACnB,EAAW,KAAOC,EAAO57B,IAAM,8CAAgDo0B,mBAAmBv0B,KAAKC,UAAU,CAAEiD,IAAKymB,QAIjIn8B,KAAKnE,IAAI2wB,SAAS,CACjB,GAAM2P,EAAS,UACf,KAAQ,SACR,OAAUA,EACV,eAAgB,UAChB,MAAS,CACR,gBAAiB,GACjB,eA7SiB,UA8SjB,sBAAuB,EACvB,sBAAuB,WAExBr9B,OAAQ,CAAC,MACR,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAE1D0xC,GAGHxwC,KAAKnE,IAAI2wB,SAAS,CACjB,GAAM2P,EAAS,WACf,KAAQ,OACR,OAAUA,EACV,eAAgB,UAChB,OAAU,GACV,MAAS,CACR,aA9TiB,UA+TjB,eAAgB,GAChB,qBAAsB,SAEvBr9B,OAAQ,CAAC,MACR,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,KAE/D0xC,GAGCrU,IAAWn8B,KAAK21B,YACnB31B,KAAKnE,IAAI2wB,SAAS,CACjB,GAAM2P,EAAS,mBACf,KAAQ,SACR,OAAUA,EACV,eAAgB,UAChB,MAAS,CACR,gBAAiB,GACjB,eA/UiB,UAgVjB,sBAAuB,EACvB,sBAAuB,WAExBr9B,OAAQ,CAAC,MACR,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAbkB,KAAK1D,KAAe0D,KAAK1D,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAE1Dk0C,GAEHxwC,KAAKnE,IAAI2wB,SAAS,CACjB,GAAM2P,EAAS,oBACf,KAAQ,OACR,OAAUA,EACV,eAAgB,UAChB,OAAU,GACV,MAAS,CACR,aAhWiB,UAiWjB,eAAgB,GAChB,qBAAsB,SAEvBr9B,OAAQ,CAAC,MACR,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAbkB,KAAK1D,KAAe0D,KAAK1D,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,KAE/Dk0C,IAIJxwC,KAAKnE,IAAI2wB,SAAS,CACjB,GAAM2P,EAAS,SACf,OAAUA,EACV,eAAgB,UAChB,KAAQ,SACR,MAAS,CACR,aAAc,QACd,kBAAmB,OACnB,kBAAmB,GAEpB,OAAU,CACT,aAAc,CAAC,OACd,CAAC,MAAO,gBAAkBuT,UAAUpvB,SAASlU,eAC7C,CAAC,WAAY,CAAC,SAAU,CAAC,MAAO,gBAAkBsjC,UAAUpvB,SAASlU,gBAAiB,CAAC,SAAU,CAAC,MAAO,kBACzG,CAAC,SAAU,CAAC,MAAO,kBAEpB,YAAa,CAAC,mBACd,cAAe,CAAC,EAAG,IACnB,cAAe,MACf,YAAa,KAEZokC,GAGHxwC,KAAKiuC,aAAalqC,KAAKo4B,KASzB,YAAAuS,qBAAA,WAC4B,MAAvB1uC,KAAK6qB,iBACR7qB,KAAK6qB,eAAe8kB,YACpB3vC,KAAKnE,IAAI+zC,cAAc5vC,KAAK6qB,iBAG7B7qB,KAAK6qB,eAAiB,KAEtB7qB,KAAKgd,oBAAqB,GAG3B,YAAAyzB,gBAAA,WAECzwC,KAAKwvC,kBAAkBxvC,KAAK21B,WAC5B31B,KAAKivC,eAAejvC,KAAK21B,YAG1B,YAAAmZ,oBAAA,SAAoBhqC,GACnB,IAAK9E,KAAKm1B,QAA4B,MAAlBrwB,EAAMimB,UAAoBjmB,EAAMimB,SAAS9pB,OAAS,EAAG,CACxE,IAAMmsB,EAAUtoB,EAAMimB,SAAS,GAEA,MAA3BqC,EAAQe,WAAW7xB,MAAgB0D,KAAK1D,OAAS8wB,EAAQe,WAAW7xB,OACvE0D,KAAK1D,KAAO8wB,EAAQe,WAAW7xB,KAG/B0D,KAAKnE,IAAI60C,UAAU1wC,KAAK21B,UAAY,mBAAoB,CAAC,MACxD,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAb31B,KAAK1D,KAAe0D,KAAK1D,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAG5D0D,KAAKnE,IAAI60C,UAAU1wC,KAAK21B,UAAY,oBAAqB,CAAC,MACzD,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAb31B,KAAK1D,KAAe0D,KAAK1D,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,QAMpE,YAAAyzC,UAAA,WACC,IAAMv3B,EAAWxY,KAAKgwC,kBAEtBhwC,KAAK6qB,eAAe8kB,YACpB3vC,KAAKnE,IAAI+zC,cAAc5vC,KAAK6qB,gBAC5B7qB,KAAKioB,eAAe7a,KAAKoL,GAEzBxY,KAAK8Z,IAAIxF,MAAQkE,EAGjBxY,KAAK6qB,eAAiB,KAEtB7qB,KAAKgd,oBAAqB,GAG3B,YAAA6yB,eAAA,SAAe/1B,GACd9Z,KAAK0uC,uBAEL1uC,KAAK8Z,IAAMA,EAEX9Z,KAAK8vC,cAAch2B,IAUpB,YAAAg2B,cAAA,SAAch2B,GACF,MAAPA,GACH9Z,KAAKsrB,cAAcxR,IAIrB,YAAAwR,cAAA,SAAcxR,GACkB,iBAA3B9Z,KAAK+L,KAAKkd,cAA8D,YAA3BjpB,KAAK+L,KAAKkd,aAC1DjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACTtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIa,UAA3B7rB,KAAK+L,KAAKkd,cAAuD,eAA3BjpB,KAAK+L,KAAKkd,aACxDjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACTtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIa,SAA3B7rB,KAAK+L,KAAKkd,cAAsD,cAA3BjpB,KAAK+L,KAAKkd,eACvDjpB,KAAK6qB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACTtF,OAAO,EACPuF,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,MAIvB7rB,KAAKnE,IAAIsvB,WAAWnrB,KAAK6qB,gBAER,MAAb/Q,EAAIxF,OACPtU,KAAK6qB,eAAekB,IAAIjS,EAAIxF,QAK9B,YAAA07B,gBAAA,WACC,GAA2B,MAAvBhwC,KAAK6qB,eAAwB,CAChC,IAAIqC,EAAyBltB,KAAK6qB,eAAeC,SAEjD,GAAIoC,EAAkBnC,SAAS9pB,OAAS,EAAG,CAK1C,GAA+B,iBAA3BjB,KAAK+L,KAAKkd,aAAiC,CAG9C,IAFA,IAAIkE,EAAW,GAEN5pB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAG3D,GAA8B,kBAF1B6pB,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACpB,IAAK,IAAIsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACxD8E,EAASppB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAI5C8E,EAASppB,KAAKqpB,EAAQ5U,SAAS6U,aAIjC,MAAO,CACNA,YAAaF,EACbphB,KAAM,gBAGH,GAA+B,eAA3B/L,KAAK+L,KAAKkd,aAA+B,CACjD,IAAIqE,EAAS,GAEb,IAAS/pB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAG3D,GAA8B,gBAF1B6pB,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACpB,IAASsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACxDiF,EAAOvpB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAI1CiF,EAAOvpB,KAAKqpB,EAAQ5U,SAAS6U,aAI/B,MAAO,CACNA,YAAaC,EACbvhB,KAAM,cAGH,GAA+B,cAA3B/L,KAAK+L,KAAKkd,aAA8B,CAChD,IAAIsE,EAAQ,GAEZ,IAAShqB,EAAI,EAAGA,EAAI2pB,EAAkBnC,SAAS9pB,OAAQsC,IAAK,CAC3D,IAAI6pB,EAEJ,GAA8B,qBAF1BA,EAAUF,EAAkBnC,SAASxnB,IAE7BiV,SAASzM,KACpB,IAASsc,EAAI,EAAGA,EAAI+E,EAAQ5U,SAAS6U,YAAYpsB,OAAQonB,IACxDkF,EAAMxpB,KAAKqpB,EAAQ5U,SAAS6U,YAAYhF,SAIzCkF,EAAMxpB,KAAKqpB,EAAQ5U,SAAS6U,aAI9B,MAAO,CACNA,YAAaE,EACbxhB,KAAM,mBAIP,OAAOmhB,EAAkBnC,SAAS,GAAGvS,UAKxC,OAAO,MAGR,YAAAquB,eAAA,WACC7mC,KAAK1D,KAAO,WAGb,YAAAyd,WAAA,SAAWG,GACV,OAAOla,KAAKgV,SAASmF,qBAAqBD,IAIpC,YAAA3P,MAAP,SAAaD,GACZtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCAxlBhD3C,GAA+B,qO,iCAA/BA,EAA+B,iE,OAAA,K,u2CCzB5C,4BACE,4BACA,6BAGA,4BAEE,4BACE,8BAwBA,4BACE,4BAEE,gCACE,oCAAa,+CAAe,EAAA+zC,qBAAA,KAAf,CAA4C,sCAAoB,EAAAL,mBAAA,MAAmD,iBAEhI,+BAaF,iBAEA,wBACA,gDAAgH,8CAAe,EAAAa,eAAiC,iBAQlK,iBACF,iBACF,iBACF,iBACF,kB,MA1DW,+DAwBA,wFAI0G,0EAEpG,gDAgBc,8DAAkC,0CAAlC,CAAkC,a,2uCDlCjE,GAKa,EAAAv0C,mC,4GEzBb,aAMA,SACA,SACA,SAKA,SAGA,aAeC,WAAYoH,EAAwC+tC,EAAoC9sC,EAA8Bw2B,EAC9Gh8B,EAA6CF,EAAqCI,GAAlF,KAAAF,kBAA6C,KAAAF,eAAqC,KAAAI,cACzFyB,KAAK4C,mBAAqBA,EAC1B5C,KAAK2wC,iBAAmBA,EACxB3wC,KAAK6D,cAAgBA,EACrB7D,KAAKq6B,SAAWA,EAyiBlB,OAtiBC,YAAAD,QAAA,WACC,OAAOp6B,KAAK6D,cAAcvH,MAG3B,YAAA+M,OAAA,SAAOhH,EAAWC,EAAWsuC,GAC5B,IAAIzqB,EAAOnmB,KAAK6wC,UAGhB3vC,EAAGC,OAAO,oEAAsEnB,KAAKo6B,UAAY,MAC/Fr0B,QAAQ,WAAY6qC,GACpB/uC,KAAK,IAAKQ,GACVR,KAAK,IAAKS,GAEZpB,EAAGC,OAAO,sEAAwEnB,KAAKo6B,UAAY,MACjGr0B,QAAQ,WAAY6qC,GACpB/uC,KAAK,IAAKQ,GACVR,KAAK,IAAKS,EAAI,EAAAP,iBAAiB6D,SAAW,EAAI,GAEhD1E,EAAGC,OAAO,qEAAuEnB,KAAKo6B,UAAY,MAChGr0B,QAAQ,WAAY6qC,GACpB/uC,KAAK,IAAKQ,EAAI,GACdR,KAAK,IAAKS,EAAI,GAEhBpB,EAAGC,OAAO,8EAAgFnB,KAAKo6B,UAAY,MACzGr0B,QAAQ,WAAY6qC,GACpB/uC,KAAK,IAAKQ,EAAI8jB,EAAK5jB,MAAQ,IAC3BV,KAAK,IAAKS,EAAI,IAKhB,IAAIwuC,EAAmB5vC,EAAGC,OAAO,2EAA6EnB,KAAKo6B,UAAY,MAAMz6B,OACrI,GAAmB,MAAfmxC,EAAqB,CACxB,IAAMC,EAAU1uC,EAAI8jB,EAAK5jB,MAAQ,GAC3ByuC,EAAU1uC,EAAI6jB,EAAK3jB,OAAS,GAC9ByuC,EAAcH,EAAY1uC,UAC9BlB,EAAGC,OAAO,2EAA6EnB,KAAKo6B,UAAY,MACtGr0B,QAAQ,WAAY6qC,GACpB/uC,KAAK,YAAa,cAAgBkvC,EAASE,EAAY5uC,GAAK,KAAO2uC,EAASC,EAAY3uC,GAAK,KAGhG,IAAI4uC,EAAqBhwC,EAAGC,OAAO,6EAA+EnB,KAAKo6B,UAAY,MAAMz6B,OACzI,GAAqB,MAAjBuxC,EAAuB,CACpBH,EAAU1uC,EAAI8jB,EAAK5jB,MAAQ,GAC3ByuC,EAAU1uC,EAAI6jB,EAAK3jB,OAAS,GADlC,IAEI2uC,EAAgBD,EAAc9uC,UAClClB,EAAGC,OAAO,6EAA+EnB,KAAKo6B,UAAY,MACxGr0B,QAAQ,WAAY6qC,GACpB/uC,KAAK,YAAa,cAAgBkvC,EAASI,EAAc9uC,GAAK,KAAO2uC,EAASG,EAAc7uC,GAAK,OAIrG,YAAA8G,OAAA,WACC,IAAIjI,EAASD,EAAGC,OAAO,oEAAsEnB,KAAKo6B,UAAY,MAE9G,MAAO,CAAE/3B,EAAG+D,SAASjF,EAAOU,KAAK,MAAOS,EAAG8D,SAASjF,EAAOU,KAAK,QAGjE,YAAAgvC,QAAA,WACC,IAAI1vC,EAASD,EAAGC,OAAO,oEAAsEnB,KAAKo6B,UAAY,MAE9G,MAAO,CAAE/3B,EAAG+D,SAASjF,EAAOU,KAAK,MAAOS,EAAG8D,SAASjF,EAAOU,KAAK,MAAQ,EAAGU,MAAO6D,SAASjF,EAAOU,KAAK,UAAWW,OAAQ4D,SAASjF,EAAOU,KAAK,WAAa,IAG7J,YAAAuvC,YAAA,WACC,OAAOpxC,KAAKq6B,UAGb,YAAAgX,qBAAA,WACE,IAAIC,EAAoBpwC,EAAGC,OAAO,sCACjC,GAAgC,MAA5BmwC,EAAkB3xC,OAKpB,OAJA2xC,EAAkBlwC,SAClBpB,KAAK4C,mBAAmBX,sBAEIqvC,EAAkBzvC,KAAK,cAKxD,YAAAk7B,6BAAA,sBACK54B,EAAOnE,KACPuxC,EAAerwC,EAAGC,OAAO,mBAE7B,GAA2B,MAAvBowC,EAAa5xC,OAAgB,CAEhC,IAEI6xC,EAFStwC,EAAGC,OAAO,QAEOS,OAAO,KAAKmE,QAAQ,kBAAkB,GAEhEoE,EAAqBnK,KAAK2wC,iBAAiBtV,sBAAsBr7B,KAAKo6B,WAEpEqX,EAAwBzxC,KAAKzB,YAAYa,SAAWY,KAAKzB,YAAYsE,iBAAiB7C,KAAK6D,cAAcf,mBACrG9C,KAAKzB,YAAYwE,kBAAkB/C,KAAK2wC,iBAAiB3tC,cAAcF,iBAAkB9C,KAAK6D,cAAcvH,MAElH6pB,EAAOnmB,KAAK6wC,UACZxuC,EAAI8jB,EAAK9jB,EAAI8jB,EAAK5jB,MAAQ,EAC1BD,EAAI6jB,EAAK7jB,EAAI6jB,EAAK3jB,OAAS,EAAI,EAS7BkvC,EAAa1xC,KAAK4C,mBAAmB/B,SAAS,wCAC9C8wC,EAAe3xC,KAAK4C,mBAAmB/B,SAAS,kCAChD+wC,EAA2B5xC,KAAK4C,mBAAmB/B,SAAS,yCAC5DgxC,EAAqB7xC,KAAK4C,mBAAmB/B,SAAS,0CACtDixC,EAA4B9xC,KAAK4C,mBAAmB/B,SAAS,0CAC7DkxC,EAAiB/xC,KAAK4C,mBAAmB/B,SAAS,+BAClDmxC,EAAehyC,KAAK4C,mBAAmB/B,SAAS,6BAE/CoxC,EAA0F,MAA1D/wC,EAAGC,OAAO,sCAAsCxB,OAEhFuyC,EAAaT,EAAyBQ,EAA+B,EAAI,EAAK,EAGjF,EAAQ,EAAAjrC,mBAAmB0qC,EAfT,GAkBlBS,EAAc,EAAAnrC,mBAAmB4qC,EAvBpB,GA0BjB,GAFA,EAAQO,EAAc,EAAQA,EAAc,EAExCF,EACJ,CAEK,IAAIG,EAAmB,EAAAprC,mBAAmB8qC,EA7B9B,GA8BZ,EAAQM,EAAmB,EAAQA,EAAmB,EAGxD,GAA4B,MAAxBpyC,KAAKq6B,SAAS30B,QAAsE,MAApD1F,KAAKq6B,SAAS30B,OAAO9B,KAAKE,wBAAsF,IAApD9D,KAAKq6B,SAAS30B,OAAO9B,KAAKE,uBAA8B,CACtJ,IAAIuuC,EAAiB,EAAArrC,mBAAmB+qC,EAlC5B,GAmCZ,EAAQM,EAAiB,EAAQA,EAAiB,EAClDH,QAGF,CAEE,GAAgC,OAD5BZ,EAAoBpwC,EAAGC,OAAO,uCACZxB,OAAgB,CACpC,IAAI2yC,EAAwBhB,EAAkBzvC,KAAK,aAC/C0wC,EAAqBvyC,KAAK4C,mBAAmB4G,oBAAoB8oC,GAGjEE,EAAmG,MAD3E,IAAI,EAAAzwC,iBAAiB/B,KAAK4C,mBAAoB1B,EAAGC,OAAO,QAASoxC,GAAoB,EAAMvyC,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aACpH0E,cAAcjD,KAAKo6B,WAAWgX,cAAc1rC,OAE7F,GAA4B,MAAxB1F,KAAKq6B,SAAS30B,QAAkB8sC,EACpC,CACE,IAAIC,EAAe,EAAAzrC,mBAAmBgrC,EAlD9B,GAmDR,EAAQS,EAAe,EAAQA,EAAe,EAC9CP,MAST,GAAI/nC,EAAmBlJ,OAAS,EAE9BkJ,EAAmB9I,SAAQ,SAACqxC,GAC3B,IAAIC,EAAmB,EAAK/vC,mBAAmB4G,oBAAoBkpC,GAE/DE,EAAwBD,EAAiB/qC,MAAMuE,eACvB,MAAxB,EAAKkuB,SAAS30B,QAAkB,EAAK20B,SAAS30B,OAAO9B,KAAKE,yBAA2B6uC,EAAiBr2C,OACzGs2C,EAAwBA,EAAwB,KAAO,EAAKhwC,mBAAmB/B,SAAS,+BAAiC,KAG1H,IAAIo6B,EAAY,EAAAj0B,mBAAmB4rC,EAvErB,GAyEV3X,EAAY,IACf,EAAQA,UAKZ,CACE,IAAI4X,EAAmB,EAAA7rC,mBAAmB6qC,EAhF3B,GAiFf,EAAQgB,EAAmB,EAAQA,EAAmB,EAGxD,GAnFqB,GAqFrB,IAoKWvB,EApKPwB,EAA0B3oC,EAAmBlJ,OAAS,EAAKixC,EAAa,EAAMA,EAAa,EAqC/F,GAlCAV,EAAiB5vC,OAAO,QACtBmE,QAAQ,uCAAuC,GAC/ClE,KAAK,IAAKQ,GACVR,KAAK,IAAKS,GACVT,KAAK,KAAM,GACXA,KAAK,QAAS,GACdA,KAAK,SAhGQ,IAgGYsI,EAAmBlJ,OAAS6xC,IACrDjxC,KAAK,OAAQ,SACbA,KAAK,eAAgB,IACrBA,KAAK,SAhGa,WAmGpB2vC,EAAiB5vC,OAAO,QACtBmE,QAAQ,kCAAkC,GAC1ClE,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,KAC7BT,KAAK,YApGe,GAqGpBA,KAAK,cAtGY,cAuGjBA,KAAK,cAAe,QACpBoF,KAAKyqC,GAEPpvC,GA/Ge,GAkHfkvC,EAAiB5vC,OAAO,QACtBmE,QAAQ,oCAAoC,GAC5ClE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SArHa,WAsHlBA,KAAK,eAAgB,IAGnBsI,EAAmBlJ,OAAS,EAE/B,I,eAASsC,GACR,IAAImvC,EAAuBvoC,EAAmB5G,GAC1CovC,EAAmB,EAAK/vC,mBAAmB4G,oBAAoBkpC,GAE/DE,EAAwBD,EAAiB/qC,MAAMuE,eACvB,MAAxB,EAAKkuB,SAAS30B,QAAkB,EAAK20B,SAAS30B,OAAO9B,KAAKE,yBAA2B6uC,EAAiBr2C,OACzGs2C,EAAwBA,EAAwB,KAAO,EAAKhwC,mBAAmB/B,SAAS,+BAAiC,KAI1H2wC,EAAiB5vC,OAAO,QACtBmE,QAAQ,iCAAiC,GACzClE,KAAK,gBAAiB6wC,GACtB7wC,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YA5IQ,GA6IbA,KAAK,cAzIU,cA0IfoF,KAAK2rC,GACLjwC,MAAM,SAAU,WAChB0F,GAAG,SAAS,SAASvD,EAAOnF,GAAQwE,EAAK6uC,yBAAyBL,MAEpErwC,GAnJa,GAsJTiB,EAAI4G,EAAmBlJ,QAC1BuwC,EAAiB5vC,OAAO,QACtBmE,QAAQ,oCAAoC,GAC5ClE,KAAK,gBAAiB6wC,GACtB7wC,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,EAAQ,GACvBR,KAAK,KAAMS,GACXT,KAAK,SA1JW,WA2JhBA,KAAK,eAAgB,K,OAjChB0B,EAAI,EAAGA,EAAI4G,EAAmBlJ,SAAUsC,E,EAAxCA,QAuCTiuC,EAAiB5vC,OAAO,QACtBmE,QAAQ,iCAAiC,GACzClE,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAxKS,GAyKdA,KAAK,cArKW,cAsKhBoF,KAAK4qC,GAEPvvC,GA7Kc,GAgLdkvC,EAAiB5vC,OAAO,QACtBmE,QAAQ,oCAAoC,GAC5ClE,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,EAAQ,GACvBR,KAAK,KAAMS,GACXT,KAAK,SAlLa,WAmLlBA,KAAK,eAAgB,IAKrB,GAAI4vC,EAuCJ,GApCDD,EAAiB5vC,OAAO,QACtBmE,QAAQ,kCAAkC,GAC1ClE,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,KAC7BT,KAAK,YA7La,GA8LlBA,KAAK,cA/LU,cAgMfA,KAAK,cAAe,QACpBoF,KAAK0qC,GAEPrvC,GAxMa,GA2MbkvC,EAAiB5vC,OAAO,QACtBmE,QAAQ,oCAAoC,GAC5ClE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SA9MW,WA+MhBA,KAAK,eAAgB,IAGpB2vC,EAAiB5vC,OAAO,QACvBmE,QAAQ,iCAAiC,GACzClE,KAAK,cAAe,qBACpBA,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAzNM,GA0NXA,KAAK,cAtNQ,cAuNboF,KAAK2qC,GACLjvC,MAAM,SAAU,WAChB0F,GAAG,SAAS,SAAUvD,EAAOnF,GAAQwE,EAAK8uC,4BAE3C3wC,GAhOU,GAmOgB,MAAxBtC,KAAKq6B,SAAS30B,QAAsE,MAApD1F,KAAKq6B,SAAS30B,OAAO9B,KAAKE,wBAAsF,IAApD9D,KAAKq6B,SAAS30B,OAAO9B,KAAKE,uBACtH0tC,EAAiB5vC,OAAO,QACrBmE,QAAQ,oCAAoC,GAC5ClE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SAvOK,WAwOVA,KAAK,eAAgB,IAExB2vC,EAAiB5vC,OAAO,QACrBmE,QAAQ,iCAAiC,GACzClE,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAhPE,GAiPPA,KAAK,cA7OI,cA8OToF,KAAK8qC,GACLpvC,MAAM,SAAU,WAChB0F,GAAG,SAAS,SAAUvD,EAAOnF,GAAQwE,EAAK+uC,+BAE7C5wC,GAvPQ,QA4PR,GAAgC,OAD5BgvC,EAAoBpwC,EAAGC,OAAO,uCACZxB,OAAgB,CAChC2yC,EAAwBhB,EAAkBzvC,KAAK,aAAnD,IACI,EAAqB7B,KAAK4C,mBAAmB4G,oBAAoB8oC,GAGjEE,EAAmG,MAD3E,IAAI,EAAAzwC,iBAAiB/B,KAAK4C,mBAAoB1B,EAAGC,OAAO,QAAS,GAAoB,EAAMnB,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aACpH0E,cAAcjD,KAAKo6B,WAAWgX,cAAc1rC,OAEjE,MAAxB1F,KAAKq6B,SAAS30B,QAAkB8sC,IAElChB,EAAiB5vC,OAAO,QACrBmE,QAAQ,oCAAoC,GAC5ClE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SAxQC,WAyQNA,KAAK,eAAgB,IAExB2vC,EAAiB5vC,OAAO,QACrBmE,QAAQ,iCAAiC,GACzClE,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAjRF,GAkRHA,KAAK,cA9QA,cA+QLoF,KAAK+qC,GACLrvC,MAAM,SAAU,WAChB0F,GAAG,SAAS,SAAUvD,EAAOnF,GAAQwE,EAAKgvC,wBAAwB,MAErE7wC,GAxRI,IA8RR2vC,IACJT,EAAiB5vC,OAAO,QACnBmE,QAAQ,oCAAoC,GAC5ClE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SAlSO,WAmSZA,KAAK,eAAgB,IAE1B2vC,EAAiB5vC,OAAO,QACnBmE,QAAQ,iCAAiC,GACzClE,KAAK,IAAKQ,EAAI0wC,GACdlxC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YA3SI,GA4STA,KAAK,cAxSM,cAySXoF,KAAK6qC,GACLnvC,MAAM,SAAU,WAChB0F,GAAG,SAAS,SAAUvD,EAAOnF,GAC5BwE,EAAKktC,uBAEL,IAAIE,EAAerwC,EAAGC,OAAO,mBACF,MAAvBowC,EAAa5xC,QACf4xC,EAAanwC,SAGfF,EAAGC,OAAO,8BAA8BC,aAIjDpB,KAAK4C,mBAAmBX,2BAGxBsvC,EAAanwC,UAIf,YAAA6xC,uBAAA,sBAEK9pC,EAASnJ,KAAK4C,mBAAmBd,oBAAoBmB,cAAcjD,KAAK6D,cAAcvH,MAStFsS,GAPkBzF,EAAOC,SAOnBpJ,KAAK4C,mBAAmBsD,wBAAwBiD,EAAOixB,YAEjEp6B,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtB,IAAIS,EAAU9O,KAAK3B,gBAAgByC,OAAO,yCAC1CgO,EAAUA,EAAQwqB,QAAQ,UAAW1qB,EAAIhH,MAAMuE,gBAE/CnM,KAAKkO,WAAWI,QAAQQ,QAAUA,EAClC9O,KAAKkO,WAAWI,QAAQ1K,KAAOgL,EAAItS,KAEX0D,KAAKkO,WAAWI,QAASU,UAAUpO,WAAU,SAAAgD,GACpE,IAAIy2B,EAAWlxB,EAAOioC,cAClB1rC,EAAS,KAEZA,EADsB,MAAnB20B,EAAS30B,QAIuC,MAA/C20B,EAAS30B,OAAO9B,KAAKE,uBAHhB,OAOCu2B,EAAS30B,OAAO9B,KAAKC,cAIhC,EAAKjB,mBAAmBgO,oBAAoBlL,EAAQyD,EAAOixB,WAAW,SAAC9vB,GAAeiK,QAAQC,IAAIlK,UAQpG,YAAA0oC,yBAAA,SAAyBL,GACxBzxC,EAAGC,OAAO,mBAAmBC,SAC7BF,EAAGC,OAAO,8BAA8BC,SAExC,IACIgyC,EAASpzC,KAAK6wC,UACdlvC,EAAMT,EAAGC,OAAO,QAGpB,GAAInB,KAAKqxC,yBAA2BsB,EAAiBr2C,KAArD,CAMA,IAAI+2C,EAAmBnyC,EAAGC,OAAO,mCAAmCxB,OAAeyC,UAGrD,IAAI,EAAAL,iBAAiB/B,KAAK4C,mBAAoBjB,EAAKgxC,GAAkB,EAAO3yC,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aAClJyD,SACN,IAAIsxC,EAAapyC,EAAGC,OAAO,sCAIvBglB,EADkBjlB,EAAGC,OAAO,sCAAsCxB,OAChDyC,UAClBmxC,EAAsBF,EAAgB9wC,MAAQ,IAAM8wC,EAAgBhxC,EAAI8jB,EAAK9jB,GACjFixC,EAAWzxC,KAAK,YAAa,aAAe0xC,EAAc,OAG1D,IAAIC,EAAetyC,EAAGC,OAAO,qEAAuEnB,KAAKo6B,UAAY,MACjHqZ,EAAmB,CAAEpxC,EAAG+D,SAASotC,EAAa3xC,KAAK,MAAOS,EAAG8D,SAASotC,EAAa3xC,KAAK,MAAQ,EAAGU,MAAO6D,SAASotC,EAAa3xC,KAAK,UAAWW,OAAQ4D,SAASotC,EAAa3xC,KAAK,WAAa,GACpM4xC,EAAiBpxC,EAAIoxC,EAAiBpxC,EAAIkxC,EAC1CryC,EAAGC,OAAO,8BAA8BC,SACxC,IAAIsyC,EAAaxyC,EAAGC,OAAO,QAAQS,OAAO,KAAKmE,QAAQ,6BAA6B,GACpF2tC,EAAW9xC,OAAO,QAChBmE,QAAQ,2BAA2B,GACnClE,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,mBAAoB,OACzBA,KAAK,eAAgB,KACrBA,KACE,IACA,KAAOuxC,EAAO/wC,EAAI+wC,EAAO7wC,OAAS,KAAO6wC,EAAO9wC,EAAI8wC,EAAO5wC,OAAS,GACpE,MAASixC,EAAkB,GAAKL,EAAO/wC,EAAI+wC,EAAO7wC,QAAU,EAAI6wC,EAAO/wC,EAAI+wC,EAAO7wC,OAClF,KAAOkxC,EAAiBnxC,EAAImxC,EAAiBjxC,OAAS,GACtD,IAAMixC,EAAiBpxC,GAI3B,IAAMs6B,EAAuB,GAAvBA,EAAkC,EACpCC,EAAS8W,EAAW9xC,OAAO,KAAKmE,QAAQ,mCAAmC,GAC/E62B,EAAOh7B,OAAO,QACZmE,QAAQ,sCAAsC,GAC9ClE,KAAK,IAAKuxC,EAAO/wC,EAAI+wC,EAAO7wC,MAAQo6B,EAAmB,GACvD96B,KAAK,IAAKuxC,EAAO9wC,EAAI8wC,EAAO5wC,OAAS,EAAIm6B,EAAoB,GAC7D96B,KAAK,QAAS86B,GACd96B,KAAK,SAAU86B,GACf96B,KAAK,OAAQ,EAAA7D,2BACf4+B,EAAOh7B,OAAO,QACZmE,QAAQ,sCAAsC,GAC9ClE,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,IACL,KAAOuxC,EAAO/wC,EAAI+wC,EAAO7wC,MAAQo6B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOyW,EAAO9wC,EAAI8wC,EAAO5wC,OAAS,EAAIm6B,EAAoB,EAA0B,EAApBA,EAAyB,GAC/K,KAAOyW,EAAO/wC,EAAI+wC,EAAO7wC,MAAQo6B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOyW,EAAO9wC,EAAI8wC,EAAO5wC,OAAS,GAC1H,KAAO4wC,EAAO/wC,EAAI+wC,EAAO7wC,MAAQo6B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOyW,EAAO9wC,EAAI8wC,EAAO5wC,OAAS,EAAIm6B,EAAoB,EAAIA,EAAoB,IAI9K38B,KAAK4C,mBAAmBX,wBAGzB,YAAAkxC,wBAAA,SAAwB1vC,GACvBzD,KAAK4C,mBAAmBsO,uBAAuBlR,KAAK2wC,iBAAiBvW,UAAW32B,EAAUnH,KAAM0D,KAAKo6B,YAGtG,YAAA8Y,0BAAA,WACClzC,KAAK4C,mBAAmB0O,yBAAyBtR,KAAK2wC,iBAAiBvW,UAAWp6B,KAAKo6B,YAGzF,EA7jBA,GAAa,EAAAE,oB,6HChBb,KACA,MADA,IAEA,QAGA,S,GAGA,O,uECJI,6BAAqE,YAAW,kB,8BAAX,+C,yBAgB/D,gCACE,YACF,kB,uBAFqD,wCACnD,qE,mDANJ,gCAAkC,4GAChC,gCAA6D,kBAAG,6BACgB,kBAAE,iBAElF,wBACA,kCAGF,iB,iCAP0B,kEAIhB,4D,mDAlBhB,4BAEE,8BAEA,4BACE,yBACE,4BACF,iBACF,iBACA,+BAEE,4BAEE,iCAUF,iBAEA,4BACE,+BAAsB,6EAASpsB,WAAA,UAC7B,4BACE,8BACF,iBACF,iBACA,iCAAsB,iGACpB,4BACE,8BACF,iBACF,iBACF,iBACF,iBACF,iB,gCApCO,oDAWO,yDDJhB,iBA+BI,WAAqBhQ,EAA2CgQ,GAA3C,KAAAhQ,mBAA2C,KAAAgQ,aAT3D,KAAAylC,QAAkB,EAEvB,KAAA7kC,QAAkB,K,OAUlB,YAAA7O,SAAA,WACID,KAAK4zC,aAAe,IAAI,EAAAjiC,SAG5B,YAAA0wB,SAAA,SAAS/tB,GAAT,WACCtU,KAAK6zC,kBAAkBxyC,SAAQ,SAAAyyC,GAC3BA,EAAKx3C,OAASgY,IAChB,EAAKy/B,sBAAwBD,OAKhC,YAAAhgC,eAAA,sBACI9T,KAAK8O,QAAU,KAEf,IAAIpJ,EAAU1F,KAAW,OAAI,OAASA,KAAK0F,OAAO9B,KAAKC,cACvD7D,KAAK9B,iBAAiB8L,oBAAqBhK,KAAKgD,cAAc1G,KAAMoJ,EAAQ1F,KAAK+zC,sBAAsBz3C,MAAO2N,MAAM,SAAArG,GAChH,EAAKgwC,aAAaxmC,KAAMxJ,GACxB,EAAKsK,WAAWiJ,UAChB9M,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAAC,MAAA,SAAOD,GACCtK,KAAK8O,QAAU,EAAA0C,aAAa6F,oBAAoB/M,I,iCAvD/C3S,GAAiC,4E,iCAAjCA,EAAiC,iyBChB9C,6BAEE,+BAuCF,kB,MAvCO,qD,2LDSP,GAKa,EAAAA,qC,gIEhBb,KAEA,MACA,MAOA,OAEA,MAZA,IAcA,S,2ICGQ,yD,6BAGE,sCAAuB,gCAAvB,CAAuB,gCAAvB,CAAuB,8BAAvB,CAAuB,oBAAvB,CAAuB,yB,mDAiBvB,gCAAwC,4FACtC,6BACF,kB,mDACA,gCAAuC,0FACrC,6BACF,kB,mDACA,gCAAuC,8FACrC,6BACF,kBDxBV,iBAyCI,WAAqBqlC,EAAwBxN,EAAoDrxB,EACzFG,EAA0CC,GAD7B,KAAAy+B,SAAwB,KAAAxN,uBAAoD,KAAArxB,eACzF,KAAAG,kBAA0C,KAAAC,cAhCrD,KAAAoyB,cAAwB,EAIrB,KAAApZ,aAAkC,KAElC,KAAAC,cAAmC,KAEnC,KAAA3T,cAA+B,KAI/B,KAAAmwC,WAAqB,EAWrB,KAAAvjB,QAAkB,KAKlB,KAAA7Y,QAAgB,KAMlB5X,KAAK2wB,aAAepyB,EAAYmyB,WAAanyB,EAAYoyB,eAEnD3wB,KAAK4X,QAAU,IAAI1C,KAEnB,IAAM+G,EAAMjc,KAAK4X,QAAQsE,aACzBlc,KAAKywB,QAAUzwB,KAAK4X,QAAQyE,iBAAmB,KAAQrc,KAAK4X,QAAQwE,cAAgB,GAAM,KAAQH,EAAM,GAAK,IAAM,IAAOA,E,OAG9H,YAAAhc,SAAA,WAEID,KAAKwX,cAAgBxX,KAAKwd,OAAOy2B,cACjCj0C,KAAK6D,cAAgB7D,KAAKwd,OAAO3Z,cAE5B7D,KAAKoV,UACNpV,KAAKuX,aAAevX,KAAKwX,eAG7BxX,KAAKqiC,SAAUriC,KAAKwd,SAGxB,YAAApI,MAAA,WACI,MAAoC,iEAA3BpV,KAAKwd,OAAOmmB,YAGzB,YAAA1S,iBAAA,WACIjxB,KAAK4X,QAAU,IAAI1C,KAAMA,KAAK+D,MAAOjZ,KAAKywB,WAG9C,YAAAlT,YAAA,sBAEQC,EAASxd,KAAKwd,OAElBA,EAAOy2B,cAAgBj0C,KAAK+vB,gBAAgBpU,eAEhB,MAAvB3b,KAAKoZ,iBACNoE,EAAOy2B,cAAcz7B,SAAWxY,KAAKoZ,eAAe4R,WAAWxS,UAGnExY,KAAKwvB,qBAAqBjS,YAAaC,GAASvT,MAAM,SAAAmB,GAClD,EAAK84B,aACL75B,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAA+3B,SAAA,SAAU7kB,GAAV,WAoBmC,iEAA3Bxd,KAAKwd,OAAOmmB,YAGZ3jC,KAAK1B,gBAAgBslB,qBAAsB5jB,KAAKwX,cAAc/G,WAAWnU,KAAM0D,KAAK6D,cAAcvH,MAAO2N,MAAM,SAAAya,GAC3G,EAAKnN,aAAemN,KAEpBra,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAyBxB,YAAA4pC,UAAA,WACIl0C,KAAK0d,cAGF,YAAAwmB,QAAP,WACIlkC,KAAK4d,gBAGT,YAAAF,WAAA,sBACI1d,KAAKwvB,qBAAqB9R,WAAY1d,KAAKwd,OAAO9H,KAAMzL,MAAM,SAAAmB,GAC1D,EAAK4oC,WAAY,EACW,MAAvB,EAAK56B,gBACN,EAAKA,eAAekS,eAAe,MAEvCjhB,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAsT,aAAA,sBACI5d,KAAKwvB,qBAAqB5R,aAAc5d,KAAKwd,OAAO9H,KAAMzL,MAAM,SAAAmB,GAC5D,EAAK4oC,WAAY,EACW,MAAvB,EAAK56B,gBACN,EAAKA,eAAekS,eAAe,MAEvCjhB,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAA6pC,iBAAA,WACIC,EAAEC,KAAM,CACJnhB,IAAKvgB,IAAM,8BACX2hC,OAAQ,OACR1wC,KAAM,CAAE+Z,SAAU3d,KAAKwd,OAAO9H,KAC9B6+B,QAAS,SAAUtoC,KAGnBuoC,OAAO,KAIlB,YAAAzR,YAAA,WACC,OAAO/iC,KAAKzB,YAAYwkC,eAGf,YAAAx4B,MAAP,SAAcD,GACNtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCArL1D5G,GAAoC,4L,iCAApCA,EAAoC,yE,OAAA,M,yzCC7BjD,4BAEI,4BACI,2BAAiC,YAAsB,iBAC5D,iBAEC,4BACE,yBACE,4BAA4C,YAC9C,iBAEA,4BACE,6BAAiC,6BAAkD,iBACnF,+BAAmB,gEAAqB,4BAAW,EAAA05B,sBAAnD,iBACF,iBAGE,6DAYA,2BACI,gCACI,8BAA0E,mBAC9E,iBACA,mCAAoF,gFAA8D,iBACtJ,iBAEA,8BACE,mCAGA,mCAGA,mCAGF,iBACJ,iBACJ,kB,MA7CyC,yDAKW,0EAKzB,iDAMjB,mDAcsF,iEAAqC,yBAInH,8DAGA,6DAGA,+D,8jBDtBlB,GAQa,EAAA15B,wC,yHE7Bb,KAGA,MACA,MAIA,OACA,OACA,MAVA,IAYA,S,kHCiCU,gCAAwC,4FACtC,6BACF,kB,mDACA,gCAAuC,0FACrC,6BACF,kB,mDACA,gCAAuC,8FACrC,6BACF,kB,0FDnCV,aAkBI,WAAqBylC,EAAwBxN,EAAoDrxB,EAAsCI,GAAlH,KAAAy+B,SAAwB,KAAAxN,uBAAoD,KAAArxB,eAAsC,KAAAI,cAJvI,KAAAy1C,WAAqB,E,OAQrB,YAAA/zC,SAAA,WACID,KAAKy0C,SAAWj4C,OAAOw8B,OAAQ,GAAIh5B,KAAKwd,SAG5C,YAAAD,YAAA,sBACIvd,KAAKwvB,qBAAqBjS,YAAavd,KAAKwd,QAASvT,MAAM,SAAAmB,GACvD,EAAKqpC,SAAWj4C,OAAOw8B,OAAQ,GAAI,EAAKxb,QAExC,EAAKI,kBACLvT,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAMpB,YAAAoqC,cADA,WAEI,OAAK10C,KAAKg0C,WAWd,YAAAW,gBAAA,SAAiBC,GACRA,GAAkB50C,KAAKg0C,WACxBh0C,KAAKm0C,oBAIb,YAAAD,UAAA,WACIl0C,KAAK0d,cAGF,YAAAwmB,QAAP,WACIlkC,KAAK4d,gBAGT,YAAAF,WAAA,sBACI1d,KAAKwvB,qBAAqB9R,WAAY1d,KAAKwd,OAAO9H,KAAMzL,MAAM,SAAAmB,GAC1D,EAAK4oC,WAAY,KACjB3pC,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAsT,aAAA,sBACI5d,KAAKwvB,qBAAqB5R,aAAc5d,KAAKwd,OAAO9H,KAAMzL,MAAM,SAAAmB,GAC5D,EAAK4oC,WAAY,EAEjB,EAAKx2B,OAAS,EAAKi3B,YACnBpqC,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAA6pC,iBAAA,WACIC,EAAEC,KAAM,CACJnhB,IAAKvgB,IAAM,8BACX2hC,OAAQ,OACR1wC,KAAM,CAAE+Z,SAAU3d,KAAKwd,OAAO9H,KAC9B6+B,QAAS,SAAUtoC,KAGnBuoC,OAAO,KAIf,YAAAnS,SAAA,SAAU7kB,GACNxd,KAAKwd,OAASA,GAGrB,YAAAulB,YAAA,WACC,OAAO/iC,KAAKzB,YAAYwkC,eAGf,YAAAx4B,MAAP,SAAcD,GACNtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCAlG1D3G,GAA6B,qJ,iCAA7BA,EAA6B,gF,+CAA7B,qBAAe,sB,qwCCxB5B,4BACI,4BACE,2BAAiC,YAAsB,iBACzD,iBAEA,4BAEI,8BAA4B,4BAAwD,kBAAE,iBACtF,8BAAwC,uEAAxC,iBAEA,8BAA4B,6BAA0D,mBAAE,iBACxF,+BAAwC,6EAAxC,iBAEA,+BAA4B,6BAAyD,mBAAE,iBACvF,+BAAwC,wEAAxC,iBAEA,+BAA4B,6BAA0D,mBAAE,iBACxF,+BAAwC,8EAAxC,iBAEA,+BAA4B,6BAA8D,mBAAE,iBAC5F,+BAAwC,iFAAxC,iBAEA,+BACI,8BAAkD,mBACtD,iBACA,iCAAkN,8EAC9M,iCACI,8BACJ,iBACA,iCACI,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBAEA,2BACI,+BACI,8BAA0E,mBAC9E,iBACA,mCAAoF,gFAAgD,iBACxI,iBAEA,8BACE,mCAGA,mCAGA,mCAGF,iBAEJ,iBACJ,kB,MAvDuC,yDAMS,wDAA4B,wBAG5B,8DAAkC,wBAGlC,yDAA6B,wBAG7B,+DAAmC,wBAGnC,kEAAsC,wBAKlD,6KAAqL,kCAArL,CAAqL,wBAgBzH,kEAI9E,8DAGA,6DAGA,+D,yMDjClB,GAMa,EAAAA,iC,2lBEtBb,mBAAa,EAAAq9C,gBAcb,mBAAa,EAAAC,WAKb,mBAAa,EAAAC,iBAWb,+B,+CAEA,OAF2C,OAE3C,EAFA,CAA2CA,GAA9B,EAAAC,wBAIb,+B,+CAEA,OAF2C,OAE3C,EAFA,CAA2CD,GAA9B,EAAAE,wBAIb,+B,+CASA,OAToC,OASpC,EATA,CAAoCF,GAAvB,EAAAG,iBAWb,+B,+CAMA,OANuC,OAMvC,EANA,CAAuCH,GAA1B,EAAAI,oBAQb,mBAAa,EAAAC,mBAKb,mBAAa,EAAAC,YAKb,+B,+CAIA,OAJqC,OAIrC,EAJA,CAAqCN,GAAxB,EAAAO,mB,oHCrEb,KAEA,MACA,MAOA,OAEA,MAZA,IAcA,SAGA,S,2HCXQ,2CAA0H,+GAA8C,iB,8CAA/G,6BAAgB,cAAhB,CAAgB,0B,mDAUvE,gCAAwC,4FACtC,6BACF,kB,mDACA,gCAAuC,0FACrC,6BACF,kB,mDACA,gCAAuC,8FACrC,6BACF,kBDFV,iBA8BC,WAAoBtY,EAAwBxN,EAAoDrxB,EAAsCI,GAAlH,KAAAy+B,SAAwB,KAAAxN,uBAAoD,KAAArxB,eAAsC,KAAAI,cAlBtI,KAAAiF,YAAmC,GAInC,KAAAwwC,WAAqB,EAOrB,KAAAvjB,QAAkB,KAKlB,KAAA7Y,QAAgB,KAGf5X,KAAK4X,QAAU,IAAI1C,KAEnB,IAAM+G,EAAMjc,KAAK4X,QAAQsE,aACnBC,EAAQnc,KAAK4X,QAAQwE,cAC3Bpc,KAAKywB,QAAUzwB,KAAK4X,QAAQyE,iBAAmB,KAAOF,EAAQ,GAAK,IAAM,KAAOA,EAAQ,GAAK,KAAOF,EAAM,GAAK,IAAM,IAAMA,E,OAG5H,YAAAhc,SAAA,WAECD,KAAKwD,YAAcxD,KAAKwd,OAAOoB,KAE/B5e,KAAKqiC,SAASriC,KAAKwd,SAGpB,YAAAD,YAAA,sBACKC,EAAShL,KAAKyG,MAAMzG,KAAKC,UAAUzS,KAAKwd,SAE5Cxd,KAAKwvB,qBAAqBjS,YAAYC,GAAQvT,MAAK,SAAAmB,GAClD,EAAK84B,aACH75B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA2mB,iBAAA,WACCjxB,KAAK4X,QAAU,IAAI1C,KAAKA,KAAK+D,MAAMjZ,KAAKywB,WAGzC,YAAA4R,SAAA,SAAS7kB,KAIT,YAAAinB,iBAAA,SAAiBhhC,GAAjB,WAECzD,KAAKkO,WAAalO,KAAK7B,aAAagP,KAAK,EAAArT,mCAAoC,CAC5EqU,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBrO,KAAKkO,WAAWI,QAAQnD,KAAK1H,GAC7BzD,KAAKkO,WAAWI,QAAQkf,gBAAgB5sB,WAAU,SAAA6C,GACjD,IAAMyG,EAAQ,EAAK1G,YAAYiJ,WAAU,SAAAC,GAAK,OAAAA,EAAEpQ,OAASmH,EAAUnH,SAErD,IAAX4N,IACF,EAAK1G,YAAY0G,GAASzG,OA2B7B,YAAAywC,UAAA,WACCl0C,KAAK0d,cAGC,YAAAwmB,QAAP,WACClkC,KAAK4d,gBAGN,YAAAF,WAAA,sBACC1d,KAAKwvB,qBAAqB9R,WAAW1d,KAAKwd,OAAO9H,KAAKzL,MAAK,SAAAmB,GAC1D,EAAK4oC,WAAY,KACf3pC,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAsT,aAAA,sBACC5d,KAAKwvB,qBAAqB5R,aAAa5d,KAAKwd,OAAO9H,KAAKzL,MAAK,SAAAmB,GAC5D,EAAK4oC,WAAY,KACf3pC,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAA6pC,iBAAA,WACCC,EAAEC,KAAK,CACNnhB,IAAKvgB,IAAM,8BACX2hC,OAAQ,OACR1wC,KAAM,CAAE+Z,SAAU3d,KAAKwd,OAAO9H,KAC9B6+B,QAAS,SAAStoC,KAGlBuoC,OAAO,KAIT,YAAAzR,YAAA,WACC,OAAO/iC,KAAKzB,YAAYwkC,eAGf,YAAAx4B,MAAP,SAAcD,GACNtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCAxI1D1G,GAAwB,qJ,iCAAxBA,EAAwB,g6BC9BrC,4BACI,4BACE,2BAAiC,YAAsB,iBACzD,iBAEA,4BACI,4CAEA,0BACI,8BACI,4BAA0E,kBAC9E,iBACA,kCAAoF,gFAA0E,iBAClK,iBAEA,6BACE,kCAGA,mCAGA,kCAGF,iBACJ,iBACJ,kB,MAzBuC,yDAIZ,qDAMqE,iEAAqC,qCAInH,8DAGA,6DAGA,+D,2IDAlB,GAQa,EAAAA,4B,+GE9Bb,KACA,MADA,IAKA,S,GAEA,OACA,M,uFCkBgC,gCAAuD,YAAc,kB,uBAAlC,6BAAoB,6C,yBAWvD,gCAAuE,YAAmB,kB,uBAA5C,6BAAyB,6C,mDAPnF,4BACI,+BACI,6BACJ,iBACA,4BACI,gCAA6C,sGACzC,wBACA,iCACJ,iBACJ,iBACJ,iB,iCALqD,mDAEjC,sD,mDApBxB,kCACI,4BACI,8BACI,4BACJ,iBACA,4BACI,+BAAkD,gGAAkB,8FAEhE,wBACA,iCACJ,iBACJ,iBACJ,iBACA,8BAWA,6BACI,+BACI,8BACJ,iBACA,6BACI,iCAAsD,kGAClD,yBACA,iCACI,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACA,6BACI,8BACI,iCAAwE,2FACpE,8BACJ,iBACJ,iBACJ,iBACJ,iB,mDAzC8D,8CAGtC,+CAIQ,2DAgBkC,gDAaR,mDD/C1E,iBAwCI,WAAqBqd,EAA4B3W,EAAsCI,GAAlE,KAAAuW,UAA4B,KAAA3W,eAAsC,KAAAI,cAxBvF,KAAAjC,KAAe,KAKf,KAAAkH,YAAiD,GAKjD,KAAAC,UAAoB,KAKpB,KAAAorB,OAAiB,K,OAWjB,YAAA5uB,SAAA,sBACID,KAAK8U,QAAQS,oBAAoB,GAAOtL,MAAM,SAAAuB,GAK1C,IADA,IAAIgK,EAAa,GACRjS,EAAI,EAAGA,EAAIiI,EAAMvK,SAAUsC,EAE9B,EAAKhF,YAAYsE,iBAAiB2I,EAAMjI,GAAGqH,UAE7C4K,EAAWzR,KAAKyH,EAAMjI,IAG1B,EAAKiI,MAAQgK,KAEbnL,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAwM,SAAA,SAAUxa,GAAV,WAEiB,MAARA,GAAgBA,EAAK2E,OAAS,EAC/BjB,KAAK8U,QAAQiC,sBAAuBza,GAAM,GAAQ2N,MAAM,SAAAzG,GACpD,EAAKA,YAAcA,EACnB,EAAKC,UAAY,QACjB4G,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIhBtK,KAAKwD,YAAc,GACnBxD,KAAKyD,UAAY,OAKzB,YAAAqjC,SAAA,WAEwB,aAAf9mC,KAAK6uB,OACNkT,OAAOC,SAASC,KAAOtvB,IAAM,oCAAsC3S,KAAK1D,KAAO,kBAAoB0D,KAAKyD,UAEnF,SAAfzD,KAAK6uB,SACXkT,OAAOC,SAASC,KAAOtvB,IAAM,kCAAoC3S,KAAK1D,KAAO,kBAAoB0D,KAAKyD,YAIvG,YAAA8G,MAAP,SAAcD,GACNtK,KAAKkO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKtK,KAAK7B,e,iCApF1DjE,GAAmB,4G,iCAAnBA,EAAmB,82BChB5B,6BAeY,iC,MAAqB,8C,8RDLrC,GAMa,EAAAA,uB,6GElBb,S,OAIA,2B,OAKE,YAAAmqC,UAAA,SAAUC,EAAwBxlC,GACjC,IAAKwlC,IAAUxlC,EACR,OAAOwlC,EAGd,IAAIiR,EAAiC,GAKlC,OAJAv1C,KAAKw1C,2BAA2B12C,EAAQy2C,GAIjCjR,EAAMxlC,QAAO,SAAA0O,GAAQ,OAA8C,IAA9C+nC,EAAsBhpC,QAAQiB,EAAKlR,UAGnE,YAAAk5C,2BAAA,SAA2B12C,EAAyBy2C,GAApD,WACCz2C,EAAOuC,SAAQ,SAAAglC,GACd,EAAKt5B,sBAAsBs5B,EAAGkP,OAIhC,YAAAxoC,sBAAA,SAAsBpN,EAAqB41C,GAA3C,WACCA,EAAsBxxC,KAAKpE,EAAKkE,eAEhClE,EAAK+G,SAASrF,SAAQ,SAAA8B,GACrB,EAAK4J,sBAAsB5J,EAAOoyC,O,iCAxBzBh9C,I,kDAAAA,EAAiB,U,EAJ9B,GAIa,EAAAA,qB,+GCRb,S,OAEA,2B,OAKI,YAAA8rC,UAAA,SAAUnqB,GACN,OAAKA,EAIE,IAAIhF,KAAKgF,GAAMT,UAHXS,G,iCAHNlkB,I,oDAAAA,EAAmB,U,EAJhC,GAIa,EAAAA,uB,iHCNb,SACA,OACA,QAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,S,eAEMy/C,EAAiB,CACnB,CACIC,KAAM,GACNC,UAAW,EAAAt+C,mBACXu+C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,cACNC,UAAW,EAAAt+C,mBACXu+C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,OACNC,UAAW,EAAAj8C,kBACXk8C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,kBACNC,UAAW,EAAAh8C,2BACXi8C,YAAa,CAAC,EAAAG,mBAElB,CACIL,KAAM,eACNC,UAAW,EAAAx7C,2BACXy7C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,iBACNC,UAAW,EAAAj7C,uBACXk7C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,WACNC,UAAW,EAAAh7C,aACXi7C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,8BACNC,UAAW,EAAAv7C,oBACXw7C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,wBACNC,UAAW,EAAAn7C,wBACXo7C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,iBACNC,UAAW,EAAAt8C,6BACXu8C,YAAa,CAAC,EAAAG,mBAElB,CACIL,KAAM,QACNC,UAAW,EAAAz6C,oBACX06C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,0BACNC,UAAW,EAAAx6C,sCACXy6C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,8BACNC,UAAW,EAAAt6C,+BACXu6C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,mBACNC,UAAW,EAAAp6C,yBACXq6C,YAAa,CAAC,EAAAC,YAErB,CACOH,KAAM,oDACNC,UAAW,EAAAp6C,yBACXq6C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,gEACNC,UAAW,EAAAn6C,gCACXo6C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,sEACNC,UAAW,EAAAn6C,gCACXo6C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,gFACNC,UAAW,EAAAn6C,gCACXo6C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,oBACNC,UAAW,EAAAr6C,qBACXs6C,YAAa,CAAC,EAAAE,mBAItB,2B,uCAOa5+C,I,6DAAAA,IAAqB,UAJnB,CACP,CAAE0hC,QAAS,EAAAod,iBAAkBC,SAAU,EAAAC,uBAC1C,SAJQ,CAAC,EAAA9/C,aAAa+/C,SAAUV,IACvB,EAAAr/C,gB,EAFd,GAOa,EAAAc,yB,gEAAAA,EAAqB,mCALpB,EAAAd","file":"1.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from 'angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { DatePipe } from '@angular/common';\n\nimport { LocalizedInputComponent } from './component/form-fields/localized-input/localized-input.component';\nimport { LocalizedTextComponent } from './component/form-fields/localized-text/localized-text.component';\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { CreateHierarchyTypeModalComponent } from './component/hierarchy/modals/create-hierarchy-type-modal.component';\nimport { AddChildToHierarchyModalComponent } from './component/hierarchy/modals/add-child-to-hierarchy-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './component/hierarchy/modals/create-geoobjtype-modal.component';\nimport { ManageAttributesModalComponent } from './component/hierarchy/geoobjecttype-management/manage-attributes-modal.component';\nimport { DefineAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component';\nimport { EditAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component';\nimport { ShapefileModalComponent } from './component/importer/modals/shapefile-modal.component';\nimport { AttributesPageComponent } from './component/importer/modals/attributes-page.component';\nimport { LocationPageComponent } from './component/importer/modals/location-page.component';\nimport { LocationProblemPageComponent } from './component/importer/modals/location-problem-page.component';\nimport { LocationProblemComponent } from './component/importer/modals/location-problem.component';\nimport { TermProblemPageComponent } from './component/importer/modals/term-problem-page.component';\nimport { TermProblemComponent } from './component/importer/modals/term-problem.component';\nimport { SpreadsheetModalComponent } from './component/importer/modals/spreadsheet-modal.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { TermOptionWidgetComponent } from './component/hierarchy/geoobjecttype-management/term-option-widget.component';\nimport { AttributeInputComponent } from './component/hierarchy/geoobjecttype-management/attribute-input.component';\nimport { EditTermOptionInputComponent } from './component/hierarchy/geoobjecttype-management/edit-term-option-input.component';\nimport { ManageTermOptionsComponent } from './component/hierarchy/geoobjecttype-management/manage-term-options.component';\nimport { GeoObjectTypeInputComponent } from './component/hierarchy/geoobjecttype-management/geoobjecttype-input.component';\nimport { ManageGeoObjectTypeModalComponent } from './component/hierarchy/modals/manage-geoobjecttype-modal.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { PublishModalComponent } from './component/master-list/publish-modal.component';\nimport { ExportFormatModalComponent } from './component/master-list/export-format-modal.component';\nimport { RequestTableComponent } from './component/crtable/request-table.component';\nimport { CreateUpdateGeoObjectDetailComponent } from './component/crtable/action-detail/create-update-geo-object/detail.component';\nimport { AddRemoveChildDetailComponent } from './component/crtable/action-detail/add-remove-child/detail.component';\nimport { SetParentDetailComponent } from './component/crtable/action-detail/set-parent/set-parent-detail.component';\nimport { GeoObjectSharedAttributeEditorComponent } from './component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component';\nimport { ManageVersionsComponent } from './component/geoobject-shared-attribute-editor/manage-versions.component';\nimport { ManageVersionsModalComponent } from './component/geoobject-shared-attribute-editor/manage-versions-modal.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { GeoObjectEditorComponent } from './component/geoobject-editor/geoobject-editor.component';\nimport { GeoObjectEditorMapComponent } from './component/geoobject-editor-map/geoobject-editor-map.component';\nimport { SimpleEditControl } from './component/geoobject-editor-map/simple-edit-control/simple-edit-control.component';\nimport { CascadingGeoSelector } from './component/cascading-geo-selector/cascading-geo-selector';\nimport { TreeGeoSelector } from './component/tree-geo-selector/tree-geo-selector';\nimport { ManageParentVersionsModalComponent } from './component/cascading-geo-selector/manage-parent-versions-modal.component';\nimport { ManageParentVersionsComponent } from './component/cascading-geo-selector/manage-parent-versions.component';\nimport { ActionDetailModalComponent } from './component/crtable/action-detail/action-detail-modal.component';\nimport { DataImporterComponent } from './component/importer/dataimporter.component';\nimport { DataExportComponent } from './component/data-export/data-export.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { PublishedMasterListHistoryComponent } from './component/master-list/published-master-list-history.component';\nimport { MasterListHistoryComponent } from './component/master-list/master-list-history.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { JobConflictModalComponent } from './component/scheduled-jobs/conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './component/scheduled-jobs/conflict-widgets/reupload-modal.component';\nimport { ParentReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component';\nimport { TermReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component';\nimport { RowValidationProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component';\nimport { StepIndicatorComponent } from './component/scheduled-jobs/step-indicator.component';\nimport { ImportProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/import-problem-widget.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\n\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigModalComponent } from './component/synchronization-config/synchronization-config-modal.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\n\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\nimport { ContextLayerModalComponent } from './component/location-manager/context-layer-modal.component';\nimport { LayerPanelComponent } from './component/location-manager/layer-panel.component';\nimport { FeaturePanelComponent } from './component/location-manager/feature-panel.component';\nimport { GeometryPanelComponent } from './component/location-manager/geometry-panel.component';\n\nimport { GeoObjectAttributeCodeValidator } from './factory/form-validation.factory';\n\nimport { GeoObjectTypePipe } from './pipe/geoobjecttype.pipe';\nimport { GeoObjectAttributeExcludesPipe } from './pipe/geoobject-attribute-excludes.pipe';\nimport { ToEpochDateTimePipe } from './pipe/to-epoch-date-time.pipe';\nimport { RegistryService } from './service/registry.service';\nimport { TaskService } from './service/task.service';\nimport { HierarchyService } from './service/hierarchy.service';\nimport { SynchronizationConfigService } from './service/synchronization-config.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\nimport { ChangeRequestService } from './service/change-request.service';\nimport { IOService } from './service/io.service';\nimport { MapService } from './service/map.service';\nimport { GeoObjectTypeManagementService } from './service/geoobjecttype-management.service'\n\nimport { RegistryRoutingModule } from './registry-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n\nimport '../rxjs-extensions';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\t//        ModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tTabsModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule,\n\t\tSharedModule,\n\t\tRegistryRoutingModule,\n\t\tAccordionModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tHierarchyComponent,\n\t\tRequestTableComponent,\n\t\tCreateUpdateGeoObjectDetailComponent,\n\t\tAddRemoveChildDetailComponent,\n\t\tSetParentDetailComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tShapefileModalComponent,\n\t\tAttributesPageComponent,\n\t\tLocationPageComponent,\n\t\tLocationProblemPageComponent,\n\t\tLocationProblemComponent,\n\t\tTermProblemPageComponent,\n\t\tTermProblemComponent,\n\t\tSpreadsheetModalComponent,\n\t\tGeoObjectTypePipe,\n\t\tGeoObjectAttributeCodeValidator,\n\t\tEditAttributeModalContentComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tLocalizedInputComponent,\n\t\tLocalizedTextComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsComponent,\n\t\tManageVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tGeoObjectAttributeExcludesPipe,\n\t\tToEpochDateTimePipe,\n\t\tGeoObjectEditorMapComponent,\n\t\tSimpleEditControl,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tCascadingGeoSelector,\n\t\tTreeGeoSelector,\n\t\tManageParentVersionsModalComponent,\n\t\tManageParentVersionsComponent,\n\t\tActionDetailModalComponent,\n\t\tHierarchyComponent,\n\t\tDataImporterComponent,\n\t\tDataExportComponent,\n\t\t// Master List screens\n\t\tMasterListManagerComponent,\n\t\tMasterListComponent,\n\t\tMasterListHistoryComponent,\n\t\tPublishedMasterListHistoryComponent,\n\t\tPublishModalComponent,\n\t\tMasterListViewComponent,\n\t\t// Scheduled jobs\n\t\tExportFormatModalComponent,\n\t\tScheduledJobsComponent,\n\t\tJobComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tParentReferenceProblemWidgetComponent,\n\t\tTermReferenceProblemWidgetComponent,\n\t\tRowValidationProblemWidgetComponent,\n\t\tStepIndicatorComponent,\n\t\tImportProblemWidgetComponent,\n\t\tTaskViewerComponent,\n\t\t// Synchronization Config\n\t\tSynchronizationConfigManagerComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tSynchronizationConfigComponent,\n\t\tSyncDetailsComponent,\n\t\t// Location manager\n\t\tLocationManagerComponent,\n\t\tDatasetLocationManagerComponent,\n\t\tContextLayerModalComponent,\n\t\tLayerPanelComponent,\n\t\tFeaturePanelComponent,\n\t\tGeometryPanelComponent\n\t],\n\tproviders: [\n\t\tMapService,\n\t\tHierarchyService,\n\t\tLocalizationManagerService,\n\t\tChangeRequestService,\n\t\tIOService,\n\t\tGeoObjectTypeManagementService,\n\t\tRegistryService,\n\t\tTaskService,\n\t\tDatePipe,\n\t\tToEpochDateTimePipe,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigService\n\t],\n\tentryComponents: [\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tEditAttributeModalContentComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tShapefileModalComponent,\n\t\tSpreadsheetModalComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsModalComponent,\n\t\tManageParentVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tPublishModalComponent,\n\t\tExportFormatModalComponent,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tActionDetailModalComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tContextLayerModalComponent\n\t]\n})\nexport class RegistryModule { }\n","var map = {\n\t\"./af\": 550,\n\t\"./af.js\": 550,\n\t\"./ar\": 551,\n\t\"./ar-dz\": 552,\n\t\"./ar-dz.js\": 552,\n\t\"./ar-kw\": 553,\n\t\"./ar-kw.js\": 553,\n\t\"./ar-ly\": 554,\n\t\"./ar-ly.js\": 554,\n\t\"./ar-ma\": 555,\n\t\"./ar-ma.js\": 555,\n\t\"./ar-sa\": 556,\n\t\"./ar-sa.js\": 556,\n\t\"./ar-tn\": 557,\n\t\"./ar-tn.js\": 557,\n\t\"./ar.js\": 551,\n\t\"./az\": 558,\n\t\"./az.js\": 558,\n\t\"./be\": 559,\n\t\"./be.js\": 559,\n\t\"./bg\": 560,\n\t\"./bg.js\": 560,\n\t\"./bm\": 561,\n\t\"./bm.js\": 561,\n\t\"./bn\": 562,\n\t\"./bn-bd\": 563,\n\t\"./bn-bd.js\": 563,\n\t\"./bn.js\": 562,\n\t\"./bo\": 564,\n\t\"./bo.js\": 564,\n\t\"./br\": 565,\n\t\"./br.js\": 565,\n\t\"./bs\": 566,\n\t\"./bs.js\": 566,\n\t\"./ca\": 567,\n\t\"./ca.js\": 567,\n\t\"./cs\": 568,\n\t\"./cs.js\": 568,\n\t\"./cv\": 569,\n\t\"./cv.js\": 569,\n\t\"./cy\": 570,\n\t\"./cy.js\": 570,\n\t\"./da\": 571,\n\t\"./da.js\": 571,\n\t\"./de\": 572,\n\t\"./de-at\": 573,\n\t\"./de-at.js\": 573,\n\t\"./de-ch\": 574,\n\t\"./de-ch.js\": 574,\n\t\"./de.js\": 572,\n\t\"./dv\": 575,\n\t\"./dv.js\": 575,\n\t\"./el\": 576,\n\t\"./el.js\": 576,\n\t\"./en-au\": 577,\n\t\"./en-au.js\": 577,\n\t\"./en-ca\": 578,\n\t\"./en-ca.js\": 578,\n\t\"./en-gb\": 579,\n\t\"./en-gb.js\": 579,\n\t\"./en-ie\": 580,\n\t\"./en-ie.js\": 580,\n\t\"./en-il\": 581,\n\t\"./en-il.js\": 581,\n\t\"./en-in\": 582,\n\t\"./en-in.js\": 582,\n\t\"./en-nz\": 583,\n\t\"./en-nz.js\": 583,\n\t\"./en-sg\": 584,\n\t\"./en-sg.js\": 584,\n\t\"./eo\": 585,\n\t\"./eo.js\": 585,\n\t\"./es\": 586,\n\t\"./es-do\": 587,\n\t\"./es-do.js\": 587,\n\t\"./es-mx\": 588,\n\t\"./es-mx.js\": 588,\n\t\"./es-us\": 589,\n\t\"./es-us.js\": 589,\n\t\"./es.js\": 586,\n\t\"./et\": 590,\n\t\"./et.js\": 590,\n\t\"./eu\": 591,\n\t\"./eu.js\": 591,\n\t\"./fa\": 592,\n\t\"./fa.js\": 592,\n\t\"./fi\": 593,\n\t\"./fi.js\": 593,\n\t\"./fil\": 594,\n\t\"./fil.js\": 594,\n\t\"./fo\": 595,\n\t\"./fo.js\": 595,\n\t\"./fr\": 596,\n\t\"./fr-ca\": 597,\n\t\"./fr-ca.js\": 597,\n\t\"./fr-ch\": 598,\n\t\"./fr-ch.js\": 598,\n\t\"./fr.js\": 596,\n\t\"./fy\": 599,\n\t\"./fy.js\": 599,\n\t\"./ga\": 600,\n\t\"./ga.js\": 600,\n\t\"./gd\": 601,\n\t\"./gd.js\": 601,\n\t\"./gl\": 602,\n\t\"./gl.js\": 602,\n\t\"./gom-deva\": 603,\n\t\"./gom-deva.js\": 603,\n\t\"./gom-latn\": 604,\n\t\"./gom-latn.js\": 604,\n\t\"./gu\": 605,\n\t\"./gu.js\": 605,\n\t\"./he\": 606,\n\t\"./he.js\": 606,\n\t\"./hi\": 607,\n\t\"./hi.js\": 607,\n\t\"./hr\": 608,\n\t\"./hr.js\": 608,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 610,\n\t\"./hy-am.js\": 610,\n\t\"./id\": 611,\n\t\"./id.js\": 611,\n\t\"./is\": 612,\n\t\"./is.js\": 612,\n\t\"./it\": 613,\n\t\"./it-ch\": 614,\n\t\"./it-ch.js\": 614,\n\t\"./it.js\": 613,\n\t\"./ja\": 615,\n\t\"./ja.js\": 615,\n\t\"./jv\": 616,\n\t\"./jv.js\": 616,\n\t\"./ka\": 617,\n\t\"./ka.js\": 617,\n\t\"./kk\": 618,\n\t\"./kk.js\": 618,\n\t\"./km\": 619,\n\t\"./km.js\": 619,\n\t\"./kn\": 620,\n\t\"./kn.js\": 620,\n\t\"./ko\": 621,\n\t\"./ko.js\": 621,\n\t\"./ku\": 622,\n\t\"./ku.js\": 622,\n\t\"./ky\": 623,\n\t\"./ky.js\": 623,\n\t\"./lb\": 624,\n\t\"./lb.js\": 624,\n\t\"./lo\": 625,\n\t\"./lo.js\": 625,\n\t\"./lt\": 626,\n\t\"./lt.js\": 626,\n\t\"./lv\": 627,\n\t\"./lv.js\": 627,\n\t\"./me\": 628,\n\t\"./me.js\": 628,\n\t\"./mi\": 629,\n\t\"./mi.js\": 629,\n\t\"./mk\": 630,\n\t\"./mk.js\": 630,\n\t\"./ml\": 631,\n\t\"./ml.js\": 631,\n\t\"./mn\": 632,\n\t\"./mn.js\": 632,\n\t\"./mr\": 633,\n\t\"./mr.js\": 633,\n\t\"./ms\": 634,\n\t\"./ms-my\": 635,\n\t\"./ms-my.js\": 635,\n\t\"./ms.js\": 634,\n\t\"./mt\": 636,\n\t\"./mt.js\": 636,\n\t\"./my\": 637,\n\t\"./my.js\": 637,\n\t\"./nb\": 638,\n\t\"./nb.js\": 638,\n\t\"./ne\": 639,\n\t\"./ne.js\": 639,\n\t\"./nl\": 640,\n\t\"./nl-be\": 641,\n\t\"./nl-be.js\": 641,\n\t\"./nl.js\": 640,\n\t\"./nn\": 642,\n\t\"./nn.js\": 642,\n\t\"./oc-lnc\": 643,\n\t\"./oc-lnc.js\": 643,\n\t\"./pa-in\": 644,\n\t\"./pa-in.js\": 644,\n\t\"./pl\": 645,\n\t\"./pl.js\": 645,\n\t\"./pt\": 646,\n\t\"./pt-br\": 647,\n\t\"./pt-br.js\": 647,\n\t\"./pt.js\": 646,\n\t\"./ro\": 648,\n\t\"./ro.js\": 648,\n\t\"./ru\": 649,\n\t\"./ru.js\": 649,\n\t\"./sd\": 650,\n\t\"./sd.js\": 650,\n\t\"./se\": 651,\n\t\"./se.js\": 651,\n\t\"./si\": 652,\n\t\"./si.js\": 652,\n\t\"./sk\": 653,\n\t\"./sk.js\": 653,\n\t\"./sl\": 654,\n\t\"./sl.js\": 654,\n\t\"./sq\": 655,\n\t\"./sq.js\": 655,\n\t\"./sr\": 656,\n\t\"./sr-cyrl\": 657,\n\t\"./sr-cyrl.js\": 657,\n\t\"./sr.js\": 656,\n\t\"./ss\": 658,\n\t\"./ss.js\": 658,\n\t\"./sv\": 659,\n\t\"./sv.js\": 659,\n\t\"./sw\": 660,\n\t\"./sw.js\": 660,\n\t\"./ta\": 661,\n\t\"./ta.js\": 661,\n\t\"./te\": 662,\n\t\"./te.js\": 662,\n\t\"./tet\": 663,\n\t\"./tet.js\": 663,\n\t\"./tg\": 664,\n\t\"./tg.js\": 664,\n\t\"./th\": 665,\n\t\"./th.js\": 665,\n\t\"./tk\": 666,\n\t\"./tk.js\": 666,\n\t\"./tl-ph\": 667,\n\t\"./tl-ph.js\": 667,\n\t\"./tlh\": 668,\n\t\"./tlh.js\": 668,\n\t\"./tr\": 669,\n\t\"./tr.js\": 669,\n\t\"./tzl\": 670,\n\t\"./tzl.js\": 670,\n\t\"./tzm\": 671,\n\t\"./tzm-latn\": 672,\n\t\"./tzm-latn.js\": 672,\n\t\"./tzm.js\": 671,\n\t\"./ug-cn\": 673,\n\t\"./ug-cn.js\": 673,\n\t\"./uk\": 674,\n\t\"./uk.js\": 674,\n\t\"./ur\": 675,\n\t\"./ur.js\": 675,\n\t\"./uz\": 676,\n\t\"./uz-latn\": 677,\n\t\"./uz-latn.js\": 677,\n\t\"./uz.js\": 676,\n\t\"./vi\": 678,\n\t\"./vi.js\": 678,\n\t\"./x-pseudo\": 679,\n\t\"./x-pseudo.js\": 679,\n\t\"./yo\": 680,\n\t\"./yo.js\": 680,\n\t\"./zh-cn\": 681,\n\t\"./zh-cn.js\": 681,\n\t\"./zh-hk\": 682,\n\t\"./zh-hk.js\": 682,\n\t\"./zh-mo\": 683,\n\t\"./zh-mo.js\": 683,\n\t\"./zh-tw\": 684,\n\t\"./zh-tw.js\": 684\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 686;","import { ChangeRequestService } from './change-request.service';\nimport { GeoObjectTypeManagementService } from './geoobjecttype-management.service';\nimport { HierarchyService } from './hierarchy.service';\nimport { IOService } from './io.service';\nimport { LocalizationManagerService } from './localization-manager.service';\nimport { MapService } from './map.service';\nimport { RegistryService } from './registry.service';\nimport { SynchronizationConfigService } from './synchronization-config.service';\nimport { TaskService } from './task.service';\n\nexport const services: any[] = [\n\tChangeRequestService,\n\tGeoObjectTypeManagementService,\n\tHierarchyService,\n\tIOService,\n\tLocalizationManagerService,\n\tMapService,\n\tRegistryService,\n\tSynchronizationConfigService,\n\tTaskService\n];\n\nexport * from './change-request.service';\nexport * from './geoobjecttype-management.service';\nexport * from './hierarchy.service';\nexport * from './io.service';\nexport * from './localization-manager.service';\nexport * from './map.service';\nexport * from './registry.service';\nexport * from './synchronization-config.service';\nexport * from './task.service';","import { GeoObjectType } from './registry';\n\nexport class ImportSheet {\n\tname: string;\n\tattributes: {\n\t\tboolean: string[];\n\t\tdate: string[];\n\t\tnumeric: string[];\n\t\ttext: string[];\n\t}\n}\n\nexport class Location {\n\tlabel: string;\n\tcode: string;\n\ttarget: string;\n\tmatchStrategy: string;\r\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: string;\n}\n\nexport class TermProblem {\n\tlabel: string;\n\tparentCode: string;\n\tmdAttributeId: string;\n\tattributeCode: string;\n\tattributeLabel: string;\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class LocationProblem {\n\tlabel: string;\n\ttype: string;\n\ttypeLabel: string;\n\tparent: string;\n\tcontext: { label: string, type: string }[];\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class Exclusion {\n\tcode: string;\n\tvalue: string;\n}\n\nexport class Synonym {\n\tlabel: string;\n\tsynonymId: string;\n\tvOid?: string;\n}\n\nexport class ImportConfiguration {\n\ttype: GeoObjectType;\n\tsheet: ImportSheet;\n\tdirectory: string;\n\tfilename: string;\n\thierarchy: string;\n\tpostalCode: boolean;\n\thasPostalCode: boolean;\n\tlocations: Location[];\n\tformatType: string;\n\tobjectType: string;\n\tlocationProblems: LocationProblem[];\n\ttermProblems: TermProblem[];\n\texclusions: Exclusion[];\n\thierarchies: { code: string, label: string }[];\n\tstartDate: string;\n\tendDate: string;\n\tisExternal: string;\n\texternalSystemId: string;\n\texternalIdAttributeTarget: string;\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-text',\n    templateUrl: './localized-text.component.html',\n    styleUrls: ['./localized-text.css'],\n} )\nexport class LocalizedTextComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n\t@Input() public inlinelayout: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","\n<div *ngFor=\"let localeValue of value.localeValues\">\n  <div [ngClass]=\"{'row' : inlinelayout, 'row-holder' : !inlinelayout}\" >\n    <div [ngClass]=\"{'col-md-12' : inlinelayout}\">\n      <div class=\"form-group\">\n        <div [ngClass]=\"{'label-holder' : !inlinelayout}\" >\n          <label>\n            <localize [key]=\"key\"></localize>\n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n        </div>\n        <div [ngClass]=\"{'holder' : !inlinelayout}\">\n          <span class=\"text\">\n            <textarea [(ngModel)]=\"localeValue.value\" [disabled]=\"disabled\" [name]=\"'description-' + localeValue.locale\"></textarea>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { debounceTime, distinctUntilChanged, filter, tap } from \"rxjs/operators\";\nimport { fromEvent } from 'rxjs';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ContextMenuService, ContextMenuComponent } from 'ngx-contextmenu';\nimport * as d3 from 'd3';\n\nimport { CreateHierarchyTypeModalComponent } from './modals/create-hierarchy-type-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './modals/create-geoobjtype-modal.component';\nimport { ManageGeoObjectTypeModalComponent } from './modals/manage-geoobjecttype-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal'\n\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { Organization } from '@shared/model/core';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { SvgHierarchyType } from './d3/svg-hierarchy-type';\nimport { svgPoint, isPointWithin, calculateTextWidth, getBboxFromSelection } from './d3/svg-util';\nimport { SvgHierarchyNode } from './d3/svg-hierarchy-node';\n\nexport const TREE_SCALE_FACTOR_X: number = 1.8;\nexport const TREE_SCALE_FACTOR_Y: number = 1.8;\n\nexport const DEFAULT_NODE_FILL = '#e6e6e6';\nexport const DEFAULT_NODE_BANNER_COLOR = '#A29BAB';\nexport const INHERITED_NODE_FILL = '#d4d4d4';\nexport const INHERITED_NODE_BANNER_COLOR = '#a0a0a0';\nexport const RELATED_NODE_BANNER_COLOR = INHERITED_NODE_BANNER_COLOR;\n\nexport class Instance {\n  active: boolean;\n  label: string;\n}\n\nexport interface DropTarget {\n  dropSelector: string;\n  onDrag(dragEl: Element, dropEl: Element, event: any): void;\n  onDrop(dragEl: Element, event: any): void;\n  [others: string]: any;\n}\n\n@Component({\n\n  selector: 'hierarchies',\n  templateUrl: './hierarchy.component.html',\n  styleUrls: ['./hierarchy.css']\n})\nexport class HierarchyComponent implements OnInit {\n\n  userOrganization: string = null;\n\n  primarySvgHierarchy: SvgHierarchyType;\n  currentHierarchy: HierarchyType = null;\n\n  instance: Instance = new Instance();\n  hierarchies: HierarchyType[];\n  organizations: Organization[];\n  geoObjectTypes: GeoObjectType[] = [];\n\n  hierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n  typesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n\n  filter: string = '';\n  filteredHierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n  filteredTypesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n  @ViewChild('searchInput', { static: true }) searchInput: ElementRef;\n\n  hierarchyTypeDeleteExclusions: string[] = ['AllowedIn', 'IsARelationship'];\n  geoObjectTypeDeleteExclusions: string[] = ['ROOT'];\n\n  _opened: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n  private bsModalRef: BsModalRef;\n\n    /*\n     * Template for tree node menu\n     */\n  @ViewChild('nodeMenu') public nodeMenuComponent: ContextMenuComponent;\n\n    /*\n     * Template for leaf menu\n     */\n  @ViewChild('leafMenu') public leafMenuComponent: ContextMenuComponent;\n\n    /* \n     * Currently clicked on id for delete confirmation modal \n     */\n  current: any;\n\n  isSRA: boolean = false;\n\n  hierarchyService: HierarchyService;\n\n  localizeService: LocalizationService;\n\n  options = {\n    //      allowDrag: (any) => node.isLeaf,\n    //      allowDrop: (element:Element, { parent, index }: {parent:TreeNode,index:number}) => {\n    // return true / false based on element, to.parent, to.index. e.g.\n    //          return parent.hasChildren;\n    //        },\n    displayField: \"label\",\n    actionMapping: {\n      mouse: {\n        click: (tree: any, node: any, $event: any) => {\n          this.treeNodeOnClick(node, $event);\n        },\n        contextMenu: (tree: any, node: any, $event: any) => {\n          this.handleOnMenu(node, $event);\n        }\n      }\n    },\n    mouse: {\n      //              drop: (tree: any, node: TreeNode, $event: any, {from, to}: {from:TreeNode, to:TreeNode}) => {\n      //                console.log('drag', from, to); // from === {name: 'first'}\n      //                // Add a node to `to.parent` at `to.index` based on the data in `from`\n      //                // Then call tree.update()\n      //              }\n    }\n  };\n\n\n\n  constructor(hierarchyService: HierarchyService, private modalService: BsModalService,\n    private contextMenuService: ContextMenuService,\n    localizeService: LocalizationService, private registryService: RegistryService, private authService: AuthService) {\n\n    this.isSRA = authService.isSRA();\n\n    this.hierarchyService = hierarchyService;\n    this.localizeService = localizeService;\n  }\n\n  ngOnInit(): void {\n    this.refreshAll(null);\n\n    fromEvent(this.searchInput.nativeElement, 'keyup').pipe(\n\n      // get value\n      filter(Boolean),\n      debounceTime(500),\n      distinctUntilChanged(),\n      tap(() => {\n        this.onFilterChange();\n      })\n      // subscription for response\n    ).subscribe();\n  }\n\n  localize(key: string): string {\n    return this.localizeService.decode(key);\n  }\n\n  private renderTree(): void {\n    if (this.currentHierarchy == null || this.currentHierarchy.rootGeoObjectTypes == null || this.currentHierarchy.rootGeoObjectTypes.length == 0) {\n      d3.select(\"#svg\").remove();\n      this.geoObjectTypes.forEach((got: GeoObjectType) => {\n        got.canDrag = true;\n      });\n      return;\n    }\n\n    d3.select(\".g-context-menu\").remove();\n    d3.select(\".hierarchy-inherit-button\").remove();\n    d3.select(\".g-hierarchy-got-connector\").remove();\n\n    let overflowDiv: any = d3.select(\"#overflow-div\").node();\n    let scrollLeft = overflowDiv.scrollLeft;\n    let scrollRight = overflowDiv.scrollRight;\n\n    let svg = d3.select(\"#svg\");\n\n    if (svg.node() == null) {\n      svg = d3.select(\"#svgHolder\").append(\"svg\");\n      svg.attr(\"id\", \"svg\");\n    }\n\n    this.primarySvgHierarchy = new SvgHierarchyType(this, svg, this.currentHierarchy, true, this.localizeService, this.modalService, this.authService);\n    this.primarySvgHierarchy.render();\n\n    this.calculateSvgViewBox();\n\n    let overflowDiv2: any = d3.select(\"#overflow-div\").node();\n    overflowDiv2.scrollLeft = scrollLeft;\n    overflowDiv2.scrollRight = scrollRight;\n\n    //this.registerSvgHandlers();\n\n    this.geoObjectTypes.forEach((got: GeoObjectType) => {\n      got.canDrag = this.calculateCanDrag(got);\n    });\n  }\n\n  calculateSvgViewBox(): void {\n    let svg: any = d3.select(\"#svg\");\n    let svgNode: any = svg.node();\n\n    let { x, y, width, height } = svgNode.getBBox();\n\n    const xPadding = 30;\n    const yPadding = 40;\n    svg.attr(\"viewBox\", (x - xPadding) + \" \" + (y - yPadding) + \" \" + (width + xPadding * 2) + \" \" + (height + yPadding * 2));\n\n    width = (width + xPadding * 2) * TREE_SCALE_FACTOR_X;\n    height = (height + yPadding * 2) * TREE_SCALE_FACTOR_Y;\n\n    d3.select(\"#svgHolder\").style(\"width\", width + \"px\");\n    //d3.select(\"#svgHolder\").style(\"height\", height + \"px\"); \n  }\n\n  calculateCanDrag(got: GeoObjectType): boolean {\n    let hierarchyComponent = this;\n\n    if (this.primarySvgHierarchy != null) {\n      // Check permissions against GOT and Hierarchy org\n      if (! ( this.authService.isSRA() || this.authService.isOrganizationRA(got.organizationCode)\n          || this.authService.isGeoObjectTypeRM(this.primarySvgHierarchy.hierarchyType.organizationCode, got.code)\n        ))\n      {\n        return false;\n      }\n    \n      // If the child is already on the graph, they cannot drag.\n      if (this.primarySvgHierarchy.getNodeByCode(got.code) != null) {\n        return false;\n      }\n\n      // If we are abstract, and one of our children is on the graph, they cannot drag.\n      if (got.isAbstract) {\n        let isChildOnGraph = false;\n\n        this.geoObjectTypes.forEach((child: GeoObjectType) => {\n          if (child.superTypeCode === got.code) {\n            if (hierarchyComponent.primarySvgHierarchy.getNodeByCode(child.code) != null) {\n              isChildOnGraph = true;\n            }\n          }\n        });\n\n        if (isChildOnGraph) {\n          return false;\n        }\n      }\n      // If we are a child of an abstract type, and our abstract type is on the graph, we cannot drag.\n      else if (got.superTypeCode != null) {\n        if (hierarchyComponent.primarySvgHierarchy.getNodeByCode(got.superTypeCode) != null) {\n          return false;\n        }\n      }\n    }\n    else {\n      // If there is no selected hierarchy, they cannot drag.\n      return false;\n    }\n\n    return true;\n  }\n\n  calculateRelatedHierarchies(got: GeoObjectType): string[] {\n    let relatedHiers = [];\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchyType = this.hierarchies[i];\n\n      if (hierarchyType.rootGeoObjectTypes != null && hierarchyType.rootGeoObjectTypes.length > 0) {\n        let d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]).descendants();\n\n        let found = d3Hierarchy.find((node) => {\n          return node.data.geoObjectType === got.code && node.data.inheritedHierarchyCode == null;\n        });\n\n        if (found) {\n          relatedHiers.push(hierarchyType.code);\n        }\n      }\n    }\n\n    return relatedHiers;\n  }\n\n  private registerDragHandlers(): any {\n    let that = this;\n\n    let dropTargets: DropTarget[] = [];\n\n    // Empty Hierarchy Drop Zone\n    dropTargets.push({\n      dropSelector: \".drop-box-container\", onDrag: function(dragEl: Element, dropEl: Element) {\n        if (this.dropEl != null) {\n          this.dropEl.style(\"border-color\", null);\n          this.dropEl = null;\n        }\n\n        if (dropEl != null) {\n          let emptyHierarchyDropZone = dropEl.closest(\".drop-box-container\");\n\n          if (emptyHierarchyDropZone != null) {\n            this.dropEl = d3.select(emptyHierarchyDropZone).style(\"border-color\", \"#6BA542\");\n          }\n        }\n      }, onDrop: function(dragEl: Element) {\n        if (this.dropEl != null) {\n          this.dropEl.style(\"border-color\", null);\n          that.addChild(that.currentHierarchy.code, \"ROOT\", d3.select(dragEl).attr(\"id\"));\n          this.dropEl = null;\n        }\n      }\n    });\n\n    // SVG GeoObjectType Drop Zone\n    dropTargets.push({\n      dropSelector: \".svg-got-body-rect\", onDrag: function(dragEl: Element, mouseTarget: Element, event: any) {\n        this.clearDropZones();\n\n        let lastDropEl = this.dropEl;\n\n        // translate page to SVG co-ordinate\n        let svg: any = d3.select(\"#svg\").node();\n\n        if (svg == null) {\n          return;\n        }\n        let svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        // Find out if we've dragged the GeoObjectType inside of a HierarchyNode. If we have, then\n        // we need to expand the HierarchyNode's BoundingBox to accomodate our new drop zones. \n        that.primarySvgHierarchy.getD3Tree().descendants().forEach((node: any) => {\n          if (node.data.geoObjectType !== \"GhostNode\" && isPointWithin(svgMousePoint, node.data.dropZoneBbox)) {\n            this.dropEl = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + node.data.geoObjectType + '\"]');\n            node.data.activeDropZones = true;\n\n            if (node.parent == null) {\n              node.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH * 4 };\n            }\n          }\n          else {\n            node.data.activeDropZones = false;\n\n            if (node.parent == null) {\n              node.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n            }\n          }\n        });\n\n        if (this.dropEl == null || (lastDropEl != null && this.dropEl != null && lastDropEl.attr(\"data-gotCode\") != this.dropEl.attr(\"data-gotCode\"))) {\n          this.clearGhostNodes(true);\n        }\n\n        if (this.dropEl != null) {\n          let isDragGroup = d3.select(dragEl).classed(\"got-group-parent\");\n          const gotCode = this.dropEl.attr(\"data-gotCode\");\n          let dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n          let isDropGroup = that.findGeoObjectTypeByCode(gotCode).isAbstract;\n\n          this.dropEl.attr(\"stroke\", \"blue\");\n\n          const dropElX = parseInt(this.dropEl.attr(\"x\"));\n          const dropElY = parseInt(this.dropEl.attr(\"y\"));\n\n          // Add drop zones\n          const childW: number = SvgHierarchyType.gotRectW;\n          const childH: number = SvgHierarchyType.gotRectH;\n\n          let dzg = d3.select(\"#svg\").append(\"g\").classed(\"svg-dropZone-g\", true);\n\n          // Render Child Drop Zone\n          let dropTargetHasChildren = !(dropNode.children == null || dropNode.children.length == 0);\n          let isChildDZActive = !isDropGroup && (!isDragGroup || !dropTargetHasChildren);\n          if (isChildDZActive) {\n            this.childDzBacker = dzg.append(\"rect\").classed(\"svg-got-child-dz-backer\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"white\")\n\n            this.childDz = dzg.append(\"rect\").classed(\"svg-got-child-dz\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", \"1\")\n              .attr(\"stroke-dasharray\", \"5,5\");\n\n            let addChildLabel = dropTargetHasChildren ? that.localizeService.decode(\"hierarchy.content.intersectChild\") : that.localizeService.decode(\"hierarchy.content.addChild\");\n            this.childDzText = dzg.append(\"text\").classed(\"svg-got-child-dz-text\", true)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", 10)\n              .attr(\"fill\", \"black\")\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addChildLabel, 10) / 2)\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10 + childH / 2 + 2)\n              .text(addChildLabel);\n          }\n\n          // Render Parent Drop Zone\n          if (!isDragGroup) // Don't render it if we're a group\n          {\n            this.parentDzBacker = dzg.append(\"rect\").classed(\"svg-got-parent-dz-backer\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"white\")\n\n            this.parentDz = dzg.append(\"rect\").classed(\"svg-got-parent-dz\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", \"1\")\n              .attr(\"stroke-dasharray\", \"5,5\");\n\n            d3.select(\".svg-got-parent-dz-text\").remove();\n            let addParentLabel = dropNode.parent == null ? that.localizeService.decode(\"hierarchy.content.addParent\") : that.localizeService.decode(\"hierarchy.content.intersectParent\");\n            this.parentDzText = dzg.append(\"text\").classed(\"svg-got-parent-dz-text\", true)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", 10)\n              .attr(\"fill\", \"black\")\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addParentLabel, 10) / 2)\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH / 2 + 2)\n              .text(addParentLabel);\n          }\n\n          // Render Sibling Drop Zone\n          if (this.ghostCode != gotCode) {\n\n\n            if (this.ghostCode != null) {\n              this.clearGhostNodes(dropNode.parent == null);\n            }\n\n            if (dropNode.parent != null) {\n              let parentIndex = null;\n              for (let i = 0; i < dropNode.parent.data.children.length; ++i) {\n                let hn: any = dropNode.parent.data.children[i];\n\n                if (hn.geoObjectType === gotCode) {\n                  parentIndex = i + 1;\n                }\n              };\n\n              let addSiblingLabel = that.localizeService.decode(\"hierarchy.content.addChild\");\n              dropNode.parent.data.children.splice(parentIndex, 0, { ghostingCode: gotCode, geoObjectType: \"GhostNode\", label: addSiblingLabel, children: [] });\n\n              that.renderTree();\n              this.ghostCode = gotCode;\n            }\n          }\n\n          let siblingGhostBody = d3.select(\".svg-sibling-ghost-body-dz\");\n\n          if (!isDragGroup && isPointWithin(svgMousePoint, getBboxFromSelection(this.parentDz))) {\n            this.parentDz.attr(\"stroke\", \"blue\");\n            this.parentDzText.attr(\"fill\", \"blue\");\n            isChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n            isChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n            siblingGhostBody.attr(\"stroke\", \"black\");\n            this.activeDz = this.parentDz;\n          }\n          else if (isChildDZActive && isPointWithin(svgMousePoint, getBboxFromSelection(this.childDz))) {\n            !isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n            !isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n            this.childDz.attr(\"stroke\", \"blue\");\n            this.childDzText.attr(\"fill\", \"blue\");\n            siblingGhostBody.attr(\"stroke\", \"black\");\n            this.activeDz = this.childDz;\n          }\n          else if (siblingGhostBody.node() != null && isPointWithin(svgMousePoint, getBboxFromSelection(siblingGhostBody))) {\n            !isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n            !isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n            isChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n            isChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n            siblingGhostBody.attr(\"stroke\", \"blue\");\n            this.activeDz = \"sibling\";\n          }\n        }\n      }, onDrop: function(dragEl: Element) {\n        if (this.dropEl != null && this.activeDz != null) {\n          let dropGot = this.dropEl.attr(\"data-gotCode\");\n          let dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === dropGot; });\n          let dragGot = d3.select(dragEl).attr(\"id\");\n\n          if (this.activeDz === this.childDz) {\n            if (dropNode.data.children.length == 0) {\n              that.addChild(that.currentHierarchy.code, dropGot, dragGot);\n            }\n            else {\n              let youngest = \"\";\n\n              for (let i = 0; i < dropNode.data.children.length; ++i) {\n                youngest = youngest + dropNode.data.children[i].geoObjectType;\n\n                if (i < dropNode.data.children.length - 1) {\n                  youngest = youngest + \",\";\n                }\n              }\n\n              that.insertBetweenTypes(that.currentHierarchy.code, dropGot, dragGot, youngest);\n            }\n          }\n          else if (this.activeDz === this.parentDz) {\n            if (dropNode.parent == null) {\n              that.insertBetweenTypes(that.currentHierarchy.code, \"ROOT\", dragGot, dropGot);\n            }\n            else {\n              that.insertBetweenTypes(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, dragGot, dropGot);\n            }\n          }\n          else if (this.activeDz === \"sibling\") {\n            that.addChild(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, d3.select(dragEl).attr(\"id\"));\n          }\n        }\n        this.clearDropZones();\n        this.clearGhostNodes(true);\n      }, clearDropZones: function() {\n        if (this.dropEl != null) {\n          this.dropEl.attr(\"stroke\", null);\n        }\n\n        this.dropEl = null;\n        this.activeDz = null;\n\n        this.childDz = null;\n        this.parentDz = null;\n\n        d3.select(\".svg-dropZone-g\").remove();\n\n      }, clearGhostNodes: function(renderTree: boolean) {\n        if (this.ghostCode != null) {\n          let ghostNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.ghostingCode === this.ghostCode; });\n\n          if (ghostNode != null) {\n            let parentIndex = null;\n            for (let i = 0; i < ghostNode.parent.data.children.length; ++i) {\n              let hn: any = ghostNode.parent.data.children[i];\n\n              if (hn.ghostingCode === this.ghostCode) {\n                parentIndex = i;\n              }\n            };\n\n            if (parentIndex != null) {\n              ghostNode.parent.data.children.splice(parentIndex, 1);\n              if (renderTree) {\n                that.renderTree();\n              }\n            }\n          }\n\n          this.ghostCode = null;\n        }\n      }\n    });\n\n    // GeoObjectTypes and Hierarchies\n    let deltaX: number, deltaY: number, width: number;\n    let sidebarDragHandler = d3.drag()\n      .on(\"start\", function(event: any) {\n        let canDrag = d3.select(this).attr(\"data-candrag\");\n        if (canDrag === \"false\") {\n          return;\n        }\n\n        let rect = this.getBoundingClientRect();\n        deltaX = rect.left - event.sourceEvent.pageX;\n        deltaY = rect.top - event.sourceEvent.pageY;\n        width = rect.width;\n      })\n      .on(\"drag\", function(event: any) {\n        let canDrag = d3.select(this).attr(\"data-candrag\");\n        if (canDrag === \"false\") {\n          return;\n        }\n\n        d3.select(\".g-context-menu\").remove();\n\n        let selThis = d3.select(this);\n\n        // Kind of a dumb hack, but if we hide our drag element for a sec, then we can check what's underneath it.\n        selThis.style(\"display\", \"none\");\n\n        let target = document.elementFromPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        selThis.style(\"display\", null);\n\n        for (let i = 0; i < dropTargets.length; ++i) {\n          dropTargets[i].onDrag(this, target, event);\n        }\n\n        // Move the GeoObjectType with the pointer when they move their mouse\n        selThis\n          .classed(\"dragging\", true)\n          .style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n          .style(\"top\", (event.sourceEvent.pageY + deltaY) + \"px\")\n          .style(\"width\", width + \"px\");\n\n        // If they are moving a GOT group then we have to move the children as well \n        if (selThis.classed(\"got-group-parent\")) {\n          let index = 1;\n          d3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n            let li: any = this;\n            let child = d3.select(li);\n\n            child\n              .classed(\"dragging\", true)\n              .style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n              .style(\"top\", (event.sourceEvent.pageY + deltaY + (li.getBoundingClientRect().height + 2) * index) + \"px\")\n              .style(\"width\", width + \"px\");\n\n            index++;\n          });\n        }\n      }).on(\"end\", function(event: any) {\n        let selThis = d3.select(this)\n          .classed(\"dragging\", false)\n          .style(\"left\", null)\n          .style(\"top\", null)\n          .style(\"width\", null);\n\n        // If they are moving a GOT group then we have to reset the children as well \n        if (selThis.classed(\"got-group-parent\")) {\n          d3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n            let child = d3.select(this);\n\n            child\n              .classed(\"dragging\", false)\n              .style(\"left\", null)\n              .style(\"top\", null)\n              .style(\"width\", null);\n          });\n        }\n\n        for (let i = 0; i < dropTargets.length; ++i) {\n          dropTargets[i].onDrop(this, event);\n        }\n      });\n\n    sidebarDragHandler(d3.selectAll(\".sidebar-section-content ul.list-group li.got-li-item\"));\n  }\n\n  private registerSvgHandlers(): void {\n    let hierarchyComponent = this;\n\n    // SVG Drag Handler\n    let deltaX: number, deltaY: number, width: number;\n    let startPoint: any;\n    let svgGot: SvgHierarchyNode;\n    let svgDragHandler = d3.drag()\n      .on(\"start\", function(event: any) {\n        let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n        // let select = d3.select(this);\n\n        svgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n\n\n        // d3.selectAll(\".svg-got-relatedhiers-button\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     return -1\n        //   }\n        //   else {\n        //     return 1\n        //   }\n        // });\n\n        //   d3.selectAll(\".svg-got-body-rect\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     return -1\n        //   }\n        //   else {\n        //     return 1\n        //   }\n        // });\n\n        // d3.selectAll(\".svg-got-header-rect\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     console.log(\"no --> \",a.data.geoObjectType)\n        //     return -1\n        //   }\n        //   else {\n        //     console.log(\"yes --> \",a.data.geoObjectType)\n        //     return 1\n        //   }\n        // });\n\n        startPoint = svgGot.getPos();\n\n        deltaX = startPoint.x - svgMousePoint.x;\n        deltaY = startPoint.y - svgMousePoint.y;\n      })\n      .on(\"drag\", function(event: any) {\n\n        d3.select(\".g-context-menu\").remove();\n\n        let svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        svgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n        svgGot.setPos(svgMousePoint.x + deltaX, svgMousePoint.y + deltaY, true);\n\n      }).on(\"end\", function(event: any) {\n\n        let bbox: string[] = d3.select(\"#svg\").attr(\"viewBox\").split(\" \");\n\n        svgGot.setPos(startPoint.x, startPoint.y, false);\n\n        // if (!isBboxPartiallyWithin(svgGot.getBbox(), { x: parseInt(bbox[0]), y: parseInt(bbox[1]), width: parseInt(bbox[2]), height: parseInt(bbox[3]) })) {\n\n        //   if (hierarchyComponent.isOrganizationRA(hierarchyComponent.currentHierarchy.organizationCode)) {\n        //     let obj = hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n        //     hierarchyComponent.bsModalRef = hierarchyComponent.modalService.show(ConfirmModalComponent, {\n        //       animated: true,\n        //       backdrop: true,\n        //       ignoreBackdropClick: true,\n        //     });\n\n        //     let message = hierarchyComponent.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n        //     message = message.replace(\"{label}\", obj.label.localizedValue);\n\n        //     hierarchyComponent.bsModalRef.content.message = message;\n        //     hierarchyComponent.bsModalRef.content.data = obj.code;\n\n        //     (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onConfirm.subscribe(data => {\n        //       let treeNode = svgGot.getTreeNode();\n        //       let parent = null;\n        //       if (treeNode.parent == null) {\n        //         parent = \"ROOT\";\n        //       }\n        //       else {\n        //         if (treeNode.parent.data.inheritedHierarchyCode != null) {\n        //           parent = \"ROOT\";\n        //         }\n        //         else {\n        //           parent = treeNode.parent.data.geoObjectType;\n        //         }\n        //       }\n\n        //       hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { svgGot.setPos(startPoint.x, startPoint.y, false); });\n        //     });\n\n        //     (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n        //       svgGot.setPos(startPoint.x, startPoint.y, false);\n        //     });\n        //   }\n        //   else {\n        //     svgGot.setPos(startPoint.x, startPoint.y, false);\n        //   }\n\n        // }\n        // else {\n        //   svgGot.setPos(startPoint.x, startPoint.y, false);\n        // }\n\n      });\n\n    svgDragHandler(d3.selectAll(\".svg-got-body-rect[data-inherited=false],.svg-got-label-text[data-inherited=false],.svg-got-header-rect[data-inherited=false]\"));\n  }\n\n  public findGeoObjectTypeByCode(code: string): GeoObjectType {\n    for (let i = 0; i < this.geoObjectTypes.length; ++i) {\n      let got: GeoObjectType = this.geoObjectTypes[i];\n\n      if (got.code === code) {\n        return got;\n      }\n    }\n  }\n\n  public findHierarchyByCode(code: string): HierarchyType {\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let ht: HierarchyType = this.hierarchies[i];\n\n      if (ht.code === code) {\n        return ht;\n      }\n    }\n  }\n  \n  public findOrganizationByCode(code: string): Organization {\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      if (org.code === code) {\n        return org;\n      }\n    }\n  }\n\n  private addChild(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): void {\n    this.hierarchyService.addChildToHierarchy(hierarchyCode, parentGeoObjectTypeCode, childGeoObjectTypeCode).then((ht: HierarchyType) => {\n      let got = this.findGeoObjectTypeByCode(childGeoObjectTypeCode);\n\n      let index = null;\n      for (let i = 0; i < got.relatedHierarchies.length; ++i) {\n        if (got.relatedHierarchies[i] === hierarchyCode) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index == null) {\n        got.relatedHierarchies.push(hierarchyCode);\n      }\n\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  private insertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): void {\n    this.hierarchyService.insertBetweenTypes(hierarchyCode, parentGeoObjectTypeCode, middleGeoObjectTypeCode, youngestGeoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  isRA(): boolean {\n    return this.authService.isRA();\n  }\n\n  isOrganizationRA(orgCode: string, dropZone: boolean = false): boolean {\n    return this.isSRA || this.authService.isOrganizationRA(orgCode);\n  }\n\n  getTypesByOrg(org: Organization): GeoObjectType[] {\n    let orgTypes: GeoObjectType[] = [];\n\n    for (let i = 0; i < this.geoObjectTypes.length; ++i) {\n      let geoObjectType: GeoObjectType = this.geoObjectTypes[i];\n\n      if (geoObjectType.organizationCode === org.code) {\n        orgTypes.push(geoObjectType);\n      }\n    }\n\n    return orgTypes;\n  }\n\n  getHierarchiesByOrg(org: Organization): HierarchyType[] {\n    let orgHierarchies: HierarchyType[] = [];\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchy: HierarchyType = this.hierarchies[i];\n\n      if (hierarchy.organizationCode === org.code) {\n        orgHierarchies.push(hierarchy);\n      }\n    }\n\n    return orgHierarchies;\n  }\n\n  public refreshAll(desiredHierarchy: HierarchyType) {\n\n    // Clear the types to then refresh\n    this.geoObjectTypes = [];\n\n    this.registryService.init().then(response => {\n      this.localizeService.setLocales(response.locales);\n\n      this.setGeoObjectTypes(response.types);\n\n      this.organizations = response.organizations;\n\n      this.organizations.forEach(org => {\n        if (this.isOrganizationRA(org.code)) {\n          this.userOrganization = org.code;\n        }\n      })\n\n      let pos = this.getGeoObjectTypePosition(\"ROOT\");\n      if (pos) {\n        this.geoObjectTypes.splice(pos, 1);\n      }\n\n      this.setHierarchies(response.hierarchies);\n\n      this.setNodesOnInit(desiredHierarchy);\n\n      this.updateViewDatastructures();\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public setGeoObjectTypes(types: GeoObjectType[]): void {\n\n    // Set group parent types\n    this.setAbstractTypes(types);\n\n    // Set GeoObjectTypes that aren't part of a group.\n    types.forEach(type => {\n      if (!type.isAbstract) {\n        if (!type.superTypeCode) {\n          this.geoObjectTypes.push(type);\n        }\n      }\n    });\n\n    // Sort aphabetically because all other types to add will be children in a group.\n    this.geoObjectTypes.sort((a, b) => {\n      if (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n      else if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n      else return 0;\n    });\n\n    // Add group children\n    types.forEach(type => {\n      if (!type.isAbstract) {\n        if (type.superTypeCode && type.superTypeCode.length > 0) {\n\n          for (let i = 0; i < this.geoObjectTypes.length; i++) {\n            let setType = this.geoObjectTypes[i];\n            if (type.superTypeCode === setType.code) {\n              this.geoObjectTypes.splice(i + 1, 0, type);\n            }\n          }\n\n        }\n      }\n    });\n\n  }\n\n  private setAbstractTypes(types: GeoObjectType[]): void {\n    types.forEach(type => {\n      if (type.isAbstract) {\n        this.geoObjectTypes.push(type);\n      }\n    });\n  }\n\n  public updateViewDatastructures(): void {\n    this.hierarchiesByOrg = [];\n    this.typesByOrg = [];\n\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      this.hierarchiesByOrg.push({ org: org, hierarchies: this.getHierarchiesByOrg(org) });\n      this.typesByOrg.push({ org: org, types: this.getTypesByOrg(org) });\n    }\n\n    this.geoObjectTypes.forEach((got: GeoObjectType) => {\n      got.canDrag = this.calculateCanDrag(got);\n      got.relatedHierarchies = this.calculateRelatedHierarchies(got);\n    });\n\n    this.onFilterChange();\n  }\n\n  public excludeHierarchyTypeDeletes(hierarchy: HierarchyType) {\n    return (this.hierarchyTypeDeleteExclusions.indexOf(hierarchy.code) !== -1);\n  }\n\n  public excludeGeoObjectTypeDeletes(geoObjectType: GeoObjectType) {\n    return (this.geoObjectTypeDeleteExclusions.indexOf(geoObjectType.code) !== -1);\n  }\n\n  private setNodesOnInit(desiredHierarchy: HierarchyType): void {\n\n    let index = -1;\n\n    if (desiredHierarchy != null) {\n      index = this.hierarchies.findIndex(h => h.code === desiredHierarchy.code);\n    }\n    else if (this.hierarchies.length > 0) {\n      index = 0;\n    }\n\n    if (index > -1) {\n      const hierarchy = this.hierarchies[index];\n\n      this.setCurrentHierarchy(hierarchy);\n\n      this.renderTree();\n    }\n  }\n\n  private getHierarchy(hierarchyId: string): HierarchyType {\n    let target: HierarchyType = null;\n    this.hierarchies.forEach(hierarchy => {\n      if (hierarchyId === hierarchy.code) {\n        target = hierarchy;\n      }\n    });\n\n    return target;\n  }\n\n  private setHierarchies(data: HierarchyType[]): void {\n    let hierarchies: HierarchyType[] = [];\n    data.forEach((hierarchyType, index) => {\n\n      if (hierarchyType.rootGeoObjectTypes.length > 0) {\n        hierarchyType.rootGeoObjectTypes.forEach(rootGeoObjectType => {\n          this.processHierarchyNodes(rootGeoObjectType);\n        })\n      }\n\n      hierarchies.push(hierarchyType);\n\n    });\n\n    this.hierarchies = hierarchies\n\n    this.hierarchies.sort((a, b) => {\n      if (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n      else if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n      else return 0;\n    });\n  }\n\n  private processHierarchyNodes(node: HierarchyNode) {\n    if (node != null) {\n      node.label = this.getHierarchyLabel(node.geoObjectType);\n\n      node.children.forEach(child => {\n        this.processHierarchyNodes(child);\n      })\n    }\n  }\n\n  private getHierarchyLabel(geoObjectTypeCode: string): string {\n    let label: string = null;\n    this.geoObjectTypes.forEach(function(gOT) {\n      if (gOT.code === geoObjectTypeCode) {\n        label = gOT.label.localizedValue;\n      }\n    });\n\n    return label;\n  }\n\n  public handleOnMenu(node: any, $event: any): void {\n    if (this.isOrganizationRA(this.currentHierarchy.organizationCode)) {\n      this.contextMenuService.show.next({\n        contextMenu: (node.data.childType !== null ? this.nodeMenuComponent : this.leafMenuComponent),\n        event: $event,\n        item: node,\n      });\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n    else {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n  }\n\n  public treeNodeOnClick(node: any, $event: any): void {\n\n    node.treeModel.setFocusedNode(node);\n\n    if (node.treeModel.isExpanded(node)) {\n      node.collapse();\n    }\n    else {\n      node.treeModel.expandAll();\n    }\n  }\n\n  public hierarchyOnClick(event: any, item: HierarchyType) {\n    this.setCurrentHierarchy(item);\n    this.renderTree();\n  }\n\n  public createHierarchy(): void {\n    this.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n\n    (<CreateHierarchyTypeModalComponent>this.bsModalRef.content).onHierarchytTypeCreate.subscribe(data => {\n\n      this.hierarchies.push(data);\n\n      this.hierarchies.sort((a: HierarchyType, b: HierarchyType) => {\n        var nameA = a.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n\n        if (nameA < nameB) {\n          return -1; //nameA comes first\n        }\n\n        if (nameA > nameB) {\n          return 1; // nameB comes first\n        }\n\n        return 0;  // names must be equal\n      });\n\n      this.updateViewDatastructures();\n    });\n  }\n\n  public deleteHierarchyType(obj: HierarchyType): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n    this.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n    this.bsModalRef.content.data = obj.code;\n    this.bsModalRef.content.type = \"DANGER\";\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n    (<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n      this.removeHierarchyType(data);\n    });\n  }\n\n  public editHierarchyType(obj: HierarchyType, readOnly: boolean): void {\n\n    this.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n    this.bsModalRef.content.edit = true;\n    this.bsModalRef.content.readOnly = readOnly;\n    this.bsModalRef.content.hierarchyType = obj;\n    this.bsModalRef.content.onHierarchytTypeCreate.subscribe(data => {\n      let pos = this.getHierarchyTypePosition(data.code);\n\n      this.hierarchies[pos].label = data.label;\n      this.hierarchies[pos].description = data.description;\n      this.hierarchies[pos].progress = data.progress;\n      this.hierarchies[pos].acknowledgement = data.acknowledgement;\n      this.hierarchies[pos].disclaimer = data.disclaimer;\n      this.hierarchies[pos].useConstraints = data.useConstraints;\n      this.hierarchies[pos].accessConstraints = data.accessConstraints;\n      this.hierarchies[pos].contact = data.contact;\n      this.hierarchies[pos].phoneNumber = data.phoneNumber;\n      this.hierarchies[pos].email = data.email;\n\n      this.updateViewDatastructures();\n\n      if (this.currentHierarchy.code === data.code) {\n        this.setCurrentHierarchy(this.hierarchies[pos]);\n\n        this.renderTree();\n      }\n    });\n  }\n\n  setCurrentHierarchy(hierarchyType: HierarchyType): void {\n    this.currentHierarchy = hierarchyType;\n  }\n\n  isPrimaryHierarchy(hierarchy: HierarchyType): boolean {\n    // return hierarchy.isPrimary;\n    return hierarchy.code === this.currentHierarchy.code;\n  }\n\n  public removeHierarchyType(code: string): void {\n    this.hierarchyService.deleteHierarchyType(code).then(response => {\n\n      let pos = this.getHierarchyTypePosition(code);\n      this.hierarchies.splice(pos, 1);\n      this.updateViewDatastructures();\n\n      if (this.hierarchies.length > 0) {\n        this.setCurrentHierarchy(this.hierarchies[0]);\n      }\n      else {\n        this.currentHierarchy = null;\n      }\n\n      this.renderTree();\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public createGeoObjectType(groupSuperType: GeoObjectType, isAbstract: boolean, org: Organization): void {\n    this.bsModalRef = this.modalService.show(CreateGeoObjTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n    this.bsModalRef.content.init(org, this.geoObjectTypes, groupSuperType, isAbstract);\n\n    this.bsModalRef.content.onGeoObjTypeCreate.subscribe(data => {\n\n      data.relatedHierarchies = this.calculateRelatedHierarchies(data);\n\n      this.refreshAll(this.currentHierarchy);\n\n    });\n  }\n\n  public deleteGeoObjectType(obj: GeoObjectType): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n    this.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n    this.bsModalRef.content.data = obj.code;\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n    this.bsModalRef.content.type = ModalTypes.danger;\n\n    (<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n      this.removeGeoObjectType(data);\n    });\n  }\n\n  public removeGeoObjectType(code: string, errCallback: (err: HttpErrorResponse) => void = null): void {\n    this.registryService.deleteGeoObjectType(code).then(response => {\n\n      let pos = this.getGeoObjectTypePosition(code);\n      this.geoObjectTypes.splice(pos, 1);\n      \n      this.refreshAll(this.currentHierarchy);\n\n    }).catch((err: HttpErrorResponse) => {\n      if (errCallback != null) {\n        errCallback(err);\n      }\n      this.error(err);\n    });\n  }\n\n  public manageGeoObjectType(geoObjectType: GeoObjectType, readOnly: boolean): void {\n\n    this.bsModalRef = this.modalService.show(ManageGeoObjectTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'manage-geoobjecttype-modal'\n    });\n\n    geoObjectType.attributes.sort((a, b) => {\n      if (a.label.localizedValue < b.label.localizedValue) return -1;\n      else if (a.label.localizedValue > b.label.localizedValue) return 1;\n      else return 0;\n    });\n    this.bsModalRef.content.geoObjectType = geoObjectType;\n    this.bsModalRef.content.readOnly = readOnly;\n\n    (<ManageGeoObjectTypeModalComponent>this.bsModalRef.content).onGeoObjectTypeSubmitted.subscribe(data => {\n\n      if (data.isAbstract) {\n        this.refreshAll(this.currentHierarchy);\n      }\n      else {\n        const position = this.getGeoObjectTypePosition(data.code);\n\n        if (position !== -1) {\n          this.geoObjectTypes[position] = data;\n        }\n\n        // Update all of the hierarchies for the new geo object type\n        this.updateViewDatastructures();\n\n        this.hierarchies.forEach((hierarchyType: HierarchyType) => {\n          this.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n        });\n\n        // Update the current hierarchy view\n        if (this.currentHierarchy != null) {\n          this.processHierarchyNodes(this.currentHierarchy.rootGeoObjectTypes[0]);\n        }\n\n        this.renderTree();\n      }\n    });\n  }\n\n  private getHierarchyTypePosition(code: string): number {\n    for (let i = 0; i < this.hierarchies.length; i++) {\n      let obj = this.hierarchies[i];\n      if (obj.code === code) {\n        return i;\n      }\n    }\n  }\n\n  private getGeoObjectTypePosition(code: string): number {\n    for (let i = 0; i < this.geoObjectTypes.length; i++) {\n      let obj = this.geoObjectTypes[i];\n      if (obj.code === code) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  public refreshPrimaryHierarchy(hierarchyType: HierarchyType) {\n    this.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchy = this.hierarchies[i];\n\n      if (hierarchy.code === hierarchyType.code) {\n        this.hierarchies[i] = hierarchyType;\n\n        this.setCurrentHierarchy(hierarchyType);\n      }\n    }\n\n    this.updateViewDatastructures();\n\n    this.renderTree();\n  }\n\n  public removeFromHierarchy(parentGotCode, gotCode, errCallback: (err: HttpErrorResponse) => void = null): void {\n    const that = this;\n\n    this.hierarchyService.removeFromHierarchy(this.currentHierarchy.code, parentGotCode, gotCode).then(hierarchyType => {\n\n      let got = that.findGeoObjectTypeByCode(gotCode);\n\n      let index = null;\n      for (let i = 0; i < got.relatedHierarchies.length; ++i) {\n        if (got.relatedHierarchies[i] === hierarchyType.code) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index != null) {\n        got.relatedHierarchies.splice(index, 1);\n      }\n\n      that.refreshPrimaryHierarchy(hierarchyType);\n\n    }).catch((err: HttpErrorResponse) => {\n      if (errCallback != null) {\n        errCallback(err);\n      }\n\n      this.error(err);\n    });\n  }\n\n  public isActive(item: HierarchyType) {\n    return this.currentHierarchy === item;\n  };\n\n  onFilterChange(): void {\n    const label = this.filter.toLowerCase();\n\n    this.filteredHierarchiesByOrg = [];\n    this.filteredTypesByOrg = [];\n\n    this.hierarchiesByOrg.forEach((item: { org: Organization, hierarchies: HierarchyType[] }) => {\n\n      const filtered = item.hierarchies.filter((hierarchy: HierarchyType) => {\n        const index = hierarchy.label.localizedValue.toLowerCase().indexOf(label);\n\n        return (index !== -1);\n      });\n\n      this.filteredHierarchiesByOrg.push({ org: item.org, hierarchies: filtered });\n    });\n\n    this.typesByOrg.forEach((item: { org: Organization, types: GeoObjectType[] }) => {\n\n      const filtered = item.types.filter((type: GeoObjectType) => {\n        const index = type.label.localizedValue.toLowerCase().indexOf(label);\n\n        return (index !== -1);\n      });\n\n      this.filteredTypesByOrg.push({ org: item.org, types: filtered });\n    });\n\n    setTimeout(() => { this.registerDragHandlers(); }, 500);\n  }\n\n  handleInheritHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string) {\n    this.hierarchyService.setInheritedHierarchy(hierarchyTypeCode, inheritedHierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  handleUninheritHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string) {\n    this.hierarchyService.removeInheritedHierarchy(hierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public error(err: HttpErrorResponse): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"new-admin-design-main\" style=\"overflow-y:hidden;\">\n\t<cgr-header></cgr-header>\n\n\t<loading-bar></loading-bar>\n\n\t<div id=\"app-container\" class=\"container-fluid\">\n\n\t\t<!--   <h2> <localize key=\"hierarchy.management.title\"></localize> </h2> -->\n\t\t<div class=\"row\">\n\n\t\t\t<nav class=\"col-md-3 hierarchy-sidebar\">\n\n\t\t\t\t<div class=\"row\" style=\"padding: 5px 5px;\">\n\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" #searchInput\n\t\t\t\t\t\t\t[placeholder]=\"'hierarchy.sidebar.searchAll' | localize\" [(ngModel)]=\"filter\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<accordion [isAnimated]=\"true\" [closeOthers]=\"false\">\n\t\t\t\t\t<accordion-group [panelClass]=\"'hierarchy-sidebar-content'\" style=\"border-radius: 0;\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i style=\"margin-right:10px;\" class=\"fa fa-circle\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.geoObjectTypes\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let typeByOrg of filteredTypesByOrg;\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{typeByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || typeByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createGeoObjectType(null, false, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newGeoObjectType\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n                                        \n                                        <button (click)=\"createGeoObjectType(null, true, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n                                            style=\"margin-bottom:20px;margin-left:10px;min-width:45%;\">\n                                            <localize key=\"hierarchies.add.group.button.label\"></localize>\n                                        </button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li class=\"list-group-item got-li-item\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-superTypeCode]=\"(type.superTypeCode && type.superTypeCode.length > 0) ? type.superTypeCode : null\"\n\t\t\t\t\t\t\t\t\t                  *ngFor=\"let type of typeByOrg.types\" [id]=\"type.code\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-canDrag]=\"type.canDrag\"\n                                    [ngClass]=\"{'got-group-parent' : (type.isAbstract), 'got-group-child' : type.superTypeCode && type.superTypeCode.length > 0}\" >\n\t\t\t\t\t\t\t\t\t\t{{type.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n                                            \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"!excludeGeoObjectTypeDeletes(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteGeoObjectType(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\">\n                                            </i>\n                                                \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\">\n                                            </i>\n                                            \n                                            <i *ngIf=\"(type.isAbstract)\" class=\"fa fa-plus clickable pull-right\"\n                                                (click)=\"createGeoObjectType(type, false, typeByOrg.org)\"\n                                                title=\"add\">\n                                            </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t\t<accordion-group [isOpen]='true' class=\"sidebar-section\" style=\"border-radius: 0;\" [panelClass]=\"'hierarchy-sidebar-content'\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.hierarchies\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let hierarchyByOrg of filteredHierarchiesByOrg\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{hierarchyByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || hierarchyByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createHierarchy()\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newHierarchy\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li *ngFor=\"let hierarchy of hierarchyByOrg.hierarchies;\" [id]=\"hierarchy.code\"\n\t\t\t\t\t\t\t\t\t\tclass=\"list-group-item hier-li-item clickable\"\n\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'primary': (currentHierarchy != null && hierarchy.code === currentHierarchy.code), 'active': isActive(hierarchy)}\"\n\t\t\t\t\t\t\t\t\t\t(click)=\"hierarchyOnClick($event,hierarchy)\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i> {{hierarchy.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i *ngIf=\"!excludeHierarchyTypeDeletes(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteHierarchyType(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t</accordion>\n\t\t\t</nav>\n\n\t\t\t<div class=\"col-md-9 hierarchy-content\">\n\t\t\t\t<div id=\"overflow-div\">\n\n\t\t\t\t\t<div *ngIf=\"currentHierarchy != null && isOrganizationRA(currentHierarchy.organizationCode, true) && (currentHierarchy.rootGeoObjectTypes == null || currentHierarchy.rootGeoObjectTypes.length == 0)\"\n\t\t\t\t\t\tid=\"emptyHierarchyDropzone\" class=\"drop-box-container\">\n\t\t\t\t\t\t<div class=\"hierarchy-drop-box\">\n\t\t\t\t\t\t\t<div class=\"inner-drop-box\">\n\t\t\t\t\t\t\t\t<p class=\"upload-text\">\n\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.content.dragGotToHierarchy\"></localize>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"svgHolder\">\n\t\t\t\t\t\t<!-- <svg id=\"graph\" style=\"width:1200px; height:750px\"></svg> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"NodeTooltip\" class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-form\">\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                      <label>\n                        <localize key=\"hierarchy.nodeTooltip.hierarchy\"></localize>\n                      </label>\n                    </div>\n                    <div class=\"holder\">\n                      <label id=\"hierarchyLabel\"></label>\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\t\t\t\t\t<!-- \n\t      <div class=\"col-md-4\">\n\t        <h3> \n\t            <localize key=\"hierarchy.current.management.panel.title\"></localize> \n\t            <span *ngIf=\"currentHierarchy\"> {{currentHierarchy.label.localizedValue}}</span>\n\t        </h3>\n\t        <hr>\n\t        <div *ngIf=\"nodes.length > 0\" class=\"tree\">\n\t          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n\t        </div>\n\t        <div *ngIf=\"currentHierarchy && nodes.length === 0\">\n\t          <div>\n\t            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"isRA()\" (click)=\"addChildAndRootToHierarchy()\"><localize key=\"hierarchy.current.management.panel.button.add\"></localize></button>\n\t          </div>\n\t        </div>\n\t      </div>\n\t      -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { ManageGeoObjectTypeModalState } from '@registry/model/registry';\r\n\r\n@Injectable()\r\nexport class GeoObjectTypeManagementService {\r\n\r\n\tmodalState: ManageGeoObjectTypeModalState;\r\n\tprivate modalStateChangedSource = new Subject<ManageGeoObjectTypeModalState>();\r\n\tmodalStepChange = this.modalStateChangedSource.asObservable();\r\n\r\n\tconstructor() { }\r\n\r\n\tpublic getModalState(): ManageGeoObjectTypeModalState {\r\n\t\treturn this.modalState;\r\n\t}\r\n\r\n\tpublic setModalState(state: ManageGeoObjectTypeModalState): void {\r\n\t\tthis.modalState = state;\r\n\r\n\t\tthis.modalStateChangedSource.next(this.modalState);\r\n\t}\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { TreeEntity } from '@registry/model/registry';\nimport { EventService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HierarchyService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetHierarchyTypes(types: any): Promise<HierarchyType[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('types', JSON.stringify(types));\n\n\t\treturn this.http\n\t\t\t.get<HierarchyType[]>(acp + '/cgr/hierarchytype/get-all', { params: params })\n\t\t\t.toPromise();\n\t}\n\n\taddChildToHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/add', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tinsertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/insertBetweenTypes', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, middleGeoObjectTypeCode: middleGeoObjectTypeCode, youngestGeoObjectTypeCode: youngestGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveFromHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/remove', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcreateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/create', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tupdateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/update', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tdeleteHierarchyType(code: string): Promise<TreeEntity> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<TreeEntity>(acp + '/cgr/hierarchytype/delete', { 'code': code }, { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise()\n\t}\n\n\tsetInheritedHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/setInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'inheritedHierarchyTypeCode': inheritedHierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveInheritedHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/removeInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","import { Component, OnInit, AfterViewInit, ElementRef, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { NgControl, Validators, FormBuilder } from '@angular/forms';\n\nimport { GeoObjectType, Attribute } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component({\n\tselector: 'attribute-input',\n\ttemplateUrl: './attribute-input.component.html',\n\tstyleUrls: ['./attribute-input.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms'))\n\t\t\t//   transition('show => none', animate('100ms'))\n\t\t])\n\t]\n})\nexport class AttributeInputComponent implements OnInit {\n\n\t@Input() disableCodeField: boolean = false;\n\t@Input() excludeDescription: boolean = false;\n\t@Input() isDecimal: boolean = false;\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() attributeChange = new EventEmitter<Attribute>();\n\tmessage: string = null;\n\n\tstate: string = 'none';\n\n\tconstructor(private hierarchyService: HierarchyService, private cdr: ChangeDetectorRef) {\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnChanges() {\n\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\ttoggleIsUnique(): void {\n\t\tthis.attribute.unique = !this.attribute.unique;\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.attribute.code) {\n\n\t\t\t// if code has a space\n\t\t\tif (this.attribute.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.attribute.label.localeValues[0].value.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal) {\n\t\t\t\tconsole.log(this.attribute);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isDecimal && (this.attribute.precision == null || this.attribute.precision.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal && (this.attribute.scale == null || this.attribute.scale.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","<div >\n  <div class=\"row-holder\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.code\"></localize>\n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input autofocus type=\"text\" [disabled]=\"disableCodeField\" [(ngModel)]=\"attribute.code\" name=\"code\" required geoObjectAttributeCode>\n      </span>\n    </div>\n  </div>\n\n  <localized-input [(value)]=\"attribute.label\" key=\"data.property.label.label\"></localized-input>\n  <localized-text *ngIf=\"!excludeDescription\" [(value)]=\"attribute.description\" key=\"data.property.label.description\"></localized-text>\n\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.length\"></localize>        \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.precision\" name=\"precision\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.decimal\"></localize>      \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.scale\" name=\"scale\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'publish-modal',\n\ttemplateUrl: './publish-modal.component.html',\n\tstyleUrls: []\n})\nexport class PublishModalComponent implements OnInit {\n\tcurrentDate : Date = new Date();\n\tmessage: string = null;\n\tmaster: any;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonMasterListChange: Subject<MasterList>;\n\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n    /*\n     * List of geo object types from the system\n     */\n\treadonly: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\tedit: boolean = false;\n\n\tisNew: boolean = false;\n\n\tconstructor(private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef, private authService: AuthService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.onMasterListChange = new Subject();\n\n\t\tif (this.master == null || !this.readonly) {\n\t\t\tthis.iService.listGeoObjectTypes(true).then(types => {\n\n\t\t\t\tvar myOrgTypes = [];\n\t\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\t\tconst orgCode = types[i].orgCode;\n\t\t\t\t\tconst typeCode = types[i].superTypeCode != null ? types[i].superTypeCode : types[i].code;\n\n\t\t\t\t\tif (this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.types = myOrgTypes;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.master = {\n\t\t\t\toid: null,\n\t\t\t\ttypeCode: '',\n\t\t\t\tdisplayLabel: this.lService.create(),\n\t\t\t\tcode: '',\n\t\t\t\trepresentativityDate: null,\n\t\t\t\tpublishingStartDate: null,\n\t\t\t\tpublishDate: null,\n\t\t\t\tlistAbstract: '',\n\t\t\t\tprocess: '',\n\t\t\t\tprogress: '',\n\t\t\t\taccessConstraints: '',\n\t\t\t\tuseConstraints: '',\n\t\t\t\tacknowledgements: '',\n\t\t\t\tdisclaimer: '',\n\t\t\t\tcontactName: '',\n\t\t\t\torganization: '',\n\t\t\t\ttelephoneNumber: '',\n\t\t\t\temail: '',\n\t\t\t\thierarchies: [],\n\t\t\t\tsubtypeHierarchies: [],\n\t\t\t\tleaf: false,\n\t\t\t\tfrequency: 'ANNUAL',\n\t\t\t\tisMaster: null,\n\t\t\t\tvisibility: null\n\t\t\t};\n\t\t}\n\t}\n\n\tinit(org: MasterListByOrg): void {\n\t\tthis.master.organization = org.oid;\n\t}\n\n\tgetIsDisabled(event): boolean {\n\t\tlet elClasses = event.target.classList;\n\t\tfor (let i = 0; i < elClasses.length; i++) {\n\t\t\tlet c = elClasses[i];\n\t\t\tif (c === 'disabled') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tonChange(): void {\n\n\t\tif (this.master.typeCode != null && this.master.typeCode.length > 0) {\n\t\t\tthis.iService.getHierarchiesForType(this.master.typeCode, true).then(hierarchies => {\n\t\t\t\tthis.master.hierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.iService.getHierarchiesForSubtypes(this.master.typeCode, false).then(hierarchies => {\n\t\t\t\tthis.master.subtypeHierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.master.hierarchies = [];\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.createMasterList(this.master).then(response => {\n\n\t\t\tthis.onMasterListChange.next(response);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCancel(): void {\n\t\tthis.bsModalRef.hide()\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n        <h1 *ngIf=\"isNew\">\n            <localize key=\"type.publish.title\"></localize>\n        </h1>\n        <h1 *ngIf=\"!isNew\">\n            {{master.displayLabel.localizedValue}}\n            <localize key=\"type.publish.view.title\"></localize>\n        </h1>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            <div class=\"row-holder\" *ngFor=\"let localeValue of master.displayLabel.localeValues\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.label\"></localize> \n                    <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && !(readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <select id=\"typeCode\" name=\"typeCode\" class=\"select-area\" [(ngModel)]=\"master.typeCode\" (change)=\"onChange($event)\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && (readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                  <input [(ngModel)]=\"master.typeLabel.localizedValue\" name=\"typeCode\" type=\"text\" class=\"form-control\" disabled />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.code\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.code\" name=\"code\" type=\"text\" class=\"form-control\" [disabled]=\"readonly || edit\" required />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.frequency\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"frequency\" [(ngModel)]=\"master.frequency\" [disabled]=\"readonly\" required #frequency=\"ngModel\">\n                        <option></option>\n                        <option value=\"ANNUAL\"><localize key=\"georegistry.frequency.annual\"></localize></option>\n                        <option value=\"BIANNUAL\"><localize key=\"georegistry.frequency.biannual\"></localize></option>\n                        <option value=\"QUARTER\"><localize key=\"georegistry.frequency.quarter\"></localize></option>\n                        <option value=\"MONTHLY\"><localize key=\"georegistry.frequency.monthly\"></localize></option>\n                    </select>                    \n                    <small *ngIf=\"(edit && frequency.dirty)\" class=\"form-text text-danger\"><localize key=\"masterlist.change.frequency\"></localize></small>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.publishingStartDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishingStartDate\" name=\"publishingStartDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" max=\"{{currentDate|date:'yyyy-MM-dd'}}\" />\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"masterlist.visibility\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"visibility\" [(ngModel)]=\"master.visibility\" [disabled]=\"readonly\" required>\n                        <option></option>\n                        <option value=\"PUBLIC\"><localize key=\"masterlist.public\"></localize></option>                        \n                        <option value=\"PRIVATE\"><localize key=\"masterlist.private\"></localize></option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.ismaster\"></localize> </label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"row\">\n                        <div class=\"check-block\" style=\"margin: 10px;\">\n\n                            <div (click)=\"getIsDisabled($event) ? null : master.isMaster = !master.isMaster\" name=\"isMaster\" [ngClass]=\"{'chk-checked' : master.isMaster, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\">\n                                <span></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- RepresentativityDate adn publishDate are being removed from the form but not \n            the backend at this point because there's some discussion around the need for these\n            in the future.  - Justin Lewis Feb 27, 2020 -->\n            <!-- <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.representativityDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.representativityDate\" name=\"representativityDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.publishDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishDate\" name=\"publishDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div> -->\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.listAbstract\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.listAbstract\" name=\"listAbstract\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.process\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.process\" name=\"process\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.progress\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.progress\" name=\"progress\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.accessConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.useConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.acknowledgements\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.acknowledgements\" name=\"acknowledgements\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.disclaimer\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.disclaimer\" name=\"disclaimer\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.contact\"></localize>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.contactName\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.contactName\" name=\"contactName\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.telephoneNumber\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.telephoneNumber\" name=\"telephoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.email\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n\n            <div class=\"row-holder\" *ngIf=\"master.hierarchies.length > 0\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.parents\"></localize>\n                </div>\n            </div>\n\n            <div *ngFor=\"let hierarchy of master.hierarchies\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> {{hierarchy.label}} </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let parent of hierarchy.parents\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : parent.selected = !parent.selected\" [ngClass]=\"{'chk-checked' : parent.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{parent.label}}</label>\n\n                                <!-- <input [(ngModel)]=\"parent.selected\" [name]=\"hierarchy.code + parent.code\" type=\"checkbox\" class=\"form-check\" [disabled]=\"readonly || edit\"/> -->\n                            </div>\n                            <!-- <div class=\"holder\">{{parent.label}}</div> -->\n                            <!-- </div> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"master.subtypeHierarchies.length > 0\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> <localize key=\"masterlist.subtypeHierarchies\"></localize> </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let hierarchy of master.subtypeHierarchies\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : hierarchy.selected = !hierarchy.selected\" [ngClass]=\"{'chk-checked' : hierarchy.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{hierarchy.label}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize [key]=\"readonly ? 'io.back' : 'io.cancel'\"></localize>\n                        </button>\n                        <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                            <localize key=\"io.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n\tstate\n} from '@angular/animations';\n\nimport { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\nimport { AuthService } from '@shared/service';\n\nimport { ManageVersionsModalComponent } from './manage-versions-modal.component';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, AttributeTerm, AttributeDecimal, Term, PRESENT } from '@registry/model/registry';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'geoobject-shared-attribute-editor',\n\ttemplateUrl: './geoobject-shared-attribute-editor.component.html',\n\tstyleUrls: ['./geoobject-shared-attribute-editor.css'],\n\tproviders: [DatePipe],\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]),\n\t\t\ttrigger('slide', [\n\t\t\t\tstate('left', style({ left: 0 })),\n      \t\t\tstate('right', style({ left: '100%' })),\n      \t\t\ttransition('* => *', animate(200))\n\t\t\t])\n\t]]\n})\n\n/**\n * This component is shared between:\n * - crtable (create-update-geo-object action detail)\n * - change-request (for submitting change requests)\n * - master list geoobject editing widget\n * \n * Be wary of changing this component for one usecase and breaking other usecases!\n */\nexport class GeoObjectSharedAttributeEditorComponent implements OnInit, OnChanges {\n\t\n\tisContributorOnly: boolean = false;\n\n\tprivate bsModalRef: BsModalRef;\n\t\n\t@Input() animate: boolean = false;\n\n    /*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\t@Input() preGeoObject: GeoObjectOverTime = null;\n\n\t/*\n \t* The state of the GeoObject being modified\n \t*/\n\t@Input() postGeoObject: GeoObjectOverTime = null;\n\n\n\tcalculatedPreObject: any = {};\n\n\tcalculatedPostObject: any = {};\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\t@Input() attributeExcludes: string[] = [];\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() isNew: boolean = false;\n\n\t@Input() isEditingGeometries = false;\n\n\t@Input() isGeometryInlined = false;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Output() onManageVersion = new EventEmitter<Attribute>();\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() customEvent: boolean = false;\n\n\tmodifiedTermOption: Term = null;\n\tcurrentTermOption: Term = null;\n\tisValid: boolean = true;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\"];\n\n\t@ViewChild(\"attributeForm\") attributeForm;\n\n\tconstructor(private modalService: BsModalService, private lService: LocalizationService, private authService: AuthService) {\n\t\tthis.isContributorOnly = this.authService.isContributerOnly()\n\t}\n\n\tngOnInit(): void {\n\n\t\tif (this.attributeExcludes != null) {\n\t\t\tthis.geoObjectAttributeExcludes.push.apply(this.geoObjectAttributeExcludes, this.attributeExcludes);\n\n\t\t\tif (!this.isGeometryInlined) {\n\t\t\t\tthis.geoObjectAttributeExcludes.push(\"geometry\");\n\t\t\t}\n\t\t}\n\n\t\tlet geomAttr = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeomAttr = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\t\tif (geomAttr == null) {\n\t\t\tlet geometry: Attribute = new Attribute(\"geometry\", \"geometry\", new LocalizedValue(\"Geometry\", null), new LocalizedValue(\"Geometry\", null), true, false, false, true);\n\t\t\tthis.geoObjectType.attributes.push(geometry);\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.attributeForm.statusChanges.subscribe(result => {\n\t\t\tthis.isValid = (result === \"VALID\" || result === \"DISABLED\");\n\n\t\t\tthis.valid.emit(this.isValid);\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\t\n\t\tconsole.log(\"ng changes: \")\n\t\t\n\t\tif (changes['preGeoObject'] || changes['preGeoObject']) {\n\n\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\n\t\t\tif (this.postGeoObject == null) {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // Object.assign is a shallow copy. We want a deep copy.\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.postGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\t\t\t}\n\n\t\t\tthis.calculate();\n\t\t}\n\t\telse if (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): void {\n\t\tthis.calculatedPreObject = this.calculateCurrent(this.preGeoObject);\n\t\tthis.calculatedPostObject = this.calculateCurrent(this.postGeoObject);\n\t\t\n\t\tif (this.geometryEditor != null) {\n\t\t\tthis.geometryEditor.reload();\n\t\t}\n\t}\n\n\tcalculateCurrent(goot: GeoObjectOverTime): any {\n\t\tconst object = {};\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\tobject[attr.code] = null;\n\n\t\t\tif (attr.type === 'local') {\n\t\t\t\tobject[attr.code] =\n\t\t\t\t{\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: this.lService.create()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\tlet values = goot.attributes[attr.code].values;\n\n\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: JSON.parse(JSON.stringify(vot.value))\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value[0]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobject[attr.code] = goot.attributes[attr.code];\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.isChangeOverTime && object[attr.code] == null) {\n\t\t\t\tobject[attr.code] = {\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n\thandleChangeCode(e: any): void {\n\t\tthis.postGeoObject.attributes.code = this.calculatedPostObject['code'];\n\t\t\n\t\tthis.onChange.emit(this.postGeoObject);\n\t}\n\n\tonManageAttributeVersions(attribute: Attribute): void {\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(attribute);\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ManageVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\t// TODO: sending the properties like this is wrong\n\t\t\tthis.bsModalRef.content.geoObjectOverTime = this.postGeoObject;\n\t\t\tthis.bsModalRef.content.geoObjectType = this.geoObjectType;\n\t\t\tthis.bsModalRef.content.isNewGeoObject = this.isNew;\n\t\t\tthis.bsModalRef.content.attribute = attribute;\n\t\t\tthis.bsModalRef.content.onAttributeVersionChange.subscribe(versionObj => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t\t//this.bsModalRef.content.readonly = !this.isContributorOnly;\n\t\t\tthis.bsModalRef.content.readonly = this.readOnly;\n\t\t}\n\t}\n\n\tonManageGeometryVersions(): void {\n\t\tlet geometry = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeometry = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\n\t\tthis.onManageAttributeVersions(geometry);\n\t}\n\n\tisDifferentText(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value.trim() !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tisDifferentValue(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tonSelectPropertyOption(event: any, option: any): void {\n\t\tthis.currentTermOption = JSON.parse(JSON.stringify(this.modifiedTermOption));\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn attrOpts;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisStatusChanged(post, pre) {\n\n\t\tif (pre != null && post == null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (pre == null || post == null || pre.length == 0 || post.length == 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar preCompare = pre;\n\t\tif (Array.isArray(pre)) {\n\t\t\tpreCompare = pre[0];\n\t\t}\n\n\t\tvar postCompare = post;\n\t\tif (Array.isArray(post)) {\n\t\t\tpostCompare = post[0];\n\t\t}\n\n\t\treturn preCompare !== postCompare;\n\t}\n\n\tgetTypeDefinition(key: string): string {\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === key) {\n\t\t\t\treturn attr.type;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn this.isValid;\n\t}\n\n\tpublic getGeoObject(): any {\n\t\treturn this.postGeoObject;\n\t}\n}\n","<form class=\"modal-form\" name=\"geobject-shared-attribute-editor\" #attributeForm=\"ngForm\">\n  <fieldset>\n    <!-- <div class=\"col-md-12\"> -->\n    <div *ngIf=\"preGeoObject\">\n      <div *ngIf=\"!this.isEditingGeometries\" class=\"row\">\n        <!-- <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"change.request.geoobject.update.form.label\"></localize>\n                        </label>\n                    </div> -->\n        <div class=\"col-md-12\">\n          <span class=\"text\"></span>\n          <ul class=\"list-group\">\n            <li class=\"list-group-item\" style=\"text-align:left;border:none;padding:0;\" *ngFor=\"let attr of geoObjectType.attributes | geoObjectAttributeExcludesFilter:geoObjectAttributeExcludes; let i = index\">\n\n              <div class=\"panel panel-default\">\n                <div class=\"panel-heading\">\n                  <h4 *ngIf=\"attr.code !== 'geometry'\" style=\"margin:0;\">\n                    <span *ngIf=\"attr.code === 'code'\"> \n                      <localize key=\"geoobject.code.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code === 'displayLabel'\"> \n                      <localize key=\"geoobject.displayLabel.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code !== 'code' && attr.code !== 'displayLabel'\"> {{attr.label.localizedValue}} </span> \n                    \n<!--                     <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\" style=\"color:#BABABA;font-style:italic;\">  -->\n<!--                       ( <p style=\"font-size:14px;display:inline-block;\"> -->\n<!--                           {{calculatedPostObject[attr.code].startDate}} -->\n<!--                         </p> -->\n<!--                       - -->\n<!--                       <p *ngIf=\"calculatedPostObject[attr.code].endDate !== 'Present'\" style=\"font-size:14px;display:inline-block;\"> -->\n<!--                         {{calculatedPostObject[attr.code].endDate}} -->\n<!--                       </p> -->\n<!--                       <p *ngIf=\"calculatedPostObject[attr.code].endDate === 'Present'\" style=\"font-size:14px;display:inline-block;\"> -->\n<!--                         <localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize> -->\n<!--                       </p> -->\n<!--                       ) -->\n<!--                     </span> -->\n                  </h4>\n\n                  <h4 *ngIf=\"attr.code === 'geometry'\">\n                    <localize key=\"shared.attributes.attribute.geometry.label\"></localize>\n                    <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\"> \n                      ({{calculatedPostObject[attr.code].startDate}} - {{calculatedPostObject[attr.code].endDate}}) \n                    </span>\n                  </h4>\n\n                </div>\n\n                <div class=\"panel-body\">\n\n                  <div *ngIf=\"attr.code === 'code'\">\n                    <input *ngIf=\"postGeoObject\" type=\"text\" [(ngModel)]=\"calculatedPostObject[attr.code]\" (change)=\"handleChangeCode($event)\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" [disabled]=\"!isNew\" required>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'character' && attr.code !== 'code'\">\n                    <div class=\"input-group\">\n                      <input *ngIf=\"postGeoObject\" [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"text\" [ngModel]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon\">\n                        <i class=\"fa fa-pencil clickable\" (click)=\"onManageAttributeVersions(attr)\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentText(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'local'\">\n                    <ul class=\"list-group\" *ngIf=\"calculatedPostObject[attr.code].value != null\">\n                      <li class=\"list-group-item\" *ngFor=\"let localeValue of calculatedPostObject[attr.code].value.localeValues; let i = index\">\n                        <div class=\"panel panel-default\">\n                          <div class=\"panel-heading\">\n                            <h5><convert-key-label [key]=\"localeValue.locale\"></convert-key-label></h5>\n                          </div>\n\n                          <div class=\"panel-body\">\n\n                            <div class=\"input-group\">\n                              <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" [required]=\"localeValue.locale === 'defaultLocale'\" type=\"text\" [ngModel]=\"localeValue.value\" [name]=\"'mod-' + attr.code + '-' + localeValue.locale\" > \n                              <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                              </span>\n                            </div>\n\n\n                            <p class=\"warning-text\" *ngIf=\"!isNew && calculatedPreObject[attr.code].value != null && localeValue.value != null && localeValue.value.trim() !== calculatedPreObject[attr.code].value.localeValues[i].value\">\n                              <localize key=\"change.request.changed.value.prefix\"></localize>\n                              {{calculatedPreObject[attr.code].value.localeValues[i].value}}\n                            </p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'date'\">\n\n                    <div class=\"input-group\">\n                      <input type=\"date\" [ngClass]=\"{'input-group-read-only': readOnly}\" [ngModel]=\"calculatedPostObject[attr.code].value | date:'yyyy-MM-dd'\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value | date}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'boolean'\">\n                  \n\n                    <div class=\"input-group\" >\n                      <div [ngClass]=\"{'input-group-read-only': readOnly}\" class=\"radio-group\">\n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"calculatedPostObject[attr.code].value\" disabled [value]=\"true\" id=\"mod-{{attr.code}}-true\" name=\"mod-{{attr.code}}-true\"> \n                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                        </label> \n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"!calculatedPostObject[attr.code].value\" disabled [value]=\"false\" id=\"mod-{{attr.code}}-false\" name=\"mod-{{attr.code}}-false\"> \n                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                        </label> \n                      </div>\n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'float'\">\n\n                    <div class=\"input-group\">\n                      <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'integer'\">\n                  \n                    <div class=\"input-group\">\n                      <input [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" disabled id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'term'\">\n\n                    <div class=\"input-group\">\n                      <select [ngClass]=\"{'input-group-read-only': readOnly}\" id=\"mod-{{attr.code}}\" name=\"mod-term-{{attr.code}}\" class=\"select-area\" style=\"float: none;\" disabled [(ngModel)]=\"calculatedPostObject[attr.code].value\">\n                        <option value=\"\"></option>\n                        <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attr.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                      </select> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isStatusChanged(calculatedPostObject[attr.code].value, calculatedPreObject[attr.code].value)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'geometry' && this.isGeometryInlined\">\n<!--                     <geoobject-editor-map  -->\n<!--                       #geometryEditor  -->\n<!--                       [geometryType]=\"this.geoObjectType.geometryType\"  -->\n<!--                       [readOnly]=\"readOnly\" -->\n<!--                       [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\" -->\n<!--                       [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"  -->\n<!--                       [bboxCode]=\"this.preGeoObject.attributes.code\" -->\n<!--                       [bboxType]=\"this.geoObjectType.code\" -->\n<!--                       (onClickEdit)=\"this.onManageGeometryVersions()\"  -->\n<!--                       [bboxDate]=\"this.forDate.toISOString().split('T')[0]\">  -->\n<!--                     </geoobject-editor-map> -->\n\n                      <div class=\"button-holder text-left\" style=\"margin:0;\">\n                        <button type=\"submit\" style=\"width:100%;\" (click)=\"this.onManageGeometryVersions()\" class=\"btn btn-primary\" role=\"button\">\n                          <localize *ngIf=\"!readOnly\" key=\"modal.button.edit\"></localize>\n                          <localize *ngIf=\"readOnly\" key=\"modal.button.view\"></localize>\n                        </button>\n                      </div>\n                  </div>\n\n                  <!--                   <div *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"button-holder\" > -->\n                  <!--                     <button type=\"submit\" style=\"\" (click)=\"onManageAttributeVersions(attr)\" class=\"btn btn-primary\" role=\"button\"> -->\n                  <!--                       <localize key=\"changeovertime.manageVersions.button.label\"></localize> -->\n                  <!--                     </button> -->\n                  <!--                   </div> -->\n\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div *ngIf=\"this.isEditingGeometries && !this.isGeometryInlined\">\n          <geoobject-editor-map \n            #geometryEditor\n            [geometryType]=\"this.geoObjectType.geometryType\"\n            [readOnly]=\"readOnly\" \n            [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\"\n            [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"\n            [bboxCode]=\"this.preGeoObject.attributes.code\"\n            [bboxType]=\"this.geoObjectType.code\"\n            (onClickEdit)=\"this.onManageGeometryVersions()\"\n            [bboxDate]=\"this.forDate.toISOString().split('T')[0]\"\n          > </geoobject-editor-map>\n      </div>\n    </div>\n    <!-- </div> -->\n  </fieldset>\n</form>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-input',\n    templateUrl: './localized-input.component.html',\n    styleUrls: [],\n} )\nexport class LocalizedInputComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","<div class=\"row-holder\" *ngFor=\"let localeValue of value.localeValues\">\n  <div class=\"label-holder\">\n    <label>\n      <localize [key]=\"key\"></localize>\n      <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n    </label>\n  </div>\n  <div class=\"holder\">\n    <span class=\"text\">\n      <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"disabled\" [required]=\"localeValue.locale === 'defaultLocale'\">\n    </span>\n  </div>\n</div>\n","export default class Utils {\n\t\n\t/**\n\t * \n\t * @param arr \n\t */\n\tstatic removeStatuses( arr: any[] ): any[] {\n\t      var newArray = [];\n\t      \n\t      for ( var i = 0; i < arr.length; ++i ) {\n\t        if (! (arr[i].code === \"CGR:Status-New\"\n\t             || arr[i].code === \"CGR:Status-Pending\"))\n\t        {\n\t          newArray.push(arr[i]);\n\t        }\n\t      }\n\t      \n\t      return newArray;\n\t}\n\t\n\n\t/**\n\t * \n\t * @param dateObj \n\t */\n\tstatic formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + ( month < 10 ? \"0\" : \"\" ) + month + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n\tstatic dateRangeOverlaps(a_start: number, a_end: number, b_start: number, b_end: number): boolean {\n\t\tif (a_start <= b_start && b_start <= a_end) return true; // b starts in a\n\t\tif (a_start <= b_end && b_end <= a_end) return true; // b ends in a\n\t\tif (b_start < a_start && a_end < b_end) return true; // a in b\n\t\treturn false;\n\t}\n\t\n\tstatic dateEndBeforeStart(start: number, end: number): boolean {\n\t\tif (end < start) return true; // end date is before start date\n\t\treturn false;\n\t}\n    \n}","\nimport { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'simple-edit-control',\n\ttemplateUrl: './simple-edit-control.component.html',\n\tstyleUrls: ['./simple-edit-control.css']\n})\nexport class SimpleEditControl {\n\telRef: ElementRef\n\n\t@Output() editEmitter = new EventEmitter<void>();\n\n\t@Input() visible: boolean = true;\n\t@Input() editSessionEnabled: boolean = false;\n\t@Input() save: boolean = false;\n\n\tconstructor(elRef: ElementRef) {\n\t\tthis.elRef = elRef;\n\t}\n\n\tonAdd(map): any {\n\t\treturn this.elRef.nativeElement;\n\t}\n\n\tonRemove(map): void {\n\t\tthis.elRef.nativeElement.remove();\n\t}\n\n\tonClick(): void {\n\t\tthis.editEmitter.emit();\n\t}\n}\n","<div class=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\n  <button *ngIf=\"editSessionEnabled\" \n    class=\"fa\" \n    [ngClass]=\"{'fa-pencil-square-o':!save, 'fa-save':save}\" \n    style=\"color: black; font-size: 18px;\" \n    [title]=\"'changeovertime.manageVersions.button.label' | localize\" \n    (click)=\"this.onClick();\">\n  </button>\n  <div *ngIf=\"editSessionEnabled\" class=\"map-button-info-hint-wrapper\">\n    <div class=\"map-button-info-hint\">\n      <localize key=\"map.button.info.hint\"></localize>\n    </div>\n    <div class=\"map-button-pointer\"></div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\n\nimport { ChangeRequest, AbstractAction } from '@registry/model/crtable';\nimport { EventService } from '@shared/service';\nimport { GeoObject } from '@registry/model/registry';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ChangeRequestService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\t  getAllActions( requestId: string ): Promise<AbstractAction[]> {\n        let params: HttpParams = new HttpParams();\n\n        if ( requestId != null ) {\n            params = params.set( 'requestId', requestId );\n\t\t}\n\t\t\n//        this.eventService.start();\n\n        return this.http\n            .get<AbstractAction[]>( acp + '/changerequest/getAllActions', { params: params } )\n\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    applyAction( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyAction', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\tapplyActionStatusProperties( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyActionStatusProperties', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\t\n    lockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/lockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    unlockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/unlockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getAllRequests(filter: string): Promise<ChangeRequest[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\n\t\tparams = params.set('filter', filter );\n\n        return this.http.get<ChangeRequest[]>( acp + '/changerequest/get-all-requests', { params: params } )\n            .toPromise();\n    }\n\n    getRequestDetails( requestId: string ): Promise<ChangeRequest> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'requestId', requestId );\n\n        this.eventService.start();\n\n        return this.http.get<ChangeRequest>( acp + '/changerequest/get-request-details', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tconfirmChangeRequest( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/confirm-change-request', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    execute( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/execute-actions', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    delete( requestId: string ): Promise<string> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<string>( acp + '/changerequest/delete', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    rejectAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/reject-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    approveAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/approve-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    submitChangeRequest( actions: string ): Promise<GeoObject> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'actions', actions )\n\n        this.eventService.start();\n\n        return this.http.post<GeoObject>( acp + '/cgr/submitChangeRequest', {actions: actions}, { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tdeleteFile(actionId: string, fileId: string): Promise<ImportConfiguration> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<ImportConfiguration>(acp + '/changerequest/delete-file-action', JSON.stringify({ actionOid: actionId, vfOid: fileId }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ImportConfiguration, Synonym, Location, Term } from '@registry/model/io';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: string;\r\n\r\n@Injectable()\r\nexport class IOService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\timportSpreadsheet(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcancelImport(configuration: ImportConfiguration): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/cancel-import', JSON.stringify({ configuration: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\timportShapefile(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tlistGeoObjectTypes(includeAbstractTypes: boolean): Promise<{ label: string, code: string, orgCode: string, superTypeCode?: string }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('includeAbstractTypes', includeAbstractTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, orgCode: string }[]>(acp + '/cgr/geoobjecttype/list-types', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetTypeAncestors(code: string, hierarchyCode: string, includeInheritedTypes: boolean): Promise<Location[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\tparams = params.set('includeInheritedTypes', includeInheritedTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Location[]>(acp + '/cgr/geoobjecttype/get-ancestors', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForType(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForSubtypes(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-subtype-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, hierarchy: string): Promise<any> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = parent;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectSynonym(entityId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/geo-synonym/createGeoEntitySynonym', JSON.stringify({ entityId: entityId, label: label }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectSynonym(synonymId: string, vOid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geo-synonym/deleteGeoEntitySynonym', JSON.stringify({ synonymId: synonymId, vOid: vOid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetTermSuggestions(mdAttributeId: string, text: string, limit: string): Promise<{ text: string, data: any }[]> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('mdAttributeId', mdAttributeId);\r\n\t\tparams = params.set('text', text);\r\n\t\tparams = params.set('limit', limit);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ text: string, data: any }[]>(acp + '/uploader/getClassifierSuggestions', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTermSynonym(classifierId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ classifierId: classifierId, label: label });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/uploader/createClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteTermSynonym(synonymId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ synonymId: synonymId });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/uploader/deleteClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTerm(label: string, code: string, parentTermCode: string): Promise<Term> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { parentTermCode: parentTermCode, termJSON: { label: label, code: code } };\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tremoveTerm(parentTermCode: string, termCode: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '@shared/service';\n\nimport { AllLocaleInfo } from '@registry/model/localization-manager';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\n    getNewLocaleInfo(): Promise<AllLocaleInfo> {\n        return this.http\n            .get<AllLocaleInfo>( acp + '/localization/getNewLocaleInformation' )\n            .toPromise();\n    }\n\n    installLocale( language: string, country: string, variant: string ): Promise<void> {\n        let params: HttpParams = new HttpParams();\n\n        if ( language != null ) {\n            params = params.set( 'language', language );\n        }\n\n        if ( country != null ) {\n            params = params.set( 'country', country );\n        }\n\n        if ( variant != null ) {\n            params = params.set( 'variant', variant );\n        }\n\n        return this.http\n            .get<void>( acp + '/localization/installLocale', { params: params } )\n            .toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\nimport * as mapboxgl from 'mapbox-gl';\r\n\r\nimport { LocationInformation } from '@registry/model/location-manager';\r\nimport { EventService } from '@shared/service';\r\nimport { GeoObject } from '@registry/model/registry';\n\r\ndeclare var acp: any;\r\n\r\n@Injectable()\r\nexport class MapService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) {\r\n\t\t(mapboxgl as any).accessToken = 'pk.eyJ1IjoidGVycmFmcmFtZSIsImEiOiJjanZxNWE5bWkwazYwNGFtb3loOGxsbjR1In0.ZNEwT-pBnGookEb-BF_jQQ';\r\n\t}\r\n\r\n\r\n\troots(typeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tif (typeCode != null) {\r\n\t\t\tparams = params.set('typeCode', typeCode);\r\n\t\t}\r\n\r\n\t\tif (hierarchyCode != null) {\r\n\t\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<LocationInformation>(acp + '/registrylocation/roots', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n/*\r\n\tselect(code: string, typeCode: string, childTypeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n    let params: HttpParams = new HttpParams();\r\n    params = params.set('code', code);\r\n    params = params.set('typeCode', typeCode);\r\n\r\n    if (date != null) {\r\n      params = params.set('date', date);\r\n    }\r\n\r\n    if (childTypeCode != null) {\r\n      params = params.set('childTypeCode', childTypeCode);\r\n    }\r\n\r\n    if (hierarchyCode != null) {\r\n      params = params.set('hierarchyCode', hierarchyCode);\r\n    }\r\n\r\n    this.eventService.start();\r\n\r\n    return this.http\r\n      .get<LocationInformation>(acp + '/registrylocation/select', { params: params })\r\n      .pipe(finalize(() => {\r\n        this.eventService.complete();\r\n      }))\r\n      .toPromise();\r\n  }\r\n\t*/\r\n\r\n\tsearch(text: string, date: string): Promise<{ type: string, features: GeoObject[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('text', text);\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ type: string, features: GeoObject[] }>(acp + '/registrylocation/search', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport {\n\tGeoObject, GeoObjectType, Attribute, Term, MasterList, MasterListVersion, ParentTreeNode,\r\n\tChildTreeNode, ValueOverTime, GeoObjectOverTime, HierarchyOverTime, ScheduledJob, PaginationPage, MasterListByOrg\n} from '@registry/model/registry';\r\n\r\nimport { HierarchyType } from '@registry/model/hierarchy';\r\nimport { Progress } from '@shared/model/progress';\r\n\r\nimport { Organization, OAuthServer } from '@shared/model/core';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class RegistryService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tinit(): Promise<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }> {\r\n\t\treturn this.http.get<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }>(acp + '/cgr/init')\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\t// param types: array of GeoObjectType codes. If empty array then all GeoObjectType objects are returned.\r\n\tgetGeoObjectTypes(types: string[], hierarchies: string[]): Promise<GeoObjectType[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\r\n\t\tif (types != null) {\r\n\t\t\tparams = params.set('types', JSON.stringify(types));\r\n\t\t}\r\n\r\n\t\tif (hierarchies != null) {\r\n\t\t\tparams = params.set('hierarchies', JSON.stringify(hierarchies));\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectType[]>(acp + '/cgr/geoobjecttype/get-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetParentGeoObjects(childId: string, childTypeCode: string, parentTypes: any, recursive: boolean, date: string): Promise<ParentTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('childId', childId)\r\n\t\tparams = params.set('childTypeCode', childTypeCode)\r\n\t\tparams = params.set('parentTypes', JSON.stringify(parentTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ParentTreeNode>(acp + '/cgr/geoobject/get-parent-geoobjects', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetChildGeoObjects(parentId: string, parentTypeCode: string, childrenTypes: any, recursive: boolean): Promise<ChildTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('parentId', parentId)\r\n\t\tparams = params.set('parentTypeCode', parentTypeCode)\r\n\t\tparams = params.set('childrenTypes', JSON.stringify(childrenTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ChildTreeNode>(acp + '/cgr/geoobject/getchildren', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tnewGeoObjectInstance(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectType(gtJSON: string): Promise<GeoObjectType> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/create', JSON.stringify({ 'gtJSON': gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateGeoObjectType(gtJSON: GeoObjectType): Promise<GeoObjectType> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/update', JSON.stringify({ \"gtJSON\": gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectType(code: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/delete', JSON.stringify({ code: code }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\taddAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/addattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/updateattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeType(geoObjTypeId: string, attributeName: string): Promise<boolean> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<boolean>(acp + '/cgr/geoobjecttype/deleteattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeName': attributeName }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\taddAttributeTermTypeOption(parentTermCode: string, term: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': term }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeTermTypeOption(parentTermCode: string, termJSON: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/updateterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': termJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeTermTypeOption(parentTermCode: string, termCode: string): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\t\r\n\tgetGeoObject(id: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('id', id)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBounds(code: string, typeCode: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBoundsAtDate(code: string, typeCode: string, date: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\t\tparams = params.set('date', date);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject-time/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectByCode(code: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForGeoObject(code: string, typeCode: string): Promise<HierarchyOverTime[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<HierarchyOverTime[]>(acp + '/cgr/geoobject/get-hierarchies-over-time', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, parentTypeCode: string, hierarchy: string, date: string): Promise<GeoObject> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = hierarchy;\r\n\t\t}\r\n\t\t\r\n\t\tif (parentTypeCode != null) {\r\n\t\t  params.parentTypeCode = parentTypeCode;\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams.date = date;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestionsTypeAhead(text: string, type: string): Promise<GeoObject> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-active', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetCompletedScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-completed', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJob(historyId: string, pageSize: number, pageNumber: number, onlyUnresolved: boolean): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\t\tparams = params.set(\"onlyUnresolved\", onlyUnresolved.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-import-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetExportDetails(historyId: string, pageSize: number, pageNumber: number): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-export-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tresolveScheduledJob(historyId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/import-resolve', JSON.stringify({ historyId: historyId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tsubmitValidationResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/validation-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsubmitErrorResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/error-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterLists(): Promise<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }>(acp + '/master-list/list-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListHistory(oid: string, versionType: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('versionType', versionType);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetAllMasterListVersions(): Promise<MasterList[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList[]>(acp + '/master-list/list-all-versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListVersion(oid: string): Promise<MasterListVersion> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterListVersion>(acp + '/master-list/version', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetLocales(): Promise<string[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<string[]>(acp + '/localization/get-locales', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectOverTime(geoObjectCode: string, geoObjectTypeCode: string): Promise<GeoObjectOverTime> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\t// let params: HttpParams = new HttpParams();\r\n\t\t// params = params.set( 'geoObjectCode', geoObjectCode );\r\n\t\t// params = params.set( 'geoObjectTypeCode', geoObjectTypeCode );\r\n\t\t// params = params.set( 'attributeName', attributeName );\r\n\r\n\t\t// return this.http\r\n\t\t//     .get<ValueOverTime[]>( acp + '/cgr/geoobject/getAttributeVersions', { params: params } )\r\n\t\t//     .toPromise();\r\n\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', geoObjectCode);\r\n\t\tparams = params.set('typeCode', geoObjectTypeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectOverTime>(acp + '/cgr/geoobject-time/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\r\n\t}\r\n\r\n\tnewGeoObjectOverTime(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject-time/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n\r\n\r\n\t// getAttributeVersions( geoObjectCode: string, geoObjectTypeCode: string, attributeName: string ): any[] {\r\n\t//     let test =[\r\n\t//         {\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":{\"localeValues\":[\r\n\t//             {\"locale\":\"defaultLocale\",\"value\":\"Anlong Veaeng\"}]}}\r\n\t//     ]\r\n\r\n\t//     // let test = [{\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":\"test\"}];\r\n\r\n\t//     return test;\r\n\t// }\r\n\r\n\r\n\tsetAttributeVersions(geoObjectCode: string, geoObjectTypeCode: string, attributeName: string, collection: ValueOverTime[]): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\tgeoObjectCode: geoObjectCode,\r\n\t\t\tgeoObjectTypeCode: geoObjectTypeCode,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tcollection: collection\r\n\r\n\t\t} as any;\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Response>(acp + '/cgr/geoobject/setAttributeVersions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterList(list: MasterList): Promise<MasterList> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/master-list/create', JSON.stringify({ list: list }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterListVersion(oid: string, forDate: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/create-version', JSON.stringify({ oid: oid, forDate: forDate }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishMasterListVersions(oid: string): Promise<{ job: string }> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ job: string }>(acp + '/master-list/publish-versions', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteMasterList(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tdeleteMasterListVersion(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove-version', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tpublishMasterList(oid: string): Observable<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http.post<MasterListVersion>(acp + '/master-list/publish', JSON.stringify({ oid: oid }), { headers: headers });\r\n\t}\r\n\r\n\tgetMasterList(oid: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n    /*\r\n     * Not really part of the RegistryService\r\n     */\r\n\tapplyGeoObjectEdit(parentTreeNode: HierarchyOverTime[], geoObject: GeoObjectOverTime, isNew: boolean, masterListId: string, notes: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { geoObject: geoObject, isNew: isNew, masterListId: masterListId };\r\n\r\n\t\tif (parentTreeNode != null) {\r\n\t\t\tparams['parentTreeNode'] = parentTreeNode;\r\n\t\t}\r\n\t\tif (notes != null) {\r\n\t\t\tparams['notes'] = notes;\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geoobject-editor/apply', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdata(oid: string, pageNumber: number, pageSize: number, filter: { attribute: string, value: string }[], sort: { attribute: string, order: string }): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tsort: sort\r\n\t\t} as any;\r\n\r\n\t\tif (pageNumber != null) {\r\n\t\t\tparams.pageNumber = pageNumber;\r\n\t\t}\r\n\r\n\t\tif (pageSize != null) {\r\n\t\t\tparams.pageSize = pageSize;\r\n\t\t}\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/master-list/data', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tvalues(oid: string, value: string, attributeName: string, valueAttribute: string, filter: { attribute: string, value: string }[]): Promise<{ label: string, value: string }[]> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tvalueAttribute: valueAttribute\r\n\t\t} as any;\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\tif (value != null && value.length > 0) {\r\n\t\t\tparams.value = value;\r\n\t\t}\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ label: string, value: string }[]>(acp + '/master-list/values', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishShapefile(oid: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/generate-shapefile', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tprogress(oid: string): Promise<Progress> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Progress>(acp + '/master-list/progress', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListsByOrg(): Promise<{ orgs: MasterListByOrg[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], orgs: MasterListByOrg[] }>(acp + '/master-list/list-org', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetPublishMasterListJobs(oid: string, pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/master-list/get-publish-jobs', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetDatasetBounds(oid: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid)\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/master-list/bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetOrganizations(): Promise<Organization[]> {\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Organization[]>(acp + '/cgr/organizations/get-all')\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { PageResult } from '@shared/model/core'\nimport { SynchronizationConfig, OrgSyncInfo, ExportScheduledJob } from '@registry/model/registry'\nimport { CustomAttributeConfig } from '@registry/model/sync'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SynchronizationConfigService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetPage(pageNumber: number, pageSize: number): Promise<PageResult<SynchronizationConfig>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<SynchronizationConfig>>(acp + '/synchronization-config/get-all', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tget(oid: string): Promise<SynchronizationConfig> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<SynchronizationConfig>(acp + '/synchronization-config/get', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tgetCustomAttrCfg(geoObjectTypeCode: string, externalId: string): Promise<CustomAttributeConfig[]> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalId', externalId);\n    params = params.set('geoObjectTypeCode', geoObjectTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-custom-attr', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\t\n\tgetConfigForES(externalSystemId: string, hierarchyTypeCode: string): Promise<any> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalSystemId', externalSystemId);\n    params = params.set('hierarchyTypeCode', hierarchyTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-config-for-es', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n\tapply(config: SynchronizationConfig): Promise<SynchronizationConfig> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<SynchronizationConfig>(acp + '/synchronization-config/apply', JSON.stringify({ config: config }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tedit(oid: string): Promise<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tlet params = {};\n\n\t\tif (oid != null) {\n\t\t\tparams = { oid: oid };\n\t\t}\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }>(acp + '/synchronization-config/edit', JSON.stringify(params), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremove(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tunlock(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/unlock', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\trun(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/run', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetJobs(oid:string, pageNumber: number, pageSize: number): Promise<PageResult<ExportScheduledJob>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n//\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExportScheduledJob>>(acp + '/synchronization-config/get-jobs', { params: params })\n//\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n//\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PaginationPage } from '@registry/model/registry';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tgetMyTasks(pageNum: number, pageSize: number, whereStatus: string): Promise<PaginationPage> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('orderBy', 'createDate');\r\n\t\tparams = params.set('pageNum', pageNum.toString());\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('whereStatus', whereStatus);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/tasks/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcompleteTask(taskId: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/complete', JSON.stringify({ 'id': taskId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsetTaskStatus(taskId: string, status: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/setTaskStatus', JSON.stringify({ 'id': taskId, 'status': status }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","import * as d3 from 'd3';\n\nexport function calculateTextWidth(text: string, fontSize: number): number {\n\tlet svg = d3.select(\"#svg\");\n\n\tlet textCalcGroup = svg.append(\"g\").classed(\"g-text-calc\", true);\n\n\tlet textEl = textCalcGroup.append(\"text\")\n\t\t.attr(\"x\", -5000)\n\t\t.attr(\"y\", -5000)\n\t\t.attr(\"font-size\", fontSize)\n\t\t.text(text);\n\n\tlet bbox = textEl.node().getBBox();\n\n\td3.select(\".g-text-calc\").remove();\n\n\treturn bbox.width + 2; // +2 is for padding. I caught this truncating just ever so slightly\n}\n\nexport function svgPoint(x: number, y: number) {\n\tlet svg: any = d3.select(\"#svg\").node();\n\tvar pt = svg.createSVGPoint();\n\n\tpt.x = x;\n\tpt.y = y;\n\n\treturn pt.matrixTransform(svg.getScreenCTM().inverse());\n}\n\nexport function isPointWithin(point: { x: number, y: number }, bbox: { x: number, y: number, width: number, height: number }) {\n\treturn point.y > bbox.y && point.y < (bbox.y + bbox.height) && point.x > bbox.x && point.x < (bbox.x + bbox.width);\n}\n\nexport function isBboxPartiallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t|| isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function isBboxTotallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t&& isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function getBboxFromSelection(selection: any) {\n\treturn { x: parseInt(selection.attr(\"x\")), y: parseInt(selection.attr(\"y\")), width: parseInt(selection.attr(\"width\")), height: parseInt(selection.attr(\"height\")) };\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\n@Component( {\n    selector: 'attributes-page',\n    templateUrl: './attributes-page.component.html',\n    styleUrls: []\n} )\nexport class AttributesPageComponent {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor() {\n    }\n\n    onNext(): void {\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.attributes.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.attributes.description\"></localize>\n    </p>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <!--\n    <h3 class=\"mb-3\">\n      <localize key=\"shapefile.modal.heading\"></localize>\n      {{configuration.sheet.name}}\n    </h3>\n    -->\n    <form class=\"modal-form\" #form=\"ngForm\">\n      \n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.hierarchy\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"configuration.hierarchy\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of configuration.hierarchies\" value={{hierarchy.code}}>{{hierarchy.label}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div class=\"form-group\" *ngFor=\"let attribute of configuration.type.attributes\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">{{attribute.label.localizedValue}}</label>\n          </div>\n          <div class=\"holder\">\n            <select [name]=\"attribute.code + (attribute.locale != null ? attribute.locale : '')\" class=\"select-area\"\n              [(ngModel)]=\"attribute.target\" [required]=\"attribute.required\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes[attribute.baseType]\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div *ngIf=\"configuration.hasPostalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.postalCode\"></localize>\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <div class=\"check-block\">\n              <div (click)=\"configuration.postalCode = !configuration.postalCode\"\n                [ngClass]=\"{'chk-checked' : configuration.postalCode}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\"\n                name=\"postalCode\">\n                <span></span>\n              </div>\n            </div>\n            <!-- <input type=\"checkbox\" class=\"form-check-input\" name=\"postalCode\" [(ngModel)]=\"configuration.postalCode\"> -->\n          </div>\n        </div>\n      </div>\n      \n      <div *ngIf=\"configuration.isExternal\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.modal.external\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"externalId\" class=\"select-area\"\n              [(ngModel)]=\"configuration.externalIdAttributeTarget\" [required]=\"true\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n        \n        <div *ngIf=\"configuration.externalSystem.type === 'RevealExternalSystem' && configuration.formatType === 'EXCEL'\" class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.import.revealGeometryAttribute\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"revealGeometryColumn\" class=\"select-area\"\n              [(ngModel)]=\"configuration.revealGeometryColumn\" [required]=\"false\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <!--\n      <div *ngIf=\"!configuration.hasPostalCode || !configuration.postalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.parentLookupType\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"parentLookupType\" class=\"select-area\" [(ngModel)]=\"configuration.parentLookupType\" required>\n              <option></option>\n              <option value=\"ALL\">\n                <localize key=\"io.modal.all\"></localize>\n              </option>\n              <option value=\"CODE\">\n                <localize key=\"io.modal.code\"></localize>\n              </option>\n              <option value=\"EXTERNAL\">\n                <localize key=\"io.modal.external\"></localize>\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      -->\n\n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize *ngIf=\"!configuration.postalCode\" key=\"io.next\"></localize>\n                <localize *ngIf=\"configuration.postalCode\" key=\"io.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter, Directive } from '@angular/core';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-page',\n    templateUrl: './location-page.component.html',\n    styleUrls: []\n} )\nexport class LocationPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor( private service: IOService ) { }\n\n    ngOnInit(): void {\n        this.service.getTypeAncestors( this.configuration.type.code, this.configuration.hierarchy, true ).then( locations => {\n            this.configuration.locations = locations;\n        } );\n    }\n\n    onNext(): void {\n        // Map the universals\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onBack(): void {\n        this.stateChange.emit( 'BACK' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<form class=\"modal-form\">\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.location.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.location.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <form #form=\"ngForm\">\n      \n      <div class=\"form-group\" *ngFor=\"let location of configuration.locations; let i = index;\">\n        <div class=\"row-holder\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\"><label> {{location.label}} </label></div>\n            <div class=\"panel-body\">\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.source\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select class=\"select-area\" [(ngModel)]=\"location.target\" [name]=\"i + '-location'\">\n                  <option value=\"\"></option>\n                  <option *ngFor=\"let attr of configuration.sheet.attributes.text\" [value]=\"attr\">{{attr}}</option>\n                </select>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.matchStrategy\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select [name]=\"i + '-matchStrategy'\" class=\"select-area\" [(ngModel)]=\"location.matchStrategy\" [required]=\"location.target != null && location.target !== ''\">\n\t\t\t            <option></option>\n\t\t\t            <option value=\"ALL\"><localize key=\"io.modal.all\"></localize></option>\n\t\t\t            <option value=\"CODE\"><localize key=\"io.modal.code\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal\" value=\"EXTERNAL\"><localize key=\"io.modal.external\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal && configuration.externalSystem.type === 'DHIS2ExternalSystem'\" value=\"DHIS2_PATH\"><localize key=\"io.modal.dhis2path\"></localize></option>\n\t\t\t          </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"submit\" (click)=\"onBack()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.back\"></localize>\n            </button>\n            <button type=\"btn\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize key=\"io.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n    </form>\n  </div>\n</form>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n\n    selector: 'location-problem-page',\n    templateUrl: './location-problem-page.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n\n            if ( !this.configuration.locationProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    handleError( err: any ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n            const problem = this.configuration.locationProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNOREATLOCATION' ) {\n                const value = ( problem.parent != null ? problem.parent + \"-\" + problem.label : problem.label );\n                const exclusion = { code: '##PARENT##', value: value };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.locationProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.locationProblem.description\"></localize>\n    </p>\n  </div>\n  <div >\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.locationContext\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownLocation\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.locationProblems; let i = index;\">\n        <location-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></location-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\" style=\"margin-top: 20px;\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize *ngIf=\"configuration.termProblems != null\" key=\"io.next\"></localize>\n              <localize *ngIf=\"configuration.termProblems == null\" key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\n\n@Component( {\n\n    selector: 'term-problem-page',\n    templateUrl: './term-problem-page.component.html',\n    styleUrls: []\n} )\nexport class TermProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n\n            if ( !this.configuration.termProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n            const problem = this.configuration.termProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNORE' ) {\n                const exclusion = { code: problem.attributeCode, value: problem.label };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.termProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.termProblem.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.categoryAttribute\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownCategory\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.termProblems; let i = index;\">\n        <term-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></term-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input, Output, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, AttributeTerm, PRESENT } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'manage-versions',\n\ttemplateUrl: './manage-versions.component.html',\n\tstyleUrls: ['./manage-versions.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsComponent implements OnInit {\n\tmessage: string = null;\n\t\n\tcurrentDate : Date = new Date();\n\n\t@Input() readonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() attribute: Attribute\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\teditingGeometry: number = -1;\n\n\thasDuplicateDate: boolean = false;\n\n\thasConflict: boolean = false;\n\n\toriginalAttributeState: Attribute;\n\n\tconstructor(private service: RegistryService, private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\t\n\tngAfterViewInit() {\n\t\tif (this.attribute.code === 'geometry' && this.geoObjectOverTime.attributes[this.attribute.code].values.length === 1) {\n\t\t\t\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.editingGeometry = 0;\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tgeometryChange(vAttribute, event): void {\n\t\tvAttribute.value = event;\n\t}\n\n\tonDateChange(): any {\n\t\tthis.hasConflict = false;\n\t\n\t\tlet vAttributes = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\n\t\t// check ranges\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tconst h1 = vAttributes[j];\n\t\t\th1.conflict = false;\n\t\t\th1.conflictMessage = [];\n\n\t\t\tif (!(h1.startDate == null || h1.startDate === '') && !(h1.endDate == null || h1.endDate === '')) {\n\t\t\t\tlet s1: any = new Date(h1.startDate);\n\t\t\t\tlet e1: any = new Date(h1.endDate);\n\t\t\t\t\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflict = true;\t\t\n\t\t\t\t\th1.conflictMessage.push(this.lService.decode(\"manage.versions.startdate.later.enddate.message\")); \n\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < vAttributes.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\tconst h2 = vAttributes[i];\n\t\t\t\t\t\tif (!(h2.startDate == null || h2.startDate === '') && !(h2.endDate == null || h2.endDate === '')) {\n\t\t\t\t\t\t\tlet s2: any = new Date(h2.startDate);\n\t\t\t\t\t\t\tlet e2: any = new Date(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflict = true\n\t\t\t\t\t\t\t\th1.conflictMessage.push(this.lService.decode(\"manage.versions.overlap.message\"));\n\n\t\t\t\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.sort(vAttributes);\n\t}\n\t\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tif (this.attribute.type === \"local\") {\n\t\t\t//   vot.value = {\"localizedValue\":null,\"localeValues\":[{\"locale\":\"defaultLocale\",\"value\":null},{\"locale\":\"km_KH\",\"value\":null}]};\n\t\t\tvot.value = this.lService.create();\n\t\t}\n\t\telse if (this.attribute.type === 'geometry') {\n\n\t\t\tif (votArr.length > 0) {\n\t\t\t\tif (this.editingGeometry != -1 && this.editingGeometry != null) {\n\t\t\t\t\tvot.value = votArr[this.editingGeometry].value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvot.value = votArr[0].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\t\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\t\t\tvot.value.type = \"Polygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\t\t\tvot.value.type = \"Point\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tvot.value.type = \"MultiPoint\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\t\t\tvot.value.type = \"Line\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\t\t\tvot.value.type = \"MultiLine\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.attribute.type === 'term') {\n\t\t\tvar terms = this.getGeoObjectTypeTermAttributeOptions(this.attribute.code);\n\n\t\t\tif (terms.length > 0) {\n\t\t\t\tvot.value = terms[0].code;\n\t\t\t}\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tif (this.attribute.code === 'geometry') {\n\t\t\tthis.editingGeometry = votArr.length - 1;\n\t\t}\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\teditGeometry(index: number) {\n\t\tthis.editingGeometry = index;\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\t// only remove status of the required status type\n\t\t\t\tif (attrOpts.length > 0) {\n\t\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn attrOpts;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes[this.attribute.code];\n\n\t\tlet position = -1;\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tposition = i\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(position > -1){\n\t\t\tval.values.splice(position, 1);\n\t\t}\n\t}\n\n\tisChangeOverTime(attr: Attribute): boolean {\n\t\tlet isChangeOverTime = false;\n\n\t\tthis.geoObjectType.attributes.forEach(attribute => {\n\t\t\tif (this.attribute.code === attr.code) {\n\t\t\t\tisChangeOverTime = attr.isChangeOverTime\n\t\t\t}\n\t\t})\n\n\t\treturn isChangeOverTime;\n\t}\n\t\n\tsetInfinity(vAttribute, attributes): void {\n\t\t\n\t\tif(vAttribute.endDate === PRESENT){\n\t\t\tvAttribute.endDate = new Date();\n\t\t}\n\t\telse{\n\t\t\tvAttribute.endDate = PRESENT\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t\t\n\t\tthis.sort(attributes)\n\t}\n\t\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\t\n\tonSubmit(): void {\n\t\t\n\t\tconsole.log(\"manage-versions  \", this.geoObjectOverTime)\n\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n            <h3>{{attribute.label.localizedValue}}</h3>\n\n            <div>\n              <div>\n                <ul class=\"list-group\">\n                  <!-- <li class=\"list-group-item\" style=\"text-align:left;\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\"> -->\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n\n                    <div *ngIf=\"attribute.type !== 'geometry'\">\n                    \n                      <table class=\"table table-striped\">\n                      \n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type === 'local'\" >\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                          \n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflict}\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\" *ngFor=\"let loc of vAttribute.value.localeValues; let idx = index;\">\n                                  <td colspan=\"2\">\n                                    <h5><convert-key-label [key]=\"loc.locale\"></convert-key-label></h5>\n                                    \n                                    <input type=\"text\" class=\"form-control\" [name]=\"'loc-val-' + i + '-' + idx\" [(ngModel)]=\"loc.value\" (ngModelChange)=\"loc.value = $event\" [required]=\"loc.locale === 'defaultLocale'\">\n                                    \n                                    <div class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"loc.locale === 'defaultLocale' && !loc.value\" class=\"error-message\">\n                                        <localize key=\"manage.versions.value.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                    <input type=\"date\" [name]=\"'startDate_' + i\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange()\" max=\"{{currentDate|date:'yyyy-MM-dd'}}\" required>\n                                    \n                                    <div style=\"width:100%;\" class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"!vAttribute.startDate\" class=\"error-message\">\n                                        <localize key=\"manage.versions.start.date.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                      \n                                      <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" (blur)=\"onDateChange()\" required>\n                                      <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                    \n                                      <p class=\"text-right\">\n                                        <a *ngIf=\"vAttribute.endDate === '5000-12-31'\" (click)=\"setInfinity(vAttribute, geoObjectOverTime.attributes[attribute.code].values)\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></a>\n                                        <a *ngIf=\"vAttribute.endDate !== '5000-12-31'\" (click)=\"setInfinity(vAttribute, geoObjectOverTime.attributes[attribute.code].values)\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></a>\n                                      </p>\n                                      \n                                      <div class=\"form-input-validation-error-message-wrapper\">\n                                        <p *ngIf=\"!vAttribute.endDate\" class=\"error-message\">\n                                          <localize key=\"manage.versions.end.date.required.message\"></localize>\n                                        </p>\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr *ngIf=\"vAttribute.conflict\">\n<!--                                   <p class=\"error-message\"> -->\n<!--                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                   </p> -->\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" class=\"error-message\">\n                                    {{msg}}\n                                  </p>\n                                </tr>\n                              </table>\n                            </td>\n                            \n                            <td (click)=\"remove(vAttribute)\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\">\n                              <i class=\"fa fa-times\" ></i>\n                            </td>\n                          </tr>\n                        </tbody>\n\n\n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type !== 'local'\">\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n\n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflict}\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\">\n                                  <td colspan=\"2\">\n                                    <div *ngIf=\"attribute.type === 'term'\">\n                                      <select id=\"mod-{{attribute.code}}\" [name]=\"'mod-term-' + i + '-' + attribute.code\" class=\"select-area\" [(ngModel)]=\"vAttribute.value\">\n                                          <option value=\"\"></option>\n                                          <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attribute.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                                      </select>\n                                    </div>\n                                    <div *ngIf=\"attribute.type === 'character'\">\n                                      <input type=\"text\" class=\"form-control\" [name]=\"'char-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'date'\">\n                                      <input type=\"date\" class=\"form-control\" [name]=\"'date-val-' + i\" [ngModel]=\"vAttribute.value | date:'yyyy-MM-dd'\" (ngModelChange)=\"setDateAttribute(vAttribute, $event)\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'integer' || attribute.type === 'float'\">\n                                      <input type=\"number\" class=\"form-control\" [name]=\"'int-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'boolean'\">\n                                        <label class=\"radio radio-inline\" style=\"padding-left:0;\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === true\" [value]=\"true\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-true\" name=\"mod-{{i}}-true\"> \n                                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                                        </label> \n                                        <label class=\"radio radio-inline\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === false\" [value]=\"false\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-false\" name=\"mod-{{i}}-false\"> \n                                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                                        </label>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                    <input style=\"width: 100%;\" type=\"date\" [name]=\"'startDate-' + i\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange()\" max=\"{{currentDate|date:'yyyy-MM-dd'}}\" required>\n                                  </td>\n                                  <td>\n                                    <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                      \n                                      <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" (blur)=\"onDateChange()\" required>\n                                      <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                    \n                                      <p class=\"text-right\">\n                                        <a *ngIf=\"vAttribute.endDate === '5000-12-31'\" (click)=\"setInfinity(vAttribute, geoObjectOverTime.attributes[attribute.code].values)\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></a>\n                                        <a *ngIf=\"vAttribute.endDate !== '5000-12-31'\" (click)=\"setInfinity(vAttribute, geoObjectOverTime.attributes[attribute.code].values)\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></a>\n                                      </p>\n                                      \n                                      <div class=\"form-input-validation-error-message-wrapper\">\n                                        <p *ngIf=\"!vAttribute.endDate\" class=\"error-message\">\n                                          <localize key=\"manage.versions.end.date.required.message\"></localize>\n                                        </p>\n                                      </div>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr *ngIf=\"vAttribute.conflict\">\n<!--                                   <p class=\"error-message\"> -->\n<!--                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                   </p> -->\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" class=\"error-message\">\n                                    {{msg}}\n                                  </p>\n                                </tr>                                \n                              </table>\n                            </td>\n                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                              <i class=\"fa fa-times\"></i>\n                            </td>\n                          </tr>\n                        </tbody>\n                        \n                      </table>\n                    </div>\n\n                    <div *ngIf=\"attribute.type === 'geometry'\">\n                    \n                      <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                      \n                      <table class=\"table table-striped\">\n                        <thead style=\"font-size: 14px;\">\n                          <th style=\"width: 60%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.value\"></localize></th>\n                          <th style=\"width: 20%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.actions\"></localize></th>\n                        </thead>\n                        <tbody style=\"text-align: center;\">\n                          <tr @fadeInOut [ngClass]=\"{'active' : i === editingGeometry}\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\">\n                            <td style=\"vertical-align: middle;\">\n                              <button *ngIf=\"this.editingGeometry != i\" class=\"btn\" (click)=\"editGeometry(i)\" role=\"button\">\n                                <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                              </button> \n                              <geoobject-editor-map *ngIf=\"this.editingGeometry === i\" #geometryEditor [geometryType]=\"this.geoObjectType.geometryType\" \n                                  (geometryChange)=\"this.geometryChange(vAttribute, $event);\" [readOnly]=\"!geoObjectType.isGeometryEditable && readonly\" [postGeometry]=\"vAttribute.value\" \n                                  [bboxCode]=\"this.geoObjectOverTime.attributes.code\" [bboxType]=\"this.geoObjectType.code\" [bboxDate]=\"vAttribute.startDate\">\n                              </geoobject-editor-map>\n                            </td>\n                            <td style=\"vertical-align: middle;\"><input type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange()\" [disabled]=\"readonly\" required></td>\n                            <td style=\"vertical-align: middle;\">\n\n                              <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                              <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" (blur)=\"onDateChange()\" [disabled]=\"readonly\" required>\n\n                              <div style=\"width:100%;\" class=\"form-input-validation-error-message-wrapper\">\n                                <p *ngIf=\"!vAttribute.endDate\" class=\"error-message\">\n                                  <localize key=\"manage.versions.end.date.required.message\"></localize>\n                                </p>\n                              </div>\n\n                            </td>\n                            <td style=\"vertical-align: middle;\"><i class=\"fa fa-times delete-btn\" [ngClass]=\"{'clickable' : !readonly, 'disabled' : readonly}\" (click)=\"!readonly && remove(vAttribute)\"></i></td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                  </li>\n\n                  <li *ngIf=\"!readonly\" class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> \n                      <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"modal.button.close\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!versionsform.valid || hasConflict\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, ViewChild, SimpleChanges, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { RegistryService, MapService} from '@registry/service';\n\nimport { Map, LngLatBounds, NavigationControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\ndeclare var acp: string;\n\n\n@Component({\n\tselector: 'geoobject-editor-map[geometryType]',\n\ttemplateUrl: './geoobject-editor-map.component.html',\n\tstyleUrls: ['./geoobject-editor-map.component.css']\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorMapComponent implements OnInit, OnDestroy {\n\n    /*\n     * Required. The GeometryType of the GeoJSON. Expected to be in uppercase (because that's how it is in the GeoObjectType for some reason)\n     */\n\t@Input() geometryType: string;\n\n    /*\n     * Optional. We will invoke this event with GeoJSON when the user makes an edit to the geometry.\n     */\n\t@Output() geometryChange = new EventEmitter<any>();\n\n    /*\n     * Optional. If specified, we will diff based on this GeoJSON geometry.\n     */\n\t@Input() preGeometry: any;\n\n    /*\n     * Optional. If we are read-only, this will be displayed as a layer. If we are not, it will be editable.\n     */\n\t@Input() postGeometry: any;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObject code.\n     */\n\t@Input() bboxCode: string;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObjectType at the date.\n     */\n\t@Input() bboxType: string;\n\n\t@Input() bboxDate: string;\n\n    /*\n     * Optional. If set to true the edit controls will not be displayed. Defaults to false.\n     */\n\t@Input() readOnly: boolean = false;\n\n    /*\n     * Optional. If specified, we will display an edit button on the map, and when it is clicked we will emit this event.\n     */\n\t@Output() onClickEdit = new EventEmitter<void>();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl;\n\n\t@ViewChild(\"mapDiv\") mapDiv;\n\n\tmap: Map;\n\n\teditingControl: any;\n\n\tconstructor(private registryService: RegistryService, private mapService: MapService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\t\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\n\t\t\tthis.mapDiv.nativeElement.id = Math.floor(Math.random() * (899999)) + 100000;\n\n\t\t\tthis.map = new Map({\n\t\t\t\tcontainer: this.mapDiv.nativeElement.id,\n\t\t\t\tstyle: 'mapbox://styles/mapbox/satellite-v9',\n\t\t\t\tzoom: 2,\n\t\t\t\tcenter: [110.880453, 10.897852]\n\t\t\t});\n\n\t\t\tthis.map.on('load', () => {\n\t\t\t\tthis.initMap();\n\t\t\t});\n\n\t\t\tthis.map.on('draw.create', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.delete', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.update', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\t\n\t\t}, 0);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['preGeometry'] || changes['postGeometry']) {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tpublic reload(): void {\n\t\tif (this.map != null) {\n\t\t\tthis.removeLayers();\n\t\t\tthis.addLayers();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tgetIsValid(): boolean {\n\t\tif (!this.readOnly) {\n\t\t\tlet isValid: boolean = false;\n\n\t\t\tif (this.editingControl != null) {\n\t\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\t\tif (featureCollection.features.length > 0) {\n\t\t\t\t\tisValid = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn isValid;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onValidChange(): void {\n\t\tthis.geometryChange.emit(this.saveDraw());\n\t}\n\n\tinitMap(): void {\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t\tthis.onValidChange();\n\t\t});\n\n\n\t\tthis.addLayers();\n\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.zoomToBbox();\n\t\t}\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl());\n\n\t\tif (!this.readOnly) {\n\t\t\tthis.enableEditing();\n\t\t}\n\t\telse {\n\t\t\tthis.addEditButton();\n\t\t}\n\n\t\tthis.onValidChange();\n\t}\n\n\taddEditButton(): void {\n\t\tthis.simpleEditControl.editEmitter.subscribe(versionObj => {\n\t\t\tthis.onClickEdit.emit();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tenableEditing(): void {\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (this.postGeometry != null) {\n\t\t\tthis.editingControl.add(this.postGeometry);\n\t\t}\n\t}\n\n\tremoveSource(prefix: string): void {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-polygon\");\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-point\");\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MultiLine\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-line\");\n\t\t}\n\n\t\tthis.map.removeSource(sourceName);\n\t}\n\n\tremoveLayers(): void {\n\t\tif (this.map.getSource(\"pre-geoobject\")) {\n\t\t\tthis.removeSource(\"pre\");\n\t\t}\n\t\tif (this.map.getSource(\"post-geoobject\")) {\n\t\t\tthis.removeSource(\"post\");\n\t\t}\n\t}\n\n\taddLayers(): void {\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.preGeometry, \"pre\", \"#EFA22E\")\n\t\t}\n\t\tif (this.readOnly && this.postGeometry != null && this.postGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.postGeometry, \"post\", \"#800000\");\n\t\t}\n\t}\n\n\trenderGeometryAsLayer(geometry: any, prefix: string, color: string) {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\t\t\n\t\tconsole.log(\"test\")\n\n\t\tthis.map.addSource(sourceName, {\n\t\t\ttype: 'geojson',\n\t\t\tdata: {\n\t\t\t\t\"type\": \"FeatureCollection\",\n\t\t\t\t\"features\": []\n\t\t\t}\n\t\t});\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\t// Polygon Layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-polygon\",\n\t\t\t\t\"type\": \"fill\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"fill-color\": color,\n\t\t\t\t\t\"fill-outline-color\": \"black\",\n\t\t\t\t\t\"fill-opacity\": 0.7,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-point\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 3,\n\t\t\t\t\t\"circle-color\": color,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-line\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"type\": \"line\",\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"line-join\": \"round\",\n\t\t\t\t\t\"line-cap\": \"round\"\n\t\t\t\t},\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"line-color\": color,\n\t\t\t\t\t\"line-width\": 2\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t(<any>this.map.getSource(sourceName)).setData(geometry);\n\t}\n\n\tzoomToBbox(): void {\n\t\tif (this.bboxCode != null && this.bboxType != null) {\n\t\t\tif (this.bboxDate == null) {\n\t\t\t\tthis.registryService.getGeoObjectBounds(this.bboxCode, this.bboxType).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.registryService.getGeoObjectBoundsAtDate(this.bboxCode, this.bboxType, this.bboxDate).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsaveDraw(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.postGeometry;\n\t\t}\n\n\t\treturn this.postGeometry;\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\t// TODO\n\t\tconsole.log(\"ERROR\", err);\n\t}\n\n\n}\n","<div #mapDiv class=\"map-view-port text-left\" style=\"height:400px;\"></div>\n\n<simple-edit-control [visible]=\"!readOnly\"  #simpleEditControl></simple-edit-control>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-parent-versions-modal',\n\ttemplateUrl: './manage-parent-versions-modal.component.html',\n\tstyleUrls: []\n})\nexport class ManageParentVersionsModalComponent implements OnInit {\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonVersionChange: Subject<HierarchyOverTime>;\n\n\thierarchy: HierarchyOverTime = null;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onVersionChange = new Subject();\n\t}\n\n\tinit(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t}\n\n\n\thandleVersionChange(hierarchy: HierarchyOverTime): void {\n\t\tif (hierarchy != null) {\n\t\t\tthis.onVersionChange.next(hierarchy);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-parent-versions *ngIf=\"hierarchy != null\" [hierarchy]=\"hierarchy\" (onChange)=\"handleVersionChange($event)\"></manage-parent-versions>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { HierarchyOverTime, PRESENT, ValueOverTime } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService } from '@shared/service';\n\nimport * as moment from 'moment';\nimport Utils from '@registry/utility/Utils';\n\n@Component({\n\tselector: 'manage-parent-versions',\n\ttemplateUrl: './manage-parent-versions.component.html',\n\tstyleUrls: [],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageParentVersionsComponent implements OnInit {\n\t\n\tcurrentDate : Date =new Date();\n\n\toriginalHierarchy: HierarchyOverTime;\n\t@Input() hierarchy: HierarchyOverTime = null;\n\n\t@Output() onChange = new EventEmitter<HierarchyOverTime>();\n\n\thasDuplicateDate: boolean = false;\n\n\tloading: any = {};\n\n\tconstructor(private service: RegistryService, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.originalHierarchy = JSON.parse(JSON.stringify(this.hierarchy));\n\n\t\tthis.hierarchy.entries.forEach(entry => {\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\t\tif (entry.parents[current.code] == null) {\n\t\t\t\t\tentry.parents[current.code] = { text: '', geoObject: null };\n\t\t\t\t}\n\n\t\t\t\tentry.loading = {};\n\t\t\t}\n\t\t});\n\t}\n\n\tonAddNewVersion(): void {\n\n\t\tlet parents = {};\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparents[current.code] = {};\n\t\t}\n\n\t\tconst entry = {\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\tparents: parents,\n\t\t\tloading: {}\n\t\t}\n\n\t\tthis.hierarchy.entries.push(entry);\n\t}\n\n\tremove(entry: any): void {\n\n\t\tfor (let i = 0; i < this.hierarchy.entries.length; i++) {\n\t\t\tlet vals = this.hierarchy.entries[i];\n\n\t\t\tif (vals.startDate === entry.startDate) {\n\t\t\t\tthis.hierarchy.entries.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.onDateChange();\t\t\n\t}\n\n\tgetTypeAheadObservable(date: string, type: any, entry: any, index: number): Observable<any> {\n\n\t\tlet geoObjectTypeCode = type.code;\n\n\t\tlet parentCode = null;\n\t\tlet parentTypeCode = null;\n\t\tlet hierarchyCode = null;\n\n\t\tif (index > 0) {\n\t\t\tlet pType = this.hierarchy.types[index - 1];\n\t\t\tconst parent = entry.parents[pType.code];\n\n\t\t\tif (parent.geoObject != null && parent.geoObject.properties.code != null) {\n\t\t\t\thierarchyCode = this.hierarchy.code;\n\t\t\t\tparentCode = parent.geoObject.properties.code;\n\t\t\t\tparentTypeCode = parent.geoObject.properties.type;\n\t\t\t}\n\t\t}\n\n\t\treturn Observable.create((observer: any) => {\n\t\t  if (parentCode == null)\n\t\t  {\n\t\t    let loopI = index;\n\t\t  \n\t\t    while (parentCode == null && loopI > 0)\n\t\t    {\n\t\t      loopI = loopI - 1;\n\t\t      \n\t\t      let parent = entry.parents[this.hierarchy.types[loopI].code];\n\t\t      \n\t\t      if (parent != null)\n\t\t      {\n\t\t        if (parent.geoObject != null && parent.geoObject.properties.code != null)\n\t\t        {\n              parentCode = parent.geoObject.properties.code;\n              hierarchyCode = this.hierarchy.code;\n              parentTypeCode = this.hierarchy.types[loopI].code;\n            }\n            else if (parent.goCode != null)\n            {\n              parentCode = parent.goCode;\n              hierarchyCode = this.hierarchy.code;\n              parentTypeCode = this.hierarchy.types[loopI].code;\n            }\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t\n\t\t\tthis.service.getGeoObjectSuggestions(entry.parents[type.code].text, geoObjectTypeCode, parentCode, parentTypeCode, hierarchyCode, date).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, type: any, entry: any, date: string): void {\n\t\t//        let ptn: ParentTreeNode = parent.ptn;\n\n    entry.parents[type.code].text = e.item.name + \" : \" + e.item.code;\n    entry.parents[type.code].goCode = e.item.code;\n\n\t\tlet parentTypes = [];\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparentTypes.push(current.code);\n\n\t\t\tif (current.code === type.code) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.service.getParentGeoObjects(e.item.uid, type.code, parentTypes, true, date).then(ancestors => {\n\n      delete entry.parents[type.code].goCode;\n\t\t\tentry.parents[type.code].geoObject = ancestors.geoObject;\n\t\t\tentry.parents[type.code].text = ancestors.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestors.geoObject.properties.code;\n\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\t\t\t\tlet ancestor = ancestors;\n\n\t\t\t\twhile (ancestor != null && ancestor.geoObject.properties.type != current.code) {\n\t\t\t\t\tif (ancestor.parents.length > 0) {\n\t\t\t\t\t\tancestor = ancestor.parents[0];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tancestor = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ancestor != null) {\n\t\t\t\t\tentry.parents[current.code].geoObject = ancestor.geoObject;\n\t\t\t\t\tentry.parents[current.code].text = ancestor.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestor.geoObject.properties.code;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}\n\n\tonRemove(type: any, entry: any): void {\n\t\tentry.parents[type.code].text = '';\n\t\tdelete entry.parents[type.code].geoObject;\n\t\tdelete entry.parents[type.code].goCode;\n\t}\n\n\tonDateChange(): any {\n\n\t\t// check ranges\n\t\tfor (let j = 0; j < this.hierarchy.entries.length; j++) {\n\t\t\tconst h1 = this.hierarchy.entries[j];\n\t\t\th1.conflict = false;\n\t\t\th1.conflictMessage = [];\n\n\t\t\tif (!(h1.startDate == null || h1.startDate === '') && !(h1.endDate == null || h1.endDate === '')) {\n\t\t\t\tlet s1: any = new Date(h1.startDate);\n\t\t\t\tlet e1: any = new Date(h1.endDate);\n\t\t\t\t\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflict = true;\t\t\n\t\t\t\t\th1.conflictMessage.push(this.localizeService.decode(\"manage.versions.startdate.later.enddate.message\")); \n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < this.hierarchy.entries.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\tconst h2 = this.hierarchy.entries[i];\n\t\t\t\t\t\tif (!(h2.startDate == null || h2.startDate === '') && !(h2.endDate == null || h2.endDate === '')) {\n\t\t\t\t\t\t\tlet s2: any = new Date(h2.startDate);\n\t\t\t\t\t\t\tlet e2: any = new Date(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflict = true;\n\t\t\t\t\t\t\t\th1.conflictMessage.push(this.localizeService.decode(\"manage.versions.overlap.message\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.sort(this.hierarchy);\n\t}\n\n\tformatDateString(dateObj: Date): string {\n\t\tconst day = dateObj.getUTCDate();\n\n\t\treturn dateObj.getUTCFullYear() + \"-\" + (dateObj.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n\t\tvar format = localeData.longDateFormat('L');\n\t\treturn moment().format(format);\n\t\t\n//\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\t\n\tsetInfinity(vAttribute, hierarchyOverTime: HierarchyOverTime): void {\n\t\t\n\t\tif(vAttribute.endDate === PRESENT){\n\t\t\tvAttribute.endDate = new Date();\n\t\t}\n\t\telse{\n\t\t\tvAttribute.endDate = PRESENT\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t}\n\t\n\tsort(hierarchyOverTime: HierarchyOverTime): void {\n\t\t\n\t\t// Sort the data by start date \n\t\thierarchyOverTime.entries.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\t\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.hierarchy);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalHierarchy);\n\t}\n}\n","<div>\n    <ng-template #customItemTemplate let-model=\"item\" let-index=\"index\">\n      <h5>{{model.name }} : {{ model.code }}</h5>\n    </ng-template>\n\n    <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\"><localize key=\"changeovertime.manageVersions.duplicateDate\"></localize></div>\n\n    <form #form=\"ngForm\" class=\"modal-form\" style=\"height: calc(100vh - 165px);display: contents;\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"attribute-version-wrapper\">\n                            <ul class=\"list-group\" *ngIf=\"hierarchy != null\">\n                                <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                                    <table class=\"table table-striped\">\n                                    \n                                        <tbody class=\"attribute-element-wrapper\">\n\n                                          <p class=\"message\" *ngIf=\"hierarchy.entries.length === 0\">\n                                            <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                                          </p>\n                  \n                                          <tr @fadeInOut *ngFor=\"let entry of hierarchy.entries; let i = index;\" [ngClass]=\"{'error-border': entry.conflict}\">\n                                            <td>\n                                              <table>\n                                                <tr class=\"attribute-value-row\">\n                                                  <td colspan=\"2\">\n                                                     <div style=\"float:left;width:100%;\" *ngFor=\"let type of hierarchy.types; let j = index\"> \n                                                       {{type.label}}\n                                                       <div class=\"input-group\">\n                                                          <input  style=\"width:100%;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n                                                            [name]=\"type.code + '-' + i\"\n                                                            [disabled]=\"entry.startDate == null || entry.startDate === ''\"\n                                                            [(ngModel)]=\"entry.parents[type.code].text\" \n                                                            [typeaheadAsync]=\"true\"\n                                                            [typeahead]=\"getTypeAheadObservable(entry.startDate, type, entry, j)\"\n                                                            (typeaheadOnSelect)=\"typeaheadOnSelect($event, type, entry, entry.startDate)\" \n                                                            (typeaheadLoading)=\"entry.loading[type.code] = $event\"\n                                                            [ngClass]=\"{'inline-loading':entry.loading[type.code]}\"                                                                \n                                                            [typeaheadOptionsLimit]=\"7\"\n                                                            [typeaheadItemTemplate]=\"customItemTemplate\" \n                                                            [typeaheadMinLength]=\"0\"\n                                                            [typeaheadWaitMs]=\"300\">\n                                                          \n                                                            <span class=\"input-group-addon clickable addon-alert\" (click)=\"onRemove(type, entry)\"> \n                                                              <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                                            </span>\n                                                        </div>\n                                                     </div>\n                                                  </td>\n                                                </tr>\n                                                <tr class=\"attribute-date-input-row\">\n                                                  <td>\n                                                    <h5>\n                                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                                    </h5> \n                                                    <input style=\"width: 100%;\" type=\"date\" [name]=\"'startDate-' + i\" [(ngModel)]=\"entry.startDate\" (blur)=\"onDateChange()\" max=\"{{currentDate|date:'yyyy-MM-dd'}}\" required />\n                                                  </td>\n                                                  <td>\n                                                    <div class=\"version-edit-date-container\">\n                                                      <h5>\n                                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                                      </h5>\n                                                      \n                                                      <input *ngIf=\"entry.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"entry.endDate\" (blur)=\"onDateChange()\" required>\n                                                      <p *ngIf=\"entry.endDate === '5000-12-31'\" style=\"font-size: 14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                                    \n                                                      <p class=\"text-right\">\n                                                        <a *ngIf=\"entry.endDate === '5000-12-31'\" (click)=\"setInfinity(entry, hierarchy.entries)\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></a>\n                                                        <a *ngIf=\"entry.endDate !== '5000-12-31'\" (click)=\"setInfinity(entry, hierarchy.entries)\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></a>\n                                                      </p>\n                                                      \n                                                      <div class=\"form-input-validation-error-message-wrapper\">\n                                                        <p *ngIf=\"!entry.endDate\" class=\"error-message\">\n                                                          <localize key=\"manage.versions.end.date.required.message\"></localize>\n                                                        </p>\n                                                      </div>\n                                                    </div>\n                                                  </td>\n                                                </tr>\n                                                <tr *ngIf=\"entry.conflict\">\n<!--                                                   <p class=\"error-message\"> -->\n<!--                                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                                   </p> -->\n                                                    <p *ngFor=\"let msg of entry.conflictMessage\" class=\"error-message\">\n                                                      {{msg}}\n                                                    </p>\n                                                </tr>                                                \n                                              </table>\n                                            </td>\n                                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(entry)\">\n                                              <i class=\"fa fa-times\"></i>\n                                            </td>\n                                          </tr>\n                                        </tbody>\n                                    </table>\n                                </li>\n\n                                <li class=\"list-group-item\" style=\"text-align: left;\">\n                                  <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"><localize key=\"changeovertime.manageVersions.newVersion\"></localize></i>\n                                </li>\n                            </ul>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"holder\" style=\"border: none; width: 100%;\">\n                    <div class=\"button-holder pull-right\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\" >\n                            <localize key=\"io.cancel\"></localize>\n                        </button> \n                        <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid || hasDuplicateDate\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n</div>","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from 'angular-tree-component';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\n\tselector: 'tree-geo-selector',\n\ttemplateUrl: './tree-geo-selector.html',\n\tstyleUrls: ['./tree-geo-selector.css']\n})\nexport class TreeGeoSelector {\n\n\t@Input() hierarchy: HierarchyOverTime;\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() forDate: Date = null;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tnodes: any[] = [];\n\t\n\tactionMapping:IActionMapping = {\n\t  mouse: {\n\t    click: null,\n\t  }\n\t}\n\n\toptions: ITreeOptions = {\n\t\tdisplayField: 'name',\n\t\tisExpandedField: 'expanded',\n\t\tidField: 'code',\n\t\tactionMapping: this.actionMapping\n\t};\n\t\n\n\tconstructor() {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n    let time = null;\n    \n    if (this.forDate != null)\n    {\n\t\t  time = this.forDate.getTime();\n\t\t}\n\n\t\tlet nodes = [];\n\t\tlet current = null;\n\t\t\n\t\tconsole.log(this.hierarchy);\n\n\t\tthis.hierarchy.entries.forEach(pot => {\n\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\tif (time == null || time >= startDate && time <= endDate) {\n\t\t\t\tthis.hierarchy.types.forEach(type => {\n\t\t\t\t\tlet node: any = {\n\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\tlabel: type.label,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\texpanded: false\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\tnode.name = pot.parents[type.code].text;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (time == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t  node.name = node.name + \" (\" + pot.startDate + \" -> \" + pot.endDate + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tnode.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (current == null) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcurrent.children.push(node);\n\t\t\t\t\t\tcurrent.expanded = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent = node;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tcurrent = null;\n\t\t});\n\n\t\tthis.nodes = nodes;\n\t}\n\n\tonEdit(): void {\n\t\tthis.onManageVersion.emit(this.hierarchy);\n\t}\n}\n","<div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h4 style=\"margin: 0;\">{{hierarchy.label}}</h4>\n    </div>\n    <div class=\"panel-body\">\n\n<!--       <div class=\"input-group\"> -->\n        <div *ngIf=\"nodes.length > 0\" class=\"tree\" >\n          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n        </div>\n<!--         <span *ngIf=\"!readOnly\" class=\"input-group-addon\">  -->\n<!--           <i class=\"fa fa-pencil clickable\" (click)=\"onEdit()\" aria-hidden=\"true\"></i> -->\n<!--         </span> -->\n<!--       </div> -->\n      \n      <button class=\"btn btn-primary\" style=\"width:100%;margin-top:10px;\" *ngIf=\"!readOnly\" (click)=\"onEdit()\"><localize key=\"modal.button.edit\"></localize></button>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\nimport { GeoObjectType, GeoObjectOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'submit-change-request',\n\ttemplateUrl: './submit-change-request.component.html',\n\tstyleUrls: ['./submit-change-request.css']\n})\nexport class SubmitChangeRequestComponent implements OnInit {\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectTypes: GeoObjectType[] = [];\n\n\tgeoObjectId: string = \"\";\n\n\treason: string = \"\";\n\n\tdataSource: Observable<any>;\n\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t/*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\tpreGeoObject: GeoObjectOverTime = null;\n\n\t/*\n\t * The state of the GeoObject after our Change Request has been approved \n\t */\n\tpostGeoObject: GeoObjectOverTime = null;\n\t\n\tshowGeoObjectDetails: boolean = false;\n\n\tisValid: boolean = false;\n\n\tloading: boolean = false;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\", \"status\"];\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService,\n\t\tprivate changeRequestService: ChangeRequestService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.dataSource = Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(this.geoObjectId, this.geoObjectType.code).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.registryService.getGeoObjectTypes([], null).then(types => {\n\n\t\t\tvar myOrgTypes = [];\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.organizationCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null && type.superTypeCode != '' ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isGeoObjectTypeRC(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.geoObjectTypes = myOrgTypes;\n\n\t\t\tthis.geoObjectTypes.sort((a, b) => {\n\t\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\t\telse return 0;\n\t\t\t});\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(\"ROOT\");\n\t\t\tif (pos) {\n\t\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t}\n\n\t\t\t// this.currentGeoObjectType = this.geoObjectTypes[1];\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\n\n\tprivate onValidChange(newValid: boolean) {\n\t\tif (this.preGeoObject == null) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.geometryEditor != null && !this.geometryEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.attributeEditor != null && !this.attributeEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isValid = true;\n\t}\n\n\tprivate getGeoObjectTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\tlet obj = this.geoObjectTypes[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tchangeTypeaheadLoading(e: boolean): void {\n\t\tthis.loading = e;\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch): void {\n\t\tthis.registryService.getGeoObjectOverTime(e.item.code, this.geoObjectType.code).then(geoObject => {\n\t\t\tthis.preGeoObject = geoObject;\n\t\t\tthis.postGeoObject = JSON.parse(JSON.stringify(this.preGeoObject)); // Object.assign is a shallow copy. We want a deep copy.\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsubmit(): void {\n\n\t\tlet goSubmit: GeoObjectOverTime = this.attributeEditor.getGeoObject();\n\n\t\tif (this.geometryEditor != null) {\n\t\t\t//\t\t\tlet goGeometries: GeoObjectOverTime = this.geometryEditor.saveDraw();\n\t\t\t//            goSubmit.geometry = goGeometries.geometry;\n\t\t}\n\n\t\tlet actions = [{\n\t\t\t\"actionType\": \"geoobject/update\", // TODO: account for create\n\t\t\t\"apiVersion\": \"1.0-SNAPSHOT\", // TODO: make dynamic\n\t\t\t\"createActionDate\": new Date().getTime(),\n\t\t\t\"geoObject\": goSubmit,\n\t\t\t\"contributorNotes\": this.reason\n\t\t}]\n\n\t\tthis.changeRequestService.submitChangeRequest(JSON.stringify(actions))\n\t\t\t.then(geoObject => {\n\t\t\t\tthis.cancel();\n\n\t\t\t\tthis.bsModalRef = this.modalService.show(SuccessModalComponent, { backdrop: true });\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"change.request.success.message\");\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\tthis.isValid = false;\n\t}\n\n\tcancel(): void {\n\t\tthis.isValid = false;\n\t\tthis.preGeoObject = null;\n\t\tthis.postGeoObject = null;\n\t\tthis.geoObjectId = null;\n\t\tthis.geoObjectType = null;\n\t\tthis.reason = null;\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div style=\"margin-top:50px;margin-bottom:50px;background:#f7f7f7;width:100%;padding:10px;\">\n      <h3 style=\"margin-bottom: 20px;\"><localize key=\"change.request.search.for.geoobject.header\"></localize></h3>\n      <div class=\"row\">\n\n        <div class=\"col-md-3\">\n          <localize key=\"dropdown.select.geoobjecttype.option.label\"></localize>\n          <select id=\"geoObjectTypeSelect\" name=\"geoObjectTypeSelect\" class=\"select-area\" [(ngModel)]=\"geoObjectType\" required>\n            <option>  </option>\n            <option *ngFor=\"let got of geoObjectTypes\" [ngValue]=\"got\">{{got.label.localizedValue}}</option>\n          </select>\n        </div>\n        \n        <div class=\"col-md-5\">\n          <localize key=\"change.request.search.for.geoobject.search.label\"></localize>\n          <input type=\"text\" [ngClass]=\"{'inline-loading':loading}\" [(ngModel)]=\"geoObjectId\" [disabled]=\"!geoObjectType\" name=\"geoObjectId\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\n            [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" [placeholder]=\"('masterlist.search' | localize) + '...'\" class=\"form-control\" autocomplete=\"off\">\n        \n            <span *ngIf=\"preGeoObject\" class=\"pull-right\">\n            > <a (click)=\"showGeoObjectDetails = !showGeoObjectDetails\">\n                <localize *ngIf=\"!showGeoObjectDetails\" key=\"change.request.create.request.show.details.btn\"></localize>\n                <localize *ngIf=\"showGeoObjectDetails\" key=\"change.request.create.request.hide.details.btn\"></localize>\n              </a>\n            </span>\n            \n            <div *ngIf=\"showGeoObjectDetails\">\n              <geoobject-shared-attribute-editor \n              #attributeEditor (valid)=\"this.onValidChange($event)\" \n              [geoObjectType]=\"this.geoObjectType\" \n              [preGeoObject]=\"this.preGeoObject\" \n              [(postGeoObject)]=\"this.postGeoObject\" \n              [isGeometryInlined]=\"false\"\n              [readOnly]=\"true\"\n              [animate]=false>\n              </geoobject-shared-attribute-editor>\n           </div>\n        </div>\n        \n        <div *ngIf=\"preGeoObject\" class=\"col-md-4\">\n          <label></label>\n          <a [routerLink]=\"['/registry/location-manager', preGeoObject.attributes.uid, preGeoObject.attributes.type]\" \n                target=\"_blank\">\n            <button class=\"btn btn-primary\" style=\"width:100%;\"><localize key=\"change.request.open.geoobject.in.editor.link.btn\"></localize></button>\n          </a>\n        </div>\n\n      </div>\n      \n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\nimport { GeoObjectType, GeoObjectOverTime, HierarchyOverTime, ParentTreeNode, ImportError, ValueOverTime } from '@registry/model/registry';\n\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\n\n@Component({\n\tselector: 'geoobject-editor',\n\ttemplateUrl: './geoobject-editor.component.html',\n\tstyleUrls: ['./geoobject-editor.component.css'],\n\tproviders: [DatePipe]\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tisValid: boolean = false;\n\n\tisGeometryEditable: boolean;\n\n\ttabIndex: number = 0;\n\n\tdataSource: Observable<any>;\n\n\tmasterListId: string;\n\tnotes: string;\n\n\tisNewGeoObject: boolean = false;\n\n\t@Input() onSuccessCallback: Function;\n\n\tsubmitFunction: Function = null;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n    /*\n     * GeoObject Property Editor\n     */\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\tarePropertiesValid: boolean = false;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tgoPropertiesPre: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tgoPropertiesPost: GeoObjectOverTime;\n\n\t//    /*\n\t//     * GeoObject Geometry Editor\n\t//     */\n\t//    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\t//\n\t//    areGeometriesValid: boolean = false;\n\n    /*\n     * GeoObject Cascading Parent Selector\n     */\n\t@ViewChild(\"parentSelector\") parentSelector;\n\n\tareParentsValid: boolean = true;\n\n\thierarchies: HierarchyOverTime[];\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tisEditingGeometries: boolean = false;\n\n    /*\n     * The final artifacts which will be submitted\n     */\n\tprivate goSubmit: GeoObjectOverTime;\n\n\tconstructor(private modalService: BsModalService, public bsModalRef: BsModalRef,\n\t\tprivate registryService: RegistryService, private localizeService: LocalizationService,\n\t\tauthService: AuthService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tfindVotWithStartDate(votArray: ValueOverTime[], startDate: string): any {\n\t\tfor (let i: number = 0; i < votArray.length; ++i) {\n\t\t\tif (votArray[i].startDate === startDate) {\n\t\t\t\treturn votArray[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tsetMasterListId(id: string) {\n\t\tthis.masterListId = id;\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tsetOnSuccessCallback(func: Function) {\n\t\tthis.onSuccessCallback = func;\n\t}\n\n\t// Configures the widget to be used in a \"New\" context, that is to say\n\t// that it will be used to create a new GeoObject.\n\tpublic configureAsNew(typeCode: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tthis.isNewGeoObject = true;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, retJson.geoObject.attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\n\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t});\n\t}\n\n\t// Configures the widget to be used to resolve an ImportError\n\tpublic configureFromImportError(importError: ImportError, historyId: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tlet typeCode = importError.object.geoObject.attributes.type;\n\t\tthis.isNewGeoObject = importError.object.isNew;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tif (importError.object != null && importError.object.parents != null && importError.object.parents.length > 0) {\n\t\t\tthis.hierarchies = importError.object.parents;\n\t\t\tthis.areParentsValid = true;\n\t\t}\n\t\telse {\n\t\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t});\n\t\t\tthis.areParentsValid = false;\n\t\t}\n\n\t\t// TODO : Maybe we should ask the server for the pre object, if it exists.\n\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\n\t\tthis.submitFunction = () => {\n\t\t\tlet config = {\n\t\t\t\thistoryId: historyId,\n\t\t\t\timportErrorId: importError.id,\n\t\t\t\tresolution: 'APPLY_GEO_OBJECT',\n\t\t\t\tparentTreeNode: this.hierarchies,\n\t\t\t\tgeoObject: this.goSubmit,\n\t\t\t\tisNew: importError.object.isNew\n\t\t\t}\n\n\t\t\tthis.registryService.submitErrorResolve(config)\n\t\t\t\t.then(() => {\n\n\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t}\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// Configures the widget to be used in an \"Edit Existing\" context\n\tpublic configureAsExisting(code: string, typeCode: string, dateStr: string, isGeometryEditable: boolean): void {\n\t\tthis.isNewGeoObject = false;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObject(code, typeCode);\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchHierarchies(code, typeCode);\n\t\tthis.fetchLocales();\n\t}\n\n\tprivate fetchGeoObject(code: string, typeCode: string) {\n\t\tthis.registryService.getGeoObjectOverTime(code, typeCode).then(geoObject => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\t\t\t//this.goPropertiesPost = JSON.parse( JSON.stringify( this.goPropertiesPre ) );\n\n\t\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t\t//            this.areGeometriesValid = true;\n\t\t\tthis.arePropertiesValid = true;\n\t\t\tthis.isValid = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchLocales() {\n\t\tthis.registryService.getLocales().then(locales => {\n\t\t\tthis.localizeService.setLocales(locales);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchGeoObjectType(code: string) {\n\t\tthis.registryService.getGeoObjectTypes([code], null)\n\t\t\t.then(geoObjectType => {\n\t\t\t\tthis.geoObjectType = geoObjectType[0];\n\n\t\t\t\tif (this.goPropertiesPre != null) {\n\t\t\t\t\tthis.goPropertiesPre.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\t\t\t\tif (this.goPropertiesPost != null) {\n\t\t\t\t\tthis.goPropertiesPost.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\n\t\t\t\tif (!this.geoObjectType.isGeometryEditable) {\n\t\t\t\t\t//                    this.areGeometriesValid = true;\n\t\t\t\t}\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t//                this.error( err );\n\t\t\t});\n\t}\n\n\tprivate fetchHierarchies(code: string, typeTypeCode: string) {\n\t\tthis.registryService.getHierarchiesForGeoObject(code, typeTypeCode)\n\t\t\t.then((hierarchies: any) => {\n\t\t\t\tthis.hierarchies = hierarchies;\n\n\t\t\t\t//                this.parentTreeNode = CascadingGeoSelector.staticGetParents( this.hierarchies );\n\t\t\t\tthis.areParentsValid = true;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tgetTypeAheadObservable(text, typeCode) {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(text, typeCode).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, ptn: ParentTreeNode): void {\n\t\tthis.registryService.getGeoObjectByCode(e.item.code, ptn.geoObject.properties.type)\n\t\t\t.then(geoObject => {\n\n\t\t\t\tptn.geoObject = geoObject;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tprivate onValidChange() {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.arePropertiesValid = this.attributeEditor.getIsValid();\n\t\t}\n\t\t//        if ( this.geometryEditor != null ) {\n\t\t//            this.areGeometriesValid = this.geometryEditor.getIsValid();\n\t\t//        }\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.areParentsValid = this.parentSelector.getIsValid();\n\t\t}\n\n\t\t//        this.isValid = this.arePropertiesValid && this.areGeometriesValid && this.areParentsValid;\n\t\tthis.isValid = this.arePropertiesValid && this.areParentsValid;\n\t}\n\n\tchangePage(nextPage: number, force: boolean = false): void {\n\t\tif (nextPage === this.tabIndex && !force) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tthis.persistModelChanges();\n\n\t\tthis.tabIndex = nextPage;\n\n\t\tthis.onValidChange();\n\n\t\tif (nextPage === 2) {\n\t\t\tthis.isEditingGeometries = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isEditingGeometries = false;\n\t\t}\n\t}\n\n\tprivate persistModelChanges(): void {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.goPropertiesPost = this.attributeEditor.getGeoObject();\n\t\t}\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.hierarchies = this.parentSelector.getHierarchies();\n\t\t}\n\n\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t//        if ( this.parentTreeNode != null ) {\n\t\t//            this.parentTreeNode.geoObject = this.goSubmit;\n\t\t//        }\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic submit(): void {\n\t\tif (this.isValid) {\n\t\t\tthis.bsModalRef.hide();\n\n\t\t\tthis.persistModelChanges();\n\n\t\t\tif (this.submitFunction == null) {\n\t\t\t\tthis.registryService.applyGeoObjectEdit(this.hierarchies, this.goSubmit, this.isNewGeoObject, this.masterListId, this.notes)\n\t\t\t\t\t.then(() => {\n\n\t\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\t\tthis.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.submitFunction();\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"modal-body\">\n    \n    <form class=\"modal-form\" style=\"overflow: visible;\" #goForm=\"ngForm\">\n        <!-- <div class=\"row-holder\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n            \n                <div *ngIf=\"!areParentsValid\" class=\"alert alert-danger\" role=\"alert\">\n                  <localize key=\"geoobject.editor.modal.parents.must.be.assigned.message\"></localize>                \n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"btn-group geobject-editor-tab-holder\">\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 0}\" (click)=\"this.changePage(0);\">\n                        <localize key=\"geoobject.editor.tabZero\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 1, error: !areParentsValid}\" (click)=\"this.changePage(1);\">\n                        <localize key=\"geoobject.editor.tabOne\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 2, disabled: !isGeometryEditable}\" (click)=\"isGeometryEditable && this.changePage(2);\">\n                        <localize key=\"geoobject.editor.tabTwo\"></localize>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- Attributes tab -->\n        <geoobject-shared-attribute-editor \n            *ngIf=\"(this.tabIndex === 0 || this.tabIndex === 2) && this.geoObjectType && this.goPropertiesPre && this.goPropertiesPost\"\n            #attributeEditor \n            (valid)=\"this.onValidChange()\" \n            [geoObjectType]=\"this.geoObjectType\"\n            [preGeoObject]=\"this.goPropertiesPre\" \n            [postGeoObject]=\"this.goPropertiesPost\" \n            [forDate]=\"this.forDate\" \n            [isNew]=\"this.isNewGeoObject\"\n            [isEditingGeometries]=\"this.isEditingGeometries\">\n        </geoobject-shared-attribute-editor>\n\n\n        <!-- Parents tab -->\n        <div *ngIf=\"this.tabIndex === 1 && this.hierarchies != null\">\n          <cascading-geo-selector #parentSelector \n            [isValid]=\"this.isValid\" (valid)=\"this.onValidChange()\"\n            [forDate]=\"this.forDate\"             \n            [hierarchies]=\"this.hierarchies\">\n          </cascading-geo-selector>\n        </div>\n\n         <!-- Geometry tab -->\n         <!--\n         <div class=\"row-holder\">\n            <div class=\"label-holder\"></div>\n            <div class=\"holder\">\n              <geoobject-editor-map #geometryEditor *ngIf=\"this.tabIndex === 2\" [geometryType]=\"this.geoObjectType.geometryType\" [readOnly]=\"true\" [preGeometry]=\"this.goGeometries.getVotAtDate(this.forDate, 'geometry', this.geoObjectType, this.localizeService).value\" [bboxCode]=\"this.goGeometries.attributes.code\" [bboxType]=\"this.geoObjectType.code\"></geoobject-editor-map>\n            </div>\n        </div>\n        -->\n\n        <div *ngIf=\"!isMaintainer\" class=\"row-holder\" style=\"padding-top: 10px;\">\n            <div class=\"label-holder\"><label><localize key=\"change.request.action.detail.contributorNotes\"></localize></label></div>\n            <div class=\"holder text-left\">\n              <textarea style=\"width: 100%;border-radius: 8px;height: 70px; padding:5px;\" class=\"detail-value\" [(ngModel)]=\"notes\" name=\"notes\" required></textarea>\n              <div class=\"form-input-validation-error-message-wrapper\">\n                <p *ngIf=\"!notes\" class=\"error-message\">Notes are required.</p>\n              </div>\n            </div>\n        </div>\n\n         <div class=\"row-holder\" style=\"margin-bottom: 20px;\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input style=\"width:100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"button-holder text-left\">\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                        <localize key=\"modal.button.cancel\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"goForm.invalid || !this.isValid\">\n                        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\nimport { Step, StepConfig } from '@registry/model/registry';\n\n\n@Component( { \n    selector: 'step-indicator',\n    templateUrl: './step-indicator.component.html',\n    styleUrls: ['./step-indicator.css']\n} )\nexport class StepIndicatorComponent {\n\n    @Input('steps')\n    set steps(value: StepConfig) {\n        this._stepConfig = value;\n    }\n\n    _stepConfig: StepConfig;\n    step: Step;\n\n\n    constructor( private localizeService: LocalizationService ) {\n\n        this._stepConfig = {\"steps\": []};\n    }\n\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n       \n    }\n}\n","<div class=\"step-indicator\">\n    <ul *ngIf=\"_stepConfig && _stepConfig.steps && _stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\"\n            *ngFor=\"let step of _stepConfig.steps\"\n            [ngClass]=\"{'complete':step.status === 'COMPLETE', 'stuck':step.status === 'STUCK', 'working': step.status === 'WORKING'}\">\n            {{step.label}}\n        </li>\n    </ul>\n</div>","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { ContextLayer, ContextLayerGroup, MasterList } from '@registry/model/registry';\nimport { ContextLayerModalComponent } from './context-layer-modal.component';\nimport { RegistryService } from '@registry/service';\n\n@Component({\n\tselector: 'layer-panel',\n\ttemplateUrl: './layer-panel.component.html',\n\tstyleUrls: ['./location-manager.css']\n})\nexport class LayerPanelComponent implements OnInit, OnChanges {\n\n\t@Input() filter: string[] = [];\n\t@Output() layerChange = new EventEmitter<ContextLayer>();\n\t@Output() baseLayerChange = new EventEmitter<any>();\n\n\tbaselayerIconHover = false;\n\n\tlists: MasterList[] = [];\n\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'baselayer.satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n//\t\t {\n//\t\t \tname: 'Streets',\n//\t\t \tlabel: 'baselayer.streets',\n//\t\t \tid: 'streets-v11',\n//\t\t \tsprite: 'mapbox://sprites/mapbox/streets-v11',\n//\t\t \turl: 'mapbox://styles/mapbox/streets-v11'\n//\t\t }\n\t];\n\n\tcontextLayerGroups: ContextLayerGroup[] = [];\n\n\tconstructor(private modalService: BsModalService, public service: RegistryService) {\n\t}\n\n\n\tngOnInit(): void {\n\n\t\tthis.service.getAllMasterListVersions().then(lists => {\n\t\t\tthis.lists = lists;\n\n\t\t\tthis.updateContextGroups();\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.filter.currentValue !== changes.filter.previousValue) {\n\t\t\tthis.updateContextGroups();\n\t\t}\n\t}\n\n\tupdateContextGroups(): void {\n\n\t\tthis.lists.forEach(list => {\n\n\t\t\tlet contextGroup = { oid: list.oid, displayLabel: list.displayLabel.localizedValue, contextLayers: [] };\n\t\t\t\n\t\t\tlist.versions.forEach(version => {\n\n\t\t\t\tconst index = this.filter.indexOf(version.oid);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tlet thisContextLayer = { oid: version.oid, displayLabel: version.forDate, active: false, enabled: false };\n\n\t\t\t\t\tcontextGroup.contextLayers.push(thisContextLayer);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (contextGroup.contextLayers.length > 0) {\n\t\t\t\tthis.contextLayerGroups.push(contextGroup);\n\t\t\t}\n\t\t});\n\n\t}\n\n\tgroupHasEnabledContextLayers(group: string): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif (cLayerGroup.oid === group) {\n\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\t\thasEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\thasEnabledContextLayers(): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\thasEnabled = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\ttoggleContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = !layer.active;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\tremoveContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = false;\n\t\tlayer.enabled = false;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\taddContextLayerModal(): void {\n\t\tlet bsModalRef = this.modalService.show(ContextLayerModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'context-layer-modal'\n\t\t});\n\t\tbsModalRef.content.contextLayerGroups = this.contextLayerGroups;\n\n\t\t//\t\tbsModalRef.content.onSubmit.subscribe(() => {\n\t\t//\n\t\t//\t\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t//\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t//\n\t\t//\t\t\t\t\tconsole.log(\"Emitting event\", cLayer);\n\t\t//\t\t\t\t\tthis.layerChange.emit(cLayer);\n\t\t//\t\t\t\t});\n\t\t//\t\t\t})\n\t\t//\n\t\t//\t\t});\n\t}\n\n\n\ttoggleBaseLayer(layer: any): void {\n\t\tthis.baseLayers.forEach(bl => {\n\t\t\tbl.active = false;\n\t\t})\n\t\t\n\t\tlayer.active = true;\n\n\t\tthis.baseLayerChange.emit(layer);\n\t}\n\n}\n","\n<div class=\"layer-toggle\" (mouseenter)=\"baselayerIconHover = true\" (mouseleave)=\"baselayerIconHover = false\">\n\n  <i class=\"fa fa-bars\" *ngIf=\"!baselayerIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n  <div [hidden]=\"!baselayerIconHover\">\n\n    <div style=\"margin-bottom: 10px;\">\n      <h4>\n        <localize key=\"explorer.base.layers.label\"></localize>\n      </h4>\n      <div class=\"row-form\" *ngFor=\"let baseLayer of baseLayers\">\n        <input class=\"layer-toggle-input\" type='radio' name='baselayers' [value]='baseLayer.id' [checked]=\"baseLayer.selected\" (change)=\"toggleBaseLayer(baseLayer)\">\n        <label class=\"layer-toggle-label\"><localize [key]=\"baseLayer.label\"></localize></label>\n      </div>\n    </div>\n    <div>\n      <div *ngIf=\"hasEnabledContextLayers()\">\n        <h4>\n          <localize key=\"explorer.context.layers.label\"></localize>\n        </h4>\n        <div class=\"list-group\">\n          <div *ngFor=\"let cLayerGroup of contextLayerGroups;\">\n            <div *ngIf=\"groupHasEnabledContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n              <label>{{ cLayerGroup.displayLabel }}</label>\n              <div class=\"list-group\">\n                <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                  <div class=\"list-group-item\" style=\"border: none;\" *ngIf=\"cLayer.enabled\">\n                    <input type=\"checkbox\" [checked]=\"cLayer.active\" (click)=\"toggleContextLayer(cLayer)\"> {{ cLayer.displayLabel }} <i class=\"fa fa-times delete-btn clickable\" aria-hidden=\"true\" (click)=\"removeContextLayer(cLayer)\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"addContextLayerModal()\">+ <localize key=\"explorer.add.context.layer.button.label\"></localize></button>\n    </div>\n\n  </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, HierarchyOverTime, ValueOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorModalComponent, ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\n@Component({\n\tselector: 'feature-panel',\n\ttemplateUrl: './feature-panel.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class FeaturePanelComponent implements OnInit {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY',\n\t\tGEOMETRY: 'GEOMETRY'\n\t}\n\n\t@Input() datasetId: string;\n\n\t@Input() type: GeoObjectType;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() set code(value: string) {\n\t\tthis.updateCode(value);\n\t}\n\n\t_code: string = null;\n\n\t@Input() geometryChange: Subject<any>;\n\n\t@Output() geometryEdit = new EventEmitter<ValueOverTime>();\n\t@Output() featureChange = new EventEmitter<GeoObjectOverTime>();\n\t@Output() modeChange = new EventEmitter<boolean>();\n\t\n\tisValid: boolean = true;\n\n\tbsModalRef: BsModalRef;\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tpreGeoObject: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tpostGeoObject: GeoObjectOverTime;\n\n\tattribute: Attribute = null;\n\n\tisNew: boolean = false;\n\n\tisEdit: boolean = false;\n\n\thierarchies: HierarchyOverTime[];\n\n\thierarchy: HierarchyOverTime = null;\n\t\n\treason: string = \"\";\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private authService: AuthService) {\n\t}\n\n\tngOnInit(): void {\n\t  this.isMaintainer = this.authService.isAdmin() || this.authService.isGeoObjectTypeRM(this.type.organizationCode, this.type.code);\n\t\tthis.mode = 'ATTRIBUTES';\n\t\tthis.geometryChange.subscribe(v => {\n\t\t\tthis.updateGeometry(v);\n\t\t});\n\t}\n\t\n\tsetValid(valid: boolean): void {\n\t\tthis.isValid = valid;\n\t}\n\n\tupdateCode(code: string): void {\n\t\tthis._code = code;\n\t\tthis.postGeoObject = null;\n\t\tthis.preGeoObject = null;\n\t\tthis.hierarchies = null;\n\t\tthis.setEditMode(false);\n\n\t\tif (code != null && this.type != null) {\n\n\t\t\tif (code !== '__NEW__') {\n\t\t\t\tthis.isNew = false;\n\n\t\t\t\tthis.service.getGeoObjectOverTime(code, this.type.code).then(geoObject => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t\tthis.service.getHierarchiesForGeoObject(code, this.type.code).then((hierarchies: HierarchyOverTime[]) => {\n\t\t\t\t\tthis.hierarchies = hierarchies;\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.isNew = true;\n\n\t\t\t\tthis.service.newGeoObjectOverTime(this.type.code).then(retJson => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, retJson.geoObject.attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\n\t\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t\t\tthis.setEditMode(true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\t\n\n\tonEditGeometryVersion(vot: ValueOverTime): void {\n\t\tthis.geometryEdit.emit(vot);\n\t}\n\n\tupdateGeometry(geometry: any): void {\n\t\t// Check if the geometry has been updated\n\t\tif (geometry != null && this.postGeoObject != null) {\n\n\t\t\tlet values = this.postGeoObject.attributes['geometry'].values;\n\t\t\tconst time = this.forDate.getTime();\n\n\t\t\tvalues.forEach(vot => {\n\n\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tvot.value = geometry;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tcalculateGeometry(goot: GeoObjectOverTime): any {\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tlet values = goot.attributes['geometry'].values;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst vot = values[i];\n\n\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\treturn vot.value;\n\t\t\t}\n\t\t};\n\n\t\treturn null;\n\t}\n\n\tonCancel(): void {\n\n\t\tif (this._code === '__NEW__') {\n\t\t\tthis.updateCode(null);\n\t\t}\n\t\telse {\n\t\t\tthis.updateCode(this._code);\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.applyGeoObjectEdit(this.hierarchies, this.postGeoObject, this.isNew, this.datasetId, this.reason).then(() => {\n\t\t\tthis.featureChange.emit(this.postGeoObject);\n\n\t\t\tthis.updateCode(this._code);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonManageAttributeVersion(attribute: Attribute): void {\n\t\tthis.attribute = attribute;\n\t\tthis.mode = this.MODE.VERSIONS;\n\t}\n\n\tonManageHiearchyVersion(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t\tthis.mode = this.MODE.HIERARCHY;\n\t}\n\n\tonAttributeChange(postGeoObject: GeoObjectOverTime): void {\n\t\t\n\t\tconsole.log(\"feature-panel\", postGeoObject)\n\t\t\n\t\tthis.postGeoObject = postGeoObject;\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\n\t\tthis.geometryEdit.emit(null);\n\t}\n\n\tonHierarchyChange(hierarchy: HierarchyOverTime): void {\n\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\tif (index !== -1) {\n\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t}\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\t}\n\n\tonEditAttributes(): void {\n\t\tthis.setEditMode(!this.isEdit);\n\t}\n\n\tsetEditMode(value: boolean): void {\n\t\tthis.isEdit = value;\n\t\tthis.reason = null;\n\n\t\tthis.modeChange.emit(this.isEdit)\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <div *ngIf=\"mode == MODE.ATTRIBUTES && postGeoObject != null\">\n    <!-- Attributes tab -->\n    <geoobject-shared-attribute-editor \n      #attributeEditor \n      [geoObjectType]=\"type\" \n      [preGeoObject]=\"preGeoObject\" \n      [postGeoObject]=\"postGeoObject\" \n      [forDate]=\"this.forDate\" \n      [isNew]=\"isNew\" \n      [isEditingGeometries]=\"false\" \n      [customEvent]=\"true\"\n      (onManageVersion)=\"onManageAttributeVersion($event)\" \n      (onChange)=\"onAttributeChange($event)\" \n      [readOnly]=\"!isEdit\"\n      [animate]=true\n      (valid)=\"setValid($event)\"\n      > \n    </geoobject-shared-attribute-editor>\n    \n    <div *ngIf=\"isEdit && type.isGeometryEditable\" class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <h4 style=\"margin:0;\">\n          <localize key=\"explorer.geometry.section\"></localize>\n        </h4>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"button-holder text-left\" style=\"margin:0;\">\n          <button type=\"submit\" style=\"width:100%;\" (click)=\"this.mode = this.MODE.GEOMETRY\" class=\"btn btn-primary\" role=\"button\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"hierarchies != null\">\n      <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"this.forDate\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEdit\" (onManageVersion)=\"onManageHiearchyVersion($event)\"> </tree-geo-selector>\n    </div>\n    \n    <div *ngIf=\"isEdit && !isMaintainer\" class=\"form-group\" style=\"z-index: 0;\">\n      <label> \n        <localize key=\"change.request.reason.label\"></localize>\n      </label>\n      <textarea rows=\"4\" cols=\"50\" [(ngModel)]=\"reason\" class=\"form-control\" name=\"reason-input\" required></textarea>\n    </div>\n\n    <div class=\"button-holder text-right\" style=\"margin-bottom: 20px;\">\n      <button *ngIf=\"!readOnly && !isEdit\" type=\"submit\" (click)=\"onEditAttributes()\" class=\"btn btn-primary\" style=\"width:100%;\" role=\"button\">\n        <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n      </button>\n      \n      <button *ngIf=\"isEdit\" type=\"button\" class=\"btn btn-default\" (click)=\"onCancel()\">\n        <localize key=\"modal.button.cancel\"></localize>\n      </button>\n      <button *ngIf=\"isEdit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || (!isMaintainer && (!reason || (reason && reason.trim().length === 0)))\">\n        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n      </button>\n    </div>\n  </div>\n  <div *ngIf=\"mode == MODE.VERSIONS && attribute != null\">\n    <!-- Attributes tab -->\n    <manage-versions \n      [attribute]=\"attribute\"\n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\">\n    </manage-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.HIERARCHY && hierarchy != null\">\n    <!-- Attributes tab -->\n    <manage-parent-versions \n      [hierarchy]=\"hierarchy\"\n      (onChange)=\"onHierarchyChange($event)\">\n    </manage-parent-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.GEOMETRY\">\n    <!-- Attributes tab -->\n    <geometry-panel \n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\"\n      (onEdit)=\"onEditGeometryVersion($event)\">\n    </geometry-panel>\n  </div>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\n@Component({\n\tselector: 'create-hierarchy-type-modal',\n\ttemplateUrl: './create-hierarchy-type-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateHierarchyTypeModalComponent implements OnInit {\n\n\thierarchyType: HierarchyType;\n\torganizations: any = [];\n\tmessage: string = null;\n\n\tedit: boolean = false; // if true, we are updating an existing. If false, we are creating new\n\n\treadOnly: boolean = false;\n\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onHierarchytTypeCreate: Subject<HierarchyType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, private hierarchyService: HierarchyService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onHierarchytTypeCreate = new Subject();\n\n\t\tthis.hierarchyType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"rootGeoObjectTypes\": [],\n\t\t\t\"organizationCode\": \"\"\n\t\t};\n\n\t\tthis.registryService.getOrganizations().then(orgs => {\n\n\t\t\t// Filter out organizations they're not RA's of, unless we're readOnly.\n\t\t\tif (!this.readOnly) {\n\t\t\t\tthis.organizations = [];\n\n\t\t\t\tfor (var i = 0; i < orgs.length; ++i) {\n\t\t\t\t\tif (this.auth.isOrganizationRA(orgs[i].code)) {\n\t\t\t\t\t\tthis.organizations.push(orgs[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.organizations = orgs;\n\t\t\t}\n\n\t\t\tif (!this.edit && this.organizations.length === 1) {\n\t\t\t\tthis.hierarchyType.organizationCode = this.organizations[0].code;\n\t\t\t\tthis.organizationLabel = this.organizations[0].label.localizedValue;\n\t\t\t}\n\t\t\telse if (this.edit || this.readOnly) {\n\t\t\t\tthis.organizationLabel = this.getOrganizationLabelFromCode(this.hierarchyType.organizationCode);\n\t\t\t}\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tgetOrganizationLabelFromCode(orgCode: string) {\n\t\tfor (var i = 0; i < this.organizations.length; ++i) {\n\t\t\tif (this.organizations[i].code === orgCode) {\n\t\t\t\treturn this.organizations[i].label.localizedValue;\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(\"Did not find org with code [\" + orgCode + \"]\");\n\t\treturn orgCode;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tif (this.readOnly) {\n\t\t\tthis.bsModalRef.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.edit) {\n\t\t\tconsole.log(this.hierarchyType);\t\t\t\n\t\t\t\n\t\t\tthis.hierarchyService.updateHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.hierarchyService.createHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<form>\n\n  <div class=\"modal-body\">\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n      <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"heading text-center\">\n          <h1>\n            <localize key=\"hierarchy.management.create.hierarchy.title\"></localize> \n          </h1>\n        </div> \n        \n      <div class=\"form-group\">\n        <label for=\"codeInput\">\n          <localize key=\"data.property.label.code\"></localize>\n        </label>\n        <input [(ngModel)]=\"hierarchyType.code\" name=\"code\" type=\"input\" class=\"form-control\" id=\"codeInput\"\n          [disabled]=\"edit || readOnly\" required>\n      </div>\n      <div class=\"form-group\" *ngFor=\"let localeValue of hierarchyType.label.localeValues\">\n        <label for=\"labelInput\">\n          <localize key=\"data.property.label.label\"></localize> \n          <span  style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n        </label>\n        <input [disabled]=\"readOnly\" [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\"\n          required>\n      </div>\n      \n      <localized-text [(value)]=\"hierarchyType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\" [disabled]=\"readOnly\"></localized-text>\n\n      <div class=\"form-group\">\n        <label for=\"organization\">\n          <localize key=\"attribute.organization.label\"></localize>\n        </label>\n        <select *ngIf=\"!edit && organizations.length > 1\" [disabled]=\"edit || readOnly\" class=\"select-area\" name=\"organization\"\n          [(ngModel)]=\"hierarchyType.organizationCode\" required>\n          <option></option>\n          <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label.localizedValue}}</option>\n        </select>\n        <span *ngIf=\"!edit && organizations.length == 1\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n        <span *ngIf=\"edit\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.progress\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.progress\" name=\"progress\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.acknowledgement\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.acknowledgement\" name=\"acknowledgement\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.disclaimer\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.disclaimer\" name=\"disclaimer\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.accessConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.useConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      \n      <hr/>\n      \n      <div class=\"form-group\">\n        <h4>\n          <localize key=\"masterlist.contact\"></localize>\n        </h4>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.contact\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.contact\" name=\"contact\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.phoneNumber\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.phoneNumber\" name=\"phoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.email\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>      \n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readOnly\" type=\"submit\" [disabled]=\"hierarchyType.code.length < 1 || form.invalid\" class=\"btn btn-primary\"\n              (click)=\"handleOnSubmit()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { Organization } from '@shared/model/core';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\n@Component({\n\tselector: 'create-geoobjtype-modal',\n\ttemplateUrl: './create-geoobjtype-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateGeoObjTypeModalComponent implements OnInit {\n\n\tgeoObjectType: GeoObjectType;\n\torganization: Organization = null;\n\tmessage: string = null;\n\tparents: GeoObjectType[];\n\thierarchyType: HierarchyType;\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onGeoObjTypeCreate: Subject<GeoObjectType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjTypeCreate = new Subject();\n\n\t\tthis.geoObjectType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"geometryType\": \"MULTIPOINT\",\n\t\t\t\"isLeaf\": false,\n\t\t\t\"isGeometryEditable\": true,\n\t\t\t\"organizationCode\": \"\",\n\t\t\t\"attributes\": [],\n\t\t};\n\t}\n\n\tinit(organization: Organization, parents: GeoObjectType[], groupSuperType: GeoObjectType, isAbstract: boolean) {\n\n\t\tthis.geoObjectType.isAbstract = isAbstract ? isAbstract : false;\n\n\t\tif (groupSuperType) {\n\t\t\tthis.geoObjectType.superTypeCode = groupSuperType.code;\n\t\t\tthis.geoObjectType.geometryType = groupSuperType.geometryType;\n\t\t\tthis.geoObjectType.isPrivate = groupSuperType.isPrivate;\n\t\t}\n\n\t\t// Filter out parents that are not abstract\n\t\tthis.parents = parents.filter(parent => parent.isAbstract);\n\n\t\t// Filter out organizations they're not RA's of\n\t\tthis.organization = organization;\n\t\tthis.geoObjectType.organizationCode = this.organization.code;\n\t\tthis.organizationLabel = this.organization.label.localizedValue;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tthis.registryService.createGeoObjectType(JSON.stringify(this.geoObjectType)).then(data => {\n\t\t\tthis.onGeoObjTypeCreate.next(data);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\ttoggleIsLeaf(): void {\n\t\tthis.geoObjectType.isLeaf = !this.geoObjectType.isLeaf;\n\t}\n\n\ttoggleIsGeometryEditable(): void {\n\t\tthis.geoObjectType.isGeometryEditable = !this.geoObjectType.isGeometryEditable;\n\t}\n\n\ttoggleIsAbstract(): void {\n\t\tthis.geoObjectType.isAbstract = !this.geoObjectType.isAbstract;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"form.valid && handleOnSubmit()\" class=\"modal-form\">\n\n  <div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize *ngIf=\"geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.group.title\"></localize> \n        <localize *ngIf=\"!geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.title\"></localize> \n      </h1>\n    </div> \n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <div>\n            <label for=\"codeInput\">\n              <localize key=\"data.property.label.code\"></localize>\n            </label>\n            <input [(ngModel)]=\"geoObjectType.code\" name=\"code\" type=\"text\" class=\"form-control\" id=\"codeInput\"\n              required>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\" *ngFor=\"let localeValue of geoObjectType.label.localeValues\">\n          <label>\n            <localize key=\"data.property.label.label\"></localize> \n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\"\n            class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <localized-text [(value)]=\"geoObjectType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\"></localized-text>\n      </div>\n    </div>\n    \n    <div class=\"row\" *ngIf=\"!geoObjectType.superTypeCode\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <label style=\"display: block;\">\n            <localize key=\"attribute.group.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n        \n          <label style=\"display: block;\">\n            <localize key=\"geoObjectType.attr.visibility.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"geoObjectType.superTypeCode != null\" [(value)]=\"geoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"geometryType\">\n            <localize key=\"data.property.label.geometryType\"></localize>\n          </label>\n          <select class=\"select-area\" name=\"geometryType\" [(ngModel)]=\"geoObjectType.geometryType\" required [disabled]=\"geoObjectType.superTypeCode != null && geoObjectType.superTypeCode != ''\">\n            <option></option>\n            <!-- <option value=\"POINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"LINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"POLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n            <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.multipoint\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.multiline\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.multipolygon\"></localize>\n            </option> -->\n             <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <!-- \n    <div class=\"form-group\">\n      <div >\n        <div class=\"check-block\" style=\"display:inline-block;\">\n         <div (click)=\"toggleIsLeaf()\" [ngClass]=\"{'chk-checked' : geoObjectType.isLeaf}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n          <span></span>\n         </div>\n    \n         <label class=\"checkbox-label\" style=\"line-height: normal;\"> <localize key=\"hierarchy.management.option.label.isLeafNode\"></localize></label>\n        </div>\n       </div>\n    </div>\n -->\n\n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <div class=\"check-block\">\n            <div (click)=\"toggleIsGeometryEditable()\" [ngClass]=\"{'chk-checked' : geoObjectType.isGeometryEditable}\"\n              style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n              <span></span>\n            </div>\n\n            <label class=\"checkbox-label\">\n              <localize key=\"hierarchy.management.option.label.isGeometryEditable\"></localize>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"organization\">\n            <localize key=\"attribute.organization.label\"></localize>\n          </label>\n          <span class=\"text\">\n            <input type=\"text\" name=\"organization\" [(ngModel)]=\"organizationLabel\" disabled required>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-primary\">\n            <localize key=\"modal.button.ok\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyService, GeoObjectTypeManagementService } from '@registry/service';\n\n\n@Component({\n\tselector: 'manage-geoobjecttype-modal',\n\ttemplateUrl: './manage-geoobjecttype-modal.component.html',\n\tstyleUrls: ['./manage-geoobjecttype-modal.css']\n})\nexport class ManageGeoObjectTypeModalComponent implements OnInit {\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": \"\", \"termOption\": \"\" };\n\tmodalStateSubscription: Subscription;\n\tgeoObjectType: GeoObjectType;\n\tpublic onGeoObjectTypeSubmitted: Subject<GeoObjectType>;\n\treadOnly: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, geoObjectTypeManagementService: GeoObjectTypeManagementService) {\n\t\tthis.modalStateSubscription = geoObjectTypeManagementService.modalStepChange.subscribe(modalState => {\n\t\t\tthis.modalState = modalState;\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjectTypeSubmitted = new Subject();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.modalStateSubscription.unsubscribe();\n\t}\n\n\tonModalStateChange(state: any): void {\n\t\tthis.modalState = state;\n\t}\n\n\tonGeoObjectTypeChange(data: any): void {\n\t\t// send persisted geoobjecttype to the parent calling component (hierarchy.component) so the \n\t\t// updated GeoObjectType can be reflected in the template\n\t\tthis.onGeoObjectTypeSubmitted.next(data);\n\t}\n\n\tupdate(): void {\n\n\t}\n\n\tclose(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","\n<form>\n\n  <modal-step-indicator></modal-step-indicator>\n\n  <geoobjecttype-input *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\" [readOnly]=\"readOnly\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\" [geoObjectType]=\"geoObjectType\" [setGeoObjectType]=\"geoObjectType\"></geoobjecttype-input>\n\n  <manage-attributes-modal *ngIf=\"modalState.state === 'MANAGE-ATTRIBUTES'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></manage-attributes-modal>\n\n  <define-attribute-modal-content *ngIf=\"modalState.state === 'DEFINE-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></define-attribute-modal-content>\n\n  <edit-attribute-modal-content *ngIf=\"modalState.state === 'EDIT-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></edit-attribute-modal-content>\n\n  <manage-term-options *ngIf=\"modalState.state === 'MANAGE-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\"></manage-term-options>\n\n  <edit-term-option-input *ngIf=\"modalState.state === 'EDIT-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" [termOption]=\"modalState.termOption\"></edit-term-option-input>\n\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { StepConfig } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component( {\n    selector: 'geoobjecttype-input',\n    templateUrl: './geoobjecttype-input.component.html',\n    styleUrls: ['./geoobjecttype-input.css']\n} )\nexport class GeoObjectTypeInputComponent implements OnInit {\n\n    @Input() readOnly: boolean = false;\n    @Input() geoObjectType: GeoObjectType;\n    @Output() geoObjectTypeChange:  EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n    editGeoObjectType: GeoObjectType;\n    \n    organizationLabel: string;\n    \n    @Input('setGeoObjectType') \n    set in(geoObjectType: GeoObjectType){\n        if(geoObjectType){\n          this.editGeoObjectType = JSON.parse(JSON.stringify(geoObjectType));\n        //   this.geoObjectType = geoObjectType;\n        }\n    }\n    message: string = null;\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\":\"\", \"termOption\":\"\"};\n\n    modalStepConfig: StepConfig = {\"steps\": [\n        {\"label\":this.localizationService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\":true, \"enabled\":true}\n    ]};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, \n        private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, \n        private localizationService: LocalizationService, private registryService: RegistryService ) {\n    \n    }\n\n    ngOnInit(): void {\n\n        this.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n        this.geoObjectTypeManagementService.setModalState(this.modalState);\n        \n        this.fetchOrganizationLabel();\n    }\n\n    fetchOrganizationLabel(): void {\n        \n      this.registryService.getOrganizations().then(orgs => {\n      \n        for (var i = 0; i < orgs.length; ++i)\n        {\n          if (orgs[i].code === this.editGeoObjectType.organizationCode)\n          {\n            this.organizationLabel = orgs[i].label.localizedValue;\n          }\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n      });\n    }\n\n    manageAttributes(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageAttributes, \"attribute\":\"\", \"termOption\":\"\"})\n    }\n\n    onModalStateChange(state: ManageGeoObjectTypeModalState): void {\n        this.modalState = state;\n    }\n\n    update(): void {\n        this.registryService.updateGeoObjectType( this.editGeoObjectType ).then( geoObjectType => {\n\n            // emit the persisted geoobjecttype to the parent widget component (manage-geoobjecttype.component)\n            // so that the change can be updated in the template\n            this.geoObjectTypeChange.emit(geoObjectType);\n\n            this.close();\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // resetGeoObjectType(): void {\n    //     this.geoObjectType = this.geoObjectTypeOriginal;\n    // }\n\n    close(): void {\n        // this.resetGeoObjectType();\n        this.bsModalRef.hide();\n    }\n\n\n    isValid(): boolean {\n        // if(this.attribute.code && this.attribute.label) {\n\n        //     // if code has a space\n        //     if(this.attribute.code.indexOf(\" \") !== -1){\n        //         return false;\n        //     }\n\n        //     // If label is only spaces\n        //     if(this.attribute.label.replace(/\\s/g, '').length === 0) {\n        //         return false\n        //     }\n\n        //     return true;\n        // }\n        \n        // return false;\n\n        return true;\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","\n<div class=\"modal-body\" *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"editGeoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading text-center\">\n            <h1>\n                <localize key=\"hierarchy.management.edit.geoobjecttype.title\"></localize>\n                : {{editGeoObjectType.label.localizedValue}}\n            </h1>\n        </div>\n        <fieldset>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.code\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"editGeoObjectType.code\" name=\"code\" disabled required>\n                    </span>\n                </div>\n            </div>\n            \n            <localized-input [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.label\" key=\"data.property.label.label\"></localized-input>\n            <localized-text [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.description\" key=\"data.property.label.description\"></localized-text>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"attribute.group.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"geoObjectType.attr.visibility.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"geoObjectType.superTypeCode\" [(value)]=\"editGeoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\" *ngIf=\"!geoObjectType.isAbstract && geoObjectType.superTypeCode\">\n                <div class=\"label-holder\">\n                    <localize key=\"attribute.parentType.label\"></localize>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> \n                        {{geoObjectType.superTypeCode}}\n                    </span>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.geometryType\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select name=\"geometryType\" [(ngModel)]=\"editGeoObjectType.geometryType\" disabled>\n                        <option></option>\n                         <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <!-- <option value=\"POINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"LINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"POLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.multipoint\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.multiline\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.multipolygon\"></localize></option> -->\n                    </select>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.option.label.geometryEditable\"></localize></label>\n                </div>\n                <div class=\"holder\">\n\n                    <boolean-field [disable]=\"readOnly\" [(value)]=\"editGeoObjectType.isGeometryEditable\" [localizeLabelKey]=\"'hierarchy.management.option.label.isGeometryEditable'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"attribute.organization.label\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n              </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group list-group-flush\">\n                                <li *ngFor=\"let attr of editGeoObjectType.attributes\" class=\"list-group-item\">{{attr.label.localizedValue}}</li>\n                            </ul>\n\n                            <button [disabled]=\"readOnly || geoObjectType.superTypeCode\" type=\"button\" class=\"btn btn-primary full-width\" (click)=\"manageAttributes()\">\n                                <localize key=\"modal.button.manageAttributes\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.cancel\"></localize>\n                        </button>\n                        <button *ngIf=\"!readOnly\" type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"update()\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n        </fieldset>\n    </form>\n</div>\n\n<!-- </form> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component({\n\tselector: 'manage-attributes-modal',\n\ttemplateUrl: './manage-attributes-modal.component.html',\n\tstyleUrls: ['./manage-attributes-modal.css']\n})\nexport class ManageAttributesModalComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": this.attribute, \"termOption\": \"\" };\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onDeleteAttribute: Subject<boolean>;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, private localizeService: LocalizationService,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onDeleteAttribute = new Subject();\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.onDeleteAttribute.unsubscribe();\n\t}\n\n\tdefineAttributeModal(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\teditAttribute(attr: Attribute, e: any): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": attr, \"termOption\": \"\" })\n\t}\n\n\tremoveAttributeType(attr: Attribute, e: any): void {\n\n\t\tthis.confirmBsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.confirmBsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + attr.label.localizedValue + ']';\n\t\tthis.confirmBsModalRef.content.data = { 'attributeType': attr, 'geoObjectType': this.geoObjectType };\n\t\tthis.confirmBsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.confirmBsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.confirmBsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteAttributeType(data.geoObjectType.code, data.attributeType);\n\t\t});\n\t}\n\n\tdeleteAttributeType(geoObjectTypeCode: string, attr: Attribute): void {\n\n\t\tthis.registryService.deleteAttributeType(geoObjectTypeCode, attr.code).then(data => {\n\t\t\tthis.onDeleteAttribute.next(data);\n\n\t\t\tif (data) {\n\t\t\t\tthis.geoObjectType.attributes.splice(this.geoObjectType.attributes.indexOf(attr), 1);\n\t\t\t}\n\t\t\t\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"geoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading\">\n            <h1>\n                <localize key=\"hierarchy.management.manage.attributes.title\"></localize> {{geoObjectType.label.localizedValue}}</h1>\n        </div>\n        <fieldset>\n\n            <div>\n                <div class=\"label-holder\">\n                    <label>\n                        <localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder dataset-attr-holder\">\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <localize key=\"data.property.label.label\"></localize>\n                                    </th>\n                                    <th class=\"button-column-header\">\n                                        <localize key=\"data.property.label.actions\"></localize>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let attr of geoObjectType.attributes\">\n                                    <td>{{attr.label.localizedValue}}</td>\n                                    <td class=\"button-column\">\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\"\n                                            [title]=\"'modal.button.edit' | localize\"></a>\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\"\n                                            [title]=\"'modal.button.remove' | localize\"></a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <!-- <table class=\"list-table table table-bordered table-striped\">\n                        <tbody>\n                        <tr *ngFor=\"let attr of geoObjectType.attributes\" class=\"fade-ngRepeat-item\">\n                            <td class=\"button-column\">\n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\" title=\"<localize key='modal.button.edit'></localize>\"></a>                             \n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\" title=\"<localize key='modal.button.remove'></localize>\"></a>\n                            </td>                  \n                            <td class=\"submit-form\">\n                            <dl>\n                                <dd>\n                                <h4 class=\"disabled\" >{{attr.label}}</h4>\n                                </dd>\n                            </dl>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table> -->\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <i class=\"fa fa-plus clickable\" style=\"font-size:20px;margin:10px 0 10px 0;\" aria-hidden=\"true\" (click)=\"defineAttributeModal()\">\n                        <localize key=\"modal.button.add\"></localize>\n                    </i>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n\n</div>\n\n","import { Component, OnInit, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, AttributeTerm, AttributeDecimal, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n@Component({\n\tselector: 'define-attribute-modal-content',\n\ttemplateUrl: './define-attribute-modal-content.component.html',\n\tstyleUrls: ['./define-attribute-modal-content.css']\n})\nexport class DefineAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tnewAttribute: Attribute = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.create.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" };\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.setAttribute(\"character\");\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit(): void {\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tthis.attributeInputComponent.animate();\n\t\t}\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.addAttributeType(this.geoObjectType.code, this.newAttribute).then(data => {\n\t\t\tthis.geoObjectType.attributes.push(data);\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsetAttribute(type: string): void {\n\t\tif (type === 'term') {\n\t\t\tthis.newAttribute = new AttributeTerm(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse if (type === 'float') {\n\t\t\tthis.newAttribute = new AttributeDecimal(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse {\n\t\t\tthis.newAttribute = new Attribute(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t}\n\n\tisFormValid(): boolean {\n\n\t\tlet isAttrValid: boolean = false;\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tisAttrValid = this.attributeInputComponent.isValid();\n\t\t}\n\n\t\tif (isAttrValid) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <!-- <error-message [message]=\"message\"></error-message> -->\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.define.attribute.title\"></localize>\n                    </h1>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\" style=\"margin-bottom: 20px;\">\n                        <div class=\"btn-group define-attribute-btns\">\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'character'}\" (click)=\"setAttribute('character')\">\n                                <localize key=\"data.type.label.text\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'integer'}\" (click)=\"setAttribute('integer')\">\n                                <localize key=\"data.type.label.integer\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'float'}\" (click)=\"setAttribute('float')\">\n                                <localize key=\"data.type.label.float\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'date'}\" (click)=\"setAttribute('date')\">\n                                <localize key=\"data.type.label.date\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'boolean'}\" (click)=\"setAttribute('boolean')\">\n                                <localize key=\"data.type.label.boolean\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'term'}\" (click)=\"setAttribute('term')\">\n                                <localize key=\"data.type.label.term\"></localize>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"false\" [excludeDescription]=\"false\" [isDecimal]=\"newAttribute.type === 'float' ? true : false\" [(attribute)]=\"newAttribute\"></attribute-input>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidatorFn, Validator, FormControl } from '@angular/forms';\n\n\n// validation function\nfunction validateGeoObjectAttributeCodeValidator() : ValidatorFn {\n  return (c: AbstractControl) => {\n    if(c.value){\n        let isValid = c.value.indexOf(\" \") === -1;\n        \n        if(isValid) {\n            return null;\n        } else {\n            return {\n                geoObjectAttributeCode: {\n                     valid: false\n                }\n            };\n        }\n    }\n\n  }\n}\n\n\n@Directive({\n  selector: '[geoObjectAttributeCode][ngModel]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: GeoObjectAttributeCodeValidator, multi: true }\n  ]\n})\nexport class GeoObjectAttributeCodeValidator implements Validator {\n  validator: ValidatorFn;\n  \n  constructor() {\n    this.validator = validateGeoObjectAttributeCodeValidator();\n  }\n  \n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n  \n}","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\n\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n\n@Component({\n\tselector: 'edit-attribute-modal-content',\n\ttemplateUrl: './edit-attribute-modal-content.component.html',\n\tstyleUrls: ['./edit-attribute-modal-content.css']\n})\nexport class EditAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\tconstructor(public bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeType(this.geoObjectType.code, this.attribute).then(data => {\n\n\t\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\t\tif (attr.code === data.code) {\n\t\t\t\t\tObject.assign(attr, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\tback(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n            \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.attribute.title\"></localize>: {{attribute.label.localizedValue}}\n                    </h1>\n                    \n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'character'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.text\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'integer'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.integer\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'float'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.float\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'boolean'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.boolean\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'date'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.date\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'term'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.term\"></localize></h4>                    \n                </div>\n                \n                \n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"true\" [excludeDescription]=\"attribute.type === 'term' ? true : false\" [isDecimal]=\"attribute.type === 'float' ? true : false\" [(attribute)]=\"attribute\"></attribute-input>\n\n                    <!-- *ngIf=\"attribute.type === 'term' && isFormValid()\" -->\n                    <term-option-widget *ngIf=\"attribute.type === 'term' && isFormValid()\" [(attribute)]=\"attribute\" [geoObjectType]=\"geoObjectType\"></term-option-widget>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n    \n\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, AttributeTerm, GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, Term} from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service/hierarchy.service';\nimport { GeoObjectTypeManagementService } from '@registry/service/geoobjecttype-management.service'\n\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component( {\n    selector: 'term-option-widget',\n    templateUrl: './term-option-widget.component.html',\n    styleUrls: ['./term-option-widget.css'],\n    animations: [\n        trigger('toggleInputs', [\n            state('none, void', \n                style({ 'opacity': 0})\n              ),\n              state('show', \n                style({ 'opacity': 1})\n              ),\n              transition('none => show', animate('300ms')),\n              transition('show => none', animate('100ms'))\n        ]),\n        trigger('openClose', \n            [\n            transition(\n                ':enter', [\n                style({ 'opacity': 0}),\n                animate('500ms', style({ 'opacity': 1}))\n                ]\n            ),\n            transition(\n                ':leave', [\n                style({ 'opacity': 1}),\n                animate('0ms', style({'opacity': 0})),\n                \n                ]\n            )]\n      )\n    ]\n} )\nexport class TermOptionWidgetComponent implements OnInit {\n\n    @Input() geoObjectType: GeoObjectType;\n    @Input() attribute: AttributeTerm;\n    @Output() attributeChange = new EventEmitter<AttributeTerm>();\n    message: string = null;\n    state: string = 'none';\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\":\"\"};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService ) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit() {\n        this.state = 'show';\n        this.cdr.detectChanges();\n    }\n\n    ngOnDestroy(){\n    \n    }\n\n    handleOnSubmit(): void {\n        \n    }\n\n    animate(): void {\n        this.state = \"none\";\n    }\n\n    onAnimationDone(event: AnimationEvent): void {\n        this.state = \"show\";\n    }\n\n    // isValid(): boolean {\n    //     if(this.termOption.code && this.termOption.code.length > 0 && this.termOption.label && this.termOption.label.length > 0){\n            \n    //         // If code has a space\n    //         if(this.termOption.code.indexOf(\" \") !== -1){\n    //             return false;\n    //         }\n\n    //         // If label is only spaces\n    //         if(this.termOption.label.replace(/\\s/g, '').length === 0) {\n    //             return false\n    //         }\n\n    //         return true;\n    //     }\n    //     else if(this.termOption.code && this.termOption.code.indexOf(\" \") !== -1){\n    //         return false;\n    //     }\n            \n    //     return false\n    // }\n\n    openAddTermOptionForm(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\": \"\"})\n\n    }    \n}\n","<div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n\n    <div>\n        <div class=\"label-holder\">\n            <label>\n                <localize key=\"hierarchy.management.manage.attributes.label.displayTerms\"></localize>\n            </label>\n        </div>\n        <div class=\"holder\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <ul class=\"list-group list-group-flush\">\n                        <li *ngFor=\"let term of attribute.rootTerm.children\" class=\"list-group-item\">{{term.label.localizedValue}}</li>\n                    </ul>\n\n                    <button type=\"button\" class=\"btn btn-primary full-width\" (click)=\"openAddTermOptionForm()\">\n                        <localize key=\"modal.button.manageTermOptions\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { GeoObjectType, AttributeTerm, Term, GeoObjectTypeModalStates } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-term-options',\n\ttemplateUrl: './manage-term-options.component.html',\n\tstyleUrls: ['./manage-term-options.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms')),\n\t\t\ttransition('show => none', animate('100ms'))\n\t\t]),\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class ManageTermOptionsComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Output() attributeChange = new EventEmitter<AttributeTerm>();\n\tmessage: string = null;\n\ttermOption: Term;\n\tstate: string = 'none';\n\tenableTermOptionForm = false;\n\tmodalStepConfig: StepConfig = {\r\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": true }\n\t\t]\r\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t\tthis.termOption = new Term(\"\", this.localizeService.create(), this.localizeService.create());\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.termOption.code && this.termOption.code.length > 0) {\n\n\t\t\t// If code has a space\n\t\t\tif (this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If label is only spaces\n\t\t\tfor (let i = 0; i < this.termOption.label.localeValues.length; i++) {\n\t\t\t\tif (this.termOption.label.localeValues[i].value.replace(/\\s/g, '').length === 0) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.termOption.code && this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false\n\t}\n\n\taddTermOption(): void {\n\n\t\tthis.registryService.addAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\n\t\t\tthis.attribute.rootTerm.children.push(data);\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t\tthis.enableTermOptionForm = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tdeleteTermOption(termOption: Term): void {\n\n\t\tthis.registryService.deleteAttributeTermTypeOption(this.attribute.rootTerm.code, termOption.code).then(data => {\n\n\t\t\tif (this.attribute.rootTerm.children.indexOf(termOption) !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children.splice(this.attribute.rootTerm.children.indexOf(termOption), 1);\n\t\t\t}\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tremoveTermOption(termOption: Term): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + termOption.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteTermOption(termOption);\n\t\t});\n\t}\n\n\teditTermOption(termOption: Term): void {\n\n\t\tconst state = {\n\t\t\t\"state\": GeoObjectTypeModalStates.editTermOption,\n\t\t\t\"attribute\": this.attribute,\n\t\t\t\"termOption\": JSON.parse(JSON.stringify(termOption))\n\t\t};\n\n\t\tthis.geoObjectTypeManagementService.setModalState(state);\n\t}\n\n\tclearTermOption(): void {\n\t\tthis.termOption.code = \"\";\n\t\tthis.termOption.label = this.localizeService.create();\n\t\tthis.termOption.description = this.localizeService.create();\n\t}\n\n\tcancelTermOption(): void {\n\t\tthis.clearTermOption();\n\t\tthis.enableTermOptionForm = false;\n\t}\n\n\topenAddTermOptionForm(): void {\n\t\tthis.enableTermOptionForm = true;\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <fieldset>\n\n            <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n            <div class=\"heading\">\n                <h1>\n                    <localize key=\"hierarchy.management.edit.term.options.title\">: {{attribute.label.localizedValue}}</localize>\n                </h1>\n            </div>\n            <div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n                <div [@openClose]>\n                    <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"term.option.input.label.existingTypes\"></localize>\n                        </label>\n                    </div>\n                    <div class=\"holder\">\n                        <span class=\"text\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>\n                                                <localize key=\"data.property.label.code\"></localize>\n                                            </th>\n                                            <th *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <localize key=\"data.property.label.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n                                            </th>\n                                            <th class=\"button-column-header\">\n                                                <localize key=\"data.property.label.actions\"></localize>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let option of attribute.rootTerm.children\">\n                                            <td>{{option.code}}</td>\n                                            <td *ngFor=\"let localeValue of option.label.localeValues\">{{localeValue.value}}</td>\n                                            <td class=\"button-column\">\n                                                <a class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editTermOption(option, $event)\"></a>\n                                                <a class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeTermOption(option, $event)\"></a>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <input type=\"text\" [(ngModel)]=\"termOption.code\" name=\"termOptionCode\" [required]=\"termOption.label ? true : null \">\n                                            </td>\n                                            <td *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <input type=\"text\" [(ngModel)]=\"localeValue.value\" [name]=\"'termOptionLabel-' + localeValue.locale\" [required]=\"termOption.code ? true : null \">\n                                            </td>\n                                            <td class=\"button-column\">\n                                                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"addTermOption()\">\n                                                    <localize key=\"modal.button.add\"></localize>\n                                                </button>\n                                                <!-- <a class=\"fa fa-plus-square ico-edit\" [routerLink]=\"\" (click)=\"addTermOption()\"></a> -->\n                                                <!-- <a class=\"fa fa-trash ico-remove\" [routerLink]=\"\" (click)=\"cancelTermOption()\"></a> -->\n                                                <!-- <button type=\"button\" class=\"btn btn-default\" (click)=\"cancelTermOption()\">\n                                    <localize key=\"modal.button.cancel\"></localize> \n                                </button> -->\n\n                                            </td>\n                                        </tr>\n                                        <!-- <tr>\n                          <td></td>\n                          <td></td>\n                          <td class=\"button-column\"> \n                            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"enableTermOptionForm === false\" (click)=\"openAddTermOptionForm()\">\n                                <localize key=\"modal.button.add\"></localize>\n                            </button>\n                          </td>\n                        </tr> -->\n                                        <!-- <a class=\"fa fa-plus\" [routerLink]=\"\" (click)=\"openAddTermOptionForm()\"></a> -->\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.done\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig } from '@shared/model/modal';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { GeoObjectType, AttributeTerm, Term, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\n@Component({\n\tselector: 'edit-term-option-input',\n\ttemplateUrl: './edit-term-option-input.component.html',\n\tstyleUrls: [],\n\tanimations: [\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class EditTermOptionInputComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Input() termOption: Term;\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.term.option\"), \"active\": true, \"enabled\": true }\n\n\t\t]\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\t\t\t// Update the term definition on the attribute\n\t\t\tconst index = this.attribute.rootTerm.children.findIndex(t => t.code === data.code);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children[index] = data;\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #tForm=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"!tForm.invalid && handleOnSubmit()\">\n    \n        <div class=\"\">\n            <div class=\"\">\n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.term.option.title\"></localize>\n                    </h1>\n                </div>\n\n                <fieldset>\n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                            <label>\n                                <localize key=\"data.property.label.code\"></localize>\n                            </label>\n                        </div>\n                        <div class=\"holder\">\n                            <span class=\"text\">\n                                <input type=\"text\" [disabled]=\"true\" [(ngModel)]=\"termOption.code\" name=\"code\">\n                            </span>\n                        </div>\n                    </div>\n                    \n                    <localized-input [(value)]=\"termOption.label\" key=\"data.property.label.label\"></localized-input>\n                    \n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                        </div>\n                        <div class=\"holder\">\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"tForm.invalid\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n\n</div>\n","import * as d3 from 'd3';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyComponent } from '../hierarchy.component';\nimport { SvgHierarchyNode } from './svg-hierarchy-node';\nimport { calculateTextWidth, svgPoint } from './svg-util';\nimport { INHERITED_NODE_BANNER_COLOR, DEFAULT_NODE_BANNER_COLOR, RELATED_NODE_BANNER_COLOR, DEFAULT_NODE_FILL, INHERITED_NODE_FILL } from '../hierarchy.component';\n\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { TREE_SCALE_FACTOR_X, TREE_SCALE_FACTOR_Y } from '../hierarchy.component'; \n\nexport class SvgHierarchyType {\n\n\tpublic static gotRectW: number = 150;\n\tpublic static gotRectH: number = 25;\n\tpublic static gotBodyFontSize: number = 8;\n\tpublic static gotOptionsButtonFontSize: number = 12;\n\n\tpublic static gotHeaderW: number = 150;\n\tpublic static gotHeaderH: number = 14;\n\tpublic static gotHeaderFontSize: number = 8;\n\t\n\tpublic static MOUSE_HOVER_EVENT_ENTER = \"mouseenter\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_MOVE = \"mousemove\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_EXIT = \"mouseleave\";\n\t\n\thierarchyComponent: HierarchyComponent;\n\n\thierarchyType: HierarchyType;\n\n\tsvgEl: any;\n\n\td3Hierarchy: any;\n\n\td3Tree: any;\n\n\tisPrimary: boolean;\n\t\n\ttooltip: any;\n\n\tpublic constructor(hierarchyComponent: HierarchyComponent, svgEl: any, ht: HierarchyType, isPrimary: boolean, public localizationService: LocalizationService, public modalService: BsModalService, public authService: AuthService) {\n\t\tconst hierarchyType = ht;\n\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.hierarchyType = hierarchyType;\n\t\tthis.svgEl = svgEl;\n\n\t\tthis.d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]);\n\t\tthis.isPrimary = isPrimary;\n\n\t\tthis.d3Tree = d3.tree().nodeSize([ SvgHierarchyType.gotRectW*TREE_SCALE_FACTOR_X, (SvgHierarchyType.gotRectH + SvgHierarchyType.gotHeaderH)*TREE_SCALE_FACTOR_Y ]).separation((a, b) => 0.8)(this.d3Hierarchy);\n\t}\n\t\n\tpublic getD3Tree() {\n\t\treturn this.d3Tree;\n\t}\n\n\tpublic getCode(): string {\n\t\treturn this.hierarchyType.code\n\t}\n\n\tpublic getNodeByCode(gotCode: string): SvgHierarchyNode {\n\t\tlet treeNode = this.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n\t\t\n\t\tif (treeNode == null)\n\t\t{\n\t\t  return null;\n\t\t}\n\t\t\n\t\treturn new SvgHierarchyNode(this.hierarchyComponent, this, this.hierarchyComponent.findGeoObjectTypeByCode(gotCode), treeNode, this.localizationService, this.modalService, this.authService);\n\t}\n\n\tpublic renderHierarchyHeader(hg: any, colHeaderLabel: string) {\n\t\tlet bbox = hg.node().getBBox();\n\n\t\tlet colHeader = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tlet headerg = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tconst headerFontSize: number = 10;\n\t\tconst iconWidth: number = 20;\n\t\tconst maxHierarchyLabelLength = 200;\n\t\t\n\t\tlet hierarchyLabelW: number = calculateTextWidth(this.hierarchyType.label.localizedValue, headerFontSize);\n\t\tlet hierarchyLabelH:number = headerFontSize*2;\n\t\tlet hierarchyLabelY:number = bbox.y + headerFontSize*1.6;\n\t\tif (hierarchyLabelW > maxHierarchyLabelLength)\n\t\t{\n\t\t  hierarchyLabelW = maxHierarchyLabelLength;\n\t\t  hierarchyLabelH = headerFontSize*3;\n\t\t  hierarchyLabelY = bbox.y + headerFontSize;\n\t\t}\n\n\t\tlet lineWidth = bbox.width;\n\t\tlet textWidth = hierarchyLabelW + iconWidth;\n\n\t\tif (textWidth > lineWidth) {\n\t\t\tlineWidth = textWidth;\n\t\t}\n\n\t\t// Hierarchy icon (font awesome)\n\t\theaderg.append(\"text\").classed(\"hierarchy-header-icon\", true)\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"font-size\", 12)\n\t\t\t.text('\\uf0e8');\n\n\t\t// Hierarchy display label\n\t\tcolHeader.append(\"foreignObject\").classed(\"hierarchy-header-label\", true)\n      .attr(\"font-size\", headerFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"x\", bbox.x + iconWidth)\n      .attr(\"y\", hierarchyLabelY)\n      .attr(\"width\", hierarchyLabelW)\n      .attr(\"height\", hierarchyLabelH)\n      .append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"text-align\", \"left\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"gray\")\n      //.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n      .style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n      .html((d: any) => this.hierarchyType.label.localizedValue)\n\n\t\t// Line underneath the header\n\t\theaderg.append(\"line\").classed(\"hierarchy-header-line\", true)\n\t\t\t.attr(\"x1\", bbox.x)\n\t\t\t.attr(\"y1\", bbox.y + headerFontSize)\n\t\t\t.attr(\"x2\", bbox.x + lineWidth)\n\t\t\t.attr(\"y2\", bbox.y + headerFontSize)\n\t\t\t.attr(\"stroke\", \"grey\")\n\t\t\t.attr(\"stroke-width\", .5);\n\n\t\tlet headerGBbox = headerg.node().getBBox();\n\t\theaderg.attr(\"transform\", \"translate(0 -\" + headerGBbox.height + \")\");\n\n\t\t// Col header label\n\t\tcolHeader.append(\"text\").classed(\"hierarchy-header-label\", true)\n\t\t\t.attr(\"font-size\", headerFontSize + 2)\n\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.text(colHeaderLabel);\n\t  \n\t\tcolHeader.attr(\"transform\", \"translate(0 -\" + headerGBbox.height * 2.5 + \")\");\n\n\t\treturn headerg;\n\t}\n\n\tgetRelatedHierarchies(gotCode: string): string[] {\n\t\tlet got: GeoObjectType = this.hierarchyComponent.findGeoObjectTypeByCode(gotCode);\n\n\t\tif (got.relatedHierarchies == null) {\n\t\t\tgot.relatedHierarchies = this.hierarchyComponent.calculateRelatedHierarchies(got);\n\t\t}\n\n    let relatedHiers: string[] = got.relatedHierarchies;\n\n\t\tlet index = null;\n\t\tfor (let i = 0; i < relatedHiers.length; ++i) {\n\t\t\tif (relatedHiers[i] === this.getCode()) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\n\t\tif (index != null) {\n\t\t\trelatedHiers.splice(index, 1);\n\t\t}\n\n\t\treturn relatedHiers;\n\t}\n\t\n\tprivate nodeMouseover(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 1);\n\t}\n\t\n\tprivate nodeMousemove(event: any, element: any, data:any)\n\t{\n    d3.select(\"#hierarchyLabel\").html(this.hierarchyType.label.localizedValue);\n    d3.select(\"#hierarchyCodeLabel\").html(this.hierarchyType.code);\n    \n    d3.select(\"#geoObjectTypeLabel\").html(data.data.label);\n    d3.select(\"#geoObjectTypeCodeLabel\").html(data.data.geoObjectType);\n    \n    d3.select(\"#hierarchyOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyType.organizationCode).label.localizedValue);\n    d3.select(\"#geoObjectTypeOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyComponent.findGeoObjectTypeByCode(data.data.geoObjectType).organizationCode).label.localizedValue);\n    \n    let nodeTooltip: any = d3.select(\"#NodeTooltip\").node();\n    let nodeTooltipBbox: DOMRect = nodeTooltip.getBoundingClientRect();\n    \n    let pos = {x: event.pageX, y: event.pageY};\n    const yPointerOffset: number = 50;\n    const xPointerOffset: number = 0;\n    \n    // If overflow off bottom of page\n    if ((event.pageY + nodeTooltipBbox.height + yPointerOffset) > document.documentElement.scrollHeight)\n    {\n      // render above mouse pointer\n      pos.y = event.pageY - nodeTooltipBbox.height - yPointerOffset;\n    }\n    \n    // If overflow off right side of page\n    if ((event.pageX + nodeTooltipBbox.width + xPointerOffset) > document.documentElement.scrollWidth)\n    {\n      // render to the left of the mouse pointer\n      pos.x = event.pageX - nodeTooltipBbox.width - xPointerOffset;\n    }\n    \n    d3.select(\"#NodeTooltip\")\n      .style(\"left\", pos.x + \"px\")\n      .style(\"top\", pos.y + \"px\");\n\t}\n\t\n\tprivate nodeMouseleave(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 0)\n      .style(\"left\", \"-10000px\")\n      .style(\"top\", \"-10000px\");\n\t}\n\n\tpublic render() {\n\t\tlet that = this;\n\t\tlet descends: any = this.d3Tree.descendants();\n\n\t\td3.select('.g-hierarchy[data-primary=\"false\"]').remove();\n\t\tif (this.isPrimary) {\n\t\t\td3.select('.g-hierarchy[data-primary=\"true\"]').remove();\n\t\t}\n\n\t\tlet hg = this.svgEl.insert(\"g\", \".g-hierarchy\").classed(\"g-hierarchy\", true).attr(\"data-code\", this.hierarchyType.code).attr(\"data-primary\", this.isPrimary);\n\t\thg.attr(\"font-family\", \"sans-serif\");\n\n\t\tlet gtree = hg.append(\"g\").classed(\"g-hierarchy-tree\", true).attr(\"data-code\", this.hierarchyType.code);\n\n\t\t// Edge\n\t\tgtree.append(\"g\").classed(\"g-got-edge\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(this.d3Tree.links())\n\t\t\t.join(\"path\")\n\t\t\t//.attr(\"d\", d3.linkVertical().x(function(d:any) { return d.x; }).y(function(d:any) { return d.y; })); // draws edges as curved lines\n\t\t\t.attr(\"d\", (d: any, i) => { // draws edges as square bracket lines\n\t\t\t\treturn \"M\" + d.source.x + \",\" + (d.source.y)\n\t\t\t\t\t+ \"V\" + ((d.source.y + d.target.y) / 2)\n\t\t\t\t\t+ \"H\" + d.target.x\n\t\t\t\t\t+ \"V\" + (d.target.y);\n\t\t\t});\n\n\t\t// Header on square which denotes which hierarchy it's a part of\n\t\tlet gHeader = gtree.append(\"g\").classed(\"g-got-header\", true);\n\t\tgHeader.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotHeaderW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotHeaderH)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) =>\n\t\t\t\td.data.inheritedHierarchyCode != null\n\t\t\t)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Write the name of the hierarchy on the header\n\t\tgHeader.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => \n\t\t\t    d.x - (SvgHierarchyType.gotHeaderW / 2)\n\t\t\t  )\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-weight\", \"bold\")\n      .attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"width\", SvgHierarchyType.gotHeaderW)\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n\t\t\t.append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"fill\", \"white\")\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n      .style(\"text-align\", \"center\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"white\")\n      .style(\"height\", (SvgHierarchyType.gotHeaderH - 4) + \"px\")\n      .style(\"width\", SvgHierarchyType.gotHeaderW + \"px\")\n      .html(function (d: any) {\n        let name = d.data.inheritedHierarchyCode != null ? that.hierarchyComponent.findHierarchyByCode(d.data.inheritedHierarchyCode).label.localizedValue : that.hierarchyType.label.localizedValue;\n        calculateTextWidth(name, SvgHierarchyType.gotHeaderFontSize) > (SvgHierarchyType.gotHeaderW - 5) ? name = name.substring(0,34) + \"...\" : true;\n        return name;\n       })\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// GeoObjectType Body Square \n\t\tgtree.append(\"g\").classed(\"g-got\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-body-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"fill\", (d: any) => d.data.inheritedHierarchyCode != null ? INHERITED_NODE_FILL : DEFAULT_NODE_FILL)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.each(function(d: any) {\n\t\t\t\tif (d.data.geoObjectType != \"GhostNode\") {\n\t\t\t\t\tif (d.data.activeDropZones) {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW * 2 + 100, height: SvgHierarchyType.gotRectH * 4 };\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Arrows on Edges\n\t\tconst arrowRectD = { height: 7, width: 10 };\n\t\tlet gArrow = gtree.append(\"g\").classed(\"g-got-connector-arrow\", true);\n\t\tgArrow.selectAll(\"rect\").data(this.d3Tree.links()).join(\"rect\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.source.x - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", (d: any) => d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.source.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.selectAll(\"path\").data(this.d3Tree.links()).join(\"path\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", (d: any) => \"M\" + (d.source.x - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (d.source.x) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + (arrowRectD.height / 3))\n\t\t\t\t+ \"L\" + (d.source.x - arrowRectD.width / 2 + (arrowRectD.width / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 + arrowRectD.height / 2 - arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Ghost Drop Zone (Sibling) Backer\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-backer\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-backer-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"white\")\n\n\t\t// Ghost Drop Zone (Sibling) Body Rectangle\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-body\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-body-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#6BA542\")\n\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\n\t\t// GeoObjectType label\n\t\tgtree.append(\"g\").classed(\"g-got-codelabel\", true)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotBodyFontSize)\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.classed(\"svg-got-label-text\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2) + 5)\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2) + 2)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW - 32 + 5)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH - 4)\n\t\t\t// .filter(function(d: any) {\n\t\t\t// \treturn calculateTextWidth(d.data.label, 10) > SvgHierarchyType.gotRectW - 32 + 5;\n\t\t\t// })\n\t\t\t// .style(\"height\", SvgHierarchyType.gotRectH + 20 + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.append(\"xhtml:p\")\n\t\t\t.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n\t\t\t.attr(\"text-anchor\", \"start\")\n\t\t\t.attr(\"text-align\", \"left\")\n\t\t\t.style(\"vertical-align\", \"middle\")\n\t\t\t.style(\"display\", \"table-cell\")\n\t\t\t.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n\t\t\t.style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n\t\t\t.html((d: any) => d.data.label)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\tlet headerg;\n\t\tif (this.isPrimary) {\n\t\t\tgtree.append(\"g\").classed(\"g-got-relatedhiers-button\", true)\n\t\t\t\t.selectAll(\"text\")\n\t\t\t\t.data(descends)\n\t\t\t\t.join(\"text\")\n\t\t\t\t.filter(function(d: any) {\n\t\t\t\t\treturn (d.data.geoObjectType === \"GhostNode\" ? false : true) && d.data.inheritedHierarchyCode == null;\n\t\t\t\t})\n\t\t\t\t.classed(\"svg-got-relatedhiers-button\", true)\n\t\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\t.attr(\"x\", (d: any) => d.x + (SvgHierarchyType.gotRectW / 2) - (SvgHierarchyType.gotOptionsButtonFontSize) - 3)\n\t\t\t\t.attr(\"y\", (d: any) => d.y + (SvgHierarchyType.gotOptionsButtonFontSize*0.8) - SvgHierarchyType.gotOptionsButtonFontSize/2)\n\t\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.style(\"fill\", \"#767676\")\n\t\t\t\t.style(\"font-size\", SvgHierarchyType.gotOptionsButtonFontSize + \"px\")\n\t\t\t\t.text('\\uf013')\n\t\t\t\t.on('click', function(event, node) { that.getNodeByCode(node.data.geoObjectType).renderRelatedHierarchiesMenu(); });\n\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Selected Hierarchy\");\n\t\t}\n\t\telse {\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Related Hierarchy\");\n\t\t}\n\n\n\t\tlet paddingTop = (headerg.node().getBBox().height + 20);\n\t\t//gtree.attr(\"transform\", \"translate(0 \" + paddingTop + \")\");\n\t}\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'shapefile-modal',\n    templateUrl: './shapefile-modal.component.html',\n    styleUrls: []\n} )\nexport class ShapefileModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n    constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n        private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.message = null;\n\n        this.service.importShapefile( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n                this.bsModalRef.hide()\n\n                this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n                this.bsModalRef.content.cancelText = this.localizeService.decode( \"modal.button.close\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n            }\n        } ).catch(( response: HttpErrorResponse ) => {\n            this.error( response );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.message = null;\n\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\n\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-problem',\n    templateUrl: './location-problem.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: LocationProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    entityLabel: string;\n    entityId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.entityLabel, this.problem.type, this.problem.parent, this.configuration.hierarchy ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.entityLabel = null;\n        this.entityId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.entityId = e.item.id;\n        this.hasSynonym = ( this.entityId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createGeoObjectSynonym( this.entityId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    vOid: response.vOid, \n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    ignoreDataAtLocation(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNOREATLOCATION',\n            label: locationLabel,\n        };\n    }\n\n    undoAction(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        if ( this.problem.resolved ) {\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNOREATLOCATION' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteGeoObjectSynonym( action.synonymId, action.vOid ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n\n                    this.entityLabel = null;\n                    this.hasSynonym = ( this.entityLabel != null );\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n\n        }\n    }\n}\n","<div class=\"row\" style=\"padding-bottom: 10px;\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">\n      <ol *ngIf=\"problem.context.length > 0\">\n        <li *ngFor=\"let context of problem.context\">{{context.label}} ({{context.type}})</li>\n      </ol>\n    </div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}} ({{problem.typeLabel}})</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"entityLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymFromLocationTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreDataAtLocation()\" [title]=\"'dataUploader.ignoreAtLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <a (click)=\"toggle()\"> <i class=\"fa fa-caret-right clickable\" aria-hidden=\"true\"></i> <i class=\"fa fa-caret-down\" style=\"display: none;\" aria-hidden=\"true\"></i> <localize key=\"dataUploader.resolvedSynonym\"></localize> [{{problem.action.label}}]\n        </a>\n        <span *ngIf=\"show\">\n          <ul>\n            <localize key=\"dataUploader.locatedWithin\"></localize>\n            <li *ngFor=\"let ancestor of problem.action.ancestors\">{{ancestor.label}}</li>\n          </ul>\n        </span>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNOREATLOCATION'\">\n        <localize key=\"dataUploader.resolvedIgnoreAtLocation\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'term-problem',\n    templateUrl: './term-problem.component.html',\n    styleUrls: []\n} )\nexport class TermProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: TermProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    termLabel: string;\n    termId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getTermSuggestions( this.problem.mdAttributeId, this.termLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.termLabel = null;\n        this.termId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n        this.hasSynonym = ( this.termId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createTermSynonym( this.termId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    createOption(): void {\n        this.onError.emit( null );\n        \n        this.service.createTerm( this.problem.label, uuid(), this.problem.parentCode).then( term => {\n            this.problem.resolved = true;\n            this.problem.action = {\n                name: 'OPTION',\n                term: term\n            };\n        } ).catch( e => {\n            this.onError.emit( e.error );\n        } );\n    }\n\n    ignoreValue(): void {\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNORE'\n        };\n    }\n\n    undoAction(): void {\n\n        if ( this.problem.resolved ) {\n\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNORE' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteTermSynonym( action.synonymId ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n            else if ( action.name == 'OPTION' ) {\n                this.onError.emit( null );\n\n                this.service.removeTerm(this.problem.parentCode, action.term.code ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n        }\n    }\n}\n","<div class=\"row\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">{{problem.attributeLabel}}</div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}}</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"termLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"label\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymCategoryTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-plus clickable\" (click)=\"createOption()\" [title]=\"'dataUploader.createNewOptionTooltip' | localize\"></i>        \n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreValue()\" [title]=\"'dataUploader.ignoreCategoryTooltip' | localize\"></i>      \n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'OPTION'\">\n        <localize key=\"dataUploader.resolvedCategoryOption\"></localize>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <localize key=\"dataUploader.resolvedSynonym\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNORE'\">\n        <localize key=\"dataUploader.resolvedIgnoreCategory\"></localize>\n        [{{problem.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedCategoryTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'spreadsheet-modal',\n    templateUrl: './spreadsheet-modal.component.html',\n    styleUrls: []\n} )\nexport class SpreadsheetModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n  constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n    private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.service.importSpreadsheet( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n              this.bsModalRef.hide()\n\n              this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n\n            }\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-page',\n    templateUrl: './data-page.component.html',\n    styleUrls: ['./data-page.css']\n} )\nexport class DataPageComponent implements OnInit {\n\n\tcontent: string = \"SPREADSHEET\";\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n\t\tthis.isMaintainer ? this.renderContent(\"SPREADSHEET\") : this.renderContent(\"EXPORT\");\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\n\t\tif(content === \"SPREADSHEET\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"spreadsheet.title\");\n\t\t}\n\t\telse if(content === \"SHAPEFILE\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"shapefile.title\");\n\t\t}\n\t\telse if(content === \"EXPORT\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"io.export.title\");\n\t\t}\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <!-- <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"spreadsheet.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"spreadsheet.description\"></localize>\n            </p>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-1\"></div>\n\t\t\t<div class=\"col-md-10\" style=\"padding-top: 30px;\">\n\t\t\t\t\n\t\t\t\t<div class=\"heading\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{{pageTitle}}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SPREADSHEET'}\" (click)=\"renderContent('SPREADSHEET')\">\n                      <localize key=\"import-spreadsheet-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SHAPEFILE'}\" (click)=\"renderContent('SHAPEFILE')\">\n                      <localize key=\"import-shapefile-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px;margin-top: 10px;\">\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SPREADSHEET'\" [format]=\"'EXCEL'\"></dataimporter>\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SHAPEFILE'\" [format]=\"'SHAPEFILE'\"></dataimporter>\n\t\t\t\t</div>\n\t\t\t\t\n            </div>\n            <div class=\"col-md-1\"></div>\n        </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService, EventService, ExternalSystemService } from '@shared/service';\nimport { ExternalSystem } from '@shared/model/core';\n\nimport { SpreadsheetModalComponent } from './modals/spreadsheet-modal.component';\nimport { ShapefileModalComponent } from './modals/shapefile-modal.component';\nimport { IOService } from '@registry/service';\nimport { ImportStrategy, PRESENT } from '@registry/model/registry';\n\ndeclare var acp: string;\n\n@Component({\n\n\tselector: 'dataimporter',\n\ttemplateUrl: './dataimporter.component.html',\n\tstyleUrls: ['./dataimporter.css']\n})\nexport class DataImporterComponent implements OnInit {\n\t\n\tcurrentDate : Date = new Date();\n\n\tshowImportConfig: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n\timportStrategy: ImportStrategy;\n\timportStrategies: any[] = [\n\t\t{ \"strategy\": ImportStrategy.NEW_AND_UPDATE, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_AND_UPDATE\") },\n\t\t{ \"strategy\": ImportStrategy.NEW_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_ONLY\") },\n\t\t{ \"strategy\": ImportStrategy.UPDATE_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.UPDATE_ONLY\") }\n\t]\n\n    /*\n     * Currently selected code\n     */\n\tcode: string = null;\n\n    /*\n     * Start date\n     */\n\tstartDate: Date = null;\n\n    /*\n     * End date\n     */\n\tendDate: Date | string = null;\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n    /*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\t@Input()\n\tformat: string; // Can be SHAPEFILE or EXCEL\n\n\tisExternal: boolean = false;\n\n\t/*\n\t * List of available external systems (filtered based on user's org)\n\t */\n\texternalSystems: ExternalSystem[];\n\n\t/*\n\t * currently selected external system.\n\t */\n\texternalSystemId: string;\n\n\tisLoading: boolean = true;\n\n\tcopyBlank: boolean = true;\n\n\tconstructor(private service: IOService,\n\t\tprivate eventService: EventService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate localizationService: LocalizationService,\n\t\tprivate authService: AuthService,\n\t\tprivate sysService: ExternalSystemService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.sysService.getExternalSystems(1, 100).then(paginatedSystems => {\n\n\t\t\tthis.externalSystems = paginatedSystems.resultSet;\n\n\t\t\tif (this.externalSystems.length === 0) {\n\t\t\t\tthis.isExternal = false;\n\t\t\t\tthis.showImportConfig = true; // Show the upload widget if there are no external systems registered\n\t\t\t}\n\n\t\t\tthis.isLoading = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.service.listGeoObjectTypes(false).then(types => {\n\n\t\t\tconst myOrgTypes = [];\n\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.orgCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isOrganizationRA(orgCode) || this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.types = myOrgTypes;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tvar getUrl = acp + '/excel/get-configuration';\n\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\tgetUrl = acp + '/shapefile/get-shapefile-configuration';\n\n\t\t\t//this.showImportConfig = true; // show the upload widget if shapefile because external system from shapefile isn't supported\n\t\t}\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('type', this.code);\n\t\t\tform.append('copyBlank', this.copyBlank);\n\n\t\t\tif (this.startDate != null) {\n\t\t\t\tform.append('startDate', this.startDate);\n\t\t\t}\n\t\t\tif (this.endDate != null) {\n\t\t\t\tform.append('endDate', this.endDate);\n\t\t\t}\n\t\t\tif (this.importStrategy) {\n\t\t\t\tform.append('strategy', this.importStrategy);\n\t\t\t}\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst configuration = JSON.parse(response);\n\n\t\t\tconfiguration.isExternal = this.isExternal;\n\n\t\t\tlet externalSystem: ExternalSystem = null;\n\t\t\tfor (let i = 0; i < this.externalSystems.length; ++i) {\n\t\t\t\tlet sys: ExternalSystem = this.externalSystems[i];\n\n\t\t\t\tif (sys.oid === this.externalSystemId) {\n\t\t\t\t\texternalSystem = sys;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfiguration.externalSystemId = this.externalSystemId;\n\t\t\tconfiguration.externalSystem = externalSystem;\n\n\t\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\t\tthis.bsModalRef = this.modalService.show(ShapefileModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef = this.modalService.show(SpreadsheetModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.configuration = configuration;\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\n\tonClick(): void {\n\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetImportSource(event, type): void {\n\t\tif (type === \"EXTERNAL\") {\n\t\t\tthis.isExternal = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isExternal = false;\n\t\t}\n\t}\n\n\tonNext(): void {\n\t\tthis.showImportConfig = true;\n\t}\n\n\tonBack(): void {\n\t\tthis.showImportConfig = false;\n\t}\n\t\n\tsetInfinity(endDate: any): void {\n\n\t\tif(endDate === PRESENT){\n\t\t\tthis.endDate = null;\n\t\t}\n\t\telse{\n\t\t\tthis.endDate = PRESENT;\n\t\t}\n\t}\n\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<div *ngIf=\"!isLoading && !showImportConfig && externalSystems.length > 0\">\n  <div>\n    <div class=\"row\">\n\n        <div class=\"col-xs-1\"></div>\n        <div class=\"col-xs-9 radio-btn-wrapper\">\n\n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"true\" [checked]=\"!isExternal\" (change)=\"setImportSource($event, 'FILE')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : !isExternal}\">\n                    <localize key=\"importer.import.from-file.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-file.description\"></localize>\n                </p>\n            </label>\n            \n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"false\" [checked]=\"isExternal\" (change)=\"setImportSource($event, 'EXTERNAL')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : isExternal}\">\n                    <localize key=\"importer.import.from-external.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-external.description\"></localize>\n                </p>\n            </label>\n\n            <div class=\"button-holder\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onNext()\">\n                    <localize key=\"io.next\"></localize>\n                </button>\n            </div>\n        </div>\n        <div class=\"col-xs-2\"></div>\n\t  </div>\n  </div>\n</div>\n\n<div *ngIf=\"!isLoading && isExternal !== null && showImportConfig\">\n    <div >\n        <form #form=\"ngForm\">\n            <div *ngIf=\"isExternal\" class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"externalSystem\">\n                    <localize key=\"io.import.externalSystems\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"externalSystem\" name=\"externalSystem\" class=\"select-area\" [(ngModel)]=\"externalSystemId\" required>\n                        <option *ngFor=\"let externalSystem of externalSystems\" value={{externalSystem.oid}}>{{externalSystem.label.localizedValue}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\" *ngIf=\"types\">\n                <label class=\"col-md-2 text-right\" for=\"code\"> <localize key=\"io.geoObjectType\"></localize></label>\n                <div class=\"col-md-8\">\n                    <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" value={{type.code}}>{{type.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"strategy\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"spreadsheet.import.import.strategy\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"shapefile.import.import.strategy\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"strategy\" name=\"strategy\" class=\"select-area\" [(ngModel)]=\"importStrategy\" required>\n                        <option *ngFor=\"let strategy of importStrategies\" value={{strategy.strategy}}>{{strategy.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"startDate\"><localize key=\"io.startDate\"></localize></label>\n                <div class=\"col-md-8\">\n                    <input name=\"startDate\" [(ngModel)]=\"startDate\" type=\"date\" max=\"{{currentDate|date:'yyyy-MM-dd'}}\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"endDate\"><localize key=\"io.endDate\"></localize></label>\n                <div class=\"col-md-8\">\n<!--                     <input name=\"endDate\" [(ngModel)]=\"endDate\" type=\"date\" required /> -->\n                \n                  <input *ngIf=\"endDate !== '5000-12-31'\" name=\"endDate\" type=\"date\" [(ngModel)]=\"endDate\" required>\n                  <p *ngIf=\"endDate === '5000-12-31'\" style=\"font-size: 14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                      \n                  <p class=\"text-right\">\n                    <a *ngIf=\"endDate === '5000-12-31'\" (click)=\"setInfinity(endDate)\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></a>\n                    <a *ngIf=\"endDate !== '5000-12-31'\" (click)=\"setInfinity(endDate)\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></a>\n                  </p>\n                </div>\n                                      \n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                \n                <label class=\"col-md-2 text-right\" for=\"endDate\">Copy blank values</label>\n                <div class=\"col-md-8\">\n                   <boolean-field [(value)]=\"copyBlank\" label=\"\"></boolean-field>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"file\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <input *ngIf=\"this.format === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".xls, .xlsx\" required />\n                    <input *ngIf=\"this.format === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".zip\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n\n            <div class=\"form-group row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"button-holder col-md-8 text-right\">\n                    <button type=\"submit\" class=\"btn btn-default\" (click)=\"onBack()\">\n                        <localize key=\"io.back\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onClick()\">\n                        <localize key=\"io.submit\"></localize>\n                    </button>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-manager',\n\ttemplateUrl: './master-list-manager.component.html',\n\tstyleUrls: ['./master-list-manager.css']\n})\nexport class MasterListManagerComponent implements OnInit {\n\tmessage: string = null;\n\torgs: MasterListByOrg[];\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.service.getMasterListsByOrg().then(response => {\n\t\t\tthis.orgs = response.orgs;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonCreate(org: MasterListByOrg): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(org);\n\t\tthis.bsModalRef.content.isNew = true;\n\t\tthis.bsModalRef.content.onMasterListChange.subscribe((list: any) => {\n\t\t\tconst obj = {\n\t\t\t\tlabel: list.displayLabel.localizedValue,\n\t\t\t\toid: list.oid,\n\t\t\t\tcreateDate: list.createDate,\n\t\t\t\tlastUpdateDate: list.lastUpdateDate,\n\t\t\t\tisMaster: list.isMaster,\n\t\t\t\twrite: list.write,\n\t\t\t\tread: list.read,\n\t\t\t\tvisibility: list.visibility\n\t\t\t};\n\n\t\t\torg.lists.push(obj);\n\t\t});\n\t}\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-view/', code])\n\t}\n\n\tonEdit(pair: { label: string, oid: string, visibility: string }): void {\n\t\tthis.service.getMasterList(pair.oid).then(list => {\n\n\t\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.edit = true;\n\t\t\tthis.bsModalRef.content.readonly = !list.write;\n\t\t\tthis.bsModalRef.content.master = list;\n\t\t\tthis.bsModalRef.content.isNew = false;\n\n\t\t\tthis.bsModalRef.content.onMasterListChange.subscribe(ret => {\n\t\t\t\tpair.label = ret.displayLabel.localizedValue;\n\t\t\t\tpair.visibility = ret.visibility;\n\t\t\t});\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDelete(org: MasterListByOrg, list: { label: string, oid: string }): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + list.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = \"danger\";\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterList(list.oid).then(response => {\n\t\t\t\torg.lists = org.lists.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== list.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <div class=\"heading\">\n            <h2>\n                <localize key=\"masterlists.manager.organizations\"></localize>\n            </h2>\n        </div>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\" *ngFor=\"let org of orgs;\">\n            <div class=\"col-md-12 order-md-1\">\n                <div style=\"margin-top: 30px;\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <h3>{{org.label}}</h3>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"org.lists && org.lists.length === 0\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <p class=\"inline-message\"><localize key=\"masterlists.no.lists.in.org.message\"></localize></p>\n                        </div>\n                    </div>\n                </div>\n\n                <ul *ngIf=\"org.lists && org.lists.length > 0\" class=\"list-group\" style=\"border-bottom: 2px solid lightgrey; margin-top: 30px;\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th style=\"width: 70%;\"><localize key=\"masterlist.menu\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let list of org.lists; let i = index;\" class=\"clickable\">\n                                <td style=\"width: 70%; vertical-align: middle;\">\n                                  <a [routerLink]=\"'/registry/master-list-view/' + list.oid\" routerLinkActive=\"active\">\n                                    {{list.label}}\n                                    <span *ngIf=\"list.isMaster\"><localize key=\"masterlist.master\"></localize></span>\n                                    <span>\n                                      (\n                                      <localize *ngIf=\"list.visibility === 'PUBLIC'\" key=\"masterlist.public\"></localize>\n                                      <localize *ngIf=\"list.visibility === 'PRIVATE'\" key=\"masterlist.private\"></localize>\n                                      )\n                                    </span>                                    \n                                  </a>\n                                </td>\n                                <td style=\"width: 30%; text-align: right;\">\n                                    <button type=\"submit\" (click)=\"onView(list.oid)\" class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"modal.button.view\"></localize>\n                                    </button>\n                                    <button type=\"submit\" (click)=\"onEdit(list)\" class=\"btn btn-default\" role=\"button\">\n                                        <localize key=\"masterlist.button.metadata\"></localize>\n                                    </button>\n                                    <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(org, list)\" class=\"btn btn-danger\" role=\"button\">\n                                        <localize key=\"modal.button.delete\"></localize>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ul>\n                <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div *ngIf=\"org.write\">\n                            <button type=\"submit\" (click)=\"onCreate(org)\" class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"hierarchy.management.button.create\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n\n@Component( {\n    selector: 'export-format-modal',\n    templateUrl: './export-format-modal.component.html',\n    styleUrls: []\n} )\nexport class ExportFormatModalComponent {\n\n    format: string;\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onFormat = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onFormat.next( this.format );\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"heading text-center\">\n        <h1>\n            <localize key=\"export-modal.title\"></localize>\n        </h1>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <label>\n                        <localize key=\"export-modal.message\"></localize>\n                    </label>\n\n                    <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                        <option></option>\n                        <option value=\"EXCEL\">\n                            <localize key=\"io.spreadsheet\"></localize>\n                        </option>\n                        <option value=\"SHAPEFILE\">\n                            <localize key=\"io.shapefile\"></localize>\n                        </option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" [disabled]=\"format == null || format == ''\"\n                            class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n\tstate,\n\tgroup,\n\tquery,\n\tstagger\n} from '@angular/animations';\n\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ChangeRequest, AbstractAction, AddChildAction, SetParentAction, CreateGeoObjectAction, RemoveChildAction, UpdateGeoObjectAction } from '@registry/model/crtable';\nimport { GeoObjectOverTime } from '@registry/model/registry';\n\nimport { ChangeRequestService } from '@registry/service';\nimport { LocalizationService, AuthService, EventService, ExternalSystemService  } from '@shared/service';\nimport { ActionDetailModalComponent } from './action-detail/action-detail-modal.component'\n\nimport { ErrorHandler, ErrorModalComponent, ConfirmModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component({\n\n\tselector: 'request-table',\n\ttemplateUrl: './request-table.component.html',\n\tstyleUrls: ['./request-table.css'],\n\tencapsulation: ViewEncapsulation.None,\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('300ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('100ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]),\n\t\t\ttrigger('fadeIn', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t])\n\t\t\t]),\n\t\t]\n\t]\n})\nexport class RequestTableComponent {\n\n\tobjectKeys = Object.keys;\n\n\tbsModalRef: BsModalRef;\n\n\trequests: ChangeRequest[] = [];\n\n\tactions: AbstractAction[] | SetParentAction[] | AddChildAction[] | CreateGeoObjectAction[] | RemoveChildAction[] | UpdateGeoObjectAction[];\n\n\tcolumns: any[] = [];\n\n\ttoggleId: string;\n\t\n\ttargetActionId: string\n\n\tfilterCriteria: string = 'ALL';\n\n\thasBaseDropZoneOver:boolean = false;\n\t\n\t/*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\t\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\tconstructor(private service: ChangeRequestService, private modalService: BsModalService, private authService: AuthService, private localizationService: LocalizationService,\n\t\t\t\tprivate eventService: EventService, private router: Router) {\n\n\t\tthis.columns = [\n\t\t\t{ name: localizationService.decode('change.request.user'), prop: 'createdBy', sortable: false },\n\t\t\t{ name: localizationService.decode('change.request.createDate'), prop: 'createDate', sortable: false, width: 195 },\n\t\t\t{ name: localizationService.decode('change.request.status'), prop: 'approvalStatus', sortable: false }\n\t\t];\n\n\t\tthis.refresh();\n\t}\n\t\n\tngOnInit(): void{\n\t\tvar getUrl = acp + '/changerequest/upload-file-action';\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('actionOid', this.targetActionId);\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: any, status: number, headers: any) => {\n\t\t\t\n\t\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\t\tlet action = this.actions[i];\n\t\t\t\t\n\t\t\t\tif(action.oid === this.targetActionId){\n\t\t\t\t\t\n\t\t\t\t\taction.documents.push(JSON.parse(response));\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\t\n\tonUpload(action: AbstractAction): void {\n\t\tthis.targetActionId = action.oid;\n\t\t\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonDownloadFile(actionOid: string, fileOid: string): void {\n\t\twindow.location.href = acp + '/changerequest/download-file-action?actionOid=' + actionOid + '&' + 'vfOid=' + fileOid;\n\t}\n\t\n\tonDeleteFile(actionOid: string, fileOid: string): void {\n\t\tthis.service.deleteFile(actionOid, fileOid).then(response => {\n\t\t\t\n\t\t\tlet docPos = -1;\n\t\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\t\tlet action = this.actions[i];\n\t\t\t\tif(action.oid === actionOid){\n\t\t\t\t\t\n\t\t\t\t\tfor(let index=0; index<action.documents.length; index++){\n\t\t\t\t\t\tlet doc = action.documents[index];\n\t\t\t\t\t\tif(doc.oid === fileOid){\n\t\t\t\t\t\t\tdocPos = index;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(docPos > -1){\n\t\t\t\t\t\taction.documents.splice(docPos, 1)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\t}\n\t\n\tpublic fileOverBase(e:any):void {\n\t    this.hasBaseDropZoneOver = e;\n\t}\n\n\trefresh(): void {\n\n\t\tthis.service.getAllRequests(\"ALL\").then(requests => {\n\t\t\t\n\t\t\tthis.requests = requests;\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t}\n\n\n\tonSelect(selected: any): void {\n\n\t\t// this.request = selected.selected;\n\n\t\tthis.service.getAllActions(selected.selected[0].oid).then(actions => {\n\tconsole.log(actions)\n\t\t\tthis.actions = actions;\n\t\t\t\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonExecute(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\t\n\t\t\tthis.service.execute(changeRequest.oid).then(request => {\n\t\t\t\tchangeRequest = request;\n\t\n\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\tthis.refresh();\n\t\t\t\t\n\t\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\t\tanimated: true,\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tignoreBackdropClick: true,\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tbsModalRef.content.submitText = this.localizationService.decode('change.requests.more.geoobject.updates.submit.btn');\n\t\t\t\tbsModalRef.content.cancelText = this.localizationService.decode('change.requests.more.geoobject.updates.cancel.btn');\n\t\t\t\tbsModalRef.content.message = this.localizationService.decode('change.requests.more.geoobject.updates.message');\n\t\t\t\t\n\t\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\t\t\n\t\t\t\t\tlet firstGeoObject = this.getFirstGeoObjectInActions();\n\t\t\t\t\t\n\t\t\t\t\tif(firstGeoObject){\n\t\t\t\t\t\tthis.router.navigate(['/registry/location-manager', firstGeoObject.attributes.uid, firstGeoObject.geoObjectType.code]);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tthis.router.navigate(['/registry/location-manager', firstGeoObject.attributes.uid, firstGeoObject.geoObjectType.code]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\n\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t}\n\t}\n\t\n\tgetFirstGeoObjectInActions(): GeoObjectOverTime {\n\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\tlet action = this.actions[i];\n\t\t\t\n\t\t\tif(action.hasOwnProperty(\"geoObjectJson\")){\n\t\t\t\treturn action[\"geoObjectJson\"];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\tonDelete(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\t\n\t\t\tbsModalRef.content.type = \"danger\";\n\t\t\tbsModalRef.content.submitText = this.localizationService.decode('change.request.delete.request.confirm.btn');\n\t\t\tbsModalRef.content.message = this.localizationService.decode('change.request.delete.request.message');\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.delete(changeRequest.oid).then(deletedRequestId => {\n\n\t\t\t\t\tlet pos = -1;\n\t\t\t\t\tfor(let i=0; i<this.requests.length; i++){\n\t\t\t\t\t\tlet req = this.requests[i];\n\t\t\t\t\t\tif(req.oid === deletedRequestId){\n\t\t\t\t\t\t\tpos = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(pos > -1){\n\t\t\t\t\t\tthis.requests.splice(pos, 1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tapplyActionStatusProperties(action: any): void {\n\t\t// var action = JSON.parse(JSON.stringify(this.action));\n\t\t// action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n\t\tthis.service.applyActionStatusProperties(action).then(response => {\n\t\t\taction.decisionMaker = (action.approvalStatus !== 'PENDING') ? this.authService.getUsername() : '';\n\t\t\t\n\t\t\t// this.crtable.refresh()\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonApproveAll(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.approveAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\n\t\t}\n\t}\n\n\tonRejectAll(changeRequest: ChangeRequest): void {\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.rejectAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\n\t\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\t\t// this.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\trequestTrackBy(index: number, request: ChangeRequest) {\n\t\treturn request.oid;\n\t}\n\n\ttoggle(event: any, oid: string): void {\n\n\t\tif (!event.target.parentElement.className.includes(\"btn\") && !event.target.className.includes(\"btn\")) {\n\t\t\tif (this.toggleId === oid) {\n\t\t\t\tthis.toggleId = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.toggleId = oid;\n\t\t\t\tthis.onSelect({ selected: [{ oid: oid }] });\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter(criteria: string): void {\n\n\t\tthis.service.getAllRequests(criteria).then(requests => {\n\t\t\tthis.requests = requests;\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t\tthis.filterCriteria = criteria;\n\t}\n\n\tsetActionStatus(action: AbstractAction, status: string): void {\n\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\t\n\t\t\n\n\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\taction.approvalStatus = status;\n\n\t\t\tthis.applyActionStatusProperties(action);\n\t\t});\n\t}\n\n\tgetActiveDetailComponent(action: AbstractAction): any {\n\t\t// TODO: I know this scales poorly to lots of different action types but I'm not sure how to do it better\n\t\tif (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction')) {\n\t\t\t// return this.cuDetail;\n\t\t}\n\t\t//   if (this.arDetail != null && (this.action.actionType.endsWith('AddChildAction') || this.action.actionType.endsWith('RemoveChildAction')))\n\t\t//   {\n\t\t//     return this.arDetail;\n\t\t//   }\n\n\t\treturn action;\n\t}\n\n\tshowActionDetail(action: any, cr: any) {\n\n\t\tthis.bsModalRef = this.modalService.show(ActionDetailModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.curAction(action, !cr.permissions.includes(\"WRITE_DETAILS\"));\n\t}\n\tformatDate(date: string): string {\n\t\treturn this.localizationService.formatDateForDisplay(date);\n\t}\n\t\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n}\n","<!-- <div class=\"row text-center\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"change.request.title\"></localize>\n        </h2>\n    </div>\n</div> -->\n\n<!-- <div class=\"row text-center\">\n    <div class=\"col-md-12 text-left\" style=\"margin-top: 40px;\">\n        <h3>\n            <localize key=\"change.request.table.title\"></localize>\n        </h3>\n    </div>\n</div> -->\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"form-group button-row\">\n\n      <a [routerLink]=\"\" (click)=\"filter('ALL')\" [ngClass]=\"filterCriteria === 'ALL' ? 'cr-filter-link-active' : ''\" >\n        <localize key=\"change.request.all.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('PENDING')\" [ngClass]=\"filterCriteria === 'PENDING' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.pending.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('ACCEPTED')\" [ngClass]=\"filterCriteria === 'ACCEPTED' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.accepted.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('REJECTED')\" [ngClass]=\"filterCriteria === 'REJECTED' ? 'cr-filter-link-active' : ''\"style=\"margin-left: 5px;\" >\n        <localize key=\"change.request.rejected.filter.link\"></localize>\n      </a>\n\n    </div>\n\n    <hr style=\"border-top:solid 3px #6BA542\" />\n\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n\n  <table class=\"table\">\n    <thead>\n      <tr style=\"height: 50px;color: grey;\">\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.contributor.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.id.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.date.contributed.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.status.label\"></localize> </th>\n        <!-- <th style=\"vertical-align: middle;\">Actions</th> -->\n        <th></th>\n      </tr>\n    </thead>\n        <tbody>\n      <ng-template ngFor let-req [ngForOf]=\"requests\" [ngForTrackBy]=\"requestTrackBy\">\n        <tr class=\"clickable\" [ngClass]=\"{'row-active':toggleId === req.oid}\" (click)=\"toggle($event, req.oid)\" style=\"height: 50px;\">\n          <td class=\"col-md-3\">\n            <h5><strong>{{req.createdBy}}</strong></h5>\n          </td>\n          <td class=\"col-md-4\">\n            <h5><strong>{{req.oid}}</strong></h5>\n          </td>\n          <td class=\"col-md-2\" style=\"vertical-align: middle; color:grey;\">\n             <span class=\"date-string-display\">\n                {{formatDate(req.createDate)}}\n             </span>\n          </td>\n          <td class=\"col-md-2\">\n            <h5 [ngClass]=\"{'status-pending':req.approvalStatus === 'PENDING', 'status-accepted':req.approvalStatus === 'ACCEPTED', 'status-rejected':req.approvalStatus === 'REJECTED'}\">\n               <strong>{{req.statusLabel}}</strong>\n            </h5>\n          </td>\n          <td class=\"col-md-1\" style=\"vertical-align:middle;text-align:right;padding-right:25px;\">\n            <i class=\"arrow arrow-right\" aria-hidden=\"true\"></i>\n          </td>\n        </tr>\n        \n        <!-- Action panel only shows when activated with click -->\n        <tr [@fadeInOut] *ngIf=\"toggleId === req.oid\" style=\"background-color:#f7f7f7;\">\n          <td colspan=\"5\" >\n\n            <div class=\"row\" style=\"margin:0;\">\n              <!-- <div class=\"col-md-1\"></div> -->\n              <div class=\"col-md-12\">\n\n                <div *ngFor=\"let action of actions\" class=\"action-card\" [ngClass]=\"{'status-pending-container':action.approvalStatus === 'PENDING', 'status-accepted-container':action.approvalStatus === 'ACCEPTED', 'status-rejected-container':action.approvalStatus === 'REJECTED'}\" style=\"margin-bottom:10px; background-color:white;\"> \n                  <div class=\"row\" style=\"margin:0; padding-top:5px; padding-bottom:5px;\">\n                    <div class=\"col-md-3\" style=\"border-right:2px grey solid; height:50px;\">\n                      <i class=\"fa fa-circle\" style=\"float:left; line-height: 50px;\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" aria-hidden=\"true\"></i>\n                      <h4 class=\"vertical-center\" style=\"margin:0; float:left; padding-left:20px;\">{{req.createdBy}}</h4>\n                    </div>\n                    <div class=\"col-md-5\" style=\"height: 50px;\">\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\" class=\"fa fa-refresh vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\" class=\"fa fa-plus vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\" class=\"fa fa-link vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\" class=\"fa fa-chain-broken vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n\n                      <ul class=\"vertical-center\" style=\"list-style-type:none; float:left; padding-left:20px;\">\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\">\n                          <localize key=\"change.request.table.update\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\">\n                          <localize key=\"change.request.table.create\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.SetParentAction'\">\n                          <localize key=\"change.request.table.setparent\" [params]=\"{'{0}':action.childCode}\"></localize>\n                        </li>        \n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\">\n                          <localize key=\"change.request.table.setchild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\">\n                          <localize key=\"change.request.table.removechild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>                                        \n                        <li>\n                          <localize key=\"change.request.table.on\"></localize>\n                          <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(action.createActionDate)}}\n                          </span>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-md-4\" style=\"height: 50px;text-align: center;\">\n                      <h4 *ngIf=\"req.approvalStatus !== 'PENDING'\" class=\"vertical-center\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" style=\"margin: 0;\">{{action.approvalStatus}}</h4>\n                      <span *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS')\">\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'ACCEPTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'ACCEPTED')\" class=\"btn btn-primary vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.accept.btn\"></localize>\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'REJECTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'REJECTED')\" class=\"btn btn-danger vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.reject.btn\"></localize>\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'PENDING'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'PENDING')\" class=\"btn btn-warning vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.pending.btn\"></localize>\n                        </button>\n                      </span>\n                    </div>\n                  </div>\n\n                  <div class=\"row\" style=\"border-top: 1px grey solid;margin:0;padding: 10px 0;\">\n                    \n                    <div class=\"col-md-4\" >\n                      <div *ngIf=\"req.permissions.includes('READ_CONTRIBUTOR_NOTES')\" class=\"form-group\">\n                        <label for=\"contribNotesInput-{{req.oid}}\"> <localize key=\"change.request.contributor.notes.label\"></localize> </label>\n                        <textarea id=\"contribNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;\" [(ngModel)]=\"action.contributorNotes\" [disabled]=\"!req.permissions.includes('WRITE_CONTRIBUTOR_NOTES')\"></textarea>\n                      </div>  \n                      \n                      <button type=\"submit\" (click)=\"showActionDetail(action, req)\" class=\"btn btn-default pull-right\" style=\"margin:0;\" role=\"button\" [disabled]=\"!req.permissions.includes('READ_DETAILS')\" [title]=\"'change.request.details.btn.hover' | localize\">\n                        <localize style=\"text-transform:uppercase;\" key=\"change.request.action.details.label\"></localize>\n                      </button>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.email\"></localize>:\n                          </span>\n                          <label>{{req.email}}</label>\n                      </div>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.phone\"></localize>:\n                          </span>\n                          <label>{{req.phoneNumber}}</label>\n                      </div>\n                      \n                      <a *ngIf=\"(req.approvalStatus === 'ACCEPTED' || req.approvalStatus === 'REJECTED') && action.actionType != 'net.geoprism.registry.action.geoobject.SetParentAction'\" class=\"pull-right\" target=\"_blank\" [routerLink]=\"['/registry/location-manager', action.geoObjectJson.attributes.uid, action.geoObjectType.code]\">\n                          <localize key=\"change.request.open.geoobject.in.editor.link.btn\"></localize>\n                      </a>\n                      \n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div *ngIf=\"req.permissions.includes('READ_MAINTAINER_NOTES')\" class=\"form-group\">\n                        <label for=\"maintainerNotesInput-{{req.oid}}\"> <localize key=\"change.request.maintainer.notes.label\"></localize> </label>\n                        <textarea id=\"maintainerNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;margin:0\" [(ngModel)]=\"action.maintainerNotes\" [disabled]=\"!req.permissions.includes('WRITE_MAINTAINER_NOTES')\"></textarea>\n                      </div>  \n                      \n                      <div *ngIf=\"req.permissions.includes('READ_MAINTAINER_NOTES')\" class=\"form-group\">\n                            <label for=\"additionalNotes-{{req.oid}}\"> <localize key=\"change.request.action.detail.additionalNotes\"></localize> </label>\n                            <input type=\"text\" id=\"additionalNotes-{{req.oid}}\" class=\"form-control\" style=\"width:100%;\" [(ngModel)]=\"action.additionalNotes\" [disabled]=\"!req.permissions.includes('WRITE_MAINTAINER_NOTES')\">\n                      </div>  \n                          \n                      <div *ngIf=\"action.approvalStatus !== 'PENDING' && action.decisionMaker !== ''\">\n                            <span style=\"font-style: italic;\">\n                                <localize *ngIf=\"action.approvalStatus !== 'REJECTED'\" key=\"change.request.status.approvedBy\"></localize>\n                                <localize *ngIf=\"action.approvalStatus === 'REJECTED'\" key=\"change.request.status.rejectedBy\"></localize>:\n                            </span>\n                            <label> {{action.decisionMaker}} </label>\n                       </div>\n                          \n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div>\n                        <label><localize key=\"change.request.reference.documents.label\"></localize></label>\n                        <div *ngIf=\"action.documents.length > 0\" style=\"border:1px solid #ccc;border-radius: 4px;\">\n                          <ul style=\"padding:10px;margin:0;\">\n                              <li *ngFor=\"let doc of action.documents\" class=\"list-group-item\" style=\"padding:0;font-size:inherit;\">\n                                <a (click)=\"onDownloadFile(action.oid, doc.oid)\" >{{doc.fileName}}</a>\n                                <i (click)=\"onDeleteFile(action.oid, doc.oid)\" class=\"fa fa-times ico-remove\" style=\"margin-left:10px;\" aria-hidden=\"true\"></i>\n                              </li>\n                          </ul>\n                        </div>\n                        <p *ngIf=\"action.documents.length === 0\" style=\"color:grey;font-style:italic;\">\n                          <localize key=\"change.request.no.documents.label\"></localize>\n                        </p>\n                      \n                        <div *ngIf=\"req.permissions.includes('WRITE_DOCUMENTS')\" style=\"padding:10px 0;\">\n                            <!-- Limit file types with: accept=\".xls, .xlsx, .pdf, .doc\" -->\n                            <input class=\"ghost-input\" style=\"display:inline-block;padding:0;height:auto;border-radius:0;margin-top:10px;\" #myFile name=\"file\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" required />\n                            \n                            <button class=\"btn btn-primary pull-right\" style=\"margin:0;\" (click)=\"onUpload(action)\" [title]=\"'change.request.upload.document.btn.hover' | localize\">\n                              <localize key=\"change.request.reference.document.upload\"></localize>\n                            </button>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div> \n\n\n                <div *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS') || req.permissions.includes('DELETE')\" class=\"button-holder\">\n                  <span *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS')\">\n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onApproveAll(req)\" class=\"btn btn-primary\" role=\"button\" [title]=\"'change.request.accept.all.btn.hover' | localize\">\n                      <localize key=\"change.request.accept.all.btn\"></localize>\n                    </button>\n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onRejectAll(req)\" class=\"btn btn-danger\" role=\"button\" [title]=\"'change.request.reject.all.btn.hover' | localize\">\n                      <localize key=\"change.request.reject.all.btn\"></localize>\n                    </button>  \n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onExecute(req)\" class=\"btn btn-primary\" role=\"button\" [title]=\"'change.request.implement.decisions.btn.hover' | localize\">\n                      <localize key=\"change.request.accept.changes.btn\"></localize>\n                    </button>\n                  </span>\n                  \n                  <a [class.disabled]=\"!req.permissions.includes('DELETE')\" (click)=\"req.createdBy === getUsername() && onDelete(req)\" class=\"alert pull-right\" [title]=\"'change.request.delete.request.hover' | localize\" >\n                    <localize key=\"change.request.delete.request.btn\"></localize>\n                  </a>\n                  \n                </div>\n              </div>\n              <!-- <div class=\"col-md-1\"></div> -->\n            </div>\n\n          </td>\n        </tr> <!-- END Action panel -->\n        \n      </ng-template>\n    </tbody>\n  </table>\n  </div>   \n</div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nexport interface ActionDetailComponent {\n    endEdit(): void;\n}\n\n@Component( {\n    selector: 'action-detail-modal',\n    templateUrl: './action-detail-modal.component.html',\n    styleUrls: []\n} )\nexport class ActionDetailModalComponent {\n\n    action: any;\n    \n    readonly: boolean;\n\n    @ViewChild( \"cuDetail\" ) cuDetail: ActionDetailComponent;\n    @ViewChild( \"arDetail\" ) arDetail: ActionDetailComponent;\n    @ViewChild( \"spDetail\" ) spDetail: ActionDetailComponent;\n\n    @Input()\n    curAction( action: any, readonly: boolean ) {\n      this.action = action;\n      this.readonly = readonly\n    }\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n    }\n\n    cancel(): void {\n        if ( this.cuDetail != null ) {\n            this.cuDetail.endEdit();\n        }\n\n        if ( this.arDetail != null ) {\n            this.arDetail.endEdit();\n        }\n\n        if ( this.spDetail != null ) {\n            this.spDetail.endEdit();\n        }\n\n        this.bsModalRef.hide();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <!-- <div class=\"heading\">\n        <h2>\n            <localize key=\"export-modal.title\"></localize>\n        </h2>\n\t</div> -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <crtable-detail-create-geo-object #cuDetail *ngIf=\"action && (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </crtable-detail-create-geo-object>\n            <crtable-detail-add-remove-child #arDetail *ngIf=\"action && (action.actionType.endsWith('AddChildAction') || action.actionType.endsWith('RemoveChildAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </crtable-detail-add-remove-child>\n            <set-parent-detail #spDetail *ngIf=\"action && (action.actionType.endsWith('SetParentAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </set-parent-detail>\n        </div>\n    </div>\n\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"button-holder text-right\">\n                <button type=\"button\" (click)=\"cancel();\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n                    <span> <localize key=\"modal.button.close\"></localize>\n                    </span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, GeoObjectOverTime } from '@registry/model/registry';\n\n\n@Component({\n\tselector: 'manage-versions-modal',\n\ttemplateUrl: './manage-versions-modal.component.html',\n\tstyleUrls: ['./manage-versions-modal.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsModalComponent implements OnInit {\n\t\n\t@Input() readonly: boolean;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonAttributeVersionChange: Subject<GeoObjectOverTime>;\n\n\tattribute: Attribute;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\tisNewGeoObject: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onAttributeVersionChange = new Subject();\n\t}\n\n\tonVersionChange(geoObjectOverTime: GeoObjectOverTime): void {\n\t\t\n\t\tconsole.log(\"from manage-versions-modal  \", geoObjectOverTime)\n\t\tif (geoObjectOverTime != null) {\n\t\t\tthis.onAttributeVersionChange.next(geoObjectOverTime);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n}\n","<div class=\"modal-body\">\n\n    <div class=\"text-center\">\n        <h2 *ngIf=\"!readonly\">\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-versions\n      *ngIf=\"attribute != null\"\n      [attribute]=\"attribute\"\n      [geoObjectType]=\"geoObjectType\"\n      [geoObjectOverTimeInput]=\"geoObjectOverTime\"\n      [isNewGeoObject]=\"isNewGeoObject\"\n      (onChange)=\"onVersionChange($event)\"\n      [readonly]=\"readonly\"\n    ></manage-versions>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'geoObjectAttributeExcludesFilter',\n    pure: true\n})\nexport class GeoObjectAttributeExcludesPipe implements PipeTransform {\n    transform(items: any[], filter: string[]): any {\n        if (!items || !filter) {\n            return items;\n        }\n       \n        return items.filter(item => filter.indexOf(item.code) === -1)\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'change-request-page',\n    templateUrl: './change-request-page.component.html',\n    styleUrls: ['./change-request-page.css']\n} )\nexport class ChangeRequestPageComponent implements OnInit {\n\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n\tisContributorOnly: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\t\tthis.isContributorOnly = service.isContributerOnly();\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div id=\"app-container\" class=\"container-fluid\" style=\"height: 100%;\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div>\n          <div class=\"heading\">\n            <h2>{{pageTitle}}</h2>\n          </div>\n\n          <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n\n            <request-table></request-table>\n\n            <submit-change-request *ngIf=\"isContributorOnly\"></submit-change-request>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ManageParentVersionsModalComponent } from './manage-parent-versions-modal.component';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n@Component({\n\n\tselector: 'cascading-geo-selector',\n\ttemplateUrl: './cascading-geo-selector.html',\n})\nexport class CascadingGeoSelector {\n\n\t@Input() hierarchies: HierarchyOverTime[];\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Input() isValid: boolean = true;\n\t@Input() readOnly: boolean = false;\n\n\t@ViewChild(\"mainForm\") mainForm;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() customEvent: boolean = false;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tdateStr: string;\n\n\tcHierarchies: any[] = [];\n\n\tparentMap: any = {};\n\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tconst day = this.forDate.getUTCDate();\n\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\n\t\t// Truncate any hours/minutes/etc which may be part of the date\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n\t\tconst time = this.forDate.getTime();\n\n\t\tthis.isValid = true;\n\n\t\tthis.cHierarchies = [];\n\t\tthis.hierarchies.forEach(hierarchy => {\n\t\t\tconst object = {};\n\t\t\tobject['label'] = hierarchy.label;\n\t\t\tobject['code'] = hierarchy.code;\n\n\t\t\tthis.isValid = this.isValid && (this.hierarchies.length > 0);\n\n\t\t\thierarchy.entries.forEach(pot => {\n\t\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tlet parents = [];\n\n\t\t\t\t\thierarchy.types.forEach(type => {\n\t\t\t\t\t\tlet parent: any = {\n\t\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\t\tlabel: type.label\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\t\tparent.text = pot.parents[type.code].text;\n\t\t\t\t\t\t\tparent.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparents.push(parent);\n\t\t\t\t\t});\n\n\t\t\t\t\tobject['parents'] = parents;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.cHierarchies.push(object);\n\n\t\t});\n\n\t\tthis.valid.emit();\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getHierarchies(): any {\n\t\treturn this.hierarchies;\n\t}\n\n\tonManageVersions(code: string): void {\n\t\tconst hierarchy = this.hierarchies.find(h => h.code === code);\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(hierarchy);\n\t\t}\n\t\telse {\n\n\t\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.init(hierarchy);\n\t\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<form style=\"overflow:visible;\" class=\"modal-form\" name=\"cascading-geo-selector\" #mainForm=\"ngForm\">\n  <fieldset>\n    <div>\n      <div class=\"row-holder\" style=\"overflow:visible;\" *ngFor=\"let hierarchy of this.cHierarchies\">\n        <div class=\"label-holder\">\n          <label>\n            {{hierarchy.label}}\n          </label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"container\" style=\"width:100%;\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" style=\"float:left;width:150px;\" *ngFor=\"let parent of hierarchy.parents; let i = index\">\n                {{parent.label}}\n\n                <input style=\"width:150px;\" type=\"text\" class=\"form-control\" disabled\n                  [value]=\"parent.geoObject.properties.displayLabel.localizedValue + ' : ' + parent.geoObject.properties.code\" [name]=\"hierarchy.code + '-' + parent.code + '-input'\">\n                  \n              </div>\n              \n            </div>\n\n            <div class=\"row\" *ngIf=\"!readOnly\">\n              <div class=\"col-sm-12\">\n                  <div class=\"button-holder\" style=\"padding: 20px 0 20px 0;text-align: left;\">\n                      <button type=\"submit\" style=\"\" (click)=\"onManageVersions(hierarchy.code)\" class=\"btn btn-primary\" role=\"button\">\n                          <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n                      </button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { MasterListVersion } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ExportFormatModalComponent } from './export-format-modal.component';\nimport { GeoObjectEditorComponent } from '../geoobject-editor/geoobject-editor.component';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService, ProgressService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'master-list',\n\ttemplateUrl: './master-list.component.html',\n\tstyleUrls: []\n})\nexport class MasterListComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterListVersion = null;\n\tp: number = 1;\n\tcurrent: string = '';\n\tfilter: { attribute: string, value: string, label: string }[] = [];\n\tselected: string[] = [];\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 100,\n\t\tresults: []\n\t};\n\tsort = { attribute: 'code', order: 'ASC' };\n\tisPublished: boolean = true;\n\tisRefreshing: boolean = false;\n\tisWritable: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tpublic searchPlaceholder = \"\";\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\n\tconstructor(public service: RegistryService, private pService: ProgressService, private route: ActivatedRoute,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.searchPlaceholder = localizeService.decode(\"masterlist.search\");\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\t\tthis.isPublished = (this.route.snapshot.paramMap.get('published') == \"true\");\n\n\t\tthis.service.getMasterListVersion(oid).then(version => {\n\t\t\tthis.list = version;\n\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\tattribute.isCollapsed = true;\n\t\t\t});\n\t\t\tconst orgCode = this.list.orgCode;\n\t\t\tconst typeCode = this.list.superTypeCode != null ? this.list.superTypeCode : this.list.typeCode;\n\n\t\t\tthis.isWritable = this.authService.isGeoObjectTypeRC(orgCode, typeCode);\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/progress/' + oid);\n\t\tthis.notifier.subscribe(message => {\n\t\t\tthis.handleProgressChange(message.content)\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\n\tonPageChange(pageNumber: number): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.data(this.list.oid, pageNumber, this.page.pageSize, this.filter, this.sort).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t//    onSearch(): void {\n\t//        this.filter = this.current;\n\t//\n\t//        this.onPageChange( 1 );\n\t//    }\n\n\tonSort(attribute: { name: string, label: string }): void {\n\t\tif (this.sort.attribute === attribute.name) {\n\t\t\tthis.sort.order = (this.sort.order === 'ASC' ? 'DESC' : 'ASC');\n\t\t}\n\t\telse {\n\t\t\tthis.sort = { attribute: attribute.name, order: 'ASC' };\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tattr.search = null;\n\t\t});\n\n\t\tthis.filter = [];\n\t\tthis.selected = [];\n\n\t\tthis.onPageChange(1);\n\t}\n\n\ttoggleFilter(attribute: any): void {\n\t\tattribute.isCollapsed = !attribute.isCollapsed;\n\t}\n\n\tgetValues(attribute: any): void {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.message = null;\n\n\t\t\t// Get the valid values\n\t\t\tthis.service.values(this.list.oid, attribute.search, attribute.name, attribute.base, this.filter).then(options => {\n\t\t\t\toptions.unshift({ label: '[' + this.localizeService.decode(\"masterlist.nofilter\") + ']', value: null });\n\n\t\t\t\tobserver.next(options);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\thandleProgressChange(progress: any): void {\n\n\t\tthis.isRefreshing = (progress.current < progress.total);\n\n\t\tthis.pService.progress(progress);\n\t}\n\n\thandleDateChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && (attribute.value.start !== '' || attribute.value.end !== '')) {\n\n\t\t\tlet label = '[' + attribute.label + '] : [';\n\n\t\t\tif (attribute.value.start != null) {\n\t\t\t\tlabel += attribute.value.start;\n\t\t\t}\n\n\t\t\tif (attribute.value.start != null && attribute.value.end != null) {\n\t\t\t\tlabel += ' - ';\n\t\t\t}\n\n\t\t\tif (attribute.value.end != null) {\n\t\t\t\tlabel += attribute.value.end;\n\t\t\t}\n\n\t\t\tlabel += ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleInputChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && attribute.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleListChange(e: TypeaheadMatch, attribute: any): void {\n\t\tattribute.value = e.item;\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tif (attr.base === attribute.base) {\n\t\t\t\tattr.search = '';\n\t\t\t}\n\t\t});\n\n\t\tif (attribute.value.value != null && attribute.value.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value.label + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: e.item.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t\tattribute.search = e.item.label;\n\t\t}\n\t\telse {\n\t\t\tattribute.search = '';\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tisFilterable(attribute: any): boolean {\n\t\treturn attribute.type !== 'none' && (attribute.dependency.length === 0 || this.selected.indexOf(attribute.base) !== -1 || this.selected.filter(value => attribute.dependency.includes(value)).length > 0);\n\t}\n\n\tonEdit(data): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\teditModal.content.configureAsExisting(data.code, this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterList(this.list.oid).toPromise()\n\t\t\t.then(list => {\n\t\t\t\tthis.list = list;\n\t\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\t\tattribute.isCollapsed = true;\n\t\t\t\t});\n\n\t\t\t\t// Refresh the resultSet\n\t\t\t\tthis.onPageChange(1);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tonNewGeoObject(): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t//editModal.content.fetchGeoObject( data.code, this.list.typeCode );\n\t\teditModal.content.configureAsNew(this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonExport(): void {\n\t\tthis.bsModalRef = this.modalService.show(ExportFormatModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.onFormat.subscribe(format => {\n\t\t\tif (format == 'SHAPEFILE') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-shapefile?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t\telse if (format == 'EXCEL') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-spreadsheet?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t});\n\t}\n\n\tchangeTypeaheadLoading(attribute: any, loading: boolean): void {\n\t\tattribute.loading = loading;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n    <!-- <progress-bar></progress-bar> -->\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\">\n            <div *ngIf=\"list\" class=\"col-md-12\">\n                <h2>\n                    <!-- <localize key=\"masterlist.title\"></localize> -->\n                    {{list.displayLabel}}\n                </h2>\n            </div>\n        </div>\n        <div *ngIf=\"list\" class=\"row form-group\">\n\n            <div class=\"col-md-12\">\n                <h4>\n                    <localize key=\"masterlist.publishDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.publishDate)}}\n                      </span>\n                </h4>\n                \n                <h4>\n                    <localize key=\"masterlist.forDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.forDate)}}\n                      </span>\n                </h4>\n            </div>\n        </div>\n<!--         <div class=\"row\"> -->\n<!--             <div *ngIf=\"list\" class=\"col-md-12\"> -->\n<!--               <a [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, (!isWritable || list.isAbstract), list.forDate]\" routerLinkActive=\"active\"> -->\n<!--                 <localize key=\"masterlist.gotoMap\"></localize> -->\n<!--               </a> -->\n                \n<!--             </div> -->\n<!--         </div> -->\n\n\n        <div *ngIf=\"filter.length > 0\" class=\"row form-group\">\n            <div class=\"col-md-12 table-responsive\" style=\"\">\n                <localize key=\"masterlist.filters\"></localize>\n                <ol>\n                    <li *ngFor=\"let f of filter\">{{f.label}}</li>\n                </ol>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            \n                <div class=\"button-holder pull-right\">\n            \n                    <span class=\"clickable\" (click)=\"clearFilters()\" style=\"padding: 10px;\">\n                        <span class=\"fa-stack fa-md\">\n                            <i class=\"fa fa-filter fa-stack-2x\" style=\"font-size: 25px;\"></i>\n                            <i class=\"fa fa-times-circle fa-stack-1x\" style=\"font-size: 13px;top: 4px;left: 6px;\"></i>\n                        </span>\n                        <localize key=\"masterlist.clearFilters\"></localize>\n                    </span>\n                    \n                    <span *ngIf=\"!isPublished\" class=\"clickable\" (click)=\"onPublish()\" style=\"padding: 10px;\">\n                        <i [ngClass]=\"{'fa fa-refresh clickable':true, 'fa-spin':isRefreshing}\" style=\"font-size: 24px;vertical-align: middle;padding-right: 5px;\" aria-hidden=\"true\"></i>\n                        <localize key=\"masterlist.publish\"></localize>\n                    </span>\n\n\n                        <button *ngIf=\"isWritable && !list.isAbstract\" type=\"submit\"\n                           [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, '__NEW__', (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"\n                         class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"masterlist.newGeoObject\"></localize>\n                        </button>\n                        <button type=\"submit\" (click)=\"onExport()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize *ngIf=\"filter.length === 0\" key=\"io.export.allrows\"></localize>\n                            <localize *ngIf=\"filter.length > 0\" key=\"io.export.filteredrows\"></localize>\n                        </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div *ngIf=\"list\" class=\"col-md-12 table-responsive\" style=\"\">\n                <table class=\"list-table table table-bordered table-striped\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 3%\" class=\"label-column\"><localize key=\"masterlist.view.column\"></localize></th>\n                            <th *ngFor=\"let attribute of list.attributes\" class=\"label-column\">\n\n                                <div style=\"display: table-cell; padding-right: 10px; vertical-align: middle;\" *ngIf=\"isFilterable(attribute)\">\n                                    <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\"> \n\t\t\t\t\t\t\t\t\t\t<i style=\"font-size: 20px;\" class=\"fa fa-filter\" [title]=\"'button.filter.helptext' | localize\"></i>\n                                    </a>\n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; word-break: keep-all; word-wrap: normal;\">{{attribute.label}} </a> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; vertical-align: middle; padding-left: 5px;\"> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'ASC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-down\" style=\"font-size: inherit;\"></i> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'DESC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-up\" style=\"font-size: inherit;\"></i>\n                            \t</a>\n\n                                <div *ngIf=\"isFilterable(attribute)\">\n                                    <!-- <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-filter\"></i>\n\t\t\t\t\t\t\t\t</a> -->\n                                    <div id=\"collapseBasic\" [collapse]=\"attribute.isCollapsed\">\n                                        <input *ngIf=\"attribute.type === 'input'\" [name]=\"attribute.name\" [(ngModel)]=\"attribute.value\" (keyup.enter)=\"handleInputChange(attribute)\" type=\"text\" class=\"form-control search-input\" />\n                                        <div *ngIf=\"attribute.type === 'date'\">\n                                            <input [name]=\"attribute.name + 'Start'\" [(ngModel)]=\"attribute.value.start\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" /> <input [name]=\"attribute.name + 'End'\" [(ngModel)]=\"attribute.value.end\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" />\n                                        </div>\n                                        <input *ngIf=\"attribute.type === 'list'\" \n                                          type=\"text\" \n                                          [placeholder]=\"('masterlist.search' | localize) + '...'\" \n                                          [name]=\"attribute.name\"\n                                          [(ngModel)]=\"attribute.search\"\n                                          [typeaheadAsync]=\"true\"\n                                          [typeahead]=\"getValues(attribute)\"\n                                          (typeaheadOnSelect)=\"handleListChange($event, attribute)\"\n                                          [typeaheadOptionsLimit]=\"100\"\n                                          [typeaheadMinLength]=\"0\"\n                                          [typeaheadWaitMs]=\"300\"\n                                          [ngClass]=\"{'inline-loading':attribute.loading}\"    \n                                          (typeaheadLoading)=\"changeTypeaheadLoading(attribute, $event)\"                                      \n                                          typeaheadOptionField=\"label\"\n                                          class=\"form-control\" autocomplete=\"off\">\n\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\">\n                            <td style=\"width: 3%; text-align: center;\" class=\"label-column\">\n                              <a class=\"fa\" [ngClass]=\"isWritable ? 'fa fa-pencil' : 'fa fa-eye'\" [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, result.code, (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"></a>\n                            </td>\n                            <td *ngFor=\"let attribute of list.attributes\" class=\"label-column\">{{ result[attribute.name] }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!-- <div class=\"row form-group\">\n            <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            </div>\n        </div>\n    </div>\n    <!-- </div> -->\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { PublishModalComponent } from './publish-modal.component';\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { RegistryService } from '@registry/service';\nimport { AuthService, LocalizationService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'published-master-list-history',\n\ttemplateUrl: './published-master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class PublishedMasterListHistoryComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tpage: any = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresults: []\n\t};\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tisAdmin: boolean;\n\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, public authService: AuthService, private localizeService: LocalizationService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'PUBLISH_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\t//isGeoObjectTypeRM(type: string): boolean {\n\t//\treturn this.authService.isGeoObjectTypeRM(type);\n\t//}\n\n\tonDeleteMasterListVersion(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.updateList();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdateList(): void {\n\t\t// update the list of versions. \n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterListVersions(this.list.oid).then((data: { job: string }) => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.list != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getPublishMasterListJobs(this.list.oid, this.page.pageSize, pageNumber, \"createDate\", true).then(response => {\n\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.updateList();\n\t\t}\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, true])\n\t}\n\n\tonPublishShapefile(version: MasterListVersion): void {\n\n\t\tthis.service.publishShapefile(version.oid).then(() => {\n\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDownloadShapefile(version: MasterListVersion): void {\n\t\twindow.location.href = acp + '/master-list/download-shapefile?oid=' + version.oid;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n     <div *ngIf=\"list && ((list.write))\" style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" \n                    [title]=\"'masterList.publish.help.text' | localize\">\n                        <localize key=\"masterlist.publish.versions\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\" style=\"border-bottom: solid lightgrey 3px;\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.publishDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onPublishShapefile(version)\" class=\"btn btn-default\" role=\"button\">\n                                    <localize key=\"masterlist.publish-shapefile\"></localize>\n                                </button>                                \n                                <button *ngIf=\"version.shapefile\" type=\"submit\" (click)=\"onDownloadShapefile(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"masterlist.download\"></localize>\n                                </button>   \n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onDeleteMasterListVersion( version )\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>  \n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.publishDate)}}\n                          </span>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12 order-md-1\">\n            <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <tr style=\"height: 56px;\">\n                                <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let job of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <td style=\"vertical-align: middle;\">\n                                    <div class=\"wrapper\">\n                                        <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                        <p style=\"padding-left: 60px;\">\n                                            <span style=\"display: block;\"> {{job.createDate}} </span>\n                                            <span style=\"display: block;\"> {{job.author}} </span>\n                                            <span style=\"display: block;\"> {{job.type}} </span>\n                                            <span style=\"display: block;\"> {{job.status}} </span>\n                                            <span *ngIf=\"job.exception\" style=\"display: block;\"> {{job.exception.message}} </span>\n                                        </p>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                    </div>\n                </div>\n            </ul>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-history',\n\ttemplateUrl: './master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class MasterListHistoryComponent implements OnInit {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tforDate: string = '';\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, private localizeService: LocalizationService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"EXPLORATORY\").then(list => {\n\t\t\tthis.list = list;\n\t\t});\n\t}\n\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.createMasterListVersion(this.list.oid, this.forDate).then(version => {\n\t\t\tthis.list.versions.push(version);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, false])\n\t}\n\n\tonDelete(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.list.versions = this.list.versions.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== version.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div *ngIf=\"list && list.exploratory\" style=\"margin-bottom: 10px;\" class=\"row\">\n\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\" style=\"margin-left: 10px;\">\n                <div class=\"form-group\">\n                    <label for=\"forDate\" style=\"display: block; margin-bottom: 0;\"><localize key=\"masterlist.publishingFor\"></localize></label> <input id=\"forDate\" type=\"date\" name=\"forDate\" [(ngModel)]=\"forDate\" required>\n\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\">\n                        <localize key=\"masterlist.publishNewVersion\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.generatedDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\"> -->\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(version)\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>\n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.createDate)}}\n                          </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { MasterList } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\n@Component({\n\n\tselector: 'master-list-view',\n\ttemplateUrl: './master-list-view.component.html',\n\tstyleUrls: ['./master-list-view.component.css']\n})\nexport class MasterListViewComponent implements OnInit {\n\n\tcontent: string = \"\";\n\tlist: MasterList = null;\n\n\t/*\n\t * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute) {\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tif (oid != null) {\n\t\t\tthis.content = \"PUB\";\n\t\t}\n\n\t\tthis.service.getMasterList(oid).then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tif (list.read) {\n\t\t\t\tthis.content = \"EXP\";\n\t\t\t}\n\t\t});\n\t}\n\n\tonViewMetadata(event: any): void {\n\t\tevent.preventDefault();\n\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h3>{{list.displayLabel.localizedValue}}</h3>\n                    </div>\n                </div>\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h5>\n                            <b> <a href=\"#\" (click)=\"onViewMetadata($event)\"><localize key=\"masterlist.view\"></localize> </a></b>\n                        </h5>\n                    </div>\n                </div>\n                \n                <div>\n                    <a *ngIf=\"list && list.read\" style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'EXP'}\" (click)=\"renderContent('EXP')\"><localize key=\"lists.exploratory.link.label\"></localize></a>\n                    <a style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'PUB'}\" (click)=\"renderContent('PUB')\"><localize key=\"lists.published.link.label\"></localize></a>\n                </div>\n\n                <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n                    <published-master-list-history *ngIf=\"list && content === 'PUB'\" [oid]=\"list.oid\"></published-master-list-history>\n                    <master-list-history *ngIf=\"list && content === 'EXP'\" [oid]=\"list.oid\"></master-list-history>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { interval } from 'rxjs';\n\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob, ScheduledJobOverview, PaginationPage } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\n@Component({\n\tselector: 'scheduled-jobs',\n\ttemplateUrl: './scheduled-jobs.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class ScheduledJobsComponent implements OnInit {\n\tmessage: string = null;\n\n\tactiveJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompleteJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tisViewAllOpen: boolean = false;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.onActiveJobsPageChange(1);\n\n\t\tthis.pollingData = interval(1000).subscribe(() => {\n\t\t\tthis.activeTimeCounter++\n\t\t\tthis.completeTimeCounter++\n\n\t\t\tif (this.isViewAllOpen) {\n\t\t\t\tif (this.activeTimeCounter >= 4) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t\tif (this.completeTimeCounter >= 7) {\n\t\t\t\t\tthis.onCompleteJobsPageChange(this.completeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.completeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.activeTimeCounter >= 2) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.pollingData.unsubscribe();\n\t}\n\n\tformatJobStatus(job: ScheduledJobOverview) {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PaginationPage): void {\n\n\t\tpage.results.forEach(job => {\n\n\t\t\tlet stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{ \"label\": this.localizeService.decode(\"scheduler.step.fileImport\"), \"status\": \"COMPLETE\" },\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.staging\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.validation\"),\n\t\t\t\t\t\t\"status\": job.stage === \"VALIDATE\" || job.stage === \"VALIDATION_RESOLVE\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"VALIDATE\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.databaseImport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"IMPORT\" || job.stage === \"IMPORT_RESOLVE\" || job.stage === \"RESUME_IMPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tjob = job as ScheduledJobOverview;\n\t\t\tjob.stepConfig = stepConfig;\n\t\t});\n\n\t}\n\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"NEW\", \"VALIDATE\", \"VALIDATION_RESOLVE\", \"IMPORT\", \"IMPORT_RESOLVE\", \"RESUME_IMPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\tonViewAllCompleteJobs(): void {\n\t\tthis.onCompleteJobsPageChange(1);\n\n\t\tthis.isViewAllOpen = true;\n\t}\n\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-history/', code])\n\t}\n\n\tonActiveJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJobs(this.activeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.activeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.activeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCompleteJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getCompletedScheduledJobs(this.completeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.completeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.completeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\tonCancelScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(job.configuration).then(response => {\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"py-5\">\n            <h2>\n                <localize key=\"scheduledjobs.title\"></localize>\n            </h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n                <ul class=\"list-group\">\n                    <div class=\"solid-table-wrapper\">\n                        <table class=\"table table-striped\"> \n                            <thead > \n                                <tr style=\"height: 56px;\"> \n                                    <th style=\"vertical-align: middle;\">\n                                        <localize key=\"scheduledjobs.jobs.table.header\"></localize>                                      \n                                    </th> \n                                </tr> \n                            </thead> \n                            <tbody> \n                                <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                                <tr *ngFor=\"let job of activeJobsPage.results | paginate: { id: 'activeJobs', itemsPerPage: activeJobsPage.pageSize, currentPage: activeJobsPage.pageNumber, totalItems: activeJobsPage.count }\" >\n                                    <td style=\"vertical-align: middle;\">\n                                        <div class=\"wrapper\">\n                                            <i style=\"position: absolute;font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            <p style=\"padding-left: 60px;\">\n                                                <span style=\"display: block;\">\n                                                    {{job.fileName}}\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    <span class=\"date-string-display\">\n                                                        {{formatDate(job.createDate)}}\n                                                    </span>\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    {{formatJobStatus(job)}}\n                                                </span>\n                                            </p>\n\n                                            <step-indicator [steps]=\"job.stepConfig\"></step-indicator>\n\n                                        </div>\n                                    </td> \n                                    <td *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;vertical-align: middle;\">  \n\n                                        <div class=\"button-holder\" style=\"float: right;\">\n                                            <a [routerLink]=\"'/registry/job/' + job.historyId\" routerLinkActive=\"active\">\n                                                <button class=\"btn btn-primary\" role=\"button\">\n                                                    <localize *ngIf=\"job.stage === 'IMPORT_RESOLVE' || job.stage === 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.fix.problems.button\"></localize>\n                                                    <localize *ngIf=\"job.stage != 'IMPORT_RESOLVE' && job.stage != 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.detail.button\"></localize>\n                                                </button>\n                                            </a>\n                                            <button *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\" type=\"button\" (click)=\"onCancelScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n                                                <localize key=\"etl.import.cancel.openModal\"></localize>\n                                            </button>\n                                            <button *ngIf=\"job.stage === 'IMPORT_RESOLVE'\" type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n\t\t\t\t\t\t\t\t\t\t\t\t                    </button>\n                                        </div>\n                                    </td> \n                                </tr> \n\n                            </tbody> \n                        </table>\n                        <div *ngIf=\"activeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                            <pagination-controls id=\"activeJobs\" (pageChange)=\"onActiveJobsPageChange($event)\"></pagination-controls>\n                        </div>\n                    </div>\n\n                    <div class=\"solid-table-wrapper\">\n\t                    <table class=\"table table-striped\"> \n\t                      <thead> \n\t                        <tr> \n\t                          <th style=\"width:40%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.completedjobs.table.header\"></localize>                                      \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.status\"></localize>                   \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importedRecords\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importStartDate\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importEndDate\"></localize>                   \n                            </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length < 1\" style=\"border-bottom: none; width:15%\">\n\t                            <button type=\"submit\" (click)=\"onViewAllCompleteJobs()\" class=\"btn btn-default pull-right\" role=\"button\">\n\t                              <localize key=\"scheduledjobs.view.completed.jobs.button\"></localize>\n\t                            </button>\n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"border-bottom: none; width:0%\">\n                            </th>\n\t                        </tr> \n\t                      </thead> \n\t                      <tbody> \n\t                      <!-- <tr *ngFor=\"let job of completedJobs; let i = index;\">  -->\n\t                      <tr *ngFor=\"let job of completeJobsPage.results | paginate: { id: 'completeJobs', itemsPerPage: completeJobsPage.pageSize, currentPage: completeJobsPage.pageNumber, totalItems: completeJobsPage.count }\" >\n\t                        <td style=\"width:40%; vertical-align: middle;\">\n\t                          <div class=\"wrapper\">\n                              <i class=\"fa fa-file\" style=\"position: absolute;\" aria-hidden=\"true\"></i>\n                              <p style=\"padding-left: 30px;margin: 0;\">{{job.fileName}}</p>\n\t                          </div>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n\t                          <p style=\"padding-left: 0px;margin: 0;\">{{formatJobStatus(job)}}</p>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n                            <p style=\"padding-left: 0px;margin: 0;\">{{job.importedRecords}}</p>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                              <span class=\"date-string-display\">\n                                {{formatDate(job.createDate)}}\n                              </span>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                            <span class=\"date-string-display\">\n                                {{formatDate(job.lastUpdateDate)}}\n                            </span>\n                          </td>\n\t                        <td *ngIf=\"isAdmin || isMaintainer\" style=\"width:15%;text-align: right;vertical-align: middle;\">                                \n\t                           <!-- \n\t                           <button type=\"submit\" (click)=\"onView(job.historyId)\" class=\"btn btn-primary\" role=\"button\"><localize key=\"scheduledjobs.detail.button\"></localize></button>\n\t                           -->\n\t                           <!-- <button type=\"submit\" (click)=\"onDelete(job)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"modal.button.delete\"></localize></button> -->\n\t                        </td>\n\t                       </tr> \n\t                      </tbody> \n\t                    </table>\n\t\n\t                    <div *ngIf=\"completeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls id=\"completeJobs\" (pageChange)=\"onCompleteJobsPageChange($event)\"></pagination-controls>\n\t                    </div>\n                    </div>\n                </ul>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { JobConflictModalComponent } from './conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './conflict-widgets/reupload-modal.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'job',\n\ttemplateUrl: './job.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class JobComponent implements OnInit {\n\tmessage: string = null;\n\tjob: ScheduledJob;\n\tallSelected: boolean = false;\n\thistoryId: string = \"\";\n\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\ttimeCounter: number = 0;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tisPolling: boolean = false;\n\thasRowValidationProblem: boolean = false;\n\n\tnotifier: WebSocketSubject<{ type: string, message: string }>;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService,\n\t\tprivate router: Router, private route: ActivatedRoute,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.historyId = this.route.snapshot.params[\"oid\"];\n\n\t\tthis.onPageChange(1);\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'IMPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\tformatAffectedRows(rows: string) {\n\t\treturn rows.replace(/,/g, \", \");\n\t}\n\n\tformatValidationResolve(obj: any) {\n\t\treturn JSON.stringify(obj);\n\t}\n\n\tonProblemResolved(problem: any): void {\n\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\tlet pageConflict = this.page.results[i];\n\n\t\t\tif (pageConflict.id === problem.id) {\n\t\t\t\tthis.page.results.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFriendlyProblemType(probType: string): string {\n\n\t\tif (probType === \"net.geoprism.registry.io.ParentCodeException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.PostalCodeLocationException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.postal.code.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.AmbiguousParentException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.multi.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.InvalidGeometryException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.invalid.geom.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.DataNotFoundException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.datanotfound\");\n\t\t}\n\n\t\tif (\n\t\t\tprobType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.permission\");\n\t\t}\n\n\t\t// if(probType === \"net.geoprism.registry.io.TermValueException\"){\n\t\t//   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n\t\t// }\n\n\t\tif (\n\t\t\tprobType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.duplicate.data.lookup\");\n\t\t}\n\n\t\treturn probType;\n\t}\n\n\n\tonEdit(problem: any): void {\n\t\t// this.router.navigate( ['/registry/master-list-history/', code] )\n\n\t\tthis.bsModalRef = this.modalService.show(JobConflictModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.problem = problem;\n\t\tthis.bsModalRef.content.job = this.job;\n\t\tthis.bsModalRef.content.onConflictAction.subscribe(data => {\n\t\t\tif (data.action === 'RESOLVED') {\n\t\t\t\tthis.onProblemResolved(data.data);\n\t\t\t}\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJob(this.historyId, this.page.pageSize, pageNumber, true).then(response => {\n\n\t\t\tthis.job = response;\n\n\t\t\tif (this.job.stage === 'IMPORT_RESOLVE') {\n\t\t\t\tthis.page = this.job.importErrors;\n\t\t\t}\n\t\t\telse if (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.page = this.job.problems;\n\n\t\t\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\t\t\tlet problem = this.page.results[i];\n\n\t\t\t\t\tif (problem.type === 'RowValidationProblem') {\n\t\t\t\t\t\tthis.hasRowValidationProblem = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonViewAllActiveJobs(): void {\n\n\t}\n\n\tonViewAllCompleteJobs(): void {\n\n\t}\n\n\ttoggleAll(): void {\n\t\tthis.allSelected = !this.allSelected;\n\n\t\tthis.job.importErrors.results.forEach(row => {\n\t\t\trow.selected = this.allSelected;\n\t\t})\n\t}\n\n\tonReuploadAndResume(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ReuploadModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.job = this.job;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string): void {\n\t\tif (this.page.results.length == 0) {\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs']);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tif (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.validationDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.validationButton\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t});\n\t\t}\n\t}\n\n\tonCancelScheduledJob(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(this.job.configuration).then(response => {\n\t\t\t\t//this.bsModalRef.hide()\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                                <strong>{{job.fileName}}</strong>\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              <span class=\"date-string-display\">\n                                    {{formatDate(job.createDate)}}\n                              </span>\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.importedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.importedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n                <div class=\"col-md-5 order-md-1\">\n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'VALIDATION_RESOLVE'\" style=\"display:block; margin: 10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.validation.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.reimport.button\"></localize>\n                    </button>\n                  </div>\n                  \n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'IMPORT_RESOLVE'\" style=\"display:block; margin:10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.import.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                    </button>\n                  </div>\n      \n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && !hasRowValidationProblem\" class=\"button-holder\" style=\"display:block; margin:10px;text-align: right;\">\n                      <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <localize *ngIf=\"job && job.stage === 'VALIDATION_RESOLVE'\" key=\"etl.import.resume.openModal\"></localize>\n                        <span *ngIf=\"job && job.stage === 'IMPORT_RESOLVE'\">\n                          <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <div *ngIf=\"hasRowValidationProblem\"class=\"button-holder\" style=\"display:block; margin:10px;\">\n                    <button type=\"submit\" (click)=\"onReuploadAndResume(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <span>\n                          <localize key=\"scheduledjobs.reupload.resume.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <!--\n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && job.stage === 'VALIDATION_RESOLVE'\" class=\"button-holder\" style=\"display:block; margin:10px;\">\n                      <button type=\"button\" (click)=\"onCancelScheduledJob(job.historyId)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"etl.import.cancel.openModal\"></localize></button>\n                  </div>\n                  -->\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr>\n\t                                <!-- <th class=\"label-column\">\n\t                                  <div class=\"check-block\">\n\t                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n\t                                     <span></span>\n\t                                   </div>\n\t                                  </div>\n\t                                </th> -->\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"scheduledjobs.import.table.problem.type.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n\t                                    \n\t                                </th>\n                                </tr>\n                            </thead>\n                            <thead *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n                              <tr>\n                                <!-- <th class=\"label-column\">\n                                  <div class=\"check-block\">\n                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n                                     <span></span>\n                                   </div>\n                                  </div>\n                                </th> -->\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.problem.type.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.label.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  \n                                </th>\n                              </tr>\n                            </thead>\n\n                            <tbody *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <!-- <tr *ngFor=\"let row of job.errors.page; let i = index;\"> -->\n                                    <!-- <td class=\"label-column\">\n                                      <boolean-field [(value)]=\"row.selected\"></boolean-field>\n                                    </td> -->\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{getFriendlyProblemType(row.exception.type)}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.exception.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                    <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n                                        <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                            <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n\n                            <tbody *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n\t                            <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n\t                             <!-- <td class=\"label-column\">\n\t                               <boolean-field [(value)]=\"row.selected\"></boolean-field>\n\t                             </td> -->\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n\t                               <p>{{row.type}}</p> \n\t                             </td>\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p *ngIf=\"row.type === 'RowValidationProblem'\">{{row.exception.message}}</p>\n                                 <p *ngIf=\"row.type === 'ParentReferenceProblem' || row.type === 'TermReferenceProblem'\">{{row.label}}</p>\n                               </td>\n                               <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p>{{formatAffectedRows(row.affectedRows)}}</p>\n                               </td>\n\t                             <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n\t                              <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                    <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n\t                              </button>\n\t                             </td>\n\t                            </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ScheduledJobOverview } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'job-conflict-modal',\n    templateUrl: './job-conflict-modal.component.html',\n    styleUrls: []\n} )\nexport class JobConflictModalComponent implements OnInit {\n    message: string = null;\n    problem: any;\n    job: ScheduledJobOverview;\n    \n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef ) {\n      this.onConflictAction = new Subject();\n    }\n\n    ngOnInit(): void {\n      \n    }\n    \n    onProblemResolvedListener(problem: any): void {\n      this.onConflictAction.next({action:\"RESOLVED\", data: problem});\n    }\n\n    onCancel(): void {\n        this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"scheduledjobs.problemdetail.modal.title\"></localize>\n        </h2>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            \n            <div *ngIf=\"problem && job && job.stage === 'IMPORT_RESOLVE'\">\n                <import-problem-widget (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\"></import-problem-widget>\n            </div>\n            <div *ngIf=\"problem && job && job.stage === 'VALIDATION_RESOLVE'\">\n              <parent-reference-problem-widget *ngIf=\"problem.type === 'ParentReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></parent-reference-problem-widget>\n              <term-reference-problem-widget *ngIf=\"problem.type === 'TermReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></term-reference-problem-widget>\n              <row-validation-problem-widget *ngIf=\"problem.type === 'RowValidationProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></row-validation-problem-widget>\n            </div>\n            \n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize key=\"io.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { GeoObjectType, MasterList, ScheduledJob, ImportError } from '@registry/model/registry';\n\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'import-problem-widget',\n    templateUrl: './import-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ImportProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: ImportError;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n    }\n\n    onEditGeoObject(): void {\n        let editModal = this.modalService.show( GeoObjectEditorComponent, {\n            backdrop: true,\n            ignoreBackdropClick: true\n        } );\n\n        editModal.content.configureFromImportError(this.problem, this.job.historyId, this.job.configuration.startDate, true);\n        editModal.content.setMasterListId( null );\n        editModal.content.setOnSuccessCallback(() => {\n\n          this.onProblemResolved.emit(this.problem);\n          this.bsModalRef.hide()\n            \n        } );\n    }\n\n    getFriendlyProblemType(probType: string): string {\n\n        if(probType === \"net.geoprism.registry.io.ParentCodeException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.PostalCodeLocationException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.AmbiguousParentException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.multi.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.InvalidGeometryException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.invalid.geom.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.DataNotFoundException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.datanotfound\" );\n        }\n        \n        if(\n            probType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.permission\" );\n        }\n\n        // if(probType === \"net.geoprism.registry.io.TermValueException\"){\n        //   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        // }\n        if(\n          probType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.duplicate.data.lookup\" );\n        }\n\n        return probType;\n    }\n\n    onSubmit(): void {\n\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide();\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>:\n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row equal\" style=\"display: flex;display: -webkit-flex;flex-wrap: wrap;\">\n                <div class=\"col-md-6\" style=\"padding-right: 5px;\">\n                    <div style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;\">\n                        <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{getFriendlyProblemType(problem.exception.type)}}</p>\n\n                        <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{problem.exception.message}}</p>\n\n                        <!-- <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                        <p>TODO: how to address the issue.</p> -->\n                    </div>\n                </div>\n                <div class=\"col-md-6\" style=\"padding-left: 5px;\">\n                    <div *ngIf=\"problem.object != null && problem.object.geoObject != null\" style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;text-align: center;\">\n                        <button style=\"width: 90%;\" type=\"submit\" (click)=\"onEditGeoObject()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"scheduledjobs.editGeoObject\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'parent-reference-problem-widget',\n    templateUrl: './parent-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ParentReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.parentProblem.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p>\n                      <localize key=\"etl.parentProblem.toResolve\"></localize>\n                    </p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"etl.problem.parent.context\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <div *ngIf=\"problem.context.length > 0\" style=\"margin-top:10px;\">\n\t\t                    <ol *ngFor=\"let con of problem.context\">\n\t\t\t\t\t\t\t\t          <li>{{con.label}} ({{con.type}})</li>\n\t\t\t\t\t\t\t\t        </ol>\n\t\t\t\t\t\t\t        </div>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.parent.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"parentSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem.typeCode, problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"name\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"problem.parent == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n    selector: 'term-reference-problem-widget',\n    templateUrl: './term-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class TermReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    termId: string = null;\n    searchLabel: string;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( conflict: any ): Observable<any> {\n        return Observable.create(( observer: any ) => {\n            this.iService.getTermSuggestions( conflict.mdAttributeId, this.searchLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n    \n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        classifierId: this.termId,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div *ngIf=\"problem\" class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.problem.termReference.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.termReference.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.attributeLabel\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{problem.attributeLabel}}</span>\n                    </div>\n                  </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.termReference.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"termSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"label\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"termId == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'row-validation-problem-widget',\n    templateUrl: './row-validation-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class RowValidationProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    formatAffectedRows(rows: string)\n    {\n      return rows.replace(/,/g, \", \");\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\"><localize key=\"etl.problem.rowValidation.message\"></localize></p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.rowValidation.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{formatAffectedRows(problem.affectedRows)}}</span>\n                    </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.rowValidation.message\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.exception.message}}</span>\n\t                  </div>\n\t                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ModalTypes } from '@shared/model/modal';\nimport { LocalizationService, EventService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { ScheduledJob } from '@registry/model/registry';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'reupload-modal',\n    templateUrl: './reupload-modal.component.html',\n    styleUrls: []\n} )\nexport class ReuploadModalComponent {\n  @Input() title: string = this.localizeService.decode(\"reuploadmodal.title\");\n\n  @Input() message: string = this.localizeService.decode(\"reuploadmodal.message\");\n  \n  @Input() data: any;\n  \n  @Input() submitText: string = this.localizeService.decode(\"reuploadmodal.import\");\n  \n  @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n  \n  @Input() type: ModalTypes = ModalTypes.warning;\n  \n  @Input() job: ScheduledJob;\n  \n  @ViewChild( 'myFile' )\n  fileRef: ElementRef;\n  \n  /*\n   * File uploader\n   */\n  uploader: FileUploader;\n  \n  errorMessage: string;\n  \n  /*\n   * Called on confirm\n   */\n  public onConfirm: Subject<any>;\n  \n  constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService, private eventService: EventService ) { }\n  \n  ngOnInit(): void {\n    this.onConfirm = new Subject();\n    \n    let options: FileUploaderOptions = {\n      queueLimit: 1,\n      removeAfterUpload: true,\n      url: acp + '/etl/reimport'\n    };\n    \n    this.uploader = new FileUploader( options );\n    this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n        form.append( 'json', JSON.stringify(this.job.configuration) );\n    };\n    this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n        this.eventService.start();\n    };\n    this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n        this.fileRef.nativeElement.value = \"\";\n        this.eventService.complete();\n    };\n    this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.onConfirm.next( this.data );\n      this.bsModalRef.hide();\n    };\n    this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.error( JSON.parse( response ) );\n    }\n  }\n  \n  toString(data: any): string\n  {\n    return JSON.stringify(data);\n  }\n  \n  confirm(): void {\n    if ( this.uploader.queue != null && this.uploader.queue.length > 0 ) {\n      this.uploader.uploadAll();\n    }\n    else {\n      this.error( { message: this.localizeService.decode( 'io.missing.file' ), error: {} } );\n    }\n  }\n  \n  public error( err: any ): void {\n    this.errorMessage = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div class=\"modal-body\">\n\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">{{errorMessage}}</div>\n\n  <div class=\"heading\">\n    <h3>{{title}}</h3>\n  </div>\n\n  <div>{{message}}</div>\n\n  <form *ngIf=\"job\" style=\"margin-top: 30px;\" #form=\"ngForm\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 text-right\" for=\"file\">\n        <localize *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n        <localize *ngIf=\"job.configuration.formatType === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n      </label>\n      <div class=\"col-md-9\">\n        <input *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".zip\" required />\n        <input *ngIf=\"job.configuration.formatType === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".xlsx,.zip\" required />\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\"\n          style=\"padding: 4px 18px;\">\n          <span>{{cancelText}}</span>\n        </button>\n        <button type=\"button\" (click)=\"confirm()\"\n          [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n          aria-disabled=\"false\" style=\"padding: 4px 18px;\">\n          <span>{{submitText}}</span>\n        </button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { TaskService } from '@registry/service';\nimport { GeoObjectType, PaginationPage } from '@registry/model/registry';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'task-viewer',\n\ttemplateUrl: './task-viewer.component.html',\n\tstyleUrls: ['./task-viewer.component.css'],\n\tproviders: [DatePipe]\n})\n\nexport class TaskViewerComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tinProgressTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompletedTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tisViewAllOpen: boolean = false;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tconstructor(private taskService: TaskService, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.onInProgressTasksPageChange(1);\n\t}\n\n\tupper(str: string): string {\n\t\tif (str != null) {\n\t\t\treturn str.toUpperCase();\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tonInProgressTasksPageChange(pageNumber: any): void {\n\t\tthis.taskService.getMyTasks(pageNumber, this.inProgressTasks.pageSize, 'UNRESOLVED').then(page => {\n\t\t\tthis.inProgressTasks = page;\n\t\t});\n\t}\n\n\tonCompletedTasksPageChange(pageNumber: any): void {\n\n\t\tthis.taskService.getMyTasks(pageNumber, this.completedTasks.pageSize, 'RESOLVED').then(page => {\n\t\t\tthis.completedTasks = page;\n\t\t});\n\t}\n\n\tonCompleteTask(task: any): void {\n\t\t// this.isViewAllOpen = true;\n\n\t\tthis.taskService.completeTask(task.id).then(() => {\n\n\t\t\tconst index = this.inProgressTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.inProgressTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.push(task);\n\t\t\t// this.onCompletedTasksPageChange(1);\n\t\t});\n\t}\n\n\tonMoveTaskToInProgress(task: any): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.taskService.setTaskStatus(task.id, 'UNRESOLVED').then(() => {\n\n\t\t\tconst index = this.completedTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\tthis.inProgressTasks.results.push(task);\n\t\t});\n\t}\n\n\tonViewAllCompletedTasks(): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.onCompletedTasksPageChange(1);\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n    <message></message>\n\n    <h2>\n      <localize key=\"tasks.openTasksTitle\"></localize>\n    </h2>\n    <hr>\n  \n\t\t<div class=\"row\" *ngIf=\"inProgressTasks.results.length > 0\">\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\">\n\t        <div *ngFor=\"let task of inProgressTasks.results | paginate: { id: 'inProgressTasks', itemsPerPage: inProgressTasks.pageSize, currentPage: inProgressTasks.pageNumber, totalItems: inProgressTasks.count }\" class=\"panel panel-default\">\n\t          <div class=\"panel-heading\">\n\t            <h4>{{upper(task.title)}}</h4>\n\t          </div>\n\t          \n\t          <div class=\"panel-body\">\n\t            <div class=\"row\">\n\t             <div class=\"col-md-9\">\n\t              <label><localize key=\"tasks.taskMessage\"></localize></label>\n\t              <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n\t              <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                  <span class=\"date-string-display\">\n                      {{formatDate(task.createDate)}}\n                  </span>\n\t             </div>\n\t             <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" checked id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                \n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" (click)=\"onCompleteTask(task)\" type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n\t             </div>\n\t            </div>\n\t          </div>\n\t        </div>\n\t        <div *ngIf=\"inProgressTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"inProgressTasks\" (pageChange)=\"onInProgressTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n      </div>\n\t\t</div>\n\t\t\n\t\t\n\t\t<div class=\"row\">\n\t\t<h2 class=\"col-md-9\">\n      <localize key=\"tasks.completedTasksTitle\"></localize>\n    </h2>\n    <button class=\"col-md-3\" style=\"margin-top:20px;\" type=\"submit\" (click)=\"onViewAllCompletedTasks()\" class=\"btn btn-default pull-right\" role=\"button\">\n      <localize key=\"tasks.viewCompletedTasksButton\"></localize>\n    </button>\n    </div>\n    <hr>\n  \n    <div class=\"row\" >\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\" *ngIf=\"isViewAllOpen && completedTasks.results.length > 0\">\n          <div *ngFor=\"let task of completedTasks.results | paginate: { id: 'completedTasks', itemsPerPage: completedTasks.pageSize, currentPage: completedTasks.pageNumber, totalItems: completedTasks.count }\" class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h4>{{upper(task.title)}}</h4>\n            </div>\n            \n            <div class=\"panel-body\">\n              <div class=\"row\">\n               <div class=\"col-md-9\">\n                <label><localize key=\"tasks.taskMessage\"></localize></label>\n                <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                <span class=\"date-string-display\" style=\"margin-right:30px;\">\n                   {{formatDate(task.createDate)}}\n                </span>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.completeDateLabel\"></localize></label>\n                <span class=\"date-string-display\" >\n                   {{formatDate(task.completedDate)}}\n                </span>\n               </div>\n               <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" (click)=\"onMoveTaskToInProgress(task)\" id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" checked type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n               </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"completedTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"completedTasks\" (pageChange)=\"onCompletedTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n        <div class=\"content-wrapper\" *ngIf=\"completedTasks.results.length === 0 && isViewAllOpen\">\n          <p style=\"font-style:italic;color:grey;\"><localize key=\"tasks.no.completed.tasks.message\"></localize></p>\n        </div>\n      </div>\n    </div>\n\n\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { SynchronizationConfig } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { SynchronizationConfigModalComponent } from './synchronization-config-modal.component';\n\n@Component({\n\tselector: 'synchronization-config-manager',\n\ttemplateUrl: './synchronization-config-manager.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigManagerComponent implements OnInit {\n\tmessage: string = null;\n\n\tpage: PageResult<SynchronizationConfig> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 20\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: SynchronizationConfigService, private lService: LocalizationService, private router: Router, private modalService: BsModalService) { }\n\n\tngOnInit(): void {\n\t\tthis.onPageChange(1);\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tthis.service.getPage(pageNumber, this.page.pageSize).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcreate(): void {\n\t\tthis.service.edit(null).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(null, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonEdit(config: SynchronizationConfig): void {\n\n\t\tthis.service.edit(config.oid).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(response.config, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonRemove(config: SynchronizationConfig): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.lService.decode(\"confirm.modal.verify.delete\") + ' [' + config.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.submitText = this.lService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(() => {\n\t\t\tthis.service.remove(config.oid).then(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tonView(config: SynchronizationConfig): void {\n\t\tthis.router.navigate(['/registry/synchronization-config/', config.oid])\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div class=\"heading\">\n      <h2>\n        <localize key=\"synchronization.config.manager\"></localize>\n      </h2>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12 order-md-1\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th style=\"width: 70%;\"><localize key=\"synchronization.config.label\"></localize></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let config of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"clickable\">\n              <td style=\"width: 70%; vertical-align: middle;\">\n                <a [routerLink]=\"'/registry/synchronization-config/' + config.oid\" routerLinkActive=\"active\"> {{config.label.localizedValue}} </a>\n              </td>\n              <td style=\"width: 30%; text-align: right;\">\n                <button type=\"submit\" (click)=\"onView(config)\" class=\"btn btn-primary\" role=\"button\">\n                  <localize key=\"modal.button.view\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onEdit(config)\" class=\"btn btn-default\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.edit\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onRemove(config)\" class=\"btn btn-danger\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.delete\"></localize>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n\n        <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n          <div class=\"col-md-6\">\n            <button type=\"submit\" (click)=\"create()\" class=\"btn btn-primary\" role=\"button\">\n              <localize key=\"hierarchy.management.button.create\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { SynchronizationConfig, OrgSyncInfo, GeoObjectType } from '@registry/model/registry';\nimport { SynchronizationConfigService, RegistryService } from '@registry/service';\nimport { CustomAttributeConfig } from '@registry/model/sync';\n\nexport interface LevelRow {\n\tisAttributeEditor: boolean;\n\n\tlevel?: any;\n\tlevelNum?: number;\n\thasAttributes?: boolean;\n\n\tattrCfg?: GOTAttributeConfig;\n}\nexport interface GOTAttributeConfig {\n\tgeoObjectTypeCode?: string;\n\tattrs: CustomAttributeConfig[];\n}\n\n@Component({\n\tselector: 'synchronization-config-modal',\n\ttemplateUrl: './synchronization-config-modal.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigModalComponent implements OnInit {\n\tmessage: string = null;\n\n\t@ViewChild('form') form;\n\n\tconfig: SynchronizationConfig = {\n\t\torganization: null,\n\t\tsystem: null,\n\t\thierarchy: null,\n\t\tlabel: this.lService.create(),\n\t\tconfiguration: {}\n\t};\n\n\torganizations: OrgSyncInfo[] = [];\n\n\tcOrg: OrgSyncInfo = null;\n\tcSystem: { label: string, oid: string, type: string } = null;\n\n\ttypes: GeoObjectType[] = [];\n\n\tlevelRows: LevelRow[] = [];\n\t\n\torgUnitGroups: any[] = [];\n\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonSuccess: Subject<SynchronizationConfig>;\n\n\n\tconstructor(private service: SynchronizationConfigService, private registryService: RegistryService, private lService: LocalizationService, private bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tinit(config: SynchronizationConfig, organizations: OrgSyncInfo[]): void {\n\n\t\tthis.organizations = organizations;\n\n\t\tif (config != null) {\n\t\t\tthis.config = config;\n\n\t\t\tlet oIndex = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\t\tif (oIndex !== -1) {\n\t\t\t\tthis.cOrg = this.organizations[oIndex];\n\t\t\t}\n\n\t\t\tlet sIndex = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\t\tif (sIndex !== -1) {\n\t\t\t\tthis.cSystem = this.cOrg.systems[sIndex];\n\t\t\t}\n\n\t\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t\t// Get the types\t\n\t\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t\t//\tthis.types = types;\n\t\t\t\t//});\n\t\t\t\t\n\t\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n          this.types = esConfig.types;\n          this.orgUnitGroups = esConfig.orgUnitGroups;\n        }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n        });\n\n\t\t\t}\n\n\t\t\tthis.levelRows = [];\n\t\t\tfor (var i = 0; i < this.config.configuration.levels.length; ++i) {\n\t\t\t\tvar level = this.config.configuration.levels[i];\n\n\t\t\t\tvar levelRow: LevelRow = { level: level, levelNum: i, isAttributeEditor: false };\n\n\t\t\t\tif (level.attributes != null && Object.keys(level.attributes).length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\t\t\t\t}\n\n\t\t\t\tthis.levelRows.push(levelRow);\n\t\t\t}\n\t\t}\n\t}\n\n\tonOrganizationSelected(): void {\n\t\tlet index = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cOrg = this.organizations[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cOrg = null;\n\t\t\tthis.cSystem = null;\n\t\t}\n\t}\n\n\tonChangeExternalSystem(): void {\n\t\tlet index = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cSystem = this.cOrg.systems[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cSystem = null;\n\t\t}\n\n\n\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t// Get the types\t\n\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t//\tthis.types = types;\n\t\t\t//});\n\t\t\t\n\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n        this.types = esConfig.types;\n        this.orgUnitGroups = esConfig.orgUnitGroups;\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n\t\t\tif (this.config.configuration['levels'] == null) {\n\t\t\t\tvar lvl = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tgeoObjectType: null,\n\t\t\t\t\tlevel: 0\n\t\t\t\t};\n\t\t\t\tthis.config.configuration['levels'] = [lvl];\n\t\t\t\tthis.levelRows.push({ level: lvl, levelNum: 0, isAttributeEditor: false });\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tthis.types = [];\n\t\t}\n\t}\n\n\taddLevel(): void {\n\t\tvar lvl = {\n\t\t\ttype: null,\n\t\t\tgeoObjectType: null,\n\t\t\tlevel: this.config.configuration.levels.length\n\t\t};\n\t\tvar len = this.config.configuration['levels'].push(lvl);\n\t\tthis.levelRows.push({ level: lvl, levelNum: len - 1, isAttributeEditor: false });\n\t}\n\n\tremoveLevel(levelNum: number, levelRowIndex: number): void {\n\t\tif (levelNum < this.config.configuration['levels'].length) {\n\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\tif (editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex, 1);\n\n\t\t\tvar newLevelNum = 0;\n\t\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[i];\n\n\t\t\t\tlevelRow.levelNum = newLevelNum;\n\n\t\t\t\tif (!levelRow.isAttributeEditor) {\n\t\t\t\t\tnewLevelNum = newLevelNum + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.config.configuration['levels'].splice(levelNum, 1);\n\t\t}\n\t}\n\n\tgetEditorIndex(): number {\n\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\tvar levelRow = this.levelRows[i];\n\n\t\t\tif (levelRow.isAttributeEditor) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tconfigureAttributes(levelRow: any): void {\n\t\tvar editorIndex = this.getEditorIndex();\n\n\t\tif (editorIndex != -1) {\n\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\tif (editorIndex == levelRow.levelNum + 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.onSelectGeoObjectType(levelRow.level.geoObjectType, levelRow.levelNum, false);\n\t}\n\n\tgetTermOptions(attr: CustomAttributeConfig, dhis2Id: string) {\n\t\tfor (var i = 0; i < attr.dhis2Attrs.length; ++i) {\n\t\t\tvar dhis2Attr = attr.dhis2Attrs[i];\n\n\t\t\tif (dhis2Attr.dhis2Id === dhis2Id) {\n\t\t\t\treturn dhis2Attr.options;\n\t\t\t}\n\t\t}\n\t}\n\n\tonChangeAttrMapping(attr: any, newValue: string, levelRow: LevelRow) {\n\t\tif (newValue == null || newValue === \"\") {\n\t\t\tif (attr.terms != null) {\n\t\t\t\tattr.terms = {};\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var j = 0; j < levelRow.attrCfg.attrs.length; j++) {\n\t\t\tif (levelRow.attrCfg.attrs[j].name === attr.name) {\n\t\t\t\tvar attrCfgAttr: any = levelRow.attrCfg.attrs[j];\n\n\t\t\t\tif (attrCfgAttr.terms != null) {\n\t\t\t\t\tattr.terms = {};\n\n\t\t\t\t\tfor (var i = 0; i < attrCfgAttr.terms.length; ++i) {\n\t\t\t\t\t\tvar term = attrCfgAttr.terms[i];\n\n\t\t\t\t\t\tattr.terms[term.code] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tonSelectGeoObjectType(geoObjectTypeCode: string, levelRowIndex: number, isDifferentGot: boolean = true) {\n\t\tif (geoObjectTypeCode === \"\" || geoObjectTypeCode == null) {\n\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\n\t\t\tlevelRow.hasAttributes = false;\n\t\t\tlevelRow.attrCfg = null;\n\t\t\tlevelRow.level.attributes = {};\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar attrCfg = this.levelRows[levelRowIndex].attrCfg;\n\t\tif (attrCfg != null && attrCfg.geoObjectTypeCode === geoObjectTypeCode) {\n\t\t\t// Resume an editing session on attributes that we fetched previously\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex !== levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: attrCfg });\n\t\t}\n\t\telse {\n\t\t\tthis.service.getCustomAttrCfg(geoObjectTypeCode, this.config.system).then((attrs: CustomAttributeConfig[]) => {\n\t\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\t\t\t\tvar level = levelRow.level;\n\n\t\t\t\tif (isDifferentGot) {\n\t\t\t\t\tlevel.attributes = {};\n\t\t\t\t}\n\n\t\t\t\tlevelRow.attrCfg = { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs };\n\n\t\t\t\tif (editorIndex != -1 && (editorIndex === levelRowIndex + 1 || attrs.length > 0)) {\n\t\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attrs.length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\n\t\t\t\t\tfor (var i = 0; i < attrs.length; ++i) {\n\t\t\t\t\t\tvar attr = attrs[i];\n\n\t\t\t\t\t\tif (isDifferentGot || level.attributes[attr.name] == null) {\n\t\t\t\t\t\t\tlevel.attributes[attr.name] = {\n\t\t\t\t\t\t\t\tname: attr.name,\n\t\t\t\t\t\t\t\texternalId: null,\n\t\t\t\t\t\t\t\tisOrgUnitGroup: false\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (attr.terms != null && attr.terms.length > 0) {\n\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms = {};\n\n\t\t\t\t\t\t\t\tfor (var j = 0; j < attr.terms.length; ++j) {\n\t\t\t\t\t\t\t\t\tvar term = attr.terms[j];\n\n\t\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms[term.code] = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//else if (level.attributes[attr.name] != null)\n\t\t\t\t\t\t//{\n\t\t\t\t\t\t//  level.attributes[attr.name].isOrgUnitGroup = level.attributes[attr.name].isOrgUnitGroup || attr.isOrgUnitGroup || false;\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs } });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlevelRow.hasAttributes = false;\n\t\t\t\t}\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonChangeTargetType(attr: any): void {\n\t  attr.externalId = null;\n\t  \n\t  for (const key in attr.terms) {\n      if (attr.terms.hasOwnProperty(key)) {\n        attr.terms[key] = null;\n      }\n    }\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.apply(this.config).then(cfg => {\n\n\t\t\tthis.onSuccess.next(cfg);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcancel(): void {\n\n\t\tif (this.config.oid != null) {\n\t\t\tthis.service.unlock(this.config.oid).then(() => {\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"synchronization.config.title\"></localize>\n    </h2>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n\n    <fieldset>\n      <div class=\"row-holder\" *ngFor=\"let localeValue of config.label.localeValues\">\n        <div class=\"label-holder\">\n          <label> <localize key=\"synchronization.config.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n          </label>\n        </div>\n        <div class=\"holder\">\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.organization\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.organization\" name=\"organization\" (change)='onOrganizationSelected()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n      <div *ngIf=\"cOrg != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.hierarchy\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.hierarchy\" name=\"hierarchy\" [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of cOrg.hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"config.hierarchy != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.system\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.system\" name=\"system\" (change)='onChangeExternalSystem()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let system of cOrg.systems\" [value]=\"system.oid\">{{system.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"row-holder\" *ngIf=\"cSystem != null && cSystem.type === 'DHIS2ExternalSystem'\">\n\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.units\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"list-table-wrapper\">\n            <table id=\"manage-systems-table\" class=\"list-table table table-bordered\">\n              <thead>\n                <tr>\n                  <th style=\"width:3%\">\n                    <localize key=\"settings.external.synchronization.level.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                  </th>\n                  <th style=\"width:17%\">\n                    <localize key=\"synchronization.config.orgUnitGroup\"></localize>\n                  </th>\n                  <th style=\"width:25%; text-align: center;\">\n                    <localize key=\"settings.external.synchronization.actions.label\"></localize>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let levelRow of levelRows; let i = index;\" [style.background-color]=\"levelRow.isAttributeEditor === false ? '#F7F7F7' : ''\">\n                  <td style=\"width:3%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <label style=\"padding: 10px 0; margin: 0;\"><localize key=\"sync.level.label\"></localize> {{levelRow.levelNum + 1}}</label>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.geoObjectType\" (change)=\"onSelectGeoObjectType(levelRow.level.geoObjectType, i)\" [name]=\"'geoObjectType' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label.localizedValue}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.type\" [name]=\"'type' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option value=\"ORG_UNITS\"><localize key=\"synchronization.config.units\"></localize></option>\n                      <option value=\"RELATIONSHIPS\"><localize key=\"synchronization.config.relationships\"></localize></option>\n                      <option value=\"ALL\"><localize key=\"synchronization.config.all\"></localize></option>\n                    </select>\n                  </td>\n                  <td style=\"width:17%\" *ngIf=\"levelRow.isAttributeEditor === false && orgUnitGroups.length > 0\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.orgUnitGroupId\" [name]=\"'group' + levelRow.levelNum\">\n                      <option></option>\n                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <a style=\"padding: 10px;\" (click)=\"removeLevel(levelRow.levelNum, i)\" [title]=\"'button.delete.helptext' | localize\">\n\t\t\t\t\t\t\t\t\t      <icon class=\"fa fa-trash-o ico-remove\"></icon>\n\t\t\t\t\t\t\t\t\t      <label style=\"cursor:pointer; margin-left:9px;\"><localize key=\"sync.level.delete\"></localize></label>\n\t\t\t\t\t\t\t\t\t    </a> \n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n                      <a *ngIf=\"levelRow.hasAttributes\" style=\"padding: 10px;\" (click)=\"configureAttributes(levelRow)\" [title]=\"'sync.attr.configureAttributes.helptext' | localize\">\n                        <icon class=\"fa fa-edit\"></icon>\n                        <label style=\"cursor:pointer; margin-left:3px;\"><localize key=\"sync.attr.configureAttributes\"></localize></label>\n                      </a> \n                    </div>\n\t\t\t\t\t\t\t\t\t</td>\n                  <td colspan=\"4\" *ngIf=\"levelRow.isAttributeEditor === true\">\n                    <h4>Attributes</h4>\n\t                  <table class=\"table\">\n\t                    <thead>\n\t                      <tr>\n\t                        <th></th>\n\t                      </tr>\n\t                    </thead>\n\t                    <tbody>\n\t                      <tr *ngFor=\"let attr of levelRow.attrCfg.attrs\">\n\t                        <td class=\"row-holder\">\n\t                          <table class=\"row\" style=\"width:80%; margin-left:80px; margin-top:15px; margin-bottom: 10px;\">\n\t                            <thead>\n\t                              <tr>\n\t                                <th style=\"width:25%\">\n\t                                  <label><localize key=\"sync.attr.sourceAttribute\"></localize></label>\n\t                                </th>\n\t                                <th style=\"width:25%\">\n                                    <label><localize key=\"sync.attr.type\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label *ngIf=\"attr.type === 'term'\"><localize key=\"sync.attr.targetTypeHeader\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label>\n                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.targetAttribute\"></localize>\n                                    </label>\n                                  </th>\n\t                              </tr>\n\t                            </thead>\n\t                            <tbody>\n\t                              <tr>\n\t                                <td><label style=\"color:#999;\">{{attr.label}}</label></td>\n\t                                <td>\n\t                                  <label style=\"color:#999;\">{{attr.typeLabel}}</label>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type === 'term'\" style=\"margin-right:20px;\">\n\t                                  <select style=\"width:95%\" *ngIf=\"attr.type === 'term'\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" (change)=\"onChangeTargetType(levelRows[i-1].level.attributes[attr.name])\" [name]=\"'isOrgUnitGroup' + i + attr.name\">\n                                      <option [ngValue]=\"false\"><localize key=\"sync.attr.targetTypeOptionSet\"></localize></option>\n                                      <option [ngValue]=\"true\"><localize key=\"sync.attr.targetTypeOrgUnitGroup\"></localize></option>\n                                    </select>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type !== 'term'\" style=\"float:right; margin-right:20px;\">\n\t                                  <label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label>\n\t                                </td>\n\t                                <td>\n\t                                  <select *ngIf=\"attr.dhis2Attrs.length > 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].externalId\" [ngModelOptions]=\"{standalone: true}\" (change)=\"onChangeAttrMapping(levelRows[i-1].level.attributes[attr.name], levelRows[i-1].level.attributes[attr.name].externalId, levelRow)\">\n\t                                    <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                    <option [value]=\"dhis2Attr.dhis2Id\" *ngFor=\"let dhis2Attr of attr.dhis2Attrs\">\n\t                                      {{dhis2Attr.name}}\n\t                                    </option>\n\t                                  </select>\n\t                                  <label *ngIf=\"attr.dhis2Attrs.length == 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" style=\"color:#999;\"><localize key=\"sync.noValid\"></localize></label>\n\t                                </td>\n\t                              </tr>\n\t                            </tbody>\n\t                          </table>\n\t                          <div *ngIf=\"(levelRows[i-1].level.attributes[attr.name].externalId != null && levelRows[i-1].level.attributes[attr.name].externalId.length > 0) || levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\">\n\t\t                          <table *ngFor=\"let term of attr.terms\" class=\"row\" style=\"width:80%; margin-left:80px;\">\n\t                              <thead>\n\t                                <tr>\n\t                                  <th style=\"width:25%\">\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label><localize key=\"sync.attr.term.cgrTerm\"></localize></label>\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <!-- To -->\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label>\n\t                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.dhis2Option\"></localize>\n\t                                      <localize *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.targetOrgUnitGroup\"></localize>\n\t                                    </label>\n\t                                  </th>\n\t                                </tr>\n\t                              </thead>\n\t                              <tbody>\n\t                                <tr>\n\t                                  <td></td>\n\t                                  <td><label style=\"color:#999;\">{{term.label}}</label></td>\n\t                                  <td style=\"float:right; margin-right:20px;\"><label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label></td>\n\t                                  <td>\n\t                                    <select *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t                                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                      <option *ngFor=\"let option of getTermOptions(attr, levelRows[i-1].level.attributes[attr.name].externalId)\" [value]=\"option.code\">\n\t                                        {{option.name}}\n\t                                      </option>\n\t                                    </select>\n\t                                    <select *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" type=\"text\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t\t\t\t                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t\t\t\t\t\t\t\t\t                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n\t\t\t\t\t\t\t\t\t                    </select>\n\t                                  </td>\n\t                                </tr>\n\t                              </tbody>\n\t                            </table>\n                            </div>\n\t                        </td>\n\t                      </tr>\n\t                    </tbody>\n\t                  </table>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"button-column\">\n                    <a class=\"fa fa-plus\" (click)=\"addLevel()\"></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          \n          </div>\n      </div>\n\n\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\"></div>\n        <div class=\"holder\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\n\nimport { SynchronizationConfig, ExportScheduledJob } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component/error-handler/error-handler';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'synchronization-config',\n\ttemplateUrl: './synchronization-config.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigComponent implements OnInit {\n\tmessage: string = null;\n\n\tconfig: SynchronizationConfig = null;\n\n\tpage: PageResult<ExportScheduledJob> = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresultSet: []\n\t};\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tconstructor(private service: SynchronizationConfigService, private lService: LocalizationService, private route: ActivatedRoute) { }\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tthis.service.get(oid).then(config => {\n\t\t\tthis.config = config;\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'DATA_EXPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\n\t\tif (this.notifier != null) {\n\t\t\tthis.notifier.complete();\n\t\t}\n\t}\n\n\tonRun(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.run(this.config.oid).then(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.config != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getJobs(this.config.oid, pageNumber, this.page.pageSize).then(response => {\n\n\t\t\t\tthis.formatStepConfig(response);\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tformatJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PageResult<ExportScheduledJob>): void {\n\n\t\tpage.resultSet.forEach((job: ExportScheduledJob) => {\n\n\t\t\tjob.stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Queued\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Connecting\"),\n\t\t\t\t\t\t\"status\": job.stage === \"CONNECTING\" || job.stage === \"CONNECTION_FAILED\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"CONNECTION_FAILED\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.DatabaseExport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"EXPORT\" || job.stage === \"EXPORT_RESOLVE\" || job.stage === \"RESUME_EXPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"CONNECTING\", \"CONNECTION_FAILED\", \"EXPORT\", \"EXPORT_RESOLVE\", \"RESUME_EXPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\" || job.status === \"FAILURE\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"row\">\n      <div *ngIf=\"config != null\" class=\"col-md-12\">\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h3>{{config.label.localizedValue}}</h3>\n          </div>\n        </div>\n\n        <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <label style=\"vertical-align: middle;\">CGR</label> \n              <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" style=\"font-size: 23px;padding: 0 7px;vertical-align: middle; color: #bdbdbd;margin-bottom: 4px;\"></i> \n              <label style=\"vertical-align: middle;\">{{config.systemLabel}}</label>\n            </div>\n            <div class=\"col-md-4\">\n              <form #myForm=\"ngForm\">\n                <div class=\"form-group text-right\" style=\"margin: 0;\">\n                  <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onRun()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" [title]=\"'synchronization.config.run' | localize\">\n                    <localize key=\"synchronization.config.run\"></localize>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div class=\"row\" *ngIf=\"config != null && config.type === 'DHIS2ExternalSystem'\">\n            <div class=\"col-md-12\">\n\n                <h4>\n                    <localize key=\"synchronization.config.units\"></localize>\n                </h4>\n                <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <localize key=\"settings.external.synchronization.level.label\"></localize>\n                        </th>\n                        <th>\n                          <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                        </th>\n                        <th style=\"text-align: right;\">\n                          <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let level of this.config.configuration['levels']; let i = index;\" >\n                        <td style=\"vertical-align: middle;\">\n                          <localize key=\"settings.external.synchronization.level.label\"></localize> {{i + 1}}\n                        </td>\n                        <td style=\"\">\n                          {{level.geoObjectType}}\n                        </td>\n                        <td style=\"text-align: right;\">\n                          <localize *ngIf=\"level.type === 'ORG_UNITS'\" key=\"synchronization.config.units\"></localize>\n                          <localize *ngIf=\"level.type === 'RELATIONSHIPS'\" key=\"synchronization.config.relationships\"></localize>\n                          <localize *ngIf=\"level.type === 'ALL'\" key=\"synchronization.config.all\"></localize>\n                        </td>\n                      </tr>\n                    </tbody>\n                </table>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n              <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                  <table class=\"table table-striped\">\n                    <thead>\n                      <tr style=\"height: 56px;\">\n                        <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                      <tr *ngFor=\"let job of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                        <td style=\"vertical-align: middle;\">\n                          <div class=\"wrapper\">\n                            <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                            <p style=\"padding-left: 60px;\">\n                              <span style=\"display: block;\"> {{job.fileName}} </span>\n                              <span style=\"display: block;\"> {{job.createDate}} </span>\n                              <span style=\"display: block;\"> {{formatJobStatus(job)}} </span>\n                              <span *ngIf=\"job.exception != null && job.exception.type != 'java.lang.RuntimeException'\" style=\"display: block;\">\n                                {{job.exception.message}}\n                              </span>\n                            </p>\n\n                            <step-indicator *ngIf=\"job.status !== 'SUCCESS' && job.status !== 'FAILURE' && job.status !== 'CANCELED'\" [steps]=\"job.stepConfig\"></step-indicator>\n\n                          </div>\n                        </td>\n                        <td style=\"text-align: right; vertical-align: middle;\">\n                          <div class=\"button-holder\" style=\"float: right;\">\n                            <a *ngIf=\"job.status === 'FAILURE'\" [routerLink]=\"'/registry/sync/details/' + job.historyId\" routerLinkActive=\"active\">\n                              <button class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"scheduledjobs.detail.button\"></localize>\n                              </button>\n                            </a>\n                           </div>\n                         </td>\n                      </tr>\n\n                    </tbody>\n                  </table>\n                  <div *ngIf=\"page.resultSet.length > 0\" class=\"solid-table-footer\">\n                    <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\n@Component({\n  selector: 'job',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.css']\n})\nexport class SyncDetailsComponent implements OnInit {\n  message: string = null;\n  job: ScheduledJob;\n  historyId: string = \"\";\n\n  page: any = {\n    count: 0,\n    pageNumber: 1,\n    pageSize: 10,\n    results: []\n  };\n\n  isAdmin: boolean;\n  isMaintainer: boolean;\n  isContributor: boolean;\n\n  constructor(public service: RegistryService, private route: ActivatedRoute, authService: AuthService, public ioService: IOService) {\n    this.isAdmin = authService.isAdmin();\n    this.isMaintainer = this.isAdmin || authService.isMaintainer();\n    this.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n  }\n\n  ngOnInit(): void {\n\n    this.historyId = this.route.snapshot.params[\"oid\"];\n\n    this.onPageChange(1);\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  formatAffectedRows(rows: string) {\n    return rows.replace(/,/g, \", \");\n  }\n\n  formatValidationResolve(obj: any) {\n    return JSON.stringify(obj);\n  }\n\n  onPageChange(pageNumber: any): void {\n\n    this.message = null;\n\n    this.service.getExportDetails(this.historyId, this.page.pageSize, pageNumber).then(response => {\n\n      this.job = response;\n      \n      this.page = this.job.exportErrors;\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n  error(err: HttpErrorResponse): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              {{job.createDate}}\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.exportedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.exportedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead>\n                                <tr>\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"geoObject.label\"></localize>&nbsp;<localize key=\"geoObjectType.attr.code\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.code}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Map, LngLatBoundsLike, NavigationControl, MapboxEvent, AttributionControl, IControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AllGeoJSON } from '@turf/helpers'\nimport bbox from '@turf/bbox';\n\nimport { Subject } from 'rxjs';\n\nimport { GeoObject, ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { ModalState } from '@registry/model/location-manager';\n\nimport { MapService, RegistryService } from '@registry/service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n  selector: 'location-manager',\n  templateUrl: './location-manager.component.html',\n  styleUrls: ['./location-manager.css']\n})\nexport class LocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  MODE: ModalState = {\n    SEARCH: 0,\n    VIEW: 1,\n  }\n\n  urlSubscriber: any;\n\n  editSessionEnabled: boolean = false;\n\n  bsModalRef: BsModalRef;\n\n    /* \n     * Root nodes of the tree\n     */\n  data: GeoObject[] = [];\n\n    /* \n     *  Search Text\n     */\n  text: string = '';\n\n    /* \n     *  MODE\n     */\n  mode: number = this.MODE.SEARCH;\n\n    /*\n     * Date of data for explorer\n     */\n  dateStr: string = null;\n\n  forDate: Date = new Date();\n\n\n    /* \n     * Currently selected geo object\n     */\n  current: GeoObject;\n\n    /* \n     * Currently selected geo object type\n     */\n  type: GeoObjectType;\n\n    /* \n     * Flag denoting if an object is currently being editted\n     */\n  isEdit: boolean = false;\n\n    /* \n     * mapbox-gl map\n     */\n  map: Map;\n\n    /* \n     * Flag denoting the draw control is active\n     */\n  active: boolean = false;\n\n  vectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n  baseLayers: any[] = [\n    {\n      name: 'Satellite',\n      label: 'Satellite',\n      id: 'satellite-v9',\n      sprite: 'mapbox://sprites/mapbox/satellite-v9',\n      url: 'mapbox://mapbox.satellite',\n      selected: true\n    },\n    // {\n    //   name: 'Streets',\n    //   label: 'Streets',\n    //   id: 'streets-v9',\n    //   sprite: 'mapbox://sprites/mapbox/basic-v9',\n    //   url: 'mapbox://mapbox.basic-v9'\n    // }\n  ];\n\n  hoverFeatureId: string;\n\n  preventSingleClick: boolean = false;\n\n  /* \n     * Timer for determining double click vs single click\n     */\n  timer: any;\n\n  /* \n     * debounced subject for map extent change events\n     */\n  subject: Subject<MapboxEvent<MouseEvent | TouchEvent | WheelEvent>>;\n\n\n  // \n  // Editing of geomemtries\n  //\n  geometryChange: Subject<any> = new Subject();\n\n  vot: ValueOverTime = null;\n\n  @ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\n  editingControl: any;\n\n\n  constructor(private modalService: BsModalService, private mapService: MapService, public service: RegistryService, private route: ActivatedRoute) {\n  \n  }\n\n  ngOnInit(): void {\n\tthis.urlSubscriber = this.route.params.subscribe(params => {\n       let geoObjectUid = params['geoobjectuid'];\n\t   let geoObjectTypeCode = params['geoobjecttypecode'];\n\n\t\tif(geoObjectUid && geoObjectTypeCode){\n\t\t\tthis.service.getGeoObject(geoObjectUid, geoObjectTypeCode).then(geoObj => {\n\t\t\t\tthis.setData([geoObj]);\n\t\t\t\tthis.select(geoObj, null);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t});\n  }\n\n  ngOnDestroy(): void {\n    this.map.remove();\n\tthis.urlSubscriber.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n\n    const layer = this.baseLayers[0];\n\n    this.map = new Map({\n      container: 'map',\n      style: {\n        \"version\": 8,\n        \"name\": layer.name,\n        \"metadata\": {\n          \"mapbox:autocomposite\": true\n        },\n        \"sources\": {\n          \"mapbox\": {\n            \"type\": \"raster\",\n            \"url\": layer.url,\n            \"tileSize\": 256\n          }\n        },\n        \"sprite\": layer.sprite,\n        \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n        \"layers\": [\n          {\n            \"id\": layer.id,\n            \"type\": 'raster',\n            \"source\": 'mapbox',\n            // \"source-layer\": \"mapbox_satellite_full\"\n          }\n        ]\n      },\n      zoom: 2,\n      attributionControl: false,\n      center: [-78.880453, 42.897852]\n    });\n\n    this.map.on('load', () => {\n      this.initMap();\n    });\n\n    this.map.addControl(this.simpleEditControl);\n  }\n\n  changeMode(mode: number): void {\n    this.mode = mode;\n\n    if (this.mode === this.MODE.SEARCH) {\n      this.isEdit = false;\n    }\n\n    this.clearGeometryEditing();\n\n    this.vot = null;\n  }\n\n  onModeChange(value: boolean): void {\n    this.isEdit = value;\n  }\n\n  handleDateChange(): void {\n    this.forDate = new Date(Date.parse(this.dateStr));\n  }\n\n  initMap(): void {\n\n    this.map.on('style.load', () => {\n      this.addLayers();\n    });\n\n    this.addLayers();\n\n    // Add zoom and rotation controls to the map.\n    this.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n    this.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n    this.map.on('click', 'children-points', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n\n    this.map.on('click', 'children-polygon', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n\n\tthis.map.on('draw.selectionchange', (e: any) => {\n\t\t\tif(e.features.length > 0 || e.points.length > 0) {\n\t\t\t\tthis.editSessionEnabled = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.editSessionEnabled = false;\n\t\t\t}\n\t});\n\t\n\t// Set map data on page load with URL params (single Geo-Object)\n\tif(this.data){\n\t\tlet fc = {\"type\":\"FeatureCollection\", \"features\":this.data};\n\t\t(<any>this.map.getSource('children')).setData(fc);\n\t\t\n\t\tthis.zoomToFeature(this.data[0], null);\n\t}\n  }\n\n  handleMapClickEvent(event: any): void {\n    if (!this.isEdit && event.features != null && event.features.length > 0) {\n      const feature = event.features[0];\n\n      if (feature.properties.code != null && (this.current == null || this.current.properties.code !== feature.properties.code)) {\n        this.select(feature, null);\n      }\n    }\n  }\n\n\n\n  addLayers(): void {\n\n    const source = 'children';\n\n    this.map.addSource(source, {\n      type: 'geojson',\n      data: {\n        \"type\": \"FeatureCollection\",\n        \"features\": []\n      }\n    });\n\n    // Polygon layer\n    this.map.addLayer({\n      'id': source + '-polygon',\n      'type': 'fill',\n      'source': source,\n      'layout': {},\n      'paint': {\n        'fill-color': DEFAULT_COLOR,\n        'fill-opacity': 0.8,\n        'fill-outline-color': 'black'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      ]\n    });\n\n    // Point layer\n    this.map.addLayer({\n      \"id\": source + \"-points\",\n      \"type\": \"circle\",\n      \"source\": source,\n      \"paint\": {\n        \"circle-radius\": 10,\n        \"circle-color\": DEFAULT_COLOR,\n        \"circle-stroke-width\": 2,\n        \"circle-stroke-color\": '#FFFFFF'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      ]\n    });\n\n    //    // Selected layers\n    //    this.map.addLayer({\n    //      \"id\": source + \"-points-selected\",\n    //      \"type\": \"circle\",\n    //      \"source\": source,\n    //      \"paint\": {\n    //        \"circle-radius\": 10,\n    //        \"circle-color\": DEFAULT_COLOR,\n    //        \"circle-stroke-width\": 2,\n    //        \"circle-stroke-color\": '#FFFFFF'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n    //      ]\n    //    });\n    //\n    //    this.map.addLayer({\n    //      'id': source + '-polygon-selected',\n    //      'type': 'fill',\n    //      'source': source,\n    //      'layout': {},\n    //      'paint': {\n    //        'fill-color': DEFAULT_COLOR,\n    //        'fill-opacity': 0.8,\n    //        'fill-outline-color': 'black'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n    //      ]\n    //    });\n\n    // Label layer\n    this.map.addLayer({\n      \"id\": source + \"-label\",\n      \"source\": source,\n      \"type\": \"symbol\",\n      \"paint\": {\n        \"text-color\": \"black\",\n        \"text-halo-color\": \"#fff\",\n        \"text-halo-width\": 2\n      },\n      \"layout\": {\n        \"text-field\": ['get', 'localizedValue', ['get', 'displayLabel']],\n        \"text-font\": [\"NotoSansRegular\"],\n        \"text-offset\": [0, 0.6],\n        \"text-anchor\": \"top\",\n        \"text-size\": 12,\n      }\n    });\n\n    this.vectorLayers.forEach(cLayer => {\n      this.addVectorLayer(cLayer);\n    });\n  }\n\n  handleBasemapStyle(layer: any): void {\n    // this.map.setStyle('mapbox://styles/mapbox/' + layer.id);\n\n    this.baseLayers.forEach(baseLayer => {\n      baseLayer.selected = false;\n    });\n\n    layer.selected = true;\n\n    this.map.setStyle({\n      \"version\": 8,\n      \"name\": layer.name,\n      \"metadata\": {\n        \"mapbox:autocomposite\": true\n      },\n      \"sources\": {\n        \"mapbox\": {\n          \"type\": \"raster\",\n          \"url\": layer.url,\n          \"tileSize\": 256\n        },\n      },\n      \"sprite\": layer.sprite,\n      \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n      \"layers\": [\n        {\n          \"id\": layer.id,\n          \"type\": 'raster',\n          \"source\": 'mapbox',\n          // \"source-layer\": \"mapbox_satellite_full\"\n        }\n      ]\n    });\n  }\n\n  search(): void {\n    this.mapService.search(this.text, this.dateStr).then(data => {\n      (<any>this.map.getSource('children')).setData(data);\n\n\n      this.setData(data.features);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n\n  zoomToFeature(node: GeoObject, event: MouseEvent): void {\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.preventSingleClick = false;\n    const delay = 200;\n\n    this.timer = setTimeout(() => {\n      if (!this.preventSingleClick) {\n        if (node && node.geometry != null) {\n          const bounds = bbox(node as AllGeoJSON) as LngLatBoundsLike;\n          \n          let padding = 50;\n          let maxZoom = 20;\n          \n          // Zoom level was requested to be reduced when displaying point types as per #420\n          if (node.geometry.type === \"Point\" || node.geometry.type === \"MultiPoint\")\n          {\n            padding = 100;\n            maxZoom = 12;\n          }\n\n          this.map.fitBounds(bounds, { padding: padding, animate:true, maxZoom: maxZoom });\n        }\n      }\n    }, delay);\n  }\n\n  select(node: GeoObject, event: MouseEvent): void {\n\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.service.getGeoObjectTypes([node.properties.type], null).then(types => {\n      this.type = types[0];\n      this.current = node;\n      this.mode = this.MODE.VIEW;\n\n      //      const code = this.current.properties.code;\n      //\n      //      // Update the filter properties\n      //      this.map.setFilter('children-points-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      //      ]);\n      //\n      //      this.map.setFilter('children-polygon-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      //      ]);\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  setData(data: GeoObject[]): void {\n    this.data = data;\n  }\n\n  onContextLayerChange(layer: ContextLayer): void {\n\n    if (layer.active) {\n      this.addVectorLayer(layer.oid);\n    }\n    else {\n      this.removeVectorLayer(layer.oid);\n    }\n\n  }\n\n  removeVectorLayer(source: string): void {\n\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index !== -1) {\n      this.map.removeLayer(source + \"-points\");\n      this.map.removeLayer(source + \"-polygon\");\n      this.map.removeLayer(source + \"-label\");\n      this.map.removeSource(source);\n\n      this.vectorLayers.splice(index, 1);\n    }\n\n  }\n\n  addVectorLayer(source: string): void {\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index === -1) {\n      const prevLayer = 'children-polygon';\n\n      var protocol = window.location.protocol;\n      var host = window.location.host;\n\n      this.map.addSource(source, {\n        type: 'vector',\n        tiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n      });\n\n      // Point layer\n      this.map.addLayer({\n        \"id\": source + \"-points\",\n        \"type\": \"circle\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"paint\": {\n          \"circle-radius\": 10,\n          \"circle-color\": SELECTED_COLOR,\n          \"circle-stroke-width\": 2,\n          \"circle-stroke-color\": '#FFFFFF'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n        ]\n      }, prevLayer);\n\n      // Polygon layer\n      this.map.addLayer({\n        'id': source + '-polygon',\n        'type': 'fill',\n        'source': source,\n        \"source-layer\": 'context',\n        'layout': {},\n        'paint': {\n          'fill-color': SELECTED_COLOR,\n          'fill-opacity': 0.8,\n          'fill-outline-color': 'black'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n        ]\n      }, prevLayer);\n\n\n      // Label layer\n      this.map.addLayer({\n        \"id\": source + \"-label\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"type\": \"symbol\",\n        \"paint\": {\n          \"text-color\": \"black\",\n          \"text-halo-color\": \"#fff\",\n          \"text-halo-width\": 2\n        },\n        \"layout\": {\n          \"text-field\": [\"case\",\n            [\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n            [\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n            [\"string\", [\"get\", \"displayLabel\"]]\n          ],\n          \"text-font\": [\"NotoSansRegular\"],\n          \"text-offset\": [0, 0.6],\n          \"text-anchor\": \"top\",\n          \"text-size\": 12,\n        }\n      }, prevLayer);\n\n\n      this.vectorLayers.push(source);\n    }\n  }\n\n\n  //\n  // Editing of features\n  //\n  clearGeometryEditing(): void {\n    if (this.editingControl != null) {\n      this.editingControl.deleteAll();\n      this.map.removeControl(this.editingControl);\n    }\n\n    this.editingControl = null;\n\tthis.map.addControl(this.simpleEditControl);\n\t\n\tthis.editSessionEnabled = false;\n  }\n\n\n  onGeometryEdit(vot: ValueOverTime): void {\n\n    this.clearGeometryEditing();\n\n    this.vot = vot;\n\n    this.addEditLayers(vot);\n  }\n\n  addEditLayers(vot: ValueOverTime): void {\n    if (vot != null) {\n      //      this.renderGeometryAsLayer(this.calculatedPreObject.geometry.value, \"pre\", \"#EFA22E\");\n\n      this.enableEditing(vot);\n    }\n  }\n\n  enableEditing(vot: ValueOverTime): void {\n    if (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: false,\n          polygon: true,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: true,\n          line_string: false,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: true,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    this.map.addControl(this.editingControl);\n\n    if (vot.value != null) {\n      this.editingControl.add(vot.value);\n    }\n  }\n\n  onMapSave(): void {\n    const geometry = this.getDrawGeometry();\n\n    this.editingControl.deleteAll();\n    this.map.removeControl(this.editingControl);\n    //    this.geometryChange.next(geometry);\n\n    this.vot.value = geometry;\n    this.vot = null;\n\n    this.editingControl = null;\n\n\tthis.editSessionEnabled = false;\n  }\n\n  getDrawGeometry(): any {\n    if (this.editingControl != null) {\n      let featureCollection: any = this.editingControl.getAll();\n\n      if (featureCollection.features.length > 0) {\n\n        // The first Feature is our GeoObject.\n\n        // Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n        if (this.type.geometryType === \"MULTIPOLYGON\") {\n          let polygons = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPolygon') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                polygons.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              polygons.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: polygons,\n            type: 'MultiPolygon'\n          };\n        }\n        else if (this.type.geometryType === \"MULTIPOINT\") {\n          let points = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPoint') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                points.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              points.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: points,\n            type: 'MultiPoint'\n          };\n        }\n        else if (this.type.geometryType === \"MULTILINE\") {\n          let lines = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiLineString') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                lines.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              lines.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: lines,\n            type: 'MultiLineString'\n          };\n        }\n        else {\n          return featureCollection.features[0].geometry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  error(err: HttpErrorResponse): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div id=\"navigator-left-sidebar\" class=\"col-md-5 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n  \n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <input style=\"width: 100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" [disabled]=\"mode !== MODE.SEARCH\"/>\n                  </div>\n                </div>\n              </div>\n  \n              <!-- Search bar -->\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"search()\" [(ngModel)]=\"text\" name=\"text\" [disabled]=\"mode !== MODE.SEARCH\">\n                      <span class=\"input-group-btn\">\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"search()\" [disabled]=\"mode !== MODE.SEARCH\">\n                          <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span> \n<!--                           <localize key=\"explorer.search.button.message\"></localize> -->\n                        </button>\n                      </span>\n                    </div>\n                    <div *ngIf=\"mode === MODE.VIEW && current != null\" style=\"padding: 20px 0;\">\n                      <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>              \n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <div class=\"row\"  *ngIf=\"mode === MODE.SEARCH\">\n            <div class=\"col-md-12\">\n              <div id=\"hierarchy-tree-container\" class=\"location-management-widget-section location-management-list-container\">\n                    <div class=\"list-group\">\n  \n                      <div *ngFor=\"let node of data; let i = index\" class=\"list-group-item\">\n                        <!-- Single column card -->\n                        <div class=\"card card-default\" (click)=\"select(node, $event)\">\n                          <div class=\"card-body\">\n                            <i class=\"fa fa-map-marker clickable\" style=\"float:right;font-size:25px;\" aria-hidden=\"true\" (click)=\"zoomToFeature(node, $event)\" [title]=\"'explorer.zoom.label' | localize\"></i>\n                            <h4 class=\"clickable\" style=\"word-break: break-all;\" title=\"View Geo-Object details\">{{node.properties.code}} - {{node.properties.displayLabel.localizedValue}}</h4>\n                          </div>\n                        </div>\n                      </div>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>    \n        <div *ngIf=\"mode === MODE.VIEW && current != null\" class=\"row\">\n          <div class=\"col-md-12\">\n<!--             <div style=\"padding: 20px 0;\"> -->\n<!--               <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>               -->\n<!--             </div> -->\n            <feature-panel\n              [type]=\"type\"\n              [code]=\"current.properties.code\"              \n              [forDate]=\"forDate\"\n              [readOnly]=\"!current.properties.writable\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"search()\"\n              (modeChange)=\"onModeChange($event)\"              \n            ></feature-panel>\n          </div>\n        </div>            \n      </div>\n\n      <div class=\"col-md-7\" id=\"site-explorer-map\">\n        <div class=\"row\">\n          \n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\"></layer-panel>\n          </article>\n\n          <div id=\"map\" class=\"map-view-port\"></div>\n          <simple-edit-control [visible]=\"editingControl != null\" [editSessionEnabled]=\"editSessionEnabled\" [save]=\"true\" (editEmitter)=\"onMapSave()\" #simpleEditControl></simple-edit-control>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { MasterList, ContextLayer, ContextLayerGroup } from '@registry/model/registry';\n\n\n@Component( {\n    selector: 'context-layer-modal',\n    templateUrl: './context-layer-modal.component.html',\n    styleUrls: ['./location-manager.css']\n} )\nexport class ContextLayerModalComponent {\n\n    contextLayerGroups: ContextLayerGroup[];\n\n\n    /*\n     * Called on confirm\n     */\n    public onSubmit: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onSubmit = new Subject();\n    }\n\n    groupHasContextLayers(group:string): boolean {\n\t\tlet hasCLayers = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif(cLayerGroup.oid === group && cLayerGroup.contextLayers.length > 0){\n\t\t\t\thasCLayers = true;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn hasCLayers;\n\t}\n\n    confirm(): void {\n        this.onSubmit.next( this.contextLayerGroups );\n        this.bsModalRef.hide();\n    }\n\n}\n","<div class=\"modal-body\">\n    <div class=\"heading\">\n        <h2>\n            <localize key=\"explorer.add.context.layers.modal.title\"></localize>\n        </h2>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"list-group\">\n                        <div *ngFor=\"let cLayerGroup of contextLayerGroups;\" >\n                            <div *ngIf=\"groupHasContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n                                <h4>{{ cLayerGroup.displayLabel }}</h4>\n                                <div class=\"list-group\">\n                                    <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                                        <input type=\"checkbox\" [checked]=\"cLayer.enabled\" (change)=\"cLayer.enabled = !cLayer.enabled\" style=\"margin-left: 10px;\"> {{ cLayer.displayLabel }}\n                                        \n                                        <!-- <boolean-field [(value)]=\"cLayer.enabled\" [label]=\"cLayer.displayLabel\"></boolean-field> -->\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input, Output, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, PRESENT } from '@registry/model/registry';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\nimport * as moment from 'moment';\n\n\n@Component({\n\tselector: 'geometry-panel',\n\ttemplateUrl: './geometry-panel.component.html',\n\tstyleUrls: ['./geometry-panel.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class GeometryPanelComponent implements OnInit {\n\t\n\tcurrentDate : Date = new Date();\n\t\n\tisVersionForHighlight: number;\n\t\n\tmessage: string = null;\n\n\treadonly: boolean = false;\n\t\n\thasConflict: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Output() onEdit = new EventEmitter<ValueOverTime>()\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\t\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\thasDuplicateDate: boolean = false;\n\n\tconstructor(private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\n\tonDateChange(): any {\n\t\tthis.hasConflict = false;\n\t\n\t\tlet vAttributes = this.geoObjectOverTime.attributes['geometry'].values;\n\n\n\t\t// check ranges\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tconst h1 = vAttributes[j];\n\t\t\th1.conflict = false;\n\t\t\th1.conflictMessage = [];\n\n\t\t\tif (!(h1.startDate == null || h1.startDate === '') && !(h1.endDate == null || h1.endDate === '')) {\n\t\t\t\tlet s1: any = new Date(h1.startDate);\n\t\t\t\tlet e1: any = new Date(h1.endDate);\n\t\t\t\t\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflict = true;\t\t\n\t\t\t\t\th1.conflictMessage.push(this.lService.decode(\"manage.versions.startdate.later.enddate.message\")); \n\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < vAttributes.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\tconst h2 = vAttributes[i];\n\t\t\t\t\t\tif (!(h2.startDate == null || h2.startDate === '') && !(h2.endDate == null || h2.endDate === '')) {\n\t\t\t\t\t\t\tlet s2: any = new Date(h2.startDate);\n\t\t\t\t\t\t\tlet e2: any = new Date(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflict = true\n\t\t\t\t\t\t\t\th1.conflictMessage.push(this.lService.decode(\"manage.versions.overlap.message\"));\n\n\t\t\t\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.sort(vAttributes);\n\t}\n\n\tedit(vot: ValueOverTime, isVersionForHighlight: number): void {\n\t\tthis.onEdit.emit(vot);\n\t\t\n\t\tthis.isVersionForHighlight = isVersionForHighlight;\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\tvot.value.type = \"Polygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\tvot.value.type = \"Point\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\tvot.value.type = \"MultiPoint\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\tvot.value.type = \"Line\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\tvot.value.type = \"MultiLine\";\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes['geometry'];\n\n\t\tlet position = -1;\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tposition = i\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(position > -1){\n\t\t\tval.values.splice(position, 1);\n\t\t}\n\t\t\n\t}\n\t\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n  \t\tvar format = localeData.longDateFormat('L');\n  \t\treturn moment().format(format);\n\t}\n\t\n\tsetInfinity(vAttribute, attributes): void {\n\t\t\n\t\tif(vAttribute.endDate === PRESENT){\n\t\t\tvAttribute.endDate = new Date();\n\t\t}\n\t\telse{\n\t\t\tvAttribute.endDate = PRESENT\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t\t\n\t}\n\t\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n\n                <ul class=\"list-group\">\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                    <table class=\"table table-striped\">\n\n                      <tbody class=\"attribute-element-wrapper\">\n                        <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\">\n                          <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                        </p>\n\n                        <tr *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflict}\">\n                          <td [ngClass]=\"{'active' : i === isVersionForHighlight}\">\n                            <table>\n                              <tr class=\"attribute-value-row\">\n                                <td colspan=\"2\">\n                                  <button class=\"btn btn-primary\" (click)=\"edit(vAttribute, i)\" role=\"button\">\n                                    <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                                  </button>\n                                </td>\n                              </tr>\n                              <tr class=\"attribute-date-input-row\">\n                                <td>\n                                  <h5>\n                                    <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                  </h5> <input type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" max=\"{{currentDate|date:'yyyy-MM-dd'}}\" required>\n                                </td>\n                                <td>\n                                  <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                      \n                                      <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" (blur)=\"onDateChange()\" required>\n                                      <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                    \n                                      <p class=\"text-right\">\n                                        <a *ngIf=\"vAttribute.endDate === '5000-12-31'\" (click)=\"setInfinity(vAttribute, geoObjectOverTime.attributes['geometry'].values)\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></a>\n                                        <a *ngIf=\"vAttribute.endDate !== '5000-12-31'\" (click)=\"setInfinity(vAttribute, geoObjectOverTime.attributes['geometry'].values)\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></a>\n                                      </p>\n                                      \n                                      <div class=\"form-input-validation-error-message-wrapper\">\n                                        <p *ngIf=\"!vAttribute.endDate\" class=\"error-message\">\n                                          <localize key=\"manage.versions.end.date.required.message\"></localize>\n                                        </p>\n                                      </div>\n                                    </div>\n                                </td>\n                              </tr>\n                              <tr *ngIf=\"vAttribute.conflict\">\n<!--                                   <p class=\"error-message\"> -->\n<!--                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                   </p> -->\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" class=\"error-message\">\n                                    {{msg}}\n                                  </p>\n                              </tr>    \n                            </table>\n                          </td>\n                          <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                            <i class=\"fa fa-times\"></i>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </li>\n\n                  <li class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"io.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!versionsform.valid\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Map, NavigationControl, AttributionControl, LngLatBounds, IControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\nimport { ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { MapService, RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\nimport { LocalizationService } from '@shared/service';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n\tselector: 'dataset-location-manager',\n\ttemplateUrl: './dataset-location-manager.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class DatasetLocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY'\n\t}\n\t\n\teditSessionEnabled: boolean = false;\n\n\ttoolsIconHover: boolean = false;\n\n\tdatasetId: string;\n\n\ttypeCode: string;\n\n\treadOnly: boolean = false;\n\n\teditOnly: boolean = false;\n\n\tisEdit: boolean = false;\n\n\tdate: string;\n\n\tcode: string;\n\n\ttype: GeoObjectType;\n\n\tbsModalRef: BsModalRef;\n\n    /* \n     * mapbox-gl map\n     */\n\tmap: Map;\n\n\tvectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'Satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n//\t\t {\n//\t\t \tname: 'Streets',\n//\t\t \tlabel: 'Streets',\n//\t\t \tid: 'streets-v11',\n//\t\t \tsprite: 'mapbox://sprites/mapbox/basic-v11',\n//\t\t \turl: 'mapbox://styles/mapbox/streets-v11'\n//\t\t }\n\t];\n\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\tforDate: Date = new Date();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\teditingControl: any;\n\n\tgeometryChange: Subject<any> = new Subject();\n\n\tvot: ValueOverTime;\n\n\tconstructor(private mapService: MapService, public service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute, \n\t\tauthService: AuthService, private lService: LocalizationService) {\n\t\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.datasetId = this.route.snapshot.params[\"datasetId\"];\n\t\tthis.typeCode = this.route.snapshot.params[\"typeCode\"];\n\t\tthis.date = this.route.snapshot.params[\"date\"];\n\t\tthis.readOnly = this.route.snapshot.params[\"readOnly\"] === 'true';\n\t\tthis.editOnly = this.route.snapshot.params[\"editOnly\"] === 'true';\n\n\t\tif (this.route.snapshot.params[\"code\"] != null) {\n\t\t\tthis.code = this.route.snapshot.params[\"code\"];\n\t\t}\n\n\t\tthis.forDate = new Date(Date.parse(this.date));\n\n\t\tthis.service.getGeoObjectTypes([this.typeCode], null).then(types => {\n\t\t\tthis.type = types[0];\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tngAfterViewInit() {\n\n\t\tconst layer = this.baseLayers[0];\n\n\t\tthis.map = new Map({\n\t\t\tcontainer: 'dataset-map',\n\t\t\tstyle: {\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox-satellite\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n//\t\t\t\t\t{\n//\t\t\t\t\t\t\"id\": layer.id,\n//\t\t\t\t\t\t\"type\": 'raster',\n//\t\t\t\t\t\t\"source\": 'mapbox-satellite',\n//\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tzoom: 2,\n\t\t\tattributionControl: false,\n\t\t\tcenter: [-78.880453, 42.897852]\n\t\t});\n\n\t\tthis.map.on('load', () => {\n\t\t\tthis.initMap();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tonModeChange(value: boolean): void {\n\t\tthis.isEdit = value;\n\t}\n\n\tinitMap(): void {\n\t  if (this.code !== '__NEW__')\n\t  {\n  \t\tthis.service.getGeoObjectBoundsAtDate(this.code, this.typeCode, this.date).then(bounds => {\n  \t\t\tlet llb = new LngLatBounds([bounds[0], bounds[1]], [bounds[2], bounds[3]]);\n  \n  \t\t\tlet padding = 50;\n  \t\t\tlet maxZoom = 20;\n  \n  \t\t\t// Zoom level was requested to be reduced when displaying point types as per #420\n  \t\t\tif (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n  \t\t\t\tpadding = 100;\n  \t\t\t\tmaxZoom = 12;\n  \t\t\t}\n  \n  \t\t\tthis.map.fitBounds(llb, { padding: padding, animate: false, maxZoom: maxZoom });\n  \t\t});\n\t\t}\n\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t});\n\n\t\tthis.addLayers();\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n\t\tthis.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n\t\tthis.map.on('click', this.datasetId + '-points', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\t\tthis.map.on('click', this.datasetId + '-polygon', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\n\t\tthis.map.on('draw.selectionchange', (e: any) => {\n\t\t\tif(e.features.length > 0 || e.points.length > 0) {\n\t\t\t\tthis.editSessionEnabled = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.editSessionEnabled = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\taddLayers(): void {\n\t\t\t\n\t\tthis.map.addLayer({\n\t\t\t\"type\": \"raster\",\n\t\t\t\"id\": 'satellite-map',\n\t\t\t\"source\": \"mapbox-satellite\"\n\t\t});\n\t\t\t\n\t\tthis.vectorLayers.forEach(vLayer => {\n\t\t\tthis.addVectorLayer(vLayer);\n\t\t});\n\t}\n\n\thandleBasemapStyle(layer: any): void {\n\n\t\tif(layer.id === \"streets-v11\"){\n\t\t\tthis.map.setStyle(layer.url);\n\t\t}\n\t\telse if(layer.id === \"satellite-v9\"){\n\t\t\tthis.map.setStyle({\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox-satellite\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\t\"source\": 'mapbox-satellite',\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}\n\n\tonContextLayerChange(layer: ContextLayer): void {\n\n\t\tif (layer.active) {\n\t\t\tthis.addVectorLayer(layer.oid);\n\t\t}\n\t\telse {\n\t\t\tthis.removeVectorLayer(layer.oid);\n\t\t}\n\n\t}\n\n\tremoveVectorLayer(source: string): void {\n\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index !== -1) {\n\t\t\tthis.map.removeLayer(source + \"-points\");\n\t\t\tthis.map.removeLayer(source + \"-polygon\");\n\t\t\tthis.map.removeLayer(source + \"-points-selected\");\n\t\t\tthis.map.removeLayer(source + \"-polygon-selected\");\n\t\t\tthis.map.removeLayer(source + \"-label\");\n\t\t\tthis.map.removeSource(source);\n\n\t\t\tthis.vectorLayers.splice(index, 1);\n\t\t}\n\n\t}\n\n\taddVectorLayer(source: string): void {\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index === -1) {\n\t\t\tconst prevLayer = (source !== this.datasetId) ? this.datasetId + '-points' : null;\n\n\t\t\tvar protocol = window.location.protocol;\n\t\t\tvar host = window.location.host;\n\n\t\t\tthis.map.addSource(source, {\n\t\t\t\ttype: 'vector',\n\t\t\t\ttiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n\t\t\t});\n\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-points\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\"circle-color\": DEFAULT_COLOR,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Polygon layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t'id': source + '-polygon',\n\t\t\t\t'type': 'fill',\n\t\t\t\t'source': source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t'layout': {},\n\t\t\t\t'paint': {\n\t\t\t\t\t'fill-color': DEFAULT_COLOR,\n\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Selected object layers\n\t\t\tif (source === this.datasetId) {\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t\"id\": source + \"-points-selected\",\n\t\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\t\"source\": source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t\"paint\": {\n\t\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\t\"circle-color\": SELECTED_COLOR,\n\t\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t'id': source + '-polygon-selected',\n\t\t\t\t\t'type': 'fill',\n\t\t\t\t\t'source': source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t'layout': {},\n\t\t\t\t\t'paint': {\n\t\t\t\t\t\t'fill-color': SELECTED_COLOR,\n\t\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\t\t\t}\n\n\t\t\t// Label layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-label\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"type\": \"symbol\",\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"text-color\": \"black\",\n\t\t\t\t\t\"text-halo-color\": \"#fff\",\n\t\t\t\t\t\"text-halo-width\": 2\n\t\t\t\t},\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"text-field\": [\"case\",\n\t\t\t\t\t\t[\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n\t\t\t\t\t\t[\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n\t\t\t\t\t\t[\"string\", [\"get\", \"displayLabel\"]]\n\t\t\t\t\t],\n\t\t\t\t\t\"text-font\": [\"NotoSansRegular\"],\n\t\t\t\t\t\"text-offset\": [0, 0.6],\n\t\t\t\t\t\"text-anchor\": \"top\",\n\t\t\t\t\t\"text-size\": 12,\n\t\t\t\t}\n\t\t\t}, prevLayer);\n\n\n\t\t\tthis.vectorLayers.push(source);\n\t\t}\n\t}\n\n\n\t/*\n\t * EDIT FUNCTIONALITY\n\t */\n\n\tclearGeometryEditing(): void {\n\t\tif (this.editingControl != null) {\n\t\t\tthis.editingControl.deleteAll();\n\t\t\tthis.map.removeControl(this.editingControl);\n\t\t}\n\n\t\tthis.editingControl = null;\n\t\t\n\t\tthis.editSessionEnabled = false;\n\t}\n\n\tonFeatureChange(): void {\n\t\t// Refresh the layer\n\t\tthis.removeVectorLayer(this.datasetId);\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\thandleMapClickEvent(event: any): void {\n\t\tif (!this.isEdit && event.features != null && event.features.length > 0) {\n\t\t\tconst feature = event.features[0];\n\n\t\t\tif (feature.properties.code != null && this.code !== feature.properties.code) {\n\t\t\t\tthis.code = feature.properties.code;\n\n\t\t\t\t// Update the filter properties\n\t\t\t\tthis.map.setFilter(this.datasetId + '-points-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]);\n\n\t\t\t\tthis.map.setFilter(this.datasetId + '-polygon-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n\n\tonMapSave(): void {\n\t\tconst geometry = this.getDrawGeometry();\n\n\t\tthis.editingControl.deleteAll();\n\t\tthis.map.removeControl(this.editingControl);\n\t\tthis.geometryChange.next(geometry);\n\n\t\tthis.vot.value = geometry;\n//\t\tthis.vot = null;\n\n\t\tthis.editingControl = null;\n\t\t\n\t\tthis.editSessionEnabled = false;\n\t}\n\n\tonGeometryEdit(vot: ValueOverTime): void {\n\t\tthis.clearGeometryEditing();\n\n\t\tthis.vot = vot;\n\n\t\tthis.addEditLayers(vot);\n\t}\n\n\t//\tonMapEdit(): void {\n\t//\t\t// Enable editing\n\t//\t\tif (this.editingControl == null) {\n\t//\t\t\tthis.addEditLayers();\n\t//\t\t}\n\t//\t}\n\n\taddEditLayers(vot: ValueOverTime): void {\n\t\tif (vot != null) {\n\t\t\tthis.enableEditing(vot);\n\t\t}\n\t}\n\n\tenableEditing(vot: ValueOverTime): void {\n\t\tif (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (vot.value != null) {\n\t\t\tthis.editingControl.add(vot.value);\n\t\t}\n\t}\n\n\n\tgetDrawGeometry(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.type.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tonNewGeoObject(): void {\n\t\tthis.code = '__NEW__';\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div *ngIf=\"type != null && code != null\" id=\"navigator-left-sidebar\" class=\"col-md-5 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            \n            <div id=\"attributes-header\">\n              <h3 *ngIf=\"type\">{{type.label.localizedValue}}</h3>\n              <h4><localize key=\"cgr.validity.valid.on.label\"></localize>: {{formatDate(forDate)}}</h4>\n            </div>\n            \n            <feature-panel\n              [type]=\"type\"\n              [code]=\"code\"              \n              [forDate]=\"forDate\"\n              [datasetId]=\"datasetId\"\n              [readOnly]=\"readOnly\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"onFeatureChange($event)\"              \n              (modeChange)=\"onModeChange($event)\"\n            ></feature-panel>\n          </div>\n        </div>\n      </div>\n\n      <div [ngClass]=\"{'col-md-7':code != null, 'col-md-12':code == null}\" id=\"site-explorer-map\">\n        <div class=\"row\">\n\n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\" (baseLayerChange)=\"handleBasemapStyle($event)\" [filter]=\"[datasetId]\"></layer-panel>\n            \n            <div *ngIf=\"!editOnly\" class=\"layer-toggle\" style=\"margin-top:10px;\" (mouseenter)=\"toolsIconHover = true\" (mouseleave)=\"toolsIconHover = false\">\n             \n              <i class=\"fa fa-plus-square\" *ngIf=\"!toolsIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n              <div *ngIf=\"toolsIconHover\" style=\"margin-top:10px;\">\n            \n                <span (click)=\"onNewGeoObject()\" role=\"button\">\n                  <button class=\"btn btn-primary\">\n                    <localize key=\"masterlist.newGeoObject\"></localize>              \n                  </button>\n                </span>\n              </div>\n            \n            </div>\n          </article>\n\n          <div id=\"dataset-map\" class=\"map-view-port\"></div>     \n          <simple-edit-control [visible]=\"editingControl != null\" [editSessionEnabled]=\"editSessionEnabled\" [save]=\"true\" (editEmitter)=\"onMapSave()\"  #simpleEditControl></simple-edit-control>\n          \n<!--           <span *ngIf=\"!readOnly\" (click)=\"onNewGeoObject()\" style=\"position: absolute; bottom: 70px; right: 10px\" role=\"button\"> -->\n<!--             <button class=\"btn btn-primary\"> -->\n<!--               <localize key=\"masterlist.newGeoObject\"></localize>               -->\n<!--             </button> -->\n<!--           </span> -->\n               \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import * as d3 from 'd3';\nimport { svgPoint } from './svg-util';\n\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\nimport { SvgHierarchyType } from './svg-hierarchy-type';\nimport { calculateTextWidth } from './svg-util';\nimport { HierarchyComponent, RELATED_NODE_BANNER_COLOR } from '../hierarchy.component';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nexport class SvgHierarchyNode {\n\n\tprivate hierarchyComponent: HierarchyComponent;\n\n\tprivate svgHierarchyType: SvgHierarchyType;\n\n\tprivate geoObjectType: GeoObjectType;\n\n\tprivate treeNode: any;\n\n\t/*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tconstructor(hierarchyComponent: HierarchyComponent, svgHierarchyType: SvgHierarchyType, geoObjectType: GeoObjectType, treeNode: any,\n\t\tpublic localizeService: LocalizationService, public modalService: BsModalService, public authService: AuthService) {\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.svgHierarchyType = svgHierarchyType;\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.treeNode = treeNode;\n\t}\n\n\tgetCode(): string {\n\t\treturn this.geoObjectType.code;\n\t}\n\n\tsetPos(x: number, y: number, dragging: boolean) {\n\t\tlet bbox = this.getBbox();\n\n\t\t// Move the GeoObjectType with the pointer when they move their mouse\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-header-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y - SvgHierarchyType.gotRectH / 2 + 2);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-label-text[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + 5)\n\t\t\t.attr(\"y\", y + 1);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-relatedhiers-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + bbox.width - 20)\n\t\t\t.attr(\"y\", y + 17);\n\n\n\t\t// Move inherit and uninherit buttons with the node they're moving\n\n\t\tlet inheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (inheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 60);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet inheritBbox = inheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - inheritBbox.x) + \" \" + (heritY - inheritBbox.y) + \")\");\n\t\t}\n\n\t\tlet uninheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (uninheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 71);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet uninheritBbox = uninheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - uninheritBbox.x) + \" \" + (heritY - uninheritBbox.y) + \")\");\n\t\t}\n\t}\n\n\tgetPos() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) };\n\t}\n\n\tgetBbox() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) - 3, width: parseInt(select.attr(\"width\")), height: parseInt(select.attr(\"height\")) + 3 };\n\t}\n\n\tgetTreeNode() {\n\t\treturn this.treeNode;\n\t}\n\t\n\thideRelatedHierarchy(): string {\n\t  let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n    if (existingSecondary.node() != null) {\n      existingSecondary.remove();\n      this.hierarchyComponent.calculateSvgViewBox();\n      \n      let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n      return existingSecondaryCode;\n    }\n\t}\n\n\trenderRelatedHierarchiesMenu() {\n\t\tlet that = this;\n\t\tlet existingMenu = d3.select(\".g-context-menu\");\n\n\t\tif (existingMenu.node() == null) {\n\t\t\t//let parent = d3.select('g.g-hierarchy-tree[data-code=\"' + this.svgHierarchyType.hierarchyType.code + '\"]');\n\t\t\tlet parent = d3.select('#svg');\n\n\t\t\tlet contextMenuGroup = parent.append(\"g\").classed(\"g-context-menu\", true);\n\n\t\t\tlet relatedHierarchies = this.svgHierarchyType.getRelatedHierarchies(this.getCode());\n\t\t\t\n\t\t\tconst hasActionsPermissions = this.authService.isSRA() || this.authService.isOrganizationRA(this.geoObjectType.organizationCode)\n          || this.authService.isGeoObjectTypeRM(this.svgHierarchyType.hierarchyType.organizationCode, this.geoObjectType.code)\n\n\t\t\tlet bbox = this.getBbox();\n\t\t\tlet x = bbox.x + bbox.width - 5;\n\t\t\tlet y = bbox.y + bbox.height / 2 - 8;\n\t\t\tconst height = 20;\n\t\t\tconst fontSize = 8;\n\t\t\tconst widthPadding = 10;\n\t\t\tconst borderColor = \"#aaaaaa\";\n\t\t\tconst dividerColor = \"#e4e4e4\";\n\t\t\tconst fontFamily = \"sans-serif\";\n\t\t\tconst titleFontSize = 9;\n\t\t\t\n\t\t\tconst titleLabel = this.hierarchyComponent.localize(\"hierarchy.content.relatedHierarchies\");\n\t\t\tconst actionsTitle = this.hierarchyComponent.localize(\"hierarchy.content.actionsTitle\");\n\t\t\tconst removeFromHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.removeFromHierarchy\");\n\t\t\tconst noRelatedHierLabel = this.hierarchyComponent.localize(\"hierarchy.content.noRelatedHierarchies\");\n\t\t\tconst hideRelatedHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.hideRelatedHierarchy\");\n\t\t\tconst uninheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.uninherit\");\n\t\t\tconst inheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.inherit\");\n\t\t\t\n      let isSecondaryHierarchyRendered = (d3.select('.g-hierarchy[data-primary=\"false\"]').node() != null);\n      \n      let numActions = hasActionsPermissions ? (isSecondaryHierarchyRendered ? 2 : 1) : 0;\n\n\t\t\t// Calculate the width of our title\n\t\t\tlet width = calculateTextWidth(titleLabel, titleFontSize);\n\t\t\t\n\t\t\t// Calculate with of remove text\n\t\t\tlet removeWidth = calculateTextWidth(removeFromHierarchyLabel, fontSize);\n\t\t\twidth = removeWidth > width ? removeWidth : width;\n\t\t\t\n\t\t\tif (isSecondaryHierarchyRendered)\n\t\t\t{\n  \t\t\t// Calculate width of \"hide related hierarchy\" label\n        let hideRelatedWidth = calculateTextWidth(hideRelatedHierarchyLabel, fontSize);\n        width = hideRelatedWidth > width ? hideRelatedWidth : width;\n      }\n      \n      if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n        let uninheritWidth = calculateTextWidth(uninheritLabel, fontSize);\n        width = uninheritWidth > width ? uninheritWidth : width;\n        numActions++;\n      }\n      else\n      {\n        let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n        if (existingSecondary.node() != null) {\n          let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n          let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n          \n          let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService, this.authService);\n          let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n          \n          if (this.treeNode.parent == null && relatedGotHasParents)\n          {\n            let inheritWidth = calculateTextWidth(inheritLabel, fontSize);\n            width = inheritWidth > width ? inheritWidth : width;\n            numActions++;\n          }\n        }\n      }\n      \n\t\t\t\n\t\t\t// Calculate the width of our context menu, which is based on how long the text inside it will be.\n\t\t\t// We don't know how long text is until we render it. So we'll need to loop over all the text and\n\t\t\t// render and destroy all of it.\n\t\t\tif (relatedHierarchies.length > 0)\n\t\t\t{\n  \t\t\trelatedHierarchies.forEach((relatedHierarchyCode: string) => {\n  \t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n  \n  \t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n  \t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n  \t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n  \t\t\t\t}\n  \n  \t\t\t\tlet textWidth = calculateTextWidth(relatedHierarchyLabel, fontSize);\n  \n  \t\t\t\tif (textWidth > width) {\n  \t\t\t\t\twidth = textWidth;\n  \t\t\t\t}\n  \t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t  let noHierLabelWidth = calculateTextWidth(noRelatedHierLabel, fontSize);\n\t\t\t  width = noHierLabelWidth > width ? noHierLabelWidth : width;\n\t\t\t}\n\n\t\t\twidth = width + widthPadding;\n\n\t\t\tlet heightAdditions: number = relatedHierarchies.length > 0 ? (numActions + 2) : (numActions + 3);\n\n\t\t\t// Background rectangle with border\n\t\t\tcontextMenuGroup.append(\"rect\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-background\", true)\n\t\t\t\t.attr(\"x\", x)\n\t\t\t\t.attr(\"y\", y)\n\t\t\t\t.attr(\"rx\", 5)\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height * (relatedHierarchies.length + heightAdditions))\n\t\t\t\t.attr(\"fill\", \"white\")\n\t\t\t\t.attr(\"stroke-width\", .5)\n\t\t\t\t.attr(\"stroke\", borderColor);\n\n\t\t\t// Related Hierarchies Title\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n\t\t\t\t.attr(\"font-size\", titleFontSize)\n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.text(titleLabel);\n\n\t\t\ty = y + height;\n\n\t\t\t// Dividing line at the bottom\n\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t.attr(\"x1\", x)\n\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t.attr(\"x2\", x + width)\n\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t.attr(\"stroke\", borderColor)\n\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t\n\t\t\tif (relatedHierarchies.length > 0) {\n\t\t\t\t// Loop over all related hierarchies and draw them as list items\n\t\t\t\tfor (let i = 0; i < relatedHierarchies.length; ++i) {\n\t\t\t\t\tlet relatedHierarchyCode = relatedHierarchies[i];\n\t\t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n\n\t\t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n\t\t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n\t\t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text that says the hierarchy's display label\n\t\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t\t.text(relatedHierarchyLabel)\n\t\t\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t\t\t.on('click', function(event, node) { that.renderSecondaryHierarchy(relatedHierarchy); });\n\n\t\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\t\tif (i < relatedHierarchies.length) {\n\t\t\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t\t\t.attr(\"stroke-width\", .5);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// Text that says \"No related Hierarchies\"\n\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t.text(noRelatedHierLabel)\n\n\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t}\n\n      // Actions Section\n      if (hasActionsPermissions)\n      {\n  \t\t\t// Actions Title\n  \t\t\tcontextMenuGroup.append(\"text\")\n  \t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n  \t\t\t\t.attr(\"x\", x + widthPadding / 2)\n  \t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n  \t\t\t\t.attr(\"font-size\", titleFontSize)\n  \t\t\t\t.attr(\"font-family\", fontFamily)\n  \t\t\t\t.attr(\"font-weight\", \"bold\")\n  \t\t\t\t.text(actionsTitle);\n  \n  \t\t\ty = y + height;\n  \n  \t\t\t// Dividing line at the bottom\n  \t\t\tcontextMenuGroup.append(\"line\")\n  \t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n  \t\t\t\t.attr(\"x1\", x)\n  \t\t\t\t.attr(\"y1\", y)\n  \t\t\t\t.attr(\"x2\", x + width)\n  \t\t\t\t.attr(\"y2\", y)\n  \t\t\t\t.attr(\"stroke\", borderColor)\n  \t\t\t\t.attr(\"stroke-width\", .5);\n  \n        // \"Remove from hierarchy\" button\n        contextMenuGroup.append(\"text\")\n        .classed(\"contextmenu-relatedhiers-text\", true)\n        .attr(\"data-remove\", \"REPLACE---gotCode\")\n        .attr(\"x\", x + widthPadding / 2)\n        .attr(\"y\", y + (height / 2) + (fontSize / 2))\n        .attr(\"font-size\", fontSize) \n        .attr(\"font-family\", fontFamily)\n        .text(removeFromHierarchyLabel)\n        .style(\"cursor\", \"pointer\")\n        .on('click', function (event, node) { that.removeGotFromHierarchy(); });\n      \n        y = y + height;\n  \t\t  \n  \t\t  // Inherit / Uninherit buttons\n  \t\t  if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n          contextMenuGroup.append(\"line\")\n            .classed(\"contextmenu-relatedhiers-divider\", true)\n            .attr(\"x1\", x)\n            .attr(\"y1\", y)\n            .attr(\"x2\", x + width)\n            .attr(\"y2\", y)\n            .attr(\"stroke\", borderColor)\n            .attr(\"stroke-width\", .5);\n          \n          contextMenuGroup.append(\"text\")\n            .classed(\"contextmenu-relatedhiers-text\", true)\n            .attr(\"x\", x + widthPadding / 2)\n            .attr(\"y\", y + (height / 2) + (fontSize / 2))\n            .attr(\"font-size\", fontSize)\n            .attr(\"font-family\", fontFamily)\n            .text(uninheritLabel)\n            .style(\"cursor\", \"pointer\")\n            .on('click', function (event, node) { that.onClickUninheritHierarchy(); });\n  \n          y = y + height;\n        }\n        else\n        {\n          let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n          if (existingSecondary.node() != null) {\n            let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n            let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n            \n            let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService, this.authService);\n            let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n            \n            if (this.treeNode.parent == null && relatedGotHasParents)\n            {\n              contextMenuGroup.append(\"line\")\n                .classed(\"contextmenu-relatedhiers-divider\", true)\n                .attr(\"x1\", x)\n                .attr(\"y1\", y)\n                .attr(\"x2\", x + width)\n                .attr(\"y2\", y)\n                .attr(\"stroke\", borderColor)\n                .attr(\"stroke-width\", .5);\n            \n              contextMenuGroup.append(\"text\")\n                .classed(\"contextmenu-relatedhiers-text\", true)\n                .attr(\"x\", x + widthPadding / 2)\n                .attr(\"y\", y + (height / 2) + (fontSize / 2))\n                .attr(\"font-size\", fontSize)\n                .attr(\"font-family\", fontFamily)\n                .text(inheritLabel)\n                .style(\"cursor\", \"pointer\")\n                .on('click', function (event, node) { that.onClickInheritHierarchy(secondaryHierarchy); });\n      \n              y = y + height;\n            }\n          }\n        }\n      }\n\t\t\t\n      if (isSecondaryHierarchyRendered) {\n  \t\t  contextMenuGroup.append(\"line\")\n          .classed(\"contextmenu-relatedhiers-divider\", true)\n          .attr(\"x1\", x)\n          .attr(\"y1\", y)\n          .attr(\"x2\", x + width)\n          .attr(\"y2\", y)\n          .attr(\"stroke\", borderColor)\n          .attr(\"stroke-width\", .5);\n  \t\t  \n  \t\t  contextMenuGroup.append(\"text\")\n          .classed(\"contextmenu-relatedhiers-text\", true)\n          .attr(\"x\", x + widthPadding / 2)\n          .attr(\"y\", y + (height / 2) + (fontSize / 2))\n          .attr(\"font-size\", fontSize) \n          .attr(\"font-family\", fontFamily)\n          .text(hideRelatedHierarchyLabel)\n          .style(\"cursor\", \"pointer\")\n          .on('click', function (event, node) {\n            that.hideRelatedHierarchy();\n            \n            let existingMenu = d3.select(\".g-context-menu\");\n            if (existingMenu.node() != null) {\n              existingMenu.remove();\n            }\n            \n            d3.select(\".g-hierarchy-got-connector\").remove();\n          });\n      }\n      \n\t\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t\t}\n\t\telse {\n\t\t\texistingMenu.remove();\n\t\t}\n\t}\n\n\tremoveGotFromHierarchy(){\n\t\t\n\t\tlet svgGot = this.hierarchyComponent.primarySvgHierarchy.getNodeByCode(this.geoObjectType.code);\n\n\t\tlet startPoint: any = svgGot.getPos();\n\t\t// let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\n\t\t// let deltaX: number = startPoint.x - svgMousePoint.x;\n\t\t// let deltaY: number = startPoint.y - svgMousePoint.y;\n\n\t\tlet obj = this.hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tlet message = this.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n\t\tmessage = message.replace(\"{label}\", obj.label.localizedValue);\n\n\t\tthis.bsModalRef.content.message = message;\n\t\tthis.bsModalRef.content.data = obj.code;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tlet treeNode = svgGot.getTreeNode();\n\t\t\tlet parent = null;\n\t\t\tif (treeNode.parent == null) {\n\t\t\t\tparent = \"ROOT\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (treeNode.parent.data.inheritedHierarchyCode != null) {\n\t\t\t\t\tparent = \"ROOT\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent = treeNode.parent.data.geoObjectType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { console.log(err) });\n\t\t});\n\n\t\t// (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n\t\t// \tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t// });\n\t}\n\n\trenderSecondaryHierarchy(relatedHierarchy: HierarchyType) {\n\t\td3.select(\".g-context-menu\").remove();\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\n\t\tlet that = this;\n\t\tlet myBbox = this.getBbox();\n\t\tlet svg = d3.select(\"#svg\");\n\n\t\t// Remove any secondary hierarchy that may already be rendered\n\t\tif (this.hideRelatedHierarchy() === relatedHierarchy.code)\n\t\t{\n\t\t  return;\n\t\t}\n\t\t\n\t\t// Get the bounding box for our primary hierarchy\n\t\tlet primaryHierBbox = (d3.select(\".g-hierarchy[data-primary=true]\").node() as any).getBBox();\n\n\t\t// Render the secondary hierarchy\n\t\tlet svgHt: SvgHierarchyType = new SvgHierarchyType(this.hierarchyComponent, svg, relatedHierarchy, false, this.localizeService, this.modalService, this.authService);\n\t\tsvgHt.render();\n\t\tlet gSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]')\n\n\t\t// Translate the secondary hierarchy to the right of the primary hierarchy\n\t\tlet gHierarchy: any = d3.select('.g-hierarchy[data-primary=\"false\"]').node();\n\t\tlet bbox = gHierarchy.getBBox();\n\t\tlet paddingLeft: number = primaryHierBbox.width + 40 + (primaryHierBbox.x - bbox.x);\n\t\tgSecondary.attr(\"transform\", \"translate(\" + paddingLeft + \" 0)\");\n\n\t\t// Draw dotted line between the shared node in the hierarchies\n\t\tlet secondaryGot = d3.select('.g-hierarchy[data-primary=false] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\t\tlet secondaryGotBbox = { x: parseInt(secondaryGot.attr(\"x\")), y: parseInt(secondaryGot.attr(\"y\")) - 3, width: parseInt(secondaryGot.attr(\"width\")), height: parseInt(secondaryGot.attr(\"height\")) + 3 };\n\t\tsecondaryGotBbox.x = secondaryGotBbox.x + paddingLeft; // Apply transformation\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\t\tlet gConnector = d3.select(\"#svg\").append(\"g\").classed(\"g-hierarchy-got-connector\", true);\n\t\tgConnector.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\n\t\t\t\t  \"d\",\n\t\t\t\t  \"M\" + (myBbox.x + myBbox.width) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"H\" + (((secondaryGotBbox.x) - (myBbox.x + myBbox.width)) / 2 + myBbox.x + myBbox.width)\n\t\t\t\t+ \"V\" + (secondaryGotBbox.y + secondaryGotBbox.height / 2)\n\t\t\t\t+ \"H\" + secondaryGotBbox.x\n\t\t\t);\n\n\t\t// Draw arrow for dotted line\n\t\tconst arrowRectD = { height: 10, width: 7 };\n\t\tlet gArrow = gConnector.append(\"g\").classed(\"g-hierarchy-got-connector-arrow\", true);\n\t\tgArrow.append(\"rect\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", myBbox.x + myBbox.width - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", myBbox.y + myBbox.height / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", \n\t\t\t\t\"M\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width + arrowRectD.width / 2 - ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Recalculate the viewbox (should probably be the last thing that happens)\n\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t}\n\n\tonClickInheritHierarchy(hierarchy: HierarchyType) {\n\t\tthis.hierarchyComponent.handleInheritHierarchy(this.svgHierarchyType.getCode(), hierarchy.code, this.getCode());\n\t}\n\n\tonClickUninheritHierarchy() {\n\t\tthis.hierarchyComponent.handleUninheritHierarchy(this.svgHierarchyType.getCode(), this.getCode());\n\t}\n\n}\n\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { TreeNode } from 'angular-tree-component';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\n\n\n@Component( {\n    selector: 'add-child-to-hierarchy-modal',\n    templateUrl: './add-child-to-hierarchy-modal.component.html',\n    styleUrls: []\n} )\nexport class AddChildToHierarchyModalComponent implements OnInit {\n\n\t /*\n     * parent id of the node being created\n     */\n    public parent: TreeNode;\n\n    public hierarchyType: HierarchyType;\n\n    public nodes: HierarchyNode[];\n\n    public allGeoObjectTypes: GeoObjectType[];\n\n    public selectedGeoObjectType: GeoObjectType;\n\n    private selectUndefinedOptionValue: any;\n\n\tprivate toRoot: boolean = false;\n\n    message: string = null;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n    public onNodeChange: Subject<HierarchyType>;\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef ) {\n    }\n\n    ngOnInit(): void {\n        this.onNodeChange = new Subject();\n    }\n    \n    onSelect(value: string): void {\n    \tthis.allGeoObjectTypes.forEach(gObj => {\n    \t\tif(gObj.code === value){\n    \t\t\tthis.selectedGeoObjectType = gObj;\n    \t\t}\n    \t})\n    }\n    \n    handleOnSubmit(): void {\n        this.message = null;\n        \n        let parent = (this.toRoot) ? \"ROOT\" : this.parent.data.geoObjectType;\n        this.hierarchyService.addChildToHierarchy( this.hierarchyType.code, parent, this.selectedGeoObjectType.code ).then( data => {\n            this.onNodeChange.next( data );\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n        \n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<form class=\"modal-form\">\n\n  <div *ngIf=\"parent != null\" class=\"modal-body\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"hierarchy.management.button.addRelationship\"></localize>\n      </h1>\n    </div>\n    <fieldset>\n\n      <div class=\"form-group\">\n\n        <select *ngIf=\"allGeoObjectTypes\" (change)=\"onSelect($event.target.value)\">\n          <option disabled hidden [value]=\"selectUndefinedOptionValue\">-- <localize\n              key=\"hierarchy.management.create.child.option.label.selectType\"></localize> --</option>\n          <!-- to filter out all geoobjecttypes that are already in hierarchies use this pip in the iterator > | geoobjecttype:nodes -->\n          <option></option>\n          <option *ngFor=\"let geoObjType of allGeoObjectTypes\" value={{geoObjType.code}}>\n            {{geoObjType.label.localizedValue}}\n          </option>\n        </select>\n\n      </div>\n\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.cancel\"></localize>\n          </span>\n        </button>\n        <button type=\"submit\" (click)=\"handleOnSubmit()\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.ok\"></localize>\n          </span>\n        </button>\n      </div>\n    </fieldset>\n  </div>\n</form>\n","import { Input, Component, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { GeoObjectOverTime, GeoObjectType } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-create-geo-object',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./crtable-detail-create-geo-object.css'],\n    encapsulation: ViewEncapsulation.None\n} )\n//export class CreateUpdateGeoObjectDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\nexport class CreateUpdateGeoObjectDetailComponent implements ActionDetailComponent {\n\t\n\tisMaintainer: boolean = false;\n\n    @Input() action: any;\n\n    preGeoObject: GeoObjectOverTime = null;\n\n    postGeoObject: GeoObjectOverTime = null;\n\n    geoObjectType: GeoObjectType = null;\n\n    @Input() readOnly: boolean;\n    \n    isEditing: boolean = false;\n\n    @ViewChild( \"attributeEditor\" ) attributeEditor;\n\n    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\n    bsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    dateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    forDate: Date = null;\n\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, \n\t\t\t\tprivate registryService: RegistryService, private authService: AuthService ) {\n\t\t\t\t\t\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\n        this.forDate = new Date();\n\n        const day = this.forDate.getUTCDate();\n        this.dateStr = this.forDate.getUTCFullYear() + \"-\" + ( this.forDate.getUTCMonth() + 1 ) + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n    ngOnInit(): void {\n\n        this.postGeoObject = this.action.geoObjectJson;\n        this.geoObjectType = this.action.geoObjectType;\n\n        if ( this.isNew() ) {\n            this.preGeoObject = this.postGeoObject;\n        }\n\n        this.onSelect( this.action );\n    }\n\n    isNew(): boolean {\n        return ( this.action.actionType === \"net.geoprism.registry.action.geoobject.CreateGeoObjectAction\" );\n    }\n\n    handleDateChange(): void {\n        this.forDate = new Date( Date.parse( this.dateStr ) );\n    }\n\n    applyAction() {\n        //var action = JSON.parse( JSON.stringify( this.action ) );\n        let action = this.action;\n        \n        action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n        if ( this.geometryEditor != null ) {\n            action.geoObjectJson.geometry = this.geometryEditor.saveDraw().geometry;\n        }\n\n        this.changeRequestService.applyAction( action ).then( response => {\n            this.endEdit();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    onSelect( action: AbstractAction ) {\n\n        // There are multiple ways we could show a diff of an object.\n        //\n        // This line will show a diff only when a person is typing so as to show the\n        // change they are creating.\n        //\n        // The method below (getGeoObjectByCode) will compare what is in the database\n        // at that time with the change request. This will only track state compared to\n        // what is currently in the database which isn't necessarily the original change.\n        //\n        // A third option which is NOT implemented yet would store the state of a geoobject\n        // (original and target) with the change request so as to manage state at time of\n        // the change request submission.\n        //\n        // Display diff when a user is changing a value\n        // this.preGeoObject = JSON.parse(JSON.stringify(this.postGeoObject));\n\n        // Display diff of what's in the database\n        if (\n            this.action.actionType === \"net.geoprism.registry.action.geoobject.UpdateGeoObjectAction\"\n            //    && typeof this.postGeoObject.properties.createDate !== 'undefined'\n        ) {\n            this.registryService.getGeoObjectOverTime( this.postGeoObject.attributes.code, this.geoObjectType.code ).then( geoObject => {\n                this.preGeoObject = geoObject;\n\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    //@HostListener( 'window:beforeunload' )\n    //canDeactivate(): Observable<boolean> | boolean {\n    //    if ( this.isEditing ) {\n    //        //event.preventDefault();\n    //        //event.returnValue = 'Are you sure?';\n    //        //return 'Are you sure?';\n//\n     //       return false;\n     //   }\n//\n    //    return true;\n    //}\n\n    //afterDeactivate( isDeactivating: boolean ) {\n    //    if ( isDeactivating && this.isEditing ) {\n    //        this.unlockActionSync();\n    //    }\n    //}\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.isEditing = true;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( true );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.isEditing = false;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( false );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n\n    <div class=\"heading text-center\">\n        <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n\t  </div>\n    \n    <div class=\"detail-content\">\n      <h4>\n        <localize key=\"io.geoObjectType\"></localize>: {{action.geoObjectType.code}}\n      </h4>\n    \n      <div style=\"margin: 20px 0;\">\n        <span style=\"margin-right:10px;\"><localize key=\"changeOverTime.forDate\"></localize></span>\n        <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n      </div>    \n    \n\n        <geoobject-shared-attribute-editor \n          #attributeEditor\n          *ngIf=\"preGeoObject\"\n          [readOnly]=\"!isEditing\"  \n          [geoObjectType]=\"geoObjectType\"\n          [postGeoObject]=\"postGeoObject\"\n          [preGeoObject]=\"preGeoObject\"\n          [forDate]=\"forDate\"\n          [isGeometryInlined]=\"true\">\n        </geoobject-shared-attribute-editor>\n\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" [disabled]=\"!isEditing\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Input, Component, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\nimport { AddChildAction } from '@registry/model/crtable';\nimport { ChangeRequestService } from '@registry/service';\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-add-remove-child',\n    templateUrl: './detail.component.html',\n    styleUrls: []\n} )\nexport class AddRemoveChildDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n    @Input() action: AddChildAction;\n\n    original: AddChildAction;\n\n    @Input() readOnly: boolean;\n    \n    isEditing: boolean = false;\n\n    private bsModalRef: BsModalRef;\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private authService: AuthService ) {\n\n    }\n\n    ngOnInit(): void {\n        this.original = Object.assign( {}, this.action );\n    }\n\n    applyAction() {\n        this.changeRequestService.applyAction( this.action ).then( response => {\n            this.original = Object.assign( {}, this.action );\n\n            this.unlockAction();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    @HostListener( 'window:beforeunload' )\n    canDeactivate(): Observable<boolean> | boolean {\n        if ( this.isEditing ) {\n            //event.preventDefault();\n            //event.returnValue = 'Are you sure?';\n            //return 'Are you sure?';\n\n            return false;\n        }\n\n        return true;\n    }\n\n    afterDeactivate( isDeactivating: boolean ) {\n        if ( isDeactivating && this.isEditing ) {\n            this.unlockActionSync();\n        }\n    }\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.isEditing = true;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.isEditing = false;\n\n            this.action = this.original;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n    onSelect( action: AddChildAction ) {\n        this.action = action;\n    }\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childId\" [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childTypeCode\" [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.parentid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentId\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentTypeCode\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.hierarchycode.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.hierarchyTypeCode\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\">\n            <localize key=\"change.request.status\"></localize> :\n        </label>\n        <select style=\"float:none;\" [ngClass]=\"{'status-rejected': action.approvalStatus === 'REJECTED', 'status-accepted': action.approvalStatus === 'ACCEPTED', 'status-pending': action.approvalStatus === 'PENDING'}\" [(ngModel)]=action.approvalStatus   [disabled]=\"isEditing\">\n            <option value=\"REJECTED\">\n                <localize key=\"change.request.status.rejected\"></localize>\n            </option>\n            <option value=\"ACCEPTED\">\n                <localize key=\"change.request.status.accepted\"></localize>\n            </option>\n            <option value=\"PENDING\">\n                <localize key=\"change.request.status.pending\"></localize>\n            </option>\n        </select>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\"  disabled></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n        \n    </div>\n</div>","import { GeoObjectOverTime, HierarchyOverTime } from './registry';\n\nexport class ChangeRequest {\n\toid: string;\n\tcreatedBy: string;\n\tcreateDate: Date;\n\tapprovalStatus: string;\n\tstatusLabel?: string;\t\n\ttotal: number;\n\tpending: number;\n\tdocuments: Document[];\n\tphoneNumber?: string;\n\temail?: string;\n\tpermissions?: string[];\n}\n\nexport class Document {\n\tfileName: string;\n\toid: string;\n}\n\nexport class AbstractAction {\n\tapprovalStatus: string;\n\tcreateActionDate: Date;\n\tlabel: string;\n\toid: string;\n\tactionType: string;\n\tactionLabel: string;\n\tdecisionMaker?: string;\n\tdocuments: Document[];\n}\n\nexport class UpdateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class CreateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class AddChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyTypeCode: string;\n\tcontributorNotes: string;\n\tmaintainerNotes: string;\n\tcreatedBy: string;\n}\n\nexport class RemoveChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyCode: string;\n}\n\nexport class GovernanceStatus {\n\tkey: string;\n\tlabel: string;\n}\n\nexport class PageEvent {\n\ttype: string;\n\tdata: any;\n}\n\nexport class SetParentAction extends AbstractAction {\n\tchildCode: string;\n\tchildTypeCode: string;\n\tjson: HierarchyOverTime[];\n}\n\n","import { Input, Component, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\nimport { ManageParentVersionsModalComponent } from '@registry/component/cascading-geo-selector/manage-parent-versions-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component({\n\n\tselector: 'set-parent-detail',\n\ttemplateUrl: './set-parent-detail.component.html',\n\tstyleUrls: [],\n\tencapsulation: ViewEncapsulation.None\n})\n// export class SetParentDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\nexport class SetParentDetailComponent implements ActionDetailComponent {\n\n\t@Input() action: any;\n\n\thierarchies: HierarchyOverTime[] = [];\n\t\n\t@Input() readOnly: boolean;\n\t\n\tisEditing: boolean = false;\n\n\tbsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tconstructor(private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private authService: AuthService) {\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tconst month = this.forDate.getUTCMonth();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (month < 10 ? \"0\" : \"\") + (month + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.hierarchies = this.action.json;\n\n\t\tthis.onSelect(this.action);\n\t}\n\n\tapplyAction() {\n\t\tvar action = JSON.parse(JSON.stringify(this.action));\n\n\t\tthis.changeRequestService.applyAction(action).then(response => {\n\t\t\tthis.endEdit();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tonSelect(action: AbstractAction) {\n\n\t}\n\n\tonManageVersions(hierarchy: HierarchyOverTime): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(hierarchy);\n\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\t\t\n\t\t\tif(index !== -1) {\n\t\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t// Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n\t//@HostListener('window:beforeunload')\n\t//canDeactivate(): Observable<boolean> | boolean {\n\t//\tif (this.isEditing) {\n\t//\t\t//event.preventDefault();\n\t//\t\t//event.returnValue = 'Are you sure?';\n\t//\t\t//return 'Are you sure?';\n\n\t//\t\treturn false;\n\t//\t}\n\n\t//\treturn true;\n\t//}\n\n\t//afterDeactivate(isDeactivating: boolean) {\n\t//\tif (isDeactivating && this.isEditing) {\n\t//\t\tthis.unlockActionSync();\n\t//\t}\n\t//}\n\n\tstartEdit(): void {\n\t\tthis.lockAction();\n\t}\n\n\tpublic endEdit(): void {\n\t\tthis.unlockAction();\n\t}\n\n\tlockAction() {\n\t\tthis.changeRequestService.lockAction(this.action.oid).then(response => {\n\t\t\tthis.isEditing = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tunlockAction() {\n\t\tthis.changeRequestService.unlockAction(this.action.oid).then(response => {\n\t\t\tthis.isEditing = false;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n\tunlockActionSync() {\n\t\t$.ajax({\n\t\t\turl: acp + '/changerequest/unlockAction',\n\t\t\tmethod: \"POST\",\n\t\t\tdata: { actionId: this.action.oid },\n\t\t\tsuccess: function(a) {\n\n\t\t\t},\n\t\t\tasync: false\n\t\t});\n\t}\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n        <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"null\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEditing\" (onManageVersion)=\"onManageVersions($event)\"> </tree-geo-selector>\n            \n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" [disabled]=\"readOnly || !isEditing\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { IOService } from '@registry/service';\nimport { AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-export',\n    templateUrl: './data-export.component.html',\n    styleUrls: []\n} )\nexport class DataExportComponent implements OnInit {\n\n    /*\n     * List of geo object types from the system\n     */\n    types: { label: string, code: string }[]\n\n    /*\n     * Currently selected code\n     */\n    code: string = null;\n\n    /*\n     * List of the hierarchies this type is part of\n     */\n    hierarchies: { label: string, code: string }[] = [];\n\n    /*\n     * Currently selected hierarchy\n     */\n    hierarchy: string = null;\n\n    /*\n     * Currently selected format\n     */\n    format: string = null;\n\n\n    /*\n     * Reference to the modal current showing\n     */\n    bsModalRef: BsModalRef;\n\n\n    constructor( private service: IOService, private modalService: BsModalService, private authService: AuthService ) { }\n\n    ngOnInit(): void {\n        this.service.listGeoObjectTypes( true ).then( types => {\n        \n            //this.types = types;\n            \n            var myOrgTypes = [];\n            for (var i = 0; i < types.length; ++i)\n            {\n              if (this.authService.isOrganizationRA(types[i].orgCode))\n              {\n                myOrgTypes.push(types[i]);\n              }\n            }\n            this.types = myOrgTypes;\n\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    onChange( code: string ): void {\n\n        if ( code != null && code.length > 0 ) {\n            this.service.getHierarchiesForType( code, false ).then( hierarchies => {\n                this.hierarchies = hierarchies;\n                this.hierarchy = null;\n            } ).catch(( err: HttpErrorResponse) => {\n                this.error( err );\n            } );\n        }\n        else {\n            this.hierarchies = [];\n            this.hierarchy = null;\n        }\n\n    }\n\n    onExport(): void {\n\n        if ( this.format == 'SHAPEFILE' ) {\n            window.location.href = acp + '/shapefile/export-shapefile?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n        else if ( this.format == 'EXCEL' ) {\n            window.location.href = acp + '/excel/export-spreadsheet?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n}\n","<!-- <div class=\"new-admin-design-main\"> -->\n    <!-- <cgr-header></cgr-header> -->\n    <loading-bar></loading-bar>\n\n    <!-- <div id=\"app-container\" class=\"container\">\n        <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"io.export.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"io.export.description\"></localize>\n            </p>\n        </div> -->\n\n        <!-- <div class=\"row\">\n            <div class=\"col-md-2\"></div>\n            <div class=\"col-md-8\" *ngIf=\"types\"> -->\n                <form #form=\"ngForm\" *ngIf=\"types\">\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"code\">\n                            <localize key=\"io.geoObjectType\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" (change)=\"onChange($event.target.value)\"\n                                required>\n                                <option></option>\n                                <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\" *ngIf=\"hierarchies.length > 0\">\n                        <label class=\"col-sm-3 text-right\">\n                            <localize key=\"io.modal.hierarchy\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"hierarchy\" required>\n                                <option></option>\n                                <option *ngFor=\"let hierarchy of hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"format\">\n                            <localize key=\"io.format\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                                <option></option>\n                                <option value=\"EXCEL\">\n                                    <localize key=\"io.spreadsheet\"></localize>\n                                </option>\n                                <option value=\"SHAPEFILE\">\n                                    <localize key=\"io.shapefile\"></localize>\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-12 text-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onExport()\">\n                                <localize key=\"io.export\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            <!-- </div>\n            <div class=\"col-md-2\"></div> -->\n        <!-- </div>\n    </div>\n</div> -->\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\n@Pipe({\n  name: 'geoobjecttype',\n  pure: false\n})\nexport class GeoObjectTypePipe implements PipeTransform {\n  transform(items: GeoObjectType[], filter: HierarchyNode[]): any {\n\t  if (!items || !filter) {\n          return items;\n      }\n\t  \n\t  let unassignedGeoObjTypes:string[] = [];\n      this.buildUnassignedGeoObjTypes(filter, unassignedGeoObjTypes)\n      \n      // filter items array, items which match and return true will be\n      // kept, false will be filtered out\n      return items.filter(item => unassignedGeoObjTypes.indexOf(item.code) === -1);\n  }\n  \n  buildUnassignedGeoObjTypes(filter: HierarchyNode[], unassignedGeoObjTypes: string[]): void{\n\t  filter.forEach(f => {\n\t\t  this.processHierarchyNodes(f, unassignedGeoObjTypes);\n\t  })\n  }\n  \n  processHierarchyNodes(node: HierarchyNode, unassignedGeoObjTypes: string[]){\n\t  unassignedGeoObjTypes.push(node.geoObjectType)\n\t  \n\t  node.children.forEach(child => {\n\t\t  this.processHierarchyNodes(child, unassignedGeoObjTypes);\n\t  })\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toEpochDateTime',\n    pure: true\n})\nexport class ToEpochDateTimePipe implements PipeTransform {\n    transform(date: string): any {\n        if (!date ) {\n            return date;\n        }\n       \n        return new Date(date).getTime();\n    }\n}","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\n\nimport { MaintainerGuard, ContributerGuard, AuthGuard } from '../shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'hierarchies',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'data',\n        component: DataPageComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'change-requests',\n        component: ChangeRequestPageComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'master-lists',\n        component: MasterListManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'scheduled-jobs',\n        component: ScheduledJobsComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'job/:oid',\n        component: JobComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'master-list/:oid/:published',\n        component: MasterListComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'master-list-view/:oid',\n        component: MasterListViewComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'change-request',\n        component: SubmitChangeRequestComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'tasks',\n        component: TaskViewerComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'synchronization-configs',\n        component: SynchronizationConfigManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'synchronization-config/:oid',\n        component: SynchronizationConfigComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'location-manager',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n\t{\n        path: 'location-manager/:geoobjectuid/:geoobjecttypecode',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code/:editOnly',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'sync/details/:oid',\n        component: SyncDetailsComponent,\n        canActivate: [MaintainerGuard]\n    },\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class RegistryRoutingModule { }"],"sourceRoot":""}