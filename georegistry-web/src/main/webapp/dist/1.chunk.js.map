{"version":3,"sources":["webpack:///./src/app/registry/registry.module.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/registry/service/index.ts","webpack:///./src/app/registry/model/registry.ts","webpack:///./src/app/registry/model/io.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.html","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.ts","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.html","webpack:///./src/app/registry/service/geoobjecttype-management.service.ts","webpack:///./src/app/registry/service/hierarchy.service.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.html","webpack:///./src/app/registry/component/master-list/publish-modal.component.ts","webpack:///./src/app/registry/component/master-list/publish-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.html","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.ts","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.html","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.html","webpack:///./src/app/registry/service/change-request.service.ts","webpack:///./src/app/registry/service/io.service.ts","webpack:///./src/app/registry/service/localization-manager.service.ts","webpack:///./src/app/registry/service/map.service.ts","webpack:///./src/app/registry/service/registry.service.ts","webpack:///./src/app/registry/service/synchronization-config.service.ts","webpack:///./src/app/registry/service/task.service.ts","webpack:///./src/app/registry/component/hierarchy/d3/svg-util.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.html","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.html","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.ts","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.html","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.ts","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.html","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.html","webpack:///./src/app/registry/component/location-manager/layer-panel.component.ts","webpack:///./src/app/registry/component/location-manager/layer-panel.component.html","webpack:///./src/app/registry/component/location-manager/feature-panel.component.ts","webpack:///./src/app/registry/component/location-manager/feature-panel.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.html","webpack:///./src/app/registry/factory/form-validation.factory.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-type.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem.component.html","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.html","webpack:///./src/app/registry/component/data-page/data-page.component.ts","webpack:///./src/app/registry/component/data-page/data-page.component.html","webpack:///./src/app/registry/component/importer/dataimporter.component.ts","webpack:///./src/app/registry/component/importer/dataimporter.component.html","webpack:///./src/app/registry/component/master-list/master-list-manager.component.ts","webpack:///./src/app/registry/component/master-list/master-list-manager.component.html","webpack:///./src/app/registry/component/master-list/export-format-modal.component.ts","webpack:///./src/app/registry/component/master-list/export-format-modal.component.html","webpack:///./src/app/registry/component/crtable/request-table.component.ts","webpack:///./src/app/registry/component/crtable/request-table.component.html","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.html","webpack:///./src/app/registry/pipe/geoobject-attribute-excludes.pipe.ts","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.ts","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.html","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.ts","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.html","webpack:///./src/app/registry/component/master-list/master-list.component.ts","webpack:///./src/app/registry/component/master-list/master-list.component.html","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-view.component.ts","webpack:///./src/app/registry/component/master-list/master-list-view.component.html","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.html","webpack:///./src/app/registry/component/scheduled-jobs/job.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/job.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.html","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.ts","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.html","webpack:///./src/app/registry/component/synchronization-config/details.component.ts","webpack:///./src/app/registry/component/synchronization-config/details.component.html","webpack:///./src/app/registry/component/location-manager/location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/location-manager.component.html","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.ts","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.html","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.ts","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.html","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-node.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.html","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.html","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.html","webpack:///./src/app/registry/model/crtable.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.html","webpack:///./src/app/registry/component/data-export/data-export.component.ts","webpack:///./src/app/registry/component/data-export/data-export.component.html","webpack:///./src/app/registry/pipe/geoobjecttype.pipe.ts","webpack:///./src/app/registry/pipe/to-epoch-date-time.pipe.ts","webpack:///./src/app/registry/registry-routing.module.ts"],"names":["RegistryModule","MapService","HierarchyService","LocalizationManagerService","ChangeRequestService","IOService","GeoObjectTypeManagementService","RegistryService","TaskService","DatePipe","ToEpochDateTimePipe","StepIndicatorComponent","SynchronizationConfigService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","TabsModule","CollapseModule","NgxPaginationModule","SharedModule","RegistryRoutingModule","AccordionModule","forRoot","HierarchyComponent","RequestTableComponent","CreateUpdateGeoObjectDetailComponent","AddRemoveChildDetailComponent","SetParentDetailComponent","CreateHierarchyTypeModalComponent","AddChildToHierarchyModalComponent","CreateGeoObjTypeModalComponent","ManageAttributesModalComponent","DefineAttributeModalContentComponent","ShapefileModalComponent","AttributesPageComponent","LocationPageComponent","LocationProblemPageComponent","LocationProblemComponent","TermProblemPageComponent","TermProblemComponent","SpreadsheetModalComponent","GeoObjectTypePipe","GeoObjectAttributeCodeValidator","EditAttributeModalContentComponent","TermOptionWidgetComponent","AttributeInputComponent","EditTermOptionInputComponent","ManageGeoObjectTypeModalComponent","GeoObjectTypeInputComponent","ManageTermOptionsComponent","LocalizedInputComponent","LocalizedTextComponent","GeoObjectSharedAttributeEditorComponent","ManageVersionsComponent","ManageVersionsModalComponent","SubmitChangeRequestComponent","GeoObjectEditorComponent","GeoObjectAttributeExcludesPipe","GeoObjectEditorMapComponent","SimpleEditControl","DataPageComponent","ChangeRequestPageComponent","CascadingGeoSelector","TreeGeoSelector","ManageParentVersionsModalComponent","ManageParentVersionsComponent","ActionDetailModalComponent","DataImporterComponent","DataExportComponent","MasterListManagerComponent","MasterListComponent","MasterListHistoryComponent","PublishedMasterListHistoryComponent","PublishModalComponent","MasterListViewComponent","ExportFormatModalComponent","ScheduledJobsComponent","JobComponent","JobConflictModalComponent","ReuploadModalComponent","ParentReferenceProblemWidgetComponent","TermReferenceProblemWidgetComponent","RowValidationProblemWidgetComponent","ImportProblemWidgetComponent","TaskViewerComponent","SynchronizationConfigManagerComponent","SynchronizationConfigModalComponent","SynchronizationConfigComponent","SyncDetailsComponent","LocationManagerComponent","DatasetLocationManagerComponent","ContextLayerModalComponent","LayerPanelComponent","FeaturePanelComponent","GeometryPanelComponent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","services","PRESENT","TreeEntity","label","description","children","this","addChild","term","push","Term","GeoObject","attributes","GeoObjectType","Task","geoObjectType","getVotAtDate","date","attrCode","lService","retVot","startDate","endDate","value","time","getTime","i","attr","type","create","isChangeOverTime","values","forEach","vot","Date","parse","JSON","stringify","Array","isArray","length","GeoObjectOverTime","ValueOverTime","isDefault","required","unique","Attribute","isChange","rootTerm","termOptions","setRootTerm","AttributeTerm","precision","scale","AttributeDecimal","GeoObjectTypeModalStates","TreeNode","ChildTreeNode","ParentTreeNode","ManageGeoObjectTypeModalState","PaginationPage","AbstractScheduledJob","ScheduledJob","ScheduledJobOverview","ImportError","ServerException","ServerExceptionAttribute","ImportErrorObject","StepConfig","Step","MasterList","MasterListVersion","HierarchyOverTime","ImportStrategy","MasterListByOrg","SynchronizationConfig","OrgSyncInfo","ExportScheduledJob","ContextLayer","ContextLayerGroup","ImportSheet","Location","TermProblem","LocationProblem","Exclusion","Synonym","ImportConfiguration","key","disabled","inlinelayout","valueChange","EventEmitter","TREE_SCALE_FACTOR_X","TREE_SCALE_FACTOR_Y","DEFAULT_NODE_FILL","DEFAULT_NODE_BANNER_COLOR","INHERITED_NODE_FILL","INHERITED_NODE_BANNER_COLOR","RELATED_NODE_BANNER_COLOR","Instance","hierarchyService","modalService","contextMenuService","localizeService","registryService","authService","userOrganization","currentHierarchy","instance","geoObjectTypes","hierarchiesByOrg","typesByOrg","filter","filteredHierarchiesByOrg","filteredTypesByOrg","hierarchyTypeDeleteExclusions","geoObjectTypeDeleteExclusions","_opened","isSRA","options","displayField","actionMapping","mouse","click","tree","node","$event","treeNodeOnClick","contextMenu","handleOnMenu","ngOnInit","refreshAll","fromEvent","searchInput","nativeElement","pipe","Boolean","debounceTime","distinctUntilChanged","tap","onFilterChange","subscribe","localize","decode","renderTree","rootGeoObjectTypes","d3","select","remove","got","canDrag","overflowDiv","scrollLeft","scrollRight","svg","append","primarySvgHierarchy","SvgHierarchyType","render","calculateSvgViewBox","overflowDiv2","calculateCanDrag","getBBox","x","y","width","height","xPadding","yPadding","style","hierarchyComponent","getNodeByCode","isAbstract","child","superTypeCode","calculateRelatedHierarchies","relatedHiers","hierarchies","hierarchyType","hierarchy","descendants","find","data","inheritedHierarchyCode","registerDragHandlers","deltaX","deltaY","that","dropTargets","dropSelector","onDrag","dragEl","dropEl","emptyHierarchyDropZone","closest","onDrop","mouseTarget","event","clearDropZones","lastDropEl","svgMousePoint","svgPoint","sourceEvent","pageX","pageY","getD3Tree","isPointWithin","dropZoneBbox","activeDropZones","parent","gotRectW","gotRectH","clearGhostNodes","isDragGroup","classed","dropNode","isDropGroup","findGeoObjectTypeByCode","dropElX","parseInt","dropElY","childW","childH","dzg","dropTargetHasChildren","isChildDZActive","childDzBacker","childDz","addChildLabel","childDzText","calculateTextWidth","text","parentDzBacker","gotHeaderH","parentDz","addParentLabel","parentDzText","ghostCode","parentIndex","addSiblingLabel","splice","ghostingCode","siblingGhostBody","getBboxFromSelection","activeDz","dragGot","youngest","insertBetweenTypes","ghostNode","drag","on","rect","getBoundingClientRect","left","top","selThis","target","document","elementFromPoint","selectAll","each","sidebarDragHandler","registerSvgHandlers","startPoint","svgGot","getPos","setPos","split","svgDragHandler","findHierarchyByCode","ht","findOrganizationByCode","organizations","org","hierarchyCode","parentGeoObjectTypeCode","childGeoObjectTypeCode","addChildToHierarchy","then","index","relatedHierarchies","refreshPrimaryHierarchy","catch","err","error","middleGeoObjectTypeCode","youngestGeoObjectTypeCode","ngAfterViewInit","isRA","isOrganizationRA","orgCode","dropZone","getTypesByOrg","orgTypes","organizationCode","getHierarchiesByOrg","orgHierarchies","desiredHierarchy","init","response","setLocales","locales","setGeoObjectTypes","types","pos","getGeoObjectTypePosition","setHierarchies","setNodesOnInit","updateViewDatastructures","setAbstractTypes","sort","a","b","localizedValue","toLowerCase","setType","excludeHierarchyTypeDeletes","indexOf","excludeGeoObjectTypeDeletes","findIndex","h","setCurrentHierarchy","getHierarchy","hierarchyId","rootGeoObjectType","processHierarchyNodes","getHierarchyLabel","geoObjectTypeCode","gOT","show","next","childType","nodeMenuComponent","leafMenuComponent","item","preventDefault","stopPropagation","treeModel","setFocusedNode","isExpanded","collapse","expandAll","hierarchyOnClick","createHierarchy","bsModalRef","animated","backdrop","ignoreBackdropClick","content","onHierarchytTypeCreate","nameA","toUpperCase","nameB","deleteHierarchyType","obj","ConfirmModalComponent","message","submitText","onConfirm","removeHierarchyType","editHierarchyType","readOnly","edit","getHierarchyTypePosition","progress","acknowledgement","disclaimer","useConstraints","accessConstraints","contact","phoneNumber","email","isPrimaryHierarchy","createGeoObjectType","groupSuperType","onGeoObjTypeCreate","deleteGeoObjectType","ModalTypes","danger","removeGeoObjectType","errCallback","manageGeoObjectType","onGeoObjectTypeSubmitted","position","removeFromHierarchy","parentGotCode","gotCode","isActive","filtered","setTimeout","handleInheritHierarchy","hierarchyTypeCode","inheritedHierarchyTypeCode","setInheritedHierarchy","handleUninheritHierarchy","removeInheritedHierarchy","ErrorHandler","showErrorAsDialog","modalStateChangedSource","Subject","modalStepChange","asObservable","getModalState","modalState","setModalState","state","http","eventService","getHierarchyTypes","params","HttpParams","set","get","acp","toPromise","headers","HttpHeaders","start","post","finalize","complete","createHierarchyType","htJSON","updateHierarchyType","cdr","disableCodeField","excludeDescription","isDecimal","attributeChange","detectChanges","ngOnChanges","ngOnDestroy","handleOnSubmit","toggleIsUnique","attribute","animate","onAnimationDone","isValid","localeValues","console","log","toString","trigger","transition","service","iService","readonly","isNew","onMasterListChange","master","listGeoObjectTypes","myOrgTypes","typeCode","isGeoObjectTypeRM","oid","displayLabel","representativityDate","publishingStartDate","publishDate","listAbstract","process","acknowledgements","contactName","organization","telephoneNumber","subtypeHierarchies","leaf","frequency","isMaster","visibility","getIsDisabled","elClasses","classList","onChange","getHierarchiesForType","getHierarchiesForSubtypes","onSubmit","createMasterList","hide","onCancel","getMessageFromError","slide","preGeoObject","postGeoObject","calculatedPreObject","calculatedPostObject","attributeExcludes","forDate","isEditingGeometries","isGeometryInlined","valid","onManageVersion","customEvent","modifiedTermOption","currentTermOption","geoObjectAttributeExcludes","apply","geomAttr","geometry","LocalizedValue","attributeForm","statusChanges","result","emit","changes","calculate","calculateCurrent","geometryEditor","reload","goot","object","formatDate","handleChangeCode","onManageAttributeVersions","geoObjectOverTime","isNewGeoObject","onAttributeVersionChange","versionObj","tfInit","onManageGeometryVersions","isDifferentText","trim","isDifferentValue","onSelectPropertyOption","option","getGeoObjectTypeTermAttributeOptions","termAttributeCode","attrOpts","removeStatuses","isStatusChanged","pre","preCompare","postCompare","getTypeDefinition","getIsValid","getGeoObject","opacity","elRef","editEmitter","visible","save","onAdd","onRemove","onClick","getAllActions","requestId","applyAction","action","applyActionStatusProperties","lockAction","actionId","unlockAction","getAllRequests","getRequestDetails","confirmChangeRequest","execute","rejectAllActions","actions","approveAllActions","submitChangeRequest","importSpreadsheet","configuration","json","cancelImport","importShapefile","includeAbstractTypes","getTypeAncestors","includeInheritedTypes","includeTypes","getGeoObjectSuggestions","createGeoObjectSynonym","entityId","deleteGeoObjectSynonym","synonymId","vOid","getTermSuggestions","mdAttributeId","limit","createTermSynonym","classifierId","deleteTermSynonym","createTerm","parentTermCode","termJSON","removeTerm","termCode","getNewLocaleInfo","installLocale","language","country","variant","mapboxgl","accessToken","roots","childTypeCode","search","getGeoObjectTypes","getParentGeoObjects","childId","parentTypes","recursive","getChildGeoObjects","parentId","parentTypeCode","childrenTypes","newGeoObjectInstance","gtJSON","updateGeoObjectType","addAttributeType","geoObjTypeId","updateAttributeType","deleteAttributeType","attributeName","addAttributeTermTypeOption","updateAttributeTermTypeOption","deleteAttributeTermTypeOption","getGeoObjectBounds","getGeoObjectBoundsAtDate","getGeoObjectByCode","getHierarchiesForGeoObject","getGeoObjectSuggestionsTypeAhead","getScheduledJobs","pageSize","pageNumber","sortAttr","isAscending","getCompletedScheduledJobs","getScheduledJob","historyId","onlyUnresolved","getExportDetails","resolveScheduledJob","submitValidationResolve","config","submitErrorResolve","getMasterLists","getMasterListHistory","versionType","getAllMasterListVersions","getMasterListVersion","getLocales","getGeoObjectOverTime","geoObjectCode","newGeoObjectOverTime","setAttributeVersions","collection","list","createMasterListVersion","publishMasterListVersions","deleteMasterList","deleteMasterListVersion","publishMasterList","getMasterList","applyGeoObjectEdit","parentTreeNode","geoObject","masterListId","notes","valueAttribute","publishShapefile","getMasterListsByOrg","getPublishMasterListJobs","getDatasetBounds","getOrganizations","getPage","getCustomAttrCfg","externalId","getConfigForES","externalSystemId","unlock","run","getJobs","getMyTasks","pageNum","whereStatus","completeTask","taskId","setTaskStatus","status","point","bbox","fontSize","pt","createSVGPoint","matrixTransform","getScreenCTM","inverse","bbox1","bbox2","selection","configurationChange","stateChange","onNext","locations","onBack","hasProblems","locationProblems","resolved","handleError","exclusions","problem","name","exclusion","termProblems","attributeCode","changeDetectorRef","editingGeometry","hasDuplicateDate","originalGeoObjectOverTime","geometryChange","vAttribute","onDateChange","vAttributes","snapDates","votArr","prev","current","formatDateString","onAddNewVersion","geometryType","terms","editGeometry","getVersionData","versions","val","getDefaultLocaleVal","locale","defVal","locVal","setDateAttribute","version","arr","newArray","dateObj","day","getUTCDate","month","getUTCMonth","getUTCFullYear","mapService","onClickEdit","mapDiv","Math","floor","random","Map","container","zoom","center","initMap","onValidChange","removeLayers","addLayers","editingControl","getAll","features","saveDraw","preGeometry","zoomToBbox","addControl","NavigationControl","addEditButton","enableEditing","simpleEditControl","MapboxDraw","controls","line_string","polygon","trash","combine_features","uncombine_features","postGeometry","add","removeSource","prefix","sourceName","removeLayer","getSource","renderGeometryAsLayer","color","addSource","addLayer","setData","bboxCode","bboxType","bboxDate","boundArr","bounds","LngLatBounds","fitBounds","padding","featureCollection","polygons","feature","j","coordinates","points","lines","onVersionChange","handleVersionChange","loading","originalHierarchy","entries","entry","parents","getTypeAheadObservable","parentCode","pType","properties","Observable","observer","results","typeaheadOnSelect","uid","ancestors","ancestor","format","moment","localeData","longDateFormat","nodes","isExpandedField","idField","pot","expanded","onEdit","tabIndex","submitFunction","arePropertiesValid","areParentsValid","dateStr","isAdmin","isMaintainer","isContributor","isContributer","findVotWithStartDate","votArray","setMasterListId","handleDateChange","setOnSuccessCallback","func","onSuccessCallback","configureAsNew","isGeometryEditable","fetchGeoObjectType","fetchLocales","retJson","goPropertiesPre","goPropertiesPost","configureFromImportError","importError","importErrorId","resolution","goSubmit","configureAsExisting","fetchGeoObject","fetchHierarchies","typeTypeCode","ptn","attributeEditor","parentSelector","changePage","nextPage","force","persistModelChanges","getHierarchies","cancel","submit","_stepConfig","layerChange","baselayerIconHover","lists","baseLayers","sprite","url","selected","contextLayerGroups","updateContextGroups","currentValue","previousValue","contextGroup","contextLayers","thisContextLayer","active","enabled","groupHasEnabledContextLayers","group","hasEnabled","cLayerGroup","cLayer","hasEnabledContextLayers","toggleContextLayer","layer","removeContextLayer","addContextLayerModal","MODE","VERSIONS","ATTRIBUTES","HIERARCHY","GEOMETRY","_code","geometryEdit","featureChange","modeChange","mode","isEdit","reason","updateCode","v","updateGeometry","setEditMode","onEditGeometryVersion","calculateGeometry","datasetId","onManageAttributeVersion","onManageHiearchyVersion","onAttributeChange","onHierarchyChange","onEditAttributes","auth","orgs","organizationLabel","getOrganizationLabelFromCode","isPrivate","toggleIsLeaf","isLeaf","toggleIsGeometryEditable","toggleIsAbstract","confirmBsModalRef","geoObjectTypeManagementService","modalStateSubscription","unsubscribe","onModalStateChange","onGeoObjectTypeChange","update","close","modalStepIndicatorService","localizationService","geoObjectTypeChange","modalStepConfig","editGeoObjectType","setStepConfig","fetchOrganizationLabel","manageAttributes","onDeleteAttribute","defineAttributeModal","defineAttribute","editAttribute","removeAttributeType","attributeType","newAttribute","setAttribute","attributeInputComponent","isFormValid","isAttrValid","validator","c","geoObjectAttributeCode","validate","provide","NG_VALIDATORS","useExisting","multi","assign","back","manageTermOption","openAddTermOptionForm","enableTermOptionForm","termOption","replace","addTermOption","clearTermOption","deleteTermOption","removeTermOption","editTermOption","cancelTermOption","t","svgEl","isPrimary","d3Hierarchy","d3Tree","nodeSize","separation","getCode","treeNode","SvgHierarchyNode","renderHierarchyHeader","hg","colHeaderLabel","colHeader","headerg","hierarchyLabelW","hierarchyLabelH","headerFontSize","hierarchyLabelY","lineWidth","textWidth","html","d","headerGBbox","getRelatedHierarchies","nodeMouseover","element","nodeMousemove","nodeTooltipBbox","documentElement","scrollHeight","scrollWidth","nodeMouseleave","descends","insert","gtree","links","join","source","gHeader","gotHeaderW","MOUSE_HOVER_EVENT_ENTER","MOUSE_HOVER_EVENT_MOVE","MOUSE_HOVER_EVENT_EXIT","gotHeaderFontSize","substring","arrowRectD","gArrow","gotBodyFontSize","gotOptionsButtonFontSize","renderRelatedHierarchiesMenu","router","onStateChange","handleBack","handleNext","handleCancel","postalCode","handleSubmit","cancelText","navigate","onError","dataSource","entityLabel","hasSynonym","createSynonym","ignoreDataAtLocation","locationLabel","undoAction","termLabel","termId","createOption","ignoreValue","renderContent","pageTitle","sysService","showImportConfig","importStrategies","NEW_AND_UPDATE","NEW_ONLY","UPDATE_ONLY","isExternal","isLoading","getExternalSystems","paginatedSystems","externalSystems","resultSet","getUrl","queueLimit","removeAfterUpload","uploader","FileUploader","onBuildItemForm","fileItem","form","importStrategy","onBeforeUploadItem","onCompleteItem","fileRef","onSuccessItem","externalSystem","sys","onErrorItem","queue","uploadAll","setImportSource","onCreate","createDate","lastUpdateDate","write","read","onView","pair","ret","onDelete","onFormat","confirm","objectKeys","requests","columns","filterCriteria","prop","sortable","refresh","onSelect","onExecute","changeRequest","request","decisionMaker","approvalStatus","getUsername","onApproveAll","onRejectAll","requestTrackBy","toggle","parentElement","className","includes","toggleId","criteria","setActionStatus","getActiveDetailComponent","actionType","endsWith","showActionDetail","curAction","cuDetail","endEdit","arDetail","spDetail","transform","items","changeRequestService","geoObjectId","isGeoObjectTypeRC","newValid","changeTypeaheadLoading","SuccessModalComponent","cHierarchies","parentMap","onManageVersions","pService","route","p","page","count","order","isPublished","isRefreshing","isWritable","searchPlaceholder","snapshot","paramMap","isCollapsed","onPageChange","baseUrl","window","location","hostname","port","notifier","webSocket","handleProgressChange","onSort","clearFilters","toggleFilter","getValues","base","unshift","total","f","s","end","handleInputChange","handleListChange","isFilterable","dependency","editModal","onPublish","onNewGeoObject","onExport","href","encodeURIComponent","onDeleteMasterListVersion","updateList","onViewMetadata","onPublishShapefile","onDownloadShapefile","ioService","activeJobsPage","completeJobsPage","activeTimeCounter","completeTimeCounter","isViewAllOpen","onActiveJobsPageChange","pollingData","interval","onCompleteJobsPageChange","formatJobStatus","job","formatStepConfig","stepConfig","stage","getJobStatus","getCompletedStatus","jobStage","targetStage","jobPos","onViewAllCompleteJobs","onCancelScheduledJob","jobId","onResolveScheduledJob","allSelected","timeCounter","isPolling","hasRowValidationProblem","formatAffectedRows","rows","formatValidationResolve","onProblemResolved","getFriendlyProblemType","probType","onConflictAction","importErrors","problems","onViewAllActiveJobs","toggleAll","row","onReuploadAndResume","onProblemResolvedListener","onEditGeoObject","searchLabel","getString","conflict","getValidationProblemDisplayLabel","onIgnore","cfg","validationProblemId","onCreateSynonym","title","warning","errorMessage","taskService","inProgressTasks","completedTasks","onInProgressTasksPageChange","upper","str","onCompletedTasksPageChange","onCompleteTask","task","onMoveTaskToInProgress","onViewAllCompletedTasks","onSuccess","level","system","cOrg","cSystem","levelRows","orgUnitGroups","oIndex","sIndex","systems","esConfig","levels","levelRow","levelNum","isAttributeEditor","hasAttributes","onOrganizationSelected","onChangeExternalSystem","lvl","addLevel","len","removeLevel","levelRowIndex","editorIndex","getEditorIndex","newLevelNum","configureAttributes","onSelectGeoObjectType","getTermOptions","dhis2Id","dhis2Attrs","dhis2Attr","onChangeAttrMapping","newValue","attrCfg","attrs","attrCfgAttr","isDifferentGot","isOrgUnitGroup","onChangeTargetType","hasOwnProperty","onRun","exportErrors","SEARCH","VIEW","vectorLayers","preventSingleClick","protocol","host","attributionControl","changeMode","clearGeometryEditing","onModeChange","AttributionControl","compact","handleMapClickEvent","addVectorLayer","handleBasemapStyle","baseLayer","setStyle","zoomToFeature","timer","onContextLayerChange","removeVectorLayer","tiles","navigator","deleteAll","removeControl","onGeometryEdit","addEditLayers","onMapSave","getDrawGeometry","groupHasContextLayers","hasCLayers","toolsIconHover","editOnly","llb","vLayer","prevLayer","onFeatureChange","setFilter","svgHierarchyType","dragging","getBbox","inheritNode","heritX","heritY","inheritBbox","uninheritNode","uninheritBbox","getTreeNode","hideRelatedHierarchy","existingSecondary","existingMenu","contextMenuGroup","titleLabel","actionsTitle","removeFromHierarchyLabel","noRelatedHierLabel","hideRelatedHierarchyLabel","uninheritLabel","inheritLabel","isSecondaryHierarchyRendered","numActions","removeWidth","hideRelatedWidth","uninheritWidth","existingSecondaryCode","secondaryHierarchy","relatedGotHasParents","inheritWidth","relatedHierarchyCode","relatedHierarchy","relatedHierarchyLabel","noHierLabelWidth","heightAdditions","widthPadding","renderSecondaryHierarchy","removeGotFromHierarchy","onClickUninheritHierarchy","onClickInheritHierarchy","myBbox","primaryHierBbox","gSecondary","paddingLeft","secondaryGot","secondaryGotBbox","gConnector","toRoot","onNodeChange","allGeoObjectTypes","gObj","selectedGeoObjectType","geoObjectJson","canDeactivate","afterDeactivate","isDeactivating","unlockActionSync","startEdit","$","ajax","method","success","async","original","ChangeRequest","AbstractAction","UpdateGeoObjectAction","CreateGeoObjectAction","AddChildAction","RemoveChildAction","GovernanceStatus","PageEvent","SetParentAction","unassignedGeoObjTypes","buildUnassignedGeoObjTypes","routes","path","component","canActivate","AuthGuard","MaintainerGuard","ContributerGuard","LocationStrategy","useClass","HashLocationStrategy","forChild"],"mappings":"mKAAA,SACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UAEA,UAEA,O,8UAGA,4B,wCAoJaA,I,8DAAAA,IAAc,UA9Cf,CACV,GAAAC,WACA,GAAAC,iBACA,GAAAC,2BACA,GAAAC,qBACA,GAAAC,UACA,GAAAC,+BACA,GAAAC,gBACA,GAAAC,YACA,EAAAC,SACA,GAAAC,oBACA,GAAAC,uBACA,GAAAC,8BACA,SAlHQ,CACR,EAAAC,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBACA,GAAAC,gBAAgBC,c,EAnBlB,GAoJa,EAAA9B,mB,iEAAAA,GAAc,eA9HzB,EAAA+B,mBACA,EAAAC,sBACA,EAAAC,qCACA,EAAAC,8BACA,EAAAC,yBACA,EAAAC,kCACA,EAAAC,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAC,wBACA,EAAAC,wBACA,EAAAC,sBACA,EAAAC,6BACA,EAAAC,yBACA,EAAAC,yBACA,EAAAC,qBACA,EAAAC,0BACA,GAAAC,kBACA,GAAAC,gCACA,EAAAC,mCACA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","file":"1.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from 'angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { DatePipe } from '@angular/common';\n\nimport { LocalizedInputComponent } from './component/form-fields/localized-input/localized-input.component';\nimport { LocalizedTextComponent } from './component/form-fields/localized-text/localized-text.component';\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { CreateHierarchyTypeModalComponent } from './component/hierarchy/modals/create-hierarchy-type-modal.component';\nimport { AddChildToHierarchyModalComponent } from './component/hierarchy/modals/add-child-to-hierarchy-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './component/hierarchy/modals/create-geoobjtype-modal.component';\nimport { ManageAttributesModalComponent } from './component/hierarchy/geoobjecttype-management/manage-attributes-modal.component';\nimport { DefineAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component';\nimport { EditAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component';\nimport { ShapefileModalComponent } from './component/importer/modals/shapefile-modal.component';\nimport { AttributesPageComponent } from './component/importer/modals/attributes-page.component';\nimport { LocationPageComponent } from './component/importer/modals/location-page.component';\nimport { LocationProblemPageComponent } from './component/importer/modals/location-problem-page.component';\nimport { LocationProblemComponent } from './component/importer/modals/location-problem.component';\nimport { TermProblemPageComponent } from './component/importer/modals/term-problem-page.component';\nimport { TermProblemComponent } from './component/importer/modals/term-problem.component';\nimport { SpreadsheetModalComponent } from './component/importer/modals/spreadsheet-modal.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { TermOptionWidgetComponent } from './component/hierarchy/geoobjecttype-management/term-option-widget.component';\nimport { AttributeInputComponent } from './component/hierarchy/geoobjecttype-management/attribute-input.component';\nimport { EditTermOptionInputComponent } from './component/hierarchy/geoobjecttype-management/edit-term-option-input.component';\nimport { ManageTermOptionsComponent } from './component/hierarchy/geoobjecttype-management/manage-term-options.component';\nimport { GeoObjectTypeInputComponent } from './component/hierarchy/geoobjecttype-management/geoobjecttype-input.component';\nimport { ManageGeoObjectTypeModalComponent } from './component/hierarchy/modals/manage-geoobjecttype-modal.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { PublishModalComponent } from './component/master-list/publish-modal.component';\nimport { ExportFormatModalComponent } from './component/master-list/export-format-modal.component';\nimport { RequestTableComponent } from './component/crtable/request-table.component';\nimport { CreateUpdateGeoObjectDetailComponent } from './component/crtable/action-detail/create-update-geo-object/detail.component';\nimport { AddRemoveChildDetailComponent } from './component/crtable/action-detail/add-remove-child/detail.component';\nimport { SetParentDetailComponent } from './component/crtable/action-detail/set-parent/set-parent-detail.component';\nimport { GeoObjectSharedAttributeEditorComponent } from './component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component';\nimport { ManageVersionsComponent } from './component/geoobject-shared-attribute-editor/manage-versions.component';\nimport { ManageVersionsModalComponent } from './component/geoobject-shared-attribute-editor/manage-versions-modal.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { GeoObjectEditorComponent } from './component/geoobject-editor/geoobject-editor.component';\nimport { GeoObjectEditorMapComponent } from './component/geoobject-editor-map/geoobject-editor-map.component';\nimport { SimpleEditControl } from './component/geoobject-editor-map/simple-edit-control/simple-edit-control.component';\nimport { CascadingGeoSelector } from './component/cascading-geo-selector/cascading-geo-selector';\nimport { TreeGeoSelector } from './component/tree-geo-selector/tree-geo-selector';\nimport { ManageParentVersionsModalComponent } from './component/cascading-geo-selector/manage-parent-versions-modal.component';\nimport { ManageParentVersionsComponent } from './component/cascading-geo-selector/manage-parent-versions.component';\nimport { ActionDetailModalComponent } from './component/crtable/action-detail/action-detail-modal.component';\nimport { DataImporterComponent } from './component/importer/dataimporter.component';\nimport { DataExportComponent } from './component/data-export/data-export.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { PublishedMasterListHistoryComponent } from './component/master-list/published-master-list-history.component';\nimport { MasterListHistoryComponent } from './component/master-list/master-list-history.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { JobConflictModalComponent } from './component/scheduled-jobs/conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './component/scheduled-jobs/conflict-widgets/reupload-modal.component';\nimport { ParentReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component';\nimport { TermReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component';\nimport { RowValidationProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component';\nimport { StepIndicatorComponent } from './component/scheduled-jobs/step-indicator.component';\nimport { ImportProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/import-problem-widget.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\n\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigModalComponent } from './component/synchronization-config/synchronization-config-modal.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\n\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\nimport { ContextLayerModalComponent } from './component/location-manager/context-layer-modal.component';\nimport { LayerPanelComponent } from './component/location-manager/layer-panel.component';\nimport { FeaturePanelComponent } from './component/location-manager/feature-panel.component';\nimport { GeometryPanelComponent } from './component/location-manager/geometry-panel.component';\n\nimport { GeoObjectAttributeCodeValidator } from './factory/form-validation.factory';\n\nimport { GeoObjectTypePipe } from './pipe/geoobjecttype.pipe';\nimport { GeoObjectAttributeExcludesPipe } from './pipe/geoobject-attribute-excludes.pipe';\nimport { ToEpochDateTimePipe } from './pipe/to-epoch-date-time.pipe';\nimport { RegistryService } from './service/registry.service';\nimport { TaskService } from './service/task.service';\nimport { HierarchyService } from './service/hierarchy.service';\nimport { SynchronizationConfigService } from './service/synchronization-config.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\nimport { ChangeRequestService } from './service/change-request.service';\nimport { IOService } from './service/io.service';\nimport { MapService } from './service/map.service';\nimport { GeoObjectTypeManagementService } from './service/geoobjecttype-management.service'\n\nimport { RegistryRoutingModule } from './registry-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n\nimport '../rxjs-extensions';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\t//        ModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tTabsModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule,\n\t\tSharedModule,\n\t\tRegistryRoutingModule,\n\t\tAccordionModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tHierarchyComponent,\n\t\tRequestTableComponent,\n\t\tCreateUpdateGeoObjectDetailComponent,\n\t\tAddRemoveChildDetailComponent,\n\t\tSetParentDetailComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tShapefileModalComponent,\n\t\tAttributesPageComponent,\n\t\tLocationPageComponent,\n\t\tLocationProblemPageComponent,\n\t\tLocationProblemComponent,\n\t\tTermProblemPageComponent,\n\t\tTermProblemComponent,\n\t\tSpreadsheetModalComponent,\n\t\tGeoObjectTypePipe,\n\t\tGeoObjectAttributeCodeValidator,\n\t\tEditAttributeModalContentComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tLocalizedInputComponent,\n\t\tLocalizedTextComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsComponent,\n\t\tManageVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tGeoObjectAttributeExcludesPipe,\n\t\tToEpochDateTimePipe,\n\t\tGeoObjectEditorMapComponent,\n\t\tSimpleEditControl,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tCascadingGeoSelector,\n\t\tTreeGeoSelector,\n\t\tManageParentVersionsModalComponent,\n\t\tManageParentVersionsComponent,\n\t\tActionDetailModalComponent,\n\t\tHierarchyComponent,\n\t\tDataImporterComponent,\n\t\tDataExportComponent,\n\t\t// Master List screens\n\t\tMasterListManagerComponent,\n\t\tMasterListComponent,\n\t\tMasterListHistoryComponent,\n\t\tPublishedMasterListHistoryComponent,\n\t\tPublishModalComponent,\n\t\tMasterListViewComponent,\n\t\t// Scheduled jobs\n\t\tExportFormatModalComponent,\n\t\tScheduledJobsComponent,\n\t\tJobComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tParentReferenceProblemWidgetComponent,\n\t\tTermReferenceProblemWidgetComponent,\n\t\tRowValidationProblemWidgetComponent,\n\t\tStepIndicatorComponent,\n\t\tImportProblemWidgetComponent,\n\t\tTaskViewerComponent,\n\t\t// Synchronization Config\n\t\tSynchronizationConfigManagerComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tSynchronizationConfigComponent,\n\t\tSyncDetailsComponent,\n\t\t// Location manager\n\t\tLocationManagerComponent,\n\t\tDatasetLocationManagerComponent,\n\t\tContextLayerModalComponent,\n\t\tLayerPanelComponent,\n\t\tFeaturePanelComponent,\n\t\tGeometryPanelComponent\n\t],\n\tproviders: [\n\t\tMapService,\n\t\tHierarchyService,\n\t\tLocalizationManagerService,\n\t\tChangeRequestService,\n\t\tIOService,\n\t\tGeoObjectTypeManagementService,\n\t\tRegistryService,\n\t\tTaskService,\n\t\tDatePipe,\n\t\tToEpochDateTimePipe,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigService\n\t],\n\tentryComponents: [\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tEditAttributeModalContentComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tShapefileModalComponent,\n\t\tSpreadsheetModalComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsModalComponent,\n\t\tManageParentVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tPublishModalComponent,\n\t\tExportFormatModalComponent,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tActionDetailModalComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tContextLayerModalComponent\n\t]\n})\nexport class RegistryModule { }\n","var map = {\n\t\"./af\": 549,\n\t\"./af.js\": 549,\n\t\"./ar\": 550,\n\t\"./ar-dz\": 551,\n\t\"./ar-dz.js\": 551,\n\t\"./ar-kw\": 552,\n\t\"./ar-kw.js\": 552,\n\t\"./ar-ly\": 553,\n\t\"./ar-ly.js\": 553,\n\t\"./ar-ma\": 554,\n\t\"./ar-ma.js\": 554,\n\t\"./ar-sa\": 555,\n\t\"./ar-sa.js\": 555,\n\t\"./ar-tn\": 556,\n\t\"./ar-tn.js\": 556,\n\t\"./ar.js\": 550,\n\t\"./az\": 557,\n\t\"./az.js\": 557,\n\t\"./be\": 558,\n\t\"./be.js\": 558,\n\t\"./bg\": 559,\n\t\"./bg.js\": 559,\n\t\"./bm\": 560,\n\t\"./bm.js\": 560,\n\t\"./bn\": 561,\n\t\"./bn-bd\": 562,\n\t\"./bn-bd.js\": 562,\n\t\"./bn.js\": 561,\n\t\"./bo\": 563,\n\t\"./bo.js\": 563,\n\t\"./br\": 564,\n\t\"./br.js\": 564,\n\t\"./bs\": 565,\n\t\"./bs.js\": 565,\n\t\"./ca\": 566,\n\t\"./ca.js\": 566,\n\t\"./cs\": 567,\n\t\"./cs.js\": 567,\n\t\"./cv\": 568,\n\t\"./cv.js\": 568,\n\t\"./cy\": 569,\n\t\"./cy.js\": 569,\n\t\"./da\": 570,\n\t\"./da.js\": 570,\n\t\"./de\": 571,\n\t\"./de-at\": 572,\n\t\"./de-at.js\": 572,\n\t\"./de-ch\": 573,\n\t\"./de-ch.js\": 573,\n\t\"./de.js\": 571,\n\t\"./dv\": 574,\n\t\"./dv.js\": 574,\n\t\"./el\": 575,\n\t\"./el.js\": 575,\n\t\"./en-au\": 576,\n\t\"./en-au.js\": 576,\n\t\"./en-ca\": 577,\n\t\"./en-ca.js\": 577,\n\t\"./en-gb\": 578,\n\t\"./en-gb.js\": 578,\n\t\"./en-ie\": 579,\n\t\"./en-ie.js\": 579,\n\t\"./en-il\": 580,\n\t\"./en-il.js\": 580,\n\t\"./en-in\": 581,\n\t\"./en-in.js\": 581,\n\t\"./en-nz\": 582,\n\t\"./en-nz.js\": 582,\n\t\"./en-sg\": 583,\n\t\"./en-sg.js\": 583,\n\t\"./eo\": 584,\n\t\"./eo.js\": 584,\n\t\"./es\": 585,\n\t\"./es-do\": 586,\n\t\"./es-do.js\": 586,\n\t\"./es-mx\": 587,\n\t\"./es-mx.js\": 587,\n\t\"./es-us\": 588,\n\t\"./es-us.js\": 588,\n\t\"./es.js\": 585,\n\t\"./et\": 589,\n\t\"./et.js\": 589,\n\t\"./eu\": 590,\n\t\"./eu.js\": 590,\n\t\"./fa\": 591,\n\t\"./fa.js\": 591,\n\t\"./fi\": 592,\n\t\"./fi.js\": 592,\n\t\"./fil\": 593,\n\t\"./fil.js\": 593,\n\t\"./fo\": 594,\n\t\"./fo.js\": 594,\n\t\"./fr\": 595,\n\t\"./fr-ca\": 596,\n\t\"./fr-ca.js\": 596,\n\t\"./fr-ch\": 597,\n\t\"./fr-ch.js\": 597,\n\t\"./fr.js\": 595,\n\t\"./fy\": 598,\n\t\"./fy.js\": 598,\n\t\"./ga\": 599,\n\t\"./ga.js\": 599,\n\t\"./gd\": 600,\n\t\"./gd.js\": 600,\n\t\"./gl\": 601,\n\t\"./gl.js\": 601,\n\t\"./gom-deva\": 602,\n\t\"./gom-deva.js\": 602,\n\t\"./gom-latn\": 603,\n\t\"./gom-latn.js\": 603,\n\t\"./gu\": 604,\n\t\"./gu.js\": 604,\n\t\"./he\": 605,\n\t\"./he.js\": 605,\n\t\"./hi\": 606,\n\t\"./hi.js\": 606,\n\t\"./hr\": 607,\n\t\"./hr.js\": 607,\n\t\"./hu\": 608,\n\t\"./hu.js\": 608,\n\t\"./hy-am\": 609,\n\t\"./hy-am.js\": 609,\n\t\"./id\": 610,\n\t\"./id.js\": 610,\n\t\"./is\": 611,\n\t\"./is.js\": 611,\n\t\"./it\": 612,\n\t\"./it-ch\": 613,\n\t\"./it-ch.js\": 613,\n\t\"./it.js\": 612,\n\t\"./ja\": 614,\n\t\"./ja.js\": 614,\n\t\"./jv\": 615,\n\t\"./jv.js\": 615,\n\t\"./ka\": 616,\n\t\"./ka.js\": 616,\n\t\"./kk\": 617,\n\t\"./kk.js\": 617,\n\t\"./km\": 618,\n\t\"./km.js\": 618,\n\t\"./kn\": 619,\n\t\"./kn.js\": 619,\n\t\"./ko\": 620,\n\t\"./ko.js\": 620,\n\t\"./ku\": 621,\n\t\"./ku.js\": 621,\n\t\"./ky\": 622,\n\t\"./ky.js\": 622,\n\t\"./lb\": 623,\n\t\"./lb.js\": 623,\n\t\"./lo\": 624,\n\t\"./lo.js\": 624,\n\t\"./lt\": 625,\n\t\"./lt.js\": 625,\n\t\"./lv\": 626,\n\t\"./lv.js\": 626,\n\t\"./me\": 627,\n\t\"./me.js\": 627,\n\t\"./mi\": 628,\n\t\"./mi.js\": 628,\n\t\"./mk\": 629,\n\t\"./mk.js\": 629,\n\t\"./ml\": 630,\n\t\"./ml.js\": 630,\n\t\"./mn\": 631,\n\t\"./mn.js\": 631,\n\t\"./mr\": 632,\n\t\"./mr.js\": 632,\n\t\"./ms\": 633,\n\t\"./ms-my\": 634,\n\t\"./ms-my.js\": 634,\n\t\"./ms.js\": 633,\n\t\"./mt\": 635,\n\t\"./mt.js\": 635,\n\t\"./my\": 636,\n\t\"./my.js\": 636,\n\t\"./nb\": 637,\n\t\"./nb.js\": 637,\n\t\"./ne\": 638,\n\t\"./ne.js\": 638,\n\t\"./nl\": 639,\n\t\"./nl-be\": 640,\n\t\"./nl-be.js\": 640,\n\t\"./nl.js\": 639,\n\t\"./nn\": 641,\n\t\"./nn.js\": 641,\n\t\"./oc-lnc\": 642,\n\t\"./oc-lnc.js\": 642,\n\t\"./pa-in\": 643,\n\t\"./pa-in.js\": 643,\n\t\"./pl\": 644,\n\t\"./pl.js\": 644,\n\t\"./pt\": 645,\n\t\"./pt-br\": 646,\n\t\"./pt-br.js\": 646,\n\t\"./pt.js\": 645,\n\t\"./ro\": 647,\n\t\"./ro.js\": 647,\n\t\"./ru\": 648,\n\t\"./ru.js\": 648,\n\t\"./sd\": 649,\n\t\"./sd.js\": 649,\n\t\"./se\": 650,\n\t\"./se.js\": 650,\n\t\"./si\": 651,\n\t\"./si.js\": 651,\n\t\"./sk\": 652,\n\t\"./sk.js\": 652,\n\t\"./sl\": 653,\n\t\"./sl.js\": 653,\n\t\"./sq\": 654,\n\t\"./sq.js\": 654,\n\t\"./sr\": 655,\n\t\"./sr-cyrl\": 656,\n\t\"./sr-cyrl.js\": 656,\n\t\"./sr.js\": 655,\n\t\"./ss\": 657,\n\t\"./ss.js\": 657,\n\t\"./sv\": 658,\n\t\"./sv.js\": 658,\n\t\"./sw\": 659,\n\t\"./sw.js\": 659,\n\t\"./ta\": 660,\n\t\"./ta.js\": 660,\n\t\"./te\": 661,\n\t\"./te.js\": 661,\n\t\"./tet\": 662,\n\t\"./tet.js\": 662,\n\t\"./tg\": 663,\n\t\"./tg.js\": 663,\n\t\"./th\": 664,\n\t\"./th.js\": 664,\n\t\"./tk\": 665,\n\t\"./tk.js\": 665,\n\t\"./tl-ph\": 666,\n\t\"./tl-ph.js\": 666,\n\t\"./tlh\": 667,\n\t\"./tlh.js\": 667,\n\t\"./tr\": 668,\n\t\"./tr.js\": 668,\n\t\"./tzl\": 669,\n\t\"./tzl.js\": 669,\n\t\"./tzm\": 670,\n\t\"./tzm-latn\": 671,\n\t\"./tzm-latn.js\": 671,\n\t\"./tzm.js\": 670,\n\t\"./ug-cn\": 672,\n\t\"./ug-cn.js\": 672,\n\t\"./uk\": 673,\n\t\"./uk.js\": 673,\n\t\"./ur\": 674,\n\t\"./ur.js\": 674,\n\t\"./uz\": 675,\n\t\"./uz-latn\": 676,\n\t\"./uz-latn.js\": 676,\n\t\"./uz.js\": 675,\n\t\"./vi\": 677,\n\t\"./vi.js\": 677,\n\t\"./x-pseudo\": 678,\n\t\"./x-pseudo.js\": 678,\n\t\"./yo\": 679,\n\t\"./yo.js\": 679,\n\t\"./zh-cn\": 680,\n\t\"./zh-cn.js\": 680,\n\t\"./zh-hk\": 681,\n\t\"./zh-hk.js\": 681,\n\t\"./zh-mo\": 682,\n\t\"./zh-mo.js\": 682,\n\t\"./zh-tw\": 683,\n\t\"./zh-tw.js\": 683\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 685;","import { ChangeRequestService } from './change-request.service';\nimport { GeoObjectTypeManagementService } from './geoobjecttype-management.service';\nimport { HierarchyService } from './hierarchy.service';\nimport { IOService } from './io.service';\nimport { LocalizationManagerService } from './localization-manager.service';\nimport { MapService } from './map.service';\nimport { RegistryService } from './registry.service';\nimport { SynchronizationConfigService } from './synchronization-config.service';\nimport { TaskService } from './task.service';\n\nexport const services: any[] = [\n\tChangeRequestService,\n\tGeoObjectTypeManagementService,\n\tHierarchyService,\n\tIOService,\n\tLocalizationManagerService,\n\tMapService,\n\tRegistryService,\n\tSynchronizationConfigService,\n\tTaskService\n];\n\nexport * from './change-request.service';\nexport * from './geoobjecttype-management.service';\nexport * from './hierarchy.service';\nexport * from './io.service';\nexport * from './localization-manager.service';\nexport * from './map.service';\nexport * from './registry.service';\nexport * from './synchronization-config.service';\nexport * from './task.service';","import { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\nimport { ImportConfiguration } from './io';\n\nexport const PRESENT: string = '5000-12-31'\n\nexport class TreeEntity {\n\tid: string;\n\tname: string;\n\thasChildren: boolean;\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\n\tconstructor(code: string, label: LocalizedValue, description: LocalizedValue) {\n\t\tthis.code = code;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t}\n\tchildren: Term[] = [];\n\n\taddChild(term: Term) {\n\t\tthis.children.push(term);\n\t}\n}\n\nexport class GeoObject {\n\ttype: string;\n\tgeometry: any;\n\tproperties: {\n\t\tuid: string,\n\t\tcode: string,\n\t\tdisplayLabel: LocalizedValue,\n\t\ttype: string,\n\t\tstatus: string[],\n\t\tsequence: string\n\t\tcreateDate: string,\n\t\tlastUpdateDate: string,\n\t\twritable?: boolean\n\t};\n}\n\nexport class GeoObjectType {\n\tcode: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tgeometryType?: string;\n\tisLeaf: boolean;\n\tisGeometryEditable: boolean;\n\torganizationCode: string;\n\tattributes: Array<Attribute | AttributeTerm | AttributeDecimal> = [];\n\trelatedHierarchies?: string[];\n\tsuperTypeCode?: string;\n\tisAbstract?: boolean;\n\tisPrivate?: boolean;\n\tcanDrag?: boolean;\n}\n\nexport class Task {\n\tid: string;\n\ttemplateKey: string;\n\tmsg: string;\n\ttitle: string;\n\tstatus: string;\n\tcreateDate: number;\n\tcompletedDate: number;\n}\n\n// export class Attribute {\n\n//   name: string;\n//   type: string;\n//   label: string;\n//   description: string;\n//   isDefault: boolean;\n// }\n\n// export class AttributeTerm extends Attribute {\n//     descendants: Attribute[];\n//     rootTerm: string;\n// }\n\nexport class GeoObjectOverTime {\n\n\tgeoObjectType: GeoObjectType;\n\n\tattributes: any;\n\n\tpublic constructor(geoObjectType: GeoObjectType, attributes: any) {\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.attributes = attributes;\n\t}\n\n\tpublic getVotAtDate(date: Date, attrCode: string, lService: LocalizationService) {\n\t\tlet retVot = { startDate: date, endDate: null, value: null };\n\n\t\tconst time = date.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === attrCode) {\n\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\tretVot.value = lService.create();\n\t\t\t\t}\n\n\t\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\t\tlet values = this.attributes[attr.code].values;\n\n\t\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\t\tretVot.value = JSON.parse(JSON.stringify(vot.value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\t\tretVot.value = vot.value[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tretVot.value = vot.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tretVot.value = this.attributes[attr.code];\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn retVot;\n\t}\n}\n\nexport class ValueOverTime {\n\tstartDate: string;\n\tendDate: string;\n\tvalue: any;\n\tremovable?: boolean;\n}\n\nexport class Attribute {\n\tcode: string;\n\ttype: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tisDefault: boolean;\n\trequired: boolean;\n\tunique: boolean;\n\tisChangeOverTime?: boolean;\n\tprecision?: number;\n\tscale?: number;\n\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChangeOverTime: boolean) {\n\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t\tthis.isDefault = isDefault;\n\t\tthis.required = false; // Hardcoded to false because this functionality is disabled until later evaluation.\n\t\tthis.unique = unique;\n\t\tthis.isChangeOverTime = isChangeOverTime;\n\t}\n\n}\n\nexport class AttributeTerm extends Attribute {\n\t//descendants: Attribute[];\n\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n\t\tsuper(code, type, label, description, isDefault, required, unique, isChange);\n\t}\n\n\trootTerm: Term = new Term(null, null, null);\n\n\ttermOptions: Term[] = [];\n\n\tsetRootTerm(term: Term) {\n\t\tthis.rootTerm = term;\n\t}\n}\n\nexport class AttributeDecimal extends Attribute {\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n\t\tsuper(code, type, label, description, isDefault, required, unique, isChange);\n\n\t\tthis.precision = 32;\n\t\tthis.scale = 8;\n\t}\n}\n\nexport enum GeoObjectTypeModalStates {\n\t\"manageAttributes\" = \"MANAGE-ATTRIBUTES\",\n\t\"editAttribute\" = \"EDIT-ATTRIBUTE\",\n\t\"defineAttribute\" = \"DEFINE-ATTRIBUTE\",\n\t\"manageTermOption\" = \"MANAGE-TERM-OPTION\",\n\t\"editTermOption\" = \"EDIT-TERM-OPTION\",\n\t\"manageGeoObjectType\" = \"MANAGE-GEO-OBJECT-TYPE\"\n}\n\nexport class TreeNode {\n\tgeoObject: GeoObject;\n\thierarchyType: string;\n}\n\nexport class ChildTreeNode extends TreeNode {\n\tchildren: ChildTreeNode[];\n}\n\nexport class ParentTreeNode extends TreeNode {\n\tparents: ParentTreeNode[];\n}\n\nexport class ManageGeoObjectTypeModalState {\n\tstate: string;\n\tattribute: any;\n\ttermOption: any;\n}\n\nexport class PaginationPage {\n\tpageNumber: number;\n\tcount: number;\n\tpageSize: number;\n\tresults: any[];\n}\n\nexport class AbstractScheduledJob {\n\tjobId: string;\n\thistoryId: string;\n\tstage: string;\n\tstatus: string;\n\tauthor: string;\n\tcreateDate: string;\n\tlastUpdateDate: string;\n\tworkProgress: number;\n\tworkTotal: number;\n\tstartDate: string;\n\tendDate: string;\n}\n\nexport class ScheduledJob extends AbstractScheduledJob {\n\timportedRecords: number;\n\tconfiguration: ImportConfiguration;\n\timportErrors: PaginationPage;\n\texportErrors: PaginationPage;\n\tproblems: PaginationPage;\n}\n\nexport class ScheduledJobOverview extends ScheduledJob {\n\tstepConfig: StepConfig;\n}\n\n// export class ScheduledJobDetail extends ScheduledJob {\n//     // failedRowCount: number;\n//     importErrors: PaginationPage\n// }\n\nexport class ImportError {\n\texception: ServerException;\n\tobject: ImportErrorObject;\n\tobjectType: string;\n\tid: string;\n\tresolution: string;\n\tselected?: boolean;\n}\n\nexport class ServerException {\n\tattributes: ServerExceptionAttribute[];\n\ttype: string;\n\tmessage: string;\n}\n\nexport class ServerExceptionAttribute {\n\tvalue: string;\n\tkey: string;\n}\n\nexport class ImportErrorObject {\n\tgeoObject: GeoObjectOverTime;\n\tparents: HierarchyOverTime[];\n\tisNew: boolean;\n}\n\nexport class StepConfig {\n\tsteps: Step[];\n}\n\nexport class Step {\n\tlabel: string;\n\tcomplete?: boolean;\n\tenabled?: boolean;\n\tstatus?: string;\n}\n\nexport class MasterList {\n\toid: string;\n\ttypeCode: string;\n\ttypeLabel?: LocalizedValue;\n\tdisplayLabel: LocalizedValue;\n\tcode: string;\n\trepresentativityDate: Date;\n\tpublishingStartDate?: Date;\n\tpublishDate: Date;\n\tlistAbstract: string;\n\tprocess: string;\n\tprogress: string;\n\taccessConstraints: string;\n\tuseConstraints: string;\n\tacknowledgements: string;\n\tdisclaimer: string;\n\tcontactName: string;\n\torganization: string;\n\ttelephoneNumber: string;\n\temail: string;\n\thierarchies: { label: string, code: string, parents: { label: string, code: string }[] }[];\n\tleaf: boolean;\n\tfrequency: string;\n\tisMaster: boolean;\n\tvisibility: string;\n\twrite?: boolean;\n\tread?: boolean;\n\texploratory?: boolean;\n\tversions?: MasterListVersion[]\n}\n\nexport class MasterListVersion {\n\tdisplayLabel: string;\n\toid: string;\n\ttypeCode: string;\n\torgCode: string;\n\tmasterlist: string;\n\tforDate: string;\n\tcreateDate: string;\n\tpublishDate: string;\n\tattributes: any[];\n\tisGeometryEditable: boolean;\n\tlocales?: string[];\n\tshapefile?: boolean;\n\tisAbstract?: boolean;\n\tsuperTypeCode?: string;\n}\n\nexport class HierarchyOverTime {\n\tcode: string;\n\tlabel: string;\n\ttypes: {\n\t\tcode: string;\n\t\tlabel: string;\n\t}[];\n\tentries: {\n\t\tstartDate: string;\n\t\tendDate: string;\n\t\tparents: { [k: string]: { text: string; geoObject: GeoObject } };\n\t\tloading?: any\n\t}[];\n}\n\nexport enum ImportStrategy {\n\t\"NEW_AND_UPDATE\" = \"NEW_AND_UPDATE\",\n\t\"NEW_ONLY\" = \"NEW_ONLY\",\n\t\"UPDATE_ONLY\" = \"UPDATE_ONLY\"\n}\n\nexport class MasterListByOrg {\n\toid: string;\n\tlabel: string;\n\twrite: boolean;\n\tlists: {\n\t\tlabel: string,\n\t\toid: string,\n\t\tcreateDate: string,\n\t\tlastUpdateDate: string,\n\t\tisMaster: boolean,\n\t\twrite: boolean,\n\t\tread: boolean,\n\t\tvisibility: string\n\t}[];\n}\n\nexport class SynchronizationConfig {\n\toid?: string;\n\ttype?: string;\n\tsystemLabel?: string;\n\torganization: string;\n\tsystem: string;\n\thierarchy: string;\n\tlabel: LocalizedValue;\n\tconfiguration: any;\n}\n\nexport class OrgSyncInfo {\n\tlabel: string;\n\tcode: string;\n\thierarchies: { label: string, code: string }[];\n\tsystems: { label: string, oid: string, type: string }[];\n};\n\nexport class ExportScheduledJob extends AbstractScheduledJob {\n\tstepConfig?: StepConfig;\n}\n\nexport class ContextLayer {\n\toid: string;\n\tdisplayLabel: string;\n\tactive: boolean;\n\tenabled: boolean;\n}\n\nexport class ContextLayerGroup {\n\toid: string;\n\tdisplayLabel: string;\n\tcontextLayers: ContextLayer[];\n}\n","import { GeoObjectType } from './registry';\n\nexport class ImportSheet {\n\tname: string;\n\tattributes: {\n\t\tboolean: string[];\n\t\tdate: string[];\n\t\tnumeric: string[];\n\t\ttext: string[];\n\t}\n}\n\nexport class Location {\n\tlabel: string;\n\tcode: string;\n\ttarget: string;\n\tmatchStrategy: string;\r\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: string;\n}\n\nexport class TermProblem {\n\tlabel: string;\n\tparentCode: string;\n\tmdAttributeId: string;\n\tattributeCode: string;\n\tattributeLabel: string;\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class LocationProblem {\n\tlabel: string;\n\ttype: string;\n\ttypeLabel: string;\n\tparent: string;\n\tcontext: { label: string, type: string }[];\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class Exclusion {\n\tcode: string;\n\tvalue: string;\n}\n\nexport class Synonym {\n\tlabel: string;\n\tsynonymId: string;\n\tvOid?: string;\n}\n\nexport class ImportConfiguration {\n\ttype: GeoObjectType;\n\tsheet: ImportSheet;\n\tdirectory: string;\n\tfilename: string;\n\thierarchy: string;\n\tpostalCode: boolean;\n\thasPostalCode: boolean;\n\tlocations: Location[];\n\tformatType: string;\n\tobjectType: string;\n\tlocationProblems: LocationProblem[];\n\ttermProblems: TermProblem[];\n\texclusions: Exclusion[];\n\thierarchies: { code: string, label: string }[];\n\tstartDate: string;\n\tendDate: string;\n\tisExternal: string;\n\texternalSystemId: string;\n\texternalIdAttributeTarget: string;\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-text',\n    templateUrl: './localized-text.component.html',\n    styleUrls: ['./localized-text.css'],\n} )\nexport class LocalizedTextComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n\t@Input() public inlinelayout: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","\n<div *ngFor=\"let localeValue of value.localeValues\">\n  <div [ngClass]=\"{'row' : inlinelayout, 'row-holder' : !inlinelayout}\" >\n    <div [ngClass]=\"{'col-md-12' : inlinelayout}\">\n      <div class=\"form-group\">\n        <div [ngClass]=\"{'label-holder' : !inlinelayout}\" >\n          <label>\n            <localize [key]=\"key\"></localize>\n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n        </div>\n        <div [ngClass]=\"{'holder' : !inlinelayout}\">\n          <span class=\"text\">\n            <textarea [(ngModel)]=\"localeValue.value\" [disabled]=\"disabled\" [name]=\"'description-' + localeValue.locale\"></textarea>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { debounceTime, distinctUntilChanged, filter, tap } from \"rxjs/operators\";\nimport { fromEvent } from 'rxjs';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ContextMenuService, ContextMenuComponent } from 'ngx-contextmenu';\nimport * as d3 from 'd3';\n\nimport { CreateHierarchyTypeModalComponent } from './modals/create-hierarchy-type-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './modals/create-geoobjtype-modal.component';\nimport { ManageGeoObjectTypeModalComponent } from './modals/manage-geoobjecttype-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal'\n\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { Organization } from '@shared/model/core';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { SvgHierarchyType } from './d3/svg-hierarchy-type';\nimport { svgPoint, isPointWithin, calculateTextWidth, getBboxFromSelection } from './d3/svg-util';\nimport { SvgHierarchyNode } from './d3/svg-hierarchy-node';\n\nexport const TREE_SCALE_FACTOR_X: number = 1.8;\nexport const TREE_SCALE_FACTOR_Y: number = 1.8;\n\nexport const DEFAULT_NODE_FILL = '#e6e6e6';\nexport const DEFAULT_NODE_BANNER_COLOR = '#A29BAB';\nexport const INHERITED_NODE_FILL = '#d4d4d4';\nexport const INHERITED_NODE_BANNER_COLOR = '#a0a0a0';\nexport const RELATED_NODE_BANNER_COLOR = INHERITED_NODE_BANNER_COLOR;\n\nexport class Instance {\n  active: boolean;\n  label: string;\n}\n\nexport interface DropTarget {\n  dropSelector: string;\n  onDrag(dragEl: Element, dropEl: Element, event: any): void;\n  onDrop(dragEl: Element, event: any): void;\n  [others: string]: any;\n}\n\n@Component({\n\n\tselector: 'hierarchies',\n\ttemplateUrl: './hierarchy.component.html',\n\tstyleUrls: ['./hierarchy.css']\n})\nexport class HierarchyComponent implements OnInit {\n\n\tuserOrganization: string = null;\n\n\tprimarySvgHierarchy: SvgHierarchyType;\n\tcurrentHierarchy: HierarchyType = null;\n\n\tinstance: Instance = new Instance();\n\thierarchies: HierarchyType[];\n\torganizations: Organization[];\n\tgeoObjectTypes: GeoObjectType[] = [];\n\n\thierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n\ttypesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n\n\tfilter: string = '';\n\tfilteredHierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n\tfilteredTypesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n\t@ViewChild('searchInput', { static: true }) searchInput: ElementRef;\n\n\thierarchyTypeDeleteExclusions: string[] = ['AllowedIn', 'IsARelationship'];\n\tgeoObjectTypeDeleteExclusions: string[] = ['ROOT'];\n\n\t_opened: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n    /*\n     * Template for tree node menu\n     */\n\t@ViewChild('nodeMenu') public nodeMenuComponent: ContextMenuComponent;\n\n    /*\n     * Template for leaf menu\n     */\n\t@ViewChild('leafMenu') public leafMenuComponent: ContextMenuComponent;\n\n    /* \n     * Currently clicked on id for delete confirmation modal \n     */\n\tcurrent: any;\n\n\tisSRA: boolean = false;\n\n\thierarchyService: HierarchyService;\n\n\tlocalizeService: LocalizationService;\n\n\toptions = {\n\t\t//\t\t  allowDrag: (any) => node.isLeaf,\n\t\t//\t\t  allowDrop: (element:Element, { parent, index }: {parent:TreeNode,index:number}) => {\n\t\t// return true / false based on element, to.parent, to.index. e.g.\n\t\t//\t\t\t    return parent.hasChildren;\n\t\t//\t\t\t  },\n\t\tdisplayField: \"label\",\n\t\tactionMapping: {\n\t\t\tmouse: {\n\t\t\t\tclick: (tree: any, node: any, $event: any) => {\n\t\t\t\t\tthis.treeNodeOnClick(node, $event);\n\t\t\t\t},\n\t\t\t\tcontextMenu: (tree: any, node: any, $event: any) => {\n\t\t\t\t\tthis.handleOnMenu(node, $event);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmouse: {\n\t\t\t//\t            drop: (tree: any, node: TreeNode, $event: any, {from, to}: {from:TreeNode, to:TreeNode}) => {\n\t\t\t//\t              console.log('drag', from, to); // from === {name: 'first'}\n\t\t\t//\t              // Add a node to `to.parent` at `to.index` based on the data in `from`\n\t\t\t//\t              // Then call tree.update()\n\t\t\t//\t            }\n\t\t}\n\t};\n\n\n\n\tconstructor(hierarchyService: HierarchyService, private modalService: BsModalService,\n\t\tprivate contextMenuService: ContextMenuService,\n\t\tlocalizeService: LocalizationService, private registryService: RegistryService, private authService: AuthService) {\n\n\t\tthis.isSRA = authService.isSRA();\n\n\t\tthis.hierarchyService = hierarchyService;\n\t\tthis.localizeService = localizeService;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.refreshAll(null);\n\n\t\tfromEvent(this.searchInput.nativeElement, 'keyup').pipe(\n\n\t\t\t// get value\n\t\t\tfilter(Boolean),\n\t\t\tdebounceTime(500),\n\t\t\tdistinctUntilChanged(),\n\t\t\ttap(() => {\n\t\t\t\tthis.onFilterChange();\n\t\t\t})\n\t\t\t// subscription for response\n\t\t).subscribe();\n\t}\n\n\tlocalize(key: string): string {\n\t\treturn this.localizeService.decode(key);\n\t}\n\n\tprivate renderTree(): void {\n\t\tif (this.currentHierarchy == null || this.currentHierarchy.rootGeoObjectTypes == null || this.currentHierarchy.rootGeoObjectTypes.length == 0) {\n\t\t\td3.select(\"#svg\").remove();\n\t\t\tthis.geoObjectTypes.forEach((got: GeoObjectType) => {\n\t\t\t\tgot.canDrag = true;\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\td3.select(\".g-context-menu\").remove();\n\t\td3.select(\".hierarchy-inherit-button\").remove();\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\n\t\tlet overflowDiv: any = d3.select(\"#overflow-div\").node();\n\t\tlet scrollLeft = overflowDiv.scrollLeft;\n\t\tlet scrollRight = overflowDiv.scrollRight;\n\n\t\tlet svg = d3.select(\"#svg\");\n\n\t\tif (svg.node() == null) {\n\t\t\tsvg = d3.select(\"#svgHolder\").append(\"svg\");\n\t\t\tsvg.attr(\"id\", \"svg\");\n\t\t}\n\n\t\tthis.primarySvgHierarchy = new SvgHierarchyType(this, svg, this.currentHierarchy, true, this.localizeService, this.modalService);\n\t\tthis.primarySvgHierarchy.render();\n\n\t\tthis.calculateSvgViewBox();\n\n\t\tlet overflowDiv2: any = d3.select(\"#overflow-div\").node();\n\t\toverflowDiv2.scrollLeft = scrollLeft;\n\t\toverflowDiv2.scrollRight = scrollRight;\n\n\t\t//this.registerSvgHandlers();\n\n\t\tthis.geoObjectTypes.forEach((got: GeoObjectType) => {\n\t\t\tgot.canDrag = this.calculateCanDrag(got);\n\t\t});\n\t}\n\n\tcalculateSvgViewBox(): void {\n\t\tlet svg: any = d3.select(\"#svg\");\n\t\tlet svgNode: any = svg.node();\n\n\t\tlet { x, y, width, height } = svgNode.getBBox();\n\n\t\tconst xPadding = 30;\n\t\tconst yPadding = 40;\n\t\tsvg.attr(\"viewBox\", (x - xPadding) + \" \" + (y - yPadding) + \" \" + (width + xPadding * 2) + \" \" + (height + yPadding * 2));\n\n\t\twidth = (width + xPadding * 2) * TREE_SCALE_FACTOR_X;\n\t\theight = (height + yPadding * 2) * TREE_SCALE_FACTOR_Y;\n\n\t\td3.select(\"#svgHolder\").style(\"width\", width + \"px\");\n\t\t//d3.select(\"#svgHolder\").style(\"height\", height + \"px\"); \n\t}\n\n\tcalculateCanDrag(got: GeoObjectType): boolean {\n\t\tlet hierarchyComponent = this;\n\n\t\tif (this.primarySvgHierarchy != null) {\n\t\t\tif (this.primarySvgHierarchy.getNodeByCode(got.code) != null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (got.isAbstract) {\n\t\t\t\tlet isChildOnGraph = false;\n\n\t\t\t\tthis.geoObjectTypes.forEach((child: GeoObjectType) => {\n\t\t\t\t\tif (child.superTypeCode === got.code) {\n\t\t\t\t\t\tif (hierarchyComponent.primarySvgHierarchy.getNodeByCode(child.code) != null) {\n\t\t\t\t\t\t\tisChildOnGraph = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (isChildOnGraph) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (got.superTypeCode != null) {\n\t\t\t\tif (hierarchyComponent.primarySvgHierarchy.getNodeByCode(got.superTypeCode) != null) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcalculateRelatedHierarchies(got: GeoObjectType): string[] {\n\t\tlet relatedHiers = [];\n\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet hierarchyType = this.hierarchies[i];\n\n\t\t\tif (hierarchyType.rootGeoObjectTypes != null && hierarchyType.rootGeoObjectTypes.length > 0) {\n\t\t\t\tlet d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]).descendants();\n\n\t\t\t\tlet found = d3Hierarchy.find((node) => {\n\t\t\t\t\treturn node.data.geoObjectType === got.code && node.data.inheritedHierarchyCode == null;\n\t\t\t\t});\n\n\t\t\t\tif (found) {\n\t\t\t\t\trelatedHiers.push(hierarchyType.code);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn relatedHiers;\n\t}\n\n\tprivate registerDragHandlers(): any {\n\t\tlet that = this;\n\n\t\tlet dropTargets: DropTarget[] = [];\n\n\t\t// Empty Hierarchy Drop Zone\n\t\tdropTargets.push({\n\t\t\tdropSelector: \".drop-box-container\", onDrag: function(dragEl: Element, dropEl: Element) {\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tthis.dropEl.style(\"border-color\", null);\n\t\t\t\t\tthis.dropEl = null;\n\t\t\t\t}\n\n\t\t\t\tif (dropEl != null) {\n\t\t\t\t\tlet emptyHierarchyDropZone = dropEl.closest(\".drop-box-container\");\n\n\t\t\t\t\tif (emptyHierarchyDropZone != null) {\n\t\t\t\t\t\tthis.dropEl = d3.select(emptyHierarchyDropZone).style(\"border-color\", \"#6BA542\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, onDrop: function(dragEl: Element) {\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tthis.dropEl.style(\"border-color\", null);\n\t\t\t\t\tthat.addChild(that.currentHierarchy.code, \"ROOT\", d3.select(dragEl).attr(\"id\"));\n\t\t\t\t\tthis.dropEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// SVG GeoObjectType Drop Zone\n\t\tdropTargets.push({\n\t\t\tdropSelector: \".svg-got-body-rect\", onDrag: function(dragEl: Element, mouseTarget: Element, event: any) {\n\t\t\t\tthis.clearDropZones();\n\n\t\t\t\tlet lastDropEl = this.dropEl;\n\n\t\t\t\t// translate page to SVG co-ordinate\n\t\t\t\tlet svg: any = d3.select(\"#svg\").node();\n\n\t\t\t\tif (svg == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\t\t\t\t// Find out if we've dragged the GeoObjectType inside of a HierarchyNode. If we have, then\n\t\t\t\t// we need to expand the HierarchyNode's BoundingBox to accomodate our new drop zones. \n\t\t\t\tthat.primarySvgHierarchy.getD3Tree().descendants().forEach((node: any) => {\n\t\t\t\t\tif (node.data.geoObjectType !== \"GhostNode\" && isPointWithin(svgMousePoint, node.data.dropZoneBbox)) {\n\t\t\t\t\t\tthis.dropEl = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + node.data.geoObjectType + '\"]');\n\t\t\t\t\t\tnode.data.activeDropZones = true;\n\n\t\t\t\t\t\tif (node.parent == null) {\n\t\t\t\t\t\t\tnode.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH * 4 };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnode.data.activeDropZones = false;\n\n\t\t\t\t\t\tif (node.parent == null) {\n\t\t\t\t\t\t\tnode.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (this.dropEl == null || (lastDropEl != null && this.dropEl != null && lastDropEl.attr(\"data-gotCode\") != this.dropEl.attr(\"data-gotCode\"))) {\n\t\t\t\t\tthis.clearGhostNodes(true);\n\t\t\t\t}\n\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tlet isDragGroup = d3.select(dragEl).classed(\"got-group-parent\");\n\t\t\t\t\tconst gotCode = this.dropEl.attr(\"data-gotCode\");\n\t\t\t\t\tlet dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n\t\t\t\t\tlet isDropGroup = that.findGeoObjectTypeByCode(gotCode).isAbstract;\n\n\t\t\t\t\tthis.dropEl.attr(\"stroke\", \"blue\");\n\n\t\t\t\t\tconst dropElX = parseInt(this.dropEl.attr(\"x\"));\n\t\t\t\t\tconst dropElY = parseInt(this.dropEl.attr(\"y\"));\n\n\t\t\t\t\t// Add drop zones\n\t\t\t\t\tconst childW: number = SvgHierarchyType.gotRectW;\n\t\t\t\t\tconst childH: number = SvgHierarchyType.gotRectH;\n\n\t\t\t\t\tlet dzg = d3.select(\"#svg\").append(\"g\").classed(\"svg-dropZone-g\", true);\n\n\t\t\t\t\t// Render Child Drop Zone\n\t\t\t\t\tlet dropTargetHasChildren = !(dropNode.children == null || dropNode.children.length == 0);\n\t\t\t\t\tlet isChildDZActive = !isDropGroup && (!isDragGroup || !dropTargetHasChildren);\n\t\t\t\t\tif (isChildDZActive) {\n\t\t\t\t\t\tthis.childDzBacker = dzg.append(\"rect\").classed(\"svg-got-child-dz-backer\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"white\")\n\n\t\t\t\t\t\tthis.childDz = dzg.append(\"rect\").classed(\"svg-got-child-dz\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"none\")\n\t\t\t\t\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t\t\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t\t\t\t\t.attr(\"stroke-dasharray\", \"5,5\");\n\n\t\t\t\t\t\tlet addChildLabel = dropTargetHasChildren ? that.localizeService.decode(\"hierarchy.content.intersectChild\") : that.localizeService.decode(\"hierarchy.content.addChild\");\n\t\t\t\t\t\tthis.childDzText = dzg.append(\"text\").classed(\"svg-got-child-dz-text\", true)\n\t\t\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t\t\t.attr(\"font-size\", 10)\n\t\t\t\t\t\t\t.attr(\"fill\", \"black\")\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addChildLabel, 10) / 2)\n\t\t\t\t\t\t\t.attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10 + childH / 2 + 2)\n\t\t\t\t\t\t\t.text(addChildLabel);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Render Parent Drop Zone\n\t\t\t\t\tif (!isDragGroup) // Don't render it if we're a group\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parentDzBacker = dzg.append(\"rect\").classed(\"svg-got-parent-dz-backer\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"white\")\n\n\t\t\t\t\t\tthis.parentDz = dzg.append(\"rect\").classed(\"svg-got-parent-dz\", true)\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n\t\t\t\t\t\t\t.attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n\t\t\t\t\t\t\t.attr(\"width\", childW)\n\t\t\t\t\t\t\t.attr(\"height\", childH)\n\t\t\t\t\t\t\t.attr(\"fill\", \"none\")\n\t\t\t\t\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t\t\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t\t\t\t\t.attr(\"stroke-dasharray\", \"5,5\");\n\n\t\t\t\t\t\td3.select(\".svg-got-parent-dz-text\").remove();\n\t\t\t\t\t\tlet addParentLabel = dropNode.parent == null ? that.localizeService.decode(\"hierarchy.content.addParent\") : that.localizeService.decode(\"hierarchy.content.intersectParent\");\n\t\t\t\t\t\tthis.parentDzText = dzg.append(\"text\").classed(\"svg-got-parent-dz-text\", true)\n\t\t\t\t\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t\t\t\t\t.attr(\"font-size\", 10)\n\t\t\t\t\t\t\t.attr(\"fill\", \"black\")\n\t\t\t\t\t\t\t.attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addParentLabel, 10) / 2)\n\t\t\t\t\t\t\t.attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH / 2 + 2)\n\t\t\t\t\t\t\t.text(addParentLabel);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Render Sibling Drop Zone\n\t\t\t\t\tif (this.ghostCode != gotCode) {\n\n\n\t\t\t\t\t\tif (this.ghostCode != null) {\n\t\t\t\t\t\t\tthis.clearGhostNodes(dropNode.parent == null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dropNode.parent != null) {\n\t\t\t\t\t\t\tlet parentIndex = null;\n\t\t\t\t\t\t\tfor (let i = 0; i < dropNode.parent.data.children.length; ++i) {\n\t\t\t\t\t\t\t\tlet hn: any = dropNode.parent.data.children[i];\n\n\t\t\t\t\t\t\t\tif (hn.geoObjectType === gotCode) {\n\t\t\t\t\t\t\t\t\tparentIndex = i + 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlet addSiblingLabel = that.localizeService.decode(\"hierarchy.content.addChild\");\n\t\t\t\t\t\t\tdropNode.parent.data.children.splice(parentIndex, 0, { ghostingCode: gotCode, geoObjectType: \"GhostNode\", label: addSiblingLabel, children: [] });\n\n\t\t\t\t\t\t\tthat.renderTree();\n\t\t\t\t\t\t\tthis.ghostCode = gotCode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet siblingGhostBody = d3.select(\".svg-sibling-ghost-body-dz\");\n\n\t\t\t\t\tif (!isDragGroup && isPointWithin(svgMousePoint, getBboxFromSelection(this.parentDz))) {\n\t\t\t\t\t\tthis.parentDz.attr(\"stroke\", \"blue\");\n\t\t\t\t\t\tthis.parentDzText.attr(\"fill\", \"blue\");\n\t\t\t\t\t\tisChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tisChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tsiblingGhostBody.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tthis.activeDz = this.parentDz;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isChildDZActive && isPointWithin(svgMousePoint, getBboxFromSelection(this.childDz))) {\n\t\t\t\t\t\t!isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\t!isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tthis.childDz.attr(\"stroke\", \"blue\");\n\t\t\t\t\t\tthis.childDzText.attr(\"fill\", \"blue\");\n\t\t\t\t\t\tsiblingGhostBody.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tthis.activeDz = this.childDz;\n\t\t\t\t\t}\n\t\t\t\t\telse if (siblingGhostBody.node() != null && isPointWithin(svgMousePoint, getBboxFromSelection(siblingGhostBody))) {\n\t\t\t\t\t\t!isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\t!isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tisChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n\t\t\t\t\t\tisChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n\t\t\t\t\t\tsiblingGhostBody.attr(\"stroke\", \"blue\");\n\t\t\t\t\t\tthis.activeDz = \"sibling\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, onDrop: function(dragEl: Element) {\n\t\t\t\tif (this.dropEl != null && this.activeDz != null) {\n\t\t\t\t\tlet dropGot = this.dropEl.attr(\"data-gotCode\");\n\t\t\t\t\tlet dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === dropGot; });\n\t\t\t\t\tlet dragGot = d3.select(dragEl).attr(\"id\");\n\n\t\t\t\t\tif (this.activeDz === this.childDz) {\n\t\t\t\t\t\tif (dropNode.data.children.length == 0) {\n\t\t\t\t\t\t\tthat.addChild(that.currentHierarchy.code, dropGot, dragGot);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlet youngest = \"\";\n\n\t\t\t\t\t\t\tfor (let i = 0; i < dropNode.data.children.length; ++i) {\n\t\t\t\t\t\t\t\tyoungest = youngest + dropNode.data.children[i].geoObjectType;\n\n\t\t\t\t\t\t\t\tif (i < dropNode.data.children.length - 1) {\n\t\t\t\t\t\t\t\t\tyoungest = youngest + \",\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthat.insertBetweenTypes(that.currentHierarchy.code, dropGot, dragGot, youngest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.activeDz === this.parentDz) {\n\t\t\t\t\t\tif (dropNode.parent == null) {\n\t\t\t\t\t\t\tthat.insertBetweenTypes(that.currentHierarchy.code, \"ROOT\", dragGot, dropGot);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthat.insertBetweenTypes(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, dragGot, dropGot);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.activeDz === \"sibling\") {\n\t\t\t\t\t\tthat.addChild(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, d3.select(dragEl).attr(\"id\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.clearDropZones();\n\t\t\t\tthis.clearGhostNodes(true);\n\t\t\t}, clearDropZones: function() {\n\t\t\t\tif (this.dropEl != null) {\n\t\t\t\t\tthis.dropEl.attr(\"stroke\", null);\n\t\t\t\t}\n\n\t\t\t\tthis.dropEl = null;\n\t\t\t\tthis.activeDz = null;\n\n\t\t\t\tthis.childDz = null;\n\t\t\t\tthis.parentDz = null;\n\n\t\t\t\td3.select(\".svg-dropZone-g\").remove();\n\n\t\t\t}, clearGhostNodes: function(renderTree: boolean) {\n\t\t\t\tif (this.ghostCode != null) {\n\t\t\t\t\tlet ghostNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.ghostingCode === this.ghostCode; });\n\n\t\t\t\t\tif (ghostNode != null) {\n\t\t\t\t\t\tlet parentIndex = null;\n\t\t\t\t\t\tfor (let i = 0; i < ghostNode.parent.data.children.length; ++i) {\n\t\t\t\t\t\t\tlet hn: any = ghostNode.parent.data.children[i];\n\n\t\t\t\t\t\t\tif (hn.ghostingCode === this.ghostCode) {\n\t\t\t\t\t\t\t\tparentIndex = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (parentIndex != null) {\n\t\t\t\t\t\t\tghostNode.parent.data.children.splice(parentIndex, 1);\n\t\t\t\t\t\t\tif (renderTree) {\n\t\t\t\t\t\t\t\tthat.renderTree();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.ghostCode = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// GeoObjectTypes and Hierarchies\n\t\tlet deltaX: number, deltaY: number, width: number;\n\t\tlet sidebarDragHandler = d3.drag()\n\t\t\t.on(\"start\", function(event: any) {\n\t\t\t\tlet canDrag = d3.select(this).attr(\"data-candrag\");\n\t\t\t\tif (canDrag === \"false\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet rect = this.getBoundingClientRect();\n\t\t\t\tdeltaX = rect.left - event.sourceEvent.pageX;\n\t\t\t\tdeltaY = rect.top - event.sourceEvent.pageY;\n\t\t\t\twidth = rect.width;\n\t\t\t})\n\t\t\t.on(\"drag\", function(event: any) {\n\t\t\t\tlet canDrag = d3.select(this).attr(\"data-candrag\");\n\t\t\t\tif (canDrag === \"false\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\td3.select(\".g-context-menu\").remove();\n\n\t\t\t\tlet selThis = d3.select(this);\n\n\t\t\t\t// Kind of a dumb hack, but if we hide our drag element for a sec, then we can check what's underneath it.\n\t\t\t\tselThis.style(\"display\", \"none\");\n\n\t\t\t\tlet target = document.elementFromPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\t\t\t\tselThis.style(\"display\", null);\n\n\t\t\t\tfor (let i = 0; i < dropTargets.length; ++i) {\n\t\t\t\t\tdropTargets[i].onDrag(this, target, event);\n\t\t\t\t}\n\n\t\t\t\t// Move the GeoObjectType with the pointer when they move their mouse\n\t\t\t\tselThis\n\t\t\t\t\t.classed(\"dragging\", true)\n\t\t\t\t\t.style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n\t\t\t\t\t.style(\"top\", (event.sourceEvent.pageY + deltaY) + \"px\")\n\t\t\t\t\t.style(\"width\", width + \"px\");\n\n\t\t\t\t// If they are moving a GOT group then we have to move the children as well \n\t\t\t\tif (selThis.classed(\"got-group-parent\")) {\n\t\t\t\t\tlet index = 1;\n\t\t\t\t\td3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n\t\t\t\t\t\tlet li: any = this;\n\t\t\t\t\t\tlet child = d3.select(li);\n\n\t\t\t\t\t\tchild\n\t\t\t\t\t\t\t.classed(\"dragging\", true)\n\t\t\t\t\t\t\t.style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n\t\t\t\t\t\t\t.style(\"top\", (event.sourceEvent.pageY + deltaY + (li.getBoundingClientRect().height + 2) * index) + \"px\")\n\t\t\t\t\t\t\t.style(\"width\", width + \"px\");\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}).on(\"end\", function(event: any) {\n\t\t\t\tlet selThis = d3.select(this)\n\t\t\t\t\t.classed(\"dragging\", false)\n\t\t\t\t\t.style(\"left\", null)\n\t\t\t\t\t.style(\"top\", null)\n\t\t\t\t\t.style(\"width\", null);\n\n\t\t\t\t// If they are moving a GOT group then we have to reset the children as well \n\t\t\t\tif (selThis.classed(\"got-group-parent\")) {\n\t\t\t\t\td3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n\t\t\t\t\t\tlet child = d3.select(this);\n\n\t\t\t\t\t\tchild\n\t\t\t\t\t\t\t.classed(\"dragging\", false)\n\t\t\t\t\t\t\t.style(\"left\", null)\n\t\t\t\t\t\t\t.style(\"top\", null)\n\t\t\t\t\t\t\t.style(\"width\", null);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < dropTargets.length; ++i) {\n\t\t\t\t\tdropTargets[i].onDrop(this, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\tsidebarDragHandler(d3.selectAll(\".sidebar-section-content ul.list-group li.got-li-item\"));\n\t}\n\n\tprivate registerSvgHandlers(): void {\n\t\tlet hierarchyComponent = this;\n\n\t\t// SVG Drag Handler\n\t\tlet deltaX: number, deltaY: number, width: number;\n\t\tlet startPoint: any;\n\t\tlet svgGot: SvgHierarchyNode;\n\t\tlet svgDragHandler = d3.drag()\n\t\t\t.on(\"start\", function(event: any) {\n\t\t\t\tlet svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\t\t\t\t// let select = d3.select(this);\n\n\t\t\t\tsvgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n\n\n\t\t\t\t// d3.selectAll(\".svg-got-relatedhiers-button\").sort(function (a: any, b: any) {\n\t\t\t\t// \tif (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n\t\t\t\t// \t\treturn -1\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\treturn 1\n\t\t\t\t// \t}\n\t\t\t\t// });\n\n\t\t\t\t// \td3.selectAll(\".svg-got-body-rect\").sort(function (a: any, b: any) {\n\t\t\t\t// \tif (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n\t\t\t\t// \t\treturn -1\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\treturn 1\n\t\t\t\t// \t}\n\t\t\t\t// });\n\n\t\t\t\t// d3.selectAll(\".svg-got-header-rect\").sort(function (a: any, b: any) {\n\t\t\t\t// \tif (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n\t\t\t\t// \t\tconsole.log(\"no --> \",a.data.geoObjectType)\n\t\t\t\t// \t\treturn -1\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\tconsole.log(\"yes --> \",a.data.geoObjectType)\n\t\t\t\t// \t\treturn 1\n\t\t\t\t// \t}\n\t\t\t\t// });\n\n\t\t\t\tstartPoint = svgGot.getPos();\n\n\t\t\t\tdeltaX = startPoint.x - svgMousePoint.x;\n\t\t\t\tdeltaY = startPoint.y - svgMousePoint.y;\n\t\t\t})\n\t\t\t.on(\"drag\", function(event: any) {\n\n\t\t\t\td3.select(\".g-context-menu\").remove();\n\n\t\t\t\tlet svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\t\t\t\tsvgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n\t\t\t\tsvgGot.setPos(svgMousePoint.x + deltaX, svgMousePoint.y + deltaY, true);\n\n\t\t\t}).on(\"end\", function(event: any) {\n\n\t\t\t\tlet bbox: string[] = d3.select(\"#svg\").attr(\"viewBox\").split(\" \");\n\n\t\t\t\tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\n\t\t\t\t// if (!isBboxPartiallyWithin(svgGot.getBbox(), { x: parseInt(bbox[0]), y: parseInt(bbox[1]), width: parseInt(bbox[2]), height: parseInt(bbox[3]) })) {\n\n\t\t\t\t// \tif (hierarchyComponent.isOrganizationRA(hierarchyComponent.currentHierarchy.organizationCode)) {\n\t\t\t\t// \t\tlet obj = hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n\t\t\t\t// \t\thierarchyComponent.bsModalRef = hierarchyComponent.modalService.show(ConfirmModalComponent, {\n\t\t\t\t// \t\t\tanimated: true,\n\t\t\t\t// \t\t\tbackdrop: true,\n\t\t\t\t// \t\t\tignoreBackdropClick: true,\n\t\t\t\t// \t\t});\n\n\t\t\t\t// \t\tlet message = hierarchyComponent.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n\t\t\t\t// \t\tmessage = message.replace(\"{label}\", obj.label.localizedValue);\n\n\t\t\t\t// \t\thierarchyComponent.bsModalRef.content.message = message;\n\t\t\t\t// \t\thierarchyComponent.bsModalRef.content.data = obj.code;\n\n\t\t\t\t// \t\t(<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\t\t// \t\t\tlet treeNode = svgGot.getTreeNode();\n\t\t\t\t// \t\t\tlet parent = null;\n\t\t\t\t// \t\t\tif (treeNode.parent == null) {\n\t\t\t\t// \t\t\t\tparent = \"ROOT\";\n\t\t\t\t// \t\t\t}\n\t\t\t\t// \t\t\telse {\n\t\t\t\t// \t\t\t\tif (treeNode.parent.data.inheritedHierarchyCode != null) {\n\t\t\t\t// \t\t\t\t\tparent = \"ROOT\";\n\t\t\t\t// \t\t\t\t}\n\t\t\t\t// \t\t\t\telse {\n\t\t\t\t// \t\t\t\t\tparent = treeNode.parent.data.geoObjectType;\n\t\t\t\t// \t\t\t\t}\n\t\t\t\t// \t\t\t}\n\n\t\t\t\t// \t\t\thierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { svgGot.setPos(startPoint.x, startPoint.y, false); });\n\t\t\t\t// \t\t});\n\n\t\t\t\t// \t\t(<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n\t\t\t\t// \t\t\tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t\t\t// \t\t});\n\t\t\t\t// \t}\n\t\t\t\t// \telse {\n\t\t\t\t// \t\tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t\t\t// \t}\n\n\t\t\t\t// }\n\t\t\t\t// else {\n\t\t\t\t// \tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t\t\t// }\n\n\t\t\t});\n\n\t\tsvgDragHandler(d3.selectAll(\".svg-got-body-rect[data-inherited=false],.svg-got-label-text[data-inherited=false],.svg-got-header-rect[data-inherited=false]\"));\n\t}\n\n\tpublic findGeoObjectTypeByCode(code: string): GeoObjectType {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; ++i) {\n\t\t\tlet got: GeoObjectType = this.geoObjectTypes[i];\n\n\t\t\tif (got.code === code) {\n\t\t\t\treturn got;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findHierarchyByCode(code: string): HierarchyType {\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet ht: HierarchyType = this.hierarchies[i];\n\n\t\t\tif (ht.code === code) {\n\t\t\t\treturn ht;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic findOrganizationByCode(code: string): Organization {\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      if (org.code === code) {\n        return org;\n      }\n    }\n  }\n\n\tprivate addChild(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): void {\n\t\tthis.hierarchyService.addChildToHierarchy(hierarchyCode, parentGeoObjectTypeCode, childGeoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tlet got = this.findGeoObjectTypeByCode(childGeoObjectTypeCode);\n\n\t\t\tlet index = null;\n\t\t\tfor (let i = 0; i < got.relatedHierarchies.length; ++i) {\n\t\t\t\tif (got.relatedHierarchies[i] === hierarchyCode) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index == null) {\n\t\t\t\tgot.relatedHierarchies.push(hierarchyCode);\n\t\t\t}\n\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate insertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): void {\n\t\tthis.hierarchyService.insertBetweenTypes(hierarchyCode, parentGeoObjectTypeCode, middleGeoObjectTypeCode, youngestGeoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tisRA(): boolean {\n\t\treturn this.authService.isRA();\n\t}\n\n\tisOrganizationRA(orgCode: string, dropZone: boolean = false): boolean {\n\t\treturn this.isSRA || this.authService.isOrganizationRA(orgCode);\n\t}\n\n\tgetTypesByOrg(org: Organization): GeoObjectType[] {\n\t\tlet orgTypes: GeoObjectType[] = [];\n\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; ++i) {\n\t\t\tlet geoObjectType: GeoObjectType = this.geoObjectTypes[i];\n\n\t\t\tif (geoObjectType.organizationCode === org.code) {\n\t\t\t\torgTypes.push(geoObjectType);\n\t\t\t}\n\t\t}\n\n\t\treturn orgTypes;\n\t}\n\n\tgetHierarchiesByOrg(org: Organization): HierarchyType[] {\n\t\tlet orgHierarchies: HierarchyType[] = [];\n\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet hierarchy: HierarchyType = this.hierarchies[i];\n\n\t\t\tif (hierarchy.organizationCode === org.code) {\n\t\t\t\torgHierarchies.push(hierarchy);\n\t\t\t}\n\t\t}\n\n\t\treturn orgHierarchies;\n\t}\n\n\tpublic refreshAll(desiredHierarchy: HierarchyType) {\n\n\t\t// Clear the types to then refresh\n\t\tthis.geoObjectTypes = [];\n\n\t\tthis.registryService.init().then(response => {\n\t\t\tthis.localizeService.setLocales(response.locales);\n\n\t\t\tthis.setGeoObjectTypes(response.types);\n\n\t\t\tthis.organizations = response.organizations;\n\n\t\t\tthis.organizations.forEach(org => {\n\t\t\t\tif (this.isOrganizationRA(org.code)) {\n\t\t\t\t\tthis.userOrganization = org.code;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(\"ROOT\");\n\t\t\tif (pos) {\n\t\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t}\n\n\t\t\tthis.setHierarchies(response.hierarchies);\n\n\t\t\tthis.setNodesOnInit(desiredHierarchy);\n\n\t\t\tthis.updateViewDatastructures();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic setGeoObjectTypes(types: GeoObjectType[]): void {\n\n\t\t// Set group parent types\n\t\tthis.setAbstractTypes(types);\n\n\t\t// Set GeoObjectTypes that aren't part of a group.\n\t\ttypes.forEach(type => {\n\t\t\tif (!type.isAbstract) {\n\t\t\t\tif (!type.superTypeCode) {\n\t\t\t\t\tthis.geoObjectTypes.push(type);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Sort aphabetically because all other types to add will be children in a group.\n\t\tthis.geoObjectTypes.sort((a, b) => {\n\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\telse return 0;\n\t\t});\n\n\t\t// Add group children\n\t\ttypes.forEach(type => {\n\t\t\tif (!type.isAbstract) {\n\t\t\t\tif (type.superTypeCode && type.superTypeCode.length > 0) {\n\n\t\t\t\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\t\t\t\tlet setType = this.geoObjectTypes[i];\n\t\t\t\t\t\tif (type.superTypeCode === setType.code) {\n\t\t\t\t\t\t\tthis.geoObjectTypes.splice(i + 1, 0, type);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tprivate setAbstractTypes(types: GeoObjectType[]): void {\n\t\ttypes.forEach(type => {\n\t\t\tif (type.isAbstract) {\n\t\t\t\tthis.geoObjectTypes.push(type);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic updateViewDatastructures(): void {\n\t\tthis.hierarchiesByOrg = [];\n\t\tthis.typesByOrg = [];\n\n\t\tfor (let i = 0; i < this.organizations.length; ++i) {\n\t\t\tlet org: Organization = this.organizations[i];\n\n\t\t\tthis.hierarchiesByOrg.push({ org: org, hierarchies: this.getHierarchiesByOrg(org) });\n\t\t\tthis.typesByOrg.push({ org: org, types: this.getTypesByOrg(org) });\n\t\t}\n\n\t\tthis.geoObjectTypes.forEach((got: GeoObjectType) => {\n\t\t\tgot.canDrag = this.calculateCanDrag(got);\n\t\t\tgot.relatedHierarchies = this.calculateRelatedHierarchies(got);\n\t\t});\n\n\t\tthis.onFilterChange();\n\t}\n\n\tpublic excludeHierarchyTypeDeletes(hierarchy: HierarchyType) {\n\t\treturn (this.hierarchyTypeDeleteExclusions.indexOf(hierarchy.code) !== -1);\n\t}\n\n\tpublic excludeGeoObjectTypeDeletes(geoObjectType: GeoObjectType) {\n\t\treturn (this.geoObjectTypeDeleteExclusions.indexOf(geoObjectType.code) !== -1);\n\t}\n\n\tprivate setNodesOnInit(desiredHierarchy: HierarchyType): void {\n\n\t\tlet index = -1;\n\n\t\tif (desiredHierarchy != null) {\n\t\t\tindex = this.hierarchies.findIndex(h => h.code === desiredHierarchy.code);\n\t\t}\n\t\telse if (this.hierarchies.length > 0) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tif (index > -1) {\n\t\t\tconst hierarchy = this.hierarchies[index];\n\n\t\t\tthis.setCurrentHierarchy(hierarchy);\n\n\t\t\tthis.renderTree();\n\t\t}\n\t}\n\n\tprivate getHierarchy(hierarchyId: string): HierarchyType {\n\t\tlet target: HierarchyType = null;\n\t\tthis.hierarchies.forEach(hierarchy => {\n\t\t\tif (hierarchyId === hierarchy.code) {\n\t\t\t\ttarget = hierarchy;\n\t\t\t}\n\t\t});\n\n\t\treturn target;\n\t}\n\n\tprivate setHierarchies(data: HierarchyType[]): void {\n\t\tlet hierarchies: HierarchyType[] = [];\n\t\tdata.forEach((hierarchyType, index) => {\n\n\t\t\tif (hierarchyType.rootGeoObjectTypes.length > 0) {\n\t\t\t\thierarchyType.rootGeoObjectTypes.forEach(rootGeoObjectType => {\n\t\t\t\t\tthis.processHierarchyNodes(rootGeoObjectType);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\thierarchies.push(hierarchyType);\n\n\t\t});\n\n\t\tthis.hierarchies = hierarchies\n\n\t\tthis.hierarchies.sort((a, b) => {\n\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\telse return 0;\n\t\t});\n\t}\n\n\tprivate processHierarchyNodes(node: HierarchyNode) {\n\t\tif (node != null) {\n\t\t\tnode.label = this.getHierarchyLabel(node.geoObjectType);\n\n\t\t\tnode.children.forEach(child => {\n\t\t\t\tthis.processHierarchyNodes(child);\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate getHierarchyLabel(geoObjectTypeCode: string): string {\n\t\tlet label: string = null;\n\t\tthis.geoObjectTypes.forEach(function(gOT) {\n\t\t\tif (gOT.code === geoObjectTypeCode) {\n\t\t\t\tlabel = gOT.label.localizedValue;\n\t\t\t}\n\t\t});\n\n\t\treturn label;\n\t}\n\n\tpublic handleOnMenu(node: any, $event: any): void {\n\t\tif (this.isOrganizationRA(this.currentHierarchy.organizationCode)) {\n\t\t\tthis.contextMenuService.show.next({\n\t\t\t\tcontextMenu: (node.data.childType !== null ? this.nodeMenuComponent : this.leafMenuComponent),\n\t\t\t\tevent: $event,\n\t\t\t\titem: node,\n\t\t\t});\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t}\n\t\telse {\n\t\t\t$event.preventDefault();\n\t\t\t$event.stopPropagation();\n\t\t}\n\t}\n\n\tpublic treeNodeOnClick(node: any, $event: any): void {\n\n\t\tnode.treeModel.setFocusedNode(node);\n\n\t\tif (node.treeModel.isExpanded(node)) {\n\t\t\tnode.collapse();\n\t\t}\n\t\telse {\n\t\t\tnode.treeModel.expandAll();\n\t\t}\n\t}\n\n\tpublic hierarchyOnClick(event: any, item: HierarchyType) {\n\t\tthis.setCurrentHierarchy(item);\n\t\tthis.renderTree();\n\t}\n\n\tpublic createHierarchy(): void {\n\t\tthis.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'upload-modal'\n\t\t});\n\n\t\t(<CreateHierarchyTypeModalComponent>this.bsModalRef.content).onHierarchytTypeCreate.subscribe(data => {\n\n\t\t\tthis.hierarchies.push(data);\n\n\t\t\tthis.hierarchies.sort((a: HierarchyType, b: HierarchyType) => {\n\t\t\t\tvar nameA = a.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n\t\t\t\tvar nameB = b.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n\n\t\t\t\tif (nameA < nameB) {\n\t\t\t\t\treturn -1; //nameA comes first\n\t\t\t\t}\n\n\t\t\t\tif (nameA > nameB) {\n\t\t\t\t\treturn 1; // nameB comes first\n\t\t\t\t}\n\n\t\t\t\treturn 0;  // names must be equal\n\t\t\t});\n\n\t\t\tthis.updateViewDatastructures();\n\t\t});\n\t}\n\n\tpublic deleteHierarchyType(obj: HierarchyType): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.data = obj.code;\n\t\tthis.bsModalRef.content.type = \"DANGER\";\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.removeHierarchyType(data);\n\t\t});\n\t}\n\n\tpublic editHierarchyType(obj: HierarchyType, readOnly: boolean): void {\n\n\t\tthis.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'upload-modal'\n\t\t});\n\t\tthis.bsModalRef.content.edit = true;\n\t\tthis.bsModalRef.content.readOnly = readOnly;\n\t\tthis.bsModalRef.content.hierarchyType = obj;\n\t\tthis.bsModalRef.content.onHierarchytTypeCreate.subscribe(data => {\n\t\t\tlet pos = this.getHierarchyTypePosition(data.code);\n\n\t\t\tthis.hierarchies[pos].label = data.label;\n\t\t\tthis.hierarchies[pos].description = data.description;\n\t\t\tthis.hierarchies[pos].progress = data.progress;\n\t\t\tthis.hierarchies[pos].acknowledgement = data.acknowledgement;\n\t\t\tthis.hierarchies[pos].disclaimer = data.disclaimer;\n\t\t\tthis.hierarchies[pos].useConstraints = data.useConstraints;\n\t\t\tthis.hierarchies[pos].accessConstraints = data.accessConstraints;\n\t\t\tthis.hierarchies[pos].contact = data.contact;\n\t\t\tthis.hierarchies[pos].phoneNumber = data.phoneNumber;\n\t\t\tthis.hierarchies[pos].email = data.email;\n\n\t\t\tthis.updateViewDatastructures();\n\n\t\t\tif (this.currentHierarchy.code === data.code) {\n\t\t\t\tthis.setCurrentHierarchy(this.hierarchies[pos]);\n\n\t\t\t\tthis.renderTree();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetCurrentHierarchy(hierarchyType: HierarchyType): void {\n\t\tthis.currentHierarchy = hierarchyType;\n\t}\n\n\tisPrimaryHierarchy(hierarchy: HierarchyType): boolean {\n\t\t// return hierarchy.isPrimary;\n\t\treturn hierarchy.code === this.currentHierarchy.code;\n\t}\n\n\tpublic removeHierarchyType(code: string): void {\n\t\tthis.hierarchyService.deleteHierarchyType(code).then(response => {\n\n\t\t\tlet pos = this.getHierarchyTypePosition(code);\n\t\t\tthis.hierarchies.splice(pos, 1);\n\t\t\tthis.updateViewDatastructures();\n\n\t\t\tif (this.hierarchies.length > 0) {\n\t\t\t\tthis.setCurrentHierarchy(this.hierarchies[0]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.currentHierarchy = null;\n\t\t\t}\n\n\t\t\tthis.renderTree();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic createGeoObjectType(groupSuperType: GeoObjectType, isAbstract: boolean, org: Organization): void {\n\t\tthis.bsModalRef = this.modalService.show(CreateGeoObjTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'upload-modal'\n\t\t});\n\t\tthis.bsModalRef.content.init(org, this.geoObjectTypes, groupSuperType, isAbstract);\n\n\t\tthis.bsModalRef.content.onGeoObjTypeCreate.subscribe(data => {\n\n\t\t\tdata.relatedHierarchies = this.calculateRelatedHierarchies(data);\n\n\t\t\tthis.refreshAll(this.currentHierarchy);\n\n\t\t});\n\t}\n\n\tpublic deleteGeoObjectType(obj: GeoObjectType): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.data = obj.code;\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.removeGeoObjectType(data);\n\t\t});\n\t}\n\n\tpublic removeGeoObjectType(code: string, errCallback: (err: HttpErrorResponse) => void = null): void {\n\t\tthis.registryService.deleteGeoObjectType(code).then(response => {\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(code);\n\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t\n\t\t\tthis.refreshAll(this.currentHierarchy);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tif (errCallback != null) {\n\t\t\t\terrCallback(err);\n\t\t\t}\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic manageGeoObjectType(geoObjectType: GeoObjectType, readOnly: boolean): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ManageGeoObjectTypeModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'manage-geoobjecttype-modal'\n\t\t});\n\n\t\tgeoObjectType.attributes.sort((a, b) => {\n\t\t\tif (a.label.localizedValue < b.label.localizedValue) return -1;\n\t\t\telse if (a.label.localizedValue > b.label.localizedValue) return 1;\n\t\t\telse return 0;\n\t\t});\n\t\tthis.bsModalRef.content.geoObjectType = geoObjectType;\n\t\tthis.bsModalRef.content.readOnly = readOnly;\n\n\t\t(<ManageGeoObjectTypeModalComponent>this.bsModalRef.content).onGeoObjectTypeSubmitted.subscribe(data => {\n\n\t\t\tif (data.isAbstract) {\n\t\t\t\tthis.refreshAll(this.currentHierarchy);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst position = this.getGeoObjectTypePosition(data.code);\n\n\t\t\t\tif (position !== -1) {\n\t\t\t\t\tthis.geoObjectTypes[position] = data;\n\t\t\t\t}\n\n\t\t\t\t// Update all of the hierarchies for the new geo object type\n\t\t\t\tthis.updateViewDatastructures();\n\n\t\t\t\tthis.hierarchies.forEach((hierarchyType: HierarchyType) => {\n\t\t\t\t\tthis.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n\t\t\t\t});\n\n\t\t\t\t// Update the current hierarchy view\n\t\t\t\tif (this.currentHierarchy != null) {\n\t\t\t\t\tthis.processHierarchyNodes(this.currentHierarchy.rootGeoObjectTypes[0]);\n\t\t\t\t}\n\n\t\t\t\tthis.renderTree();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getHierarchyTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.hierarchies.length; i++) {\n\t\t\tlet obj = this.hierarchies[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getGeoObjectTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\tlet obj = this.geoObjectTypes[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic refreshPrimaryHierarchy(hierarchyType: HierarchyType) {\n\t\tthis.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n\n\t\tfor (let i = 0; i < this.hierarchies.length; ++i) {\n\t\t\tlet hierarchy = this.hierarchies[i];\n\n\t\t\tif (hierarchy.code === hierarchyType.code) {\n\t\t\t\tthis.hierarchies[i] = hierarchyType;\n\n\t\t\t\tthis.setCurrentHierarchy(hierarchyType);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateViewDatastructures();\n\n\t\tthis.renderTree();\n\t}\n\n\tpublic removeFromHierarchy(parentGotCode, gotCode, errCallback: (err: HttpErrorResponse) => void = null): void {\n\t\tconst that = this;\n\n\t\tthis.hierarchyService.removeFromHierarchy(this.currentHierarchy.code, parentGotCode, gotCode).then(hierarchyType => {\n\n\t\t\tlet got = that.findGeoObjectTypeByCode(gotCode);\n\n\t\t\tlet index = null;\n\t\t\tfor (let i = 0; i < got.relatedHierarchies.length; ++i) {\n\t\t\t\tif (got.relatedHierarchies[i] === hierarchyType.code) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != null) {\n\t\t\t\tgot.relatedHierarchies.splice(index, 1);\n\t\t\t}\n\n\t\t\tthat.refreshPrimaryHierarchy(hierarchyType);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tif (errCallback != null) {\n\t\t\t\terrCallback(err);\n\t\t\t}\n\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic isActive(item: HierarchyType) {\n\t\treturn this.currentHierarchy === item;\n\t};\n\n\tonFilterChange(): void {\n\t\tconst label = this.filter.toLowerCase();\n\n\t\tthis.filteredHierarchiesByOrg = [];\n\t\tthis.filteredTypesByOrg = [];\n\n\t\tthis.hierarchiesByOrg.forEach((item: { org: Organization, hierarchies: HierarchyType[] }) => {\n\n\t\t\tconst filtered = item.hierarchies.filter((hierarchy: HierarchyType) => {\n\t\t\t\tconst index = hierarchy.label.localizedValue.toLowerCase().indexOf(label);\n\n\t\t\t\treturn (index !== -1);\n\t\t\t});\n\n\t\t\tthis.filteredHierarchiesByOrg.push({ org: item.org, hierarchies: filtered });\n\t\t});\n\n\t\tthis.typesByOrg.forEach((item: { org: Organization, types: GeoObjectType[] }) => {\n\n\t\t\tconst filtered = item.types.filter((type: GeoObjectType) => {\n\t\t\t\tconst index = type.label.localizedValue.toLowerCase().indexOf(label);\n\n\t\t\t\treturn (index !== -1);\n\t\t\t});\n\n\t\t\tthis.filteredTypesByOrg.push({ org: item.org, types: filtered });\n\t\t});\n\n\t\tsetTimeout(() => { this.registerDragHandlers(); }, 500);\n\t}\n\n\thandleInheritHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string) {\n\t\tthis.hierarchyService.setInheritedHierarchy(hierarchyTypeCode, inheritedHierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\thandleUninheritHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string) {\n\t\tthis.hierarchyService.removeInheritedHierarchy(hierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n\t\t\tthis.refreshPrimaryHierarchy(ht);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div class=\"new-admin-design-main\" style=\"overflow-y:hidden;\">\n\t<cgr-header></cgr-header>\n\n\t<loading-bar></loading-bar>\n\n\t<div id=\"app-container\" class=\"container-fluid\">\n\n\t\t<!--   <h2> <localize key=\"hierarchy.management.title\"></localize> </h2> -->\n\t\t<div class=\"row\">\n\n\t\t\t<nav class=\"col-md-3 hierarchy-sidebar\">\n\n\t\t\t\t<div class=\"row\" style=\"padding: 5px 5px;\">\n\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" #searchInput\n\t\t\t\t\t\t\t[placeholder]=\"'hierarchy.sidebar.searchAll' | localize\" [(ngModel)]=\"filter\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<accordion [isAnimated]=\"true\" [closeOthers]=\"false\">\n\t\t\t\t\t<accordion-group [panelClass]=\"'hierarchy-sidebar-content'\" style=\"border-radius: 0;\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span class=\"\" style=\"color:white;\">\n\t\t\t\t\t\t\t\t<i style=\"color:white;margin-right:10px;\" class=\"fa fa-circle\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.geoObjectTypes\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let typeByOrg of filteredTypesByOrg;\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{typeByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || typeByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createGeoObjectType(null, false, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<i style=\"color:#6BA542;\" class=\"fa fa-plus\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newGeoObjectType\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n                                        \n                                        <button (click)=\"createGeoObjectType(null, true, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n                                            style=\"margin-bottom:20px;margin-left:10px;min-width:45%;\">\n                                            <i style=\"color:#6BA542;\" class=\"fa fa-plus\"></i>\n                                            <localize key=\"hierarchies.add.group.button.label\"></localize>\n                                        </button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li class=\"list-group-item got-li-item\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-superTypeCode]=\"(type.superTypeCode && type.superTypeCode.length > 0) ? type.superTypeCode : null\"\n\t\t\t\t\t\t\t\t\t                  *ngFor=\"let type of typeByOrg.types\" [id]=\"type.code\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-canDrag]=\"type.canDrag\"\n                                    [ngClass]=\"{'got-group-parent' : (type.isAbstract), 'got-group-child' : type.superTypeCode && type.superTypeCode.length > 0}\" >\n\t\t\t\t\t\t\t\t\t\t{{type.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n                                            \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"!excludeGeoObjectTypeDeletes(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteGeoObjectType(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\">\n                                            </i>\n                                                \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\">\n                                            </i>\n                                            \n                                            <i *ngIf=\"(type.isAbstract)\" class=\"fa fa-plus clickable pull-right\"\n                                                (click)=\"createGeoObjectType(type, false, typeByOrg.org)\"\n                                                title=\"add\">\n                                            </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t\t<accordion-group [isOpen]='true' class=\"sidebar-section\" style=\"border-radius: 0;\" [panelClass]=\"'hierarchy-sidebar-content'\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i style=\"color:white;\" class=\"fa fa-sitemap\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.hierarchies\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let hierarchyByOrg of filteredHierarchiesByOrg\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{hierarchyByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || hierarchyByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createHierarchy()\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<i style=\"color:#369c00;\" class=\"fa fa-plus\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newHierarchy\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li *ngFor=\"let hierarchy of hierarchyByOrg.hierarchies;\" [id]=\"hierarchy.code\"\n\t\t\t\t\t\t\t\t\t\tclass=\"list-group-item hier-li-item clickable\"\n\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'primary': (currentHierarchy != null && hierarchy.code === currentHierarchy.code), 'active': isActive(hierarchy)}\"\n\t\t\t\t\t\t\t\t\t\t(click)=\"hierarchyOnClick($event,hierarchy)\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i> {{hierarchy.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i *ngIf=\"!excludeHierarchyTypeDeletes(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteHierarchyType(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t</accordion>\n\t\t\t</nav>\n\n\t\t\t<div class=\"col-md-9 hierarchy-content\">\n\t\t\t\t<div id=\"overflow-div\">\n\n\t\t\t\t\t<div *ngIf=\"currentHierarchy != null && isOrganizationRA(currentHierarchy.organizationCode, true) && (currentHierarchy.rootGeoObjectTypes == null || currentHierarchy.rootGeoObjectTypes.length == 0)\"\n\t\t\t\t\t\tid=\"emptyHierarchyDropzone\" class=\"drop-box-container\">\n\t\t\t\t\t\t<div class=\"hierarchy-drop-box\">\n\t\t\t\t\t\t\t<div class=\"inner-drop-box\">\n\t\t\t\t\t\t\t\t<p class=\"upload-text\">\n\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.content.dragGotToHierarchy\"></localize>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"svgHolder\">\n\t\t\t\t\t\t<!-- <svg id=\"graph\" style=\"width:1200px; height:750px\"></svg> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"NodeTooltip\" class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-form\">\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                      <label>\n                        <localize key=\"hierarchy.nodeTooltip.hierarchy\"></localize>\n                      </label>\n                    </div>\n                    <div class=\"holder\">\n                      <label id=\"hierarchyLabel\"></label>\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\t\t\t\t\t<!-- \n\t      <div class=\"col-md-4\">\n\t        <h3> \n\t            <localize key=\"hierarchy.current.management.panel.title\"></localize> \n\t            <span *ngIf=\"currentHierarchy\"> {{currentHierarchy.label.localizedValue}}</span>\n\t        </h3>\n\t        <hr>\n\t        <div *ngIf=\"nodes.length > 0\" class=\"tree\">\n\t          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n\t        </div>\n\t        <div *ngIf=\"currentHierarchy && nodes.length === 0\">\n\t          <div>\n\t            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"isRA()\" (click)=\"addChildAndRootToHierarchy()\"><localize key=\"hierarchy.current.management.panel.button.add\"></localize></button>\n\t          </div>\n\t        </div>\n\t      </div>\n\t      -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { ManageGeoObjectTypeModalState } from '@registry/model/registry';\r\n\r\n@Injectable()\r\nexport class GeoObjectTypeManagementService {\r\n\r\n\tmodalState: ManageGeoObjectTypeModalState;\r\n\tprivate modalStateChangedSource = new Subject<ManageGeoObjectTypeModalState>();\r\n\tmodalStepChange = this.modalStateChangedSource.asObservable();\r\n\r\n\tconstructor() { }\r\n\r\n\tpublic getModalState(): ManageGeoObjectTypeModalState {\r\n\t\treturn this.modalState;\r\n\t}\r\n\r\n\tpublic setModalState(state: ManageGeoObjectTypeModalState): void {\r\n\t\tthis.modalState = state;\r\n\r\n\t\tthis.modalStateChangedSource.next(this.modalState);\r\n\t}\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { TreeEntity } from '@registry/model/registry';\nimport { EventService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HierarchyService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetHierarchyTypes(types: any): Promise<HierarchyType[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('types', JSON.stringify(types));\n\n\t\treturn this.http\n\t\t\t.get<HierarchyType[]>(acp + '/cgr/hierarchytype/get-all', { params: params })\n\t\t\t.toPromise();\n\t}\n\n\taddChildToHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/add', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tinsertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/insertBetweenTypes', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, middleGeoObjectTypeCode: middleGeoObjectTypeCode, youngestGeoObjectTypeCode: youngestGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveFromHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/remove', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcreateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/create', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tupdateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/update', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tdeleteHierarchyType(code: string): Promise<TreeEntity> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<TreeEntity>(acp + '/cgr/hierarchytype/delete', { 'code': code }, { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise()\n\t}\n\n\tsetInheritedHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/setInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'inheritedHierarchyTypeCode': inheritedHierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveInheritedHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/removeInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","import { Component, OnInit, AfterViewInit, ElementRef, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { NgControl, Validators, FormBuilder } from '@angular/forms';\n\nimport { GeoObjectType, Attribute } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component({\n\tselector: 'attribute-input',\n\ttemplateUrl: './attribute-input.component.html',\n\tstyleUrls: ['./attribute-input.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms'))\n\t\t\t//   transition('show => none', animate('100ms'))\n\t\t])\n\t]\n})\nexport class AttributeInputComponent implements OnInit {\n\n\t@Input() disableCodeField: boolean = false;\n\t@Input() excludeDescription: boolean = false;\n\t@Input() isDecimal: boolean = false;\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() attributeChange = new EventEmitter<Attribute>();\n\tmessage: string = null;\n\n\tstate: string = 'none';\n\n\tconstructor(private hierarchyService: HierarchyService, private cdr: ChangeDetectorRef) {\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnChanges() {\n\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\ttoggleIsUnique(): void {\n\t\tthis.attribute.unique = !this.attribute.unique;\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.attribute.code) {\n\n\t\t\t// if code has a space\n\t\t\tif (this.attribute.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.attribute.label.localeValues[0].value.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal) {\n\t\t\t\tconsole.log(this.attribute);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isDecimal && (this.attribute.precision == null || this.attribute.precision.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal && (this.attribute.scale == null || this.attribute.scale.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","<div >\n  <div class=\"row-holder\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.code\"></localize>\n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input autofocus type=\"text\" [disabled]=\"disableCodeField\" [(ngModel)]=\"attribute.code\" name=\"code\" required geoObjectAttributeCode>\n      </span>\n    </div>\n  </div>\n\n  <localized-input [(value)]=\"attribute.label\" key=\"data.property.label.label\"></localized-input>\n  <localized-text *ngIf=\"!excludeDescription\" [(value)]=\"attribute.description\" key=\"data.property.label.description\"></localized-text>\n\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.length\"></localize>        \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.precision\" name=\"precision\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.decimal\"></localize>      \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.scale\" name=\"scale\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'publish-modal',\n\ttemplateUrl: './publish-modal.component.html',\n\tstyleUrls: []\n})\nexport class PublishModalComponent implements OnInit {\n\tmessage: string = null;\n\tmaster: any;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonMasterListChange: Subject<MasterList>;\n\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n    /*\n     * List of geo object types from the system\n     */\n\treadonly: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\tedit: boolean = false;\n\n\tisNew: boolean = false;\n\n\tconstructor(private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef, private authService: AuthService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.onMasterListChange = new Subject();\n\n\t\tif (this.master == null || !this.readonly) {\n\t\t\tthis.iService.listGeoObjectTypes(true).then(types => {\n\n\t\t\t\tvar myOrgTypes = [];\n\t\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\t\tconst orgCode = types[i].orgCode;\n\t\t\t\t\tconst typeCode = types[i].superTypeCode != null ? types[i].superTypeCode : types[i].code;\n\n\t\t\t\t\tif (this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.types = myOrgTypes;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.master = {\n\t\t\t\toid: null,\n\t\t\t\ttypeCode: '',\n\t\t\t\tdisplayLabel: this.lService.create(),\n\t\t\t\tcode: '',\n\t\t\t\trepresentativityDate: null,\n\t\t\t\tpublishingStartDate: null,\n\t\t\t\tpublishDate: null,\n\t\t\t\tlistAbstract: '',\n\t\t\t\tprocess: '',\n\t\t\t\tprogress: '',\n\t\t\t\taccessConstraints: '',\n\t\t\t\tuseConstraints: '',\n\t\t\t\tacknowledgements: '',\n\t\t\t\tdisclaimer: '',\n\t\t\t\tcontactName: '',\n\t\t\t\torganization: '',\n\t\t\t\ttelephoneNumber: '',\n\t\t\t\temail: '',\n\t\t\t\thierarchies: [],\n\t\t\t\tsubtypeHierarchies: [],\n\t\t\t\tleaf: false,\n\t\t\t\tfrequency: 'ANNUAL',\n\t\t\t\tisMaster: null,\n\t\t\t\tvisibility: null\n\t\t\t};\n\t\t}\n\t}\n\n\tinit(org: MasterListByOrg): void {\n\t\tthis.master.organization = org.oid;\n\t}\n\n\tgetIsDisabled(event): boolean {\n\t\tlet elClasses = event.target.classList;\n\t\tfor (let i = 0; i < elClasses.length; i++) {\n\t\t\tlet c = elClasses[i];\n\t\t\tif (c === 'disabled') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tonChange(): void {\n\n\t\tif (this.master.typeCode != null && this.master.typeCode.length > 0) {\n\t\t\tthis.iService.getHierarchiesForType(this.master.typeCode, true).then(hierarchies => {\n\t\t\t\tthis.master.hierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.iService.getHierarchiesForSubtypes(this.master.typeCode, false).then(hierarchies => {\n\t\t\t\tthis.master.subtypeHierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.master.hierarchies = [];\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.createMasterList(this.master).then(response => {\n\n\t\t\tthis.onMasterListChange.next(response);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCancel(): void {\n\t\tthis.bsModalRef.hide()\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n        <h1 *ngIf=\"isNew\">\n            <localize key=\"type.publish.title\"></localize>\n        </h1>\n        <h1 *ngIf=\"!isNew\">\n            {{master.displayLabel.localizedValue}}\n            <localize key=\"type.publish.view.title\"></localize>\n        </h1>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            <div class=\"row-holder\" *ngFor=\"let localeValue of master.displayLabel.localeValues\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.label\"></localize> \n                    <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && !(readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <select id=\"typeCode\" name=\"typeCode\" class=\"select-area\" [(ngModel)]=\"master.typeCode\" (change)=\"onChange($event)\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && (readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                  <input [(ngModel)]=\"master.typeLabel.localizedValue\" name=\"typeCode\" type=\"text\" class=\"form-control\" disabled />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.code\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.code\" name=\"code\" type=\"text\" class=\"form-control\" [disabled]=\"readonly || edit\" required />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.frequency\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"frequency\" [(ngModel)]=\"master.frequency\" [disabled]=\"readonly\" required #frequency=\"ngModel\">\n                        <option></option>\n                        <option value=\"ANNUAL\"><localize key=\"georegistry.frequency.annual\"></localize></option>\n                        <option value=\"BIANNUAL\"><localize key=\"georegistry.frequency.biannual\"></localize></option>\n                        <option value=\"QUARTER\"><localize key=\"georegistry.frequency.quarter\"></localize></option>\n                        <option value=\"MONTHLY\"><localize key=\"georegistry.frequency.monthly\"></localize></option>\n                    </select>                    \n                    <small *ngIf=\"(edit && frequency.dirty)\" class=\"form-text text-danger\"><localize key=\"masterlist.change.frequency\"></localize></small>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.publishingStartDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishingStartDate\" name=\"publishingStartDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"masterlist.visibility\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"visibility\" [(ngModel)]=\"master.visibility\" [disabled]=\"readonly\" required>\n                        <option></option>\n                        <option value=\"PUBLIC\"><localize key=\"masterlist.public\"></localize></option>                        \n                        <option value=\"PRIVATE\"><localize key=\"masterlist.private\"></localize></option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.ismaster\"></localize> </label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"row\">\n                        <div class=\"check-block\" style=\"margin: 10px;\">\n\n                            <div (click)=\"getIsDisabled($event) ? null : master.isMaster = !master.isMaster\" name=\"isMaster\" [ngClass]=\"{'chk-checked' : master.isMaster, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\">\n                                <span></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- RepresentativityDate adn publishDate are being removed from the form but not \n            the backend at this point because there's some discussion around the need for these\n            in the future.  - Justin Lewis Feb 27, 2020 -->\n            <!-- <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.representativityDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.representativityDate\" name=\"representativityDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.publishDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishDate\" name=\"publishDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div> -->\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.listAbstract\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.listAbstract\" name=\"listAbstract\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.process\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.process\" name=\"process\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.progress\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.progress\" name=\"progress\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.accessConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.useConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.acknowledgements\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.acknowledgements\" name=\"acknowledgements\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.disclaimer\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.disclaimer\" name=\"disclaimer\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.contact\"></localize>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.contactName\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.contactName\" name=\"contactName\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.telephoneNumber\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.telephoneNumber\" name=\"telephoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.email\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n\n            <div class=\"row-holder\" *ngIf=\"master.hierarchies.length > 0\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.parents\"></localize>\n                </div>\n            </div>\n\n            <div *ngFor=\"let hierarchy of master.hierarchies\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> {{hierarchy.label}} </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let parent of hierarchy.parents\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : parent.selected = !parent.selected\" [ngClass]=\"{'chk-checked' : parent.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{parent.label}}</label>\n\n                                <!-- <input [(ngModel)]=\"parent.selected\" [name]=\"hierarchy.code + parent.code\" type=\"checkbox\" class=\"form-check\" [disabled]=\"readonly || edit\"/> -->\n                            </div>\n                            <!-- <div class=\"holder\">{{parent.label}}</div> -->\n                            <!-- </div> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"master.subtypeHierarchies.length > 0\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> <localize key=\"masterlist.subtypeHierarchies\"></localize> </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let hierarchy of master.subtypeHierarchies\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : hierarchy.selected = !hierarchy.selected\" [ngClass]=\"{'chk-checked' : hierarchy.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{hierarchy.label}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize [key]=\"readonly ? 'io.back' : 'io.cancel'\"></localize>\n                        </button>\n                        <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                            <localize key=\"io.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n\tstate\n} from '@angular/animations';\n\nimport { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\n\nimport { ManageVersionsModalComponent } from './manage-versions-modal.component';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, AttributeTerm, AttributeDecimal, Term, PRESENT } from '@registry/model/registry';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'geoobject-shared-attribute-editor',\n\ttemplateUrl: './geoobject-shared-attribute-editor.component.html',\n\tstyleUrls: ['./geoobject-shared-attribute-editor.css'],\n\tproviders: [DatePipe],\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t])\n\t\t\t]),\n\t\t\ttrigger('slide', [\n//\t\t\t\ttransition(':enter', [\n//\t\t\t\t\tstyle({\n//\t\t\t\t\t\tleft: '100%'\n//\t\t\t\t\t}),\n//\t\t\t\t\tanimate('200ms')\n//\t\t\t\t]),\n//\t\t\t\ttransition(':leave', [\n//\t\t\t\t\tstyle({\n//\t\t\t\t\t\tright: '100%'\n//\t\t\t\t\t}),\n//\t\t\t\t\tanimate('200ms')\n//\t\t\t\t])\n\t\t\t\tstate('left', style({ left: 0 })),\n      \t\t\tstate('right', style({ left: '100%' })),\n      \t\t\ttransition('* => *', animate(200))\n\t\t\t])\n\t]]\n})\n\n/**\n * This component is shared between:\n * - crtable (create-update-geo-object action detail)\n * - change-request (for submitting change requests)\n * - master list geoobject editing widget\n * \n * Be wary of changing this component for one usecase and breaking other usecases!\n */\nexport class GeoObjectSharedAttributeEditorComponent implements OnInit, OnChanges {\n\t\n\tslide: string = \"\";\n\n\tprivate bsModalRef: BsModalRef;\n\t\n\t@Input() animate: boolean = false;\n\n    /*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\t@Input() preGeoObject: GeoObjectOverTime = null;\n\n\t/*\n * The state of the GeoObject being modified\n */\n\t@Input() postGeoObject: GeoObjectOverTime = null;\n\n\n\tcalculatedPreObject: any = {};\n\n\tcalculatedPostObject: any = {};\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\t@Input() attributeExcludes: string[] = [];\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() isNew: boolean = false;\n\n\t@Input() isEditingGeometries = false;\n\n\t@Input() isGeometryInlined = false;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Output() onManageVersion = new EventEmitter<Attribute>();\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() customEvent: boolean = false;\n\n\tmodifiedTermOption: Term = null;\n\tcurrentTermOption: Term = null;\n\tisValid: boolean = true;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\"];\n\n\t@ViewChild(\"attributeForm\") attributeForm;\n\n\tconstructor(private modalService: BsModalService, private lService: LocalizationService) {\n\n\t}\n\n\tngOnInit(): void {\n\n\t\tif (this.attributeExcludes != null) {\n\t\t\tthis.geoObjectAttributeExcludes.push.apply(this.geoObjectAttributeExcludes, this.attributeExcludes);\n\n\t\t\tif (!this.isGeometryInlined) {\n\t\t\t\tthis.geoObjectAttributeExcludes.push(\"geometry\");\n\t\t\t}\n\t\t}\n\n\t\tlet geomAttr = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeomAttr = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\t\tif (geomAttr == null) {\n\t\t\tlet geometry: Attribute = new Attribute(\"geometry\", \"geometry\", new LocalizedValue(\"Geometry\", null), new LocalizedValue(\"Geometry\", null), true, false, false, true);\n\t\t\tthis.geoObjectType.attributes.push(geometry);\n\t\t}\n\t\t\n\t\tif(this.animate){\n\t\t\tconsole.log(this.animate)\n\t\t\tthis.slide = \"left\"\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.attributeForm.statusChanges.subscribe(result => {\n\t\t\tthis.isValid = (result === \"VALID\" || result === \"DISABLED\");\n\n\t\t\tthis.valid.emit(this.isValid);\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['preGeoObject'] || changes['preGeoObject']) {\n\n\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\n\t\t\tif (this.postGeoObject == null) {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // Object.assign is a shallow copy. We want a deep copy.\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.postGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\t\t\t}\n\n\t\t\tthis.calculate();\n\t\t}\n\t\telse if (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): void {\n\t\tthis.calculatedPreObject = this.calculateCurrent(this.preGeoObject);\n\t\tthis.calculatedPostObject = this.calculateCurrent(this.postGeoObject);\n\n\t\tif (this.geometryEditor != null) {\n\t\t\tthis.geometryEditor.reload();\n\t\t}\n\t}\n\n\tcalculateCurrent(goot: GeoObjectOverTime): any {\n\t\tconst object = {};\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\tobject[attr.code] = null;\n\n\t\t\tif (attr.type === 'local') {\n\t\t\t\tobject[attr.code] =\n\t\t\t\t{\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: this.lService.create()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\tlet values = goot.attributes[attr.code].values;\n\n\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: JSON.parse(JSON.stringify(vot.value))\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value[0]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobject[attr.code] = goot.attributes[attr.code];\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.isChangeOverTime && object[attr.code] == null) {\n\t\t\t\tobject[attr.code] = {\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tformatDate(date: string): string {\n\t\tif (date === PRESENT) {\n\t\t\treturn this.lService.localize(\"changeovertime\", \"present\");\n\t\t}\n\n\t\treturn date;\n\t}\n\n\thandleChangeCode(e: any): void {\n\t\tthis.postGeoObject.attributes.code = this.calculatedPostObject['code'];\n\t\t\n\t\tthis.onChange.emit(this.postGeoObject);\n\t\t//        \n\t\t//        console.log(this.calculatedPostObject['code'])\n\t\t//        console.log(e)\n\t}\n\n\tonManageAttributeVersions(attribute: Attribute): void {\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(attribute);\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ManageVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\t// TODO: sending the properties like this is wrong\n\t\t\tthis.bsModalRef.content.geoObjectOverTime = this.postGeoObject;\n\t\t\tthis.bsModalRef.content.geoObjectType = this.geoObjectType;\n\t\t\tthis.bsModalRef.content.isNewGeoObject = this.isNew;\n\t\t\tthis.bsModalRef.content.attribute = attribute;\n\t\t\tthis.bsModalRef.content.onAttributeVersionChange.subscribe(versionObj => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t\tthis.bsModalRef.content.tfInit();\n\t\t}\n\t}\n\n\tonManageGeometryVersions(): void {\n\t\tlet geometry = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeometry = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\n\t\tthis.onManageAttributeVersions(geometry);\n\t}\n\n\tisDifferentText(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value.trim() !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tisDifferentValue(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tonSelectPropertyOption(event: any, option: any): void {\n\t\tthis.currentTermOption = JSON.parse(JSON.stringify(this.modifiedTermOption));\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn attrOpts;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisStatusChanged(post, pre) {\n\n\t\tif (pre != null && post == null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (pre == null || post == null || pre.length == 0 || post.length == 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar preCompare = pre;\n\t\tif (Array.isArray(pre)) {\n\t\t\tpreCompare = pre[0];\n\t\t}\n\n\t\tvar postCompare = post;\n\t\tif (Array.isArray(post)) {\n\t\t\tpostCompare = post[0];\n\t\t}\n\n\t\treturn preCompare !== postCompare;\n\t}\n\n\tgetTypeDefinition(key: string): string {\n\t\t// let attrs = this.geoObjectType.attributes;\n\n\t\t// attrs.attributes.forEach(attr => {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === key) {\n\t\t\t\treturn attr.type;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn this.isValid;\n\t}\n\n\tpublic getGeoObject(): any {\n\t\treturn this.postGeoObject;\n\n\t\t//        // The front-end uses the 'yyyy-mm-dd' date format. Our backend expects dates in epoch format.\n\t\t//        var submitGO = JSON.parse( JSON.stringify( this.postGeoObject ) );\n\t\t//        for ( var i = 0; i < this.geoObjectType.attributes.length; ++i ) {\n\t\t//            var attr = this.geoObjectType.attributes[i];\n\t\t//\n\t\t//            if ( attr.type === \"date\" && this.postGeoObject.properties[attr.code] != null ) {\n\t\t//                var parts = this.postGeoObject.properties[attr.code].split( '-' );\n\t\t//                var date = new Date( parts[0], parts[1] - 1, parts[2] );\n\t\t//\n\t\t//                submitGO.properties[attr.code] = date.getTime();\n\t\t//            }\n\t\t//        }\n\t\t//\n\t\t//        return submitGO;\n\t}\n}\n","<form class=\"modal-form\" name=\"geobject-shared-attribute-editor\" #attributeForm=\"ngForm\">\n  <fieldset>\n    <!-- <div class=\"col-md-12\"> -->\n    <div *ngIf=\"preGeoObject\">\n      <div *ngIf=\"!this.isEditingGeometries\" class=\"row\">\n        <!-- <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"change.request.geoobject.update.form.label\"></localize>\n                        </label>\n                    </div> -->\n        <div class=\"col-md-12\">\n          <span class=\"text\"></span>\n          <ul class=\"list-group\">\n            <li class=\"list-group-item\" style=\"text-align:left;border:none;padding:0;\" *ngFor=\"let attr of geoObjectType.attributes | geoObjectAttributeExcludesFilter:geoObjectAttributeExcludes\">\n\n              <div class=\"panel panel-default\">\n                <div class=\"panel-heading\">\n                  <h4 *ngIf=\"attr.code !== 'geometry'\" style=\"margin:0;\">\n\n                    <span *ngIf=\"attr.code === 'code'\"> \n                      <localize key=\"geoobject.code.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code === 'displayLabel'\"> \n                      <localize key=\"geoobject.displayLabel.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code !== 'code' && attr.code !== 'displayLabel'\"> {{attr.label.localizedValue}} </span> \n                    <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\" style=\"color:#BABABA;font-style:italic;\"> \n                      ({{calculatedPostObject[attr.code].startDate}} - {{calculatedPostObject[attr.code].endDate}}) \n                    </span>\n                  </h4>\n\n                  <h5 *ngIf=\"attr.code === 'geometry'\">\n                    <localize key=\"shared.attributes.attribute.geometry.label\"></localize>\n                    <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\"> \n                      ({{calculatedPostObject[attr.code].startDate}} - {{calculatedPostObject[attr.code].endDate}}) \n                    </span>\n                  </h5>\n\n                </div>\n\n                <div class=\"panel-body\">\n\n                  <div *ngIf=\"attr.code === 'code'\">\n                    <input *ngIf=\"postGeoObject\" type=\"text\" [(ngModel)]=\"calculatedPostObject[attr.code]\" (change)=\"handleChangeCode($event)\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" [disabled]=\"!isNew\" required>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'character' && attr.code !== 'code'\">\n                    <div class=\"input-group\">\n                      <input *ngIf=\"postGeoObject\" [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"text\" [ngModel]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon\">\n                        <i class=\"fa fa-pencil clickable\" (click)=\"onManageAttributeVersions(attr)\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentText(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'local'\">\n                    <ul class=\"list-group\" *ngIf=\"calculatedPostObject[attr.code].value != null\">\n                      <li class=\"list-group-item\" *ngFor=\"let localeValue of calculatedPostObject[attr.code].value.localeValues; let i = index\">\n                        <div class=\"panel panel-default\">\n                          <div class=\"panel-heading\">\n                            <h5><convert-key-label [key]=\"localeValue.locale\"></convert-key-label></h5>\n                          </div>\n\n                          <div class=\"panel-body\">\n\n                            <div class=\"input-group\">\n                              <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" [required]=\"localeValue.locale === 'defaultLocale'\" type=\"text\" [ngModel]=\"localeValue.value\" [name]=\"'mod-' + attr.code + '-' + localeValue.locale\" > \n                              <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                              </span>\n                            </div>\n\n\n                            <p class=\"warning-text\" *ngIf=\"!isNew && calculatedPreObject[attr.code].value != null && localeValue.value != null && localeValue.value.trim() !== calculatedPreObject[attr.code].value.localeValues[i].value\">\n                              <localize key=\"change.request.changed.value.prefix\"></localize>\n                              {{calculatedPreObject[attr.code].value.localeValues[i].value}}\n                            </p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'date'\">\n\n                    <div class=\"input-group\">\n                      <input type=\"date\" [ngClass]=\"{'input-group-read-only': readOnly}\" [ngModel]=\"calculatedPostObject[attr.code].value | date:'yyyy-MM-dd'\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value | date}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'boolean'\">\n                  \n\n                    <div class=\"input-group\" >\n                      <div [ngClass]=\"{'input-group-read-only': readOnly}\" class=\"radio-group\">\n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"calculatedPostObject[attr.code].value\" disabled [value]=\"true\" id=\"mod-{{attr.code}}-true\" name=\"mod-{{attr.code}}-true\"> \n                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                        </label> \n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"!calculatedPostObject[attr.code].value\" disabled [value]=\"false\" id=\"mod-{{attr.code}}-false\" name=\"mod-{{attr.code}}-false\"> \n                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                        </label> \n                      </div>\n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'float'\">\n\n                    <div class=\"input-group\">\n                      <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'integer'\">\n                  \n                    <div class=\"input-group\">\n                      <input [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" disabled id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'term'\">\n\n                    <div class=\"input-group\">\n                      <select [ngClass]=\"{'input-group-read-only': readOnly}\" id=\"mod-{{attr.code}}\" name=\"mod-term-{{attr.code}}\" class=\"select-area\" style=\"float: none;\" disabled [(ngModel)]=\"calculatedPostObject[attr.code].value\">\n                        <option value=\"\"></option>\n                        <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attr.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                      </select> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isStatusChanged(calculatedPostObject[attr.code].value, calculatedPreObject[attr.code].value)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'geometry' && this.isGeometryInlined\">\n                    <geoobject-editor-map \n                      #geometryEditor \n                      [geometryType]=\"this.geoObjectType.geometryType\" \n                      [readOnly]=\"true\"\n                      [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\"\n                      [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\" \n                      [bboxCode]=\"this.preGeoObject.attributes.code\"\n                      [bboxType]=\"this.geoObjectType.code\"\n                      (onClickEdit)=\"this.onManageGeometryVersions()\" \n                      [bboxDate]=\"this.forDate.toISOString().split('T')[0]\"> \n                    </geoobject-editor-map>\n                  </div>\n\n                  <!--                   <div *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"button-holder\" > -->\n                  <!--                     <button type=\"submit\" style=\"\" (click)=\"onManageAttributeVersions(attr)\" class=\"btn btn-primary\" role=\"button\"> -->\n                  <!--                       <localize key=\"changeovertime.manageVersions.button.label\"></localize> -->\n                  <!--                     </button> -->\n                  <!--                   </div> -->\n\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div *ngIf=\"this.isEditingGeometries && !this.isGeometryInlined\">\n        <!-- <div class=\"label-holder\">\n                     <label>\n                      <localize key=\"shared.attributes.attribute.geometry.label\"></localize>\n                     </label>\n                   </div> -->\n          <geoobject-editor-map \n            #geometryEditor\n            [geometryType]=\"this.geoObjectType.geometryType\"\n            [readOnly]=\"true\" \n            [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\"\n            [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"\n            [bboxCode]=\"this.preGeoObject.attributes.code\"\n            [bboxType]=\"this.geoObjectType.code\"\n            (onClickEdit)=\"this.onManageGeometryVersions()\"\n            [bboxDate]=\"this.forDate.toISOString().split('T')[0]\"\n          > </geoobject-editor-map>\n      </div>\n    </div>\n    <!-- </div> -->\n  </fieldset>\n</form>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-input',\n    templateUrl: './localized-input.component.html',\n    styleUrls: [],\n} )\nexport class LocalizedInputComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","<div class=\"row-holder\" *ngFor=\"let localeValue of value.localeValues\">\n  <div class=\"label-holder\">\n    <label>\n      <localize [key]=\"key\"></localize>\n      <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n    </label>\n  </div>\n  <div class=\"holder\">\n    <span class=\"text\">\n      <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"disabled\" [required]=\"localeValue.locale === 'defaultLocale'\">\n    </span>\n  </div>\n</div>\n","\nimport { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'simple-edit-control',\n\ttemplateUrl: './simple-edit-control.component.html',\n})\nexport class SimpleEditControl {\n\telRef: ElementRef\n\n\t@Output() editEmitter = new EventEmitter<void>();\n\n\t@Input() visible: boolean = true;\n\t@Input() save: boolean = false;\n\n\tconstructor(elRef: ElementRef) {\n\t\tthis.elRef = elRef;\n\t}\n\n\tonAdd(map): any {\n\t\t//    this.visible = true;\n\t\treturn this.elRef.nativeElement;\n\t}\n\n\tonRemove(map): void {\n\t\tthis.elRef.nativeElement.remove();\n\t}\n\n\tonClick(): void {\n\t\tthis.editEmitter.emit();\n\t}\n}\n","<div class=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\n  <button *ngIf=\"visible\" class=\"fa\" [ngClass]=\"{'fa-pencil-square-o':!save, 'fa-save':save}\" style=\"color: black; font-size: 18px;\" [title]=\"'changeovertime.manageVersions.button.label' | localize\" (click)=\"this.onClick();\"></button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\n\nimport { ChangeRequest, AbstractAction } from '@registry/model/crtable';\nimport { EventService } from '@shared/service';\nimport { GeoObject } from '@registry/model/registry';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ChangeRequestService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\t  getAllActions( requestId: string ): Promise<AbstractAction[]> {\n        let params: HttpParams = new HttpParams();\n\n        if ( requestId != null ) {\n            params = params.set( 'requestId', requestId );\n\t\t}\n\t\t\n        this.eventService.start();\n\n        return this.http\n            .get<AbstractAction[]>( acp + '/changerequest/getAllActions', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\n//    fetchData( cb: any, requestId: string ): Promise<HttpResponse> {\n//        let params: HttpParams = new HttpParams();\n//\n//        if ( requestId != null ) {\n//            params = params.set( 'requestId', requestId );\n//        }\n//\n//        this.eventService.start();\n//\n//        return this.http\n//            .get( acp + '/changerequest/getAllActions', { params: params } )\n//            .finally(() => {\n//                this.eventService.complete();\n//            } )\n//            .toPromise()\n//            .then( response => {\n//                cb( response.json() );\n//\n//                return response;\n//            } )\n//    }\n\n    applyAction( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyAction', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\tapplyActionStatusProperties( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyActionStatusProperties', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\t\n    lockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/lockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    unlockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/unlockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getAllRequests(filter: string): Promise<ChangeRequest[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\n\t\tparams = params.set('filter', filter );\n\n        return this.http.get<ChangeRequest[]>( acp + '/changerequest/get-all-requests', { params: params } )\n            .toPromise();\n    }\n\n    getRequestDetails( requestId: string ): Promise<ChangeRequest> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'requestId', requestId );\n\n        this.eventService.start();\n\n        return this.http.get<ChangeRequest>( acp + '/changerequest/get-request-details', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tconfirmChangeRequest( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/confirm-change-request', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    execute( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/execute-actions', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    rejectAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/reject-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    approveAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/approve-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    submitChangeRequest( actions: string ): Promise<GeoObject> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'actions', actions )\n\n        this.eventService.start();\n\n        return this.http.post<GeoObject>( acp + '/cgr/submitChangeRequest', {actions: actions}, { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ImportConfiguration, Synonym, Location, Term } from '@registry/model/io';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: string;\r\n\r\n@Injectable()\r\nexport class IOService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\timportSpreadsheet(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcancelImport(configuration: ImportConfiguration): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/cancel-import', JSON.stringify({ configuration: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\timportShapefile(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tlistGeoObjectTypes(includeAbstractTypes: boolean): Promise<{ label: string, code: string, orgCode: string, superTypeCode?: string }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('includeAbstractTypes', includeAbstractTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, orgCode: string }[]>(acp + '/cgr/geoobjecttype/list-types', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetTypeAncestors(code: string, hierarchyCode: string, includeInheritedTypes: boolean): Promise<Location[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\tparams = params.set('includeInheritedTypes', includeInheritedTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Location[]>(acp + '/cgr/geoobjecttype/get-ancestors', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForType(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForSubtypes(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-subtype-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, hierarchy: string): Promise<any> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = parent;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectSynonym(entityId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/geo-synonym/createGeoEntitySynonym', JSON.stringify({ entityId: entityId, label: label }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectSynonym(synonymId: string, vOid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geo-synonym/deleteGeoEntitySynonym', JSON.stringify({ synonymId: synonymId, vOid: vOid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetTermSuggestions(mdAttributeId: string, text: string, limit: string): Promise<{ text: string, data: any }[]> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('mdAttributeId', mdAttributeId);\r\n\t\tparams = params.set('text', text);\r\n\t\tparams = params.set('limit', limit);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ text: string, data: any }[]>(acp + '/uploader/getClassifierSuggestions', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTermSynonym(classifierId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ classifierId: classifierId, label: label });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/uploader/createClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteTermSynonym(synonymId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ synonymId: synonymId });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/uploader/deleteClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTerm(label: string, code: string, parentTermCode: string): Promise<Term> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { parentTermCode: parentTermCode, termJSON: { label: label, code: code } };\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tremoveTerm(parentTermCode: string, termCode: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '@shared/service';\n\nimport { AllLocaleInfo } from '@registry/model/localization-manager';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\n    getNewLocaleInfo(): Promise<AllLocaleInfo> {\n        return this.http\n            .get<AllLocaleInfo>( acp + '/localization/getNewLocaleInformation' )\n            .toPromise();\n    }\n\n    installLocale( language: string, country: string, variant: string ): Promise<void> {\n        let params: HttpParams = new HttpParams();\n\n        if ( language != null ) {\n            params = params.set( 'language', language );\n        }\n\n        if ( country != null ) {\n            params = params.set( 'country', country );\n        }\n\n        if ( variant != null ) {\n            params = params.set( 'variant', variant );\n        }\n\n        return this.http\n            .get<void>( acp + '/localization/installLocale', { params: params } )\n            .toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\nimport * as mapboxgl from 'mapbox-gl';\r\n\r\nimport { LocationInformation } from '@registry/model/location-manager';\r\nimport { EventService } from '@shared/service';\r\nimport { GeoObject } from '@registry/model/registry';\n\r\ndeclare var acp: any;\r\n\r\n@Injectable()\r\nexport class MapService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) {\r\n\t\t(mapboxgl as any).accessToken = 'pk.eyJ1IjoidGVycmFmcmFtZSIsImEiOiJjanZxNWE5bWkwazYwNGFtb3loOGxsbjR1In0.ZNEwT-pBnGookEb-BF_jQQ';\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\t// Initialize the mapbox-gl settings\r\n\t}\r\n\r\n\troots(typeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tif (typeCode != null) {\r\n\t\t\tparams = params.set('typeCode', typeCode);\r\n\t\t}\r\n\r\n\t\tif (hierarchyCode != null) {\r\n\t\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<LocationInformation>(acp + '/registrylocation/roots', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tselect(code: string, typeCode: string, childTypeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tif (childTypeCode != null) {\r\n\t\t\tparams = params.set('childTypeCode', childTypeCode);\r\n\t\t}\r\n\r\n\t\tif (hierarchyCode != null) {\r\n\t\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<LocationInformation>(acp + '/registrylocation/select', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsearch(text: string, date: string): Promise<{ type: string, features: GeoObject[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('text', text);\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ type: string, features: GeoObject[] }>(acp + '/registrylocation/search', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport {\n\tGeoObject, GeoObjectType, Attribute, Term, MasterList, MasterListVersion, ParentTreeNode,\r\n\tChildTreeNode, ValueOverTime, GeoObjectOverTime, HierarchyOverTime, ScheduledJob, PaginationPage, MasterListByOrg\n} from '@registry/model/registry';\r\n\r\nimport { HierarchyType } from '@registry/model/hierarchy';\r\nimport { Progress } from '@shared/model/progress';\r\n\r\nimport { Organization, OAuthServer } from '@shared/model/core';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class RegistryService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tinit(): Promise<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }> {\r\n\t\treturn this.http.get<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }>(acp + '/cgr/init')\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\t// param types: array of GeoObjectType codes. If empty array then all GeoObjectType objects are returned.\r\n\tgetGeoObjectTypes(types: string[], hierarchies: string[]): Promise<GeoObjectType[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\r\n\t\tif (types != null) {\r\n\t\t\tparams = params.set('types', JSON.stringify(types));\r\n\t\t}\r\n\r\n\t\tif (hierarchies != null) {\r\n\t\t\tparams = params.set('hierarchies', JSON.stringify(hierarchies));\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectType[]>(acp + '/cgr/geoobjecttype/get-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetParentGeoObjects(childId: string, childTypeCode: string, parentTypes: any, recursive: boolean, date: string): Promise<ParentTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('childId', childId)\r\n\t\tparams = params.set('childTypeCode', childTypeCode)\r\n\t\tparams = params.set('parentTypes', JSON.stringify(parentTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ParentTreeNode>(acp + '/cgr/geoobject/get-parent-geoobjects', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetChildGeoObjects(parentId: string, parentTypeCode: string, childrenTypes: any, recursive: boolean): Promise<ChildTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('parentId', parentId)\r\n\t\tparams = params.set('parentTypeCode', parentTypeCode)\r\n\t\tparams = params.set('childrenTypes', JSON.stringify(childrenTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ChildTreeNode>(acp + '/cgr/geoobject/getchildren', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tnewGeoObjectInstance(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectType(gtJSON: string): Promise<GeoObjectType> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/create', JSON.stringify({ 'gtJSON': gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateGeoObjectType(gtJSON: GeoObjectType): Promise<GeoObjectType> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/update', JSON.stringify({ \"gtJSON\": gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectType(code: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/delete', JSON.stringify({ code: code }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\taddAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/addattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/updateattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeType(geoObjTypeId: string, attributeName: string): Promise<boolean> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<boolean>(acp + '/cgr/geoobjecttype/deleteattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeName': attributeName }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\taddAttributeTermTypeOption(parentTermCode: string, term: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': term }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeTermTypeOption(parentTermCode: string, termJSON: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/updateterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': termJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeTermTypeOption(parentTermCode: string, termCode: string): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\t\r\n\tgetGeoObject(id: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('id', id)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBounds(code: string, typeCode: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBoundsAtDate(code: string, typeCode: string, date: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\t\tparams = params.set('date', date);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject-time/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectByCode(code: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForGeoObject(code: string, typeCode: string): Promise<HierarchyOverTime[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<HierarchyOverTime[]>(acp + '/cgr/geoobject/get-hierarchies-over-time', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, hierarchy: string, date: string): Promise<GeoObject> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = hierarchy;\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams.date = date;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestionsTypeAhead(text: string, type: string): Promise<GeoObject> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-active', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetCompletedScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-completed', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJob(historyId: string, pageSize: number, pageNumber: number, onlyUnresolved: boolean): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\t\tparams = params.set(\"onlyUnresolved\", onlyUnresolved.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-import-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetExportDetails(historyId: string, pageSize: number, pageNumber: number): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-export-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tresolveScheduledJob(historyId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/import-resolve', JSON.stringify({ historyId: historyId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tsubmitValidationResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/validation-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsubmitErrorResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/error-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterLists(): Promise<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }>(acp + '/master-list/list-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListHistory(oid: string, versionType: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('versionType', versionType);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetAllMasterListVersions(): Promise<MasterList[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList[]>(acp + '/master-list/list-all-versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListVersion(oid: string): Promise<MasterListVersion> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterListVersion>(acp + '/master-list/version', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetLocales(): Promise<string[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<string[]>(acp + '/localization/get-locales', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectOverTime(geoObjectCode: string, geoObjectTypeCode: string): Promise<GeoObjectOverTime> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\t// let params: HttpParams = new HttpParams();\r\n\t\t// params = params.set( 'geoObjectCode', geoObjectCode );\r\n\t\t// params = params.set( 'geoObjectTypeCode', geoObjectTypeCode );\r\n\t\t// params = params.set( 'attributeName', attributeName );\r\n\r\n\t\t// return this.http\r\n\t\t//     .get<ValueOverTime[]>( acp + '/cgr/geoobject/getAttributeVersions', { params: params } )\r\n\t\t//     .toPromise();\r\n\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', geoObjectCode);\r\n\t\tparams = params.set('typeCode', geoObjectTypeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectOverTime>(acp + '/cgr/geoobject-time/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\r\n\t}\r\n\r\n\tnewGeoObjectOverTime(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject-time/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n\r\n\r\n\t// getAttributeVersions( geoObjectCode: string, geoObjectTypeCode: string, attributeName: string ): any[] {\r\n\t//     let test =[\r\n\t//         {\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":{\"localeValues\":[\r\n\t//             {\"locale\":\"defaultLocale\",\"value\":\"Anlong Veaeng\"}]}}\r\n\t//     ]\r\n\r\n\t//     // let test = [{\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":\"test\"}];\r\n\r\n\t//     return test;\r\n\t// }\r\n\r\n\r\n\tsetAttributeVersions(geoObjectCode: string, geoObjectTypeCode: string, attributeName: string, collection: ValueOverTime[]): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\tgeoObjectCode: geoObjectCode,\r\n\t\t\tgeoObjectTypeCode: geoObjectTypeCode,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tcollection: collection\r\n\r\n\t\t} as any;\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Response>(acp + '/cgr/geoobject/setAttributeVersions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterList(list: MasterList): Promise<MasterList> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/master-list/create', JSON.stringify({ list: list }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterListVersion(oid: string, forDate: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/create-version', JSON.stringify({ oid: oid, forDate: forDate }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishMasterListVersions(oid: string): Promise<{ job: string }> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ job: string }>(acp + '/master-list/publish-versions', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteMasterList(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tdeleteMasterListVersion(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove-version', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tpublishMasterList(oid: string): Observable<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http.post<MasterListVersion>(acp + '/master-list/publish', JSON.stringify({ oid: oid }), { headers: headers });\r\n\t}\r\n\r\n\tgetMasterList(oid: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n    /*\r\n     * Not really part of the RegistryService\r\n     */\r\n\tapplyGeoObjectEdit(parentTreeNode: HierarchyOverTime[], geoObject: GeoObjectOverTime, isNew: boolean, masterListId: string, notes: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { geoObject: geoObject, isNew: isNew, masterListId: masterListId };\r\n\r\n\t\tif (parentTreeNode != null) {\r\n\t\t\tparams['parentTreeNode'] = parentTreeNode;\r\n\t\t}\r\n\t\tif (notes != null) {\r\n\t\t\tparams['notes'] = notes;\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geoobject-editor/apply', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdata(oid: string, pageNumber: number, pageSize: number, filter: { attribute: string, value: string }[], sort: { attribute: string, order: string }): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tsort: sort\r\n\t\t} as any;\r\n\r\n\t\tif (pageNumber != null) {\r\n\t\t\tparams.pageNumber = pageNumber;\r\n\t\t}\r\n\r\n\t\tif (pageSize != null) {\r\n\t\t\tparams.pageSize = pageSize;\r\n\t\t}\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/master-list/data', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tvalues(oid: string, value: string, attributeName: string, valueAttribute: string, filter: { attribute: string, value: string }[]): Promise<{ label: string, value: string }[]> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tvalueAttribute: valueAttribute\r\n\t\t} as any;\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\tif (value != null && value.length > 0) {\r\n\t\t\tparams.value = value;\r\n\t\t}\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ label: string, value: string }[]>(acp + '/master-list/values', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishShapefile(oid: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/generate-shapefile', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tprogress(oid: string): Promise<Progress> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Progress>(acp + '/master-list/progress', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListsByOrg(): Promise<{ orgs: MasterListByOrg[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], orgs: MasterListByOrg[] }>(acp + '/master-list/list-org', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetPublishMasterListJobs(oid: string, pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/master-list/get-publish-jobs', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetDatasetBounds(oid: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid)\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/master-list/bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetOrganizations(): Promise<Organization[]> {\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Organization[]>(acp + '/cgr/organizations/get-all')\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { PageResult } from '@shared/model/core'\nimport { SynchronizationConfig, OrgSyncInfo, ExportScheduledJob } from '@registry/model/registry'\nimport { CustomAttributeConfig } from '@registry/model/sync'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SynchronizationConfigService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetPage(pageNumber: number, pageSize: number): Promise<PageResult<SynchronizationConfig>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<SynchronizationConfig>>(acp + '/synchronization-config/get-all', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tget(oid: string): Promise<SynchronizationConfig> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<SynchronizationConfig>(acp + '/synchronization-config/get', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tgetCustomAttrCfg(geoObjectTypeCode: string, externalId: string): Promise<CustomAttributeConfig[]> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalId', externalId);\n    params = params.set('geoObjectTypeCode', geoObjectTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-custom-attr', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\t\n\tgetConfigForES(externalSystemId: string, hierarchyTypeCode: string): Promise<any> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalSystemId', externalSystemId);\n    params = params.set('hierarchyTypeCode', hierarchyTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-config-for-es', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n\tapply(config: SynchronizationConfig): Promise<SynchronizationConfig> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<SynchronizationConfig>(acp + '/synchronization-config/apply', JSON.stringify({ config: config }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tedit(oid: string): Promise<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tlet params = {};\n\n\t\tif (oid != null) {\n\t\t\tparams = { oid: oid };\n\t\t}\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }>(acp + '/synchronization-config/edit', JSON.stringify(params), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremove(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tunlock(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/unlock', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\trun(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/run', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetJobs(oid:string, pageNumber: number, pageSize: number): Promise<PageResult<ExportScheduledJob>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n//\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExportScheduledJob>>(acp + '/synchronization-config/get-jobs', { params: params })\n//\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n//\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PaginationPage } from '@registry/model/registry';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tgetMyTasks(pageNum: number, pageSize: number, whereStatus: string): Promise<PaginationPage> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('orderBy', 'createDate');\r\n\t\tparams = params.set('pageNum', pageNum.toString());\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('whereStatus', whereStatus);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/tasks/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcompleteTask(taskId: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/complete', JSON.stringify({ 'id': taskId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsetTaskStatus(taskId: string, status: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/setTaskStatus', JSON.stringify({ 'id': taskId, 'status': status }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","import * as d3 from 'd3';\n\nexport function calculateTextWidth(text: string, fontSize: number): number {\n\tlet svg = d3.select(\"#svg\");\n\n\tlet textCalcGroup = svg.append(\"g\").classed(\"g-text-calc\", true);\n\n\tlet textEl = textCalcGroup.append(\"text\")\n\t\t.attr(\"x\", -5000)\n\t\t.attr(\"y\", -5000)\n\t\t.attr(\"font-size\", fontSize)\n\t\t.text(text);\n\n\tlet bbox = textEl.node().getBBox();\n\n\td3.select(\".g-text-calc\").remove();\n\n\treturn bbox.width + 2; // +2 is for padding. I caught this truncating just ever so slightly\n}\n\nexport function svgPoint(x: number, y: number) {\n\tlet svg: any = d3.select(\"#svg\").node();\n\tvar pt = svg.createSVGPoint();\n\n\tpt.x = x;\n\tpt.y = y;\n\n\treturn pt.matrixTransform(svg.getScreenCTM().inverse());\n}\n\nexport function isPointWithin(point: { x: number, y: number }, bbox: { x: number, y: number, width: number, height: number }) {\n\treturn point.y > bbox.y && point.y < (bbox.y + bbox.height) && point.x > bbox.x && point.x < (bbox.x + bbox.width);\n}\n\nexport function isBboxPartiallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t|| isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function isBboxTotallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t&& isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function getBboxFromSelection(selection: any) {\n\treturn { x: parseInt(selection.attr(\"x\")), y: parseInt(selection.attr(\"y\")), width: parseInt(selection.attr(\"width\")), height: parseInt(selection.attr(\"height\")) };\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\n@Component( {\n    selector: 'attributes-page',\n    templateUrl: './attributes-page.component.html',\n    styleUrls: []\n} )\nexport class AttributesPageComponent {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor() {\n    }\n\n    onNext(): void {\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.attributes.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.attributes.description\"></localize>\n    </p>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <!--\n    <h3 class=\"mb-3\">\n      <localize key=\"shapefile.modal.heading\"></localize>\n      {{configuration.sheet.name}}\n    </h3>\n    -->\n    <form class=\"modal-form\" #form=\"ngForm\">\n      \n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.hierarchy\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"configuration.hierarchy\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of configuration.hierarchies\" value={{hierarchy.code}}>{{hierarchy.label}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div class=\"form-group\" *ngFor=\"let attribute of configuration.type.attributes\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">{{attribute.label.localizedValue}}</label>\n          </div>\n          <div class=\"holder\">\n            <select [name]=\"attribute.code + (attribute.locale != null ? attribute.locale : '')\" class=\"select-area\"\n              [(ngModel)]=\"attribute.target\" [required]=\"attribute.required\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes[attribute.baseType]\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div *ngIf=\"configuration.hasPostalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.postalCode\"></localize>\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <div class=\"check-block\">\n              <div (click)=\"configuration.postalCode = !configuration.postalCode\"\n                [ngClass]=\"{'chk-checked' : configuration.postalCode}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\"\n                name=\"postalCode\">\n                <span></span>\n              </div>\n            </div>\n            <!-- <input type=\"checkbox\" class=\"form-check-input\" name=\"postalCode\" [(ngModel)]=\"configuration.postalCode\"> -->\n          </div>\n        </div>\n      </div>\n      \n      <div *ngIf=\"configuration.isExternal\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.modal.external\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"externalId\" class=\"select-area\"\n              [(ngModel)]=\"configuration.externalIdAttributeTarget\" [required]=\"true\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n        \n        <div *ngIf=\"configuration.externalSystem.type === 'RevealExternalSystem' && configuration.formatType === 'EXCEL'\" class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.import.revealGeometryAttribute\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"revealGeometryColumn\" class=\"select-area\"\n              [(ngModel)]=\"configuration.revealGeometryColumn\" [required]=\"false\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <!--\n      <div *ngIf=\"!configuration.hasPostalCode || !configuration.postalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.parentLookupType\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"parentLookupType\" class=\"select-area\" [(ngModel)]=\"configuration.parentLookupType\" required>\n              <option></option>\n              <option value=\"ALL\">\n                <localize key=\"io.modal.all\"></localize>\n              </option>\n              <option value=\"CODE\">\n                <localize key=\"io.modal.code\"></localize>\n              </option>\n              <option value=\"EXTERNAL\">\n                <localize key=\"io.modal.external\"></localize>\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      -->\n\n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize *ngIf=\"!configuration.postalCode\" key=\"io.next\"></localize>\n                <localize *ngIf=\"configuration.postalCode\" key=\"io.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter, Directive } from '@angular/core';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-page',\n    templateUrl: './location-page.component.html',\n    styleUrls: []\n} )\nexport class LocationPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor( private service: IOService ) { }\n\n    ngOnInit(): void {\n        this.service.getTypeAncestors( this.configuration.type.code, this.configuration.hierarchy, true ).then( locations => {\n            this.configuration.locations = locations;\n        } );\n    }\n\n    onNext(): void {\n        // Map the universals\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onBack(): void {\n        this.stateChange.emit( 'BACK' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<form class=\"modal-form\">\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.location.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.location.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <form #form=\"ngForm\">\n      \n      <div class=\"form-group\" *ngFor=\"let location of configuration.locations; let i = index;\">\n        <div class=\"row-holder\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\"><label> {{location.label}} </label></div>\n            <div class=\"panel-body\">\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.source\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select class=\"select-area\" [(ngModel)]=\"location.target\" [name]=\"i + '-location'\">\n                  <option value=\"\"></option>\n                  <option *ngFor=\"let attr of configuration.sheet.attributes.text\" [value]=\"attr\">{{attr}}</option>\n                </select>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.matchStrategy\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select [name]=\"i + '-matchStrategy'\" class=\"select-area\" [(ngModel)]=\"location.matchStrategy\" [required]=\"location.target != null && location.target !== ''\">\n\t\t\t            <option></option>\n\t\t\t            <option value=\"ALL\"><localize key=\"io.modal.all\"></localize></option>\n\t\t\t            <option value=\"CODE\"><localize key=\"io.modal.code\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal\" value=\"EXTERNAL\"><localize key=\"io.modal.external\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal && configuration.externalSystem.type === 'DHIS2ExternalSystem'\" value=\"DHIS2_PATH\"><localize key=\"io.modal.dhis2path\"></localize></option>\n\t\t\t          </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"submit\" (click)=\"onBack()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.back\"></localize>\n            </button>\n            <button type=\"btn\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize key=\"io.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n    </form>\n  </div>\n</form>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n\n    selector: 'location-problem-page',\n    templateUrl: './location-problem-page.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n\n            if ( !this.configuration.locationProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    handleError( err: any ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n            const problem = this.configuration.locationProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNOREATLOCATION' ) {\n                const value = ( problem.parent != null ? problem.parent + \"-\" + problem.label : problem.label );\n                const exclusion = { code: '##PARENT##', value: value };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.locationProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.locationProblem.description\"></localize>\n    </p>\n  </div>\n  <div >\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.locationContext\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownLocation\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.locationProblems; let i = index;\">\n        <location-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></location-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\" style=\"margin-top: 20px;\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize *ngIf=\"configuration.termProblems != null\" key=\"io.next\"></localize>\n              <localize *ngIf=\"configuration.termProblems == null\" key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\n\n@Component( {\n\n    selector: 'term-problem-page',\n    templateUrl: './term-problem-page.component.html',\n    styleUrls: []\n} )\nexport class TermProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n\n            if ( !this.configuration.termProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n            const problem = this.configuration.termProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNORE' ) {\n                const exclusion = { code: problem.attributeCode, value: problem.label };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.termProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.termProblem.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.categoryAttribute\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownCategory\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.termProblems; let i = index;\">\n        <term-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></term-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input, Output, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, AttributeTerm, PRESENT } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'manage-versions',\n\ttemplateUrl: './manage-versions.component.html',\n\tstyleUrls: ['./manage-versions.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition('* => void', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t])\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsComponent implements OnInit {\n\tmessage: string = null;\n\n\treadonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() attribute: Attribute\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\teditingGeometry: number = -1;\n\n\thasDuplicateDate: boolean = false;\n\t\n\toriginalAttributeState: Attribute;\n\n\tconstructor(private service: RegistryService, private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\n\ttfInit(): void {\n\t\tif (this.attribute.code === 'geometry' && this.geoObjectOverTime.attributes[this.attribute.code].values.length === 1) {\n\t\t\tthis.editingGeometry = 0;\n\t\t}\n\t}\n\n\tgeometryChange(vAttribute, event): void {\n\t\tvAttribute.value = event;\n\t}\n\n\tonDateChange(event: any, vAttribute: ValueOverTime): any {\n\n\t\t//        console.log( event.currentTarget.value );\n\t\t//\n\t\t//        let dt = new Date( event.currentTarget.value );\n\t\t//let dt = new Date(event);\n\n\t\tlet vAttributes = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\t//        vAttribute.startDate = Utils.formatDateString( dt );\n\n\t\tthis.snapDates(vAttributes);\n\n\t\t//        this.changeDetectorRef.detectChanges();\n\t}\n\n\tsnapDates(votArr: ValueOverTime[]): void {\n\t\tvar dateOffset = (24 * 60 * 60 * 1000) * 1; //1 days\n\n\t\tthis.hasDuplicateDate = false;\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\n\t\tfor (let i = 1; i < votArr.length; i++) {\n\t\t\tlet prev = votArr[i - 1];\n\t\t\tlet current = votArr[i];\n\n\t\t\tif (current.startDate) {\n\t\t\t\tprev.endDate = Utils.formatDateString(new Date(new Date(current.startDate).getTime() - dateOffset));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprev.endDate = PRESENT;\n\t\t\t}\n\n\t\t\tif (prev.startDate === current.startDate) {\n\t\t\t\tthis.hasDuplicateDate = true;\n\t\t\t}\n\t\t}\n\n\t\tif (votArr.length > 0) {\n\t\t\tvotArr[votArr.length - 1].endDate = PRESENT;\n\t\t}\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tif (this.attribute.type === \"local\") {\n\t\t\t//   vot.value = {\"localizedValue\":null,\"localeValues\":[{\"locale\":\"defaultLocale\",\"value\":null},{\"locale\":\"km_KH\",\"value\":null}]};\n\t\t\tvot.value = this.lService.create();\n\t\t}\n\t\telse if (this.attribute.type === 'geometry') {\n\n\t\t\tif (votArr.length > 0) {\n\t\t\t\tif (this.editingGeometry != -1 && this.editingGeometry != null) {\n\t\t\t\t\tvot.value = votArr[this.editingGeometry].value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvot.value = votArr[0].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\t\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\t\t\tvot.value.type = \"Polygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\t\t\tvot.value.type = \"Point\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tvot.value.type = \"MultiPoint\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\t\t\tvot.value.type = \"Line\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\t\t\tvot.value.type = \"MultiLine\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.attribute.type === 'term') {\n\t\t\tvar terms = this.getGeoObjectTypeTermAttributeOptions(this.attribute.code);\n\n\t\t\tif (terms.length > 0) {\n\t\t\t\tvot.value = terms[0].code;\n\t\t\t}\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tif (this.attribute.code === 'geometry') {\n\t\t\tthis.editingGeometry = votArr.length - 1;\n\t\t}\n\n\t\tthis.snapDates(votArr);\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\teditGeometry(index: number) {\n\t\tthis.editingGeometry = index;\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\t// only remove status of the required status type\n\t\t\t\tif (attrOpts.length > 0) {\n\t\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn attrOpts;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes[this.attribute.code];\n\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\t\t\t\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tval.values.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.snapDates(val.values);\n\t}\n\n\tisChangeOverTime(attr: Attribute): boolean {\n\t\tlet isChangeOverTime = false;\n\n\t\tthis.geoObjectType.attributes.forEach(attribute => {\n\t\t\tif (this.attribute.code === attr.code) {\n\t\t\t\tisChangeOverTime = attr.isChangeOverTime\n\t\t\t}\n\t\t})\n\n\t\treturn isChangeOverTime;\n\t}\n\t\n\tonSubmit(): void {\n\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n            <h3>{{attribute.label.localizedValue}}</h3>\n\n            <div>\n              <div>\n                <ul class=\"list-group\">\n                  <!-- <li class=\"list-group-item\" style=\"text-align:left;\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\"> -->\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n\n                    <div *ngIf=\"attribute.type !== 'geometry'\">\n                    \n                      <table class=\"table table-striped\">\n                      \n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type === 'local'\" >\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                          \n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" >\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\" *ngFor=\"let loc of vAttribute.value.localeValues; let idx = index;\">\n                                  <td colspan=\"2\">\n                                    <h5><convert-key-label [key]=\"loc.locale\"></convert-key-label></h5>\n                                    \n                                    <input type=\"text\" class=\"form-control\" [name]=\"'loc-val-' + i + '-' + idx\" [(ngModel)]=\"loc.value\" (ngModelChange)=\"loc.value = $event\" [required]=\"loc.locale === 'defaultLocale'\">\n                                    \n                                    <div class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"loc.locale === 'defaultLocale' && !loc.value\" class=\"error-message\">\n                                        <localize key=\"manage.versions.value.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                    <input type=\"date\" [name]=\"'startDate_' + i\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required>\n                                    \n                                    <div style=\"width:100%;\" class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"!vAttribute.startDate\" class=\"error-message\">\n                                        <localize key=\"manage.versions.start.date.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                    </h5>\n                                    <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                                    <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                  </td>\n                                </tr>\n                              </table>\n                            </td>\n                            \n                            <td (click)=\"remove(vAttribute)\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\">\n                              <i class=\"fa fa-times\" ></i>\n                            </td>\n                          </tr>\n                        </tbody>\n\n\n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type !== 'local'\">\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                          \n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[this.attribute.code].values; let i = index;\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\">\n                                  <td colspan=\"2\">\n                                    <div *ngIf=\"attribute.type === 'term'\">\n                                      <select id=\"mod-{{attribute.code}}\" [name]=\"'mod-term-' + i + '-' + attribute.code\" class=\"select-area\" [(ngModel)]=\"vAttribute.value\">\n                                          <option value=\"\"></option>\n                                          <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attribute.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                                      </select>\n                                    </div>\n                                    <div *ngIf=\"attribute.type === 'character'\">\n                                      <input type=\"text\" class=\"form-control\" [name]=\"'char-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'date'\">\n                                      <input type=\"date\" class=\"form-control\" [name]=\"'date-val-' + i\" [ngModel]=\"vAttribute.value | date:'yyyy-MM-dd'\" (ngModelChange)=\"setDateAttribute(vAttribute, $event)\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'integer' || attribute.type === 'float'\">\n                                      <input type=\"number\" class=\"form-control\" [name]=\"'int-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'boolean'\">\n                                        <label class=\"radio radio-inline\" style=\"padding-left:0;\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === true\" [value]=\"true\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-true\" name=\"mod-{{i}}-true\"> \n                                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                                        </label> \n                                        <label class=\"radio radio-inline\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === false\" [value]=\"false\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-false\" name=\"mod-{{i}}-false\"> \n                                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                                        </label>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                    <input style=\"width: 100%;\" type=\"date\" [name]=\"'startDate-' + i\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required>\n                                  </td>\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                    </h5>\n                                    <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                    <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                                  </td>\n                                </tr>\n                              </table>\n                            </td>\n                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                              <i class=\"fa fa-times\"></i>\n                            </td>\n                          </tr>\n                        </tbody>\n                        \n                      </table>\n                    </div>\n\n                    <div *ngIf=\"attribute.type === 'geometry'\">\n                    \n                      <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                      \n                      <table class=\"table table-striped\">\n                        <thead style=\"font-size: 14px;\">\n                          <th style=\"width: 60%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.value\"></localize></th>\n                          <th style=\"width: 20%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.actions\"></localize></th>\n                        </thead>\n                        <tbody style=\"text-align: center;\">\n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\">\n                            <td style=\"vertical-align: middle;\">\n                              <button *ngIf=\"this.editingGeometry != i\" class=\"btn\" (click)=\"editGeometry(i)\" role=\"button\">\n                                <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                              </button> \n                              <geoobject-editor-map *ngIf=\"this.editingGeometry === i\" #geometryEditor [geometryType]=\"this.geoObjectType.geometryType\" (geometryChange)=\"this.geometryChange(vAttribute, $event);\" [readOnly]=\"!geoObjectType.isGeometryEditable\" [postGeometry]=\"vAttribute.value\" [bboxCode]=\"this.geoObjectOverTime.attributes.code\" [bboxType]=\"this.geoObjectType.code\" [bboxDate]=\"vAttribute.startDate\"></geoobject-editor-map>\n                            </td>\n                            <td style=\"vertical-align: middle;\"><input type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required></td>\n                            <td style=\"vertical-align: middle;\">\n                              <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                              <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                            </td>\n                            <td style=\"vertical-align: middle;\"><i class=\"fa fa-times clickable delete-btn\" (click)=\"remove(vAttribute)\"></i></td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                  </li>\n\n                  <li class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> \n                      <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"io.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!versionsform.valid\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","export default class Utils {\n\t\n\t/**\n\t * \n\t * @param arr \n\t */\n\tstatic removeStatuses( arr: any[] ): any[] {\n\t      var newArray = [];\n\t      \n\t      for ( var i = 0; i < arr.length; ++i ) {\n\t        if (! (arr[i].code === \"CGR:Status-New\"\n\t             || arr[i].code === \"CGR:Status-Pending\"))\n\t        {\n\t          newArray.push(arr[i]);\n\t        }\n\t      }\n\t      \n\t      return newArray;\n\t}\n\t\n\n\t/**\n\t * \n\t * @param dateObj \n\t */\n\tstatic formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + ( month < 10 ? \"0\" : \"\" ) + month + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n    \n}","import { Component, OnInit, ViewChild, SimpleChanges, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { RegistryService, MapService } from '@registry/service';\n\nimport { Map, LngLatBounds, NavigationControl } from 'mapbox-gl';\nimport * as MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport * as StaticMode from '@mapbox/mapbox-gl-draw-static-mode';\nimport * as mapboxgl from 'mapbox-gl';\n\ndeclare var acp: string;\n\n\n@Component({\n\tselector: 'geoobject-editor-map[geometryType]',\n\ttemplateUrl: './geoobject-editor-map.component.html',\n\tstyleUrls: ['./geoobject-editor-map.component.css']\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorMapComponent implements OnInit, OnDestroy {\n\n    /*\n     * Required. The GeometryType of the GeoJSON. Expected to be in uppercase (because that's how it is in the GeoObjectType for some reason)\n     */\n\t@Input() geometryType: string;\n\n    /*\n     * Optional. We will invoke this event with GeoJSON when the user makes an edit to the geometry.\n     */\n\t@Output() geometryChange = new EventEmitter<any>();\n\n    /*\n     * Optional. If specified, we will diff based on this GeoJSON geometry.\n     */\n\t@Input() preGeometry: any;\n\n    /*\n     * Optional. If we are read-only, this will be displayed as a layer. If we are not, it will be editable.\n     */\n\t@Input() postGeometry: any;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObject code.\n     */\n\t@Input() bboxCode: string;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObjectType at the date.\n     */\n\t@Input() bboxType: string;\n\n\t@Input() bboxDate: string;\n\n    /*\n     * Optional. If set to true the edit controls will not be displayed. Defaults to false.\n     */\n\t@Input() readOnly: boolean = false;\n\n    /*\n     * Optional. If specified, we will display an edit button on the map, and when it is clicked we will emit this event.\n     */\n\t@Output() onClickEdit = new EventEmitter<void>();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl;\n\n\t@ViewChild(\"mapDiv\") mapDiv;\n\n\tmap: Map;\n\n\teditingControl: any;\n\n\tconstructor(private registryService: RegistryService, private mapService: MapService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.mapService.init();\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\t//this.registryService.getGeoObjectOverTime( \"22\", \"Province\" )\n\t\t\t//.then( geoObject => {\n\n\t\t\tthis.mapDiv.nativeElement.id = Math.floor(Math.random() * (899999)) + 100000;\n\n\t\t\tthis.map = new Map({\n\t\t\t\tcontainer: this.mapDiv.nativeElement.id,\n\t\t\t\tstyle: 'mapbox://styles/mapbox/satellite-v9',\n\t\t\t\tzoom: 2,\n\t\t\t\tcenter: [110.880453, 10.897852]\n\t\t\t});\n\n\t\t\tthis.map.on('load', () => {\n\t\t\t\tthis.initMap();\n\t\t\t});\n\n\t\t\tthis.map.on('draw.create', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.delete', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.update', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\n\t\t\t//} ).catch(( err: HttpErrorResponse ) => {\n\t\t\t//    this.error( err );\n\t\t\t//} );\n\t\t}, 10);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['preGeometry'] || changes['postGeometry']) {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tpublic reload(): void {\n\t\tif (this.map != null) {\n\t\t\tthis.removeLayers();\n\t\t\tthis.addLayers();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tgetIsValid(): boolean {\n\t\tif (!this.readOnly) {\n\t\t\tlet isValid: boolean = false;\n\n\t\t\tif (this.editingControl != null) {\n\t\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\t\tif (featureCollection.features.length > 0) {\n\t\t\t\t\tisValid = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn isValid;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onValidChange(): void {\n\t\tthis.geometryChange.emit(this.saveDraw());\n\t}\n\n\tinitMap(): void {\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t\tthis.onValidChange();\n\t\t});\n\n\n\t\tthis.addLayers();\n\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.zoomToBbox();\n\t\t}\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl());\n\n\t\tif (!this.readOnly) {\n\t\t\tthis.enableEditing();\n\t\t}\n\t\telse {\n\t\t\tthis.addEditButton();\n\t\t}\n\n\t\tthis.onValidChange();\n\t}\n\n\taddEditButton(): void {\n\t\tthis.simpleEditControl.editEmitter.subscribe(versionObj => {\n\t\t\tthis.onClickEdit.emit();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tenableEditing(): void {\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (this.postGeometry != null) {\n\t\t\tthis.editingControl.add(this.postGeometry);\n\t\t}\n\t}\n\n\tremoveSource(prefix: string): void {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-polygon\");\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-point\");\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MultiLine\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-line\");\n\t\t}\n\n\t\tthis.map.removeSource(sourceName);\n\t}\n\n\tremoveLayers(): void {\n\t\tif (this.map.getSource(\"pre-geoobject\")) {\n\t\t\tthis.removeSource(\"pre\");\n\t\t}\n\t\tif (this.map.getSource(\"post-geoobject\")) {\n\t\t\tthis.removeSource(\"post\");\n\t\t}\n\t}\n\n\taddLayers(): void {\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.preGeometry, \"pre\", \"#EFA22E\")\n\t\t}\n\t\tif (this.readOnly && this.postGeometry != null && this.postGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.postGeometry, \"post\", \"#3368EF\");\n\t\t}\n\t}\n\n\trenderGeometryAsLayer(geometry: any, prefix: string, color: string) {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\n\t\tthis.map.addSource(sourceName, {\n\t\t\ttype: 'geojson',\n\t\t\tdata: {\n\t\t\t\t\"type\": \"FeatureCollection\",\n\t\t\t\t\"features\": []\n\t\t\t}\n\t\t});\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\t// Polygon Layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-polygon\",\n\t\t\t\t\"type\": \"fill\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"fill-color\": color,\n\t\t\t\t\t\"fill-outline-color\": \"black\",\n\t\t\t\t\t\"fill-opacity\": 0.7,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-point\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 3,\n\t\t\t\t\t\"circle-color\": color,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-line\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"type\": \"line\",\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"line-join\": \"round\",\n\t\t\t\t\t\"line-cap\": \"round\"\n\t\t\t\t},\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"line-color\": color,\n\t\t\t\t\t\"line-width\": 2\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t(<any>this.map.getSource(sourceName)).setData(geometry);\n\t}\n\n\tzoomToBbox(): void {\n\t\tif (this.bboxCode != null && this.bboxType != null) {\n\t\t\tif (this.bboxDate == null) {\n\t\t\t\tthis.registryService.getGeoObjectBounds(this.bboxCode, this.bboxType).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.registryService.getGeoObjectBoundsAtDate(this.bboxCode, this.bboxType, this.bboxDate).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsaveDraw(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.postGeometry;\n\t\t}\n\n\t\treturn this.postGeometry;\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\t// TODO\n\t\tconsole.log(\"ERROR\", err);\n\t}\n\n\n}\n","<div #mapDiv class=\"map-view-port text-left\" style=\"height:400px;\"></div>\n\n<simple-edit-control [visible]=\"!readOnly\" #simpleEditControl></simple-edit-control>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-parent-versions-modal',\n\ttemplateUrl: './manage-parent-versions-modal.component.html',\n\tstyleUrls: []\n})\nexport class ManageParentVersionsModalComponent implements OnInit {\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonVersionChange: Subject<HierarchyOverTime>;\n\n\thierarchy: HierarchyOverTime = null;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onVersionChange = new Subject();\n\t}\n\n\tinit(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t}\n\n\n\thandleVersionChange(hierarchy: HierarchyOverTime): void {\n\t\tif (hierarchy != null) {\n\t\t\tthis.onVersionChange.next(hierarchy);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-parent-versions *ngIf=\"hierarchy != null\" [hierarchy]=\"hierarchy\" (onChange)=\"handleVersionChange($event)\"></manage-parent-versions>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { HierarchyOverTime, PRESENT } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\n\nimport * as moment from 'moment';\n\n@Component({\n\tselector: 'manage-parent-versions',\n\ttemplateUrl: './manage-parent-versions.component.html',\n\tstyleUrls: []\n})\nexport class ManageParentVersionsComponent implements OnInit {\n\n\toriginalHierarchy: HierarchyOverTime;\n\t@Input() hierarchy: HierarchyOverTime = null;\n\n\t@Output() onChange = new EventEmitter<HierarchyOverTime>();\n\n\thasDuplicateDate: boolean = false;\n\n\tloading: any = {};\n\n\tconstructor(private service: RegistryService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.originalHierarchy = JSON.parse(JSON.stringify(this.hierarchy));\n\n\t\tthis.hierarchy.entries.forEach(entry => {\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\t\tif (entry.parents[current.code] == null) {\n\t\t\t\t\tentry.parents[current.code] = { text: '', geoObject: null };\n\t\t\t\t}\n\n\t\t\t\tentry.loading = {};\n\t\t\t}\n\t\t});\n\t}\n\n\tonAddNewVersion(): void {\n\n\t\tlet parents = {};\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparents[current.code] = {};\n\t\t}\n\n\t\tconst entry = {\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\tparents: parents,\n\t\t\tloading: {}\n\t\t}\n\n\t\tthis.hierarchy.entries.push(entry);\n\t}\n\n\tremove(entry: any): void {\n\n\t\tfor (let i = 0; i < this.hierarchy.entries.length; i++) {\n\t\t\tlet vals = this.hierarchy.entries[i];\n\n\t\t\tif (vals.startDate === entry.startDate) {\n\t\t\t\tthis.hierarchy.entries.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.snapDates();\n\t}\n\n\tgetTypeAheadObservable(date: string, type: any, entry: any, index: number): Observable<any> {\n\n\t\tlet geoObjectTypeCode = type.code;\n\n\t\tlet parentCode = null;\n\t\tlet hierarchyCode = null;\n\n\t\tif (index > 0) {\n\t\t\tlet pType = this.hierarchy.types[index - 1];\n\t\t\tconst parent = entry.parents[pType.code];\n\n\t\t\tif (parent.geoObject != null && parent.geoObject.properties.code != null) {\n\t\t\t\thierarchyCode = this.hierarchy.code;\n\t\t\t\tparentCode = parent.geoObject.properties.code;\n\t\t\t}\n\t\t}\n\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.service.getGeoObjectSuggestions(entry.parents[type.code].text, geoObjectTypeCode, parentCode, hierarchyCode, date).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, type: any, entry: any, date: string): void {\n\t\t//        let ptn: ParentTreeNode = parent.ptn;\n\n\t\tlet parentTypes = [];\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparentTypes.push(current.code);\n\n\t\t\tif (current.code === type.code) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.service.getParentGeoObjects(e.item.uid, type.code, parentTypes, true, date).then(ancestors => {\n\n\t\t\tentry.parents[type.code].geoObject = ancestors.geoObject;\n\t\t\tentry.parents[type.code].text = ancestors.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestors.geoObject.properties.code;\n\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\t\t\t\tlet ancestor = ancestors;\n\n\t\t\t\twhile (ancestor != null && ancestor.geoObject.properties.type != current.code) {\n\t\t\t\t\tif (ancestor.parents.length > 0) {\n\t\t\t\t\t\tancestor = ancestor.parents[0];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tancestor = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ancestor != null) {\n\t\t\t\t\tentry.parents[current.code].geoObject = ancestor.geoObject;\n\t\t\t\t\tentry.parents[current.code].text = ancestor.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestor.geoObject.properties.code;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}\n\n\tonRemove(type: any, entry: any): void {\n\t\tentry.parents[type.code].text = '';\n\t\tdelete entry.parents[type.code].geoObject;\n\t}\n\n\tonDateChange(): any {\n\t\tthis.snapDates();\n\t}\n\n\tsnapDates() {\n\t\tvar dateOffset = (24 * 60 * 60 * 1000) * 1; //1 days\n\n\t\tthis.hasDuplicateDate = false;\n\n\t\t// Sort the data\n\t\tthis.hierarchy.entries.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\n\n\t\tfor (let i = 1; i < this.hierarchy.entries.length; i++) {\n\t\t\tlet prev = this.hierarchy.entries[i - 1];\n\t\t\tlet current = this.hierarchy.entries[i];\n\n\t\t\tprev.endDate = this.formatDateString(new Date(new Date(current.startDate).getTime() - dateOffset));\n\n\t\t\tif (prev.startDate === current.startDate) {\n\t\t\t\tthis.hasDuplicateDate = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.hierarchy.entries.length > 0) {\n\t\t\tthis.hierarchy.entries[this.hierarchy.entries.length - 1].endDate = PRESENT;\n\t\t}\n\t}\n\n\tformatDateString(dateObj: Date): string {\n\t\tconst day = dateObj.getUTCDate();\n\n\t\treturn dateObj.getUTCFullYear() + \"-\" + (dateObj.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\t\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n  \t\tvar format = localeData.longDateFormat('L');\n  \t\treturn moment().format(format);\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.hierarchy);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalHierarchy);\n\t}\n}\n","<div>\n    <ng-template #customItemTemplate let-model=\"item\" let-index=\"index\">\n      <h5>{{model.name }} : {{ model.code }}</h5>\n    </ng-template>\n\n    <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\"><localize key=\"changeovertime.manageVersions.duplicateDate\"></localize></div>\n\n    <form #form=\"ngForm\" class=\"modal-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"attribute-version-wrapper\">\n                            <ul class=\"list-group\" *ngIf=\"hierarchy != null\">\n                                <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                                    <table class=\"table table-striped\">\n                                    \n                                        <tbody class=\"attribute-element-wrapper\">\n<!--                                             <tr *ngFor=\"let entry of hierarchy.entries; let i = index;\"> -->\n<!--                                                 <td> -->\n                                                \n<!--                                                   <div class=\"col-sm-12\" style=\"float:left;width:150px;\" *ngFor=\"let type of hierarchy.types; let j = index\"> -->\n<!--                                                     {{type.label}} -->\n                                                    \n<!--                                                     <div class=\"input-group\"> -->\n                                                    \n<!--                                                       <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\" -->\n<!--                                                         name=\"{{type.code}}-{{i}}\" -->\n<!--                                                         [disabled]=\"entry.startDate == null || entry.startDate === ''\" -->\n<!--                                                         [(ngModel)]=\"entry.parents[type.code].text\"  -->\n<!--                                                         [typeaheadAsync]=\"true\" -->\n<!--                                                         [typeahead]=\"getTypeAheadObservable(entry.startDate, type, entry, j)\" -->\n<!--                                                         (typeaheadOnSelect)=\"typeaheadOnSelect($event, type, entry, entry.startDate)\"  -->\n<!--                                                         [typeaheadOptionsLimit]=\"7\" -->\n<!--                                                         [typeaheadItemTemplate]=\"customItemTemplate\"  -->\n<!--                                                         [typeaheadMinLength]=\"0\" -->\n<!--                                                         [typeaheadWaitMs]=\"300\"> -->\n                                                      \n<!--                                                       <span class=\"input-group-addon\"> -->\n<!--                                                           <i class=\"fa fa-times delete-btn clickable\" (click)=\"onRemove(type, entry)\"></i> -->\n<!--                                                       </span> -->\n<!--                                                     </div> -->\n<!--                                                   </div> -->\n                                                \n<!--                                                 </td> -->\n<!--                                                 <td style=\"vertical-align: bottom;\"> -->\n<!--                                                   <input style=\"width: 100%;\" type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"entry.startDate\" (blur)=\"snapDates()\" required /> -->\n<!--                                                 </td>  -->\n<!--                                                 <td style=\"vertical-align: bottom;\"> -->\n<!--                                                   <p *ngIf=\"entry.startDate != null && entry.startDate !== ''\" style=\"font-size: 14px;\"> {{entry.endDate | date:'yyyy-MM-dd'}} </p> -->\n<!--                                                 </td> -->\n<!--                                                 <td style=\"vertical-align: middle; width: 10%; padding: 5px; text-align: center;\"> -->\n<!--                                                   <i class=\"fa fa-times delete-btn clickable\" (click)=\"remove(entry)\"></i> -->\n<!--                                                 </td> -->\n<!--                                             </tr> -->\n\n                                          <p class=\"message\" *ngIf=\"hierarchy.entries.length === 0\">\n                                            <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                                          </p>\n                  \n                                          <tr *ngFor=\"let entry of hierarchy.entries; let i = index;\">\n                                            <td>\n                                              <table>\n                                                <tr class=\"attribute-value-row\">\n                                                  <td colspan=\"2\">\n                                                     <div style=\"float:left;width:100%;\" *ngFor=\"let type of hierarchy.types; let j = index\"> \n                                                       {{type.label}}\n                                                       <div class=\"input-group\">\n                                                          <input  style=\"width:100%;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n                                                            [name]=\"type.code + '-' + i\"\n                                                            [disabled]=\"entry.startDate == null || entry.startDate === ''\"\n                                                            [(ngModel)]=\"entry.parents[type.code].text\" \n                                                            [typeaheadAsync]=\"true\"\n                                                            [typeahead]=\"getTypeAheadObservable(entry.startDate, type, entry, j)\"\n                                                            (typeaheadOnSelect)=\"typeaheadOnSelect($event, type, entry, entry.startDate)\" \n                                                            (typeaheadLoading)=\"entry.loading[type.code] = $event\"\n                                                            [ngClass]=\"{'inline-loading':entry.loading[type.code]}\"                                                                \n                                                            [typeaheadOptionsLimit]=\"7\"\n                                                            [typeaheadItemTemplate]=\"customItemTemplate\" \n                                                            [typeaheadMinLength]=\"0\"\n                                                            [typeaheadWaitMs]=\"300\">\n                                                          \n                                                            <span class=\"input-group-addon clickable addon-alert\" (click)=\"onRemove(type, entry)\"> \n                                                              <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                                            </span>\n                                                        </div>\n                                                     </div>\n                                                  </td>\n                                                </tr>\n                                                <tr class=\"attribute-date-input-row\">\n                                                  <td>\n                                                    <h5>\n                                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                                    </h5> \n                                                    <input style=\"width: 100%;\" type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"entry.startDate\" (blur)=\"snapDates()\" required />\n                                                  </td>\n                                                  <td>\n                                                    <h5>\n                                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                                    </h5>\n                                                    <input *ngIf=\"entry.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"entry.endDate\" disabled>\n                                                    <p *ngIf=\"entry.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                                  </td>\n                                                </tr>\n                                              </table>\n                                            </td>\n                                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(entry)\">\n                                              <i class=\"fa fa-times\"></i>\n                                            </td>\n                                          </tr>\n                                        </tbody>\n                                    </table>\n                                </li>\n\n                                <li class=\"list-group-item\" style=\"text-align: left;\">\n                                  <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"><localize key=\"changeovertime.manageVersions.newVersion\"></localize></i>\n                                </li>\n                            </ul>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"holder\" style=\"border: none; width: 100%;\">\n                    <div class=\"button-holder pull-right\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\" >\n                            <localize key=\"io.cancel\"></localize>\n                        </button> \n                        <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid || hasDuplicateDate\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n</div>","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from 'angular-tree-component';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\n\tselector: 'tree-geo-selector',\n\ttemplateUrl: './tree-geo-selector.html',\n\tstyleUrls: ['./tree-geo-selector.css']\n})\nexport class TreeGeoSelector {\n\n\t@Input() hierarchy: HierarchyOverTime;\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tnodes: any[] = [];\n\t\n\tactionMapping:IActionMapping = {\n\t  mouse: {\n\t    click: null,\n\t  }\n\t}\n\n\toptions: ITreeOptions = {\n\t\tdisplayField: 'name',\n\t\tisExpandedField: 'expanded',\n\t\tidField: 'code',\n\t\tactionMapping: this.actionMapping\n\t};\n\t\n\n\tconstructor() {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n\t\tconst time = this.forDate.getTime();\n\n\t\tlet nodes = [];\n\t\tlet current = null;\n\n\t\tthis.hierarchy.entries.forEach(pot => {\n\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\tthis.hierarchy.types.forEach(type => {\n\t\t\t\t\tlet node: any = {\n\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\tlabel: type.label,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\texpanded: false\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\tnode.name = pot.parents[type.code].text;\n\t\t\t\t\t\tnode.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (current == null) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcurrent.children.push(node);\n\t\t\t\t\t\tcurrent.expanded = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent = node;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.nodes = nodes;\n\t}\n\n\tonEdit(): void {\n\t\tthis.onManageVersion.emit(this.hierarchy);\n\t}\n}\n","<div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h4 style=\"margin: 0;\">{{hierarchy.label}}</h4>\n    </div>\n    <div class=\"panel-body\">\n\n<!--       <div class=\"input-group\"> -->\n        <div *ngIf=\"nodes.length > 0\" class=\"tree\" >\n          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n        </div>\n<!--         <span *ngIf=\"!readOnly\" class=\"input-group-addon\">  -->\n<!--           <i class=\"fa fa-pencil clickable\" (click)=\"onEdit()\" aria-hidden=\"true\"></i> -->\n<!--         </span> -->\n<!--       </div> -->\n      \n      <button class=\"btn btn-primary\" style=\"width:100%;margin-top:10px;\" *ngIf=\"!readOnly\" (click)=\"onEdit()\"><localize key=\"modal.button.edit\"></localize></button>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\nimport { GeoObjectType, GeoObjectOverTime, HierarchyOverTime, ParentTreeNode, ImportError, ValueOverTime } from '@registry/model/registry';\n\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\n\n@Component({\n\tselector: 'geoobject-editor',\n\ttemplateUrl: './geoobject-editor.component.html',\n\tstyleUrls: ['./geoobject-editor.component.css'],\n\tproviders: [DatePipe]\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tisValid: boolean = false;\n\n\tisGeometryEditable: boolean;\n\n\ttabIndex: number = 0;\n\n\tdataSource: Observable<any>;\n\n\tmasterListId: string;\n\tnotes: string;\n\n\tisNewGeoObject: boolean = false;\n\n\t@Input() onSuccessCallback: Function;\n\n\tsubmitFunction: Function = null;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n    /*\n     * GeoObject Property Editor\n     */\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\tarePropertiesValid: boolean = false;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tgoPropertiesPre: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tgoPropertiesPost: GeoObjectOverTime;\n\n\t//    /*\n\t//     * GeoObject Geometry Editor\n\t//     */\n\t//    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\t//\n\t//    areGeometriesValid: boolean = false;\n\n    /*\n     * GeoObject Cascading Parent Selector\n     */\n\t@ViewChild(\"parentSelector\") parentSelector;\n\n\tareParentsValid: boolean = true;\n\n\thierarchies: HierarchyOverTime[];\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tisEditingGeometries: boolean = false;\n\n    /*\n     * The final artifacts which will be submitted\n     */\n\tprivate goSubmit: GeoObjectOverTime;\n\n\tconstructor(private modalService: BsModalService, public bsModalRef: BsModalRef,\n\t\tprivate registryService: RegistryService, private localizeService: LocalizationService,\n\t\tauthService: AuthService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tfindVotWithStartDate(votArray: ValueOverTime[], startDate: string): any {\n\t\tfor (let i: number = 0; i < votArray.length; ++i) {\n\t\t\tif (votArray[i].startDate === startDate) {\n\t\t\t\treturn votArray[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tsetMasterListId(id: string) {\n\t\tthis.masterListId = id;\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tsetOnSuccessCallback(func: Function) {\n\t\tthis.onSuccessCallback = func;\n\t}\n\n\t// Configures the widget to be used in a \"New\" context, that is to say\n\t// that it will be used to create a new GeoObject.\n\tpublic configureAsNew(typeCode: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tthis.isNewGeoObject = true;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, retJson.geoObject.attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\n\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t});\n\t}\n\n\t// Configures the widget to be used to resolve an ImportError\n\tpublic configureFromImportError(importError: ImportError, historyId: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tlet typeCode = importError.object.geoObject.attributes.type;\n\t\tthis.isNewGeoObject = importError.object.isNew;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tif (importError.object != null && importError.object.parents != null && importError.object.parents.length > 0) {\n\t\t\tthis.hierarchies = importError.object.parents;\n\t\t\tthis.areParentsValid = true;\n\t\t}\n\t\telse {\n\t\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t});\n\t\t\tthis.areParentsValid = false;\n\t\t}\n\n\t\t// TODO : Maybe we should ask the server for the pre object, if it exists.\n\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\n\t\tthis.submitFunction = () => {\n\t\t\tlet config = {\n\t\t\t\thistoryId: historyId,\n\t\t\t\timportErrorId: importError.id,\n\t\t\t\tresolution: 'APPLY_GEO_OBJECT',\n\t\t\t\tparentTreeNode: this.hierarchies,\n\t\t\t\tgeoObject: this.goSubmit,\n\t\t\t\tisNew: importError.object.isNew\n\t\t\t}\n\n\t\t\tthis.registryService.submitErrorResolve(config)\n\t\t\t\t.then(() => {\n\n\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t}\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// Configures the widget to be used in an \"Edit Existing\" context\n\tpublic configureAsExisting(code: string, typeCode: string, dateStr: string, isGeometryEditable: boolean): void {\n\t\tthis.isNewGeoObject = false;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObject(code, typeCode);\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchHierarchies(code, typeCode);\n\t\tthis.fetchLocales();\n\t}\n\n\tprivate fetchGeoObject(code: string, typeCode: string) {\n\t\tthis.registryService.getGeoObjectOverTime(code, typeCode).then(geoObject => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\t\t\t//this.goPropertiesPost = JSON.parse( JSON.stringify( this.goPropertiesPre ) );\n\n\t\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t\t//            this.areGeometriesValid = true;\n\t\t\tthis.arePropertiesValid = true;\n\t\t\tthis.isValid = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchLocales() {\n\t\tthis.registryService.getLocales().then(locales => {\n\t\t\tthis.localizeService.setLocales(locales);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchGeoObjectType(code: string) {\n\t\tthis.registryService.getGeoObjectTypes([code], null)\n\t\t\t.then(geoObjectType => {\n\t\t\t\tthis.geoObjectType = geoObjectType[0];\n\n\t\t\t\tif (this.goPropertiesPre != null) {\n\t\t\t\t\tthis.goPropertiesPre.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\t\t\t\tif (this.goPropertiesPost != null) {\n\t\t\t\t\tthis.goPropertiesPost.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\n\t\t\t\tif (!this.geoObjectType.isGeometryEditable) {\n\t\t\t\t\t//                    this.areGeometriesValid = true;\n\t\t\t\t}\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t//                this.error( err );\n\t\t\t});\n\t}\n\n\tprivate fetchHierarchies(code: string, typeTypeCode: string) {\n\t\tthis.registryService.getHierarchiesForGeoObject(code, typeTypeCode)\n\t\t\t.then((hierarchies: any) => {\n\t\t\t\tthis.hierarchies = hierarchies;\n\n\t\t\t\t//                this.parentTreeNode = CascadingGeoSelector.staticGetParents( this.hierarchies );\n\t\t\t\tthis.areParentsValid = true;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tgetTypeAheadObservable(text, typeCode) {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(text, typeCode).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, ptn: ParentTreeNode): void {\n\t\tthis.registryService.getGeoObjectByCode(e.item.code, ptn.geoObject.properties.type)\n\t\t\t.then(geoObject => {\n\n\t\t\t\tptn.geoObject = geoObject;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tprivate onValidChange() {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.arePropertiesValid = this.attributeEditor.getIsValid();\n\t\t}\n\t\t//        if ( this.geometryEditor != null ) {\n\t\t//            this.areGeometriesValid = this.geometryEditor.getIsValid();\n\t\t//        }\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.areParentsValid = this.parentSelector.getIsValid();\n\t\t}\n\n\t\t//        this.isValid = this.arePropertiesValid && this.areGeometriesValid && this.areParentsValid;\n\t\tthis.isValid = this.arePropertiesValid && this.areParentsValid;\n\t}\n\n\tchangePage(nextPage: number, force: boolean = false): void {\n\t\tif (nextPage === this.tabIndex && !force) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tthis.persistModelChanges();\n\n\t\tthis.tabIndex = nextPage;\n\n\t\tthis.onValidChange();\n\n\t\tif (nextPage === 2) {\n\t\t\tthis.isEditingGeometries = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isEditingGeometries = false;\n\t\t}\n\t}\n\n\tprivate persistModelChanges(): void {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.goPropertiesPost = this.attributeEditor.getGeoObject();\n\t\t}\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.hierarchies = this.parentSelector.getHierarchies();\n\t\t}\n\n\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t//        if ( this.parentTreeNode != null ) {\n\t\t//            this.parentTreeNode.geoObject = this.goSubmit;\n\t\t//        }\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic submit(): void {\n\t\tif (this.isValid) {\n\t\t\tthis.bsModalRef.hide();\n\n\t\t\tthis.persistModelChanges();\n\n\t\t\tif (this.submitFunction == null) {\n\t\t\t\tthis.registryService.applyGeoObjectEdit(this.hierarchies, this.goSubmit, this.isNewGeoObject, this.masterListId, this.notes)\n\t\t\t\t\t.then(() => {\n\n\t\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\t\tthis.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.submitFunction();\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"modal-body\">\n    \n    <form class=\"modal-form\" style=\"overflow: visible;\" #goForm=\"ngForm\">\n        <!-- <div class=\"row-holder\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n            \n                <div *ngIf=\"!areParentsValid\" class=\"alert alert-danger\" role=\"alert\">\n                  <localize key=\"geoobject.editor.modal.parents.must.be.assigned.message\"></localize>                \n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"btn-group geobject-editor-tab-holder\">\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 0}\" (click)=\"this.changePage(0);\">\n                        <localize key=\"geoobject.editor.tabZero\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 1, error: !areParentsValid}\" (click)=\"this.changePage(1);\">\n                        <localize key=\"geoobject.editor.tabOne\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 2, disabled: !isGeometryEditable}\" (click)=\"isGeometryEditable && this.changePage(2);\">\n                        <localize key=\"geoobject.editor.tabTwo\"></localize>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- Attributes tab -->\n        <geoobject-shared-attribute-editor \n            *ngIf=\"(this.tabIndex === 0 || this.tabIndex === 2) && this.geoObjectType && this.goPropertiesPre && this.goPropertiesPost\"\n            #attributeEditor \n            (valid)=\"this.onValidChange()\" \n            [geoObjectType]=\"this.geoObjectType\"\n            [preGeoObject]=\"this.goPropertiesPre\" \n            [postGeoObject]=\"this.goPropertiesPost\" \n            [forDate]=\"this.forDate\" \n            [isNew]=\"this.isNewGeoObject\"\n            [isEditingGeometries]=\"this.isEditingGeometries\">\n        </geoobject-shared-attribute-editor>\n\n\n        <!-- Parents tab -->\n        <div *ngIf=\"this.tabIndex === 1 && this.hierarchies != null\">\n          <cascading-geo-selector #parentSelector \n            [isValid]=\"this.isValid\" (valid)=\"this.onValidChange()\"\n            [forDate]=\"this.forDate\"             \n            [hierarchies]=\"this.hierarchies\">\n          </cascading-geo-selector>\n        </div>\n\n         <!-- Geometry tab -->\n         <!--\n         <div class=\"row-holder\">\n            <div class=\"label-holder\"></div>\n            <div class=\"holder\">\n              <geoobject-editor-map #geometryEditor *ngIf=\"this.tabIndex === 2\" [geometryType]=\"this.geoObjectType.geometryType\" [readOnly]=\"true\" [preGeometry]=\"this.goGeometries.getVotAtDate(this.forDate, 'geometry', this.geoObjectType, this.localizeService).value\" [bboxCode]=\"this.goGeometries.attributes.code\" [bboxType]=\"this.geoObjectType.code\"></geoobject-editor-map>\n            </div>\n        </div>\n        -->\n\n        <div *ngIf=\"!isMaintainer\" class=\"row-holder\" style=\"padding-top: 10px;\">\n            <div class=\"label-holder\"><label><localize key=\"change.request.action.detail.contributorNotes\"></localize></label></div>\n            <div class=\"holder text-left\">\n              <textarea style=\"width: 100%;border-radius: 8px;height: 70px; padding:5px;\" class=\"detail-value\" [(ngModel)]=\"notes\" name=\"notes\" required></textarea>\n              <div class=\"form-input-validation-error-message-wrapper\">\n                <p *ngIf=\"!notes\" class=\"error-message\">Notes are required.</p>\n              </div>\n            </div>\n        </div>\n\n         <div class=\"row-holder\" style=\"margin-bottom: 20px;\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input style=\"width:100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"button-holder text-left\">\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                        <localize key=\"modal.button.cancel\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"goForm.invalid || !this.isValid\">\n                        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\nimport { Step, StepConfig } from '@registry/model/registry';\n\n\n@Component( { \n    selector: 'step-indicator',\n    templateUrl: './step-indicator.component.html',\n    styleUrls: ['./step-indicator.css']\n} )\nexport class StepIndicatorComponent {\n\n    @Input('steps')\n    set steps(value: StepConfig) {\n        this._stepConfig = value;\n    }\n\n    _stepConfig: StepConfig;\n    step: Step;\n\n\n    constructor( private localizeService: LocalizationService ) {\n\n        this._stepConfig = {\"steps\": []};\n    }\n\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n       \n    }\n}\n","<div class=\"step-indicator\">\n    <ul *ngIf=\"_stepConfig && _stepConfig.steps && _stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\"\n            *ngFor=\"let step of _stepConfig.steps\"\n            [ngClass]=\"{'complete':step.status === 'COMPLETE', 'stuck':step.status === 'STUCK', 'working': step.status === 'WORKING'}\">\n            {{step.label}}\n        </li>\n    </ul>\n</div>","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { ContextLayer, ContextLayerGroup, MasterList } from '@registry/model/registry';\nimport { ContextLayerModalComponent } from './context-layer-modal.component';\nimport { RegistryService } from '@registry/service';\n\n@Component({\n\tselector: 'layer-panel',\n\ttemplateUrl: './layer-panel.component.html',\n\tstyleUrls: ['./location-manager.css']\n})\nexport class LayerPanelComponent implements OnInit, OnChanges {\n\n\t@Input() filter: string[] = [];\n\t@Output() layerChange = new EventEmitter<ContextLayer>();\n\n\tbaselayerIconHover = false;\n\n\tlists: MasterList[] = [];\n\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'baselayer.satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n\t];\n\n\tcontextLayerGroups: ContextLayerGroup[] = [];\n\n\tconstructor(private modalService: BsModalService, public service: RegistryService) {\n\t}\n\n\n\tngOnInit(): void {\n\n\t\tthis.service.getAllMasterListVersions().then(lists => {\n\t\t\tthis.lists = lists;\n\n\t\t\tthis.updateContextGroups();\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.filter.currentValue !== changes.filter.previousValue) {\n\t\t\tthis.updateContextGroups();\n\t\t}\n\t}\n\n\tupdateContextGroups(): void {\n\n\t\tthis.lists.forEach(list => {\n\n\t\t\tlet contextGroup = { oid: list.oid, displayLabel: list.displayLabel.localizedValue, contextLayers: [] };\n\t\t\t\n\t\t\tlist.versions.forEach(version => {\n\n\t\t\t\tconst index = this.filter.indexOf(version.oid);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tlet thisContextLayer = { oid: version.oid, displayLabel: version.forDate, active: false, enabled: false };\n\n\t\t\t\t\tcontextGroup.contextLayers.push(thisContextLayer);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (contextGroup.contextLayers.length > 0) {\n\t\t\t\tthis.contextLayerGroups.push(contextGroup);\n\t\t\t}\n\t\t});\n\n\t}\n\n\tgroupHasEnabledContextLayers(group: string): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif (cLayerGroup.oid === group) {\n\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\t\thasEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\thasEnabledContextLayers(): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\thasEnabled = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\ttoggleContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = !layer.active;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\tremoveContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = false;\n\t\tlayer.enabled = false;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\taddContextLayerModal(): void {\n\t\tlet bsModalRef = this.modalService.show(ContextLayerModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'context-layer-modal'\n\t\t});\n\t\tbsModalRef.content.contextLayerGroups = this.contextLayerGroups;\n\n\t\t//\t\tbsModalRef.content.onSubmit.subscribe(() => {\n\t\t//\n\t\t//\t\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t//\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t//\n\t\t//\t\t\t\t\tconsole.log(\"Emitting event\", cLayer);\n\t\t//\t\t\t\t\tthis.layerChange.emit(cLayer);\n\t\t//\t\t\t\t});\n\t\t//\t\t\t})\n\t\t//\n\t\t//\t\t});\n\t}\n\n\n\n}\n","\n<div class=\"layer-toggle\" (mouseenter)=\"baselayerIconHover = true\" (mouseleave)=\"baselayerIconHover = false\">\n\n  <i class=\"fa fa-bars\" *ngIf=\"!baselayerIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n  <div *ngIf=\"baselayerIconHover\">\n\n    <div style=\"margin-bottom: 10px;\">\n      <h4>\n        <localize key=\"explorer.base.layers.label\"></localize>\n      </h4>\n      <div class=\"row-form\" *ngFor=\"let baseLayer of baseLayers\">\n        <input class=\"layer-toggle-input\" type='radio' name='rtoggle' [value]='baseLayer.id' [checked]=\"baseLayer.selected\">\n        <label class=\"layer-toggle-label\"><localize [key]=\"baseLayer.label\"></localize></label>\n      </div>\n    </div>\n    <div>\n      <div *ngIf=\"hasEnabledContextLayers()\">\n        <h4>\n          <localize key=\"explorer.context.layers.label\"></localize>\n        </h4>\n        <div class=\"list-group\">\n          <div *ngFor=\"let cLayerGroup of contextLayerGroups;\">\n            <div *ngIf=\"groupHasEnabledContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n              <label>{{ cLayerGroup.displayLabel }}</label>\n              <div class=\"list-group\">\n                <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                  <div class=\"list-group-item\" style=\"border: none;\" *ngIf=\"cLayer.enabled\">\n                    <input type=\"checkbox\" [checked]=\"cLayer.active\" (click)=\"toggleContextLayer(cLayer)\"> {{ cLayer.displayLabel }} <i class=\"fa fa-times delete-btn clickable\" aria-hidden=\"true\" (click)=\"removeContextLayer(cLayer)\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"addContextLayerModal()\">+ <localize key=\"explorer.add.context.layer.button.label\"></localize></button>\n    </div>\n\n  </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, HierarchyOverTime, ValueOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorModalComponent, ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\n@Component({\n\tselector: 'feature-panel',\n\ttemplateUrl: './feature-panel.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class FeaturePanelComponent implements OnInit {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY',\n\t\tGEOMETRY: 'GEOMETRY'\n\t}\n\n\t@Input() datasetId: string;\n\n\t@Input() type: GeoObjectType;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() set code(value: string) {\n\t\tthis.updateCode(value);\n\t}\n\n\t_code: string = null;\n\n\t@Input() geometryChange: Subject<any>;\n\n\t@Output() geometryEdit = new EventEmitter<ValueOverTime>();\n\t@Output() featureChange = new EventEmitter<GeoObjectOverTime>();\n\t@Output() modeChange = new EventEmitter<boolean>();\n\n\tbsModalRef: BsModalRef;\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tpreGeoObject: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tpostGeoObject: GeoObjectOverTime;\n\n\tattribute: Attribute = null;\n\n\tisNew: boolean = false;\n\n\tisEdit: boolean = false;\n\n\thierarchies: HierarchyOverTime[];\n\n\thierarchy: HierarchyOverTime = null;\n\t\n\treason: string = \"\";\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, authService: AuthService) {\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.mode = 'ATTRIBUTES';\n\t\tthis.geometryChange.subscribe(v => {\n\t\t\tthis.updateGeometry(v);\n\t\t});\n\t}\n\n\tupdateCode(code: string): void {\n\t\tthis._code = code;\n\t\tthis.postGeoObject = null;\n\t\tthis.preGeoObject = null;\n\t\tthis.hierarchies = null;\n\t\tthis.setEditMode(false);\n\n\t\tif (code != null && this.type != null) {\n\n\t\t\tif (code !== '__NEW__') {\n\t\t\t\tthis.isNew = false;\n\n\t\t\t\tthis.service.getGeoObjectOverTime(code, this.type.code).then(geoObject => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t\tthis.service.getHierarchiesForGeoObject(code, this.type.code).then((hierarchies: HierarchyOverTime[]) => {\n\t\t\t\t\tthis.hierarchies = hierarchies;\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.isNew = true;\n\n\t\t\t\tthis.service.newGeoObjectOverTime(this.type.code).then(retJson => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, retJson.geoObject.attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\n\t\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t\t\tthis.setEditMode(true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\n\tonEditGeometryVersion(vot: ValueOverTime): void {\n\t\tthis.geometryEdit.emit(vot);\n\t}\n\n\tupdateGeometry(geometry: any): void {\n\t\t// Check if the geometry has been updated\n\t\tif (geometry != null && this.postGeoObject != null) {\n\n\t\t\tlet values = this.postGeoObject.attributes['geometry'].values;\n\t\t\tconst time = this.forDate.getTime();\n\n\t\t\tvalues.forEach(vot => {\n\n\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tvot.value = geometry;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tcalculateGeometry(goot: GeoObjectOverTime): any {\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tlet values = goot.attributes['geometry'].values;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst vot = values[i];\n\n\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\treturn vot.value;\n\t\t\t}\n\t\t};\n\n\t\treturn null;\n\t}\n\n\tonCancel(): void {\n\n\t\tif (this._code === '__NEW__') {\n\t\t\tthis.updateCode(null);\n\t\t}\n\t\telse {\n\t\t\tthis.updateCode(this._code);\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.applyGeoObjectEdit(this.hierarchies, this.postGeoObject, this.isNew, this.datasetId, this.reason).then(() => {\n\t\t\tthis.featureChange.emit(this.postGeoObject);\n\n\t\t\tthis.updateCode(this._code);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonManageAttributeVersion(attribute: Attribute): void {\n\t\tthis.attribute = attribute;\n\t\tthis.mode = this.MODE.VERSIONS;\n\t}\n\n\tonManageHiearchyVersion(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t\tthis.mode = this.MODE.HIERARCHY;\n\t}\n\n\tonAttributeChange(postGeoObject: GeoObjectOverTime): void {\n\t\tthis.postGeoObject = postGeoObject;\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\n\t\tthis.geometryEdit.emit(null);\n\t}\n\n\tonHierarchyChange(hierarchy: HierarchyOverTime): void {\n\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\tif (index !== -1) {\n\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t}\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\t}\n\n\tonEditAttributes(): void {\n\t\tthis.setEditMode(!this.isEdit);\n\t}\n\n\tsetEditMode(value: boolean): void {\n\t\tthis.isEdit = value;\n\t\tthis.reason = null;\n\n\t\tthis.modeChange.emit(this.isEdit)\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <div *ngIf=\"mode == MODE.ATTRIBUTES && postGeoObject != null\">\n    <!-- Attributes tab -->\n    <geoobject-shared-attribute-editor \n      #attributeEditor \n      [geoObjectType]=\"type\" \n      [preGeoObject]=\"preGeoObject\" \n      [postGeoObject]=\"postGeoObject\" \n      [forDate]=\"this.forDate\" \n      [isNew]=\"isNew\" \n      [isEditingGeometries]=\"false\" \n      [customEvent]=\"true\"\n      (onManageVersion)=\"onManageAttributeVersion($event)\" \n      (onChange)=\"onAttributeChange($event)\" \n      [readOnly]=\"!isEdit\"\n      [animate]=true> \n    </geoobject-shared-attribute-editor>\n    \n    <div *ngIf=\"isEdit && type.isGeometryEditable\" class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <h4 style=\"margin:0;\">\n          <localize key=\"explorer.geometry.section\"></localize>\n        </h4>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"button-holder text-left\" style=\"margin:0;\">\n          <button type=\"submit\" style=\"width:100%;\" (click)=\"this.mode = this.MODE.GEOMETRY\" class=\"btn btn-primary\" role=\"button\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"hierarchies != null\">\n      <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"this.forDate\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEdit\" (onManageVersion)=\"onManageHiearchyVersion($event)\"> </tree-geo-selector>\n    </div>\n    \n    <div *ngIf=\"isEdit && !isMaintainer\" class=\"form-group\" style=\"z-index: 0;\">\n      <label> \n        <localize key=\"change.request.reason.label\"></localize>\n      </label>\n      <textarea rows=\"4\" cols=\"50\" [(ngModel)]=\"reason\" class=\"form-control\" name=\"reason-input\" required></textarea>\n    </div>\n\n    <div class=\"button-holder text-right\" style=\"margin-bottom: 20px;\">\n      <button *ngIf=\"!readOnly && !isEdit\" type=\"submit\" (click)=\"onEditAttributes()\" class=\"btn btn-primary\" style=\"width:100%;\" role=\"button\">\n        <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n      </button>\n      \n      <button *ngIf=\"isEdit\" type=\"button\" class=\"btn btn-default\" (click)=\"onCancel()\">\n        <localize key=\"modal.button.cancel\"></localize>\n      </button>\n      <button *ngIf=\"isEdit\" type=\"submit\" style=\"\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\">\n        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n      </button>\n    </div>\n  </div>\n  <div *ngIf=\"mode == MODE.VERSIONS && attribute != null\">\n    <!-- Attributes tab -->\n    <manage-versions \n      [attribute]=\"attribute\"\n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\">\n    </manage-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.HIERARCHY && hierarchy != null\">\n    <!-- Attributes tab -->\n    <manage-parent-versions \n      [hierarchy]=\"hierarchy\"\n      (onChange)=\"onHierarchyChange($event)\">\n    </manage-parent-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.GEOMETRY\">\n    <!-- Attributes tab -->\n    <geometry-panel \n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\"\n      (onEdit)=\"onEditGeometryVersion($event)\">\n    </geometry-panel>\n  </div>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\n@Component({\n\tselector: 'create-hierarchy-type-modal',\n\ttemplateUrl: './create-hierarchy-type-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateHierarchyTypeModalComponent implements OnInit {\n\n\thierarchyType: HierarchyType;\n\torganizations: any = [];\n\tmessage: string = null;\n\n\tedit: boolean = false; // if true, we are updating an existing. If false, we are creating new\n\n\treadOnly: boolean = false;\n\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onHierarchytTypeCreate: Subject<HierarchyType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, private hierarchyService: HierarchyService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onHierarchytTypeCreate = new Subject();\n\n\t\tthis.hierarchyType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"rootGeoObjectTypes\": [],\n\t\t\t\"organizationCode\": \"\"\n\t\t};\n\n\t\tthis.registryService.getOrganizations().then(orgs => {\n\n\t\t\t// Filter out organizations they're not RA's of, unless we're readOnly.\n\t\t\tif (!this.readOnly) {\n\t\t\t\tthis.organizations = [];\n\n\t\t\t\tfor (var i = 0; i < orgs.length; ++i) {\n\t\t\t\t\tif (this.auth.isOrganizationRA(orgs[i].code)) {\n\t\t\t\t\t\tthis.organizations.push(orgs[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.organizations = orgs;\n\t\t\t}\n\n\t\t\tif (!this.edit && this.organizations.length === 1) {\n\t\t\t\tthis.hierarchyType.organizationCode = this.organizations[0].code;\n\t\t\t\tthis.organizationLabel = this.organizations[0].label.localizedValue;\n\t\t\t}\n\t\t\telse if (this.edit || this.readOnly) {\n\t\t\t\tthis.organizationLabel = this.getOrganizationLabelFromCode(this.hierarchyType.organizationCode);\n\t\t\t}\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tgetOrganizationLabelFromCode(orgCode: string) {\n\t\tfor (var i = 0; i < this.organizations.length; ++i) {\n\t\t\tif (this.organizations[i].code === orgCode) {\n\t\t\t\treturn this.organizations[i].label.localizedValue;\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(\"Did not find org with code [\" + orgCode + \"]\");\n\t\treturn orgCode;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tif (this.readOnly) {\n\t\t\tthis.bsModalRef.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.edit) {\n\t\t\tconsole.log(this.hierarchyType);\t\t\t\n\t\t\t\n\t\t\tthis.hierarchyService.updateHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.hierarchyService.createHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<form>\n\n  <div class=\"modal-body\">\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n      <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"heading text-center\">\n          <h1>\n            <localize key=\"hierarchy.management.create.hierarchy.title\"></localize> \n          </h1>\n        </div> \n        \n      <div class=\"form-group\">\n        <label for=\"codeInput\">\n          <localize key=\"data.property.label.code\"></localize>\n        </label>\n        <input [(ngModel)]=\"hierarchyType.code\" name=\"code\" type=\"input\" class=\"form-control\" id=\"codeInput\"\n          [disabled]=\"edit || readOnly\" required>\n      </div>\n      <div class=\"form-group\" *ngFor=\"let localeValue of hierarchyType.label.localeValues\">\n        <label for=\"labelInput\">\n          <localize key=\"data.property.label.label\"></localize> \n          <span  style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n        </label>\n        <input [disabled]=\"readOnly\" [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\"\n          required>\n      </div>\n      \n      <localized-text [(value)]=\"hierarchyType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\" [disabled]=\"readOnly\"></localized-text>\n\n      <div class=\"form-group\">\n        <label for=\"organization\">\n          <localize key=\"attribute.organization.label\"></localize>\n        </label>\n        <select *ngIf=\"!edit && organizations.length > 1\" [disabled]=\"edit || readOnly\" class=\"select-area\" name=\"organization\"\n          [(ngModel)]=\"hierarchyType.organizationCode\" required>\n          <option></option>\n          <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label.localizedValue}}</option>\n        </select>\n        <span *ngIf=\"!edit && organizations.length == 1\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n        <span *ngIf=\"edit\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.progress\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.progress\" name=\"progress\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.acknowledgement\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.acknowledgement\" name=\"acknowledgement\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.disclaimer\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.disclaimer\" name=\"disclaimer\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.accessConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.useConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      \n      <hr/>\n      \n      <div class=\"form-group\">\n        <h4>\n          <localize key=\"masterlist.contact\"></localize>\n        </h4>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.contact\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.contact\" name=\"contact\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.phoneNumber\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.phoneNumber\" name=\"phoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.email\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>      \n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readOnly\" type=\"submit\" [disabled]=\"hierarchyType.code.length < 1 || form.invalid\" class=\"btn btn-primary\"\n              (click)=\"handleOnSubmit()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { Organization } from '@shared/model/core';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\n@Component({\n\tselector: 'create-geoobjtype-modal',\n\ttemplateUrl: './create-geoobjtype-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateGeoObjTypeModalComponent implements OnInit {\n\n\tgeoObjectType: GeoObjectType;\n\torganization: Organization = null;\n\tmessage: string = null;\n\tparents: GeoObjectType[];\n\thierarchyType: HierarchyType;\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onGeoObjTypeCreate: Subject<GeoObjectType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjTypeCreate = new Subject();\n\n\t\tthis.geoObjectType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"geometryType\": \"MULTIPOINT\",\n\t\t\t\"isLeaf\": false,\n\t\t\t\"isGeometryEditable\": true,\n\t\t\t\"organizationCode\": \"\",\n\t\t\t\"attributes\": [],\n\t\t};\n\t}\n\n\tinit(organization: Organization, parents: GeoObjectType[], groupSuperType: GeoObjectType, isAbstract: boolean) {\n\n\t\tthis.geoObjectType.isAbstract = isAbstract ? isAbstract : false;\n\n\t\tif (groupSuperType) {\n\t\t\tthis.geoObjectType.superTypeCode = groupSuperType.code;\n\t\t\tthis.geoObjectType.geometryType = groupSuperType.geometryType;\n\t\t\tthis.geoObjectType.isPrivate = groupSuperType.isPrivate;\n\t\t}\n\n\t\t// Filter out parents that are not abstract\n\t\tthis.parents = parents.filter(parent => parent.isAbstract);\n\n\t\t// Filter out organizations they're not RA's of\n\t\tthis.organization = organization;\n\t\tthis.geoObjectType.organizationCode = this.organization.code;\n\t\tthis.organizationLabel = this.organization.label.localizedValue;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tthis.registryService.createGeoObjectType(JSON.stringify(this.geoObjectType)).then(data => {\n\t\t\tthis.onGeoObjTypeCreate.next(data);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\ttoggleIsLeaf(): void {\n\t\tthis.geoObjectType.isLeaf = !this.geoObjectType.isLeaf;\n\t}\n\n\ttoggleIsGeometryEditable(): void {\n\t\tthis.geoObjectType.isGeometryEditable = !this.geoObjectType.isGeometryEditable;\n\t}\n\n\ttoggleIsAbstract(): void {\n\t\tthis.geoObjectType.isAbstract = !this.geoObjectType.isAbstract;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"form.valid && handleOnSubmit()\" class=\"modal-form\">\n\n  <div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize *ngIf=\"geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.group.title\"></localize> \n        <localize *ngIf=\"!geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.title\"></localize> \n      </h1>\n    </div> \n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <div>\n            <label for=\"codeInput\">\n              <localize key=\"data.property.label.code\"></localize>\n            </label>\n            <input [(ngModel)]=\"geoObjectType.code\" name=\"code\" type=\"text\" class=\"form-control\" id=\"codeInput\"\n              required>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\" *ngFor=\"let localeValue of geoObjectType.label.localeValues\">\n          <label>\n            <localize key=\"data.property.label.label\"></localize> \n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\"\n            class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <localized-text [(value)]=\"geoObjectType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\"></localized-text>\n      </div>\n    </div>\n    \n    <div class=\"row\" *ngIf=\"!geoObjectType.superTypeCode\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <label style=\"display: block;\">\n            <localize key=\"attribute.group.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n        \n          <label style=\"display: block;\">\n            <localize key=\"geoObjectType.attr.visibility.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"geoObjectType.superTypeCode != null\" [(value)]=\"geoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"geometryType\">\n            <localize key=\"data.property.label.geometryType\"></localize>\n          </label>\n          <select class=\"select-area\" name=\"geometryType\" [(ngModel)]=\"geoObjectType.geometryType\" required [disabled]=\"geoObjectType.superTypeCode != null && geoObjectType.superTypeCode != ''\">\n            <option></option>\n            <!-- <option value=\"POINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"LINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"POLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n            <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.multipoint\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.multiline\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.multipolygon\"></localize>\n            </option> -->\n             <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <!-- \n    <div class=\"form-group\">\n      <div >\n        <div class=\"check-block\" style=\"display:inline-block;\">\n         <div (click)=\"toggleIsLeaf()\" [ngClass]=\"{'chk-checked' : geoObjectType.isLeaf}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n          <span></span>\n         </div>\n    \n         <label class=\"checkbox-label\" style=\"line-height: normal;\"> <localize key=\"hierarchy.management.option.label.isLeafNode\"></localize></label>\n        </div>\n       </div>\n    </div>\n -->\n\n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <div class=\"check-block\">\n            <div (click)=\"toggleIsGeometryEditable()\" [ngClass]=\"{'chk-checked' : geoObjectType.isGeometryEditable}\"\n              style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n              <span></span>\n            </div>\n\n            <label class=\"checkbox-label\">\n              <localize key=\"hierarchy.management.option.label.isGeometryEditable\"></localize>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"organization\">\n            <localize key=\"attribute.organization.label\"></localize>\n          </label>\n          <span class=\"text\">\n            <input type=\"text\" name=\"organization\" [(ngModel)]=\"organizationLabel\" disabled required>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-primary\">\n            <localize key=\"modal.button.ok\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyService, GeoObjectTypeManagementService } from '@registry/service';\n\n\n@Component({\n\tselector: 'manage-geoobjecttype-modal',\n\ttemplateUrl: './manage-geoobjecttype-modal.component.html',\n\tstyleUrls: ['./manage-geoobjecttype-modal.css']\n})\nexport class ManageGeoObjectTypeModalComponent implements OnInit {\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": \"\", \"termOption\": \"\" };\n\tmodalStateSubscription: Subscription;\n\tgeoObjectType: GeoObjectType;\n\tpublic onGeoObjectTypeSubmitted: Subject<GeoObjectType>;\n\treadOnly: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, geoObjectTypeManagementService: GeoObjectTypeManagementService) {\n\t\tthis.modalStateSubscription = geoObjectTypeManagementService.modalStepChange.subscribe(modalState => {\n\t\t\tthis.modalState = modalState;\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjectTypeSubmitted = new Subject();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.modalStateSubscription.unsubscribe();\n\t}\n\n\tonModalStateChange(state: any): void {\n\t\tthis.modalState = state;\n\t}\n\n\tonGeoObjectTypeChange(data: any): void {\n\t\t// send persisted geoobjecttype to the parent calling component (hierarchy.component) so the \n\t\t// updated GeoObjectType can be reflected in the template\n\t\tthis.onGeoObjectTypeSubmitted.next(data);\n\t}\n\n\tupdate(): void {\n\n\t}\n\n\tclose(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","\n<form>\n\n  <modal-step-indicator></modal-step-indicator>\n\n  <geoobjecttype-input *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\" [readOnly]=\"readOnly\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\" [geoObjectType]=\"geoObjectType\" [setGeoObjectType]=\"geoObjectType\"></geoobjecttype-input>\n\n  <manage-attributes-modal *ngIf=\"modalState.state === 'MANAGE-ATTRIBUTES'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></manage-attributes-modal>\n\n  <define-attribute-modal-content *ngIf=\"modalState.state === 'DEFINE-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></define-attribute-modal-content>\n\n  <edit-attribute-modal-content *ngIf=\"modalState.state === 'EDIT-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></edit-attribute-modal-content>\n\n  <manage-term-options *ngIf=\"modalState.state === 'MANAGE-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\"></manage-term-options>\n\n  <edit-term-option-input *ngIf=\"modalState.state === 'EDIT-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" [termOption]=\"modalState.termOption\"></edit-term-option-input>\n\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { StepConfig } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component( {\n    selector: 'geoobjecttype-input',\n    templateUrl: './geoobjecttype-input.component.html',\n    styleUrls: ['./geoobjecttype-input.css']\n} )\nexport class GeoObjectTypeInputComponent implements OnInit {\n\n    @Input() readOnly: boolean = false;\n    @Input() geoObjectType: GeoObjectType;\n    @Output() geoObjectTypeChange:  EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n    editGeoObjectType: GeoObjectType;\n    \n    organizationLabel: string;\n    \n    @Input('setGeoObjectType') \n    set in(geoObjectType: GeoObjectType){\n        if(geoObjectType){\n          this.editGeoObjectType = JSON.parse(JSON.stringify(geoObjectType));\n        //   this.geoObjectType = geoObjectType;\n        }\n    }\n    message: string = null;\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\":\"\", \"termOption\":\"\"};\n\n    modalStepConfig: StepConfig = {\"steps\": [\n        {\"label\":this.localizationService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\":true, \"enabled\":true}\n    ]};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, \n        private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, \n        private localizationService: LocalizationService, private registryService: RegistryService ) {\n    \n    }\n\n    ngOnInit(): void {\n\n        this.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n        this.geoObjectTypeManagementService.setModalState(this.modalState);\n        \n        this.fetchOrganizationLabel();\n    }\n\n    fetchOrganizationLabel(): void {\n        \n      this.registryService.getOrganizations().then(orgs => {\n      \n        for (var i = 0; i < orgs.length; ++i)\n        {\n          if (orgs[i].code === this.editGeoObjectType.organizationCode)\n          {\n            this.organizationLabel = orgs[i].label.localizedValue;\n          }\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n      });\n    }\n\n    manageAttributes(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageAttributes, \"attribute\":\"\", \"termOption\":\"\"})\n    }\n\n    onModalStateChange(state: ManageGeoObjectTypeModalState): void {\n        this.modalState = state;\n    }\n\n    update(): void {\n        this.registryService.updateGeoObjectType( this.editGeoObjectType ).then( geoObjectType => {\n\n            // emit the persisted geoobjecttype to the parent widget component (manage-geoobjecttype.component)\n            // so that the change can be updated in the template\n            this.geoObjectTypeChange.emit(geoObjectType);\n\n            this.close();\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // resetGeoObjectType(): void {\n    //     this.geoObjectType = this.geoObjectTypeOriginal;\n    // }\n\n    close(): void {\n        // this.resetGeoObjectType();\n        this.bsModalRef.hide();\n    }\n\n\n    isValid(): boolean {\n        // if(this.attribute.code && this.attribute.label) {\n\n        //     // if code has a space\n        //     if(this.attribute.code.indexOf(\" \") !== -1){\n        //         return false;\n        //     }\n\n        //     // If label is only spaces\n        //     if(this.attribute.label.replace(/\\s/g, '').length === 0) {\n        //         return false\n        //     }\n\n        //     return true;\n        // }\n        \n        // return false;\n\n        return true;\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","\n<div class=\"modal-body\" *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"editGeoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading text-center\">\n            <h1>\n                <localize key=\"hierarchy.management.edit.geoobjecttype.title\"></localize>\n                : {{editGeoObjectType.label.localizedValue}}\n            </h1>\n        </div>\n        <fieldset>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.code\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"editGeoObjectType.code\" name=\"code\" disabled required>\n                    </span>\n                </div>\n            </div>\n            \n            <localized-input [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.label\" key=\"data.property.label.label\"></localized-input>\n            <localized-text [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.description\" key=\"data.property.label.description\"></localized-text>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"attribute.group.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"geoObjectType.attr.visibility.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"geoObjectType.superTypeCode\" [(value)]=\"editGeoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\" *ngIf=\"!geoObjectType.isAbstract && geoObjectType.superTypeCode\">\n                <div class=\"label-holder\">\n                    <localize key=\"attribute.parentType.label\"></localize>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> \n                        {{geoObjectType.superTypeCode}}\n                    </span>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.geometryType\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select name=\"geometryType\" [(ngModel)]=\"editGeoObjectType.geometryType\" disabled>\n                        <option></option>\n                         <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <!-- <option value=\"POINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"LINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"POLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.multipoint\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.multiline\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.multipolygon\"></localize></option> -->\n                    </select>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.option.label.geometryEditable\"></localize></label>\n                </div>\n                <div class=\"holder\">\n\n                    <boolean-field [disable]=\"readOnly\" [(value)]=\"editGeoObjectType.isGeometryEditable\" [localizeLabelKey]=\"'hierarchy.management.option.label.isGeometryEditable'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"attribute.organization.label\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n              </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group list-group-flush\">\n                                <li *ngFor=\"let attr of editGeoObjectType.attributes\" class=\"list-group-item\">{{attr.label.localizedValue}}</li>\n                            </ul>\n\n                            <button [disabled]=\"readOnly || geoObjectType.superTypeCode\" type=\"button\" class=\"btn btn-primary full-width\" (click)=\"manageAttributes()\">\n                                <localize key=\"modal.button.manageAttributes\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.cancel\"></localize>\n                        </button>\n                        <button *ngIf=\"!readOnly\" type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"update()\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n        </fieldset>\n    </form>\n</div>\n\n<!-- </form> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component({\n\tselector: 'manage-attributes-modal',\n\ttemplateUrl: './manage-attributes-modal.component.html',\n\tstyleUrls: ['./manage-attributes-modal.css']\n})\nexport class ManageAttributesModalComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": this.attribute, \"termOption\": \"\" };\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onDeleteAttribute: Subject<boolean>;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, private localizeService: LocalizationService,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onDeleteAttribute = new Subject();\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.onDeleteAttribute.unsubscribe();\n\t}\n\n\tdefineAttributeModal(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\teditAttribute(attr: Attribute, e: any): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": attr, \"termOption\": \"\" })\n\t}\n\n\tremoveAttributeType(attr: Attribute, e: any): void {\n\n\t\tthis.confirmBsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.confirmBsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + attr.label.localizedValue + ']';\n\t\tthis.confirmBsModalRef.content.data = { 'attributeType': attr, 'geoObjectType': this.geoObjectType };\n\t\tthis.confirmBsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.confirmBsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.confirmBsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteAttributeType(data.geoObjectType.code, data.attributeType);\n\t\t});\n\t}\n\n\tdeleteAttributeType(geoObjectTypeCode: string, attr: Attribute): void {\n\n\t\tthis.registryService.deleteAttributeType(geoObjectTypeCode, attr.code).then(data => {\n\t\t\tthis.onDeleteAttribute.next(data);\n\n\t\t\tif (data) {\n\t\t\t\tthis.geoObjectType.attributes.splice(this.geoObjectType.attributes.indexOf(attr), 1);\n\t\t\t}\n\t\t\t\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"geoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading\">\n            <h1>\n                <localize key=\"hierarchy.management.manage.attributes.title\"></localize> {{geoObjectType.label.localizedValue}}</h1>\n        </div>\n        <fieldset>\n\n            <div>\n                <div class=\"label-holder\">\n                    <label>\n                        <localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder dataset-attr-holder\">\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <localize key=\"data.property.label.label\"></localize>\n                                    </th>\n                                    <th class=\"button-column-header\">\n                                        <localize key=\"data.property.label.actions\"></localize>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let attr of geoObjectType.attributes\">\n                                    <td>{{attr.label.localizedValue}}</td>\n                                    <td class=\"button-column\">\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\"\n                                            [title]=\"'modal.button.edit' | localize\"></a>\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\"\n                                            [title]=\"'modal.button.remove' | localize\"></a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <!-- <table class=\"list-table table table-bordered table-striped\">\n                        <tbody>\n                        <tr *ngFor=\"let attr of geoObjectType.attributes\" class=\"fade-ngRepeat-item\">\n                            <td class=\"button-column\">\n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\" title=\"<localize key='modal.button.edit'></localize>\"></a>                             \n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\" title=\"<localize key='modal.button.remove'></localize>\"></a>\n                            </td>                  \n                            <td class=\"submit-form\">\n                            <dl>\n                                <dd>\n                                <h4 class=\"disabled\" >{{attr.label}}</h4>\n                                </dd>\n                            </dl>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table> -->\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <i class=\"fa fa-plus clickable\" style=\"font-size:20px;margin:10px 0 10px 0;\" aria-hidden=\"true\" (click)=\"defineAttributeModal()\">\n                        <localize key=\"modal.button.add\"></localize>\n                    </i>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n\n</div>\n\n","import { Component, OnInit, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, AttributeTerm, AttributeDecimal, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n@Component({\n\tselector: 'define-attribute-modal-content',\n\ttemplateUrl: './define-attribute-modal-content.component.html',\n\tstyleUrls: ['./define-attribute-modal-content.css']\n})\nexport class DefineAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tnewAttribute: Attribute = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.create.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" };\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.setAttribute(\"character\");\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit(): void {\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tthis.attributeInputComponent.animate();\n\t\t}\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.addAttributeType(this.geoObjectType.code, this.newAttribute).then(data => {\n\t\t\tthis.geoObjectType.attributes.push(data);\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsetAttribute(type: string): void {\n\t\tif (type === 'term') {\n\t\t\tthis.newAttribute = new AttributeTerm(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse if (type === 'float') {\n\t\t\tthis.newAttribute = new AttributeDecimal(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse {\n\t\t\tthis.newAttribute = new Attribute(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t}\n\n\tisFormValid(): boolean {\n\n\t\tlet isAttrValid: boolean = false;\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tisAttrValid = this.attributeInputComponent.isValid();\n\t\t}\n\n\t\tif (isAttrValid) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <!-- <error-message [message]=\"message\"></error-message> -->\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.define.attribute.title\"></localize>\n                    </h1>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\" style=\"margin-bottom: 20px;\">\n                        <div class=\"btn-group define-attribute-btns\">\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'character'}\" (click)=\"setAttribute('character')\">\n                                <localize key=\"data.type.label.text\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'integer'}\" (click)=\"setAttribute('integer')\">\n                                <localize key=\"data.type.label.integer\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'float'}\" (click)=\"setAttribute('float')\">\n                                <localize key=\"data.type.label.float\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'date'}\" (click)=\"setAttribute('date')\">\n                                <localize key=\"data.type.label.date\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'boolean'}\" (click)=\"setAttribute('boolean')\">\n                                <localize key=\"data.type.label.boolean\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'term'}\" (click)=\"setAttribute('term')\">\n                                <localize key=\"data.type.label.term\"></localize>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"false\" [excludeDescription]=\"false\" [isDecimal]=\"newAttribute.type === 'float' ? true : false\" [(attribute)]=\"newAttribute\"></attribute-input>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidatorFn, Validator, FormControl } from '@angular/forms';\n\n\n// validation function\nfunction validateGeoObjectAttributeCodeValidator() : ValidatorFn {\n  return (c: AbstractControl) => {\n    if(c.value){\n        let isValid = c.value.indexOf(\" \") === -1;\n        \n        if(isValid) {\n            return null;\n        } else {\n            return {\n                geoObjectAttributeCode: {\n                     valid: false\n                }\n            };\n        }\n    }\n\n  }\n}\n\n\n@Directive({\n  selector: '[geoObjectAttributeCode][ngModel]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: GeoObjectAttributeCodeValidator, multi: true }\n  ]\n})\nexport class GeoObjectAttributeCodeValidator implements Validator {\n  validator: ValidatorFn;\n  \n  constructor() {\n    this.validator = validateGeoObjectAttributeCodeValidator();\n  }\n  \n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n  \n}","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\n\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n\n@Component({\n\tselector: 'edit-attribute-modal-content',\n\ttemplateUrl: './edit-attribute-modal-content.component.html',\n\tstyleUrls: ['./edit-attribute-modal-content.css']\n})\nexport class EditAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\tconstructor(public bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeType(this.geoObjectType.code, this.attribute).then(data => {\n\n\t\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\t\tif (attr.code === data.code) {\n\t\t\t\t\tObject.assign(attr, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\tback(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n            \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.attribute.title\"></localize>: {{attribute.label.localizedValue}}\n                    </h1>\n                    \n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'character'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.text\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'integer'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.integer\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'float'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.float\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'boolean'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.boolean\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'date'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.date\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'term'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.term\"></localize></h4>                    \n                </div>\n                \n                \n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"true\" [excludeDescription]=\"attribute.type === 'term' ? true : false\" [isDecimal]=\"attribute.type === 'float' ? true : false\" [(attribute)]=\"attribute\"></attribute-input>\n\n                    <!-- *ngIf=\"attribute.type === 'term' && isFormValid()\" -->\n                    <term-option-widget *ngIf=\"attribute.type === 'term' && isFormValid()\" [(attribute)]=\"attribute\" [geoObjectType]=\"geoObjectType\"></term-option-widget>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n    \n\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, AttributeTerm, GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, Term} from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service/hierarchy.service';\nimport { GeoObjectTypeManagementService } from '@registry/service/geoobjecttype-management.service'\n\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component( {\n    selector: 'term-option-widget',\n    templateUrl: './term-option-widget.component.html',\n    styleUrls: ['./term-option-widget.css'],\n    animations: [\n        trigger('toggleInputs', [\n            state('none, void', \n                style({ 'opacity': 0})\n              ),\n              state('show', \n                style({ 'opacity': 1})\n              ),\n              transition('none => show', animate('300ms')),\n              transition('show => none', animate('100ms'))\n        ]),\n        trigger('openClose', \n            [\n            transition(\n                ':enter', [\n                style({ 'opacity': 0}),\n                animate('500ms', style({ 'opacity': 1}))\n                ]\n            ),\n            transition(\n                ':leave', [\n                style({ 'opacity': 1}),\n                animate('0ms', style({'opacity': 0})),\n                \n                ]\n            )]\n      )\n    ]\n} )\nexport class TermOptionWidgetComponent implements OnInit {\n\n    @Input() geoObjectType: GeoObjectType;\n    @Input() attribute: AttributeTerm;\n    @Output() attributeChange = new EventEmitter<AttributeTerm>();\n    message: string = null;\n    state: string = 'none';\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\":\"\"};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService ) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit() {\n        this.state = 'show';\n        this.cdr.detectChanges();\n    }\n\n    ngOnDestroy(){\n    \n    }\n\n    handleOnSubmit(): void {\n        \n    }\n\n    animate(): void {\n        this.state = \"none\";\n    }\n\n    onAnimationDone(event: AnimationEvent): void {\n        this.state = \"show\";\n    }\n\n    // isValid(): boolean {\n    //     if(this.termOption.code && this.termOption.code.length > 0 && this.termOption.label && this.termOption.label.length > 0){\n            \n    //         // If code has a space\n    //         if(this.termOption.code.indexOf(\" \") !== -1){\n    //             return false;\n    //         }\n\n    //         // If label is only spaces\n    //         if(this.termOption.label.replace(/\\s/g, '').length === 0) {\n    //             return false\n    //         }\n\n    //         return true;\n    //     }\n    //     else if(this.termOption.code && this.termOption.code.indexOf(\" \") !== -1){\n    //         return false;\n    //     }\n            \n    //     return false\n    // }\n\n    openAddTermOptionForm(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\": \"\"})\n\n    }    \n}\n","<div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n\n    <div>\n        <div class=\"label-holder\">\n            <label>\n                <localize key=\"hierarchy.management.manage.attributes.label.displayTerms\"></localize>\n            </label>\n        </div>\n        <div class=\"holder\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <ul class=\"list-group list-group-flush\">\n                        <li *ngFor=\"let term of attribute.rootTerm.children\" class=\"list-group-item\">{{term.label.localizedValue}}</li>\n                    </ul>\n\n                    <button type=\"button\" class=\"btn btn-primary full-width\" (click)=\"openAddTermOptionForm()\">\n                        <localize key=\"modal.button.manageTermOptions\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { GeoObjectType, AttributeTerm, Term, GeoObjectTypeModalStates } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-term-options',\n\ttemplateUrl: './manage-term-options.component.html',\n\tstyleUrls: ['./manage-term-options.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms')),\n\t\t\ttransition('show => none', animate('100ms'))\n\t\t]),\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class ManageTermOptionsComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Output() attributeChange = new EventEmitter<AttributeTerm>();\n\tmessage: string = null;\n\ttermOption: Term;\n\tstate: string = 'none';\n\tenableTermOptionForm = false;\n\tmodalStepConfig: StepConfig = {\r\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": true }\n\t\t]\r\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t\tthis.termOption = new Term(\"\", this.localizeService.create(), this.localizeService.create());\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.termOption.code && this.termOption.code.length > 0) {\n\n\t\t\t// If code has a space\n\t\t\tif (this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If label is only spaces\n\t\t\tfor (let i = 0; i < this.termOption.label.localeValues.length; i++) {\n\t\t\t\tif (this.termOption.label.localeValues[i].value.replace(/\\s/g, '').length === 0) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.termOption.code && this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false\n\t}\n\n\taddTermOption(): void {\n\n\t\tthis.registryService.addAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\n\t\t\tthis.attribute.rootTerm.children.push(data);\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t\tthis.enableTermOptionForm = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tdeleteTermOption(termOption: Term): void {\n\n\t\tthis.registryService.deleteAttributeTermTypeOption(this.attribute.rootTerm.code, termOption.code).then(data => {\n\n\t\t\tif (this.attribute.rootTerm.children.indexOf(termOption) !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children.splice(this.attribute.rootTerm.children.indexOf(termOption), 1);\n\t\t\t}\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tremoveTermOption(termOption: Term): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + termOption.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteTermOption(termOption);\n\t\t});\n\t}\n\n\teditTermOption(termOption: Term): void {\n\n\t\tconst state = {\n\t\t\t\"state\": GeoObjectTypeModalStates.editTermOption,\n\t\t\t\"attribute\": this.attribute,\n\t\t\t\"termOption\": JSON.parse(JSON.stringify(termOption))\n\t\t};\n\n\t\tthis.geoObjectTypeManagementService.setModalState(state);\n\t}\n\n\tclearTermOption(): void {\n\t\tthis.termOption.code = \"\";\n\t\tthis.termOption.label = this.localizeService.create();\n\t\tthis.termOption.description = this.localizeService.create();\n\t}\n\n\tcancelTermOption(): void {\n\t\tthis.clearTermOption();\n\t\tthis.enableTermOptionForm = false;\n\t}\n\n\topenAddTermOptionForm(): void {\n\t\tthis.enableTermOptionForm = true;\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <fieldset>\n\n            <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n            <div class=\"heading\">\n                <h1>\n                    <localize key=\"hierarchy.management.edit.term.options.title\">: {{attribute.label.localizedValue}}</localize>\n                </h1>\n            </div>\n            <div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n                <div [@openClose]>\n                    <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"term.option.input.label.existingTypes\"></localize>\n                        </label>\n                    </div>\n                    <div class=\"holder\">\n                        <span class=\"text\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>\n                                                <localize key=\"data.property.label.code\"></localize>\n                                            </th>\n                                            <th *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <localize key=\"data.property.label.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n                                            </th>\n                                            <th class=\"button-column-header\">\n                                                <localize key=\"data.property.label.actions\"></localize>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let option of attribute.rootTerm.children\">\n                                            <td>{{option.code}}</td>\n                                            <td *ngFor=\"let localeValue of option.label.localeValues\">{{localeValue.value}}</td>\n                                            <td class=\"button-column\">\n                                                <a class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editTermOption(option, $event)\"></a>\n                                                <a class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeTermOption(option, $event)\"></a>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <input type=\"text\" [(ngModel)]=\"termOption.code\" name=\"termOptionCode\" [required]=\"termOption.label ? true : null \">\n                                            </td>\n                                            <td *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <input type=\"text\" [(ngModel)]=\"localeValue.value\" [name]=\"'termOptionLabel-' + localeValue.locale\" [required]=\"termOption.code ? true : null \">\n                                            </td>\n                                            <td class=\"button-column\">\n                                                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"addTermOption()\">\n                                                    <localize key=\"modal.button.add\"></localize>\n                                                </button>\n                                                <!-- <a class=\"fa fa-plus-square ico-edit\" [routerLink]=\"\" (click)=\"addTermOption()\"></a> -->\n                                                <!-- <a class=\"fa fa-trash ico-remove\" [routerLink]=\"\" (click)=\"cancelTermOption()\"></a> -->\n                                                <!-- <button type=\"button\" class=\"btn btn-default\" (click)=\"cancelTermOption()\">\n                                    <localize key=\"modal.button.cancel\"></localize> \n                                </button> -->\n\n                                            </td>\n                                        </tr>\n                                        <!-- <tr>\n                          <td></td>\n                          <td></td>\n                          <td class=\"button-column\"> \n                            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"enableTermOptionForm === false\" (click)=\"openAddTermOptionForm()\">\n                                <localize key=\"modal.button.add\"></localize>\n                            </button>\n                          </td>\n                        </tr> -->\n                                        <!-- <a class=\"fa fa-plus\" [routerLink]=\"\" (click)=\"openAddTermOptionForm()\"></a> -->\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.done\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig } from '@shared/model/modal';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { GeoObjectType, AttributeTerm, Term, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\n@Component({\n\tselector: 'edit-term-option-input',\n\ttemplateUrl: './edit-term-option-input.component.html',\n\tstyleUrls: [],\n\tanimations: [\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class EditTermOptionInputComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Input() termOption: Term;\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.term.option\"), \"active\": true, \"enabled\": true }\n\n\t\t]\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\t\t\t// Update the term definition on the attribute\n\t\t\tconst index = this.attribute.rootTerm.children.findIndex(t => t.code === data.code);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children[index] = data;\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #tForm=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"!tForm.invalid && handleOnSubmit()\">\n    \n        <div class=\"\">\n            <div class=\"\">\n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.term.option.title\"></localize>\n                    </h1>\n                </div>\n\n                <fieldset>\n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                            <label>\n                                <localize key=\"data.property.label.code\"></localize>\n                            </label>\n                        </div>\n                        <div class=\"holder\">\n                            <span class=\"text\">\n                                <input type=\"text\" [disabled]=\"true\" [(ngModel)]=\"termOption.code\" name=\"code\">\n                            </span>\n                        </div>\n                    </div>\n                    \n                    <localized-input [(value)]=\"termOption.label\" key=\"data.property.label.label\"></localized-input>\n                    \n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                        </div>\n                        <div class=\"holder\">\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"tForm.invalid\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n\n</div>\n","import * as d3 from 'd3';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyComponent } from '../hierarchy.component';\nimport { SvgHierarchyNode } from './svg-hierarchy-node';\nimport { calculateTextWidth, svgPoint } from './svg-util';\nimport { INHERITED_NODE_BANNER_COLOR, DEFAULT_NODE_BANNER_COLOR, RELATED_NODE_BANNER_COLOR, DEFAULT_NODE_FILL, INHERITED_NODE_FILL } from '../hierarchy.component';\n\nimport { LocalizationService } from '@shared/service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { TREE_SCALE_FACTOR_X, TREE_SCALE_FACTOR_Y } from '../hierarchy.component'; \n\nexport class SvgHierarchyType {\n\n\tpublic static gotRectW: number = 150;\n\tpublic static gotRectH: number = 25;\n\tpublic static gotBodyFontSize: number = 8;\n\tpublic static gotOptionsButtonFontSize: number = 12;\n\n\tpublic static gotHeaderW: number = 150;\n\tpublic static gotHeaderH: number = 14;\n\tpublic static gotHeaderFontSize: number = 8;\n\t\n\tpublic static MOUSE_HOVER_EVENT_ENTER = \"mouseenter\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_MOVE = \"mousemove\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_EXIT = \"mouseleave\";\n\t\n\thierarchyComponent: HierarchyComponent;\n\n\thierarchyType: HierarchyType;\n\n\tsvgEl: any;\n\n\td3Hierarchy: any;\n\n\td3Tree: any;\n\n\tisPrimary: boolean;\n\t\n\ttooltip: any;\n\n\tpublic constructor(hierarchyComponent: HierarchyComponent, svgEl: any, ht: HierarchyType, isPrimary: boolean, public localizationService: LocalizationService, public modalService: BsModalService) {\n\t\tconst hierarchyType = ht;\n\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.hierarchyType = hierarchyType;\n\t\tthis.svgEl = svgEl;\n\n\t\tthis.d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]);\n\t\tthis.isPrimary = isPrimary;\n\n\t\tthis.d3Tree = d3.tree().nodeSize([ SvgHierarchyType.gotRectW*TREE_SCALE_FACTOR_X, (SvgHierarchyType.gotRectH + SvgHierarchyType.gotHeaderH)*TREE_SCALE_FACTOR_Y ]).separation((a, b) => 0.8)(this.d3Hierarchy);\n\t}\n\t\n\tpublic getD3Tree() {\n\t\treturn this.d3Tree;\n\t}\n\n\tpublic getCode(): string {\n\t\treturn this.hierarchyType.code\n\t}\n\n\tpublic getNodeByCode(gotCode: string): SvgHierarchyNode {\n\t\tlet treeNode = this.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n\t\t\n\t\tif (treeNode == null)\n\t\t{\n\t\t  return null;\n\t\t}\n\t\t\n\t\treturn new SvgHierarchyNode(this.hierarchyComponent, this, this.hierarchyComponent.findGeoObjectTypeByCode(gotCode), treeNode, this.localizationService, this.modalService);\n\t}\n\n\tpublic renderHierarchyHeader(hg: any, colHeaderLabel: string) {\n\t\tlet bbox = hg.node().getBBox();\n\n\t\tlet colHeader = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tlet headerg = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tconst headerFontSize: number = 10;\n\t\tconst iconWidth: number = 20;\n\t\tconst maxHierarchyLabelLength = 200;\n\t\t\n\t\tlet hierarchyLabelW: number = calculateTextWidth(this.hierarchyType.label.localizedValue, headerFontSize);\n\t\tlet hierarchyLabelH:number = headerFontSize*1.4;\n\t\tlet hierarchyLabelY:number = bbox.y + headerFontSize*1.6;\n\t\tif (hierarchyLabelW > maxHierarchyLabelLength)\n\t\t{\n\t\t  hierarchyLabelW = maxHierarchyLabelLength;\n\t\t  hierarchyLabelH = headerFontSize*2.7;\n\t\t  hierarchyLabelY = bbox.y + headerFontSize;\n\t\t}\n\n\t\tlet lineWidth = bbox.width;\n\t\tlet textWidth = hierarchyLabelW + iconWidth;\n\n\t\tif (textWidth > lineWidth) {\n\t\t\tlineWidth = textWidth;\n\t\t}\n\n\t\t// Hierarchy icon (font awesome)\n\t\theaderg.append(\"text\").classed(\"hierarchy-header-icon\", true)\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"font-size\", 12)\n\t\t\t.text('\\uf0e8');\n\n\t\t// Hierarchy display label\n\t\tcolHeader.append(\"foreignObject\").classed(\"hierarchy-header-label\", true)\n      .attr(\"font-size\", headerFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"x\", bbox.x + iconWidth)\n      .attr(\"y\", hierarchyLabelY)\n      .attr(\"width\", hierarchyLabelW)\n      .attr(\"height\", hierarchyLabelH)\n      .append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"text-align\", \"left\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"gray\")\n      //.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n      .style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n      .html((d: any) => this.hierarchyType.label.localizedValue)\n\n\t\t// Line underneath the header\n\t\theaderg.append(\"line\").classed(\"hierarchy-header-line\", true)\n\t\t\t.attr(\"x1\", bbox.x)\n\t\t\t.attr(\"y1\", bbox.y + headerFontSize)\n\t\t\t.attr(\"x2\", bbox.x + lineWidth)\n\t\t\t.attr(\"y2\", bbox.y + headerFontSize)\n\t\t\t.attr(\"stroke\", \"grey\")\n\t\t\t.attr(\"stroke-width\", .5);\n\n\t\tlet headerGBbox = headerg.node().getBBox();\n\t\theaderg.attr(\"transform\", \"translate(0 -\" + headerGBbox.height + \")\");\n\n\t\t// Col header label\n\t\tcolHeader.append(\"text\").classed(\"hierarchy-header-label\", true)\n\t\t\t.attr(\"font-size\", headerFontSize + 2)\n\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.text(colHeaderLabel);\n\t  \n\t\tcolHeader.attr(\"transform\", \"translate(0 -\" + headerGBbox.height * 2.5 + \")\");\n\n\t\treturn headerg;\n\t}\n\n\tgetRelatedHierarchies(gotCode: string): string[] {\n\t\tlet got: GeoObjectType = this.hierarchyComponent.findGeoObjectTypeByCode(gotCode);\n\n\t\tif (got.relatedHierarchies == null) {\n\t\t\tgot.relatedHierarchies = this.hierarchyComponent.calculateRelatedHierarchies(got);\n\t\t}\n\n    let relatedHiers: string[] = got.relatedHierarchies;\n\n\t\tlet index = null;\n\t\tfor (let i = 0; i < relatedHiers.length; ++i) {\n\t\t\tif (relatedHiers[i] === this.getCode()) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\n\t\tif (index != null) {\n\t\t\trelatedHiers.splice(index, 1);\n\t\t}\n\n\t\treturn relatedHiers;\n\t}\n\t\n\tprivate nodeMouseover(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 1);\n\t}\n\t\n\tprivate nodeMousemove(event: any, element: any, data:any)\n\t{\n    d3.select(\"#hierarchyLabel\").html(this.hierarchyType.label.localizedValue);\n    d3.select(\"#hierarchyCodeLabel\").html(this.hierarchyType.code);\n    \n    d3.select(\"#geoObjectTypeLabel\").html(data.data.label);\n    d3.select(\"#geoObjectTypeCodeLabel\").html(data.data.geoObjectType);\n    \n    d3.select(\"#hierarchyOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyType.organizationCode).label.localizedValue);\n    d3.select(\"#geoObjectTypeOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyComponent.findGeoObjectTypeByCode(data.data.geoObjectType).organizationCode).label.localizedValue);\n    \n    let nodeTooltip: any = d3.select(\"#NodeTooltip\").node();\n    let nodeTooltipBbox: DOMRect = nodeTooltip.getBoundingClientRect();\n    \n    let pos = {x: event.pageX, y: event.pageY};\n    const yPointerOffset: number = 50;\n    const xPointerOffset: number = 0;\n    \n    // If overflow off bottom of page\n    if ((event.pageY + nodeTooltipBbox.height + yPointerOffset) > document.documentElement.scrollHeight)\n    {\n      // render above mouse pointer\n      pos.y = event.pageY - nodeTooltipBbox.height - yPointerOffset;\n    }\n    \n    // If overflow off right side of page\n    if ((event.pageX + nodeTooltipBbox.width + xPointerOffset) > document.documentElement.scrollWidth)\n    {\n      // render to the left of the mouse pointer\n      pos.x = event.pageX - nodeTooltipBbox.width - xPointerOffset;\n    }\n    \n    d3.select(\"#NodeTooltip\")\n      .style(\"left\", pos.x + \"px\")\n      .style(\"top\", pos.y + \"px\");\n\t}\n\t\n\tprivate nodeMouseleave(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 0)\n      .style(\"left\", \"-10000px\")\n      .style(\"top\", \"-10000px\");\n\t}\n\n\tpublic render() {\n\t\tlet that = this;\n\t\tlet descends: any = this.d3Tree.descendants();\n\n\t\td3.select('.g-hierarchy[data-primary=\"false\"]').remove();\n\t\tif (this.isPrimary) {\n\t\t\td3.select('.g-hierarchy[data-primary=\"true\"]').remove();\n\t\t}\n\n\t\tlet hg = this.svgEl.insert(\"g\", \".g-hierarchy\").classed(\"g-hierarchy\", true).attr(\"data-code\", this.hierarchyType.code).attr(\"data-primary\", this.isPrimary);\n\t\thg.attr(\"font-family\", \"sans-serif\");\n\n\t\tlet gtree = hg.append(\"g\").classed(\"g-hierarchy-tree\", true).attr(\"data-code\", this.hierarchyType.code);\n\n\t\t// Edge\n\t\tgtree.append(\"g\").classed(\"g-got-edge\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(this.d3Tree.links())\n\t\t\t.join(\"path\")\n\t\t\t//.attr(\"d\", d3.linkVertical().x(function(d:any) { return d.x; }).y(function(d:any) { return d.y; })); // draws edges as curved lines\n\t\t\t.attr(\"d\", (d: any, i) => { // draws edges as square bracket lines\n\t\t\t\treturn \"M\" + d.source.x + \",\" + (d.source.y)\n\t\t\t\t\t+ \"V\" + ((d.source.y + d.target.y) / 2)\n\t\t\t\t\t+ \"H\" + d.target.x\n\t\t\t\t\t+ \"V\" + (d.target.y);\n\t\t\t});\n\n\t\t// Header on square which denotes which hierarchy it's a part of\n\t\tlet gHeader = gtree.append(\"g\").classed(\"g-got-header\", true);\n\t\tgHeader.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotHeaderW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotHeaderH)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) =>\n\t\t\t\td.data.inheritedHierarchyCode != null\n\t\t\t)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Write the name of the hierarchy on the header\n\t\tgHeader.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => \n\t\t\t    d.x - (SvgHierarchyType.gotHeaderW / 2)\n\t\t\t  )\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-weight\", \"bold\")\n      .attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"width\", SvgHierarchyType.gotHeaderW)\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n\t\t\t.append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"fill\", \"white\")\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n      .style(\"text-align\", \"center\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"white\")\n      .style(\"height\", (SvgHierarchyType.gotHeaderH - 4) + \"px\")\n      .style(\"width\", SvgHierarchyType.gotHeaderW + \"px\")\n      .html(function (d: any) {\n        let name = d.data.inheritedHierarchyCode != null ? that.hierarchyComponent.findHierarchyByCode(d.data.inheritedHierarchyCode).label.localizedValue : that.hierarchyType.label.localizedValue;\n        calculateTextWidth(name, SvgHierarchyType.gotHeaderFontSize) > (SvgHierarchyType.gotHeaderW - 5) ? name = name.substring(0,34) + \"...\" : true;\n        return name;\n       })\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// GeoObjectType Body Square \n\t\tgtree.append(\"g\").classed(\"g-got\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-body-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"fill\", (d: any) => d.data.inheritedHierarchyCode != null ? INHERITED_NODE_FILL : DEFAULT_NODE_FILL)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.each(function(d: any) {\n\t\t\t\tif (d.data.geoObjectType != \"GhostNode\") {\n\t\t\t\t\tif (d.data.activeDropZones) {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW * 2 + 100, height: SvgHierarchyType.gotRectH * 4 };\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Arrows on Edges\n\t\tconst arrowRectD = { height: 7, width: 10 };\n\t\tlet gArrow = gtree.append(\"g\").classed(\"g-got-connector-arrow\", true);\n\t\tgArrow.selectAll(\"rect\").data(this.d3Tree.links()).join(\"rect\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.source.x - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", (d: any) => d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.source.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.selectAll(\"path\").data(this.d3Tree.links()).join(\"path\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", (d: any) => \"M\" + (d.source.x - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (d.source.x) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + (arrowRectD.height / 3))\n\t\t\t\t+ \"L\" + (d.source.x - arrowRectD.width / 2 + (arrowRectD.width / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 + arrowRectD.height / 2 - arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Ghost Drop Zone (Sibling) Backer\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-backer\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-backer-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"white\")\n\n\t\t// Ghost Drop Zone (Sibling) Body Rectangle\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-body\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-body-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#6BA542\")\n\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\n\t\t// GeoObjectType label\n\t\tgtree.append(\"g\").classed(\"g-got-codelabel\", true)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotBodyFontSize)\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.classed(\"svg-got-label-text\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2) + 5)\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2) + 2)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW - 32 + 5)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH - 4)\n\t\t\t// .filter(function(d: any) {\n\t\t\t// \treturn calculateTextWidth(d.data.label, 10) > SvgHierarchyType.gotRectW - 32 + 5;\n\t\t\t// })\n\t\t\t// .style(\"height\", SvgHierarchyType.gotRectH + 20 + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.append(\"xhtml:p\")\n\t\t\t.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n\t\t\t.attr(\"text-anchor\", \"start\")\n\t\t\t.attr(\"text-align\", \"left\")\n\t\t\t.style(\"vertical-align\", \"middle\")\n\t\t\t.style(\"display\", \"table-cell\")\n\t\t\t.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n\t\t\t.style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n\t\t\t.html((d: any) => d.data.label)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\tlet headerg;\n\t\tif (this.isPrimary) {\n\t\t\tgtree.append(\"g\").classed(\"g-got-relatedhiers-button\", true)\n\t\t\t\t.selectAll(\"text\")\n\t\t\t\t.data(descends)\n\t\t\t\t.join(\"text\")\n\t\t\t\t.filter(function(d: any) {\n\t\t\t\t\treturn (d.data.geoObjectType === \"GhostNode\" ? false : true) && d.data.inheritedHierarchyCode == null;\n\t\t\t\t})\n\t\t\t\t.classed(\"svg-got-relatedhiers-button\", true)\n\t\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\t.attr(\"x\", (d: any) => d.x + (SvgHierarchyType.gotRectW / 2) - (SvgHierarchyType.gotOptionsButtonFontSize) - 3)\n\t\t\t\t.attr(\"y\", (d: any) => d.y + (SvgHierarchyType.gotOptionsButtonFontSize*0.8) - SvgHierarchyType.gotOptionsButtonFontSize/2)\n\t\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.style(\"fill\", \"#767676\")\n\t\t\t\t.style(\"font-size\", SvgHierarchyType.gotOptionsButtonFontSize + \"px\")\n\t\t\t\t.text('\\uf013')\n\t\t\t\t.on('click', function(event, node) { that.getNodeByCode(node.data.geoObjectType).renderRelatedHierarchiesMenu(); });\n\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Selected Hierarchy\");\n\t\t}\n\t\telse {\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Related Hierarchy\");\n\t\t}\n\n\n\t\tlet paddingTop = (headerg.node().getBBox().height + 20);\n\t\t//gtree.attr(\"transform\", \"translate(0 \" + paddingTop + \")\");\n\t}\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'shapefile-modal',\n    templateUrl: './shapefile-modal.component.html',\n    styleUrls: []\n} )\nexport class ShapefileModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n    constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n        private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.message = null;\n\n        this.service.importShapefile( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n                this.bsModalRef.hide()\n\n                this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n                this.bsModalRef.content.cancelText = this.localizeService.decode( \"modal.button.close\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n            }\n        } ).catch(( response: HttpErrorResponse ) => {\n            this.error( response );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.message = null;\n\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\n\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-problem',\n    templateUrl: './location-problem.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: LocationProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    entityLabel: string;\n    entityId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.entityLabel, this.problem.type, this.problem.parent, this.configuration.hierarchy ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.entityLabel = null;\n        this.entityId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.entityId = e.item.id;\n        this.hasSynonym = ( this.entityId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createGeoObjectSynonym( this.entityId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    vOid: response.vOid, \n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    ignoreDataAtLocation(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNOREATLOCATION',\n            label: locationLabel,\n        };\n    }\n\n    undoAction(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        if ( this.problem.resolved ) {\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNOREATLOCATION' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteGeoObjectSynonym( action.synonymId, action.vOid ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n\n                    this.entityLabel = null;\n                    this.hasSynonym = ( this.entityLabel != null );\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n\n        }\n    }\n}\n","<div class=\"row\" style=\"padding-bottom: 10px;\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">\n      <ol *ngIf=\"problem.context.length > 0\">\n        <li *ngFor=\"let context of problem.context\">{{context.label}} ({{context.type}})</li>\n      </ol>\n    </div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}} ({{problem.typeLabel}})</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"entityLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymFromLocationTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreDataAtLocation()\" [title]=\"'dataUploader.ignoreAtLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <a (click)=\"toggle()\"> <i class=\"fa fa-caret-right clickable\" aria-hidden=\"true\"></i> <i class=\"fa fa-caret-down\" style=\"display: none;\" aria-hidden=\"true\"></i> <localize key=\"dataUploader.resolvedSynonym\"></localize> [{{problem.action.label}}]\n        </a>\n        <span *ngIf=\"show\">\n          <ul>\n            <localize key=\"dataUploader.locatedWithin\"></localize>\n            <li *ngFor=\"let ancestor of problem.action.ancestors\">{{ancestor.label}}</li>\n          </ul>\n        </span>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNOREATLOCATION'\">\n        <localize key=\"dataUploader.resolvedIgnoreAtLocation\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'term-problem',\n    templateUrl: './term-problem.component.html',\n    styleUrls: []\n} )\nexport class TermProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: TermProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    termLabel: string;\n    termId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getTermSuggestions( this.problem.mdAttributeId, this.termLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.termLabel = null;\n        this.termId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n        this.hasSynonym = ( this.termId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createTermSynonym( this.termId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    createOption(): void {\n        this.onError.emit( null );\n        \n        this.service.createTerm( this.problem.label, uuid(), this.problem.parentCode).then( term => {\n            this.problem.resolved = true;\n            this.problem.action = {\n                name: 'OPTION',\n                term: term\n            };\n        } ).catch( e => {\n            this.onError.emit( e.error );\n        } );\n    }\n\n    ignoreValue(): void {\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNORE'\n        };\n    }\n\n    undoAction(): void {\n\n        if ( this.problem.resolved ) {\n\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNORE' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteTermSynonym( action.synonymId ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n            else if ( action.name == 'OPTION' ) {\n                this.onError.emit( null );\n\n                this.service.removeTerm(this.problem.parentCode, action.term.code ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n        }\n    }\n}\n","<div class=\"row\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">{{problem.attributeLabel}}</div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}}</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"termLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"label\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymCategoryTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-plus clickable\" (click)=\"createOption()\" [title]=\"'dataUploader.createNewOptionTooltip' | localize\"></i>        \n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreValue()\" [title]=\"'dataUploader.ignoreCategoryTooltip' | localize\"></i>      \n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'OPTION'\">\n        <localize key=\"dataUploader.resolvedCategoryOption\"></localize>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <localize key=\"dataUploader.resolvedSynonym\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNORE'\">\n        <localize key=\"dataUploader.resolvedIgnoreCategory\"></localize>\n        [{{problem.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedCategoryTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'spreadsheet-modal',\n    templateUrl: './spreadsheet-modal.component.html',\n    styleUrls: []\n} )\nexport class SpreadsheetModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n  constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n    private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.service.importSpreadsheet( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n              this.bsModalRef.hide()\n\n              this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n\n            }\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-page',\n    templateUrl: './data-page.component.html',\n    styleUrls: ['./data-page.css']\n} )\nexport class DataPageComponent implements OnInit {\n\n\tcontent: string = \"SPREADSHEET\";\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n\t\tthis.isMaintainer ? this.renderContent(\"SPREADSHEET\") : this.renderContent(\"EXPORT\");\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\n\t\tif(content === \"SPREADSHEET\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"spreadsheet.title\");\n\t\t}\n\t\telse if(content === \"SHAPEFILE\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"shapefile.title\");\n\t\t}\n\t\telse if(content === \"EXPORT\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"io.export.title\");\n\t\t}\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <!-- <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"spreadsheet.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"spreadsheet.description\"></localize>\n            </p>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-1\"></div>\n\t\t\t<div class=\"col-md-10\" style=\"padding-top: 30px;\">\n\t\t\t\t\n\t\t\t\t<div class=\"heading\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{{pageTitle}}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SPREADSHEET'}\" (click)=\"renderContent('SPREADSHEET')\">\n                      <localize key=\"import-spreadsheet-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SHAPEFILE'}\" (click)=\"renderContent('SHAPEFILE')\">\n                      <localize key=\"import-shapefile-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px;margin-top: 10px;\">\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SPREADSHEET'\" [format]=\"'EXCEL'\"></dataimporter>\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SHAPEFILE'\" [format]=\"'SHAPEFILE'\"></dataimporter>\n\t\t\t\t</div>\n\t\t\t\t\n            </div>\n            <div class=\"col-md-1\"></div>\n        </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService, EventService, ExternalSystemService } from '@shared/service';\nimport { ExternalSystem } from '@shared/model/core';\n\nimport { SpreadsheetModalComponent } from './modals/spreadsheet-modal.component';\nimport { ShapefileModalComponent } from './modals/shapefile-modal.component';\nimport { IOService } from '@registry/service';\nimport { ImportStrategy } from '@registry/model/registry';\n\ndeclare var acp: string;\n\n@Component({\n\n\tselector: 'dataimporter',\n\ttemplateUrl: './dataimporter.component.html',\n\tstyleUrls: ['./dataimporter.css']\n})\nexport class DataImporterComponent implements OnInit {\n\n\tshowImportConfig: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n\timportStrategy: ImportStrategy;\n\timportStrategies: any[] = [\n\t\t{ \"strategy\": ImportStrategy.NEW_AND_UPDATE, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_AND_UPDATE\") },\n\t\t{ \"strategy\": ImportStrategy.NEW_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_ONLY\") },\n\t\t{ \"strategy\": ImportStrategy.UPDATE_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.UPDATE_ONLY\") }\n\t]\n\n    /*\n     * Currently selected code\n     */\n\tcode: string = null;\n\n    /*\n     * Currently start date\n     */\n\tstartDate: string = null;\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n    /*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\t@Input()\n\tformat: string; // Can be SHAPEFILE or EXCEL\n\n\tisExternal: boolean = false;\n\n\t/*\n\t * List of available external systems (filtered based on user's org)\n\t */\n\texternalSystems: ExternalSystem[];\n\n\t/*\n\t * currently selected external system.\n\t */\n\texternalSystemId: string;\n\n\tisLoading: boolean = true;\n\n\tconstructor(private service: IOService,\n\t\tprivate eventService: EventService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate localizationService: LocalizationService,\n\t\tprivate authService: AuthService,\n\t\tprivate sysService: ExternalSystemService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.sysService.getExternalSystems(1, 100).then(paginatedSystems => {\n\n\t\t\tthis.externalSystems = paginatedSystems.resultSet;\n\n\t\t\tif (this.externalSystems.length === 0) {\n\t\t\t\tthis.isExternal = false;\n\t\t\t\tthis.showImportConfig = true; // Show the upload widget if there are no external systems registered\n\t\t\t}\n\n\t\t\tthis.isLoading = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.service.listGeoObjectTypes(false).then(types => {\n\n\t\t\tconst myOrgTypes = [];\n\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.orgCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isOrganizationRA(orgCode) || this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.types = myOrgTypes;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tvar getUrl = acp + '/excel/get-configuration';\n\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\tgetUrl = acp + '/shapefile/get-shapefile-configuration';\n\n\t\t\t//this.showImportConfig = true; // show the upload widget if shapefile because external system from shapefile isn't supported\n\t\t}\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('type', this.code);\n\n\t\t\tif (this.startDate != null) {\n\t\t\t\tform.append('startDate', this.startDate);\n\t\t\t}\n\t\t\tif (this.importStrategy) {\n\t\t\t\tform.append('strategy', this.importStrategy)\n\t\t\t}\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst configuration = JSON.parse(response);\n\n\t\t\tconfiguration.isExternal = this.isExternal;\n\n\t\t\tlet externalSystem: ExternalSystem = null;\n\t\t\tfor (let i = 0; i < this.externalSystems.length; ++i) {\n\t\t\t\tlet sys: ExternalSystem = this.externalSystems[i];\n\n\t\t\t\tif (sys.oid === this.externalSystemId) {\n\t\t\t\t\texternalSystem = sys;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfiguration.externalSystemId = this.externalSystemId;\n\t\t\tconfiguration.externalSystem = externalSystem;\n\n\t\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\t\tthis.bsModalRef = this.modalService.show(ShapefileModalComponent, { backdrop: true });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef = this.modalService.show(SpreadsheetModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.configuration = configuration;\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\n\tonClick(): void {\n\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetImportSource(event, type): void {\n\t\tif (type === \"EXTERNAL\") {\n\t\t\tthis.isExternal = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isExternal = false;\n\t\t}\n\t}\n\n\tonNext(): void {\n\t\tthis.showImportConfig = true;\n\t}\n\n\tonBack(): void {\n\t\tthis.showImportConfig = false;\n\t}\n\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<div *ngIf=\"!isLoading && !showImportConfig && externalSystems.length > 0\">\n  <div>\n    <div class=\"row\">\n\n        <div class=\"col-xs-1\"></div>\n        <div class=\"col-xs-9 radio-btn-wrapper\">\n\n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"true\" [checked]=\"!isExternal\" (change)=\"setImportSource($event, 'FILE')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : !isExternal}\">\n                    <localize key=\"importer.import.from-file.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-file.description\"></localize>\n                </p>\n            </label>\n            \n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"false\" [checked]=\"isExternal\" (change)=\"setImportSource($event, 'EXTERNAL')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : isExternal}\">\n                    <localize key=\"importer.import.from-external.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-external.description\"></localize>\n                </p>\n            </label>\n\n            <div class=\"button-holder\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onNext()\">\n                    <localize key=\"io.next\"></localize>\n                </button>\n            </div>\n        </div>\n        <div class=\"col-xs-2\"></div>\n\t  </div>\n  </div>\n</div>\n\n<div *ngIf=\"!isLoading && isExternal !== null && showImportConfig\">\n    <div >\n        <form #form=\"ngForm\">\n            <div *ngIf=\"isExternal\" class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"externalSystem\">\n                    <localize key=\"io.import.externalSystems\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"externalSystem\" name=\"externalSystem\" class=\"select-area\" [(ngModel)]=\"externalSystemId\" required>\n                        <option *ngFor=\"let externalSystem of externalSystems\" value={{externalSystem.oid}}>{{externalSystem.label.localizedValue}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\" *ngIf=\"types\">\n                <label class=\"col-md-2 text-right\" for=\"code\"> <localize key=\"io.geoObjectType\"></localize></label>\n                <div class=\"col-md-8\">\n                    <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" value={{type.code}}>{{type.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"strategy\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"spreadsheet.import.import.strategy\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"shapefile.import.import.strategy\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"strategy\" name=\"strategy\" class=\"select-area\" [(ngModel)]=\"importStrategy\" required>\n                        <option *ngFor=\"let strategy of importStrategies\" value={{strategy.strategy}}>{{strategy.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"startDate\"><localize key=\"io.startDate\"></localize></label>\n                <div class=\"col-md-8\">\n                    <input name=\"startDate\" [(ngModel)]=\"startDate\" type=\"date\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"file\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <input *ngIf=\"this.format === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".xls, .xlsx\" required />\n                    <input *ngIf=\"this.format === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".zip\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n\n            <div class=\"form-group row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"button-holder col-md-8 text-right\">\n                    <button type=\"submit\" class=\"btn btn-default\" (click)=\"onBack()\">\n                        <localize key=\"io.back\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onClick()\">\n                        <localize key=\"io.submit\"></localize>\n                    </button>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-manager',\n\ttemplateUrl: './master-list-manager.component.html',\n\tstyleUrls: ['./master-list-manager.css']\n})\nexport class MasterListManagerComponent implements OnInit {\n\tmessage: string = null;\n\torgs: MasterListByOrg[];\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.service.getMasterListsByOrg().then(response => {\n\t\t\tthis.orgs = response.orgs;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonCreate(org: MasterListByOrg): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(org);\n\t\tthis.bsModalRef.content.isNew = true;\n\t\tthis.bsModalRef.content.onMasterListChange.subscribe((list: any) => {\n\t\t\tconst obj = {\n\t\t\t\tlabel: list.displayLabel.localizedValue,\n\t\t\t\toid: list.oid,\n\t\t\t\tcreateDate: list.createDate,\n\t\t\t\tlastUpdateDate: list.lastUpdateDate,\n\t\t\t\tisMaster: list.isMaster,\n\t\t\t\twrite: list.write,\n\t\t\t\tread: list.read,\n\t\t\t\tvisibility: list.visibility\n\t\t\t};\n\n\t\t\torg.lists.push(obj);\n\t\t});\n\t}\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-view/', code])\n\t}\n\n\tonEdit(pair: { label: string, oid: string }): void {\n\t\tthis.service.getMasterList(pair.oid).then(list => {\n\n\t\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.edit = true;\n\t\t\tthis.bsModalRef.content.readonly = !list.write;\n\t\t\tthis.bsModalRef.content.master = list;\n\t\t\tthis.bsModalRef.content.isNew = false;\n\n\t\t\tthis.bsModalRef.content.onMasterListChange.subscribe(ret => {\n\t\t\t\tpair.label = ret.displayLabel.localizedValue;\n\t\t\t});\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDelete(org: MasterListByOrg, list: { label: string, oid: string }): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + list.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = \"danger\";\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterList(list.oid).then(response => {\n\t\t\t\torg.lists = org.lists.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== list.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <div class=\"heading\">\n            <h2>\n                <localize key=\"masterlists.manager.organizations\"></localize>\n            </h2>\n        </div>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\" *ngFor=\"let org of orgs;\">\n            <div class=\"col-md-12 order-md-1\">\n                <div style=\"margin-top: 30px;\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <h3>{{org.label}}</h3>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"org.lists && org.lists.length === 0\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <p class=\"inline-message\"><localize key=\"masterlists.no.lists.in.org.message\"></localize></p>\n                        </div>\n                    </div>\n                </div>\n\n                <ul *ngIf=\"org.lists && org.lists.length > 0\" class=\"list-group\" style=\"border-bottom: 2px solid lightgrey; margin-top: 30px;\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th style=\"width: 70%;\"><localize key=\"masterlist.menu\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let list of org.lists; let i = index;\" class=\"clickable\">\n                                <td style=\"width: 70%; vertical-align: middle;\">\n                                  <a [routerLink]=\"'/registry/master-list-view/' + list.oid\" routerLinkActive=\"active\">\n                                    {{list.label}}\n                                    <span *ngIf=\"list.isMaster\"><localize key=\"masterlist.master\"></localize></span>\n                                    <span>\n                                      (\n                                      <localize *ngIf=\"list.visibility === 'PUBLIC'\" key=\"masterlist.public\"></localize>\n                                      <localize *ngIf=\"list.visibility === 'PRIVATE'\" key=\"masterlist.private\"></localize>\n                                      )\n                                    </span>                                    \n                                  </a>\n                                </td>\n                                <td style=\"width: 30%; text-align: right;\">\n                                    <button type=\"submit\" (click)=\"onView(list.oid)\" class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"modal.button.view\"></localize>\n                                    </button>\n                                    <button type=\"submit\" (click)=\"onEdit(list)\" class=\"btn btn-default\" role=\"button\">\n                                        <localize key=\"masterlist.button.metadata\"></localize>\n                                    </button>\n                                    <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(org, list)\" class=\"btn btn-danger\" role=\"button\">\n                                        <localize key=\"modal.button.delete\"></localize>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ul>\n                <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div *ngIf=\"org.write\">\n                            <button type=\"submit\" (click)=\"onCreate(org)\" class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"hierarchy.management.button.create\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n\n@Component( {\n    selector: 'export-format-modal',\n    templateUrl: './export-format-modal.component.html',\n    styleUrls: []\n} )\nexport class ExportFormatModalComponent {\n\n    format: string;\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onFormat = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onFormat.next( this.format );\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"heading text-center\">\n        <h1>\n            <localize key=\"export-modal.title\"></localize>\n        </h1>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <label>\n                        <localize key=\"export-modal.message\"></localize>\n                    </label>\n\n                    <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                        <option></option>\n                        <option value=\"EXCEL\">\n                            <localize key=\"io.spreadsheet\"></localize>\n                        </option>\n                        <option value=\"SHAPEFILE\">\n                            <localize key=\"io.shapefile\"></localize>\n                        </option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" [disabled]=\"format == null || format == ''\"\n                            class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ChangeRequest, AbstractAction, AddChildAction, SetParentAction, CreateGeoObjectAction, RemoveChildAction, UpdateGeoObjectAction } from '@registry/model/crtable';\n\nimport { ChangeRequestService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ActionDetailModalComponent } from './action-detail/action-detail-modal.component'\n\nimport { ErrorHandler, ErrorModalComponent, ConfirmModalComponent } from '@shared/component';\n\n@Component({\n\n\tselector: 'request-table',\n\ttemplateUrl: './request-table.component.html',\n\tstyleUrls: ['./request-table.css'],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class RequestTableComponent {\n\n\tobjectKeys = Object.keys;\n\n\tbsModalRef: BsModalRef;\n\n\trequests: ChangeRequest[] = [];\n\n\tactions: AbstractAction[] | SetParentAction[] | AddChildAction[] | CreateGeoObjectAction[] | RemoveChildAction[] | UpdateGeoObjectAction[];\n\n\tcolumns: any[] = [];\n\n\ttoggleId: string;\n\n\tfilterCriteria: string = 'ALL';\n\n\tisMaintainer: boolean = false;\n\n\tconstructor(private service: ChangeRequestService, private modalService: BsModalService, private authService: AuthService, localizationService: LocalizationService) {\n\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\n\t\tthis.columns = [\n\t\t\t{ name: localizationService.decode('change.request.user'), prop: 'createdBy', sortable: false },\n\t\t\t{ name: localizationService.decode('change.request.createDate'), prop: 'createDate', sortable: false, width: 195 },\n\t\t\t{ name: localizationService.decode('change.request.status'), prop: 'approvalStatus', sortable: false }\n\t\t];\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(): void {\n\n\t\tthis.service.getAllRequests(\"ALL\").then(requests => {\n\n\t\t\tthis.requests = requests;\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t}\n\n\n\tonSelect(selected: any): void {\n\n\t\t// this.request = selected.selected;\n\n\t\tthis.service.getAllActions(selected.selected[0].oid).then(actions => {\n\n\t\t\tthis.actions = actions;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonExecute(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tthis.service.execute(changeRequest.oid).then(request => {\n\t\t\t\tchangeRequest = request;\n\n\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\tthis.refresh();\n\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\tthis.error(response);\n\t\t\t});\n\t\t}\n\t}\n\n\t// onConfirmChangeRequest(request: any): void {\n\n\t//     if ( request != null ) {\n\t//         this.service.confirmChangeRequest( request.oid ).then( request => {\n\t//             this.request = request;\n\n\t//             // TODO: Determine if there is a way to update an individual record\n\t//             this.refresh();\n\t//         } ).catch(( response: HttpErrorResponse ) => {\n\t//             this.error( response );\n\t//         } );\n\t//     }\n\t// }\n\n\tapplyActionStatusProperties(action: any): void {\n\t\t// var action = JSON.parse(JSON.stringify(this.action));\n\t\t// action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n\t\tthis.service.applyActionStatusProperties(action).then(response => {\n\t\t\taction.decisionMaker = (action.approvalStatus !== 'PENDING') ? this.authService.getUsername() : '';\n\t\t\t\n\t\t\tconsole.log(action);\n\t\t\t// this.crtable.refresh()\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonApproveAll(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.approveAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\n\t\t}\n\t}\n\n\tonRejectAll(changeRequest: ChangeRequest): void {\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.rejectAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\n\t\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\t\t// this.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\trequestTrackBy(index: number, request: ChangeRequest) {\n\t\treturn request.oid;\n\t}\n\n\ttoggle(event: any, oid: string): void {\n\n\t\tif (!event.target.parentElement.className.includes(\"btn\") && !event.target.className.includes(\"btn\")) {\n\t\t\tif (this.toggleId === oid) {\n\t\t\t\tthis.toggleId = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.toggleId = oid;\n\t\t\t\tthis.onSelect({ selected: [{ oid: oid }] });\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter(criteria: string): void {\n\n\t\tthis.service.getAllRequests(criteria).then(requests => {\n\t\t\tthis.requests = requests;\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t\tthis.filterCriteria = criteria;\n\t}\n\n\tsetActionStatus(action: AbstractAction, status: string): void {\n\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\taction.approvalStatus = status;\n\n\t\t\tthis.applyActionStatusProperties(action);\n\t\t});\n\t}\n\n\tgetActiveDetailComponent(action: AbstractAction): any {\n\t\t// TODO: I know this scales poorly to lots of different action types but I'm not sure how to do it better\n\t\tif (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction')) {\n\t\t\t// return this.cuDetail;\n\t\t}\n\t\t//   if (this.arDetail != null && (this.action.actionType.endsWith('AddChildAction') || this.action.actionType.endsWith('RemoveChildAction')))\n\t\t//   {\n\t\t//     return this.arDetail;\n\t\t//   }\n\n\t\treturn action;\n\t}\n\n\tshowActionDetail(action: any) {\n\n\t\tthis.bsModalRef = this.modalService.show(ActionDetailModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.curAction = action;\n\n\t\t//   var detail = this.getActiveDetailComponent();\n\t\t//   if (detail != null)\n\t\t//   {\n\t\t// action.onSelect(action);\n\t\t//   }\n\t}\n\n}\n","<!-- <div class=\"row text-center\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"change.request.title\"></localize>\n        </h2>\n    </div>\n</div> -->\n\n<!-- <div class=\"row text-center\">\n    <div class=\"col-md-12 text-left\" style=\"margin-top: 40px;\">\n        <h3>\n            <localize key=\"change.request.table.title\"></localize>\n        </h3>\n    </div>\n</div> -->\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"form-group button-row\">\n\n      <a [routerLink]=\"\" (click)=\"filter('ALL')\" [ngClass]=\"filterCriteria === 'ALL' ? 'cr-filter-link-active' : ''\" >\n        <localize key=\"change.request.all.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('PENDING')\" [ngClass]=\"filterCriteria === 'PENDING' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.pending.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('ACCEPTED')\" [ngClass]=\"filterCriteria === 'ACCEPTED' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.accepted.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('REJECTED')\" [ngClass]=\"filterCriteria === 'REJECTED' ? 'cr-filter-link-active' : ''\"style=\"margin-left: 5px;\" >\n        <localize key=\"change.request.rejected.filter.link\"></localize>\n      </a>\n\n    </div>\n\n    <hr style=\"border-top:solid 3px #6BA542\" />\n\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n\n  <table class=\"table\">\n    <thead>\n      <tr style=\"height: 50px;color: grey;\">\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.contributor.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.id.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.date.contributed.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.status.label\"></localize> </th>\n        <!-- <th style=\"vertical-align: middle;\">Actions</th> -->\n        <th></th>\n      </tr>\n    </thead>\n        <tbody>\n      <ng-template ngFor let-req [ngForOf]=\"requests\" [ngForTrackBy]=\"requestTrackBy\">\n        <tr class=\"clickable\" [ngClass]=\"{'row-active':toggleId === req.oid}\" (click)=\"toggle($event, req.oid)\" style=\"height: 50px;\">\n          <td class=\"col-md-3\">\n            <h5><strong>{{req.createdBy}}</strong></h5>\n          </td>\n          <td class=\"col-md-4\">\n            <h5><strong>{{req.oid}}</strong></h5>\n          </td>\n          <td class=\"col-md-2\" style=\"vertical-align: middle; color:grey;\">\n             <input class=\"text-display-input\" type=\"date\" [name]=\"'reqDate_' + req.oid\" [(ngModel)]=\"req.createDate\" disabled>\n          </td>\n          <td class=\"col-md-2\">\n            <h5 [ngClass]=\"{'status-pending':req.approvalStatus === 'PENDING', 'status-accepted':req.approvalStatus === 'ACCEPTED', 'status-rejected':req.approvalStatus === 'REJECTED'}\">\n               <strong>{{req.statusLabel}}</strong>\n            </h5>\n          </td>\n          <td class=\"col-md-1\" style=\"vertical-align:middle;text-align:right;padding-right:25px;\">\n            <i class=\"arrow arrow-right\" aria-hidden=\"true\"></i>\n          </td>\n        </tr>\n        <tr *ngIf=\"toggleId === req.oid\" style=\"background-color:#f7f7f7;\">\n          <td colspan=\"5\" >\n\n            <div class=\"row\" style=\"margin:0;\">\n              <!-- <div class=\"col-md-1\"></div> -->\n              <div class=\"col-md-12\">\n\n                <div *ngFor=\"let action of actions\" class=\"action-card\" [ngClass]=\"{'status-pending-container':action.approvalStatus === 'PENDING', 'status-accepted-container':action.approvalStatus === 'ACCEPTED', 'status-rejected-container':action.approvalStatus === 'REJECTED'}\" style=\"margin-bottom:10px; background-color:white;\"> \n                  <div class=\"row\" style=\"margin:0; padding-top:5px; padding-bottom:5px;\">\n                    <div class=\"col-md-3\" style=\"border-right:2px grey solid; height:50px;\">\n                      <i class=\"fa fa-circle\" style=\"float:left; line-height: 50px;\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" aria-hidden=\"true\"></i>\n                      <h4 class=\"vertical-center\" style=\"margin:0; float:left; padding-left:20px;\">{{req.createdBy}}</h4>\n                    </div>\n                    <div class=\"col-md-5\" style=\"height: 50px;\">\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\" class=\"fa fa-refresh vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\" class=\"fa fa-plus vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\" class=\"fa fa-link vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\" class=\"fa fa-chain-broken vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n\n                      <ul class=\"vertical-center\" style=\"list-style-type:none; float:left; padding-left:20px;\">\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\">\n                          <localize key=\"change.request.table.update\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\">\n                          <localize key=\"change.request.table.create\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.SetParentAction'\">\n                          <localize key=\"change.request.table.setparent\" [params]=\"{'{0}':action.childCode}\"></localize>\n                        </li>        \n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\">\n                          <localize key=\"change.request.table.setchild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\">\n                          <localize key=\"change.request.table.removechild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>                                        \n                        <li>\n                          <localize key=\"change.request.table.on\"></localize>\n                          <input class=\"text-display-input\" type=\"date\" [name]=\"'createActionDate_' + action.oid\" [(ngModel)]=\"action.createActionDate\" disabled>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-md-4\" style=\"height: 50px;text-align: center;\">\n                      <h4 *ngIf=\"req.approvalStatus !== 'PENDING'\" class=\"vertical-center\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" style=\"margin: 0;\">{{action.approvalStatus}}</h4>\n                      <span *ngIf=\"isMaintainer\">\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'ACCEPTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'ACCEPTED')\" class=\"btn btn-primary vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.accept.btn\"></localize>\n                        <!-- <i *ngIf=\"action.approvalStatus === 'ACCEPTED'\" class=\"fa fa-check\" aria-hidden=\"true\"></i> -->\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'REJECTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'REJECTED')\" class=\"btn btn-danger vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.reject.btn\"></localize>\n                          <!-- <i *ngIf=\"action.approvalStatus === 'REJECTED'\" class=\"fa fa-check\" aria-hidden=\"true\"></i> -->\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'PENDING'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'PENDING')\" class=\"btn btn-warning vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.pending.btn\"></localize>\n                          <!-- <i *ngIf=\"action.approvalStatus === 'PENDING'\" class=\"fa fa-check\" aria-hidden=\"true\"></i> -->\n                        </button>\n                      </span>\n                    </div>\n                  </div>\n\n<!--                   <div class=\"row\" style=\"border-top: 1px grey solid;margin:0;margin-bottom:20px\" *ngIf=\"action.approvalStatus !== 'PENDING'\"> -->\n<!--                     <div class=\"col-md-5\" *ngIf=\"action.decisionMaker !== ''\"> -->\n<!--                         <label>  -->\n<!--                           <localize *ngIf=\"action.approvalStatus !== 'REJECTED'\" key=\"change.request.status.approvedBy\"></localize> -->\n<!--                           <localize *ngIf=\"action.approvalStatus === 'REJECTED'\" key=\"change.request.status.rejectedBy\"></localize> -->\n<!--                         </label> {{action.decisionMaker}} -->\n<!--                     </div> -->\n<!--                   </div> -->\n                  \n                  <div class=\"row\" style=\"border-top: 1px grey solid;margin:0;padding: 10px 0;\">\n                    \n                    <div class=\"col-md-4\" >\n                      <div class=\"form-group\">\n                        <label for=\"contribNotesInput-{{req.oid}}\"> <localize key=\"change.request.contributor.notes.label\"></localize> </label>\n                        <textarea id=\"contribNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;\" [(ngModel)]=\"action.contributorNotes\" readonly=\"true\"></textarea>\n                      </div>  \n                      \n                      <button type=\"submit\" (click)=\"showActionDetail(action)\" class=\"btn btn-default \" style=\"float:right;margin:0;\" role=\"button\">\n                        <localize style=\"text-transform:uppercase;\" key=\"change.request.action.details.label\"></localize>\n                      </button>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.email\"></localize>:\n                          </span>\n                          <label>{{req.email}}</label>\n                      </div>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.phone\"></localize>:\n                          </span>\n                          <label>{{req.phoneNumber}}</label>\n                      </div>\n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div class=\"form-group\">\n                        <label for=\"maintainerNotesInput-{{req.oid}}\"> <localize key=\"change.request.maintainer.notes.label\"></localize> </label>\n                        <textarea id=\"maintainerNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;margin:0\" [(ngModel)]=\"action.maintainerNotes\" [readonly]=\"req.approvalStatus !== 'PENDING'\"></textarea>\n                      </div>  \n                      \n                        <div *ngIf=\"action.approvalStatus !== 'PENDING' && action.decisionMaker !== ''\">\n                            <span style=\"font-style: italic;\">\n                                <localize *ngIf=\"action.approvalStatus !== 'REJECTED'\" key=\"change.request.status.approvedBy\"></localize>\n                                <localize *ngIf=\"action.approvalStatus === 'REJECTED'\" key=\"change.request.status.rejectedBy\"></localize>:\n                            </span>\n                            <label> {{action.decisionMaker}} </label>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div class=\"form-group\">\n                        <label for=\"additionalNotes-{{req.oid}}\"> <localize key=\"change.request.action.detail.additionalNotes\"></localize> </label>\n                        <textarea id=\"additionalNotes-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;\" [(ngModel)]=\"action.additionalNotes\" [readonly]=\"req.approvalStatus !== 'PENDING'\"></textarea>\n                      </div>  \n                    </div>\n                  </div>\n                </div> <!-- END action-card -->\n\n\n                <div *ngIf=\"isMaintainer\" class=\"button-holder\">\n                  <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onApproveAll(req)\" class=\"btn btn-primary\" style=\"\" role=\"button\">\n                    <localize key=\"change.request.accept.all.btn\"></localize>\n                  </button>\n                  <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onRejectAll(req)\" class=\"btn btn-danger\" style=\"\" role=\"button\">\n                    <localize key=\"change.request.reject.all.btn\"></localize>\n                  </button>  \n                  <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onExecute(req)\" class=\"btn btn-primary\" style=\"\" role=\"button\">\n                    <localize key=\"change.request.accept.changes.btn\"></localize>\n                  </button>\n                </div>\n              </div>\n              <!-- <div class=\"col-md-1\"></div> -->\n            </div>\n\n          </td>\n            </tr>\n      </ng-template>\n        </tbody>\n  </table>\n  </div>   \n</div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nexport interface ActionDetailComponent {\n    endEdit(): void;\n}\n\n@Component( {\n    selector: 'action-detail-modal',\n    templateUrl: './action-detail-modal.component.html',\n    styleUrls: []\n} )\nexport class ActionDetailModalComponent {\n\n    action: any;\n\n    @ViewChild( \"cuDetail\" ) cuDetail: ActionDetailComponent;\n    @ViewChild( \"arDetail\" ) arDetail: ActionDetailComponent;\n    @ViewChild( \"spDetail\" ) spDetail: ActionDetailComponent;\n\n    @Input()\n    set curAction( action: any ) {\n        this.action = action;\n    }\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n    }\n\n    cancel(): void {\n        if ( this.cuDetail != null ) {\n            this.cuDetail.endEdit();\n        }\n\n        if ( this.arDetail != null ) {\n            this.arDetail.endEdit();\n        }\n\n        if ( this.spDetail != null ) {\n            this.spDetail.endEdit();\n        }\n\n        this.bsModalRef.hide();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <!-- <div class=\"heading\">\n        <h2>\n            <localize key=\"export-modal.title\"></localize>\n        </h2>\n\t</div> -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <crtable-detail-create-geo-object #cuDetail *ngIf=\"action && (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction'))\" [(action)]=\"action\"> </crtable-detail-create-geo-object>\n            <crtable-detail-add-remove-child #arDetail *ngIf=\"action && (action.actionType.endsWith('AddChildAction') || action.actionType.endsWith('RemoveChildAction'))\" [(action)]=\"action\"> </crtable-detail-add-remove-child>\n            <set-parent-detail #spDetail *ngIf=\"action && (action.actionType.endsWith('SetParentAction'))\" [(action)]=\"action\"> </set-parent-detail>\n        </div>\n    </div>\n\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"button-holder text-right\">\n                <button type=\"button\" (click)=\"cancel();\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n                    <span> <localize key=\"modal.button.close\"></localize>\n                    </span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, GeoObjectOverTime } from '@registry/model/registry';\n\n\n@Component({\n\tselector: 'manage-versions-modal',\n\ttemplateUrl: './manage-versions-modal.component.html',\n\tstyleUrls: ['./manage-versions-modal.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition('* => void', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t])\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsModalComponent implements OnInit {\n\treadonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonAttributeVersionChange: Subject<GeoObjectOverTime>;\n\n\tattribute: Attribute;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\tisNewGeoObject: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onAttributeVersionChange = new Subject();\n\t}\n\n\tonVersionChange(geoObjectOverTime: GeoObjectOverTime): void {\n\t\tif (geoObjectOverTime != null) {\n\t\t\tthis.onAttributeVersionChange.next(geoObjectOverTime);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n}\n","<div class=\"modal-body\">\n\n    <div class=\"text-center\">\n        <h2 *ngIf=\"!readonly\">\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    <manage-versions\n      *ngIf=\"attribute != null\"\n      [attribute]=\"attribute\"\n      [geoObjectType]=\"geoObjectType\"\n      [geoObjectOverTimeInput]=\"geoObjectOverTime\"\n      [isNewGeoObject]=\"isNewGeoObject\"\n      (onChange)=\"onVersionChange($event)\"\n    ></manage-versions>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'geoObjectAttributeExcludesFilter',\n    pure: true\n})\nexport class GeoObjectAttributeExcludesPipe implements PipeTransform {\n    transform(items: any[], filter: string[]): any {\n        if (!items || !filter) {\n            return items;\n        }\n       \n        return items.filter(item => filter.indexOf(item.code) === -1)\n    }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\nimport { GeoObjectType, GeoObjectOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'submit-change-request',\n\ttemplateUrl: './submit-change-request.component.html',\n\tstyleUrls: []\n})\nexport class SubmitChangeRequestComponent implements OnInit {\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectTypes: GeoObjectType[] = [];\n\n\tgeoObjectId: string = \"\";\n\n\treason: string = \"\";\n\n\tdataSource: Observable<any>;\n\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t/*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\tpreGeoObject: GeoObjectOverTime = null;\n\n\t/*\n\t * The state of the GeoObject after our Change Request has been approved \n\t */\n\tpostGeoObject: GeoObjectOverTime = null;\n\n\tisValid: boolean = false;\n\n\tloading: boolean = false;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\", \"status\"];\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService,\n\t\tprivate changeRequestService: ChangeRequestService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.dataSource = Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(this.geoObjectId, this.geoObjectType.code).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.registryService.getGeoObjectTypes([], null).then(types => {\n\n\t\t\tvar myOrgTypes = [];\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.organizationCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null && type.superTypeCode != '' ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isGeoObjectTypeRC(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.geoObjectTypes = myOrgTypes;\n\n\t\t\tthis.geoObjectTypes.sort((a, b) => {\n\t\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\t\telse return 0;\n\t\t\t});\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(\"ROOT\");\n\t\t\tif (pos) {\n\t\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t}\n\n\t\t\t// this.currentGeoObjectType = this.geoObjectTypes[1];\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\n\n\tprivate onValidChange(newValid: boolean) {\n\t\tif (this.preGeoObject == null) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.geometryEditor != null && !this.geometryEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.attributeEditor != null && !this.attributeEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isValid = true;\n\t}\n\n\tprivate getGeoObjectTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\tlet obj = this.geoObjectTypes[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tchangeTypeaheadLoading(e: boolean): void {\n\t\tthis.loading = e;\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch): void {\n\t\tthis.registryService.getGeoObjectOverTime(e.item.code, this.geoObjectType.code).then(geoObject => {\n\t\t\tthis.preGeoObject = geoObject;\n\t\t\tthis.postGeoObject = JSON.parse(JSON.stringify(this.preGeoObject)); // Object.assign is a shallow copy. We want a deep copy.\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsubmit(): void {\n\n\t\tlet goSubmit: GeoObjectOverTime = this.attributeEditor.getGeoObject();\n\n\t\tif (this.geometryEditor != null) {\n\t\t\t//\t\t\tlet goGeometries: GeoObjectOverTime = this.geometryEditor.saveDraw();\n\t\t\t//            goSubmit.geometry = goGeometries.geometry;\n\t\t}\n\n\t\tlet actions = [{\n\t\t\t\"actionType\": \"geoobject/update\", // TODO: account for create\n\t\t\t\"apiVersion\": \"1.0-SNAPSHOT\", // TODO: make dynamic\n\t\t\t\"createActionDate\": new Date().getTime(),\n\t\t\t\"geoObject\": goSubmit,\n\t\t\t\"contributorNotes\": this.reason\n\t\t}]\n\n\t\tthis.changeRequestService.submitChangeRequest(JSON.stringify(actions))\n\t\t\t.then(geoObject => {\n\t\t\t\tthis.cancel();\n\n\t\t\t\tthis.bsModalRef = this.modalService.show(SuccessModalComponent, { backdrop: true });\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"change.request.success.message\");\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\tthis.isValid = false;\n\t}\n\n\tcancel(): void {\n\t\tthis.isValid = false;\n\t\tthis.preGeoObject = null;\n\t\tthis.postGeoObject = null;\n\t\tthis.geoObjectId = null;\n\t\tthis.geoObjectType = null;\n\t\tthis.reason = null;\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}","<!-- <div class=\"new-admin-design-main\" style=\"height: 100vh;\">\n    <cgr-header></cgr-header> -->\n<loading-bar></loading-bar>\n\n<div class=\"row\">\n  <div class=\"col-md-2\"></div>\n  <div class=\"col-md-8\">\n    <form class=\"modal-form\" name=\"geobject-shared-attribute-editor\" #attributeForm=\"ngForm\">\n      <fieldset>\n        <div style=\"min-height: 50vh;\">\n\n          <div class=\"form-group\">\n              <label> \n                <localize key=\"dropdown.select.geoobjecttype.label\"></localize>\n              </label>\n                <select id=\"geoObjectTypeSelect\" name=\"geoObjectTypeSelect\" class=\"form-control select-area\" [(ngModel)]=\"geoObjectType\" required>\n                  <!-- <option> <localize key=\"dropdown.select.geoobjecttype.option.label\"></localize> </option> -->\n                  <option *ngFor=\"let got of geoObjectTypes\" [ngValue]=\"got\">{{got.label.localizedValue}}</option>\n                </select>\n          </div>\n\n          <div class=\"form-group\" style=\"overflow: visible;\">\n              <label> \n                <localize key=\"dropdown.select.geoobject.label\"></localize>\n              </label>\n              <input type=\"text\" [ngClass]=\"{'inline-loading':loading}\" [(ngModel)]=\"geoObjectId\" [disabled]=\"!geoObjectType\" name=\"geoObjectId\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\"\n                (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" [placeholder]=\"('masterlist.search' | localize) + '...'\" class=\"form-control\"\n                autocomplete=\"off\" required>\n          </div>\n\n          <div *ngIf=\"preGeoObject\">\n            <geoobject-shared-attribute-editor \n            #attributeEditor (valid)=\"this.onValidChange($event)\" \n            [geoObjectType]=\"this.geoObjectType\" \n            [preGeoObject]=\"this.preGeoObject\" \n            [(postGeoObject)]=\"this.postGeoObject\" \n            [isGeometryInlined]=\"true\"\n            [animate]=false>\n            </geoobject-shared-attribute-editor>\n          </div>\n\n          <div class=\"form-group\">\n              <div class=\"button-holder\">\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                  <localize key=\"modal.button.cancel\"></localize>\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"!attributeForm.valid\">\n                  <localize key=\"modal.button.submit\"></localize>\n                </button>\n              </div>\n          </div>\n\n        </div>\n      </fieldset>\n    </form>\n  </div>\n  <div class=\"col-md-2\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'change-request-page',\n    templateUrl: './change-request-page.component.html',\n    styleUrls: ['./change-request-page.css']\n} )\nexport class ChangeRequestPageComponent implements OnInit {\n\n\tcontent: string = \"SUBMIT\";\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n//\t\tthis.isMaintainer ? this.renderContent(\"MANAGE\") : this.renderContent(\"SUBMIT\");\n\t\tthis.renderContent(\"MANAGE\");\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\n\t\tif(content === \"SUBMIT\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"change.request.page.title\");\n\t\t}\n\t\telse if(content === \"MANAGE\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"change.request.table.title\");\n\t\t}\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\n\t\t\t\t<div class=\"heading\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{{pageTitle}}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isContributor\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'MANAGE'}\" (click)=\"renderContent('MANAGE')\">\n                      <localize key=\"hierarchy.current.management.panel.title\"></localize>\n                    </a> \n<!-- \n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isContributor\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SUBMIT'}\" (click)=\"renderContent('SUBMIT')\">\n                      <localize key=\"modal.button.submit\"></localize>\n                    </a>\n -->                    \n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px;margin-top: 10px;\">\n<!-- \n\t\t\t\t\t<submit-change-request *ngIf=\"content === 'SUBMIT'\"></submit-change-request>\n -->        \n\t\t\t\t\t<request-table *ngIf=\"content === 'MANAGE'\"></request-table>\n\t\t\t\t</div>\n\t\t\t\t\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ManageParentVersionsModalComponent } from './manage-parent-versions-modal.component';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n@Component({\n\n\tselector: 'cascading-geo-selector',\n\ttemplateUrl: './cascading-geo-selector.html',\n})\nexport class CascadingGeoSelector {\n\n\t@Input() hierarchies: HierarchyOverTime[];\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Input() isValid: boolean = true;\n\t@Input() readOnly: boolean = false;\n\n\t@ViewChild(\"mainForm\") mainForm;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() customEvent: boolean = false;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tdateStr: string;\n\n\tcHierarchies: any[] = [];\n\n\tparentMap: any = {};\n\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tconst day = this.forDate.getUTCDate();\n\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\n\t\t// Truncate any hours/minutes/etc which may be part of the date\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n\t\tconst time = this.forDate.getTime();\n\n\t\tthis.isValid = true;\n\n\t\tthis.cHierarchies = [];\n\t\tthis.hierarchies.forEach(hierarchy => {\n\t\t\tconst object = {};\n\t\t\tobject['label'] = hierarchy.label;\n\t\t\tobject['code'] = hierarchy.code;\n\n\t\t\tthis.isValid = this.isValid && (this.hierarchies.length > 0);\n\n\t\t\thierarchy.entries.forEach(pot => {\n\t\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tlet parents = [];\n\n\t\t\t\t\thierarchy.types.forEach(type => {\n\t\t\t\t\t\tlet parent: any = {\n\t\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\t\tlabel: type.label\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\t\tparent.text = pot.parents[type.code].text;\n\t\t\t\t\t\t\tparent.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparents.push(parent);\n\t\t\t\t\t});\n\n\t\t\t\t\tobject['parents'] = parents;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.cHierarchies.push(object);\n\n\t\t});\n\n\t\tthis.valid.emit();\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getHierarchies(): any {\n\t\treturn this.hierarchies;\n\t}\n\n\tonManageVersions(code: string): void {\n\t\tconst hierarchy = this.hierarchies.find(h => h.code === code);\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(hierarchy);\n\t\t}\n\t\telse {\n\n\t\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.init(hierarchy);\n\t\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<form style=\"overflow:visible;\" class=\"modal-form\" name=\"cascading-geo-selector\" #mainForm=\"ngForm\">\n  <fieldset>\n    <div>\n      <div class=\"row-holder\" style=\"overflow:visible;\" *ngFor=\"let hierarchy of this.cHierarchies\">\n        <div class=\"label-holder\">\n          <label>\n            {{hierarchy.label}}\n          </label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"container\" style=\"width:100%;\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" style=\"float:left;width:150px;\" *ngFor=\"let parent of hierarchy.parents; let i = index\">\n                {{parent.label}}\n\n                <input style=\"width:150px;\" type=\"text\" class=\"form-control\" disabled\n                  [value]=\"parent.geoObject.properties.displayLabel.localizedValue + ' : ' + parent.geoObject.properties.code\" [name]=\"hierarchy.code + '-' + parent.code + '-input'\">\n                  \n              </div>\n              \n            </div>\n\n            <div class=\"row\" *ngIf=\"!readOnly\">\n              <div class=\"col-sm-12\">\n                  <div class=\"button-holder\" style=\"padding: 20px 0 20px 0;text-align: left;\">\n                      <button type=\"submit\" style=\"\" (click)=\"onManageVersions(hierarchy.code)\" class=\"btn btn-primary\" role=\"button\">\n                          <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n                      </button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { MasterListVersion } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ExportFormatModalComponent } from './export-format-modal.component';\nimport { GeoObjectEditorComponent } from '../geoobject-editor/geoobject-editor.component';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService, ProgressService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'master-list',\n\ttemplateUrl: './master-list.component.html',\n\tstyleUrls: []\n})\nexport class MasterListComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterListVersion = null;\n\tp: number = 1;\n\tcurrent: string = '';\n\tfilter: { attribute: string, value: string, label: string }[] = [];\n\tselected: string[] = [];\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 100,\n\t\tresults: []\n\t};\n\tsort = { attribute: 'code', order: 'ASC' };\n\tisPublished: boolean = true;\n\tisRefreshing: boolean = false;\n\tisWritable: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tpublic searchPlaceholder = \"\";\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\n\tconstructor(public service: RegistryService, private pService: ProgressService, private route: ActivatedRoute,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.searchPlaceholder = localizeService.decode(\"masterlist.search\");\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\t\tthis.isPublished = (this.route.snapshot.paramMap.get('published') == \"true\");\n\n\t\tthis.service.getMasterListVersion(oid).then(version => {\n\t\t\tthis.list = version;\n\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\tattribute.isCollapsed = true;\n\t\t\t});\n\t\t\tconst orgCode = this.list.orgCode;\n\t\t\tconst typeCode = this.list.superTypeCode != null ? this.list.superTypeCode : this.list.typeCode;\n\n\t\t\tthis.isWritable = this.authService.isGeoObjectTypeRC(orgCode, typeCode);\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/progress/' + oid);\n\t\tthis.notifier.subscribe(message => {\n\t\t\tthis.handleProgressChange(message.content)\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\n\tonPageChange(pageNumber: number): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.data(this.list.oid, pageNumber, this.page.pageSize, this.filter, this.sort).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t//    onSearch(): void {\n\t//        this.filter = this.current;\n\t//\n\t//        this.onPageChange( 1 );\n\t//    }\n\n\tonSort(attribute: { name: string, label: string }): void {\n\t\tif (this.sort.attribute === attribute.name) {\n\t\t\tthis.sort.order = (this.sort.order === 'ASC' ? 'DESC' : 'ASC');\n\t\t}\n\t\telse {\n\t\t\tthis.sort = { attribute: attribute.name, order: 'ASC' };\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tattr.search = null;\n\t\t});\n\n\t\tthis.filter = [];\n\t\tthis.selected = [];\n\n\t\tthis.onPageChange(1);\n\t}\n\n\ttoggleFilter(attribute: any): void {\n\t\tattribute.isCollapsed = !attribute.isCollapsed;\n\t}\n\n\tgetValues(attribute: any): void {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.message = null;\n\n\t\t\t// Get the valid values\n\t\t\tthis.service.values(this.list.oid, attribute.search, attribute.name, attribute.base, this.filter).then(options => {\n\t\t\t\toptions.unshift({ label: '[' + this.localizeService.decode(\"masterlist.nofilter\") + ']', value: null });\n\n\t\t\t\tobserver.next(options);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\thandleProgressChange(progress: any): void {\n\n\t\tthis.isRefreshing = (progress.current < progress.total);\n\n\t\tthis.pService.progress(progress);\n\t}\n\n\thandleDateChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && (attribute.value.start !== '' || attribute.value.end !== '')) {\n\n\t\t\tlet label = '[' + attribute.label + '] : [';\n\n\t\t\tif (attribute.value.start != null) {\n\t\t\t\tlabel += attribute.value.start;\n\t\t\t}\n\n\t\t\tif (attribute.value.start != null && attribute.value.end != null) {\n\t\t\t\tlabel += ' - ';\n\t\t\t}\n\n\t\t\tif (attribute.value.end != null) {\n\t\t\t\tlabel += attribute.value.end;\n\t\t\t}\n\n\t\t\tlabel += ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleInputChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && attribute.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleListChange(e: TypeaheadMatch, attribute: any): void {\n\t\tattribute.value = e.item;\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tif (attr.base === attribute.base) {\n\t\t\t\tattr.search = '';\n\t\t\t}\n\t\t});\n\n\t\tif (attribute.value.value != null && attribute.value.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value.label + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: e.item.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t\tattribute.search = e.item.label;\n\t\t}\n\t\telse {\n\t\t\tattribute.search = '';\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tisFilterable(attribute: any): boolean {\n\t\treturn attribute.type !== 'none' && (attribute.dependency.length === 0 || this.selected.indexOf(attribute.base) !== -1 || this.selected.filter(value => attribute.dependency.includes(value)).length > 0);\n\t}\n\n\tonEdit(data): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\teditModal.content.configureAsExisting(data.code, this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterList(this.list.oid).toPromise()\n\t\t\t.then(list => {\n\t\t\t\tthis.list = list;\n\t\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\t\tattribute.isCollapsed = true;\n\t\t\t\t});\n\n\t\t\t\t// Refresh the resultSet\n\t\t\t\tthis.onPageChange(1);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tonNewGeoObject(): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t//editModal.content.fetchGeoObject( data.code, this.list.typeCode );\n\t\teditModal.content.configureAsNew(this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonExport(): void {\n\t\tthis.bsModalRef = this.modalService.show(ExportFormatModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.onFormat.subscribe(format => {\n\t\t\tif (format == 'SHAPEFILE') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-shapefile?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t\telse if (format == 'EXCEL') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-spreadsheet?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t});\n\t}\n\n\tchangeTypeaheadLoading(attribute: any, loading: boolean): void {\n\t\tattribute.loading = loading;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n    <!-- <progress-bar></progress-bar> -->\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\">\n            <div *ngIf=\"list\" class=\"col-md-12\">\n                <h2>\n                    <!-- <localize key=\"masterlist.title\"></localize> -->\n                    {{list.displayLabel}}\n                </h2>\n            </div>\n        </div>\n        <div *ngIf=\"list\" class=\"row form-group\">\n\n            <div class=\"col-md-12\">\n                <h4>\n                    <localize key=\"masterlist.publishDate\"></localize>\n                    : <input style=\"border:none;\" type=\"date\" [name]=\"'publishDate_' + list.code\" [(ngModel)]=\"list.publishDate\" disabled>\n                </h4>\n                \n                <h4>\n                    <localize key=\"masterlist.forDate\"></localize>\n                    : <input style=\"border:none;\" type=\"date\" [name]=\"'forDate_' + list.code\" [(ngModel)]=\"list.forDate\" disabled>\n                </h4>\n            </div>\n        </div>\n<!--         <div class=\"row\"> -->\n<!--             <div *ngIf=\"list\" class=\"col-md-12\"> -->\n<!--               <a [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, (!isWritable || list.isAbstract), list.forDate]\" routerLinkActive=\"active\"> -->\n<!--                 <localize key=\"masterlist.gotoMap\"></localize> -->\n<!--               </a> -->\n                \n<!--             </div> -->\n<!--         </div> -->\n\n\n        <div *ngIf=\"filter.length > 0\" class=\"row form-group\">\n            <div class=\"col-md-12 table-responsive\" style=\"\">\n                <localize key=\"masterlist.filters\"></localize>\n                <ol>\n                    <li *ngFor=\"let f of filter\">{{f.label}}</li>\n                </ol>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            \n                <div class=\"button-holder pull-right\">\n            \n                    <span class=\"clickable\" (click)=\"clearFilters()\" style=\"padding: 10px;\">\n                        <span class=\"fa-stack fa-md\">\n                            <i class=\"fa fa-filter fa-stack-2x\" style=\"font-size: 25px;\"></i>\n                            <i class=\"fa fa-times-circle fa-stack-1x\" style=\"font-size: 13px;top: 4px;left: 6px;\"></i>\n                        </span>\n                        <localize key=\"masterlist.clearFilters\"></localize>\n                    </span>\n                    \n                    <span *ngIf=\"!isPublished\" class=\"clickable\" (click)=\"onPublish()\" style=\"padding: 10px;\">\n                        <i [ngClass]=\"{'fa fa-refresh clickable':true, 'fa-spin':isRefreshing}\" style=\"font-size: 24px;vertical-align: middle;padding-right: 5px;\" aria-hidden=\"true\"></i>\n                        <localize key=\"masterlist.publish\"></localize>\n                    </span>\n\n\n                        <button *ngIf=\"isWritable && !list.isAbstract\" type=\"submit\"\n                           [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, '__NEW__', (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"\n                         class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"masterlist.newGeoObject\"></localize>\n                        </button>\n                        <button type=\"submit\" (click)=\"onExport()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize *ngIf=\"filter.length === 0\" key=\"io.export.allrows\"></localize>\n                            <localize *ngIf=\"filter.length > 0\" key=\"io.export.filteredrows\"></localize>\n                        </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div *ngIf=\"list\" class=\"col-md-12 table-responsive\" style=\"\">\n                <table class=\"list-table table table-bordered table-striped\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 3%\" class=\"label-column\"><localize key=\"masterlist.view.column\"></localize></th>\n                            <th *ngFor=\"let attribute of list.attributes\" class=\"label-column\">\n\n                                <div style=\"display: table-cell; padding-right: 10px; vertical-align: middle;\" *ngIf=\"isFilterable(attribute)\">\n                                    <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\"> \n\t\t\t\t\t\t\t\t\t\t<i style=\"font-size: 20px;\" class=\"fa fa-filter\" [title]=\"'button.filter.helptext' | localize\"></i>\n                                    </a>\n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; word-break: keep-all; word-wrap: normal;\">{{attribute.label}} </a> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; vertical-align: middle; padding-left: 5px;\"> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'ASC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-down\" style=\"font-size: inherit;\"></i> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'DESC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-up\" style=\"font-size: inherit;\"></i>\n                            \t</a>\n\n                                <div *ngIf=\"isFilterable(attribute)\">\n                                    <!-- <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-filter\"></i>\n\t\t\t\t\t\t\t\t</a> -->\n                                    <div id=\"collapseBasic\" [collapse]=\"attribute.isCollapsed\">\n                                        <input *ngIf=\"attribute.type === 'input'\" [name]=\"attribute.name\" [(ngModel)]=\"attribute.value\" (keyup.enter)=\"handleInputChange(attribute)\" type=\"text\" class=\"form-control search-input\" />\n                                        <div *ngIf=\"attribute.type === 'date'\">\n                                            <input [name]=\"attribute.name + 'Start'\" [(ngModel)]=\"attribute.value.start\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" /> <input [name]=\"attribute.name + 'End'\" [(ngModel)]=\"attribute.value.end\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" />\n                                        </div>\n                                        <input *ngIf=\"attribute.type === 'list'\" \n                                          type=\"text\" \n                                          [placeholder]=\"('masterlist.search' | localize) + '...'\" \n                                          [name]=\"attribute.name\"\n                                          [(ngModel)]=\"attribute.search\"\n                                          [typeaheadAsync]=\"true\"\n                                          [typeahead]=\"getValues(attribute)\"\n                                          (typeaheadOnSelect)=\"handleListChange($event, attribute)\"\n                                          [typeaheadOptionsLimit]=\"100\"\n                                          [typeaheadMinLength]=\"0\"\n                                          [typeaheadWaitMs]=\"300\"\n                                          [ngClass]=\"{'inline-loading':attribute.loading}\"    \n                                          (typeaheadLoading)=\"changeTypeaheadLoading(attribute, $event)\"                                      \n                                          typeaheadOptionField=\"label\"\n                                          class=\"form-control\" autocomplete=\"off\">\n\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\">\n                            <td style=\"width: 3%; text-align: center;\" class=\"label-column\">\n                              <a class=\"fa fa-pencil\" [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, result.code, (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"></a>\n                            </td>\n                            <td *ngFor=\"let attribute of list.attributes\" class=\"label-column\">{{ result[attribute.name] }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!-- <div class=\"row form-group\">\n            <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            </div>\n        </div>\n    </div>\n    <!-- </div> -->\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { PublishModalComponent } from './publish-modal.component';\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { RegistryService } from '@registry/service';\nimport { AuthService, LocalizationService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'published-master-list-history',\n\ttemplateUrl: './published-master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class PublishedMasterListHistoryComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tpage: any = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresults: []\n\t};\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tisAdmin: boolean;\n\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, public authService: AuthService, private localizeService: LocalizationService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'PUBLISH_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\t//isGeoObjectTypeRM(type: string): boolean {\n\t//\treturn this.authService.isGeoObjectTypeRM(type);\n\t//}\n\n\tonDeleteMasterListVersion(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.updateList();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdateList(): void {\n\t\t// update the list of versions. \n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterListVersions(this.list.oid).then((data: { job: string }) => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.list != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getPublishMasterListJobs(this.list.oid, this.page.pageSize, pageNumber, \"createDate\", true).then(response => {\n\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.updateList();\n\t\t}\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, true])\n\t}\n\n\tonPublishShapefile(version: MasterListVersion): void {\n\n\t\tthis.service.publishShapefile(version.oid).then(() => {\n\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDownloadShapefile(version: MasterListVersion): void {\n\t\twindow.location.href = acp + '/master-list/download-shapefile?oid=' + version.oid;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n     <div *ngIf=\"list && ((list.write))\" style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" \n                    [title]=\"'masterList.publish.help.text' | localize\">\n                        <localize key=\"masterlist.publish.versions\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\" style=\"border-bottom: solid lightgrey 3px;\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.publishDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onPublishShapefile(version)\" class=\"btn btn-default\" role=\"button\">\n                                    <localize key=\"masterlist.publish-shapefile\"></localize>\n                                </button>                                \n                                <button *ngIf=\"version.shapefile\" type=\"submit\" (click)=\"onDownloadShapefile(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"masterlist.download\"></localize>\n                                </button>   \n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onDeleteMasterListVersion( version )\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>  \n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <input class=\"text-display-input\" type=\"date\" [name]=\"'forDate_' + version.oid\" [(ngModel)]=\"version.forDate\" disabled>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <input class=\"text-display-input\" type=\"date\" [name]=\"'publishDate_' + version.oid\" [(ngModel)]=\"version.publishDate\" disabled>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12 order-md-1\">\n            <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <tr style=\"height: 56px;\">\n                                <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let job of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <td style=\"vertical-align: middle;\">\n                                    <div class=\"wrapper\">\n                                        <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                        <p style=\"padding-left: 60px;\">\n                                            <span style=\"display: block;\"> {{job.createDate}} </span>\n                                            <span style=\"display: block;\"> {{job.author}} </span>\n                                            <span style=\"display: block;\"> {{job.type}} </span>\n                                            <span style=\"display: block;\"> {{job.status}} </span>\n                                            <span *ngIf=\"job.exception\" style=\"display: block;\"> {{job.exception.message}} </span>\n                                        </p>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                    </div>\n                </div>\n            </ul>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-history',\n\ttemplateUrl: './master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class MasterListHistoryComponent implements OnInit {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tforDate: string = '';\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, private localizeService: LocalizationService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"EXPLORATORY\").then(list => {\n\t\t\tthis.list = list;\n\t\t});\n\t}\n\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.createMasterListVersion(this.list.oid, this.forDate).then(version => {\n\t\t\tthis.list.versions.push(version);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, false])\n\t}\n\n\tonDelete(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.list.versions = this.list.versions.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== version.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div *ngIf=\"list && list.exploratory\" style=\"margin-bottom: 10px;\" class=\"row\">\n\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\" style=\"margin-left: 10px;\">\n                <div class=\"form-group\">\n                    <label for=\"forDate\" style=\"display: block; margin-bottom: 0;\"><localize key=\"masterlist.publishingFor\"></localize></label> <input id=\"forDate\" type=\"date\" name=\"forDate\" [(ngModel)]=\"forDate\" required>\n\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\">\n                        <localize key=\"masterlist.publishNewVersion\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.generatedDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\"> -->\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(version)\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>\n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <input class=\"text-display-input\" type=\"date\" [name]=\"'forDate_' + version.oid\" [(ngModel)]=\"version.forDate\" disabled>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <input class=\"text-display-input\" type=\"date\" [name]=\"'publishDate_' + version.oid\" [(ngModel)]=\"version.createDate\" disabled>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { MasterList } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\n@Component({\n\n\tselector: 'master-list-view',\n\ttemplateUrl: './master-list-view.component.html',\n\tstyleUrls: ['./master-list-view.component.css']\n})\nexport class MasterListViewComponent implements OnInit {\n\n\tcontent: string = \"\";\n\tlist: MasterList = null;\n\n\t/*\n\t * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute) {\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tif (oid != null) {\n\t\t\tthis.content = \"PUB\";\n\t\t}\n\n\t\tthis.service.getMasterList(oid).then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tif (list.read) {\n\t\t\t\tthis.content = \"EXP\";\n\t\t\t}\n\t\t});\n\t}\n\n\tonViewMetadata(event: any): void {\n\t\tevent.preventDefault();\n\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h3>{{list.displayLabel.localizedValue}}</h3>\n                    </div>\n                </div>\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h5>\n                            <b> <a href=\"#\" (click)=\"onViewMetadata($event)\"><localize key=\"masterlist.view\"></localize> </a></b>\n                        </h5>\n                    </div>\n                </div>\n                \n                <div>\n                    <a *ngIf=\"list && list.read\" style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'EXP'}\" (click)=\"renderContent('EXP')\"><localize key=\"lists.exploratory.link.label\"></localize></a>\n                    <a style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'PUB'}\" (click)=\"renderContent('PUB')\"><localize key=\"lists.published.link.label\"></localize></a>\n                </div>\n\n                <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n                    <published-master-list-history *ngIf=\"list && content === 'PUB'\" [oid]=\"list.oid\"></published-master-list-history>\n                    <master-list-history *ngIf=\"list && content === 'EXP'\" [oid]=\"list.oid\"></master-list-history>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { interval } from 'rxjs';\n\n\nimport { RegistryService, IOService  } from '@registry/service';\nimport { ScheduledJob, ScheduledJobOverview, PaginationPage } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\n@Component({\n\tselector: 'scheduled-jobs',\n\ttemplateUrl: './scheduled-jobs.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class ScheduledJobsComponent implements OnInit {\n\tmessage: string = null;\n\n\tactiveJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompleteJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tisViewAllOpen: boolean = false;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.onActiveJobsPageChange(1);\n\n\t\tthis.pollingData = interval(1000).subscribe(() => {\n\t\t\tthis.activeTimeCounter++\n\t\t\tthis.completeTimeCounter++\n\n\t\t\tif (this.isViewAllOpen) {\n\t\t\t\tif (this.activeTimeCounter >= 4) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t\tif (this.completeTimeCounter >= 7) {\n\t\t\t\t\tthis.onCompleteJobsPageChange(this.completeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.completeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.activeTimeCounter >= 2) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.pollingData.unsubscribe();\n\t}\n\n\tformatJobStatus(job: ScheduledJobOverview) {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PaginationPage): void {\n\n\t\tpage.results.forEach(job => {\n\n\t\t\tlet stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{ \"label\": this.localizeService.decode(\"scheduler.step.fileImport\"), \"status\": \"COMPLETE\" },\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.staging\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.validation\"),\n\t\t\t\t\t\t\"status\": job.stage === \"VALIDATE\" || job.stage === \"VALIDATION_RESOLVE\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"VALIDATE\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.databaseImport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"IMPORT\" || job.stage === \"IMPORT_RESOLVE\" || job.stage === \"RESUME_IMPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tjob = job as ScheduledJobOverview;\n\t\t\tjob.stepConfig = stepConfig;\n\t\t});\n\n\t}\n\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"NEW\", \"VALIDATE\", \"VALIDATION_RESOLVE\", \"IMPORT\", \"IMPORT_RESOLVE\", \"RESUME_IMPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\tonViewAllCompleteJobs(): void {\n\t\tthis.onCompleteJobsPageChange(1);\n\n\t\tthis.isViewAllOpen = true;\n\t}\n\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-history/', code])\n\t}\n\n\tonActiveJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJobs(this.activeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.activeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.activeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCompleteJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getCompletedScheduledJobs(this.completeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.completeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.completeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\tonCancelScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\t\t\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(job.configuration).then(response => {\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n  onResolveScheduledJob(historyId: string, job: ScheduledJob): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n\n    this.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\n    this.bsModalRef.content.type = ModalTypes.danger;\n\n    this.bsModalRef.content.onConfirm.subscribe(data => {\n\n      this.service.resolveScheduledJob(historyId).then(response => {\n\n        this.bsModalRef.hide()\n\n        for (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n          let activeJob = this.activeJobsPage.results[i];\n\n          if (activeJob.jobId === job.jobId) {\n            this.activeJobsPage.results.splice(i, 1);\n            break;\n          }\n        }\n\n        this.onViewAllCompleteJobs();\n\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n    });\n  }\n\n\n\terror(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"py-5\">\n            <h2>\n                <localize key=\"scheduledjobs.title\"></localize>\n            </h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n                <ul class=\"list-group\">\n                    <div class=\"solid-table-wrapper\">\n                        <table class=\"table table-striped\"> \n                            <thead > \n                                <tr style=\"height: 56px;\"> \n                                    <th style=\"vertical-align: middle;\">\n                                        <localize key=\"scheduledjobs.jobs.table.header\"></localize>                                      \n                                    </th> \n                                </tr> \n                            </thead> \n                            <tbody> \n                                <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                                <tr *ngFor=\"let job of activeJobsPage.results | paginate: { id: 'activeJobs', itemsPerPage: activeJobsPage.pageSize, currentPage: activeJobsPage.pageNumber, totalItems: activeJobsPage.count }\" >\n                                    <td style=\"vertical-align: middle;\">\n                                        <div class=\"wrapper\">\n                                            <i style=\"position: absolute;font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            <p style=\"padding-left: 60px;\">\n                                                <span style=\"display: block;\">\n                                                    {{job.fileName}}\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    <input class=\"text-display-input\" type=\"date\" [name]=\"'job_' + job.oid\" [(ngModel)]=\"job.createDate\" disabled>\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    {{formatJobStatus(job)}}\n                                                </span>\n                                            </p>\n\n                                            <step-indicator [steps]=\"job.stepConfig\"></step-indicator>\n\n                                        </div>\n                                    </td> \n                                    <td *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;vertical-align: middle;\">  \n\n                                        <div class=\"button-holder\" style=\"float: right;\">\n                                            <a [routerLink]=\"'/registry/job/' + job.historyId\" routerLinkActive=\"active\">\n                                                <button class=\"btn btn-primary\" role=\"button\">\n                                                    <localize *ngIf=\"job.stage === 'IMPORT_RESOLVE' || job.stage === 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.fix.problems.button\"></localize>\n                                                    <localize *ngIf=\"job.stage != 'IMPORT_RESOLVE' && job.stage != 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.detail.button\"></localize>\n                                                </button>\n                                            </a>\n                                            <button *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\" type=\"button\" (click)=\"onCancelScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n                                                <localize key=\"etl.import.cancel.openModal\"></localize>\n                                            </button>\n                                            <button *ngIf=\"job.stage === 'IMPORT_RESOLVE'\" type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n\t\t\t\t\t\t\t\t\t\t\t\t                    </button>\n                                        </div>\n                                    </td> \n                                </tr> \n\n                            </tbody> \n                        </table>\n                        <div *ngIf=\"activeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                            <pagination-controls id=\"activeJobs\" (pageChange)=\"onActiveJobsPageChange($event)\"></pagination-controls>\n                        </div>\n                    </div>\n\n                    <div class=\"solid-table-wrapper\">\n\t                    <table class=\"table table-striped\"> \n\t                      <thead> \n\t                        <tr> \n\t                          <th style=\"width:40%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.completedjobs.table.header\"></localize>                                      \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.status\"></localize>                   \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importedRecords\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importStartDate\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importEndDate\"></localize>                   \n                            </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length < 1\" style=\"border-bottom: none; width:15%\">\n\t                            <button type=\"submit\" (click)=\"onViewAllCompleteJobs()\" class=\"btn btn-default pull-right\" role=\"button\">\n\t                              <localize key=\"scheduledjobs.view.completed.jobs.button\"></localize>\n\t                            </button>\n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"border-bottom: none; width:0%\">\n                            </th>\n\t                        </tr> \n\t                      </thead> \n\t                      <tbody> \n\t                      <!-- <tr *ngFor=\"let job of completedJobs; let i = index;\">  -->\n\t                      <tr *ngFor=\"let job of completeJobsPage.results | paginate: { id: 'completeJobs', itemsPerPage: completeJobsPage.pageSize, currentPage: completeJobsPage.pageNumber, totalItems: completeJobsPage.count }\" >\n\t                        <td style=\"width:40%; vertical-align: middle;\">\n\t                          <div class=\"wrapper\">\n                              <i class=\"fa fa-file\" style=\"position: absolute;\" aria-hidden=\"true\"></i>\n                              <p style=\"padding-left: 30px;margin: 0;\">{{job.fileName}}</p>\n\t                          </div>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n\t                          <p style=\"padding-left: 0px;margin: 0;\">{{formatJobStatus(job)}}</p>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n                            <p style=\"padding-left: 0px;margin: 0;\">{{job.importedRecords}}</p>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                              <input class=\"text-display-input\" type=\"date\" [name]=\"'jobCreateDate_' + job.oid\" [(ngModel)]=\"job.createDate\" disabled>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                            <input class=\"text-display-input\" type=\"date\" [name]=\"'jobLasteUpdateDate_' + job.oid\" [(ngModel)]=\"job.lastUpdateDate\" disabled>\n                          </td>\n\t                        <td *ngIf=\"isAdmin || isMaintainer\" style=\"width:15%;text-align: right;vertical-align: middle;\">                                \n\t                           <!-- \n\t                           <button type=\"submit\" (click)=\"onView(job.historyId)\" class=\"btn btn-primary\" role=\"button\"><localize key=\"scheduledjobs.detail.button\"></localize></button>\n\t                           -->\n\t                           <!-- <button type=\"submit\" (click)=\"onDelete(job)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"modal.button.delete\"></localize></button> -->\n\t                        </td>\n\t                       </tr> \n\t                      </tbody> \n\t                    </table>\n\t\n\t                    <div *ngIf=\"completeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls id=\"completeJobs\" (pageChange)=\"onCompleteJobsPageChange($event)\"></pagination-controls>\n\t                    </div>\n                    </div>\n                </ul>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { JobConflictModalComponent } from './conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './conflict-widgets/reupload-modal.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'job',\n\ttemplateUrl: './job.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class JobComponent implements OnInit {\n\tmessage: string = null;\n\tjob: ScheduledJob;\n\tallSelected: boolean = false;\n\thistoryId: string = \"\";\n\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\ttimeCounter: number = 0;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tisPolling: boolean = false;\n\thasRowValidationProblem: boolean = false;\n\n\tnotifier: WebSocketSubject<{ type: string, message: string }>;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService,\n\t\tprivate router: Router, private route: ActivatedRoute,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.historyId = this.route.snapshot.params[\"oid\"];\n\n\t\tthis.onPageChange(1);\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'IMPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\tformatAffectedRows(rows: string) {\n\t\treturn rows.replace(/,/g, \", \");\n\t}\n\n\tformatValidationResolve(obj: any) {\n\t\treturn JSON.stringify(obj);\n\t}\n\n\tonProblemResolved(problem: any): void {\n\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\tlet pageConflict = this.page.results[i];\n\n\t\t\tif (pageConflict.id === problem.id) {\n\t\t\t\tthis.page.results.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFriendlyProblemType(probType: string): string {\n\n\t\tif (probType === \"net.geoprism.registry.io.ParentCodeException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.PostalCodeLocationException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.postal.code.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.AmbiguousParentException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.multi.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.InvalidGeometryException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.invalid.geom.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.DataNotFoundException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.datanotfound\");\n\t\t}\n\n\t\tif (\n\t\t\tprobType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.permission\");\n\t\t}\n\n\t\t// if(probType === \"net.geoprism.registry.io.TermValueException\"){\n\t\t//   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n\t\t// }\n\n\t\tif (\n\t\t\tprobType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.duplicate.data.lookup\");\n\t\t}\n\n\t\treturn probType;\n\t}\n\n\n\tonEdit(problem: any): void {\n\t\t// this.router.navigate( ['/registry/master-list-history/', code] )\n\n\t\tthis.bsModalRef = this.modalService.show(JobConflictModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.problem = problem;\n\t\tthis.bsModalRef.content.job = this.job;\n\t\tthis.bsModalRef.content.onConflictAction.subscribe(data => {\n\t\t\tif (data.action === 'RESOLVED') {\n\t\t\t\tthis.onProblemResolved(data.data);\n\t\t\t}\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJob(this.historyId, this.page.pageSize, pageNumber, true).then(response => {\n\n\t\t\tthis.job = response;\n\n\t\t\tif (this.job.stage === 'IMPORT_RESOLVE') {\n\t\t\t\tthis.page = this.job.importErrors;\n\t\t\t}\n\t\t\telse if (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.page = this.job.problems;\n\n\t\t\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\t\t\tlet problem = this.page.results[i];\n\n\t\t\t\t\tif (problem.type === 'RowValidationProblem') {\n\t\t\t\t\t\tthis.hasRowValidationProblem = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonViewAllActiveJobs(): void {\n\n\t}\n\n\tonViewAllCompleteJobs(): void {\n\n\t}\n\n\ttoggleAll(): void {\n\t\tthis.allSelected = !this.allSelected;\n\n\t\tthis.job.importErrors.results.forEach(row => {\n\t\t\trow.selected = this.allSelected;\n\t\t})\n\t}\n\n\tonReuploadAndResume(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ReuploadModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.job = this.job;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string): void {\n\t\tif (this.page.results.length == 0) {\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs']);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tif (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.validationDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.validationButton\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t});\n\t\t}\n\t}\n\n\tonCancelScheduledJob(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(this.job.configuration).then(response => {\n\t\t\t\t//this.bsModalRef.hide()\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                                <strong>{{job.fileName}}</strong>\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              <input class=\"text-display-input\" type=\"date\" [name]=\"'createDate_' + job.oid\" [(ngModel)]=\"job.createDate\" disabled>\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.importedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.importedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n                <div class=\"col-md-5 order-md-1\">\n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'VALIDATION_RESOLVE'\" style=\"display:block; margin: 10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.validation.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.reimport.button\"></localize>\n                    </button>\n                  </div>\n                  \n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'IMPORT_RESOLVE'\" style=\"display:block; margin:10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.import.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                    </button>\n                  </div>\n      \n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && !hasRowValidationProblem\" class=\"button-holder\" style=\"display:block; margin:10px;text-align: right;\">\n                      <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <localize *ngIf=\"job && job.stage === 'VALIDATION_RESOLVE'\" key=\"etl.import.resume.openModal\"></localize>\n                        <span *ngIf=\"job && job.stage === 'IMPORT_RESOLVE'\">\n                          <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <div *ngIf=\"hasRowValidationProblem\"class=\"button-holder\" style=\"display:block; margin:10px;\">\n                    <button type=\"submit\" (click)=\"onReuploadAndResume(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <span>\n                          <localize key=\"scheduledjobs.reupload.resume.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <!--\n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && job.stage === 'VALIDATION_RESOLVE'\" class=\"button-holder\" style=\"display:block; margin:10px;\">\n                      <button type=\"button\" (click)=\"onCancelScheduledJob(job.historyId)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"etl.import.cancel.openModal\"></localize></button>\n                  </div>\n                  -->\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr>\n\t                                <!-- <th class=\"label-column\">\n\t                                  <div class=\"check-block\">\n\t                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n\t                                     <span></span>\n\t                                   </div>\n\t                                  </div>\n\t                                </th> -->\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"scheduledjobs.import.table.problem.type.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n\t                                    \n\t                                </th>\n                                </tr>\n                            </thead>\n                            <thead *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n                              <tr>\n                                <!-- <th class=\"label-column\">\n                                  <div class=\"check-block\">\n                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n                                     <span></span>\n                                   </div>\n                                  </div>\n                                </th> -->\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.problem.type.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.label.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  \n                                </th>\n                              </tr>\n                            </thead>\n\n                            <tbody *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <!-- <tr *ngFor=\"let row of job.errors.page; let i = index;\"> -->\n                                    <!-- <td class=\"label-column\">\n                                      <boolean-field [(value)]=\"row.selected\"></boolean-field>\n                                    </td> -->\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{getFriendlyProblemType(row.exception.type)}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.exception.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                    <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n                                        <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                            <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n\n                            <tbody *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n\t                            <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n\t                             <!-- <td class=\"label-column\">\n\t                               <boolean-field [(value)]=\"row.selected\"></boolean-field>\n\t                             </td> -->\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n\t                               <p>{{row.type}}</p> \n\t                             </td>\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p *ngIf=\"row.type === 'RowValidationProblem'\">{{row.exception.message}}</p>\n                                 <p *ngIf=\"row.type === 'ParentReferenceProblem' || row.type === 'TermReferenceProblem'\">{{row.label}}</p>\n                               </td>\n                               <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p>{{formatAffectedRows(row.affectedRows)}}</p>\n                               </td>\n\t                             <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n\t                              <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                    <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n\t                              </button>\n\t                             </td>\n\t                            </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ScheduledJobOverview } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'job-conflict-modal',\n    templateUrl: './job-conflict-modal.component.html',\n    styleUrls: []\n} )\nexport class JobConflictModalComponent implements OnInit {\n    message: string = null;\n    problem: any;\n    job: ScheduledJobOverview;\n    \n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef ) {\n      this.onConflictAction = new Subject();\n    }\n\n    ngOnInit(): void {\n      \n    }\n    \n    onProblemResolvedListener(problem: any): void {\n      this.onConflictAction.next({action:\"RESOLVED\", data: problem});\n    }\n\n    onCancel(): void {\n        this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"scheduledjobs.problemdetail.modal.title\"></localize>\n        </h2>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            \n            <div *ngIf=\"problem && job && job.stage === 'IMPORT_RESOLVE'\">\n                <import-problem-widget (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\"></import-problem-widget>\n            </div>\n            <div *ngIf=\"problem && job && job.stage === 'VALIDATION_RESOLVE'\">\n              <parent-reference-problem-widget *ngIf=\"problem.type === 'ParentReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></parent-reference-problem-widget>\n              <term-reference-problem-widget *ngIf=\"problem.type === 'TermReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></term-reference-problem-widget>\n              <row-validation-problem-widget *ngIf=\"problem.type === 'RowValidationProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></row-validation-problem-widget>\n            </div>\n            \n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize key=\"io.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { GeoObjectType, MasterList, ScheduledJob, ImportError } from '@registry/model/registry';\n\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'import-problem-widget',\n    templateUrl: './import-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ImportProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: ImportError;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n    }\n\n    onEditGeoObject(): void {\n        let editModal = this.modalService.show( GeoObjectEditorComponent, {\n            backdrop: true,\n            ignoreBackdropClick: true\n        } );\n\n        editModal.content.configureFromImportError(this.problem, this.job.historyId, this.job.configuration.startDate, true);\n        editModal.content.setMasterListId( null );\n        editModal.content.setOnSuccessCallback(() => {\n\n          this.onProblemResolved.emit(this.problem);\n          this.bsModalRef.hide()\n            \n        } );\n    }\n\n    getFriendlyProblemType(probType: string): string {\n\n        if(probType === \"net.geoprism.registry.io.ParentCodeException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.PostalCodeLocationException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.AmbiguousParentException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.multi.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.InvalidGeometryException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.invalid.geom.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.DataNotFoundException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.datanotfound\" );\n        }\n        \n        if(\n            probType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.permission\" );\n        }\n\n        // if(probType === \"net.geoprism.registry.io.TermValueException\"){\n        //   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        // }\n        if(\n          probType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.duplicate.data.lookup\" );\n        }\n\n        return probType;\n    }\n\n    onSubmit(): void {\n\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide();\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        Uploaded by: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        Started: <input class=\"text-display-input\" type=\"date\" [name]=\"'jobCreateDate_' + job.oid\" [(ngModel)]=\"job.createDate\" disabled>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row equal\" style=\"display: flex;display: -webkit-flex;flex-wrap: wrap;\">\n                <div class=\"col-md-6\" style=\"padding-right: 5px;\">\n                    <div style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;\">\n                        <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{getFriendlyProblemType(problem.exception.type)}}</p>\n\n                        <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{problem.exception.message}}</p>\n\n                        <!-- <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                        <p>TODO: how to address the issue.</p> -->\n                    </div>\n                </div>\n                <div class=\"col-md-6\" style=\"padding-left: 5px;\">\n                    <div style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;text-align: center;\">\n                        <button style=\"width: 90%;\" type=\"submit\" (click)=\"onEditGeoObject()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"scheduledjobs.editGeoObject\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'parent-reference-problem-widget',\n    templateUrl: './parent-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ParentReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        Uploaded by: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        Started: <input class=\"text-display-input\" type=\"date\" [name]=\"'jobCreateDate_' + job.oid\" [(ngModel)]=\"job.createDate\" disabled>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.parentProblem.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p>\n                      <localize key=\"etl.parentProblem.toResolve\"></localize>\n                    </p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"etl.problem.parent.context\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <div *ngIf=\"problem.context.length > 0\" style=\"margin-top:10px;\">\n\t\t                    <ol *ngFor=\"let con of problem.context\">\n\t\t\t\t\t\t\t\t          <li>{{con.label}} ({{con.type}})</li>\n\t\t\t\t\t\t\t\t        </ol>\n\t\t\t\t\t\t\t        </div>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.parent.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"parentSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem.typeCode, problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"name\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"problem.parent == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n    selector: 'term-reference-problem-widget',\n    templateUrl: './term-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class TermReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    termId: string = null;\n    searchLabel: string;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( conflict: any ): Observable<any> {\n        return Observable.create(( observer: any ) => {\n            this.iService.getTermSuggestions( conflict.mdAttributeId, this.searchLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n    \n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        classifierId: this.termId,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        Uploaded by: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        Started: <input class=\"text-display-input\" type=\"date\" [name]=\"'jobCreateDate_' + job.oid\" [(ngModel)]=\"job.createDate\" disabled>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div *ngIf=\"problem\" class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.problem.termReference.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.termReference.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.attributeLabel\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{problem.attributeLabel}}</span>\n                    </div>\n                  </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.termReference.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"termSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"label\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"termId == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'row-validation-problem-widget',\n    templateUrl: './row-validation-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class RowValidationProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    formatAffectedRows(rows: string)\n    {\n      return rows.replace(/,/g, \", \");\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        Uploaded by: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        Started: <input class=\"text-display-input\" type=\"date\" [name]=\"'jobCreateDate_' + job.oid\" [(ngModel)]=\"job.createDate\" disabled>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\"><localize key=\"etl.problem.rowValidation.message\"></localize></p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.rowValidation.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{formatAffectedRows(problem.affectedRows)}}</span>\n                    </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.rowValidation.message\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.exception.message}}</span>\n\t                  </div>\n\t                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ModalTypes } from '@shared/model/modal';\nimport { LocalizationService, EventService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { ScheduledJob } from '@registry/model/registry';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'reupload-modal',\n    templateUrl: './reupload-modal.component.html',\n    styleUrls: []\n} )\nexport class ReuploadModalComponent {\n  @Input() title: string = this.localizeService.decode(\"reuploadmodal.title\");\n\n  @Input() message: string = this.localizeService.decode(\"reuploadmodal.message\");\n  \n  @Input() data: any;\n  \n  @Input() submitText: string = this.localizeService.decode(\"reuploadmodal.import\");\n  \n  @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n  \n  @Input() type: ModalTypes = ModalTypes.warning;\n  \n  @Input() job: ScheduledJob;\n  \n  @ViewChild( 'myFile' )\n  fileRef: ElementRef;\n  \n  /*\n   * File uploader\n   */\n  uploader: FileUploader;\n  \n  errorMessage: string;\n  \n  /*\n   * Called on confirm\n   */\n  public onConfirm: Subject<any>;\n  \n  constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService, private eventService: EventService ) { }\n  \n  ngOnInit(): void {\n    this.onConfirm = new Subject();\n    \n    let options: FileUploaderOptions = {\n      queueLimit: 1,\n      removeAfterUpload: true,\n      url: acp + '/etl/reimport'\n    };\n    \n    this.uploader = new FileUploader( options );\n    this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n        form.append( 'json', JSON.stringify(this.job.configuration) );\n    };\n    this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n        this.eventService.start();\n    };\n    this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n        this.fileRef.nativeElement.value = \"\";\n        this.eventService.complete();\n    };\n    this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.onConfirm.next( this.data );\n      this.bsModalRef.hide();\n    };\n    this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.error( JSON.parse( response ) );\n    }\n  }\n  \n  toString(data: any): string\n  {\n    return JSON.stringify(data);\n  }\n  \n  confirm(): void {\n    if ( this.uploader.queue != null && this.uploader.queue.length > 0 ) {\n      this.uploader.uploadAll();\n    }\n    else {\n      this.error( { message: this.localizeService.decode( 'io.missing.file' ), error: {} } );\n    }\n  }\n  \n  public error( err: any ): void {\n    this.errorMessage = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div class=\"modal-body\">\n\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">{{errorMessage}}</div>\n\n  <div class=\"heading\">\n    <h3>{{title}}</h3>\n  </div>\n\n  <div>{{message}}</div>\n\n  <form *ngIf=\"job\" style=\"margin-top: 30px;\" #form=\"ngForm\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 text-right\" for=\"file\">\n        <localize *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n        <localize *ngIf=\"job.configuration.formatType === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n      </label>\n      <div class=\"col-md-9\">\n        <input *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".zip\" required />\n        <input *ngIf=\"job.configuration.formatType === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".xlsx,.zip\" required />\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\"\n          style=\"padding: 4px 18px;\">\n          <span>{{cancelText}}</span>\n        </button>\n        <button type=\"button\" (click)=\"confirm()\"\n          [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n          aria-disabled=\"false\" style=\"padding: 4px 18px;\">\n          <span>{{submitText}}</span>\n        </button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { TaskService } from '@registry/service';\nimport { GeoObjectType, PaginationPage } from '@registry/model/registry';\n\n@Component({\n\tselector: 'task-viewer',\n\ttemplateUrl: './task-viewer.component.html',\n\tstyleUrls: ['./task-viewer.component.css'],\n\tproviders: [DatePipe]\n})\n\nexport class TaskViewerComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tinProgressTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompletedTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tisViewAllOpen: boolean = false;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tconstructor(private taskService: TaskService) {\n\t\t//const day = this.forDate.getUTCDate();\n\t\t//this.dateStr = this.forDate.getUTCFullYear() + \"-\" + ( this.forDate.getUTCMonth() + 1 ) + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onInProgressTasksPageChange(1);\n\n\t\t////\n\t\t//\n\t\t// We don't need polling on this page. It's better to save bandwidth for low resource environments.\n\t\t//\n\t\t////\n\n\t\t// this.pollingData = Observable.interval(1000).subscribe(() => {\n\t\t//   this.activeTimeCounter++\n\t\t//   this.completeTimeCounter++\n\n\t\t//   if (this.isViewAllOpen)\n\t\t//   {\n\t\t//     if (this.activeTimeCounter >= 4)\n\t\t//     {\n\t\t//       this.onInProgressTasksPageChange(this.inProgressTasks.pageNumber);\n\n\t\t//       this.activeTimeCounter = 0;\n\t\t//     }\n\t\t//     if (this.completeTimeCounter >= 7)\n\t\t//     {\n\t\t//       this.onCompletedTasksPageChange(this.completedTasks.pageNumber);\n\n\t\t//       this.completeTimeCounter = 0;\n\t\t//     }\n\t\t//   }\n\t\t//   else\n\t\t//   {\n\t\t//     if (this.activeTimeCounter >= 2)\n\t\t//     {\n\t\t//       this.onInProgressTasksPageChange(this.inProgressTasks.pageNumber);\n\n\t\t//       this.activeTimeCounter = 0;\n\t\t//     }\n\t\t//   }\n\t\t// });\n\t}\n\n\tupper(str: string): string {\n\t\tif (str != null) {\n\t\t\treturn str.toUpperCase();\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tonInProgressTasksPageChange(pageNumber: any): void {\n\t\tthis.taskService.getMyTasks(pageNumber, this.inProgressTasks.pageSize, 'UNRESOLVED').then(page => {\n\t\t\tthis.inProgressTasks = page;\n\t\t});\n\t}\n\n\tonCompletedTasksPageChange(pageNumber: any): void {\n\n\t\tthis.taskService.getMyTasks(pageNumber, this.completedTasks.pageSize, 'RESOLVED').then(page => {\n\t\t\tthis.completedTasks = page;\n\t\t});\n\t}\n\n\tonCompleteTask(task: any): void {\n\t\t// this.isViewAllOpen = true;\n\n\t\tthis.taskService.completeTask(task.id).then(() => {\n\n\t\t\tconst index = this.inProgressTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.inProgressTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.push(task);\n\t\t\t// this.onCompletedTasksPageChange(1);\n\t\t});\n\t}\n\n\tonMoveTaskToInProgress(task: any): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.taskService.setTaskStatus(task.id, 'UNRESOLVED').then(() => {\n\n\t\t\tconst index = this.completedTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\tthis.inProgressTasks.results.push(task);\n\t\t});\n\t}\n\n\tonViewAllCompletedTasks(): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.onCompletedTasksPageChange(1);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n    <message></message>\n\n    <h2>\n      <localize key=\"tasks.openTasksTitle\"></localize>\n    </h2>\n    <hr>\n  \n\t\t<div class=\"row\" *ngIf=\"inProgressTasks.results.length > 0\">\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\">\n\t        <div *ngFor=\"let task of inProgressTasks.results | paginate: { id: 'inProgressTasks', itemsPerPage: inProgressTasks.pageSize, currentPage: inProgressTasks.pageNumber, totalItems: inProgressTasks.count }\" class=\"panel panel-default\">\n\t          <div class=\"panel-heading\">\n\t            <h4>{{upper(task.title)}}</h4>\n\t          </div>\n\t          \n\t          <div class=\"panel-body\">\n\t            <div class=\"row\">\n\t             <div class=\"col-md-9\">\n\t              <label><localize key=\"tasks.taskMessage\"></localize></label>\n\t              <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n\t              <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                  <span><input class=\"text-display-input\" type=\"date\" [name]=\"'taskCreateDate_' + task.oid\" [(ngModel)]=\"task.createDate\" disabled></span>\n\t             </div>\n\t             <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" checked id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                \n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" (click)=\"onCompleteTask(task)\" type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n\t             </div>\n\t            </div>\n\t          </div>\n\t        </div>\n\t        <div *ngIf=\"inProgressTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"inProgressTasks\" (pageChange)=\"onInProgressTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n      </div>\n\t\t</div>\n\t\t\n\t\t\n\t\t<div class=\"row\">\n\t\t<h2 class=\"col-md-9\">\n      <localize key=\"tasks.completedTasksTitle\"></localize>\n    </h2>\n    <button class=\"col-md-3\" style=\"margin-top:20px;\" type=\"submit\" (click)=\"onViewAllCompletedTasks()\" class=\"btn btn-default pull-right\" role=\"button\">\n      <localize key=\"tasks.viewCompletedTasksButton\"></localize>\n    </button>\n    </div>\n    <hr>\n  \n    <div class=\"row\" >\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\" *ngIf=\"isViewAllOpen && completedTasks.results.length > 0\">\n          <div *ngFor=\"let task of completedTasks.results | paginate: { id: 'completedTasks', itemsPerPage: completedTasks.pageSize, currentPage: completedTasks.pageNumber, totalItems: completedTasks.count }\" class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h4>{{upper(task.title)}}</h4>\n            </div>\n            \n            <div class=\"panel-body\">\n              <div class=\"row\">\n               <div class=\"col-md-9\">\n                <label><localize key=\"tasks.taskMessage\"></localize></label>\n                <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                <span style=\"margin-right:30px;\"><input class=\"text-display-input\" type=\"date\" [name]=\"'taskCreateDate_' + task.oid\" [(ngModel)]=\"task.createDate\" disabled></span>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.completeDateLabel\"></localize></label>\n                <span><input class=\"text-display-input\" type=\"date\" [name]=\"'taskCompletedDate_' + task.oid\" [(ngModel)]=\"task.completedDate\" disabled></span>\n               </div>\n               <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" (click)=\"onMoveTaskToInProgress(task)\" id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" checked type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n               </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"completedTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"completedTasks\" (pageChange)=\"onCompletedTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n        <div class=\"content-wrapper\" *ngIf=\"completedTasks.results.length === 0 && isViewAllOpen\">\n          <p style=\"font-style:italic;color:grey;\"><localize key=\"tasks.no.completed.tasks.message\"></localize></p>\n        </div>\n      </div>\n    </div>\n\n\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { SynchronizationConfig } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { SynchronizationConfigModalComponent } from './synchronization-config-modal.component';\n\n@Component({\n\tselector: 'synchronization-config-manager',\n\ttemplateUrl: './synchronization-config-manager.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigManagerComponent implements OnInit {\n\tmessage: string = null;\n\n\tpage: PageResult<SynchronizationConfig> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 20\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: SynchronizationConfigService, private lService: LocalizationService, private router: Router, private modalService: BsModalService) { }\n\n\tngOnInit(): void {\n\t\tthis.onPageChange(1);\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tthis.service.getPage(pageNumber, this.page.pageSize).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcreate(): void {\n\t\tthis.service.edit(null).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(null, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonEdit(config: SynchronizationConfig): void {\n\n\t\tthis.service.edit(config.oid).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(response.config, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonRemove(config: SynchronizationConfig): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.lService.decode(\"confirm.modal.verify.delete\") + ' [' + config.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.submitText = this.lService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(() => {\n\t\t\tthis.service.remove(config.oid).then(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tonView(config: SynchronizationConfig): void {\n\t\tthis.router.navigate(['/registry/synchronization-config/', config.oid])\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div class=\"heading\">\n      <h2>\n        <localize key=\"synchronization.config.manager\"></localize>\n      </h2>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12 order-md-1\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th style=\"width: 70%;\"><localize key=\"synchronization.config.label\"></localize></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let config of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"clickable\">\n              <td style=\"width: 70%; vertical-align: middle;\">\n                <a [routerLink]=\"'/registry/synchronization-config/' + config.oid\" routerLinkActive=\"active\"> {{config.label.localizedValue}} </a>\n              </td>\n              <td style=\"width: 30%; text-align: right;\">\n                <button type=\"submit\" (click)=\"onView(config)\" class=\"btn btn-primary\" role=\"button\">\n                  <localize key=\"modal.button.view\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onEdit(config)\" class=\"btn btn-default\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.edit\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onRemove(config)\" class=\"btn btn-danger\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.delete\"></localize>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n\n        <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n          <div class=\"col-md-6\">\n            <button type=\"submit\" (click)=\"create()\" class=\"btn btn-primary\" role=\"button\">\n              <localize key=\"hierarchy.management.button.create\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { SynchronizationConfig, OrgSyncInfo, GeoObjectType } from '@registry/model/registry';\nimport { SynchronizationConfigService, RegistryService } from '@registry/service';\nimport { CustomAttributeConfig } from '@registry/model/sync';\n\nexport interface LevelRow {\n\tisAttributeEditor: boolean;\n\n\tlevel?: any;\n\tlevelNum?: number;\n\thasAttributes?: boolean;\n\n\tattrCfg?: GOTAttributeConfig;\n}\nexport interface GOTAttributeConfig {\n\tgeoObjectTypeCode?: string;\n\tattrs: CustomAttributeConfig[];\n}\n\n@Component({\n\tselector: 'synchronization-config-modal',\n\ttemplateUrl: './synchronization-config-modal.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigModalComponent implements OnInit {\n\tmessage: string = null;\n\n\t@ViewChild('form') form;\n\n\tconfig: SynchronizationConfig = {\n\t\torganization: null,\n\t\tsystem: null,\n\t\thierarchy: null,\n\t\tlabel: this.lService.create(),\n\t\tconfiguration: {}\n\t};\n\n\torganizations: OrgSyncInfo[] = [];\n\n\tcOrg: OrgSyncInfo = null;\n\tcSystem: { label: string, oid: string, type: string } = null;\n\n\ttypes: GeoObjectType[] = [];\n\n\tlevelRows: LevelRow[] = [];\n\t\n\torgUnitGroups: any[] = [];\n\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonSuccess: Subject<SynchronizationConfig>;\n\n\n\tconstructor(private service: SynchronizationConfigService, private registryService: RegistryService, private lService: LocalizationService, private bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tinit(config: SynchronizationConfig, organizations: OrgSyncInfo[]): void {\n\n\t\tthis.organizations = organizations;\n\n\t\tif (config != null) {\n\t\t\tthis.config = config;\n\n\t\t\tlet oIndex = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\t\tif (oIndex !== -1) {\n\t\t\t\tthis.cOrg = this.organizations[oIndex];\n\t\t\t}\n\n\t\t\tlet sIndex = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\t\tif (sIndex !== -1) {\n\t\t\t\tthis.cSystem = this.cOrg.systems[sIndex];\n\t\t\t}\n\n\t\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t\t// Get the types\t\n\t\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t\t//\tthis.types = types;\n\t\t\t\t//});\n\t\t\t\t\n\t\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n          this.types = esConfig.types;\n          this.orgUnitGroups = esConfig.orgUnitGroups;\n        }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n        });\n\n\t\t\t}\n\n\t\t\tthis.levelRows = [];\n\t\t\tfor (var i = 0; i < this.config.configuration.levels.length; ++i) {\n\t\t\t\tvar level = this.config.configuration.levels[i];\n\n\t\t\t\tvar levelRow: LevelRow = { level: level, levelNum: i, isAttributeEditor: false };\n\n\t\t\t\tif (level.attributes != null && Object.keys(level.attributes).length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\t\t\t\t}\n\n\t\t\t\tthis.levelRows.push(levelRow);\n\t\t\t}\n\t\t}\n\t}\n\n\tonOrganizationSelected(): void {\n\t\tlet index = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cOrg = this.organizations[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cOrg = null;\n\t\t\tthis.cSystem = null;\n\t\t}\n\t}\n\n\tonChangeExternalSystem(): void {\n\t\tlet index = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cSystem = this.cOrg.systems[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cSystem = null;\n\t\t}\n\n\n\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t// Get the types\t\n\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t//\tthis.types = types;\n\t\t\t//});\n\t\t\t\n\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n        this.types = esConfig.types;\n        this.orgUnitGroups = esConfig.orgUnitGroups;\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n\t\t\tif (this.config.configuration['levels'] == null) {\n\t\t\t\tvar lvl = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tgeoObjectType: null,\n\t\t\t\t\tlevel: 0\n\t\t\t\t};\n\t\t\t\tthis.config.configuration['levels'] = [lvl];\n\t\t\t\tthis.levelRows.push({ level: lvl, levelNum: 0, isAttributeEditor: false });\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tthis.types = [];\n\t\t}\n\t}\n\n\taddLevel(): void {\n\t\tvar lvl = {\n\t\t\ttype: null,\n\t\t\tgeoObjectType: null,\n\t\t\tlevel: this.config.configuration.levels.length\n\t\t};\n\t\tvar len = this.config.configuration['levels'].push(lvl);\n\t\tthis.levelRows.push({ level: lvl, levelNum: len - 1, isAttributeEditor: false });\n\t}\n\n\tremoveLevel(levelNum: number, levelRowIndex: number): void {\n\t\tif (levelNum < this.config.configuration['levels'].length) {\n\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\tif (editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex, 1);\n\n\t\t\tvar newLevelNum = 0;\n\t\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[i];\n\n\t\t\t\tlevelRow.levelNum = newLevelNum;\n\n\t\t\t\tif (!levelRow.isAttributeEditor) {\n\t\t\t\t\tnewLevelNum = newLevelNum + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.config.configuration['levels'].splice(levelNum, 1);\n\t\t}\n\t}\n\n\tgetEditorIndex(): number {\n\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\tvar levelRow = this.levelRows[i];\n\n\t\t\tif (levelRow.isAttributeEditor) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tconfigureAttributes(levelRow: any): void {\n\t\tvar editorIndex = this.getEditorIndex();\n\n\t\tif (editorIndex != -1) {\n\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\tif (editorIndex == levelRow.levelNum + 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.onSelectGeoObjectType(levelRow.level.geoObjectType, levelRow.levelNum, false);\n\t}\n\n\tgetTermOptions(attr: CustomAttributeConfig, dhis2Id: string) {\n\t\tfor (var i = 0; i < attr.dhis2Attrs.length; ++i) {\n\t\t\tvar dhis2Attr = attr.dhis2Attrs[i];\n\n\t\t\tif (dhis2Attr.dhis2Id === dhis2Id) {\n\t\t\t\treturn dhis2Attr.options;\n\t\t\t}\n\t\t}\n\t}\n\n\tonChangeAttrMapping(attr: any, newValue: string, levelRow: LevelRow) {\n\t\tif (newValue == null || newValue === \"\") {\n\t\t\tif (attr.terms != null) {\n\t\t\t\tattr.terms = {};\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var j = 0; j < levelRow.attrCfg.attrs.length; j++) {\n\t\t\tif (levelRow.attrCfg.attrs[j].name === attr.name) {\n\t\t\t\tvar attrCfgAttr: any = levelRow.attrCfg.attrs[j];\n\n\t\t\t\tif (attrCfgAttr.terms != null) {\n\t\t\t\t\tattr.terms = {};\n\n\t\t\t\t\tfor (var i = 0; i < attrCfgAttr.terms.length; ++i) {\n\t\t\t\t\t\tvar term = attrCfgAttr.terms[i];\n\n\t\t\t\t\t\tattr.terms[term.code] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tonSelectGeoObjectType(geoObjectTypeCode: string, levelRowIndex: number, isDifferentGot: boolean = true) {\n\t\tif (geoObjectTypeCode === \"\" || geoObjectTypeCode == null) {\n\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\n\t\t\tlevelRow.hasAttributes = false;\n\t\t\tlevelRow.attrCfg = null;\n\t\t\tlevelRow.level.attributes = {};\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar attrCfg = this.levelRows[levelRowIndex].attrCfg;\n\t\tif (attrCfg != null && attrCfg.geoObjectTypeCode === geoObjectTypeCode) {\n\t\t\t// Resume an editing session on attributes that we fetched previously\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex !== levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: attrCfg });\n\t\t}\n\t\telse {\n\t\t\tthis.service.getCustomAttrCfg(geoObjectTypeCode, this.config.system).then((attrs: CustomAttributeConfig[]) => {\n\t\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\t\t\t\tvar level = levelRow.level;\n\n\t\t\t\tif (isDifferentGot) {\n\t\t\t\t\tlevel.attributes = {};\n\t\t\t\t}\n\n\t\t\t\tlevelRow.attrCfg = { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs };\n\n\t\t\t\tif (editorIndex != -1 && (editorIndex === levelRowIndex + 1 || attrs.length > 0)) {\n\t\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attrs.length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\n\t\t\t\t\tfor (var i = 0; i < attrs.length; ++i) {\n\t\t\t\t\t\tvar attr = attrs[i];\n\n\t\t\t\t\t\tif (isDifferentGot || level.attributes[attr.name] == null) {\n\t\t\t\t\t\t\tlevel.attributes[attr.name] = {\n\t\t\t\t\t\t\t\tname: attr.name,\n\t\t\t\t\t\t\t\texternalId: null,\n\t\t\t\t\t\t\t\tisOrgUnitGroup: false\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (attr.terms != null && attr.terms.length > 0) {\n\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms = {};\n\n\t\t\t\t\t\t\t\tfor (var j = 0; j < attr.terms.length; ++j) {\n\t\t\t\t\t\t\t\t\tvar term = attr.terms[j];\n\n\t\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms[term.code] = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//else if (level.attributes[attr.name] != null)\n\t\t\t\t\t\t//{\n\t\t\t\t\t\t//  level.attributes[attr.name].isOrgUnitGroup = level.attributes[attr.name].isOrgUnitGroup || attr.isOrgUnitGroup || false;\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs } });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlevelRow.hasAttributes = false;\n\t\t\t\t}\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonChangeTargetType(attr: any): void {\n\t  attr.externalId = null;\n\t  \n\t  for (const key in attr.terms) {\n      if (attr.terms.hasOwnProperty(key)) {\n        attr.terms[key] = null;\n      }\n    }\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.apply(this.config).then(cfg => {\n\n\t\t\tthis.onSuccess.next(cfg);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcancel(): void {\n\n\t\tif (this.config.oid != null) {\n\t\t\tthis.service.unlock(this.config.oid).then(() => {\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"synchronization.config.title\"></localize>\n    </h2>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n\n    <fieldset>\n      <div class=\"row-holder\" *ngFor=\"let localeValue of config.label.localeValues\">\n        <div class=\"label-holder\">\n          <label> <localize key=\"synchronization.config.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n          </label>\n        </div>\n        <div class=\"holder\">\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.organization\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.organization\" name=\"organization\" (change)='onOrganizationSelected()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n      <div *ngIf=\"cOrg != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.hierarchy\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.hierarchy\" name=\"hierarchy\" [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of cOrg.hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"config.hierarchy != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.system\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.system\" name=\"system\" (change)='onChangeExternalSystem()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let system of cOrg.systems\" [value]=\"system.oid\">{{system.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"row-holder\" *ngIf=\"cSystem != null && cSystem.type === 'DHIS2ExternalSystem'\">\n\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.units\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"list-table-wrapper\">\n            <table id=\"manage-systems-table\" class=\"list-table table table-bordered\">\n              <thead>\n                <tr>\n                  <th style=\"width:3%\">\n                    <localize key=\"settings.external.synchronization.level.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                  </th>\n                  <th style=\"width:17%\">\n                    <localize key=\"synchronization.config.orgUnitGroup\"></localize>\n                  </th>\n                  <th style=\"width:25%; text-align: center;\">\n                    <localize key=\"settings.external.synchronization.actions.label\"></localize>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let levelRow of levelRows; let i = index;\" [style.background-color]=\"levelRow.isAttributeEditor === false ? '#F7F7F7' : ''\">\n                  <td style=\"width:3%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <label style=\"padding: 10px 0; margin: 0;\"><localize key=\"sync.level.label\"></localize> {{levelRow.levelNum + 1}}</label>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.geoObjectType\" (change)=\"onSelectGeoObjectType(levelRow.level.geoObjectType, i)\" [name]=\"'geoObjectType' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label.localizedValue}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.type\" [name]=\"'type' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option value=\"ORG_UNITS\"><localize key=\"synchronization.config.units\"></localize></option>\n                      <option value=\"RELATIONSHIPS\"><localize key=\"synchronization.config.relationships\"></localize></option>\n                      <option value=\"ALL\"><localize key=\"synchronization.config.all\"></localize></option>\n                    </select>\n                  </td>\n                  <td style=\"width:17%\" *ngIf=\"levelRow.isAttributeEditor === false && orgUnitGroups.length > 0\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.orgUnitGroupId\" [name]=\"'group' + levelRow.levelNum\">\n                      <option></option>\n                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <a style=\"padding: 10px;\" (click)=\"removeLevel(levelRow.levelNum, i)\" [title]=\"'button.delete.helptext' | localize\">\n\t\t\t\t\t\t\t\t\t      <icon class=\"fa fa-trash-o ico-remove\"></icon>\n\t\t\t\t\t\t\t\t\t      <label style=\"cursor:pointer; margin-left:9px;\"><localize key=\"sync.level.delete\"></localize></label>\n\t\t\t\t\t\t\t\t\t    </a> \n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n                      <a *ngIf=\"levelRow.hasAttributes\" style=\"padding: 10px;\" (click)=\"configureAttributes(levelRow)\" [title]=\"'sync.attr.configureAttributes.helptext' | localize\">\n                        <icon class=\"fa fa-edit\"></icon>\n                        <label style=\"cursor:pointer; margin-left:3px;\"><localize key=\"sync.attr.configureAttributes\"></localize></label>\n                      </a> \n                    </div>\n\t\t\t\t\t\t\t\t\t</td>\n                  <td colspan=\"4\" *ngIf=\"levelRow.isAttributeEditor === true\">\n                    <h4>Attributes</h4>\n\t                  <table class=\"table\">\n\t                    <thead>\n\t                      <tr>\n\t                        <th></th>\n\t                      </tr>\n\t                    </thead>\n\t                    <tbody>\n\t                      <tr *ngFor=\"let attr of levelRow.attrCfg.attrs\">\n\t                        <td class=\"row-holder\">\n\t                          <table class=\"row\" style=\"width:80%; margin-left:80px; margin-top:15px; margin-bottom: 10px;\">\n\t                            <thead>\n\t                              <tr>\n\t                                <th style=\"width:25%\">\n\t                                  <label><localize key=\"sync.attr.sourceAttribute\"></localize></label>\n\t                                </th>\n\t                                <th style=\"width:25%\">\n                                    <label><localize key=\"sync.attr.type\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label *ngIf=\"attr.type === 'term'\"><localize key=\"sync.attr.targetTypeHeader\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label>\n                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.targetAttribute\"></localize>\n                                    </label>\n                                  </th>\n\t                              </tr>\n\t                            </thead>\n\t                            <tbody>\n\t                              <tr>\n\t                                <td><label style=\"color:#999;\">{{attr.label}}</label></td>\n\t                                <td>\n\t                                  <label style=\"color:#999;\">{{attr.typeLabel}}</label>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type === 'term'\" style=\"margin-right:20px;\">\n\t                                  <select style=\"width:95%\" *ngIf=\"attr.type === 'term'\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" (change)=\"onChangeTargetType(levelRows[i-1].level.attributes[attr.name])\" [name]=\"'isOrgUnitGroup' + i + attr.name\">\n                                      <option [ngValue]=\"false\"><localize key=\"sync.attr.targetTypeOptionSet\"></localize></option>\n                                      <option [ngValue]=\"true\"><localize key=\"sync.attr.targetTypeOrgUnitGroup\"></localize></option>\n                                    </select>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type !== 'term'\" style=\"float:right; margin-right:20px;\">\n\t                                  <label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label>\n\t                                </td>\n\t                                <td>\n\t                                  <select *ngIf=\"attr.dhis2Attrs.length > 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].externalId\" [ngModelOptions]=\"{standalone: true}\" (change)=\"onChangeAttrMapping(levelRows[i-1].level.attributes[attr.name], levelRows[i-1].level.attributes[attr.name].externalId, levelRow)\">\n\t                                    <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                    <option [value]=\"dhis2Attr.dhis2Id\" *ngFor=\"let dhis2Attr of attr.dhis2Attrs\">\n\t                                      {{dhis2Attr.name}}\n\t                                    </option>\n\t                                  </select>\n\t                                  <label *ngIf=\"attr.dhis2Attrs.length == 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" style=\"color:#999;\"><localize key=\"sync.noValid\"></localize></label>\n\t                                </td>\n\t                              </tr>\n\t                            </tbody>\n\t                          </table>\n\t                          <div *ngIf=\"(levelRows[i-1].level.attributes[attr.name].externalId != null && levelRows[i-1].level.attributes[attr.name].externalId.length > 0) || levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\">\n\t\t                          <table *ngFor=\"let term of attr.terms\" class=\"row\" style=\"width:80%; margin-left:80px;\">\n\t                              <thead>\n\t                                <tr>\n\t                                  <th style=\"width:25%\">\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label><localize key=\"sync.attr.term.cgrTerm\"></localize></label>\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <!-- To -->\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label>\n\t                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.dhis2Option\"></localize>\n\t                                      <localize *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.targetOrgUnitGroup\"></localize>\n\t                                    </label>\n\t                                  </th>\n\t                                </tr>\n\t                              </thead>\n\t                              <tbody>\n\t                                <tr>\n\t                                  <td></td>\n\t                                  <td><label style=\"color:#999;\">{{term.label}}</label></td>\n\t                                  <td style=\"float:right; margin-right:20px;\"><label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label></td>\n\t                                  <td>\n\t                                    <select *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t                                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                      <option *ngFor=\"let option of getTermOptions(attr, levelRows[i-1].level.attributes[attr.name].externalId)\" [value]=\"option.code\">\n\t                                        {{option.name}}\n\t                                      </option>\n\t                                    </select>\n\t                                    <select *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" type=\"text\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t\t\t\t                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t\t\t\t\t\t\t\t\t                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n\t\t\t\t\t\t\t\t\t                    </select>\n\t                                  </td>\n\t                                </tr>\n\t                              </tbody>\n\t                            </table>\n                            </div>\n\t                        </td>\n\t                      </tr>\n\t                    </tbody>\n\t                  </table>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"button-column\">\n                    <a class=\"fa fa-plus\" (click)=\"addLevel()\"></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          \n          </div>\n      </div>\n\n\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\"></div>\n        <div class=\"holder\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\n\nimport { SynchronizationConfig, ExportScheduledJob } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component/error-handler/error-handler';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'synchronization-config',\n\ttemplateUrl: './synchronization-config.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigComponent implements OnInit {\n\tmessage: string = null;\n\n\tconfig: SynchronizationConfig = null;\n\n\tpage: PageResult<ExportScheduledJob> = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresultSet: []\n\t};\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tconstructor(private service: SynchronizationConfigService, private lService: LocalizationService, private route: ActivatedRoute) { }\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tthis.service.get(oid).then(config => {\n\t\t\tthis.config = config;\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'DATA_EXPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\n\t\tif (this.notifier != null) {\n\t\t\tthis.notifier.complete();\n\t\t}\n\t}\n\n\tonRun(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.run(this.config.oid).then(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.config != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getJobs(this.config.oid, pageNumber, this.page.pageSize).then(response => {\n\n\t\t\t\tthis.formatStepConfig(response);\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tformatJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PageResult<ExportScheduledJob>): void {\n\n\t\tpage.resultSet.forEach((job: ExportScheduledJob) => {\n\n\t\t\tjob.stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Queued\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Connecting\"),\n\t\t\t\t\t\t\"status\": job.stage === \"CONNECTING\" || job.stage === \"CONNECTION_FAILED\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"CONNECTION_FAILED\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.DatabaseExport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"EXPORT\" || job.stage === \"EXPORT_RESOLVE\" || job.stage === \"RESUME_EXPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"CONNECTING\", \"CONNECTION_FAILED\", \"EXPORT\", \"EXPORT_RESOLVE\", \"RESUME_EXPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\" || job.status === \"FAILURE\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"row\">\n      <div *ngIf=\"config != null\" class=\"col-md-12\">\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h3>{{config.label.localizedValue}}</h3>\n          </div>\n        </div>\n\n        <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <label style=\"vertical-align: middle;\">CGR</label> \n              <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" style=\"font-size: 23px;padding: 0 7px;vertical-align: middle; color: #bdbdbd;margin-bottom: 4px;\"></i> \n              <label style=\"vertical-align: middle;\">{{config.systemLabel}}</label>\n            </div>\n            <div class=\"col-md-4\">\n              <form #myForm=\"ngForm\">\n                <div class=\"form-group text-right\" style=\"margin: 0;\">\n                  <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onRun()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" [title]=\"'synchronization.config.run' | localize\">\n                    <localize key=\"synchronization.config.run\"></localize>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div class=\"row\" *ngIf=\"config != null && config.type === 'DHIS2ExternalSystem'\">\n            <div class=\"col-md-12\">\n\n                <h4>\n                    <localize key=\"synchronization.config.units\"></localize>\n                </h4>\n                <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <localize key=\"settings.external.synchronization.level.label\"></localize>\n                        </th>\n                        <th>\n                          <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                        </th>\n                        <th style=\"text-align: right;\">\n                          <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let level of this.config.configuration['levels']; let i = index;\" >\n                        <td style=\"vertical-align: middle;\">\n                          <localize key=\"settings.external.synchronization.level.label\"></localize> {{i + 1}}\n                        </td>\n                        <td style=\"\">\n                          {{level.geoObjectType}}\n                        </td>\n                        <td style=\"text-align: right;\">\n                          <localize *ngIf=\"level.type === 'ORG_UNITS'\" key=\"synchronization.config.units\"></localize>\n                          <localize *ngIf=\"level.type === 'RELATIONSHIPS'\" key=\"synchronization.config.relationships\"></localize>\n                          <localize *ngIf=\"level.type === 'ALL'\" key=\"synchronization.config.all\"></localize>\n                        </td>\n                      </tr>\n                    </tbody>\n                </table>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n              <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                  <table class=\"table table-striped\">\n                    <thead>\n                      <tr style=\"height: 56px;\">\n                        <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                      <tr *ngFor=\"let job of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                        <td style=\"vertical-align: middle;\">\n                          <div class=\"wrapper\">\n                            <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                            <p style=\"padding-left: 60px;\">\n                              <span style=\"display: block;\"> {{job.fileName}} </span>\n                              <span style=\"display: block;\"> {{job.createDate}} </span>\n                              <span style=\"display: block;\"> {{formatJobStatus(job)}} </span>\n                              <span *ngIf=\"job.exception != null && job.exception.type != 'java.lang.RuntimeException'\" style=\"display: block;\">\n                                {{job.exception.message}}\n                              </span>\n                            </p>\n\n                            <step-indicator *ngIf=\"job.status !== 'SUCCESS' && job.status !== 'FAILURE' && job.status !== 'CANCELED'\" [steps]=\"job.stepConfig\"></step-indicator>\n\n                          </div>\n                        </td>\n                        <td style=\"text-align: right; vertical-align: middle;\">\n                          <div class=\"button-holder\" style=\"float: right;\">\n                            <a *ngIf=\"job.status === 'FAILURE'\" [routerLink]=\"'/registry/sync/details/' + job.historyId\" routerLinkActive=\"active\">\n                              <button class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"scheduledjobs.detail.button\"></localize>\n                              </button>\n                            </a>\n                           </div>\n                         </td>\n                      </tr>\n\n                    </tbody>\n                  </table>\n                  <div *ngIf=\"page.resultSet.length > 0\" class=\"solid-table-footer\">\n                    <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\n@Component({\n  selector: 'job',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.css']\n})\nexport class SyncDetailsComponent implements OnInit {\n  message: string = null;\n  job: ScheduledJob;\n  historyId: string = \"\";\n\n  page: any = {\n    count: 0,\n    pageNumber: 1,\n    pageSize: 10,\n    results: []\n  };\n\n  isAdmin: boolean;\n  isMaintainer: boolean;\n  isContributor: boolean;\n\n  constructor(public service: RegistryService, private route: ActivatedRoute, authService: AuthService, public ioService: IOService) {\n    this.isAdmin = authService.isAdmin();\n    this.isMaintainer = this.isAdmin || authService.isMaintainer();\n    this.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n  }\n\n  ngOnInit(): void {\n\n    this.historyId = this.route.snapshot.params[\"oid\"];\n\n    this.onPageChange(1);\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  formatAffectedRows(rows: string) {\n    return rows.replace(/,/g, \", \");\n  }\n\n  formatValidationResolve(obj: any) {\n    return JSON.stringify(obj);\n  }\n\n  onPageChange(pageNumber: any): void {\n\n    this.message = null;\n\n    this.service.getExportDetails(this.historyId, this.page.pageSize, pageNumber).then(response => {\n\n      this.job = response;\n      \n      this.page = this.job.exportErrors;\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n  error(err: HttpErrorResponse): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              {{job.createDate}}\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.exportedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.exportedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead>\n                                <tr>\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"geoObject.label\"></localize>&nbsp;<localize key=\"geoObjectType.attr.code\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.code}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { Map, LngLatBoundsLike, NavigationControl, MapboxEvent, AttributionControl, IControl } from 'mapbox-gl';\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AllGeoJSON } from '@turf/helpers'\nimport bbox from '@turf/bbox';\n\nimport { Subject } from 'rxjs';\n\nimport { GeoObject, ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { ModalState } from '@registry/model/location-manager';\n\nimport { MapService, RegistryService } from '@registry/service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'location-manager',\n\ttemplateUrl: './location-manager.component.html',\n\tstyleUrls: ['./location-manager.css']\n})\nexport class LocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\tMODE: ModalState = {\n\t\tSEARCH: 0,\n\t\tVIEW: 1,\n\t}\n\n\tbsModalRef: BsModalRef;\n\n    /* \n     * Root nodes of the tree\n     */\n\tdata: GeoObject[] = [];\n\n    /* \n     *  Search Text\n     */\n\ttext: string = '';\n\n    /* \n     *  MODE\n     */\n\tmode: number = this.MODE.SEARCH;\n\n    /*\n     * Date of data for explorer\n     */\n\tdateStr: string = null;\n\n\tforDate: Date = new Date();\n\n\n    /* \n     * Currently selected geo object\n     */\n\tcurrent: GeoObject;\n\n    /* \n     * Currently selected geo object type\n     */\n\ttype: GeoObjectType;\n\n    /* \n     * Flag denoting if an object is currently being editted\n     */\n\tisEdit: boolean = false;\n\n    /* \n     * mapbox-gl map\n     */\n\tmap: Map;\n\n    /* \n     * Flag denoting the draw control is active\n     */\n\tactive: boolean = false;\n\n\tvectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'Satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n\t\t// {\n\t\t// \tname: 'Streets',\n\t\t// \tlabel: 'Streets',\n\t\t// \tid: 'streets-v9',\n\t\t// \tsprite: 'mapbox://sprites/mapbox/basic-v9',\n\t\t// \turl: 'mapbox://mapbox.basic-v9'\n\t\t// }\n\t];\n\n\thoverFeatureId: string;\n\n\tpreventSingleClick: boolean = false;\n\n\t/* \n     * Timer for determining double click vs single click\n     */\n\ttimer: any;\n\n\t/* \n     * debounced subject for map extent change events\n     */\n\tsubject: Subject<MapboxEvent<MouseEvent | TouchEvent | WheelEvent>>;\n\n\n\t// \n\t// Editing of geomemtries\n\t//\n\tgeometryChange: Subject<any> = new Subject();\n\n\tvot: ValueOverTime = null;\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\n\teditingControl: any;\n\n\n\tconstructor(private modalService: BsModalService, private mapService: MapService, public service: RegistryService) {\n\t\tmapService.init();\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tngAfterViewInit() {\n\n\t\tconst layer = this.baseLayers[0];\n\n\t\tthis.map = new Map({\n\t\t\tcontainer: 'map',\n\t\t\tstyle: {\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\t\"source\": 'mapbox',\n\t\t\t\t\t\t// \"source-layer\": \"mapbox_satellite_full\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tzoom: 2,\n\t\t\tattributionControl: false,\n\t\t\tcenter: [-78.880453, 42.897852]\n\t\t});\n\n\t\tthis.map.on('load', () => {\n\t\t\tthis.initMap();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tchangeMode(mode: number): void {\n\t\tthis.mode = mode;\n\n\t\tif (this.mode === this.MODE.SEARCH) {\n\t\t\tthis.isEdit = false;\n\t\t}\n\n\t\tthis.clearGeometryEditing();\n\n\t\tthis.vot = null;\n\t}\n\n\tonModeChange(value: boolean): void {\n\t\tthis.isEdit = value;\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tinitMap(): void {\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t});\n\n\t\tthis.addLayers();\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n\t\tthis.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n\t\tthis.map.on('click', 'children-points', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\t\tthis.map.on('click', 'children-polygon', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\t}\n\n\thandleMapClickEvent(event: any): void {\n\t\tif (!this.isEdit && event.features != null && event.features.length > 0) {\n\t\t\tconst feature = event.features[0];\n\n\t\t\tif (feature.properties.code != null && (this.current == null || this.current.properties.code !== feature.properties.code)) {\n\t\t\t\tthis.select(feature, null);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\taddLayers(): void {\n\n\t\tconst source = 'children';\n\n\t\tthis.map.addSource(source, {\n\t\t\ttype: 'geojson',\n\t\t\tdata: {\n\t\t\t\t\"type\": \"FeatureCollection\",\n\t\t\t\t\"features\": []\n\t\t\t}\n\t\t});\n\n\t\t// Polygon layer\n\t\tthis.map.addLayer({\n\t\t\t'id': source + '-polygon',\n\t\t\t'type': 'fill',\n\t\t\t'source': source,\n\t\t\t'layout': {},\n\t\t\t'paint': {\n\t\t\t\t'fill-color': '#a6611a',\n\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t'fill-outline-color': 'black'\n\t\t\t},\n\t\t\tfilter: ['all',\n\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t]\n\t\t});\n\n\t\t// Point layer\n\t\tthis.map.addLayer({\n\t\t\t\"id\": source + \"-points\",\n\t\t\t\"type\": \"circle\",\n\t\t\t\"source\": source,\n\t\t\t\"paint\": {\n\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\"circle-color\": '#a6611a',\n\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t},\n\t\t\tfilter: ['all',\n\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t]\n\t\t});\n\n\t\t//\t\t// Selected layers\n\t\t//\t\tthis.map.addLayer({\n\t\t//\t\t\t\"id\": source + \"-points-selected\",\n\t\t//\t\t\t\"type\": \"circle\",\n\t\t//\t\t\t\"source\": source,\n\t\t//\t\t\t\"paint\": {\n\t\t//\t\t\t\t\"circle-radius\": 10,\n\t\t//\t\t\t\t\"circle-color\": '#a6611a',\n\t\t//\t\t\t\t\"circle-stroke-width\": 2,\n\t\t//\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t//\t\t\t},\n\t\t//\t\t\tfilter: ['all',\n\t\t//\t\t\t\t[\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n\t\t//\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t//\t\t\t]\n\t\t//\t\t});\n\t\t//\n\t\t//\t\tthis.map.addLayer({\n\t\t//\t\t\t'id': source + '-polygon-selected',\n\t\t//\t\t\t'type': 'fill',\n\t\t//\t\t\t'source': source,\n\t\t//\t\t\t'layout': {},\n\t\t//\t\t\t'paint': {\n\t\t//\t\t\t\t'fill-color': '#a6611a',\n\t\t//\t\t\t\t'fill-opacity': 0.8,\n\t\t//\t\t\t\t'fill-outline-color': 'black'\n\t\t//\t\t\t},\n\t\t//\t\t\tfilter: ['all',\n\t\t//\t\t\t\t[\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n\t\t//\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t//\t\t\t]\n\t\t//\t\t});\n\n\t\t// Label layer\n\t\tthis.map.addLayer({\n\t\t\t\"id\": source + \"-label\",\n\t\t\t\"source\": source,\n\t\t\t\"type\": \"symbol\",\n\t\t\t\"paint\": {\n\t\t\t\t\"text-color\": \"black\",\n\t\t\t\t\"text-halo-color\": \"#fff\",\n\t\t\t\t\"text-halo-width\": 2\n\t\t\t},\n\t\t\t\"layout\": {\n\t\t\t\t\"text-field\": ['get', 'localizedValue', ['get', 'displayLabel']],\n\t\t\t\t\"text-font\": [\"NotoSansRegular\"],\n\t\t\t\t\"text-offset\": [0, 0.6],\n\t\t\t\t\"text-anchor\": \"top\",\n\t\t\t\t\"text-size\": 12,\n\t\t\t}\n\t\t});\n\n\t\tthis.vectorLayers.forEach(cLayer => {\n\t\t\tthis.addVectorLayer(cLayer);\n\t\t});\n\t}\n\n\thandleBasemapStyle(layer: any): void {\n\t\t// this.map.setStyle('mapbox://styles/mapbox/' + layer.id);\n\n\t\tthis.baseLayers.forEach(baseLayer => {\n\t\t\tbaseLayer.selected = false;\n\t\t});\n\n\t\tlayer.selected = true;\n\n\t\tthis.map.setStyle({\n\t\t\t\"version\": 8,\n\t\t\t\"name\": layer.name,\n\t\t\t\"metadata\": {\n\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t},\n\t\t\t\"sources\": {\n\t\t\t\t\"mapbox\": {\n\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"sprite\": layer.sprite,\n\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\"layers\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\"source\": 'mapbox',\n\t\t\t\t\t// \"source-layer\": \"mapbox_satellite_full\"\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tsearch(): void {\n\t\tthis.mapService.search(this.text, this.dateStr).then(data => {\n\t\t\t(<any>this.map.getSource('children')).setData(data);\n\n\n\t\t\tthis.setData(data.features);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\n\tzoomToFeature(node: GeoObject, event: MouseEvent): void {\n\t\tif (event != null) {\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\tthis.preventSingleClick = false;\n\t\tconst delay = 200;\n\n\t\tthis.timer = setTimeout(() => {\n\t\t\tif (!this.preventSingleClick) {\n\t\t\t\tif (node.geometry != null) {\n\t\t\t\t\tconst bounds = bbox(node as AllGeoJSON) as LngLatBoundsLike;\n\n\t\t\t\t\tthis.map.fitBounds(bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}, delay);\n\t}\n\n\tselect(node: GeoObject, event: MouseEvent): void {\n\n\t\tif (event != null) {\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\tthis.service.getGeoObjectTypes([node.properties.type], null).then(types => {\n\t\t\tthis.type = types[0];\n\t\t\tthis.current = node;\n\t\t\tthis.mode = this.MODE.VIEW;\n\n\t\t\t//\t\t\tconst code = this.current.properties.code;\n\t\t\t//\n\t\t\t//\t\t\t// Update the filter properties\n\t\t\t//\t\t\tthis.map.setFilter('children-points-selected', ['all',\n\t\t\t//\t\t\t\t[\"==\", ['get', 'code'], code != null ? code : ''],\n\t\t\t//\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t//\t\t\t]);\n\t\t\t//\n\t\t\t//\t\t\tthis.map.setFilter('children-polygon-selected', ['all',\n\t\t\t//\t\t\t\t[\"==\", ['get', 'code'], code != null ? code : ''],\n\t\t\t//\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t//\t\t\t]);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsetData(data: GeoObject[]): void {\n\t\tthis.data = data;\n\t}\n\n\tonContextLayerChange(layer: ContextLayer): void {\n\n\t\tif (layer.active) {\n\t\t\tthis.addVectorLayer(layer.oid);\n\t\t}\n\t\telse {\n\t\t\tthis.removeVectorLayer(layer.oid);\n\t\t}\n\n\t}\n\n\tremoveVectorLayer(source: string): void {\n\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index !== -1) {\n\t\t\tthis.map.removeLayer(source + \"-points\");\n\t\t\tthis.map.removeLayer(source + \"-polygon\");\n\t\t\tthis.map.removeLayer(source + \"-label\");\n\t\t\tthis.map.removeSource(source);\n\n\t\t\tthis.vectorLayers.splice(index, 1);\n\t\t}\n\n\t}\n\n\taddVectorLayer(source: string): void {\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index === -1) {\n\t\t\tconst prevLayer = 'children-polygon';\n\n\t\t\tvar protocol = window.location.protocol;\n\t\t\tvar host = window.location.host;\n\n\t\t\tthis.map.addSource(source, {\n\t\t\t\ttype: 'vector',\n\t\t\t\ttiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n\t\t\t});\n\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-points\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\"circle-color\": '#800000',\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Polygon layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t'id': source + '-polygon',\n\t\t\t\t'type': 'fill',\n\t\t\t\t'source': source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t'layout': {},\n\t\t\t\t'paint': {\n\t\t\t\t\t'fill-color': '#80cdc1',\n\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\n\t\t\t// Label layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-label\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"type\": \"symbol\",\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"text-color\": \"black\",\n\t\t\t\t\t\"text-halo-color\": \"#fff\",\n\t\t\t\t\t\"text-halo-width\": 2\n\t\t\t\t},\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"text-field\": [\"case\",\n\t\t\t\t\t\t[\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n\t\t\t\t\t\t[\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n\t\t\t\t\t\t[\"string\", [\"get\", \"displayLabel\"]]\n\t\t\t\t\t],\n\t\t\t\t\t\"text-font\": [\"NotoSansRegular\"],\n\t\t\t\t\t\"text-offset\": [0, 0.6],\n\t\t\t\t\t\"text-anchor\": \"top\",\n\t\t\t\t\t\"text-size\": 12,\n\t\t\t\t}\n\t\t\t}, prevLayer);\n\n\n\t\t\tthis.vectorLayers.push(source);\n\t\t}\n\t}\n\n\n\t//\n\t// Editing of features\n\t//\n\tclearGeometryEditing(): void {\n\t\tif (this.editingControl != null) {\n\t\t\tthis.editingControl.deleteAll();\n\t\t\tthis.map.removeControl(this.editingControl);\n\t\t}\n\n\t\tthis.editingControl = null;\n\t}\n\n\n\tonGeometryEdit(vot: ValueOverTime): void {\n\n\t\tthis.clearGeometryEditing();\n\n\t\tthis.vot = vot;\n\n\t\tthis.addEditLayers(vot);\n\t}\n\n\taddEditLayers(vot: ValueOverTime): void {\n\t\tif (vot != null) {\n\t\t\t//\t\t\tthis.renderGeometryAsLayer(this.calculatedPreObject.geometry.value, \"pre\", \"#EFA22E\");\n\n\t\t\tthis.enableEditing(vot);\n\t\t}\n\t}\n\n\tenableEditing(vot: ValueOverTime): void {\n\t\tif (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (vot.value != null) {\n\t\t\tthis.editingControl.add(vot.value);\n\t\t}\n\t}\n\n\tonMapSave(): void {\n\t\tconst geometry = this.getDrawGeometry();\n\n\t\tthis.editingControl.deleteAll();\n\t\tthis.map.removeControl(this.editingControl);\n\t\t//\t\tthis.geometryChange.next(geometry);\n\n\t\tthis.vot.value = geometry;\n\t\tthis.vot = null;\n\n\t\tthis.editingControl = null;\n\t}\n\n\tgetDrawGeometry(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.type.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div id=\"navigator-left-sidebar\" class=\"col-md-3 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n  <!--             <div *ngIf=\"current != null && type != null\"> -->\n  <!--               <i class=\"fa fa-arrow-right clickable\" aria-hidden=\"true\" (click)=\"this.mode = this.MODE.VIEW\"></i>               -->\n  <!--             </div> -->\n  \n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n<!--                     <label> -->\n<!--                       <localize key=\"explorer.date.label\"></localize> -->\n<!--                     </label> -->\n                    <input style=\"width: 100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" [disabled]=\"mode !== MODE.SEARCH\"/>\n                  </div>\n                </div>\n              </div>\n  \n              <!-- Search bar -->\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"search()\" [(ngModel)]=\"text\" name=\"text\" [disabled]=\"mode !== MODE.SEARCH\">\n                      <span class=\"input-group-btn\">\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"search()\" [disabled]=\"mode !== MODE.SEARCH\">\n                          <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span> \n<!--                           <localize key=\"explorer.search.button.message\"></localize> -->\n                        </button>\n                      </span>\n                    </div>\n                       <div *ngIf=\"mode === MODE.VIEW && current != null\" style=\"padding: 20px 0;\">\n              <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>              \n            </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <div class=\"row\"  *ngIf=\"mode === MODE.SEARCH\">\n            <div class=\"col-md-12\">\n              <div id=\"hierarchy-tree-container\" class=\"location-management-widget-section location-management-list-container\">\n                    <div class=\"list-group\">\n  \n                      <div *ngFor=\"let node of data; let i = index\" class=\"list-group-item\">\n                        <!-- Single column card -->\n                        <div class=\"card card-default\" (click)=\"select(node, $event)\">\n                          <div class=\"card-body\">\n                            <i class=\"fa fa-map-marker clickable\" style=\"float:right;font-size:25px;\" aria-hidden=\"true\" (click)=\"zoomToFeature(node, $event)\" [title]=\"'explorer.zoom.label' | localize\"></i>\n                            <h4 class=\"clickable\" style=\"word-break: break-all;\" title=\"View Geo-Object details\">{{node.properties.code}} - {{node.properties.displayLabel.localizedValue}}</h4>\n                          </div>\n                        </div>\n                      </div>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>    \n        <div *ngIf=\"mode === MODE.VIEW && current != null\" class=\"row\">\n          <div class=\"col-md-12\">\n<!--             <div style=\"padding: 20px 0;\"> -->\n<!--               <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>               -->\n<!--             </div> -->\n            <feature-panel\n              [type]=\"type\"\n              [code]=\"current.properties.code\"              \n              [forDate]=\"forDate\"\n              [readOnly]=\"!current.properties.writable\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"search()\"\n              (modeChange)=\"onModeChange($event)\"              \n            ></feature-panel>\n          </div>\n        </div>            \n      </div>\n\n      <div class=\"col-md-9\" id=\"site-explorer-map\">\n        <div class=\"row\">\n          \n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\"></layer-panel>\n          </article>\n\n          <div id=\"map\" class=\"map-view-port\"></div>\n          <simple-edit-control [visible]=\"editingControl != null\" [save]=\"true\" (editEmitter)=\"onMapSave()\" #simpleEditControl></simple-edit-control>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { MasterList, ContextLayer, ContextLayerGroup } from '@registry/model/registry';\n\n\n@Component( {\n    selector: 'context-layer-modal',\n    templateUrl: './context-layer-modal.component.html',\n    styleUrls: ['./location-manager.css']\n} )\nexport class ContextLayerModalComponent {\n\n    contextLayerGroups: ContextLayerGroup[];\n\n\n    /*\n     * Called on confirm\n     */\n    public onSubmit: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onSubmit = new Subject();\n    }\n\n    groupHasContextLayers(group:string): boolean {\n\t\tlet hasCLayers = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif(cLayerGroup.oid === group && cLayerGroup.contextLayers.length > 0){\n\t\t\t\thasCLayers = true;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn hasCLayers;\n\t}\n\n    confirm(): void {\n        this.onSubmit.next( this.contextLayerGroups );\n        this.bsModalRef.hide();\n    }\n\n}\n","<div class=\"modal-body\">\n    <div class=\"heading\">\n        <h2>\n            <localize key=\"explorer.add.context.layers.modal.title\"></localize>\n        </h2>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"list-group\">\n                        <div *ngFor=\"let cLayerGroup of contextLayerGroups;\" >\n                            <div *ngIf=\"groupHasContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n                                <h4>{{ cLayerGroup.displayLabel }}</h4>\n                                <div class=\"list-group\">\n                                    <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                                        <input type=\"checkbox\" [checked]=\"cLayer.enabled\" (change)=\"cLayer.enabled = !cLayer.enabled\" style=\"margin-left: 10px;\"> {{ cLayer.displayLabel }}\n                                        \n                                        <!-- <boolean-field [(value)]=\"cLayer.enabled\" [label]=\"cLayer.displayLabel\"></boolean-field> -->\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input, Output, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, PRESENT } from '@registry/model/registry';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\nimport * as moment from 'moment';\n\n\n@Component({\n\tselector: 'geometry-panel',\n\ttemplateUrl: './geometry-panel.component.html',\n\tstyleUrls: [],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition('* => void', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t])\n\t\t\t])\n\t\t]]\n})\nexport class GeometryPanelComponent implements OnInit {\n\tmessage: string = null;\n\n\treadonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Output() onEdit = new EventEmitter<ValueOverTime>()\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\t\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\thasDuplicateDate: boolean = false;\n\n\tconstructor(private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\n\tonDateChange(event: any, vAttribute: ValueOverTime): any {\n\n\t\t//        console.log( event.currentTarget.value );\n\t\t//\n\t\t//        let dt = new Date( event.currentTarget.value );\n\t\t//let dt = new Date(event);\n\n\t\tlet vAttributes = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\t//        vAttribute.startDate = Utils.formatDateString( dt );\n\n\t\tthis.snapDates(vAttributes);\n\n\t\t//        this.changeDetectorRef.detectChanges();\n\t}\n\n\tsnapDates(votArr: ValueOverTime[]): void {\n\t\tvar dateOffset = (24 * 60 * 60 * 1000) * 1; //1 days\n\n\t\tthis.hasDuplicateDate = false;\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\n\t\tfor (let i = 1; i < votArr.length; i++) {\n\t\t\tlet prev = votArr[i - 1];\n\t\t\tlet current = votArr[i];\n\n\t\t\tif (current.startDate) {\n\t\t\t\tprev.endDate = Utils.formatDateString(new Date(new Date(current.startDate).getTime() - dateOffset));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprev.endDate = PRESENT;\n\t\t\t}\n\n\t\t\tif (prev.startDate === current.startDate) {\n\t\t\t\tthis.hasDuplicateDate = true;\n\t\t\t}\n\t\t}\n\n\t\tif (votArr.length > 0) {\n\t\t\tvotArr[votArr.length - 1].endDate = PRESENT;\n\t\t}\n\t}\n\n\tedit(vot: ValueOverTime): void {\n\t\tthis.onEdit.emit(vot);\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\tvot.value.type = \"Polygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\tvot.value.type = \"Point\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\tvot.value.type = \"MultiPoint\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\tvot.value.type = \"Line\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\tvot.value.type = \"MultiLine\";\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tthis.snapDates(votArr);\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes['geometry'];\n\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tval.values.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.snapDates(val.values);\n\t}\n\t\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n  \t\tvar format = localeData.longDateFormat('L');\n  \t\treturn moment().format(format);\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n\n                <ul class=\"list-group\">\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                    <table class=\"table table-striped\">\n\n                      <tbody class=\"attribute-element-wrapper\">\n                        <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\">\n                          <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                        </p>\n\n                        <tr *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\">\n                          <td>\n                            <table>\n                              <tr class=\"attribute-value-row\">\n                                <td colspan=\"2\">\n                                  <button class=\"btn btn-primary\" (click)=\"edit(vAttribute)\" role=\"button\">\n                                    <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                                  </button>\n                                </td>\n                              </tr>\n                              <tr class=\"attribute-date-input-row\">\n                                <td>\n                                  <h5>\n                                    <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                  </h5> <input type=\"date\" name=\"startDate-{{i}}\" [(ngModel)]=\"vAttribute.startDate\" (blur)=\"onDateChange($event, vAttribute)\" required>\n                                </td>\n                                <td>\n                                  <h5>\n                                    <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                  </h5>\n                                  <input *ngIf=\"vAttribute.endDate !== '5000-12-31'\" type=\"date\" [name]=\"'endDate_' + i\" [(ngModel)]=\"vAttribute.endDate\" disabled>\n                                  <p *ngIf=\"vAttribute.endDate === '5000-12-31'\" style=\"font-size: 14px;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n                                </td>\n                              </tr>\n                            </table>\n                          </td>\n                          <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                            <i class=\"fa fa-times\"></i>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </li>\n\n                  <li class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"io.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!versionsform.valid\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Map, NavigationControl, AttributionControl, LngLatBounds, IControl } from 'mapbox-gl';\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nimport { ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { MapService, RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorModalComponent, ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'dataset-location-manager',\n\ttemplateUrl: './dataset-location-manager.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class DatasetLocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY'\n\t}\n\n\ttoolsIconHover: boolean = false;\n\n\tdatasetId: string;\n\n\ttypeCode: string;\n\n\treadOnly: boolean = false;\n\n\teditOnly: boolean = false;\n\n\tisEdit: boolean = false;\n\n\tdate: string;\n\n\tcode: string;\n\n\ttype: GeoObjectType;\n\n\tbsModalRef: BsModalRef;\n\n    /* \n     * mapbox-gl map\n     */\n\tmap: Map;\n\n\tvectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'Satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n\t\t// {\n\t\t// \tname: 'Streets',\n\t\t// \tlabel: 'Streets',\n\t\t// \tid: 'streets-v9',\n\t\t// \tsprite: 'mapbox://sprites/mapbox/basic-v9',\n\t\t// \turl: 'mapbox://mapbox.basic-v9'\n\t\t// }\n\t];\n\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\tforDate: Date = new Date();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\teditingControl: any;\n\n\tgeometryChange: Subject<any> = new Subject();\n\n\tvot: ValueOverTime;\n\n\tconstructor(private mapService: MapService, public service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute, authService: AuthService) {\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.mapService.init();\n\n\t\tthis.datasetId = this.route.snapshot.params[\"datasetId\"];\n\t\tthis.typeCode = this.route.snapshot.params[\"typeCode\"];\n\t\tthis.date = this.route.snapshot.params[\"date\"];\n\t\tthis.readOnly = this.route.snapshot.params[\"readOnly\"] === 'true';\n\t\tthis.editOnly = this.route.snapshot.params[\"editOnly\"] === 'true';\n\t\t\n\t\tif (this.route.snapshot.params[\"code\"] != null) {\n\t\t\tthis.code = this.route.snapshot.params[\"code\"];\n\t\t}\n\t\t\n\t\tthis.forDate = new Date(Date.parse(this.date));\n\n\t\tthis.service.getGeoObjectTypes([this.typeCode], null).then(types => {\n\t\t\tthis.type = types[0];\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tngAfterViewInit() {\n\n\t\tconst layer = this.baseLayers[0];\n\n\t\tthis.map = new Map({\n\t\t\tcontainer: 'dataset-map',\n\t\t\tstyle: {\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\t\"source\": 'mapbox',\n\t\t\t\t\t\t// \"source-layer\": \"mapbox_satellite_full\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tzoom: 2,\n\t\t\tattributionControl: false,\n\t\t\tcenter: [-78.880453, 42.897852]\n\t\t});\n\n\t\tthis.map.on('load', () => {\n\t\t\tthis.initMap();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tonModeChange(value: boolean): void {\n\t\tthis.isEdit = value;\n\t}\n\n\tinitMap(): void {\n\t\tthis.service.getDatasetBounds(this.datasetId).then(bounds => {\n\t\t\tlet llb = new LngLatBounds([bounds[0], bounds[1]], [bounds[2], bounds[3]]);\n\n\t\t\tthis.map.fitBounds(llb, { padding: 50 });\n\t\t})\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t});\n\n\t\tthis.addLayers();\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n\t\tthis.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n\t\tthis.map.on('click', this.datasetId + '-points', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\t\tthis.map.on('click', this.datasetId + '-polygon', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\n\t\t//\t\tthis.map.on('draw.selectionchange', (e: any) => {\n\t\t//\t\t\tif (this.vot != null && e.features.length === 0) {\n\t\t//\t\t\t\tconst geometry = this.getDrawGeometry();\n\t\t//\t\t\t\tthis.vot.value = geometry;\n\t\t//\t\t\t}\n\t\t//\t\t});\n\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\taddLayers(): void {\n\n\t\tthis.vectorLayers.forEach(vLayer => {\n\t\t\tthis.addVectorLayer(vLayer);\n\t\t});\n\t}\n\n\thandleBasemapStyle(layer: any): void {\n\t\t// this.map.setStyle('mapbox://styles/mapbox/' + layer.id);\n\n\t\tthis.baseLayers.forEach(baseLayer => {\n\t\t\tbaseLayer.selected = false;\n\t\t});\n\n\t\tlayer.selected = true;\n\n\t\tthis.map.setStyle({\n\t\t\t\"version\": 8,\n\t\t\t\"name\": layer.name,\n\t\t\t\"metadata\": {\n\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t},\n\t\t\t\"sources\": {\n\t\t\t\t\"mapbox\": {\n\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"sprite\": layer.sprite,\n\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\"layers\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\"source\": 'mapbox',\n\t\t\t\t\t// \"source-layer\": \"mapbox_satellite_full\"\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tonContextLayerChange(layer: ContextLayer): void {\n\n\t\tif (layer.active) {\n\t\t\tthis.addVectorLayer(layer.oid);\n\t\t}\n\t\telse {\n\t\t\tthis.removeVectorLayer(layer.oid);\n\t\t}\n\n\t}\n\n\tremoveVectorLayer(source: string): void {\n\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index !== -1) {\n\t\t\tthis.map.removeLayer(source + \"-points\");\n\t\t\tthis.map.removeLayer(source + \"-polygon\");\n\t\t\tthis.map.removeLayer(source + \"-points-selected\");\n\t\t\tthis.map.removeLayer(source + \"-polygon-selected\");\n\t\t\tthis.map.removeLayer(source + \"-label\");\n\t\t\tthis.map.removeSource(source);\n\n\t\t\tthis.vectorLayers.splice(index, 1);\n\t\t}\n\n\t}\n\n\taddVectorLayer(source: string): void {\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index === -1) {\n\t\t\tconst prevLayer = (source !== this.datasetId) ? this.datasetId + '-points' : null;\n\n\t\t\tvar protocol = window.location.protocol;\n\t\t\tvar host = window.location.host;\n\n\t\t\tthis.map.addSource(source, {\n\t\t\t\ttype: 'vector',\n\t\t\t\ttiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n\t\t\t});\n\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-points\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\"circle-color\": '#800000',\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Polygon layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t'id': source + '-polygon',\n\t\t\t\t'type': 'fill',\n\t\t\t\t'source': source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t'layout': {},\n\t\t\t\t'paint': {\n\t\t\t\t\t'fill-color': '#80cdc1',\n\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Selected object layers\n\t\t\tif (source === this.datasetId) {\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t\"id\": source + \"-points-selected\",\n\t\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\t\"source\": source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t\"paint\": {\n\t\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\t\"circle-color\": '#a6611a',\n\t\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t'id': source + '-polygon-selected',\n\t\t\t\t\t'type': 'fill',\n\t\t\t\t\t'source': source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t'layout': {},\n\t\t\t\t\t'paint': {\n\t\t\t\t\t\t'fill-color': '#a6611a',\n\t\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\t\t\t}\n\n\t\t\t// Label layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-label\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"type\": \"symbol\",\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"text-color\": \"black\",\n\t\t\t\t\t\"text-halo-color\": \"#fff\",\n\t\t\t\t\t\"text-halo-width\": 2\n\t\t\t\t},\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"text-field\": [\"case\",\n\t\t\t\t\t\t[\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n\t\t\t\t\t\t[\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n\t\t\t\t\t\t[\"string\", [\"get\", \"displayLabel\"]]\n\t\t\t\t\t],\n\t\t\t\t\t\"text-font\": [\"NotoSansRegular\"],\n\t\t\t\t\t\"text-offset\": [0, 0.6],\n\t\t\t\t\t\"text-anchor\": \"top\",\n\t\t\t\t\t\"text-size\": 12,\n\t\t\t\t}\n\t\t\t}, prevLayer);\n\n\n\t\t\tthis.vectorLayers.push(source);\n\t\t}\n\t}\n\n\n\t/*\n\t * EDIT FUNCTIONALITY\n\t */\n\n\tclearGeometryEditing(): void {\n\t\tif (this.editingControl != null) {\n\t\t\tthis.editingControl.deleteAll();\n\t\t\tthis.map.removeControl(this.editingControl);\n\t\t}\n\n\t\tthis.editingControl = null;\n\t}\n\n\tonFeatureChange(): void {\n\t\t// Refresh the layer\n\t\tthis.removeVectorLayer(this.datasetId);\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\thandleMapClickEvent(event: any): void {\n\t\tif (!this.isEdit && event.features != null && event.features.length > 0) {\n\t\t\tconst feature = event.features[0];\n\n\t\t\tif (feature.properties.code != null && this.code !== feature.properties.code) {\n\t\t\t\tthis.code = feature.properties.code;\n\n\t\t\t\t// Update the filter properties\n\t\t\t\tthis.map.setFilter(this.datasetId + '-points-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]);\n\n\t\t\t\tthis.map.setFilter(this.datasetId + '-polygon-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n\n\tonMapSave(): void {\n\t\tconst geometry = this.getDrawGeometry();\n\n\t\tthis.editingControl.deleteAll();\n\t\tthis.map.removeControl(this.editingControl);\n\t\tthis.geometryChange.next(geometry);\n\n\t\tthis.vot.value = geometry;\n\t\tthis.vot = null;\n\n\t\tthis.editingControl = null;\n\t}\n\n\tonGeometryEdit(vot: ValueOverTime): void {\n\t\tthis.clearGeometryEditing();\n\n\t\tthis.vot = vot;\n\n\t\tthis.addEditLayers(vot);\n\t}\n\n\t//\tonMapEdit(): void {\n\t//\t\t// Enable editing\n\t//\t\tif (this.editingControl == null) {\n\t//\t\t\tthis.addEditLayers();\n\t//\t\t}\n\t//\t}\n\n\taddEditLayers(vot: ValueOverTime): void {\n\t\tif (vot != null) {\n\t\t\tthis.enableEditing(vot);\n\t\t}\n\t}\n\n\tenableEditing(vot: ValueOverTime): void {\n\t\tif (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (vot.value != null) {\n\t\t\tthis.editingControl.add(vot.value);\n\t\t}\n\t}\n\n\n\tgetDrawGeometry(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.type.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tonNewGeoObject(): void {\n\t\tthis.code = '__NEW__';\n\t}\n\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div *ngIf=\"type != null && code != null\" id=\"navigator-left-sidebar\" class=\"col-md-3 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            \n            <h3></h3>\n            \n            <feature-panel\n              [type]=\"type\"\n              [code]=\"code\"              \n              [forDate]=\"forDate\"\n              [datasetId]=\"datasetId\"\n              [readOnly]=\"readOnly\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"onFeatureChange($event)\"              \n              (modeChange)=\"onModeChange($event)\"\n            ></feature-panel>\n          </div>\n        </div>\n      </div>\n\n      <div [ngClass]=\"{'col-md-9':code != null, 'col-md-12':code == null}\" id=\"site-explorer-map\">\n        <div class=\"row\">\n\n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\" [filter]=\"[datasetId]\"></layer-panel>\n            \n            <div class=\"layer-toggle\" style=\"margin-top:10px;\" (mouseenter)=\"toolsIconHover = true\" (mouseleave)=\"toolsIconHover = false\">\n             \n              <i class=\"fa fa-plus-square\" *ngIf=\"!toolsIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n              <div *ngIf=\"toolsIconHover\" style=\"margin-top:10px;\">\n            \n                <span *ngIf=\"!editOnly\" (click)=\"onNewGeoObject()\" role=\"button\">\n                  <button class=\"btn btn-primary\">\n                    <localize key=\"masterlist.newGeoObject\"></localize>              \n                  </button>\n                </span>\n              </div>\n            \n            </div>\n          </article>\n\n          <div id=\"dataset-map\" class=\"map-view-port\"></div>     \n          <simple-edit-control [visible]=\"editingControl != null\" [save]=\"true\" (editEmitter)=\"onMapSave()\"  #simpleEditControl></simple-edit-control>\n          \n<!--           <span *ngIf=\"!readOnly\" (click)=\"onNewGeoObject()\" style=\"position: absolute; bottom: 70px; right: 10px\" role=\"button\"> -->\n<!--             <button class=\"btn btn-primary\"> -->\n<!--               <localize key=\"masterlist.newGeoObject\"></localize>               -->\n<!--             </button> -->\n<!--           </span> -->\n               \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import * as d3 from 'd3';\nimport { svgPoint } from './svg-util';\n\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\nimport { SvgHierarchyType } from './svg-hierarchy-type';\nimport { calculateTextWidth } from './svg-util';\nimport { HierarchyComponent, RELATED_NODE_BANNER_COLOR } from '../hierarchy.component';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\nexport class SvgHierarchyNode {\n\n\tprivate hierarchyComponent: HierarchyComponent;\n\n\tprivate svgHierarchyType: SvgHierarchyType;\n\n\tprivate geoObjectType: GeoObjectType;\n\n\tprivate treeNode: any;\n\n\t/*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tconstructor(hierarchyComponent: HierarchyComponent, svgHierarchyType: SvgHierarchyType, geoObjectType: GeoObjectType, treeNode: any,\n\t\tpublic localizeService: LocalizationService, public modalService: BsModalService) {\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.svgHierarchyType = svgHierarchyType;\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.treeNode = treeNode;\n\t}\n\n\tgetCode(): string {\n\t\treturn this.geoObjectType.code;\n\t}\n\n\tsetPos(x: number, y: number, dragging: boolean) {\n\t\tlet bbox = this.getBbox();\n\n\t\t// Move the GeoObjectType with the pointer when they move their mouse\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-header-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y - SvgHierarchyType.gotRectH / 2 + 2);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-label-text[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + 5)\n\t\t\t.attr(\"y\", y + 1);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-relatedhiers-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + bbox.width - 20)\n\t\t\t.attr(\"y\", y + 17);\n\n\n\t\t// Move inherit and uninherit buttons with the node they're moving\n\n\t\tlet inheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (inheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 60);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet inheritBbox = inheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - inheritBbox.x) + \" \" + (heritY - inheritBbox.y) + \")\");\n\t\t}\n\n\t\tlet uninheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (uninheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 71);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet uninheritBbox = uninheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - uninheritBbox.x) + \" \" + (heritY - uninheritBbox.y) + \")\");\n\t\t}\n\t}\n\n\tgetPos() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) };\n\t}\n\n\tgetBbox() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) - 3, width: parseInt(select.attr(\"width\")), height: parseInt(select.attr(\"height\")) + 3 };\n\t}\n\n\tgetTreeNode() {\n\t\treturn this.treeNode;\n\t}\n\t\n\thideRelatedHierarchy(): string {\n\t  let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n    if (existingSecondary.node() != null) {\n      existingSecondary.remove();\n      this.hierarchyComponent.calculateSvgViewBox();\n      \n      let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n      return existingSecondaryCode;\n    }\n\t}\n\n\trenderRelatedHierarchiesMenu() {\n\t\tlet that = this;\n\t\tlet existingMenu = d3.select(\".g-context-menu\");\n\n\t\tif (existingMenu.node() == null) {\n\t\t\t//let parent = d3.select('g.g-hierarchy-tree[data-code=\"' + this.svgHierarchyType.hierarchyType.code + '\"]');\n\t\t\tlet parent = d3.select('#svg');\n\n\t\t\tlet contextMenuGroup = parent.append(\"g\").classed(\"g-context-menu\", true);\n\n\t\t\tlet relatedHierarchies = this.svgHierarchyType.getRelatedHierarchies(this.getCode());\n\n\t\t\tlet bbox = this.getBbox();\n\t\t\tlet x = bbox.x + bbox.width - 5;\n\t\t\tlet y = bbox.y + bbox.height / 2 - 8;\n\t\t\tconst height = 20;\n\t\t\tconst fontSize = 8;\n\t\t\tconst widthPadding = 10;\n\t\t\tconst borderColor = \"#aaaaaa\";\n\t\t\tconst dividerColor = \"#e4e4e4\";\n\t\t\tconst fontFamily = \"sans-serif\";\n\t\t\tconst titleFontSize = 9;\n\t\t\t\n\t\t\tconst titleLabel = this.hierarchyComponent.localize(\"hierarchy.content.relatedHierarchies\");\n\t\t\tconst actionsTitle = this.hierarchyComponent.localize(\"hierarchy.content.actionsTitle\");\n\t\t\tconst removeFromHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.removeFromHierarchy\");\n\t\t\tconst noRelatedHierLabel = this.hierarchyComponent.localize(\"hierarchy.content.noRelatedHierarchies\");\n\t\t\tconst hideRelatedHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.hideRelatedHierarchy\");\n\t\t\tconst uninheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.uninherit\");\n\t\t\tconst inheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.inherit\");\n\t\t\t\n      let isSecondaryHierarchyRendered = (d3.select('.g-hierarchy[data-primary=\"false\"]').node() != null);\n      \n      let numActions = (isSecondaryHierarchyRendered) ? 2 : 1;\n\n\t\t\t// Calculate the width of our title\n\t\t\tlet width = calculateTextWidth(titleLabel, titleFontSize);\n\t\t\t\n\t\t\t// Calculate with of remove text\n\t\t\tlet removeWidth = calculateTextWidth(removeFromHierarchyLabel, fontSize);\n\t\t\twidth = removeWidth > width ? removeWidth : width;\n\t\t\t\n\t\t\tif (isSecondaryHierarchyRendered)\n\t\t\t{\n  \t\t\t// Calculate width of \"hide related hierarchy\" label\n        let hideRelatedWidth = calculateTextWidth(hideRelatedHierarchyLabel, fontSize);\n        width = hideRelatedWidth > width ? hideRelatedWidth : width;\n      }\n      \n      if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n        let uninheritWidth = calculateTextWidth(uninheritLabel, fontSize);\n        width = uninheritWidth > width ? uninheritWidth : width;\n        numActions++;\n      }\n      else\n      {\n        let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n        if (existingSecondary.node() != null) {\n          let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n          let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n          \n          let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService);\n          let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n          \n          if (this.treeNode.parent == null && relatedGotHasParents)\n          {\n            let inheritWidth = calculateTextWidth(inheritLabel, fontSize);\n            width = inheritWidth > width ? inheritWidth : width;\n            numActions++;\n          }\n        }\n      }\n      \n\t\t\t\n\t\t\t// Calculate the width of our context menu, which is based on how long the text inside it will be.\n\t\t\t// We don't know how long text is until we render it. So we'll need to loop over all the text and\n\t\t\t// render and destroy all of it.\n\t\t\tif (relatedHierarchies.length > 0)\n\t\t\t{\n  \t\t\trelatedHierarchies.forEach((relatedHierarchyCode: string) => {\n  \t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n  \n  \t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n  \t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n  \t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n  \t\t\t\t}\n  \n  \t\t\t\tlet textWidth = calculateTextWidth(relatedHierarchyLabel, fontSize);\n  \n  \t\t\t\tif (textWidth > width) {\n  \t\t\t\t\twidth = textWidth;\n  \t\t\t\t}\n  \t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t  let noHierLabelWidth = calculateTextWidth(noRelatedHierLabel, fontSize);\n\t\t\t  width = noHierLabelWidth > width ? noHierLabelWidth : width;\n\t\t\t}\n\n\t\t\twidth = width + widthPadding;\n\n\t\t\tlet heightAdditions: number = relatedHierarchies.length > 0 ? (numActions + 2) : (numActions + 3);\n\n\t\t\t// Background rectangle with border\n\t\t\tcontextMenuGroup.append(\"rect\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-background\", true)\n\t\t\t\t.attr(\"x\", x)\n\t\t\t\t.attr(\"y\", y)\n\t\t\t\t.attr(\"rx\", 5)\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height * (relatedHierarchies.length + heightAdditions))\n\t\t\t\t.attr(\"fill\", \"white\")\n\t\t\t\t.attr(\"stroke-width\", .5)\n\t\t\t\t.attr(\"stroke\", borderColor);\n\n\t\t\t// Related Hierarchies Title\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n\t\t\t\t.attr(\"font-size\", titleFontSize)\n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.text(titleLabel);\n\n\t\t\ty = y + height;\n\n\t\t\t// Dividing line at the bottom\n\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t.attr(\"x1\", x)\n\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t.attr(\"x2\", x + width)\n\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t.attr(\"stroke\", borderColor)\n\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t\n\t\t\tif (relatedHierarchies.length > 0) {\n\t\t\t\t// Loop over all related hierarchies and draw them as list items\n\t\t\t\tfor (let i = 0; i < relatedHierarchies.length; ++i) {\n\t\t\t\t\tlet relatedHierarchyCode = relatedHierarchies[i];\n\t\t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n\n\t\t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n\t\t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n\t\t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text that says the hierarchy's display label\n\t\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t\t.text(relatedHierarchyLabel)\n\t\t\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t\t\t.on('click', function(event, node) { that.renderSecondaryHierarchy(relatedHierarchy); });\n\n\t\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\t\tif (i < relatedHierarchies.length) {\n\t\t\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t\t\t.attr(\"stroke-width\", .5);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// Text that says \"No related Hierarchies\"\n\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t.text(noRelatedHierLabel)\n\n\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t}\n\n\t\t\t// Actions Title\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n\t\t\t\t.attr(\"font-size\", titleFontSize)\n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.text(actionsTitle);\n\n\t\t\ty = y + height;\n\n\t\t\t// Dividing line at the bottom\n\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t.attr(\"x1\", x)\n\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t.attr(\"x2\", x + width)\n\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t.attr(\"stroke\", borderColor)\n\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t.attr(\"data-remove\", \"REPLACE---gotCode\")\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t.attr(\"font-size\", fontSize) \n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.text(removeFromHierarchyLabel)\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.on('click', function (event, node) { that.removeGotFromHierarchy(); });\n\t\t  \n\t\t  y = y + height;\n\t\t  \n\t\t  // Inherit / Uninherit buttons\n\t\t  if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n        contextMenuGroup.append(\"line\")\n          .classed(\"contextmenu-relatedhiers-divider\", true)\n          .attr(\"x1\", x)\n          .attr(\"y1\", y)\n          .attr(\"x2\", x + width)\n          .attr(\"y2\", y)\n          .attr(\"stroke\", borderColor)\n          .attr(\"stroke-width\", .5);\n        \n        contextMenuGroup.append(\"text\")\n          .classed(\"contextmenu-relatedhiers-text\", true)\n          .attr(\"x\", x + widthPadding / 2)\n          .attr(\"y\", y + (height / 2) + (fontSize / 2))\n          .attr(\"font-size\", fontSize)\n          .attr(\"font-family\", fontFamily)\n          .text(uninheritLabel)\n          .style(\"cursor\", \"pointer\")\n          .on('click', function (event, node) { that.onClickUninheritHierarchy(); });\n\n        y = y + height;\n      }\n      else\n      {\n        let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n        if (existingSecondary.node() != null) {\n          let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n          let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n          \n          let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService);\n          let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n          \n          if (this.treeNode.parent == null && relatedGotHasParents)\n          {\n            contextMenuGroup.append(\"line\")\n              .classed(\"contextmenu-relatedhiers-divider\", true)\n              .attr(\"x1\", x)\n              .attr(\"y1\", y)\n              .attr(\"x2\", x + width)\n              .attr(\"y2\", y)\n              .attr(\"stroke\", borderColor)\n              .attr(\"stroke-width\", .5);\n          \n            contextMenuGroup.append(\"text\")\n              .classed(\"contextmenu-relatedhiers-text\", true)\n              .attr(\"x\", x + widthPadding / 2)\n              .attr(\"y\", y + (height / 2) + (fontSize / 2))\n              .attr(\"font-size\", fontSize)\n              .attr(\"font-family\", fontFamily)\n              .text(inheritLabel)\n              .style(\"cursor\", \"pointer\")\n              .on('click', function (event, node) { that.onClickInheritHierarchy(secondaryHierarchy); });\n    \n            y = y + height;\n          }\n        }\n      }\n\t\t\t\n      if (isSecondaryHierarchyRendered) {\n  \t\t  contextMenuGroup.append(\"line\")\n          .classed(\"contextmenu-relatedhiers-divider\", true)\n          .attr(\"x1\", x)\n          .attr(\"y1\", y)\n          .attr(\"x2\", x + width)\n          .attr(\"y2\", y)\n          .attr(\"stroke\", borderColor)\n          .attr(\"stroke-width\", .5);\n  \t\t  \n  \t\t  contextMenuGroup.append(\"text\")\n          .classed(\"contextmenu-relatedhiers-text\", true)\n          .attr(\"x\", x + widthPadding / 2)\n          .attr(\"y\", y + (height / 2) + (fontSize / 2))\n          .attr(\"font-size\", fontSize) \n          .attr(\"font-family\", fontFamily)\n          .text(hideRelatedHierarchyLabel)\n          .style(\"cursor\", \"pointer\")\n          .on('click', function (event, node) {\n            that.hideRelatedHierarchy();\n            \n            let existingMenu = d3.select(\".g-context-menu\");\n            if (existingMenu.node() != null) {\n              existingMenu.remove();\n            }\n            \n            d3.select(\".g-hierarchy-got-connector\").remove();\n          });\n      }\n      \n\t\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t\t}\n\t\telse {\n\t\t\texistingMenu.remove();\n\t\t}\n\t}\n\n\tremoveGotFromHierarchy(){\n\t\t\n\t\tlet svgGot = this.hierarchyComponent.primarySvgHierarchy.getNodeByCode(this.geoObjectType.code);\n\n\t\tlet startPoint: any = svgGot.getPos();\n\t\t// let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\n\t\t// let deltaX: number = startPoint.x - svgMousePoint.x;\n\t\t// let deltaY: number = startPoint.y - svgMousePoint.y;\n\n\t\tlet obj = this.hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tlet message = this.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n\t\tmessage = message.replace(\"{label}\", obj.label.localizedValue);\n\n\t\tthis.bsModalRef.content.message = message;\n\t\tthis.bsModalRef.content.data = obj.code;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tlet treeNode = svgGot.getTreeNode();\n\t\t\tlet parent = null;\n\t\t\tif (treeNode.parent == null) {\n\t\t\t\tparent = \"ROOT\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (treeNode.parent.data.inheritedHierarchyCode != null) {\n\t\t\t\t\tparent = \"ROOT\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent = treeNode.parent.data.geoObjectType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { console.log(err) });\n\t\t});\n\n\t\t// (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n\t\t// \tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t// });\n\t}\n\n\trenderSecondaryHierarchy(relatedHierarchy: HierarchyType) {\n\t\td3.select(\".g-context-menu\").remove();\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\n\t\tlet that = this;\n\t\tlet myBbox = this.getBbox();\n\t\tlet svg = d3.select(\"#svg\");\n\n\t\t// Remove any secondary hierarchy that may already be rendered\n\t\tif (this.hideRelatedHierarchy() === relatedHierarchy.code)\n\t\t{\n\t\t  return;\n\t\t}\n\t\t\n\t\t// Get the bounding box for our primary hierarchy\n\t\tlet primaryHierBbox = (d3.select(\".g-hierarchy[data-primary=true]\").node() as any).getBBox();\n\n\t\t// Render the secondary hierarchy\n\t\tlet svgHt: SvgHierarchyType = new SvgHierarchyType(this.hierarchyComponent, svg, relatedHierarchy, false, this.localizeService, this.modalService);\n\t\tsvgHt.render();\n\t\tlet gSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]')\n\n\t\t// Translate the secondary hierarchy to the right of the primary hierarchy\n\t\tlet gHierarchy: any = d3.select('.g-hierarchy[data-primary=\"false\"]').node();\n\t\tlet bbox = gHierarchy.getBBox();\n\t\tlet paddingLeft: number = primaryHierBbox.width + 40 + (primaryHierBbox.x - bbox.x);\n\t\tgSecondary.attr(\"transform\", \"translate(\" + paddingLeft + \" 0)\");\n\n\t\t// Draw dotted line between the shared node in the hierarchies\n\t\tlet secondaryGot = d3.select('.g-hierarchy[data-primary=false] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\t\tlet secondaryGotBbox = { x: parseInt(secondaryGot.attr(\"x\")), y: parseInt(secondaryGot.attr(\"y\")) - 3, width: parseInt(secondaryGot.attr(\"width\")), height: parseInt(secondaryGot.attr(\"height\")) + 3 };\n\t\tsecondaryGotBbox.x = secondaryGotBbox.x + paddingLeft; // Apply transformation\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\t\tlet gConnector = d3.select(\"#svg\").append(\"g\").classed(\"g-hierarchy-got-connector\", true);\n\t\tgConnector.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\n\t\t\t\t  \"d\",\n\t\t\t\t  \"M\" + (myBbox.x + myBbox.width) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"H\" + (((secondaryGotBbox.x) - (myBbox.x + myBbox.width)) / 2 + myBbox.x + myBbox.width)\n\t\t\t\t+ \"V\" + (secondaryGotBbox.y + secondaryGotBbox.height / 2)\n\t\t\t\t+ \"H\" + secondaryGotBbox.x\n\t\t\t);\n\n\t\t// Draw arrow for dotted line\n\t\tconst arrowRectD = { height: 10, width: 7 };\n\t\tlet gArrow = gConnector.append(\"g\").classed(\"g-hierarchy-got-connector-arrow\", true);\n\t\tgArrow.append(\"rect\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", myBbox.x + myBbox.width - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", myBbox.y + myBbox.height / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", \n\t\t\t\t\"M\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width + arrowRectD.width / 2 - ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Recalculate the viewbox (should probably be the last thing that happens)\n\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t}\n\n\tonClickInheritHierarchy(hierarchy: HierarchyType) {\n\t\tthis.hierarchyComponent.handleInheritHierarchy(this.svgHierarchyType.getCode(), hierarchy.code, this.getCode());\n\t}\n\n\tonClickUninheritHierarchy() {\n\t\tthis.hierarchyComponent.handleUninheritHierarchy(this.svgHierarchyType.getCode(), this.getCode());\n\t}\n\n}\n\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { TreeNode } from 'angular-tree-component';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\n\n\n@Component( {\n    selector: 'add-child-to-hierarchy-modal',\n    templateUrl: './add-child-to-hierarchy-modal.component.html',\n    styleUrls: []\n} )\nexport class AddChildToHierarchyModalComponent implements OnInit {\n\n\t /*\n     * parent id of the node being created\n     */\n    public parent: TreeNode;\n\n    public hierarchyType: HierarchyType;\n\n    public nodes: HierarchyNode[];\n\n    public allGeoObjectTypes: GeoObjectType[];\n\n    public selectedGeoObjectType: GeoObjectType;\n\n    private selectUndefinedOptionValue: any;\n\n\tprivate toRoot: boolean = false;\n\n    message: string = null;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n    public onNodeChange: Subject<HierarchyType>;\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef ) {\n    }\n\n    ngOnInit(): void {\n        this.onNodeChange = new Subject();\n    }\n    \n    onSelect(value: string): void {\n    \tthis.allGeoObjectTypes.forEach(gObj => {\n    \t\tif(gObj.code === value){\n    \t\t\tthis.selectedGeoObjectType = gObj;\n    \t\t}\n    \t})\n    }\n    \n    handleOnSubmit(): void {\n        this.message = null;\n        \n        let parent = (this.toRoot) ? \"ROOT\" : this.parent.data.geoObjectType;\n        this.hierarchyService.addChildToHierarchy( this.hierarchyType.code, parent, this.selectedGeoObjectType.code ).then( data => {\n            this.onNodeChange.next( data );\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n        \n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<form class=\"modal-form\">\n\n  <div *ngIf=\"parent != null\" class=\"modal-body\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"hierarchy.management.button.addRelationship\"></localize>\n      </h1>\n    </div>\n    <fieldset>\n\n      <div class=\"form-group\">\n\n        <select *ngIf=\"allGeoObjectTypes\" (change)=\"onSelect($event.target.value)\">\n          <option disabled hidden [value]=\"selectUndefinedOptionValue\">-- <localize\n              key=\"hierarchy.management.create.child.option.label.selectType\"></localize> --</option>\n          <!-- to filter out all geoobjecttypes that are already in hierarchies use this pip in the iterator > | geoobjecttype:nodes -->\n          <option></option>\n          <option *ngFor=\"let geoObjType of allGeoObjectTypes\" value={{geoObjType.code}}>\n            {{geoObjType.label.localizedValue}}\n          </option>\n        </select>\n\n      </div>\n\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.cancel\"></localize>\n          </span>\n        </button>\n        <button type=\"submit\" (click)=\"handleOnSubmit()\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.ok\"></localize>\n          </span>\n        </button>\n      </div>\n    </fieldset>\n  </div>\n</form>\n","import { Input, Component, OnInit, OnDestroy, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { GeoObjectOverTime, GeoObjectType } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate } from \"@shared/service\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-create-geo-object',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./crtable-detail-create-geo-object.css'],\n    encapsulation: ViewEncapsulation.None\n} )\nexport class CreateUpdateGeoObjectDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n    @Input() action: any;\n\n    preGeoObject: GeoObjectOverTime = null;\n\n    postGeoObject: GeoObjectOverTime = null;\n\n    geoObjectType: GeoObjectType = null;\n\n    readOnly: boolean = true;\n\n    @ViewChild( \"attributeEditor\" ) attributeEditor;\n\n    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\n    bsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    dateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    forDate: Date = null;\n\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private registryService: RegistryService ) {\n\n        this.forDate = new Date();\n\n        const day = this.forDate.getUTCDate();\n        this.dateStr = this.forDate.getUTCFullYear() + \"-\" + ( this.forDate.getUTCMonth() + 1 ) + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n    ngOnInit(): void {\n\n        this.postGeoObject = this.action.geoObjectJson;\n        this.geoObjectType = this.action.geoObjectType;\n\n        if ( this.isNew() ) {\n            this.preGeoObject = this.postGeoObject;\n        }\n\n        this.onSelect( this.action );\n    }\n\n    isNew(): boolean {\n        return ( this.action.actionType === \"net.geoprism.registry.action.geoobject.CreateGeoObjectAction\" );\n    }\n\n    handleDateChange(): void {\n        this.forDate = new Date( Date.parse( this.dateStr ) );\n    }\n\n    applyAction() {\n        var action = JSON.parse( JSON.stringify( this.action ) );\n        action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n        if ( this.geometryEditor != null ) {\n            action.geoObjectJson.geometry = this.geometryEditor.saveDraw().geometry;\n        }\n\n        this.changeRequestService.applyAction( action ).then( response => {\n            this.endEdit();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    onSelect( action: AbstractAction ) {\n\n        // There are multiple ways we could show a diff of an object.\n        //\n        // This line will show a diff only when a person is typing so as to show the\n        // change they are creating.\n        //\n        // The method below (getGeoObjectByCode) will compare what is in the database\n        // at that time with the change request. This will only track state compared to\n        // what is currently in the database which isn't necessarily the original change.\n        //\n        // A third option which is NOT implemented yet would store the state of a geoobject\n        // (original and target) with the change request so as to manage state at time of\n        // the change request submission.\n        //\n        // Display diff when a user is changing a value\n        // this.preGeoObject = JSON.parse(JSON.stringify(this.postGeoObject));\n\n        // Display diff of what's in the database\n        if (\n            this.action.actionType === \"net.geoprism.registry.action.geoobject.UpdateGeoObjectAction\"\n            //    && typeof this.postGeoObject.properties.createDate !== 'undefined'\n        ) {\n            this.registryService.getGeoObjectOverTime( this.postGeoObject.attributes.code, this.geoObjectType.code ).then( geoObject => {\n                this.preGeoObject = geoObject;\n\n            } ).catch(( err: HttpErrorResponse ) => {\n                console.log( \"Error\", err );\n                this.error( err );\n            } );\n        }\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    @HostListener( 'window:beforeunload' )\n    canDeactivate(): Observable<boolean> | boolean {\n        if ( !this.readOnly ) {\n            //event.preventDefault();\n            //event.returnValue = 'Are you sure?';\n            //return 'Are you sure?';\n\n            return false;\n        }\n\n        return true;\n    }\n\n    afterDeactivate( isDeactivating: boolean ) {\n        if ( isDeactivating && !this.readOnly ) {\n            this.unlockActionSync();\n        }\n    }\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.readOnly = false;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( true );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.readOnly = true;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( false );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n    // https://www.tivix.com/blog/making-promises-in-a-synchronous-manner\n    // unlockActionSync()\n    // {\n    //   console.log(\"UnlockActionSync\", \"Checkpoint 1\");\n    //\n    //   let makeMeLookSync = fn => {\n    //     console.log(\"UnlockActionSync\", \"Checkpoint 2\");\n    //\n    //     let iterator = fn();\n    //     let loop = result => {\n    //       console.log(\"UnlockActionSync\", \"Checkpoint OuterSnycLoop\", result.done, result.value);\n    //\n    //       !result.done && result.value.then(res => {\n    //         console.log(\"UnlockActionSync\", \"Checkpoint InnerSnycLoop\");\n    //         loop(iterator.next(res));\n    //       })\n    //     };\n    //\n    //     console.log(\"UnlockActionSync\", \"Checkpoint Loop Start\", iterator);\n    //     loop(iterator.next());\n    //   };\n    //\n    //   var crs = this.changeRequestService;\n    //   var actionOid = this.action.oid;\n    //\n    //   makeMeLookSync(function* () {\n    //     console.log(\"UnlockActionSync Checkpoint\", \"Start MakeMeLookSync\");\n    //\n    //     yield crs.unlockAction(actionOid).then( response => {\n    //       this.readOnly = true;\n    //     } ).catch(( err: HttpErrorResponse ) => {\n    //       this.error( err );\n    //     } );\n    //\n    //     console.log(\"UnlockActionSync Checkpoint\", \"End MakeMeLookSync\");\n    //   });\n    // }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n\n    <div class=\"heading text-center\">\n        <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n\t  </div>\n    \n    <div class=\"detail-content\">\n      <h4>\n        <localize key=\"io.geoObjectType\"></localize>: {{action.geoObjectType.code}}\n      </h4>\n    \n      <div style=\"margin: 20px 0;\">\n        <span style=\"margin-right:10px;\"><localize key=\"changeOverTime.forDate\"></localize></span>\n        <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n      </div>    \n    \n\n        <geoobject-shared-attribute-editor \n          #attributeEditor\n          *ngIf=\"preGeoObject\"\n          [readOnly]=\"true\"\n          [geoObjectType]=\"geoObjectType\"\n          [postGeoObject]=\"postGeoObject\"\n          [preGeoObject]=\"preGeoObject\"\n          [forDate]=\"forDate\"\n          [isGeometryInlined]=\"true\">\n        </geoobject-shared-attribute-editor>\n\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea [disabled]=\"readOnly\" style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\"></textarea>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.maintainerNotes\"></localize> :\n            </label>\n            <textarea [disabled]=\"readOnly\" style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.maintainerNotes\"></textarea>\n        </div>\n\n        <div class=\"button-holder\">\n          <button *ngIf=\"readOnly\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Input, Component, OnInit, OnDestroy, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\nimport { AddChildAction } from '@registry/model/crtable';\nimport { ChangeRequestService } from '@registry/service';\nimport { ComponentCanDeactivate } from \"@shared/service\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-add-remove-child',\n    templateUrl: './detail.component.html',\n    styleUrls: []\n} )\nexport class AddRemoveChildDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n    @Input() action: AddChildAction;\n\n    original: AddChildAction;\n\n    readOnly: boolean = true;\n\n\n    private bsModalRef: BsModalRef;\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService ) {\n\n    }\n\n    ngOnInit(): void {\n        this.original = Object.assign( {}, this.action );\n    }\n\n    applyAction() {\n        this.changeRequestService.applyAction( this.action ).then( response => {\n            this.original = Object.assign( {}, this.action );\n\n            this.unlockAction();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    @HostListener( 'window:beforeunload' )\n    canDeactivate(): Observable<boolean> | boolean {\n        if ( !this.readOnly ) {\n            //event.preventDefault();\n            //event.returnValue = 'Are you sure?';\n            //return 'Are you sure?';\n\n            return false;\n        }\n\n        return true;\n    }\n\n    afterDeactivate( isDeactivating: boolean ) {\n        if ( isDeactivating && !this.readOnly ) {\n            this.unlockActionSync();\n        }\n    }\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.readOnly = false;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.readOnly = true;\n\n            this.action = this.original;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n    onSelect( action: AddChildAction ) {\n        this.action = action;\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childId\" [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childTypeCode\" [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.parentid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentId\"  [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentTypeCode\"  [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.hierarchycode.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.hierarchyTypeCode\"  [disabled]=\"readOnly\">\n\n        <label class=\"detail-label\">\n            <localize key=\"change.request.status\"></localize> :\n        </label>\n        <select style=\"float:none;\" [ngClass]=\"{'status-rejected': action.approvalStatus === 'REJECTED', 'status-accepted': action.approvalStatus === 'ACCEPTED', 'status-pending': action.approvalStatus === 'PENDING'}\" [(ngModel)]=action.approvalStatus   [disabled]=\"readOnly\">\n            <option value=\"REJECTED\">\n                <localize key=\"change.request.status.rejected\"></localize>\n            </option>\n            <option value=\"ACCEPTED\">\n                <localize key=\"change.request.status.accepted\"></localize>\n            </option>\n            <option value=\"PENDING\">\n                <localize key=\"change.request.status.pending\"></localize>\n            </option>\n        </select>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\"  [disabled]=\"readOnly\"></textarea>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.maintainerNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.maintainerNotes\"  [disabled]=\"readOnly\"></textarea>\n        </div>\n        \n        <div class=\"button-holder\">\n          <button *ngIf=\"readOnly\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n        </div>\n        \n    </div>\n</div>","import { GeoObjectOverTime, HierarchyOverTime } from './registry';\n\nexport class ChangeRequest {\n\toid: string;\n\tcreatedBy: string;\n\tcreateDate: Date;\n\tapprovalStatus: string;\n\tstatusLabel?: string;\t\n\ttotal: number;\n\tpending: number;\n\tphoneNumber?: string;\n\temail?: string;\n}\n\nexport class AbstractAction {\n\tapprovalStatus: string;\n\tcreateActionDate: Date;\n\tlabel: string;\n\toid: string;\n\tactionType: string;\n\tactionLabel: string;\n\tdecisionMaker?: string;\n}\n\nexport class UpdateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class CreateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class AddChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyTypeCode: string;\n\tcontributorNotes: string;\n\tmaintainerNotes: string;\n}\n\nexport class RemoveChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyCode: string;\n}\n\nexport class GovernanceStatus {\n\tkey: string;\n\tlabel: string;\n}\n\nexport class PageEvent {\n\ttype: string;\n\tdata: any;\n}\n\nexport class SetParentAction extends AbstractAction {\n\tchildCode: string;\n\tchildTypeCode: string;\n\tjson: HierarchyOverTime[];\n}\n\n","import { Input, Component, OnInit, OnDestroy, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate } from \"@shared/service\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\nimport { ManageParentVersionsModalComponent } from '@registry/component/cascading-geo-selector/manage-parent-versions-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component({\n\n\tselector: 'set-parent-detail',\n\ttemplateUrl: './set-parent-detail.component.html',\n\tstyleUrls: [],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SetParentDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n\t@Input() action: any;\n\n\thierarchies: HierarchyOverTime[] = [];\n\treadOnly: boolean = true;\n\n\tbsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tconstructor(private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private registryService: RegistryService) {\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.hierarchies = this.action.json;\n\n\t\tthis.onSelect(this.action);\n\t}\n\n\tapplyAction() {\n\t\tvar action = JSON.parse(JSON.stringify(this.action));\n\n\t\tthis.changeRequestService.applyAction(action).then(response => {\n\t\t\tthis.endEdit();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tonSelect(action: AbstractAction) {\n\n\t}\n\n\tonManageVersions(hierarchy: HierarchyOverTime): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(hierarchy);\n\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\t\t\n\t\t\tif(index !== -1) {\n\t\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t// Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n\t@HostListener('window:beforeunload')\n\tcanDeactivate(): Observable<boolean> | boolean {\n\t\tif (!this.readOnly) {\n\t\t\t//event.preventDefault();\n\t\t\t//event.returnValue = 'Are you sure?';\n\t\t\t//return 'Are you sure?';\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tafterDeactivate(isDeactivating: boolean) {\n\t\tif (isDeactivating && !this.readOnly) {\n\t\t\tthis.unlockActionSync();\n\t\t}\n\t}\n\n\tstartEdit(): void {\n\t\tthis.lockAction();\n\t}\n\n\tpublic endEdit(): void {\n\t\tthis.unlockAction();\n\t}\n\n\tlockAction() {\n\t\tthis.changeRequestService.lockAction(this.action.oid).then(response => {\n\t\t\tthis.readOnly = false;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tunlockAction() {\n\t\tthis.changeRequestService.unlockAction(this.action.oid).then(response => {\n\t\t\tthis.readOnly = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n\tunlockActionSync() {\n\t\t$.ajax({\n\t\t\turl: acp + '/changerequest/unlockAction',\n\t\t\tmethod: \"POST\",\n\t\t\tdata: { actionId: this.action.oid },\n\t\t\tsuccess: function(a) {\n\n\t\t\t},\n\t\t\tasync: false\n\t\t});\n\t}\n\n\t// https://www.tivix.com/blog/making-promises-in-a-synchronous-manner\n\t// unlockActionSync()\n\t// {\n\t//   console.log(\"UnlockActionSync\", \"Checkpoint 1\");\n\t//\n\t//   let makeMeLookSync = fn => {\n\t//     console.log(\"UnlockActionSync\", \"Checkpoint 2\");\n\t//\n\t//     let iterator = fn();\n\t//     let loop = result => {\n\t//       console.log(\"UnlockActionSync\", \"Checkpoint OuterSnycLoop\", result.done, result.value);\n\t//\n\t//       !result.done && result.value.then(res => {\n\t//         console.log(\"UnlockActionSync\", \"Checkpoint InnerSnycLoop\");\n\t//         loop(iterator.next(res));\n\t//       })\n\t//     };\n\t//\n\t//     console.log(\"UnlockActionSync\", \"Checkpoint Loop Start\", iterator);\n\t//     loop(iterator.next());\n\t//   };\n\t//\n\t//   var crs = this.changeRequestService;\n\t//   var actionOid = this.action.oid;\n\t//\n\t//   makeMeLookSync(function* () {\n\t//     console.log(\"UnlockActionSync Checkpoint\", \"Start MakeMeLookSync\");\n\t//\n\t//     yield crs.unlockAction(actionOid).then( response => {\n\t//       this.readOnly = true;\n\t//     } ).catch(( err: HttpErrorResponse ) => {\n\t//       this.error( err );\n\t//     } );\n\t//\n\t//     console.log(\"UnlockActionSync Checkpoint\", \"End MakeMeLookSync\");\n\t//   });\n\t// }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n        <div>\n          <localize key=\"changeOverTime.forDate\"></localize>\n          <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n        </div>    \n        \n        <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"forDate\" [hierarchy]=\"hierarchy\" [readOnly]=\"true\" (onManageVersion)=\"onManageVersions($event)\"> </tree-geo-selector>\n            \n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.status\"></localize> :\n            </label>\n            <select [disabled]=\"readOnly\" style=\"float:none;\" [ngClass]=\"{'status-rejected': action.approvalStatus === 'REJECTED', 'status-accepted': action.approvalStatus === 'ACCEPTED', 'status-pending': action.approvalStatus === 'PENDING'}\" [(ngModel)]=\"action.approvalStatus\">\n                <option value=\"REJECTED\">\n                    <localize key=\"change.request.status.rejected\"></localize>\n                </option>\n                <option value=\"ACCEPTED\">\n                    <localize key=\"change.request.status.accepted\"></localize>\n                </option>\n                <option value=\"PENDING\">\n                    <localize key=\"change.request.status.pending\"></localize>\n                </option>\n            </select>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea [disabled]=\"readOnly\" style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\"></textarea>\n        </div>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.maintainerNotes\"></localize> :\n            </label>\n            <textarea [disabled]=\"readOnly\" style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.maintainerNotes\"></textarea>\n        </div>\n\n        <div class=\"button-holder\">\n          <button *ngIf=\"readOnly\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { IOService } from '@registry/service';\nimport { AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-export',\n    templateUrl: './data-export.component.html',\n    styleUrls: []\n} )\nexport class DataExportComponent implements OnInit {\n\n    /*\n     * List of geo object types from the system\n     */\n    types: { label: string, code: string }[]\n\n    /*\n     * Currently selected code\n     */\n    code: string = null;\n\n    /*\n     * List of the hierarchies this type is part of\n     */\n    hierarchies: { label: string, code: string }[] = [];\n\n    /*\n     * Currently selected hierarchy\n     */\n    hierarchy: string = null;\n\n    /*\n     * Currently selected format\n     */\n    format: string = null;\n\n\n    /*\n     * Reference to the modal current showing\n     */\n    bsModalRef: BsModalRef;\n\n\n    constructor( private service: IOService, private modalService: BsModalService, private authService: AuthService ) { }\n\n    ngOnInit(): void {\n        this.service.listGeoObjectTypes( true ).then( types => {\n        \n            //this.types = types;\n            \n            var myOrgTypes = [];\n            for (var i = 0; i < types.length; ++i)\n            {\n              if (this.authService.isOrganizationRA(types[i].orgCode))\n              {\n                myOrgTypes.push(types[i]);\n              }\n            }\n            this.types = myOrgTypes;\n\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    onChange( code: string ): void {\n\n        if ( code != null && code.length > 0 ) {\n            this.service.getHierarchiesForType( code, false ).then( hierarchies => {\n                this.hierarchies = hierarchies;\n                this.hierarchy = null;\n            } ).catch(( err: HttpErrorResponse) => {\n                this.error( err );\n            } );\n        }\n        else {\n            this.hierarchies = [];\n            this.hierarchy = null;\n        }\n\n    }\n\n    onExport(): void {\n\n        if ( this.format == 'SHAPEFILE' ) {\n            window.location.href = acp + '/shapefile/export-shapefile?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n        else if ( this.format == 'EXCEL' ) {\n            window.location.href = acp + '/excel/export-spreadsheet?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n}\n","<!-- <div class=\"new-admin-design-main\"> -->\n    <!-- <cgr-header></cgr-header> -->\n    <loading-bar></loading-bar>\n\n    <!-- <div id=\"app-container\" class=\"container\">\n        <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"io.export.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"io.export.description\"></localize>\n            </p>\n        </div> -->\n\n        <!-- <div class=\"row\">\n            <div class=\"col-md-2\"></div>\n            <div class=\"col-md-8\" *ngIf=\"types\"> -->\n                <form #form=\"ngForm\" *ngIf=\"types\">\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"code\">\n                            <localize key=\"io.geoObjectType\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" (change)=\"onChange($event.target.value)\"\n                                required>\n                                <option></option>\n                                <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\" *ngIf=\"hierarchies.length > 0\">\n                        <label class=\"col-sm-3 text-right\">\n                            <localize key=\"io.modal.hierarchy\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"hierarchy\" required>\n                                <option></option>\n                                <option *ngFor=\"let hierarchy of hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"format\">\n                            <localize key=\"io.format\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                                <option></option>\n                                <option value=\"EXCEL\">\n                                    <localize key=\"io.spreadsheet\"></localize>\n                                </option>\n                                <option value=\"SHAPEFILE\">\n                                    <localize key=\"io.shapefile\"></localize>\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-12 text-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onExport()\">\n                                <localize key=\"io.export\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            <!-- </div>\n            <div class=\"col-md-2\"></div> -->\n        <!-- </div>\n    </div>\n</div> -->\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\n@Pipe({\n  name: 'geoobjecttype',\n  pure: false\n})\nexport class GeoObjectTypePipe implements PipeTransform {\n  transform(items: GeoObjectType[], filter: HierarchyNode[]): any {\n\t  if (!items || !filter) {\n          return items;\n      }\n\t  \n\t  let unassignedGeoObjTypes:string[] = [];\n      this.buildUnassignedGeoObjTypes(filter, unassignedGeoObjTypes)\n      \n      // filter items array, items which match and return true will be\n      // kept, false will be filtered out\n      return items.filter(item => unassignedGeoObjTypes.indexOf(item.code) === -1);\n  }\n  \n  buildUnassignedGeoObjTypes(filter: HierarchyNode[], unassignedGeoObjTypes: string[]): void{\n\t  filter.forEach(f => {\n\t\t  this.processHierarchyNodes(f, unassignedGeoObjTypes);\n\t  })\n  }\n  \n  processHierarchyNodes(node: HierarchyNode, unassignedGeoObjTypes: string[]){\n\t  unassignedGeoObjTypes.push(node.geoObjectType)\n\t  \n\t  node.children.forEach(child => {\n\t\t  this.processHierarchyNodes(child, unassignedGeoObjTypes);\n\t  })\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toEpochDateTime',\n    pure: true\n})\nexport class ToEpochDateTimePipe implements PipeTransform {\n    transform(date: string): any {\n        if (!date ) {\n            return date;\n        }\n       \n        return new Date(date).getTime();\n    }\n}","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\n\nimport { MaintainerGuard, ContributerGuard, AuthGuard } from '../shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'hierarchies',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'data',\n        component: DataPageComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'change-requests',\n        component: ChangeRequestPageComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'master-lists',\n        component: MasterListManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'scheduled-jobs',\n        component: ScheduledJobsComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'job/:oid',\n        component: JobComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'master-list/:oid/:published',\n        component: MasterListComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'master-list-view/:oid',\n        component: MasterListViewComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'change-request',\n        component: SubmitChangeRequestComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'tasks',\n        component: TaskViewerComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'synchronization-configs',\n        component: SynchronizationConfigManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'synchronization-config/:oid',\n        component: SynchronizationConfigComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'location-manager',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code/:editOnly',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'sync/details/:oid',\n        component: SyncDetailsComponent,\n        canActivate: [MaintainerGuard]\n    },\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class RegistryRoutingModule { }"],"sourceRoot":""}