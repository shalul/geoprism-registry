{"version":3,"sources":["webpack:///./src/app/registry/registry.module.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/registry/service/index.ts","webpack:///./src/app/registry/model/io.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.html","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.ts","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.html","webpack:///./src/app/registry/service/geoobjecttype-management.service.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.html","webpack:///./src/app/registry/component/master-list/publish-modal.component.ts","webpack:///./src/app/registry/component/master-list/publish-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.html","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.ts","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.html","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.html","webpack:///./src/app/registry/service/change-request.service.ts","webpack:///./src/app/registry/service/hierarchy.service.ts","webpack:///./src/app/registry/service/io.service.ts","webpack:///./src/app/registry/service/localization-manager.service.ts","webpack:///./src/app/registry/service/map.service.ts","webpack:///./src/app/registry/service/registry.service.ts","webpack:///./src/app/registry/service/synchronization-config.service.ts","webpack:///./src/app/registry/service/task.service.ts","webpack:///./src/app/registry/component/hierarchy/d3/svg-util.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.html","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.html","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.ts","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.html","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.ts","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.html","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.ts","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.html","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.html","webpack:///./src/app/registry/component/location-manager/layer-panel.component.ts","webpack:///./src/app/registry/component/location-manager/layer-panel.component.html","webpack:///./src/app/registry/component/location-manager/feature-panel.component.ts","webpack:///./src/app/registry/component/location-manager/feature-panel.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.html","webpack:///./src/app/registry/factory/form-validation.factory.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-type.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem.component.html","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.html","webpack:///./src/app/registry/component/data-page/data-page.component.ts","webpack:///./src/app/registry/component/data-page/data-page.component.html","webpack:///./src/app/registry/component/importer/dataimporter.component.ts","webpack:///./src/app/registry/component/importer/dataimporter.component.html","webpack:///./src/app/registry/component/master-list/master-list-manager.component.ts","webpack:///./src/app/registry/component/master-list/master-list-manager.component.html","webpack:///./src/app/registry/component/master-list/export-format-modal.component.ts","webpack:///./src/app/registry/component/master-list/export-format-modal.component.html","webpack:///./src/app/registry/component/crtable/request-table.component.ts","webpack:///./src/app/registry/component/crtable/request-table.component.html","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.html","webpack:///./src/app/registry/pipe/geoobject-attribute-excludes.pipe.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.ts","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.html","webpack:///./src/app/registry/component/master-list/master-list.component.ts","webpack:///./src/app/registry/component/master-list/master-list.component.html","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-view.component.ts","webpack:///./src/app/registry/component/master-list/master-list-view.component.html","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.html","webpack:///./src/app/registry/component/scheduled-jobs/job.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/job.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.html","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.ts","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.html","webpack:///./src/app/registry/component/synchronization-config/details.component.ts","webpack:///./src/app/registry/component/synchronization-config/details.component.html","webpack:///./src/app/registry/component/location-manager/location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/location-manager.component.html","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.ts","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.html","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.ts","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.html","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-node.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.html","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.html","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.html","webpack:///./src/app/registry/model/crtable.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.html","webpack:///./src/app/registry/component/data-export/data-export.component.ts","webpack:///./src/app/registry/component/data-export/data-export.component.html","webpack:///./src/app/registry/pipe/geoobjecttype.pipe.ts","webpack:///./src/app/registry/pipe/to-epoch-date-time.pipe.ts","webpack:///./src/app/registry/registry-routing.module.ts"],"names":["RegistryModule","MapService","HierarchyService","LocalizationManagerService","ChangeRequestService","IOService","GeoObjectTypeManagementService","RegistryService","TaskService","DatePipe","ToEpochDateTimePipe","StepIndicatorComponent","SynchronizationConfigService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","TabsModule","CollapseModule","NgxPaginationModule","SharedModule","RegistryRoutingModule","AccordionModule","forRoot","HierarchyComponent","RequestTableComponent","CreateUpdateGeoObjectDetailComponent","AddRemoveChildDetailComponent","SetParentDetailComponent","CreateHierarchyTypeModalComponent","AddChildToHierarchyModalComponent","CreateGeoObjTypeModalComponent","ManageAttributesModalComponent","DefineAttributeModalContentComponent","ShapefileModalComponent","AttributesPageComponent","LocationPageComponent","LocationProblemPageComponent","LocationProblemComponent","TermProblemPageComponent","TermProblemComponent","SpreadsheetModalComponent","GeoObjectTypePipe","GeoObjectAttributeCodeValidator","EditAttributeModalContentComponent","TermOptionWidgetComponent","AttributeInputComponent","EditTermOptionInputComponent","ManageGeoObjectTypeModalComponent","GeoObjectTypeInputComponent","ManageTermOptionsComponent","LocalizedInputComponent","LocalizedTextComponent","GeoObjectSharedAttributeEditorComponent","ManageVersionsComponent","ManageVersionsModalComponent","SubmitChangeRequestComponent","GeoObjectEditorComponent","GeoObjectAttributeExcludesPipe","GeoObjectEditorMapComponent","SimpleEditControl","DataPageComponent","ChangeRequestPageComponent","CascadingGeoSelector","TreeGeoSelector","ManageParentVersionsModalComponent","ManageParentVersionsComponent","ActionDetailModalComponent","DataImporterComponent","DataExportComponent","MasterListManagerComponent","MasterListComponent","MasterListHistoryComponent","PublishedMasterListHistoryComponent","PublishModalComponent","MasterListViewComponent","ExportFormatModalComponent","ScheduledJobsComponent","JobComponent","JobConflictModalComponent","ReuploadModalComponent","ParentReferenceProblemWidgetComponent","TermReferenceProblemWidgetComponent","RowValidationProblemWidgetComponent","ImportProblemWidgetComponent","TaskViewerComponent","SynchronizationConfigManagerComponent","SynchronizationConfigModalComponent","SynchronizationConfigComponent","SyncDetailsComponent","LocationManagerComponent","DatasetLocationManagerComponent","ContextLayerModalComponent","LayerPanelComponent","FeaturePanelComponent","GeometryPanelComponent","NgModule","imports","declarations","providers","entryComponents","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","services","ImportSheet","Location","Term","TermProblem","LocationProblem","Exclusion","Synonym","ImportConfiguration","key","disabled","inlinelayout","valueChange","EventEmitter","Component","selector","templateUrl","styleUrls","Input","value","Output","TREE_SCALE_FACTOR_X","TREE_SCALE_FACTOR_Y","DEFAULT_NODE_FILL","DEFAULT_NODE_BANNER_COLOR","INHERITED_NODE_FILL","INHERITED_NODE_BANNER_COLOR","RELATED_NODE_BANNER_COLOR","Instance","hierarchyService","modalService","contextMenuService","localizeService","registryService","authService","userOrganization","currentHierarchy","instance","geoObjectTypes","hierarchiesByOrg","typesByOrg","filter","filteredHierarchiesByOrg","filteredTypesByOrg","hierarchyTypeDeleteExclusions","geoObjectTypeDeleteExclusions","_opened","isSRA","options","displayField","actionMapping","mouse","click","tree","node","$event","treeNodeOnClick","contextMenu","handleOnMenu","this","ngOnInit","refreshAll","fromEvent","searchInput","nativeElement","pipe","Boolean","debounceTime","distinctUntilChanged","tap","onFilterChange","subscribe","localize","decode","renderTree","rootGeoObjectTypes","length","d3","select","remove","isOrganizationRA","organizationCode","forEach","got","canDrag","overflowDiv","scrollLeft","scrollRight","svg","append","attr","primarySvgHierarchy","SvgHierarchyType","render","calculateSvgViewBox","overflowDiv2","calculateCanDrag","getBBox","x","y","width","height","xPadding","yPadding","style","hierarchyComponent","getNodeByCode","isAbstract","child","superTypeCode","calculateRelatedHierarchies","relatedHiers","i","hierarchies","hierarchyType","hierarchy","descendants","find","data","geoObjectType","inheritedHierarchyCode","push","registerDragHandlers","deltaX","deltaY","that","dropTargets","dropSelector","onDrag","dragEl","dropEl","emptyHierarchyDropZone","closest","onDrop","addChild","mouseTarget","event","clearDropZones","lastDropEl","svgMousePoint","svgPoint","sourceEvent","pageX","pageY","getD3Tree","isPointWithin","dropZoneBbox","activeDropZones","parent","gotRectW","gotRectH","clearGhostNodes","isDragGroup","classed","dropNode","isDropGroup","findGeoObjectTypeByCode","dropElX","parseInt","dropElY","childW","childH","dzg","dropTargetHasChildren","children","isChildDZActive","childDzBacker","childDz","addChildLabel","childDzText","calculateTextWidth","text","parentDzBacker","gotHeaderH","parentDz","addParentLabel","parentDzText","ghostCode","parentIndex","addSiblingLabel","splice","ghostingCode","label","siblingGhostBody","getBboxFromSelection","activeDz","dragGot","youngest","insertBetweenTypes","ghostNode","drag","on","rect","getBoundingClientRect","left","top","selThis","target","document","elementFromPoint","selectAll","each","sidebarDragHandler","registerSvgHandlers","startPoint","svgGot","getPos","setPos","split","svgDragHandler","findHierarchyByCode","ht","findOrganizationByCode","organizations","org","hierarchyCode","parentGeoObjectTypeCode","childGeoObjectTypeCode","addChildToHierarchy","then","index","relatedHierarchies","refreshPrimaryHierarchy","catch","err","error","middleGeoObjectTypeCode","youngestGeoObjectTypeCode","ngAfterViewInit","isRA","orgCode","dropZone","getTypesByOrg","orgTypes","getHierarchiesByOrg","orgHierarchies","desiredHierarchy","init","response","setLocales","locales","setGeoObjectTypes","types","pos","getGeoObjectTypePosition","setHierarchies","setNodesOnInit","updateViewDatastructures","setAbstractTypes","type","sort","a","b","localizedValue","toLowerCase","setType","excludeHierarchyTypeDeletes","indexOf","excludeGeoObjectTypeDeletes","findIndex","h","setCurrentHierarchy","getHierarchy","hierarchyId","rootGeoObjectType","processHierarchyNodes","getHierarchyLabel","geoObjectTypeCode","gOT","show","next","childType","nodeMenuComponent","leafMenuComponent","item","preventDefault","stopPropagation","treeModel","setFocusedNode","isExpanded","collapse","expandAll","hierarchyOnClick","createHierarchy","bsModalRef","animated","backdrop","ignoreBackdropClick","content","onHierarchytTypeCreate","nameA","toUpperCase","nameB","deleteHierarchyType","obj","ConfirmModalComponent","message","submitText","onConfirm","removeHierarchyType","editHierarchyType","readOnly","edit","getHierarchyTypePosition","description","progress","acknowledgement","disclaimer","useConstraints","accessConstraints","contact","phoneNumber","email","isPrimaryHierarchy","createGeoObjectType","groupSuperType","onGeoObjTypeCreate","deleteGeoObjectType","ModalTypes","danger","removeGeoObjectType","errCallback","manageGeoObjectType","attributes","onGeoObjectTypeSubmitted","position","removeFromHierarchy","parentGotCode","gotCode","isActive","filtered","setTimeout","handleInheritHierarchy","hierarchyTypeCode","inheritedHierarchyTypeCode","setInheritedHierarchy","handleUninheritHierarchy","removeInheritedHierarchy","ErrorHandler","showErrorAsDialog","ViewChild","static","modalStateChangedSource","Subject","modalStepChange","asObservable","getModalState","modalState","setModalState","state","Injectable","cdr","disableCodeField","excludeDescription","isDecimal","attributeChange","detectChanges","ngOnChanges","ngOnDestroy","handleOnSubmit","toggleIsUnique","attribute","unique","animate","onAnimationDone","isValid","localeValues","console","log","precision","toString","scale","trigger","transition","animations","service","iService","lService","dateService","currentDate","Date","readonly","isNew","onMasterListChange","master","listGeoObjectTypes","myOrgTypes","typeCode","isGeoObjectTypeRM","oid","displayLabel","create","representativityDate","publishingStartDate","publishDate","listAbstract","process","acknowledgements","contactName","organization","telephoneNumber","subtypeHierarchies","leaf","frequency","isMaster","visibility","ngAfterContentInit","getIsDisabled","elClasses","classList","onChange","getHierarchiesForType","getHierarchiesForSubtypes","onSubmit","createMasterList","hide","onCancel","unsubscribe","formatDate","date","formatDateForDisplay","getMessageFromError","isContributorOnly","preGeoObject","postGeoObject","calculatedPreObject","calculatedPostObject","attributeExcludes","forDate","isEditingGeometries","isGeometryInlined","valid","onManageVersion","customEvent","modifiedTermOption","currentTermOption","geoObjectAttributeExcludes","isContributerOnly","apply","geomAttr","geometry","Attribute","LocalizedValue","attributeForm","statusChanges","result","emit","changes","GeoObjectOverTime","JSON","parse","stringify","calculate","setBoolean","calculateCurrent","geometryEditor","reload","goot","object","time","getTime","startDate","endDate","isChangeOverTime","values","vot","Array","isArray","handleChangeCode","onManageAttributeVersions","geoObjectOverTime","isNewGeoObject","onAttributeVersionChange","versionObj","onManageGeometryVersions","isDifferentText","isNullValue","trim","isDifferentValue","onSelectPropertyOption","option","getGeoObjectTypeTermAttributeOptions","termAttributeCode","attrOpts","rootTerm","removeStatuses","isStatusChanged","post","pre","preCompare","postCompare","getTypeDefinition","getIsValid","getGeoObject","opacity","elRef","editEmitter","visible","editSessionEnabled","save","onAdd","onRemove","onClick","http","eventService","getAllActions","requestId","params","HttpParams","set","get","acp","finalize","toPromise","applyAction","action","headers","HttpHeaders","start","complete","applyActionStatusProperties","lockAction","actionId","unlockAction","getAllRequests","getRequestDetails","confirmChangeRequest","execute","delete","rejectAllActions","actions","approveAllActions","submitChangeRequest","deleteFile","fileId","actionOid","vfOid","getHierarchyTypes","createHierarchyType","htJSON","updateHierarchyType","importSpreadsheet","configuration","json","cancelImport","importShapefile","includeAbstractTypes","getTypeAncestors","includeInheritedTypes","includeTypes","getGeoObjectSuggestions","createGeoObjectSynonym","entityId","deleteGeoObjectSynonym","synonymId","vOid","getTermSuggestions","mdAttributeId","limit","createTermSynonym","classifierId","deleteTermSynonym","createTerm","parentTermCode","termJSON","removeTerm","termCode","getNewLocaleInfo","installLocale","language","country","variant","mapboxgl","accessToken","roots","search","getGeoObjectTypes","getParentGeoObjects","childId","childTypeCode","parentTypes","recursive","getChildGeoObjects","parentId","parentTypeCode","childrenTypes","newGeoObjectInstance","gtJSON","updateGeoObjectType","addAttributeType","geoObjTypeId","updateAttributeType","deleteAttributeType","attributeName","addAttributeTermTypeOption","term","updateAttributeTermTypeOption","deleteAttributeTermTypeOption","getGeoObjectBounds","getGeoObjectBoundsAtDate","getGeoObjectByCode","getHierarchiesForGeoObject","getGeoObjectSuggestionsTypeAhead","getScheduledJobs","pageSize","pageNumber","sortAttr","isAscending","getCompletedScheduledJobs","getScheduledJob","historyId","onlyUnresolved","getExportDetails","resolveScheduledJob","submitValidationResolve","config","submitErrorResolve","getMasterLists","getMasterListHistory","versionType","getAllMasterListVersions","getMasterListVersion","getLocales","getGeoObjectOverTime","geoObjectCode","newGeoObjectOverTime","setAttributeVersions","collection","list","createMasterListVersion","publishMasterListVersions","deleteMasterList","deleteMasterListVersion","publishMasterList","getMasterList","applyGeoObjectEdit","parentTreeNode","geoObject","masterListId","notes","prop","val","valueAttribute","publishShapefile","getMasterListsByOrg","getPublishMasterListJobs","getDatasetBounds","getOrganizations","getPage","getCustomAttrCfg","externalId","getConfigForES","externalSystemId","unlock","run","getJobs","getMyTasks","pageNum","whereStatus","completeTask","taskId","setTaskStatus","status","point","bbox","fontSize","pt","createSVGPoint","matrixTransform","getScreenCTM","inverse","bbox1","bbox2","selection","configurationChange","stateChange","onNext","locations","onBack","hasProblems","locationProblems","resolved","handleError","exclusions","problem","name","exclusion","termProblems","attributeCode","changeDetectorRef","isValidChange","editingGeometry","hasDuplicateDate","hasConflict","hasGap","originalGeoObjectOverTime","geometryChange","vAttribute","checkDateFieldValidity","dateFields","dateFieldComponentsArray","toArray","onDateChange","vAttributes","checkRanges","onAddNewVersion","votArr","ValueOverTime","geometryType","terms","editGeometry","getVersionData","versions","getDefaultLocaleVal","locale","defVal","locVal","version","host","ViewChildren","geoObjectOverTimeInput","mapService","onClickEdit","mapDiv","Math","floor","random","Map","container","zoom","center","initMap","onValidChange","removeLayers","addLayers","editingControl","getAll","features","saveDraw","preGeometry","zoomToBbox","addControl","NavigationControl","addEditButton","enableEditing","simpleEditControl","controls","line_string","polygon","trash","combine_features","uncombine_features","postGeometry","add","removeSource","prefix","sourceName","removeLayer","getSource","renderGeometryAsLayer","color","addSource","addLayer","setData","bboxCode","bboxType","bboxDate","boundArr","bounds","LngLatBounds","fitBounds","padding","featureCollection","polygons","feature","j","coordinates","points","lines","onVersionChange","handleVersionChange","loading","originalHierarchy","entries","entry","current","parents","getTypeAheadObservable","parentCode","pType","properties","Observable","observer","loopI","goCode","results","typeaheadOnSelect","uid","ancestors","ancestor","formatDateString","dateObj","day","getUTCDate","getUTCFullYear","getUTCMonth","format","moment","localeData","longDateFormat","setInfinity","hierarchyOverTime","PRESENT","nodes","isExpandedField","idField","pot","expanded","onEdit","changeRequestService","geoObjectId","reason","dateStr","showGeoObjectDetails","dataSource","isGeoObjectTypeRC","handleDateChange","clickShowDetails","toISOString","newValid","attributeEditor","changeTypeaheadLoading","submit","goSubmit","cancel","SuccessModalComponent","tabIndex","submitFunction","arePropertiesValid","areParentsValid","isAdmin","isMaintainer","isContributor","isContributer","findVotWithStartDate","votArray","setMasterListId","setOnSuccessCallback","func","onSuccessCallback","configureAsNew","isGeometryEditable","fetchGeoObjectType","fetchLocales","retJson","goPropertiesPre","goPropertiesPost","configureFromImportError","importError","importErrorId","resolution","configureAsExisting","fetchGeoObject","fetchHierarchies","typeTypeCode","ptn","parentSelector","changePage","nextPage","force","persistModelChanges","getHierarchies","_stepConfig","steps","layerChange","baseLayerChange","baselayerIconHover","lists","baseLayers","sprite","url","selected","contextLayerGroups","updateContextGroups","currentValue","previousValue","contextGroup","contextLayers","thisContextLayer","active","enabled","groupHasEnabledContextLayers","group","hasEnabled","cLayerGroup","cLayer","hasEnabledContextLayers","toggleContextLayer","layer","removeContextLayer","addContextLayerModal","toggleBaseLayer","bl","MODE","VERSIONS","ATTRIBUTES","HIERARCHY","GEOMETRY","_code","geometryEdit","featureChange","modeChange","panelCancel","panelSubmit","mode","isEdit","updateCode","isGeoObjectTypeOrSuperRM","v","updateGeometry","setValid","setEditMode","onEditGeometryVersion","calculateGeometry","onCancelInternal","datasetId","applyInfo","isChangeRequest","onManageAttributeVersion","onManageHiearchyVersion","onAttributeChange","onHierarchyChange","onEditAttributes","auth","orgs","organizationLabel","getOrganizationLabelFromCode","isPrivate","toggleIsLeaf","isLeaf","toggleIsGeometryEditable","toggleIsAbstract","confirmBsModalRef","geoObjectTypeManagementService","GeoObjectTypeModalStates","modalStateSubscription","onModalStateChange","onGeoObjectTypeChange","update","close","modalStepIndicatorService","localizationService","geoObjectTypeChange","modalStepConfig","editGeoObjectType","setStepConfig","fetchOrganizationLabel","manageAttributes","in","onDeleteAttribute","defineAttributeModal","defineAttribute","editAttribute","removeAttributeType","attributeType","newAttribute","setAttribute","attributeInputComponent","AttributeTerm","AttributeDecimal","isFormValid","isAttrValid","validator","c","geoObjectAttributeCode","validate","provide","NG_VALIDATORS","useExisting","multi","Directive","assign","back","manageTermOption","openAddTermOptionForm","enableTermOptionForm","termOption","replace","addTermOption","clearTermOption","deleteTermOption","removeTermOption","editTermOption","cancelTermOption","t","svgEl","isPrimary","d3Hierarchy","d3Tree","nodeSize","separation","getCode","treeNode","SvgHierarchyNode","renderHierarchyHeader","hg","colHeaderLabel","colHeader","headerg","hierarchyLabelW","hierarchyLabelH","headerFontSize","hierarchyLabelY","lineWidth","textWidth","html","d","headerGBbox","getRelatedHierarchies","nodeMouseover","element","nodeMousemove","nodeTooltipBbox","documentElement","scrollHeight","scrollWidth","nodeMouseleave","descends","insert","gtree","links","join","source","gHeader","gotHeaderW","MOUSE_HOVER_EVENT_ENTER","MOUSE_HOVER_EVENT_MOVE","MOUSE_HOVER_EVENT_EXIT","gotHeaderFontSize","substring","arrowRectD","gArrow","gotBodyFontSize","gotOptionsButtonFontSize","renderRelatedHierarchiesMenu","router","onStateChange","handleBack","handleNext","handleCancel","postalCode","handleSubmit","cancelText","navigate","onError","entityLabel","hasSynonym","createSynonym","ignoreDataAtLocation","locationLabel","undoAction","termLabel","termId","createOption","ignoreValue","renderContent","pageTitle","sysService","showImportConfig","importStrategies","ImportStrategy","NEW_AND_UPDATE","NEW_ONLY","UPDATE_ONLY","isExternal","isLoading","copyBlank","getExternalSystems","paginatedSystems","externalSystems","resultSet","getUrl","queueLimit","removeAfterUpload","uploader","FileUploader","onBuildItemForm","fileItem","form","importStrategy","onBeforeUploadItem","onCompleteItem","fileRef","onSuccessItem","externalSystem","sys","onErrorItem","queue","uploadAll","setImportSource","checkDates","startDateField","field","inputName","setInvalid","onCreate","createDate","lastUpdateDate","write","read","onView","pair","ret","onDelete","arr","onFormat","confirm","today","getDateString","objectKeys","requests","columns","filterCriteria","hasBaseDropZoneOver","waitingOnScroll","sortable","refresh","targetActionId","documents","toggleId","onSelect","scrollToBottom","$","scrollTop","getGOTLabel","geoObjectJson","onUpload","onDownloadFile","fileOid","window","location","href","onDeleteFile","docPos","fileOverBase","onExecute","changeRequest","request","firstGeoObject","getFirstGeoObjectInActions","hasOwnProperty","deletedRequestId","decisionMaker","approvalStatus","getUsername","onApproveAll","onRejectAll","requestTrackBy","toggle","parentElement","className","includes","criteria","setActionStatus","getActiveDetailComponent","actionType","endsWith","showActionDetail","cr","curAction","permissions","encapsulation","ViewEncapsulation","None","cuDetail","endEdit","arDetail","spDetail","transform","items","Pipe","pure","route","urlSubscriber","highlightOid","cHierarchies","parentMap","onManageVersions","mainForm","pService","p","page","count","order","isPublished","isRefreshing","isWritable","searchPlaceholder","snapshot","paramMap","isCollapsed","onPageChange","refreshProgress","handleProgressChange","baseUrl","hostname","port","notifier","webSocket","onSort","clearFilters","toggleFilter","getValues","base","unshift","total","f","s","end","handleInputChange","handleListChange","isFilterable","dependency","editModal","onPublish","historyOid","onNewGeoObject","onExport","encodeURIComponent","onWheel","onDeleteMasterListVersion","updateList","onViewMetadata","onPublishShapefile","onDownloadShapefile","isForDateValid","ioService","activeJobsPage","completeJobsPage","activeTimeCounter","completeTimeCounter","isViewAllOpen","onActiveJobsPageChange","pollingData","interval","onCompleteJobsPageChange","formatJobStatus","job","formatStepConfig","stepConfig","stage","getJobStatus","getCompletedStatus","jobStage","targetStage","jobPos","onViewAllCompleteJobs","onCancelScheduledJob","jobId","onResolveScheduledJob","allSelected","timeCounter","isPolling","hasRowValidationProblem","formatAffectedRows","rows","formatValidationResolve","onProblemResolved","getFriendlyProblemType","probType","onConflictAction","importErrors","problems","onViewAllActiveJobs","toggleAll","row","onReuploadAndResume","onProblemResolvedListener","onEditGeoObject","searchLabel","getString","conflict","getValidationProblemDisplayLabel","onIgnore","cfg","validationProblemId","onCreateSynonym","title","warning","errorMessage","taskService","inProgressTasks","completedTasks","onInProgressTasksPageChange","upper","str","onCompletedTasksPageChange","onCompleteTask","task","onMoveTaskToInProgress","onViewAllCompletedTasks","onSuccess","DEFAULT_MAPPING_STRATEGY","system","cOrg","cSystem","levelRows","orgUnitGroups","oIndex","sIndex","systems","esConfig","levels","levelRow","level","levelNum","isAttributeEditor","buildDefaultMappings","clearMappingData","lvl","mappings","orgUnitGroupId","onSelectLevelType","attrCfg","editorIndex","getEditorIndex","len","mapping","attrConfigInfos","info","cgrAttr","cgrAttrName","onOrganizationSelected","deleteMapping","addNewMapping","attributeMappingStrategy","dhis2AttrName","onChangeExternalSystem","onChangeHierarchy","addLevel","removeLevel","levelRowIndex","newLevelNum","configureAttributes","onSelectGeoObjectType","getTermOptions","dhis2Id","dhis2Attrs","dhis2Attr","onChangeDHIS2Attr","isDifferentGot","infos","mapCgrAttr","isOrgUnitGroup","attributeMappingStrategies","onChangeTargetType","onRun","exportErrors","SEARCH","VIEW","displayDateRequiredError","vectorLayers","preventSingleClick","hideSearchOptions","geoObjectUid","backReference","geoObj","protocol","attributionControl","changeMode","clearGeometryEditing","onModeChange","AttributionControl","compact","handleMapClickEvent","fc","zoomToFeature","onPanelCancel","onPanelSubmit","class","changeRequestId","addVectorLayer","handleBasemapStyle","baseLayer","setStyle","timer","maxZoom","onContextLayerChange","removeVectorLayer","tiles","navigator","deleteAll","removeControl","onGeometryEdit","addEditLayers","onMapSave","getDrawGeometry","groupHasContextLayers","hasCLayers","isVersionForHighlight","setDateAttribute","toolsIconHover","editOnly","getDateFromDateString","published","llb","vLayer","prevLayer","onFeatureChange","setFilter","svgHierarchyType","dragging","getBbox","inheritNode","heritX","heritY","inheritBbox","uninheritNode","uninheritBbox","getTreeNode","hideRelatedHierarchy","existingSecondary","existingMenu","contextMenuGroup","hasActionsPermissions","titleLabel","actionsTitle","removeFromHierarchyLabel","noRelatedHierLabel","hideRelatedHierarchyLabel","uninheritLabel","inheritLabel","isSecondaryHierarchyRendered","numActions","removeWidth","hideRelatedWidth","uninheritWidth","existingSecondaryCode","secondaryHierarchy","relatedGotHasParents","inheritWidth","relatedHierarchyCode","relatedHierarchy","relatedHierarchyLabel","noHierLabelWidth","heightAdditions","widthPadding","renderSecondaryHierarchy","removeGotFromHierarchy","onClickUninheritHierarchy","onClickInheritHierarchy","myBbox","primaryHierBbox","gSecondary","paddingLeft","secondaryGot","secondaryGotBbox","gConnector","toRoot","onNodeChange","allGeoObjectTypes","gObj","selectedGeoObjectType","isEditing","startEdit","unlockActionSync","ajax","method","success","async","original","canDeactivate","afterDeactivate","isDeactivating","HostListener","ChangeRequest","Document","AbstractAction","UpdateGeoObjectAction","CreateGeoObjectAction","AddChildAction","RemoveChildAction","GovernanceStatus","PageEvent","SetParentAction","month","unassignedGeoObjTypes","buildUnassignedGeoObjTypes","routes","path","component","canActivate","AuthGuard","MaintainerGuard","ContributerGuard","LocationStrategy","useClass","HashLocationStrategy","forChild"],"mappings":"mKAAA,WACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UAEA,UAEA,O,uCAGA,4B,wCAoJaA,I,iCAAAA,I,sCA9CD,CACV,GAAAC,WACA,GAAAC,iBACA,GAAAC,2BACA,GAAAC,qBACA,GAAAC,UACA,GAAAC,+BACA,GAAAC,gBACA,GAAAC,YACA,EAAAC,SACA,GAAAC,oBACA,GAAAC,uBACA,GAAAC,8BACA,SAlHQ,CACR,EAAAC,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBACA,GAAAC,gBAAgBC,c,EAnBlB,GAoJa,EAAA9B,mB,iEAAAA,GAAc,eA9HzB,EAAA+B,mBACA,EAAAC,sBACA,EAAAC,qCACA,EAAAC,8BACA,EAAAC,yBACA,EAAAC,kCACA,EAAAC,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAC,wBACA,EAAAC,wBACA,EAAAC,sBACA,EAAAC,6BACA,EAAAC,yBACA,EAAAC,yBACA,EAAAC,qBACA,EAAAC,0BACA,GAAAC,kBACA,GAAAC,gCACA,EAAAC,mCACA,E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","file":"1.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { DatePipe } from '@angular/common';\n\nimport { LocalizedInputComponent } from './component/form-fields/localized-input/localized-input.component';\nimport { LocalizedTextComponent } from './component/form-fields/localized-text/localized-text.component';\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { CreateHierarchyTypeModalComponent } from './component/hierarchy/modals/create-hierarchy-type-modal.component';\nimport { AddChildToHierarchyModalComponent } from './component/hierarchy/modals/add-child-to-hierarchy-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './component/hierarchy/modals/create-geoobjtype-modal.component';\nimport { ManageAttributesModalComponent } from './component/hierarchy/geoobjecttype-management/manage-attributes-modal.component';\nimport { DefineAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component';\nimport { EditAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component';\nimport { ShapefileModalComponent } from './component/importer/modals/shapefile-modal.component';\nimport { AttributesPageComponent } from './component/importer/modals/attributes-page.component';\nimport { LocationPageComponent } from './component/importer/modals/location-page.component';\nimport { LocationProblemPageComponent } from './component/importer/modals/location-problem-page.component';\nimport { LocationProblemComponent } from './component/importer/modals/location-problem.component';\nimport { TermProblemPageComponent } from './component/importer/modals/term-problem-page.component';\nimport { TermProblemComponent } from './component/importer/modals/term-problem.component';\nimport { SpreadsheetModalComponent } from './component/importer/modals/spreadsheet-modal.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { TermOptionWidgetComponent } from './component/hierarchy/geoobjecttype-management/term-option-widget.component';\nimport { AttributeInputComponent } from './component/hierarchy/geoobjecttype-management/attribute-input.component';\nimport { EditTermOptionInputComponent } from './component/hierarchy/geoobjecttype-management/edit-term-option-input.component';\nimport { ManageTermOptionsComponent } from './component/hierarchy/geoobjecttype-management/manage-term-options.component';\nimport { GeoObjectTypeInputComponent } from './component/hierarchy/geoobjecttype-management/geoobjecttype-input.component';\nimport { ManageGeoObjectTypeModalComponent } from './component/hierarchy/modals/manage-geoobjecttype-modal.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { PublishModalComponent } from './component/master-list/publish-modal.component';\nimport { ExportFormatModalComponent } from './component/master-list/export-format-modal.component';\nimport { RequestTableComponent } from './component/crtable/request-table.component';\nimport { CreateUpdateGeoObjectDetailComponent } from './component/crtable/action-detail/create-update-geo-object/detail.component';\nimport { AddRemoveChildDetailComponent } from './component/crtable/action-detail/add-remove-child/detail.component';\nimport { SetParentDetailComponent } from './component/crtable/action-detail/set-parent/set-parent-detail.component';\nimport { GeoObjectSharedAttributeEditorComponent } from './component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component';\nimport { ManageVersionsComponent } from './component/geoobject-shared-attribute-editor/manage-versions.component';\nimport { ManageVersionsModalComponent } from './component/geoobject-shared-attribute-editor/manage-versions-modal.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { GeoObjectEditorComponent } from './component/geoobject-editor/geoobject-editor.component';\nimport { GeoObjectEditorMapComponent } from './component/geoobject-editor-map/geoobject-editor-map.component';\nimport { SimpleEditControl } from './component/geoobject-editor-map/simple-edit-control/simple-edit-control.component';\nimport { CascadingGeoSelector } from './component/cascading-geo-selector/cascading-geo-selector';\nimport { TreeGeoSelector } from './component/tree-geo-selector/tree-geo-selector';\nimport { ManageParentVersionsModalComponent } from './component/cascading-geo-selector/manage-parent-versions-modal.component';\nimport { ManageParentVersionsComponent } from './component/cascading-geo-selector/manage-parent-versions.component';\nimport { ActionDetailModalComponent } from './component/crtable/action-detail/action-detail-modal.component';\nimport { DataImporterComponent } from './component/importer/dataimporter.component';\nimport { DataExportComponent } from './component/data-export/data-export.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { PublishedMasterListHistoryComponent } from './component/master-list/published-master-list-history.component';\nimport { MasterListHistoryComponent } from './component/master-list/master-list-history.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { JobConflictModalComponent } from './component/scheduled-jobs/conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './component/scheduled-jobs/conflict-widgets/reupload-modal.component';\nimport { ParentReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component';\nimport { TermReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component';\nimport { RowValidationProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component';\nimport { StepIndicatorComponent } from './component/scheduled-jobs/step-indicator.component';\nimport { ImportProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/import-problem-widget.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\n\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigModalComponent } from './component/synchronization-config/synchronization-config-modal.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\n\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\nimport { ContextLayerModalComponent } from './component/location-manager/context-layer-modal.component';\nimport { LayerPanelComponent } from './component/location-manager/layer-panel.component';\nimport { FeaturePanelComponent } from './component/location-manager/feature-panel.component';\nimport { GeometryPanelComponent } from './component/location-manager/geometry-panel.component';\n\nimport { GeoObjectAttributeCodeValidator } from './factory/form-validation.factory';\n\nimport { GeoObjectTypePipe } from './pipe/geoobjecttype.pipe';\nimport { GeoObjectAttributeExcludesPipe } from './pipe/geoobject-attribute-excludes.pipe';\nimport { ToEpochDateTimePipe } from './pipe/to-epoch-date-time.pipe';\nimport { RegistryService } from './service/registry.service';\nimport { TaskService } from './service/task.service';\nimport { HierarchyService } from './service/hierarchy.service';\nimport { SynchronizationConfigService } from './service/synchronization-config.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\nimport { ChangeRequestService } from './service/change-request.service';\nimport { IOService } from './service/io.service';\nimport { MapService } from './service/map.service';\nimport { GeoObjectTypeManagementService } from './service/geoobjecttype-management.service'\n\nimport { RegistryRoutingModule } from './registry-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n\nimport '../rxjs-extensions';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\t//        ModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tTabsModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule,\n\t\tSharedModule,\n\t\tRegistryRoutingModule,\n\t\tAccordionModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tHierarchyComponent,\n\t\tRequestTableComponent,\n\t\tCreateUpdateGeoObjectDetailComponent,\n\t\tAddRemoveChildDetailComponent,\n\t\tSetParentDetailComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tShapefileModalComponent,\n\t\tAttributesPageComponent,\n\t\tLocationPageComponent,\n\t\tLocationProblemPageComponent,\n\t\tLocationProblemComponent,\n\t\tTermProblemPageComponent,\n\t\tTermProblemComponent,\n\t\tSpreadsheetModalComponent,\n\t\tGeoObjectTypePipe,\n\t\tGeoObjectAttributeCodeValidator,\n\t\tEditAttributeModalContentComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tLocalizedInputComponent,\n\t\tLocalizedTextComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsComponent,\n\t\tManageVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tGeoObjectAttributeExcludesPipe,\n\t\tToEpochDateTimePipe,\n\t\tGeoObjectEditorMapComponent,\n\t\tSimpleEditControl,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tCascadingGeoSelector,\n\t\tTreeGeoSelector,\n\t\tManageParentVersionsModalComponent,\n\t\tManageParentVersionsComponent,\n\t\tActionDetailModalComponent,\n\t\tHierarchyComponent,\n\t\tDataImporterComponent,\n\t\tDataExportComponent,\n\t\t// Master List screens\n\t\tMasterListManagerComponent,\n\t\tMasterListComponent,\n\t\tMasterListHistoryComponent,\n\t\tPublishedMasterListHistoryComponent,\n\t\tPublishModalComponent,\n\t\tMasterListViewComponent,\n\t\t// Scheduled jobs\n\t\tExportFormatModalComponent,\n\t\tScheduledJobsComponent,\n\t\tJobComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tParentReferenceProblemWidgetComponent,\n\t\tTermReferenceProblemWidgetComponent,\n\t\tRowValidationProblemWidgetComponent,\n\t\tStepIndicatorComponent,\n\t\tImportProblemWidgetComponent,\n\t\tTaskViewerComponent,\n\t\t// Synchronization Config\n\t\tSynchronizationConfigManagerComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tSynchronizationConfigComponent,\n\t\tSyncDetailsComponent,\n\t\t// Location manager\n\t\tLocationManagerComponent,\n\t\tDatasetLocationManagerComponent,\n\t\tContextLayerModalComponent,\n\t\tLayerPanelComponent,\n\t\tFeaturePanelComponent,\n\t\tGeometryPanelComponent\n\t],\n\tproviders: [\n\t\tMapService,\n\t\tHierarchyService,\n\t\tLocalizationManagerService,\n\t\tChangeRequestService,\n\t\tIOService,\n\t\tGeoObjectTypeManagementService,\n\t\tRegistryService,\n\t\tTaskService,\n\t\tDatePipe,\n\t\tToEpochDateTimePipe,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigService\n\t],\n\tentryComponents: [\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tEditAttributeModalContentComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tShapefileModalComponent,\n\t\tSpreadsheetModalComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsModalComponent,\n\t\tManageParentVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tPublishModalComponent,\n\t\tExportFormatModalComponent,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tActionDetailModalComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tContextLayerModalComponent\n\t]\n})\nexport class RegistryModule { }\n","var map = {\n\t\"./af\": 345,\n\t\"./af.js\": 345,\n\t\"./ar\": 346,\n\t\"./ar-dz\": 347,\n\t\"./ar-dz.js\": 347,\n\t\"./ar-kw\": 348,\n\t\"./ar-kw.js\": 348,\n\t\"./ar-ly\": 349,\n\t\"./ar-ly.js\": 349,\n\t\"./ar-ma\": 350,\n\t\"./ar-ma.js\": 350,\n\t\"./ar-sa\": 351,\n\t\"./ar-sa.js\": 351,\n\t\"./ar-tn\": 352,\n\t\"./ar-tn.js\": 352,\n\t\"./ar.js\": 346,\n\t\"./az\": 353,\n\t\"./az.js\": 353,\n\t\"./be\": 354,\n\t\"./be.js\": 354,\n\t\"./bg\": 355,\n\t\"./bg.js\": 355,\n\t\"./bm\": 356,\n\t\"./bm.js\": 356,\n\t\"./bn\": 357,\n\t\"./bn-bd\": 358,\n\t\"./bn-bd.js\": 358,\n\t\"./bn.js\": 357,\n\t\"./bo\": 359,\n\t\"./bo.js\": 359,\n\t\"./br\": 360,\n\t\"./br.js\": 360,\n\t\"./bs\": 361,\n\t\"./bs.js\": 361,\n\t\"./ca\": 362,\n\t\"./ca.js\": 362,\n\t\"./cs\": 363,\n\t\"./cs.js\": 363,\n\t\"./cv\": 364,\n\t\"./cv.js\": 364,\n\t\"./cy\": 365,\n\t\"./cy.js\": 365,\n\t\"./da\": 366,\n\t\"./da.js\": 366,\n\t\"./de\": 367,\n\t\"./de-at\": 368,\n\t\"./de-at.js\": 368,\n\t\"./de-ch\": 369,\n\t\"./de-ch.js\": 369,\n\t\"./de.js\": 367,\n\t\"./dv\": 370,\n\t\"./dv.js\": 370,\n\t\"./el\": 371,\n\t\"./el.js\": 371,\n\t\"./en-au\": 372,\n\t\"./en-au.js\": 372,\n\t\"./en-ca\": 373,\n\t\"./en-ca.js\": 373,\n\t\"./en-gb\": 374,\n\t\"./en-gb.js\": 374,\n\t\"./en-ie\": 375,\n\t\"./en-ie.js\": 375,\n\t\"./en-il\": 376,\n\t\"./en-il.js\": 376,\n\t\"./en-in\": 377,\n\t\"./en-in.js\": 377,\n\t\"./en-nz\": 378,\n\t\"./en-nz.js\": 378,\n\t\"./en-sg\": 379,\n\t\"./en-sg.js\": 379,\n\t\"./eo\": 380,\n\t\"./eo.js\": 380,\n\t\"./es\": 381,\n\t\"./es-do\": 382,\n\t\"./es-do.js\": 382,\n\t\"./es-mx\": 383,\n\t\"./es-mx.js\": 383,\n\t\"./es-us\": 384,\n\t\"./es-us.js\": 384,\n\t\"./es.js\": 381,\n\t\"./et\": 385,\n\t\"./et.js\": 385,\n\t\"./eu\": 386,\n\t\"./eu.js\": 386,\n\t\"./fa\": 387,\n\t\"./fa.js\": 387,\n\t\"./fi\": 388,\n\t\"./fi.js\": 388,\n\t\"./fil\": 389,\n\t\"./fil.js\": 389,\n\t\"./fo\": 390,\n\t\"./fo.js\": 390,\n\t\"./fr\": 391,\n\t\"./fr-ca\": 392,\n\t\"./fr-ca.js\": 392,\n\t\"./fr-ch\": 393,\n\t\"./fr-ch.js\": 393,\n\t\"./fr.js\": 391,\n\t\"./fy\": 394,\n\t\"./fy.js\": 394,\n\t\"./ga\": 395,\n\t\"./ga.js\": 395,\n\t\"./gd\": 396,\n\t\"./gd.js\": 396,\n\t\"./gl\": 397,\n\t\"./gl.js\": 397,\n\t\"./gom-deva\": 398,\n\t\"./gom-deva.js\": 398,\n\t\"./gom-latn\": 399,\n\t\"./gom-latn.js\": 399,\n\t\"./gu\": 400,\n\t\"./gu.js\": 400,\n\t\"./he\": 401,\n\t\"./he.js\": 401,\n\t\"./hi\": 402,\n\t\"./hi.js\": 402,\n\t\"./hr\": 403,\n\t\"./hr.js\": 403,\n\t\"./hu\": 404,\n\t\"./hu.js\": 404,\n\t\"./hy-am\": 405,\n\t\"./hy-am.js\": 405,\n\t\"./id\": 406,\n\t\"./id.js\": 406,\n\t\"./is\": 407,\n\t\"./is.js\": 407,\n\t\"./it\": 408,\n\t\"./it-ch\": 409,\n\t\"./it-ch.js\": 409,\n\t\"./it.js\": 408,\n\t\"./ja\": 410,\n\t\"./ja.js\": 410,\n\t\"./jv\": 411,\n\t\"./jv.js\": 411,\n\t\"./ka\": 412,\n\t\"./ka.js\": 412,\n\t\"./kk\": 413,\n\t\"./kk.js\": 413,\n\t\"./km\": 414,\n\t\"./km.js\": 414,\n\t\"./kn\": 415,\n\t\"./kn.js\": 415,\n\t\"./ko\": 416,\n\t\"./ko.js\": 416,\n\t\"./ku\": 417,\n\t\"./ku.js\": 417,\n\t\"./ky\": 418,\n\t\"./ky.js\": 418,\n\t\"./lb\": 419,\n\t\"./lb.js\": 419,\n\t\"./lo\": 420,\n\t\"./lo.js\": 420,\n\t\"./lt\": 421,\n\t\"./lt.js\": 421,\n\t\"./lv\": 422,\n\t\"./lv.js\": 422,\n\t\"./me\": 423,\n\t\"./me.js\": 423,\n\t\"./mi\": 424,\n\t\"./mi.js\": 424,\n\t\"./mk\": 425,\n\t\"./mk.js\": 425,\n\t\"./ml\": 426,\n\t\"./ml.js\": 426,\n\t\"./mn\": 427,\n\t\"./mn.js\": 427,\n\t\"./mr\": 428,\n\t\"./mr.js\": 428,\n\t\"./ms\": 429,\n\t\"./ms-my\": 430,\n\t\"./ms-my.js\": 430,\n\t\"./ms.js\": 429,\n\t\"./mt\": 431,\n\t\"./mt.js\": 431,\n\t\"./my\": 432,\n\t\"./my.js\": 432,\n\t\"./nb\": 433,\n\t\"./nb.js\": 433,\n\t\"./ne\": 434,\n\t\"./ne.js\": 434,\n\t\"./nl\": 435,\n\t\"./nl-be\": 436,\n\t\"./nl-be.js\": 436,\n\t\"./nl.js\": 435,\n\t\"./nn\": 437,\n\t\"./nn.js\": 437,\n\t\"./oc-lnc\": 438,\n\t\"./oc-lnc.js\": 438,\n\t\"./pa-in\": 439,\n\t\"./pa-in.js\": 439,\n\t\"./pl\": 440,\n\t\"./pl.js\": 440,\n\t\"./pt\": 441,\n\t\"./pt-br\": 442,\n\t\"./pt-br.js\": 442,\n\t\"./pt.js\": 441,\n\t\"./ro\": 443,\n\t\"./ro.js\": 443,\n\t\"./ru\": 444,\n\t\"./ru.js\": 444,\n\t\"./sd\": 445,\n\t\"./sd.js\": 445,\n\t\"./se\": 446,\n\t\"./se.js\": 446,\n\t\"./si\": 447,\n\t\"./si.js\": 447,\n\t\"./sk\": 448,\n\t\"./sk.js\": 448,\n\t\"./sl\": 449,\n\t\"./sl.js\": 449,\n\t\"./sq\": 450,\n\t\"./sq.js\": 450,\n\t\"./sr\": 451,\n\t\"./sr-cyrl\": 452,\n\t\"./sr-cyrl.js\": 452,\n\t\"./sr.js\": 451,\n\t\"./ss\": 453,\n\t\"./ss.js\": 453,\n\t\"./sv\": 454,\n\t\"./sv.js\": 454,\n\t\"./sw\": 455,\n\t\"./sw.js\": 455,\n\t\"./ta\": 456,\n\t\"./ta.js\": 456,\n\t\"./te\": 457,\n\t\"./te.js\": 457,\n\t\"./tet\": 458,\n\t\"./tet.js\": 458,\n\t\"./tg\": 459,\n\t\"./tg.js\": 459,\n\t\"./th\": 460,\n\t\"./th.js\": 460,\n\t\"./tk\": 461,\n\t\"./tk.js\": 461,\n\t\"./tl-ph\": 462,\n\t\"./tl-ph.js\": 462,\n\t\"./tlh\": 463,\n\t\"./tlh.js\": 463,\n\t\"./tr\": 464,\n\t\"./tr.js\": 464,\n\t\"./tzl\": 465,\n\t\"./tzl.js\": 465,\n\t\"./tzm\": 466,\n\t\"./tzm-latn\": 467,\n\t\"./tzm-latn.js\": 467,\n\t\"./tzm.js\": 466,\n\t\"./ug-cn\": 468,\n\t\"./ug-cn.js\": 468,\n\t\"./uk\": 469,\n\t\"./uk.js\": 469,\n\t\"./ur\": 470,\n\t\"./ur.js\": 470,\n\t\"./uz\": 471,\n\t\"./uz-latn\": 472,\n\t\"./uz-latn.js\": 472,\n\t\"./uz.js\": 471,\n\t\"./vi\": 473,\n\t\"./vi.js\": 473,\n\t\"./x-pseudo\": 474,\n\t\"./x-pseudo.js\": 474,\n\t\"./yo\": 475,\n\t\"./yo.js\": 475,\n\t\"./zh-cn\": 476,\n\t\"./zh-cn.js\": 476,\n\t\"./zh-hk\": 477,\n\t\"./zh-hk.js\": 477,\n\t\"./zh-mo\": 478,\n\t\"./zh-mo.js\": 478,\n\t\"./zh-tw\": 479,\n\t\"./zh-tw.js\": 479\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 481;","import { ChangeRequestService } from './change-request.service';\nimport { GeoObjectTypeManagementService } from './geoobjecttype-management.service';\nimport { HierarchyService } from './hierarchy.service';\nimport { IOService } from './io.service';\nimport { LocalizationManagerService } from './localization-manager.service';\nimport { MapService } from './map.service';\nimport { RegistryService } from './registry.service';\nimport { SynchronizationConfigService } from './synchronization-config.service';\nimport { TaskService } from './task.service';\n\nexport const services: any[] = [\n\tChangeRequestService,\n\tGeoObjectTypeManagementService,\n\tHierarchyService,\n\tIOService,\n\tLocalizationManagerService,\n\tMapService,\n\tRegistryService,\n\tSynchronizationConfigService,\n\tTaskService\n];\n\nexport * from './change-request.service';\nexport * from './geoobjecttype-management.service';\nexport * from './hierarchy.service';\nexport * from './io.service';\nexport * from './localization-manager.service';\nexport * from './map.service';\nexport * from './registry.service';\nexport * from './synchronization-config.service';\nexport * from './task.service';","import { GeoObjectType } from './registry';\n\nexport class ImportSheet {\n\tname: string;\n\tattributes: {\n\t\tboolean: string[];\n\t\tdate: string[];\n\t\tnumeric: string[];\n\t\ttext: string[];\n\t}\n}\n\nexport class Location {\n\tlabel: string;\n\tcode: string;\n\ttarget: string;\n\tmatchStrategy: string;\r\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: string;\n}\n\nexport class TermProblem {\n\tlabel: string;\n\tparentCode: string;\n\tmdAttributeId: string;\n\tattributeCode: string;\n\tattributeLabel: string;\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class LocationProblem {\n\tlabel: string;\n\ttype: string;\n\ttypeLabel: string;\n\tparent: string;\n\tcontext: { label: string, type: string }[];\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class Exclusion {\n\tcode: string;\n\tvalue: string;\n}\n\nexport class Synonym {\n\tlabel: string;\n\tsynonymId: string;\n\tvOid?: string;\n}\n\nexport class ImportConfiguration {\n\ttype: GeoObjectType;\n\tsheet: ImportSheet;\n\tdirectory: string;\n\tfilename: string;\n\thierarchy: string;\n\tpostalCode: boolean;\n\thasPostalCode: boolean;\n\tlocations: Location[];\n\tformatType: string;\n\tobjectType: string;\n\tlocationProblems: LocationProblem[];\n\ttermProblems: TermProblem[];\n\texclusions: Exclusion[];\n\thierarchies: { code: string, label: string }[];\n\tstartDate: string;\n\tendDate: string;\n\tisExternal: string;\n\texternalSystemId: string;\n\texternalSystem?: any;\n\trevealGeometryColumn?: any;\n\tonValidChange: any;\n\texternalIdAttributeTarget: string;\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-text',\n    templateUrl: './localized-text.component.html',\n    styleUrls: ['./localized-text.css'],\n} )\nexport class LocalizedTextComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n\t@Input() public inlinelayout: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","\n<div *ngFor=\"let localeValue of value.localeValues\">\n  <div [ngClass]=\"{'row' : inlinelayout, 'row-holder' : !inlinelayout}\" >\n    <div [ngClass]=\"{'col-md-12' : inlinelayout}\">\n      <div class=\"form-group\">\n        <div [ngClass]=\"{'label-holder' : !inlinelayout}\" >\n          <label>\n            <localize [key]=\"key\"></localize>\n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n        </div>\n        <div [ngClass]=\"{'holder' : !inlinelayout}\">\n          <span class=\"text\">\n            <textarea [(ngModel)]=\"localeValue.value\" [disabled]=\"disabled\" [name]=\"'description-' + localeValue.locale\"></textarea>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { debounceTime, distinctUntilChanged, filter, tap } from \"rxjs/operators\";\nimport { fromEvent } from 'rxjs';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ContextMenuService, ContextMenuComponent } from 'ngx-contextmenu';\nimport * as d3 from 'd3';\n\nimport { CreateHierarchyTypeModalComponent } from './modals/create-hierarchy-type-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './modals/create-geoobjtype-modal.component';\nimport { ManageGeoObjectTypeModalComponent } from './modals/manage-geoobjecttype-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal'\n\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { Organization } from '@shared/model/core';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { SvgHierarchyType } from './d3/svg-hierarchy-type';\nimport { svgPoint, isPointWithin, calculateTextWidth, getBboxFromSelection } from './d3/svg-util';\nimport { SvgHierarchyNode } from './d3/svg-hierarchy-node';\n\nexport const TREE_SCALE_FACTOR_X: number = 1.8;\nexport const TREE_SCALE_FACTOR_Y: number = 1.8;\n\nexport const DEFAULT_NODE_FILL = '#e6e6e6';\nexport const DEFAULT_NODE_BANNER_COLOR = '#A29BAB';\nexport const INHERITED_NODE_FILL = '#d4d4d4';\nexport const INHERITED_NODE_BANNER_COLOR = '#a0a0a0';\nexport const RELATED_NODE_BANNER_COLOR = INHERITED_NODE_BANNER_COLOR;\n\nexport class Instance {\n  active: boolean;\n  label: string;\n}\n\nexport interface DropTarget {\n  dropSelector: string;\n  onDrag(dragEl: Element, dropEl: Element, event: any): void;\n  onDrop(dragEl: Element, event: any): void;\n  [others: string]: any;\n}\n\n@Component({\n\n  selector: 'hierarchies',\n  templateUrl: './hierarchy.component.html',\n  styleUrls: ['./hierarchy.css']\n})\nexport class HierarchyComponent implements OnInit {\n\n  userOrganization: string = null;\n\n  primarySvgHierarchy: SvgHierarchyType;\n  currentHierarchy: HierarchyType = null;\n\n  instance: Instance = new Instance();\n  hierarchies: HierarchyType[];\n  organizations: Organization[];\n  geoObjectTypes: GeoObjectType[] = [];\n\n  hierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n  typesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n\n  filter: string = '';\n  filteredHierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n  filteredTypesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n  @ViewChild('searchInput', { static: true }) searchInput: ElementRef;\n\n  hierarchyTypeDeleteExclusions: string[] = ['AllowedIn', 'IsARelationship'];\n  geoObjectTypeDeleteExclusions: string[] = ['ROOT'];\n\n  _opened: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n  private bsModalRef: BsModalRef;\n\n    /*\n     * Template for tree node menu\n     */\n  @ViewChild('nodeMenu') public nodeMenuComponent: ContextMenuComponent;\n\n    /*\n     * Template for leaf menu\n     */\n  @ViewChild('leafMenu') public leafMenuComponent: ContextMenuComponent;\n\n    /* \n     * Currently clicked on id for delete confirmation modal \n     */\n  current: any;\n\n  isSRA: boolean = false;\n\n  hierarchyService: HierarchyService;\n\n  localizeService: LocalizationService;\n\n  options = {\n    //      allowDrag: (any) => node.isLeaf,\n    //      allowDrop: (element:Element, { parent, index }: {parent:TreeNode,index:number}) => {\n    // return true / false based on element, to.parent, to.index. e.g.\n    //          return parent.hasChildren;\n    //        },\n    displayField: \"label\",\n    actionMapping: {\n      mouse: {\n        click: (tree: any, node: any, $event: any) => {\n          this.treeNodeOnClick(node, $event);\n        },\n        contextMenu: (tree: any, node: any, $event: any) => {\n          this.handleOnMenu(node, $event);\n        }\n      }\n    },\n    mouse: {\n      //              drop: (tree: any, node: TreeNode, $event: any, {from, to}: {from:TreeNode, to:TreeNode}) => {\n      //                console.log('drag', from, to); // from === {name: 'first'}\n      //                // Add a node to `to.parent` at `to.index` based on the data in `from`\n      //                // Then call tree.update()\n      //              }\n    }\n  };\n\n\n\n  constructor(hierarchyService: HierarchyService, private modalService: BsModalService,\n    private contextMenuService: ContextMenuService,\n    localizeService: LocalizationService, private registryService: RegistryService, private authService: AuthService) {\n\n    this.isSRA = authService.isSRA();\n\n    this.hierarchyService = hierarchyService;\n    this.localizeService = localizeService;\n  }\n\n  ngOnInit(): void {\n    this.refreshAll(null);\n\n    fromEvent(this.searchInput.nativeElement, 'keyup').pipe(\n\n      // get value\n      filter(Boolean),\n      debounceTime(500),\n      distinctUntilChanged(),\n      tap(() => {\n        this.onFilterChange();\n      })\n      // subscription for response\n    ).subscribe();\n  }\n\n  localize(key: string): string {\n    return this.localizeService.decode(key);\n  }\n\n  private renderTree(): void {\n    if (this.currentHierarchy == null || this.currentHierarchy.rootGeoObjectTypes == null || this.currentHierarchy.rootGeoObjectTypes.length == 0) {\n      d3.select(\"#svg\").remove();\n      \n      let canDrag = false;\n      if (this.currentHierarchy != null)\n      {\n        canDrag = ( this.authService.isSRA() || this.authService.isOrganizationRA(this.currentHierarchy.organizationCode) );\n      }\n      \n      this.geoObjectTypes.forEach((got: GeoObjectType) => {\n        got.canDrag = canDrag;\n      });\n      return;\n    }\n\n    d3.select(\".g-context-menu\").remove();\n    d3.select(\".hierarchy-inherit-button\").remove();\n    d3.select(\".g-hierarchy-got-connector\").remove();\n\n    let overflowDiv: any = d3.select(\"#overflow-div\").node();\n    let scrollLeft = overflowDiv.scrollLeft;\n    let scrollRight = overflowDiv.scrollRight;\n\n    let svg = d3.select(\"#svg\");\n\n    if (svg.node() == null) {\n      svg = d3.select(\"#svgHolder\").append(\"svg\");\n      svg.attr(\"id\", \"svg\");\n    }\n\n    this.primarySvgHierarchy = new SvgHierarchyType(this, svg, this.currentHierarchy, true, this.localizeService, this.modalService, this.authService);\n    this.primarySvgHierarchy.render();\n\n    this.calculateSvgViewBox();\n\n    let overflowDiv2: any = d3.select(\"#overflow-div\").node();\n    overflowDiv2.scrollLeft = scrollLeft;\n    overflowDiv2.scrollRight = scrollRight;\n\n    //this.registerSvgHandlers();\n\n    this.geoObjectTypes.forEach((got: GeoObjectType) => {\n      got.canDrag = this.calculateCanDrag(got);\n    });\n  }\n\n  calculateSvgViewBox(): void {\n    let svg: any = d3.select(\"#svg\");\n    let svgNode: any = svg.node();\n\n    let { x, y, width, height } = svgNode.getBBox();\n\n    const xPadding = 30;\n    const yPadding = 40;\n    svg.attr(\"viewBox\", (x - xPadding) + \" \" + (y - yPadding) + \" \" + (width + xPadding * 2) + \" \" + (height + yPadding * 2));\n\n    width = (width + xPadding * 2) * TREE_SCALE_FACTOR_X;\n    height = (height + yPadding * 2) * TREE_SCALE_FACTOR_Y;\n\n    d3.select(\"#svgHolder\").style(\"width\", width + \"px\");\n    //d3.select(\"#svgHolder\").style(\"height\", height + \"px\"); \n  }\n\n  calculateCanDrag(got: GeoObjectType): boolean {\n    let hierarchyComponent = this;\n\n    if (this.primarySvgHierarchy != null) {\n      // Check permissions against GOT and Hierarchy org\n      if (! ( this.authService.isSRA() || this.authService.isOrganizationRA(this.currentHierarchy.organizationCode) ))\n      {\n        return false;\n      }\n    \n      // If the child is already on the graph, they cannot drag.\n      if (this.primarySvgHierarchy.getNodeByCode(got.code) != null) {\n        return false;\n      }\n\n      // If we are abstract, and one of our children is on the graph, they cannot drag.\n      if (got.isAbstract) {\n        let isChildOnGraph = false;\n\n        this.geoObjectTypes.forEach((child: GeoObjectType) => {\n          if (child.superTypeCode === got.code) {\n            if (hierarchyComponent.primarySvgHierarchy.getNodeByCode(child.code) != null) {\n              isChildOnGraph = true;\n            }\n          }\n        });\n\n        if (isChildOnGraph) {\n          return false;\n        }\n      }\n      // If we are a child of an abstract type, and our abstract type is on the graph, we cannot drag.\n      else if (got.superTypeCode != null) {\n        if (hierarchyComponent.primarySvgHierarchy.getNodeByCode(got.superTypeCode) != null) {\n          return false;\n        }\n      }\n    }\n    else {\n      // If there is no selected hierarchy, they cannot drag.\n      return false;\n    }\n\n    return true;\n  }\n\n  calculateRelatedHierarchies(got: GeoObjectType): string[] {\n    let relatedHiers = [];\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchyType = this.hierarchies[i];\n\n      if (hierarchyType.rootGeoObjectTypes != null && hierarchyType.rootGeoObjectTypes.length > 0) {\n        let d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]).descendants();\n\n        let found = d3Hierarchy.find((node) => {\n          return node.data.geoObjectType === got.code && node.data.inheritedHierarchyCode == null;\n        });\n\n        if (found) {\n          relatedHiers.push(hierarchyType.code);\n        }\n      }\n    }\n\n    return relatedHiers;\n  }\n\n  private registerDragHandlers(): any {\n    let that = this;\n\n    let dropTargets: DropTarget[] = [];\n\n    // Empty Hierarchy Drop Zone\n    dropTargets.push({\n      dropSelector: \".drop-box-container\", onDrag: function(dragEl: Element, dropEl: Element) {\n        if (this.dropEl != null) {\n          this.dropEl.style(\"border-color\", null);\n          this.dropEl = null;\n        }\n\n        if (dropEl != null) {\n          let emptyHierarchyDropZone = dropEl.closest(\".drop-box-container\");\n\n          if (emptyHierarchyDropZone != null) {\n            this.dropEl = d3.select(emptyHierarchyDropZone).style(\"border-color\", \"#6BA542\");\n          }\n        }\n      }, onDrop: function(dragEl: Element) {\n        if (this.dropEl != null) {\n          this.dropEl.style(\"border-color\", null);\n          that.addChild(that.currentHierarchy.code, \"ROOT\", d3.select(dragEl).attr(\"id\"));\n          this.dropEl = null;\n        }\n      }\n    });\n\n    // SVG GeoObjectType Drop Zone\n    dropTargets.push({\n      dropSelector: \".svg-got-body-rect\", onDrag: function(dragEl: Element, mouseTarget: Element, event: any) {\n        this.clearDropZones();\n\n        let lastDropEl = this.dropEl;\n\n        // translate page to SVG co-ordinate\n        let svg: any = d3.select(\"#svg\").node();\n\n        if (svg == null) {\n          return;\n        }\n        let svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        // Find out if we've dragged the GeoObjectType inside of a HierarchyNode. If we have, then\n        // we need to expand the HierarchyNode's BoundingBox to accomodate our new drop zones. \n        that.primarySvgHierarchy.getD3Tree().descendants().forEach((node: any) => {\n          if (node.data.geoObjectType !== \"GhostNode\" && isPointWithin(svgMousePoint, node.data.dropZoneBbox)) {\n            this.dropEl = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + node.data.geoObjectType + '\"]');\n            node.data.activeDropZones = true;\n\n            if (node.parent == null) {\n              node.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH * 4 };\n            }\n          }\n          else {\n            node.data.activeDropZones = false;\n\n            if (node.parent == null) {\n              node.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n            }\n          }\n        });\n\n        if (this.dropEl == null || (lastDropEl != null && this.dropEl != null && lastDropEl.attr(\"data-gotCode\") != this.dropEl.attr(\"data-gotCode\"))) {\n          this.clearGhostNodes(true);\n        }\n\n        if (this.dropEl != null) {\n          let isDragGroup = d3.select(dragEl).classed(\"got-group-parent\");\n          const gotCode = this.dropEl.attr(\"data-gotCode\");\n          let dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n          let isDropGroup = that.findGeoObjectTypeByCode(gotCode).isAbstract;\n\n          this.dropEl.attr(\"stroke\", \"blue\");\n\n          const dropElX = parseInt(this.dropEl.attr(\"x\"));\n          const dropElY = parseInt(this.dropEl.attr(\"y\"));\n\n          // Add drop zones\n          const childW: number = SvgHierarchyType.gotRectW;\n          const childH: number = SvgHierarchyType.gotRectH;\n\n          let dzg = d3.select(\"#svg\").append(\"g\").classed(\"svg-dropZone-g\", true);\n\n          // Render Child Drop Zone\n          let dropTargetHasChildren = !(dropNode.children == null || dropNode.children.length == 0);\n          let isChildDZActive = !isDropGroup && (!isDragGroup || !dropTargetHasChildren);\n          if (isChildDZActive) {\n            this.childDzBacker = dzg.append(\"rect\").classed(\"svg-got-child-dz-backer\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"white\")\n\n            this.childDz = dzg.append(\"rect\").classed(\"svg-got-child-dz\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", \"1\")\n              .attr(\"stroke-dasharray\", \"5,5\");\n\n            let addChildLabel = dropTargetHasChildren ? that.localizeService.decode(\"hierarchy.content.intersectChild\") : that.localizeService.decode(\"hierarchy.content.addChild\");\n            this.childDzText = dzg.append(\"text\").classed(\"svg-got-child-dz-text\", true)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", 10)\n              .attr(\"fill\", \"black\")\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addChildLabel, 10) / 2)\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10 + childH / 2 + 2)\n              .text(addChildLabel);\n          }\n\n          // Render Parent Drop Zone\n          if (!isDragGroup) // Don't render it if we're a group\n          {\n            this.parentDzBacker = dzg.append(\"rect\").classed(\"svg-got-parent-dz-backer\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"white\")\n\n            this.parentDz = dzg.append(\"rect\").classed(\"svg-got-parent-dz\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", \"1\")\n              .attr(\"stroke-dasharray\", \"5,5\");\n\n            d3.select(\".svg-got-parent-dz-text\").remove();\n            let addParentLabel = dropNode.parent == null ? that.localizeService.decode(\"hierarchy.content.addParent\") : that.localizeService.decode(\"hierarchy.content.intersectParent\");\n            this.parentDzText = dzg.append(\"text\").classed(\"svg-got-parent-dz-text\", true)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", 10)\n              .attr(\"fill\", \"black\")\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addParentLabel, 10) / 2)\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH / 2 + 2)\n              .text(addParentLabel);\n          }\n\n          // Render Sibling Drop Zone\n          if (this.ghostCode != gotCode) {\n\n\n            if (this.ghostCode != null) {\n              this.clearGhostNodes(dropNode.parent == null);\n            }\n\n            if (dropNode.parent != null) {\n              let parentIndex = null;\n              for (let i = 0; i < dropNode.parent.data.children.length; ++i) {\n                let hn: any = dropNode.parent.data.children[i];\n\n                if (hn.geoObjectType === gotCode) {\n                  parentIndex = i + 1;\n                }\n              };\n\n              let addSiblingLabel = that.localizeService.decode(\"hierarchy.content.addChild\");\n              dropNode.parent.data.children.splice(parentIndex, 0, { ghostingCode: gotCode, geoObjectType: \"GhostNode\", label: addSiblingLabel, children: [] });\n\n              that.renderTree();\n              this.ghostCode = gotCode;\n            }\n          }\n\n          let siblingGhostBody = d3.select(\".svg-sibling-ghost-body-dz\");\n\n          if (!isDragGroup && isPointWithin(svgMousePoint, getBboxFromSelection(this.parentDz))) {\n            this.parentDz.attr(\"stroke\", \"blue\");\n            this.parentDzText.attr(\"fill\", \"blue\");\n            isChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n            isChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n            siblingGhostBody.attr(\"stroke\", \"black\");\n            this.activeDz = this.parentDz;\n          }\n          else if (isChildDZActive && isPointWithin(svgMousePoint, getBboxFromSelection(this.childDz))) {\n            !isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n            !isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n            this.childDz.attr(\"stroke\", \"blue\");\n            this.childDzText.attr(\"fill\", \"blue\");\n            siblingGhostBody.attr(\"stroke\", \"black\");\n            this.activeDz = this.childDz;\n          }\n          else if (siblingGhostBody.node() != null && isPointWithin(svgMousePoint, getBboxFromSelection(siblingGhostBody))) {\n            !isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n            !isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n            isChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n            isChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n            siblingGhostBody.attr(\"stroke\", \"blue\");\n            this.activeDz = \"sibling\";\n          }\n        }\n      }, onDrop: function(dragEl: Element) {\n        if (this.dropEl != null && this.activeDz != null) {\n          let dropGot = this.dropEl.attr(\"data-gotCode\");\n          let dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === dropGot; });\n          let dragGot = d3.select(dragEl).attr(\"id\");\n\n          if (this.activeDz === this.childDz) {\n            if (dropNode.data.children.length == 0) {\n              that.addChild(that.currentHierarchy.code, dropGot, dragGot);\n            }\n            else {\n              let youngest = \"\";\n\n              for (let i = 0; i < dropNode.data.children.length; ++i) {\n                youngest = youngest + dropNode.data.children[i].geoObjectType;\n\n                if (i < dropNode.data.children.length - 1) {\n                  youngest = youngest + \",\";\n                }\n              }\n\n              that.insertBetweenTypes(that.currentHierarchy.code, dropGot, dragGot, youngest);\n            }\n          }\n          else if (this.activeDz === this.parentDz) {\n            if (dropNode.parent == null) {\n              that.insertBetweenTypes(that.currentHierarchy.code, \"ROOT\", dragGot, dropGot);\n            }\n            else {\n              that.insertBetweenTypes(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, dragGot, dropGot);\n            }\n          }\n          else if (this.activeDz === \"sibling\") {\n            that.addChild(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, d3.select(dragEl).attr(\"id\"));\n          }\n        }\n        this.clearDropZones();\n        this.clearGhostNodes(true);\n      }, clearDropZones: function() {\n        if (this.dropEl != null) {\n          this.dropEl.attr(\"stroke\", null);\n        }\n\n        this.dropEl = null;\n        this.activeDz = null;\n\n        this.childDz = null;\n        this.parentDz = null;\n\n        d3.select(\".svg-dropZone-g\").remove();\n\n      }, clearGhostNodes: function(renderTree: boolean) {\n        if (this.ghostCode != null) {\n          let ghostNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.ghostingCode === this.ghostCode; });\n\n          if (ghostNode != null) {\n            let parentIndex = null;\n            for (let i = 0; i < ghostNode.parent.data.children.length; ++i) {\n              let hn: any = ghostNode.parent.data.children[i];\n\n              if (hn.ghostingCode === this.ghostCode) {\n                parentIndex = i;\n              }\n            };\n\n            if (parentIndex != null) {\n              ghostNode.parent.data.children.splice(parentIndex, 1);\n              if (renderTree) {\n                that.renderTree();\n              }\n            }\n          }\n\n          this.ghostCode = null;\n        }\n      }\n    });\n\n    // GeoObjectTypes and Hierarchies\n    let deltaX: number, deltaY: number, width: number;\n    let sidebarDragHandler = d3.drag()\n      .on(\"start\", function(event: any) {\n        let canDrag = d3.select(this).attr(\"data-candrag\");\n        if (canDrag === \"false\") {\n          return;\n        }\n\n        let rect = this.getBoundingClientRect();\n        deltaX = rect.left - event.sourceEvent.pageX;\n        deltaY = rect.top - event.sourceEvent.pageY;\n        width = rect.width;\n      })\n      .on(\"drag\", function(event: any) {\n        let canDrag = d3.select(this).attr(\"data-candrag\");\n        if (canDrag === \"false\") {\n          return;\n        }\n\n        d3.select(\".g-context-menu\").remove();\n\n        let selThis = d3.select(this);\n\n        // Kind of a dumb hack, but if we hide our drag element for a sec, then we can check what's underneath it.\n        selThis.style(\"display\", \"none\");\n\n        let target = document.elementFromPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        selThis.style(\"display\", null);\n\n        for (let i = 0; i < dropTargets.length; ++i) {\n          dropTargets[i].onDrag(this, target, event);\n        }\n\n        // Move the GeoObjectType with the pointer when they move their mouse\n        selThis\n          .classed(\"dragging\", true)\n          .style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n          .style(\"top\", (event.sourceEvent.pageY + deltaY) + \"px\")\n          .style(\"width\", width + \"px\");\n\n        // If they are moving a GOT group then we have to move the children as well \n        if (selThis.classed(\"got-group-parent\")) {\n          let index = 1;\n          d3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n            let li: any = this;\n            let child = d3.select(li);\n\n            child\n              .classed(\"dragging\", true)\n              .style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n              .style(\"top\", (event.sourceEvent.pageY + deltaY + (li.getBoundingClientRect().height + 2) * index) + \"px\")\n              .style(\"width\", width + \"px\");\n\n            index++;\n          });\n        }\n      }).on(\"end\", function(event: any) {\n        let selThis = d3.select(this)\n          .classed(\"dragging\", false)\n          .style(\"left\", null)\n          .style(\"top\", null)\n          .style(\"width\", null);\n\n        // If they are moving a GOT group then we have to reset the children as well \n        if (selThis.classed(\"got-group-parent\")) {\n          d3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n            let child = d3.select(this);\n\n            child\n              .classed(\"dragging\", false)\n              .style(\"left\", null)\n              .style(\"top\", null)\n              .style(\"width\", null);\n          });\n        }\n\n        for (let i = 0; i < dropTargets.length; ++i) {\n          dropTargets[i].onDrop(this, event);\n        }\n      });\n\n    sidebarDragHandler(d3.selectAll(\".sidebar-section-content ul.list-group li.got-li-item\"));\n  }\n\n  private registerSvgHandlers(): void {\n    let hierarchyComponent = this;\n\n    // SVG Drag Handler\n    let deltaX: number, deltaY: number, width: number;\n    let startPoint: any;\n    let svgGot: SvgHierarchyNode;\n    let svgDragHandler = d3.drag()\n      .on(\"start\", function(event: any) {\n        let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n        // let select = d3.select(this);\n\n        svgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n\n\n        // d3.selectAll(\".svg-got-relatedhiers-button\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     return -1\n        //   }\n        //   else {\n        //     return 1\n        //   }\n        // });\n\n        //   d3.selectAll(\".svg-got-body-rect\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     return -1\n        //   }\n        //   else {\n        //     return 1\n        //   }\n        // });\n\n        // d3.selectAll(\".svg-got-header-rect\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     console.log(\"no --> \",a.data.geoObjectType)\n        //     return -1\n        //   }\n        //   else {\n        //     console.log(\"yes --> \",a.data.geoObjectType)\n        //     return 1\n        //   }\n        // });\n\n        startPoint = svgGot.getPos();\n\n        deltaX = startPoint.x - svgMousePoint.x;\n        deltaY = startPoint.y - svgMousePoint.y;\n      })\n      .on(\"drag\", function(event: any) {\n\n        d3.select(\".g-context-menu\").remove();\n\n        let svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        svgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n        svgGot.setPos(svgMousePoint.x + deltaX, svgMousePoint.y + deltaY, true);\n\n      }).on(\"end\", function(event: any) {\n\n        let bbox: string[] = d3.select(\"#svg\").attr(\"viewBox\").split(\" \");\n\n        svgGot.setPos(startPoint.x, startPoint.y, false);\n\n        // if (!isBboxPartiallyWithin(svgGot.getBbox(), { x: parseInt(bbox[0]), y: parseInt(bbox[1]), width: parseInt(bbox[2]), height: parseInt(bbox[3]) })) {\n\n        //   if (hierarchyComponent.isOrganizationRA(hierarchyComponent.currentHierarchy.organizationCode)) {\n        //     let obj = hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n        //     hierarchyComponent.bsModalRef = hierarchyComponent.modalService.show(ConfirmModalComponent, {\n        //       animated: true,\n        //       backdrop: true,\n        //       ignoreBackdropClick: true,\n        //     });\n\n        //     let message = hierarchyComponent.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n        //     message = message.replace(\"{label}\", obj.label.localizedValue);\n\n        //     hierarchyComponent.bsModalRef.content.message = message;\n        //     hierarchyComponent.bsModalRef.content.data = obj.code;\n\n        //     (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onConfirm.subscribe(data => {\n        //       let treeNode = svgGot.getTreeNode();\n        //       let parent = null;\n        //       if (treeNode.parent == null) {\n        //         parent = \"ROOT\";\n        //       }\n        //       else {\n        //         if (treeNode.parent.data.inheritedHierarchyCode != null) {\n        //           parent = \"ROOT\";\n        //         }\n        //         else {\n        //           parent = treeNode.parent.data.geoObjectType;\n        //         }\n        //       }\n\n        //       hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { svgGot.setPos(startPoint.x, startPoint.y, false); });\n        //     });\n\n        //     (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n        //       svgGot.setPos(startPoint.x, startPoint.y, false);\n        //     });\n        //   }\n        //   else {\n        //     svgGot.setPos(startPoint.x, startPoint.y, false);\n        //   }\n\n        // }\n        // else {\n        //   svgGot.setPos(startPoint.x, startPoint.y, false);\n        // }\n\n      });\n\n    svgDragHandler(d3.selectAll(\".svg-got-body-rect[data-inherited=false],.svg-got-label-text[data-inherited=false],.svg-got-header-rect[data-inherited=false]\"));\n  }\n\n  public findGeoObjectTypeByCode(code: string): GeoObjectType {\n    for (let i = 0; i < this.geoObjectTypes.length; ++i) {\n      let got: GeoObjectType = this.geoObjectTypes[i];\n\n      if (got.code === code) {\n        return got;\n      }\n    }\n  }\n\n  public findHierarchyByCode(code: string): HierarchyType {\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let ht: HierarchyType = this.hierarchies[i];\n\n      if (ht.code === code) {\n        return ht;\n      }\n    }\n  }\n  \n  public findOrganizationByCode(code: string): Organization {\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      if (org.code === code) {\n        return org;\n      }\n    }\n  }\n\n  private addChild(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): void {\n    this.hierarchyService.addChildToHierarchy(hierarchyCode, parentGeoObjectTypeCode, childGeoObjectTypeCode).then((ht: HierarchyType) => {\n      let got = this.findGeoObjectTypeByCode(childGeoObjectTypeCode);\n\n      let index = null;\n      for (let i = 0; i < got.relatedHierarchies.length; ++i) {\n        if (got.relatedHierarchies[i] === hierarchyCode) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index == null) {\n        got.relatedHierarchies.push(hierarchyCode);\n      }\n\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  private insertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): void {\n    this.hierarchyService.insertBetweenTypes(hierarchyCode, parentGeoObjectTypeCode, middleGeoObjectTypeCode, youngestGeoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  isRA(): boolean {\n    return this.authService.isRA();\n  }\n\n  isOrganizationRA(orgCode: string, dropZone: boolean = false): boolean {\n    return this.isSRA || this.authService.isOrganizationRA(orgCode);\n  }\n\n  getTypesByOrg(org: Organization): GeoObjectType[] {\n    let orgTypes: GeoObjectType[] = [];\n\n    for (let i = 0; i < this.geoObjectTypes.length; ++i) {\n      let geoObjectType: GeoObjectType = this.geoObjectTypes[i];\n\n      if (geoObjectType.organizationCode === org.code) {\n        orgTypes.push(geoObjectType);\n      }\n    }\n\n    return orgTypes;\n  }\n\n  getHierarchiesByOrg(org: Organization): HierarchyType[] {\n    let orgHierarchies: HierarchyType[] = [];\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchy: HierarchyType = this.hierarchies[i];\n\n      if (hierarchy.organizationCode === org.code) {\n        orgHierarchies.push(hierarchy);\n      }\n    }\n\n    return orgHierarchies;\n  }\n\n  public refreshAll(desiredHierarchy: HierarchyType) {\n\n    // Clear the types to then refresh\n    this.geoObjectTypes = [];\n\n    this.registryService.init().then(response => {\n      this.localizeService.setLocales(response.locales);\n\n      this.setGeoObjectTypes(response.types);\n\n      this.organizations = response.organizations;\n\n      this.organizations.forEach(org => {\n        if (this.isOrganizationRA(org.code)) {\n          this.userOrganization = org.code;\n        }\n      })\n\n      let pos = this.getGeoObjectTypePosition(\"ROOT\");\n      if (pos) {\n        this.geoObjectTypes.splice(pos, 1);\n      }\n\n      this.setHierarchies(response.hierarchies);\n\n      this.setNodesOnInit(desiredHierarchy);\n\n      this.updateViewDatastructures();\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public setGeoObjectTypes(types: GeoObjectType[]): void {\n\n    // Set group parent types\n    this.setAbstractTypes(types);\n\n    // Set GeoObjectTypes that aren't part of a group.\n    types.forEach(type => {\n      if (!type.isAbstract) {\n        if (!type.superTypeCode) {\n          this.geoObjectTypes.push(type);\n        }\n      }\n    });\n\n    // Sort aphabetically because all other types to add will be children in a group.\n    this.geoObjectTypes.sort((a, b) => {\n      if (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n      else if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n      else return 0;\n    });\n\n    // Add group children\n    types.forEach(type => {\n      if (!type.isAbstract) {\n        if (type.superTypeCode && type.superTypeCode.length > 0) {\n\n          for (let i = 0; i < this.geoObjectTypes.length; i++) {\n            let setType = this.geoObjectTypes[i];\n            if (type.superTypeCode === setType.code) {\n              this.geoObjectTypes.splice(i + 1, 0, type);\n            }\n          }\n\n        }\n      }\n    });\n\n  }\n\n  private setAbstractTypes(types: GeoObjectType[]): void {\n    types.forEach(type => {\n      if (type.isAbstract) {\n        this.geoObjectTypes.push(type);\n      }\n    });\n  }\n\n  public updateViewDatastructures(): void {\n    this.hierarchiesByOrg = [];\n    this.typesByOrg = [];\n\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      this.hierarchiesByOrg.push({ org: org, hierarchies: this.getHierarchiesByOrg(org) });\n      this.typesByOrg.push({ org: org, types: this.getTypesByOrg(org) });\n    }\n\n    this.geoObjectTypes.forEach((got: GeoObjectType) => {\n      got.canDrag = this.calculateCanDrag(got);\n      got.relatedHierarchies = this.calculateRelatedHierarchies(got);\n    });\n\n    this.onFilterChange();\n  }\n\n  public excludeHierarchyTypeDeletes(hierarchy: HierarchyType) {\n    return (this.hierarchyTypeDeleteExclusions.indexOf(hierarchy.code) !== -1);\n  }\n\n  public excludeGeoObjectTypeDeletes(geoObjectType: GeoObjectType) {\n    return (this.geoObjectTypeDeleteExclusions.indexOf(geoObjectType.code) !== -1);\n  }\n\n  private setNodesOnInit(desiredHierarchy: HierarchyType): void {\n\n    let index = -1;\n\n    if (desiredHierarchy != null) {\n      index = this.hierarchies.findIndex(h => h.code === desiredHierarchy.code);\n    }\n    else if (this.hierarchies.length > 0) {\n      index = 0;\n    }\n\n    if (index > -1) {\n      const hierarchy = this.hierarchies[index];\n\n      this.setCurrentHierarchy(hierarchy);\n\n      this.renderTree();\n    }\n  }\n\n  private getHierarchy(hierarchyId: string): HierarchyType {\n    let target: HierarchyType = null;\n    this.hierarchies.forEach(hierarchy => {\n      if (hierarchyId === hierarchy.code) {\n        target = hierarchy;\n      }\n    });\n\n    return target;\n  }\n\n  private setHierarchies(data: HierarchyType[]): void {\n    let hierarchies: HierarchyType[] = [];\n    data.forEach((hierarchyType, index) => {\n\n      if (hierarchyType.rootGeoObjectTypes.length > 0) {\n        hierarchyType.rootGeoObjectTypes.forEach(rootGeoObjectType => {\n          this.processHierarchyNodes(rootGeoObjectType);\n        })\n      }\n\n      hierarchies.push(hierarchyType);\n\n    });\n\n    this.hierarchies = hierarchies\n\n    this.hierarchies.sort((a, b) => {\n      if (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n      else if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n      else return 0;\n    });\n  }\n\n  private processHierarchyNodes(node: HierarchyNode) {\n    if (node != null) {\n      node.label = this.getHierarchyLabel(node.geoObjectType);\n\n      node.children.forEach(child => {\n        this.processHierarchyNodes(child);\n      })\n    }\n  }\n\n  private getHierarchyLabel(geoObjectTypeCode: string): string {\n    let label: string = null;\n    this.geoObjectTypes.forEach(function(gOT) {\n      if (gOT.code === geoObjectTypeCode) {\n        label = gOT.label.localizedValue;\n      }\n    });\n\n    return label;\n  }\n\n  public handleOnMenu(node: any, $event: any): void {\n    if (this.isOrganizationRA(this.currentHierarchy.organizationCode)) {\n      this.contextMenuService.show.next({\n        contextMenu: (node.data.childType !== null ? this.nodeMenuComponent : this.leafMenuComponent),\n        event: $event,\n        item: node,\n      });\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n    else {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n  }\n\n  public treeNodeOnClick(node: any, $event: any): void {\n\n    node.treeModel.setFocusedNode(node);\n\n    if (node.treeModel.isExpanded(node)) {\n      node.collapse();\n    }\n    else {\n      node.treeModel.expandAll();\n    }\n  }\n\n  public hierarchyOnClick(event: any, item: HierarchyType) {\n    this.setCurrentHierarchy(item);\n    this.renderTree();\n  }\n\n  public createHierarchy(): void {\n    this.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n\n    (<CreateHierarchyTypeModalComponent>this.bsModalRef.content).onHierarchytTypeCreate.subscribe(data => {\n\n      this.hierarchies.push(data);\n\n      this.hierarchies.sort((a: HierarchyType, b: HierarchyType) => {\n        var nameA = a.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n\n        if (nameA < nameB) {\n          return -1; //nameA comes first\n        }\n\n        if (nameA > nameB) {\n          return 1; // nameB comes first\n        }\n\n        return 0;  // names must be equal\n      });\n\n      this.updateViewDatastructures();\n    });\n  }\n\n  public deleteHierarchyType(obj: HierarchyType): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n    this.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n    this.bsModalRef.content.data = obj.code;\n    this.bsModalRef.content.type = \"DANGER\";\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n    (<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n      this.removeHierarchyType(data);\n    });\n  }\n\n  public editHierarchyType(obj: HierarchyType, readOnly: boolean): void {\n\n    this.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n    this.bsModalRef.content.edit = true;\n    this.bsModalRef.content.readOnly = readOnly;\n    this.bsModalRef.content.hierarchyType = obj;\n    this.bsModalRef.content.onHierarchytTypeCreate.subscribe(data => {\n      let pos = this.getHierarchyTypePosition(data.code);\n\n      this.hierarchies[pos].label = data.label;\n      this.hierarchies[pos].description = data.description;\n      this.hierarchies[pos].progress = data.progress;\n      this.hierarchies[pos].acknowledgement = data.acknowledgement;\n      this.hierarchies[pos].disclaimer = data.disclaimer;\n      this.hierarchies[pos].useConstraints = data.useConstraints;\n      this.hierarchies[pos].accessConstraints = data.accessConstraints;\n      this.hierarchies[pos].contact = data.contact;\n      this.hierarchies[pos].phoneNumber = data.phoneNumber;\n      this.hierarchies[pos].email = data.email;\n\n      this.updateViewDatastructures();\n\n      if (this.currentHierarchy.code === data.code) {\n        this.setCurrentHierarchy(this.hierarchies[pos]);\n\n        this.renderTree();\n      }\n    });\n  }\n\n  setCurrentHierarchy(hierarchyType: HierarchyType): void {\n    this.currentHierarchy = hierarchyType;\n  }\n\n  isPrimaryHierarchy(hierarchy: HierarchyType): boolean {\n    // return hierarchy.isPrimary;\n    return hierarchy.code === this.currentHierarchy.code;\n  }\n\n  public removeHierarchyType(code: string): void {\n    this.hierarchyService.deleteHierarchyType(code).then(response => {\n\n      let pos = this.getHierarchyTypePosition(code);\n      this.hierarchies.splice(pos, 1);\n      this.updateViewDatastructures();\n\n      if (this.hierarchies.length > 0) {\n        this.setCurrentHierarchy(this.hierarchies[0]);\n      }\n      else {\n        this.currentHierarchy = null;\n      }\n\n      this.renderTree();\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public createGeoObjectType(groupSuperType: GeoObjectType, isAbstract: boolean, org: Organization): void {\n    this.bsModalRef = this.modalService.show(CreateGeoObjTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n    this.bsModalRef.content.init(org, this.geoObjectTypes, groupSuperType, isAbstract);\n\n    this.bsModalRef.content.onGeoObjTypeCreate.subscribe(data => {\n\n      data.relatedHierarchies = this.calculateRelatedHierarchies(data);\n\n      this.refreshAll(this.currentHierarchy);\n\n    });\n  }\n\n  public deleteGeoObjectType(obj: GeoObjectType): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n    this.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n    this.bsModalRef.content.data = obj.code;\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n    this.bsModalRef.content.type = ModalTypes.danger;\n\n    (<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n      this.removeGeoObjectType(data);\n    });\n  }\n\n  public removeGeoObjectType(code: string, errCallback: (err: HttpErrorResponse) => void = null): void {\n    this.registryService.deleteGeoObjectType(code).then(response => {\n\n      let pos = this.getGeoObjectTypePosition(code);\n      this.geoObjectTypes.splice(pos, 1);\n      \n      this.refreshAll(this.currentHierarchy);\n\n    }).catch((err: HttpErrorResponse) => {\n      if (errCallback != null) {\n        errCallback(err);\n      }\n      this.error(err);\n    });\n  }\n\n  public manageGeoObjectType(geoObjectType: GeoObjectType, readOnly: boolean): void {\n\n    this.bsModalRef = this.modalService.show(ManageGeoObjectTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'manage-geoobjecttype-modal'\n    });\n\n    geoObjectType.attributes.sort((a, b) => {\n      if (a.label.localizedValue < b.label.localizedValue) return -1;\n      else if (a.label.localizedValue > b.label.localizedValue) return 1;\n      else return 0;\n    });\n    this.bsModalRef.content.geoObjectType = geoObjectType;\n    this.bsModalRef.content.readOnly = readOnly;\n\n    (<ManageGeoObjectTypeModalComponent>this.bsModalRef.content).onGeoObjectTypeSubmitted.subscribe(data => {\n\n      if (data.isAbstract) {\n        this.refreshAll(this.currentHierarchy);\n      }\n      else {\n        const position = this.getGeoObjectTypePosition(data.code);\n\n        if (position !== -1) {\n          this.geoObjectTypes[position] = data;\n        }\n\n        // Update all of the hierarchies for the new geo object type\n        this.updateViewDatastructures();\n\n        this.hierarchies.forEach((hierarchyType: HierarchyType) => {\n          this.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n        });\n\n        // Update the current hierarchy view\n        if (this.currentHierarchy != null) {\n          this.processHierarchyNodes(this.currentHierarchy.rootGeoObjectTypes[0]);\n        }\n\n        this.renderTree();\n      }\n    });\n  }\n\n  private getHierarchyTypePosition(code: string): number {\n    for (let i = 0; i < this.hierarchies.length; i++) {\n      let obj = this.hierarchies[i];\n      if (obj.code === code) {\n        return i;\n      }\n    }\n  }\n\n  private getGeoObjectTypePosition(code: string): number {\n    for (let i = 0; i < this.geoObjectTypes.length; i++) {\n      let obj = this.geoObjectTypes[i];\n      if (obj.code === code) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  public refreshPrimaryHierarchy(hierarchyType: HierarchyType) {\n    this.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchy = this.hierarchies[i];\n\n      if (hierarchy.code === hierarchyType.code) {\n        this.hierarchies[i] = hierarchyType;\n\n        this.setCurrentHierarchy(hierarchyType);\n      }\n    }\n\n    this.updateViewDatastructures();\n\n    this.renderTree();\n  }\n\n  public removeFromHierarchy(parentGotCode, gotCode, errCallback: (err: HttpErrorResponse) => void = null): void {\n    const that = this;\n\n    this.hierarchyService.removeFromHierarchy(this.currentHierarchy.code, parentGotCode, gotCode).then(hierarchyType => {\n\n      let got = that.findGeoObjectTypeByCode(gotCode);\n\n      let index = null;\n      for (let i = 0; i < got.relatedHierarchies.length; ++i) {\n        if (got.relatedHierarchies[i] === hierarchyType.code) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index != null) {\n        got.relatedHierarchies.splice(index, 1);\n      }\n\n      that.refreshPrimaryHierarchy(hierarchyType);\n\n    }).catch((err: HttpErrorResponse) => {\n      if (errCallback != null) {\n        errCallback(err);\n      }\n\n      this.error(err);\n    });\n  }\n\n  public isActive(item: HierarchyType) {\n    return this.currentHierarchy === item;\n  };\n\n  onFilterChange(): void {\n    const label = this.filter.toLowerCase();\n\n    this.filteredHierarchiesByOrg = [];\n    this.filteredTypesByOrg = [];\n\n    this.hierarchiesByOrg.forEach((item: { org: Organization, hierarchies: HierarchyType[] }) => {\n\n      const filtered = item.hierarchies.filter((hierarchy: HierarchyType) => {\n        const index = hierarchy.label.localizedValue.toLowerCase().indexOf(label);\n\n        return (index !== -1);\n      });\n\n      this.filteredHierarchiesByOrg.push({ org: item.org, hierarchies: filtered });\n    });\n\n    this.typesByOrg.forEach((item: { org: Organization, types: GeoObjectType[] }) => {\n\n      const filtered = item.types.filter((type: GeoObjectType) => {\n        const index = type.label.localizedValue.toLowerCase().indexOf(label);\n\n        return (index !== -1);\n      });\n\n      this.filteredTypesByOrg.push({ org: item.org, types: filtered });\n    });\n\n    setTimeout(() => { this.registerDragHandlers(); }, 500);\n  }\n\n  handleInheritHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string) {\n    this.hierarchyService.setInheritedHierarchy(hierarchyTypeCode, inheritedHierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  handleUninheritHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string) {\n    this.hierarchyService.removeInheritedHierarchy(hierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public error(err: HttpErrorResponse): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"new-admin-design-main\" style=\"overflow-y:hidden;\">\n\t<cgr-header></cgr-header>\n\n\t<loading-bar></loading-bar>\n\n\t<div id=\"app-container\" class=\"container-fluid\">\n\n\t\t<!--   <h2> <localize key=\"hierarchy.management.title\"></localize> </h2> -->\n\t\t<div class=\"row\">\n\n\t\t\t<nav class=\"col-md-3 hierarchy-sidebar\">\n\n\t\t\t\t<div class=\"row\" style=\"padding: 5px 5px;\">\n\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" #searchInput\n\t\t\t\t\t\t\t[placeholder]=\"'hierarchy.sidebar.searchAll' | localize\" [(ngModel)]=\"filter\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<accordion [isAnimated]=\"true\" [closeOthers]=\"false\">\n\t\t\t\t\t<accordion-group [panelClass]=\"'hierarchy-sidebar-content'\" style=\"border-radius: 0;\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i style=\"margin-right:10px;\" class=\"fa fa-circle\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.geoObjectTypes\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let typeByOrg of filteredTypesByOrg;\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{typeByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || typeByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createGeoObjectType(null, false, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newGeoObjectType\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n                                        \n                                        <button (click)=\"createGeoObjectType(null, true, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n                                            style=\"margin-bottom:20px;margin-left:10px;min-width:45%;\">\n                                            <localize key=\"hierarchies.add.group.button.label\"></localize>\n                                        </button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li class=\"list-group-item got-li-item\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-superTypeCode]=\"(type.superTypeCode && type.superTypeCode.length > 0) ? type.superTypeCode : null\"\n\t\t\t\t\t\t\t\t\t                  *ngFor=\"let type of typeByOrg.types\" [id]=\"type.code\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-canDrag]=\"type.canDrag\"\n                                    [ngClass]=\"{'got-group-parent' : (type.isAbstract), 'got-group-child' : type.superTypeCode && type.superTypeCode.length > 0}\" >\n\t\t\t\t\t\t\t\t\t\t{{type.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"type.permissions.includes('WRITE')\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n                                            \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"!excludeGeoObjectTypeDeletes(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteGeoObjectType(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\">\n                                            </i>\n                                                \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\">\n                                            </i>\n                                            \n                                            <i *ngIf=\"(type.isAbstract)\" class=\"fa fa-plus clickable pull-right\"\n                                                (click)=\"createGeoObjectType(type, false, typeByOrg.org)\"\n                                                title=\"add\">\n                                            </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!type.permissions.includes('WRITE') && type.permissions.includes('READ')\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t\t<accordion-group [isOpen]='true' class=\"sidebar-section\" style=\"border-radius: 0;\" [panelClass]=\"'hierarchy-sidebar-content'\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.hierarchies\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let hierarchyByOrg of filteredHierarchiesByOrg\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{hierarchyByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || hierarchyByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createHierarchy()\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newHierarchy\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li *ngFor=\"let hierarchy of hierarchyByOrg.hierarchies;\" [id]=\"hierarchy.code\"\n\t\t\t\t\t\t\t\t\t\tclass=\"list-group-item hier-li-item clickable\"\n\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'primary': (currentHierarchy != null && hierarchy.code === currentHierarchy.code), 'active': isActive(hierarchy)}\"\n\t\t\t\t\t\t\t\t\t\t(click)=\"hierarchyOnClick($event,hierarchy)\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i> {{hierarchy.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i *ngIf=\"!excludeHierarchyTypeDeletes(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteHierarchyType(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t</accordion>\n\t\t\t</nav>\n\n\t\t\t<div class=\"col-md-9 hierarchy-content\">\n\t\t\t\t<div id=\"overflow-div\">\n\n\t\t\t\t\t<div *ngIf=\"currentHierarchy != null && (currentHierarchy.rootGeoObjectTypes == null || currentHierarchy.rootGeoObjectTypes.length == 0)\">\n                      <div *ngIf=\"isOrganizationRA(currentHierarchy.organizationCode, true)\" id=\"emptyHierarchyDropzone\" class=\"drop-box-container\">\n\t\t\t\t\t\t<div class=\"hierarchy-drop-box\">\n\t\t\t\t\t\t\t<div class=\"inner-drop-box\">\n\t\t\t\t\t\t\t\t<p class=\"upload-text\">\n\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.content.dragGotToHierarchy\"></localize>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                      </div>\n                      <div *ngIf=\"!isOrganizationRA(currentHierarchy.organizationCode, true)\">\n                          <p class=\"upload-text\">\n                              <localize key=\"hierarchy.content.emptyHierarchy\"></localize>\n                          </p>\n                      </div>\n                    </div>\n\n\t\t\t\t\t<div id=\"svgHolder\">\n\t\t\t\t\t\t<!-- <svg id=\"graph\" style=\"width:1200px; height:750px\"></svg> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"NodeTooltip\" class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-form\">\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                      <label>\n                        <localize key=\"hierarchy.nodeTooltip.hierarchy\"></localize>\n                      </label>\n                    </div>\n                    <div class=\"holder\">\n                      <label id=\"hierarchyLabel\"></label>\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\t\t\t\t\t<!-- \n\t      <div class=\"col-md-4\">\n\t        <h3> \n\t            <localize key=\"hierarchy.current.management.panel.title\"></localize> \n\t            <span *ngIf=\"currentHierarchy\"> {{currentHierarchy.label.localizedValue}}</span>\n\t        </h3>\n\t        <hr>\n\t        <div *ngIf=\"nodes.length > 0\" class=\"tree\">\n\t          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n\t        </div>\n\t        <div *ngIf=\"currentHierarchy && nodes.length === 0\">\n\t          <div>\n\t            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"isRA()\" (click)=\"addChildAndRootToHierarchy()\"><localize key=\"hierarchy.current.management.panel.button.add\"></localize></button>\n\t          </div>\n\t        </div>\n\t      </div>\n\t      -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { ManageGeoObjectTypeModalState } from '@registry/model/registry';\r\n\r\n@Injectable()\r\nexport class GeoObjectTypeManagementService {\r\n\r\n\tmodalState: ManageGeoObjectTypeModalState;\r\n\tprivate modalStateChangedSource = new Subject<ManageGeoObjectTypeModalState>();\r\n\tmodalStepChange = this.modalStateChangedSource.asObservable();\r\n\r\n\tconstructor() { }\r\n\r\n\tpublic getModalState(): ManageGeoObjectTypeModalState {\r\n\t\treturn this.modalState;\r\n\t}\r\n\r\n\tpublic setModalState(state: ManageGeoObjectTypeModalState): void {\r\n\t\tthis.modalState = state;\r\n\r\n\t\tthis.modalStateChangedSource.next(this.modalState);\r\n\t}\r\n}\r\n","import { Component, OnInit, AfterViewInit, ElementRef, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { NgControl, Validators, FormBuilder } from '@angular/forms';\n\nimport { GeoObjectType, Attribute } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component({\n\tselector: 'attribute-input',\n\ttemplateUrl: './attribute-input.component.html',\n\tstyleUrls: ['./attribute-input.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms'))\n\t\t\t//   transition('show => none', animate('100ms'))\n\t\t])\n\t]\n})\nexport class AttributeInputComponent implements OnInit {\n\n\t@Input() disableCodeField: boolean = false;\n\t@Input() excludeDescription: boolean = false;\n\t@Input() isDecimal: boolean = false;\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() attributeChange = new EventEmitter<Attribute>();\n\tmessage: string = null;\n\n\tstate: string = 'none';\n\n\tconstructor(private hierarchyService: HierarchyService, private cdr: ChangeDetectorRef) {\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnChanges() {\n\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\ttoggleIsUnique(): void {\n\t\tthis.attribute.unique = !this.attribute.unique;\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.attribute.code) {\n\n\t\t\t// if code has a space\n\t\t\tif (this.attribute.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.attribute.label.localeValues[0].value.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal) {\n\t\t\t\tconsole.log(this.attribute);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isDecimal && (this.attribute.precision == null || this.attribute.precision.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal && (this.attribute.scale == null || this.attribute.scale.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","<div >\n  <div class=\"row-holder\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.code\"></localize>\n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input autofocus type=\"text\" [disabled]=\"disableCodeField\" [(ngModel)]=\"attribute.code\" name=\"code\" required geoObjectAttributeCode>\n      </span>\n    </div>\n  </div>\n\n  <localized-input [(value)]=\"attribute.label\" key=\"data.property.label.label\"></localized-input>\n  <localized-text *ngIf=\"!excludeDescription\" [(value)]=\"attribute.description\" key=\"data.property.label.description\"></localized-text>\n\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.length\"></localize>        \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.precision\" name=\"precision\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.decimal\"></localize>      \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.scale\" name=\"scale\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'publish-modal',\n\ttemplateUrl: './publish-modal.component.html',\n\tstyleUrls: []\n})\nexport class PublishModalComponent implements OnInit {\n\tcurrentDate : Date = new Date();\n\tmessage: string = null;\n\t\n\tmaster: any;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonMasterListChange: Subject<MasterList>;\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n    /*\n     * List of geo object types from the system\n     */\n\treadonly: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\tedit: boolean = false;\n\n\tisNew: boolean = false;\n\n\tconstructor(private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef, private authService: AuthService,\n\t\tprivate dateService: DateService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.onMasterListChange = new Subject();\n\n\t\tif (!this.master || !this.readonly) {\n\t\t\tthis.iService.listGeoObjectTypes(true).then(types => {\n\n\t\t\t\tvar myOrgTypes = [];\n\t\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\t\tconst orgCode = types[i].orgCode;\n\t\t\t\t\tconst typeCode = types[i].superTypeCode != null ? types[i].superTypeCode : types[i].code;\n\n\t\t\t\t\tif (this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.types = myOrgTypes;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.master = {\n\t\t\t\toid: null,\n\t\t\t\ttypeCode: '',\n\t\t\t\tdisplayLabel: this.lService.create(),\n\t\t\t\tcode: '',\n\t\t\t\trepresentativityDate: null,\n\t\t\t\tpublishingStartDate: null,\n\t\t\t\tpublishDate: null,\n\t\t\t\tlistAbstract: '',\n\t\t\t\tprocess: '',\n\t\t\t\tprogress: '',\n\t\t\t\taccessConstraints: '',\n\t\t\t\tuseConstraints: '',\n\t\t\t\tacknowledgements: '',\n\t\t\t\tdisclaimer: '',\n\t\t\t\tcontactName: '',\n\t\t\t\torganization: '',\n\t\t\t\ttelephoneNumber: '',\n\t\t\t\temail: '',\n\t\t\t\thierarchies: [],\n\t\t\t\tsubtypeHierarchies: [],\n\t\t\t\tleaf: false,\n\t\t\t\tfrequency: 'ANNUAL',\n\t\t\t\tisMaster: null,\n\t\t\t\tvisibility: null\n\t\t\t};\n\t\t}\n\t}\n\t\n\tngAfterContentInit(){\n\t\t\n\t}\n\n\tinit(org: MasterListByOrg): void {\n\t\tthis.master.organization = org.oid;\n\t}\n\n\tgetIsDisabled(event): boolean {\n\t\tlet elClasses = event.target.classList;\n\t\tfor (let i = 0; i < elClasses.length; i++) {\n\t\t\tlet c = elClasses[i];\n\t\t\tif (c === 'disabled') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tonChange(): void {\n\n\t\tif (this.master.typeCode != null && this.master.typeCode.length > 0) {\n\t\t\tthis.iService.getHierarchiesForType(this.master.typeCode, true).then(hierarchies => {\n\t\t\t\tthis.master.hierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.iService.getHierarchiesForSubtypes(this.master.typeCode, false).then(hierarchies => {\n\t\t\t\tthis.master.subtypeHierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.master.hierarchies = [];\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.createMasterList(this.master).then(response => {\n\n\t\t\tthis.onMasterListChange.next(response);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCancel(): void {\n\t\tthis.bsModalRef.hide()\n\t}\n\t\n\tngOnDestroy() {\n\t\tthis.onMasterListChange.unsubscribe()\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n        <h1 *ngIf=\"isNew\">\n            <localize key=\"type.publish.title\"></localize>\n        </h1>\n        <h1 *ngIf=\"!isNew\">\n            {{master.displayLabel.localizedValue}}\n            <localize key=\"type.publish.view.title\"></localize>\n        </h1>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\" autocomplete=\"off\">\n\n        <fieldset>\n            <div class=\"row-holder\" *ngFor=\"let localeValue of master.displayLabel.localeValues\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.label\"></localize> \n                    <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && !(readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <select id=\"typeCode\" name=\"typeCode\" class=\"select-area\" [(ngModel)]=\"master.typeCode\" (change)=\"onChange()\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && (readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                  <input [(ngModel)]=\"master.typeLabel.localizedValue\" name=\"typeCode\" type=\"text\" class=\"form-control\" disabled />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.code\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.code\" name=\"code\" type=\"text\" class=\"form-control\" [disabled]=\"readonly || edit\" required />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.frequency\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"frequency\" [(ngModel)]=\"master.frequency\" [disabled]=\"readonly\" required #frequency=\"ngModel\">\n                        <option></option>\n                        <option value=\"ANNUAL\"><localize key=\"georegistry.frequency.annual\"></localize></option>\n                        <option value=\"BIANNUAL\"><localize key=\"georegistry.frequency.biannual\"></localize></option>\n                        <option value=\"QUARTER\"><localize key=\"georegistry.frequency.quarter\"></localize></option>\n                        <option value=\"MONTHLY\"><localize key=\"georegistry.frequency.monthly\"></localize></option>\n                    </select>                    \n                    <small *ngIf=\"(edit && frequency.dirty)\" class=\"form-text text-danger\"><localize key=\"masterlist.change.frequency\"></localize></small>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.publishingStartDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <span *ngIf=\"readonly\" style=\"line-height: 40px;\" class=\"date-string-display\">\n                              {{formatDate(master.publishingStartDate)}}\n                    </span>\n                    <date-field *ngIf=\"!readonly\" [(value)]=\"master.publishingStartDate\" [classNames]=\"['form-control']\" label=\"\" [inputName]=\"'publishingStartDate'\" \n                        [allowFutureDates]=\"false\" [required]=\"false\" [disable]=\"readonly\"></date-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"masterlist.visibility\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"visibility\" [(ngModel)]=\"master.visibility\" [disabled]=\"readonly\" required>\n                        <option></option>\n                        <option value=\"PUBLIC\"><localize key=\"masterlist.public\"></localize></option>                        \n                        <option value=\"PRIVATE\"><localize key=\"masterlist.private\"></localize></option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.ismaster\"></localize> </label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"row\">\n                        <div class=\"check-block\" style=\"margin: 10px;\">\n\n                            <div (click)=\"getIsDisabled($event) ? null : master.isMaster = !master.isMaster\" name=\"isMaster\" [ngClass]=\"{'chk-checked' : master.isMaster, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\">\n                                <span></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- RepresentativityDate adn publishDate are being removed from the form but not \n            the backend at this point because there's some discussion around the need for these\n            in the future.  - Justin Lewis Feb 27, 2020 -->\n            <!-- <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.representativityDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.representativityDate\" name=\"representativityDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.publishDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishDate\" name=\"publishDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div> -->\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.listAbstract\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.listAbstract\" name=\"listAbstract\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.process\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.process\" name=\"process\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.progress\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.progress\" name=\"progress\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.accessConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.useConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.acknowledgements\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.acknowledgements\" name=\"acknowledgements\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.disclaimer\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.disclaimer\" name=\"disclaimer\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.contact\"></localize>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.contactName\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.contactName\" name=\"contactName\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.telephoneNumber\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.telephoneNumber\" name=\"telephoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.email\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n\n            <div class=\"row-holder\" *ngIf=\"master.hierarchies.length > 0\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.parents\"></localize>\n                </div>\n            </div>\n\n            <div *ngFor=\"let hierarchy of master.hierarchies\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> {{hierarchy.label}} </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let parent of hierarchy.parents\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : parent.selected = !parent.selected\" [ngClass]=\"{'chk-checked' : parent.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{parent.label}}</label>\n\n                                <!-- <input [(ngModel)]=\"parent.selected\" [name]=\"hierarchy.code + parent.code\" type=\"checkbox\" class=\"form-check\" [disabled]=\"readonly || edit\"/> -->\n                            </div>\n                            <!-- <div class=\"holder\">{{parent.label}}</div> -->\n                            <!-- </div> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"master.subtypeHierarchies.length > 0\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> <localize key=\"masterlist.subtypeHierarchies\"></localize> </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let hierarchy of master.subtypeHierarchies\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : hierarchy.selected = !hierarchy.selected\" [ngClass]=\"{'chk-checked' : hierarchy.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{hierarchy.label}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize [key]=\"readonly ? 'io.back' : 'io.cancel'\"></localize>\n                        </button>\n                        <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                            <localize key=\"io.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n\tstate\n} from '@angular/animations';\n\nimport { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\nimport { DateService } from '@shared/service/date.service';\nimport { AuthService } from '@shared/service';\n\nimport { ManageVersionsModalComponent } from './manage-versions-modal.component';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, AttributeTerm, AttributeDecimal, Term, PRESENT } from '@registry/model/registry';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'geoobject-shared-attribute-editor',\n\ttemplateUrl: './geoobject-shared-attribute-editor.component.html',\n\tstyleUrls: ['./geoobject-shared-attribute-editor.css'],\n\tproviders: [DatePipe],\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]),\n\t\t\ttrigger('slide', [\n\t\t\t\tstate('left', style({ left: 0 })),\n      \t\t\tstate('right', style({ left: '100%' })),\n      \t\t\ttransition('* => *', animate(200))\n\t\t\t])\n\t]]\n})\n\n/**\n * This component is shared between:\n * - crtable (create-update-geo-object action detail)\n * - change-request (for submitting change requests)\n * - master list geoobject editing widget\n * \n * Be wary of changing this component for one usecase and breaking other usecases!\n */\nexport class GeoObjectSharedAttributeEditorComponent implements OnInit, OnChanges {\n\t\n\tisContributorOnly: boolean = false;\n\n\tprivate bsModalRef: BsModalRef;\n\t\n\t@Input() animate: boolean = false;\n\n    /*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\t@Input() preGeoObject: GeoObjectOverTime = null;\n\n\t/*\n \t* The state of the GeoObject being modified\n \t*/\n\t@Input() postGeoObject: GeoObjectOverTime = null;\n\n\n\tcalculatedPreObject: any = {};\n\n\tcalculatedPostObject: any = {};\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\t@Input() attributeExcludes: string[] = [];\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() isNew: boolean = false;\n\n\t@Input() isEditingGeometries = false;\n\n\t@Input() isGeometryInlined = false;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Output() onManageVersion = new EventEmitter<Attribute>();\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() customEvent: boolean = false;\n\n\tmodifiedTermOption: Term = null;\n\tcurrentTermOption: Term = null;\n\tisValid: boolean = true;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\"];\n\n\t@ViewChild(\"attributeForm\") attributeForm;\n\n\tconstructor(private modalService: BsModalService, private lService: LocalizationService, private authService: AuthService, private dateService: DateService) {\n\t\tthis.isContributorOnly = this.authService.isContributerOnly()\n\t}\n\n\tngOnInit(): void {\n\t\t\n\t\tif (this.attributeExcludes != null) {\n\t\t\tthis.geoObjectAttributeExcludes.push.apply(this.geoObjectAttributeExcludes, this.attributeExcludes);\n\n\t\t\tif (!this.isGeometryInlined) {\n\t\t\t\tthis.geoObjectAttributeExcludes.push(\"geometry\");\n\t\t\t}\n\t\t}\n\n\t\tlet geomAttr = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeomAttr = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\t\tif (geomAttr == null) {\n\t\t\tlet geometry: Attribute = new Attribute(\"geometry\", \"geometry\", new LocalizedValue(\"Geometry\", null), new LocalizedValue(\"Geometry\", null), true, false, false, true);\n\t\t\tthis.geoObjectType.attributes.push(geometry);\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.attributeForm.statusChanges.subscribe(result => {\n\t\t\tthis.isValid = (result === \"VALID\" || result === \"DISABLED\");\n\n\t\t\tthis.valid.emit(this.isValid);\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\t\n\t\tif (changes['preGeoObject']) {\n\n\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\n\t\t\tif (this.postGeoObject == null) {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // Object.assign is a shallow copy. We want a deep copy.\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.postGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\t\t\t}\n\n\t\t\tthis.calculate();\n\t\t}\n\t\telse if (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\t\n\tsetBoolean(attribute, value): void {\n\t\tattribute.value = value\n\t}\n\n\tcalculate(): void {\n\t\tthis.calculatedPreObject = this.calculateCurrent(this.preGeoObject);\n\t\tthis.calculatedPostObject = this.calculateCurrent(this.postGeoObject);\n\t\t\n\t\tif (this.geometryEditor != null) {\n\t\t\tthis.geometryEditor.reload();\n\t\t}\n\t}\n\n\tcalculateCurrent(goot: GeoObjectOverTime): any {\n\t\tconst object = {};\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\tobject[attr.code] = null;\n\n\t\t\tif (attr.type === 'local') {\n\t\t\t\tobject[attr.code] =\n\t\t\t\t{\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: this.lService.create()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\tlet values = goot.attributes[attr.code].values;\n\n\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: JSON.parse(JSON.stringify(vot.value))\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value[0]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobject[attr.code] = goot.attributes[attr.code];\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.isChangeOverTime && object[attr.code] == null) {\n\t\t\t\tobject[attr.code] = {\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n\thandleChangeCode(e: any): void {\n\t\tthis.postGeoObject.attributes.code = this.calculatedPostObject['code'];\n\t\t\n\t\tthis.onChange.emit(this.postGeoObject);\n\t}\n\n\tonManageAttributeVersions(attribute: Attribute): void {\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(attribute);\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ManageVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\t\n\t\t\tthis.bsModalRef.content.geoObjectOverTime = this.postGeoObject;\n\t\t\tthis.bsModalRef.content.geoObjectType = this.geoObjectType;\n\t\t\tthis.bsModalRef.content.isNewGeoObject = this.isNew;\n\t\t\tthis.bsModalRef.content.attribute = attribute;\n\t\t\tthis.bsModalRef.content.onAttributeVersionChange.subscribe(versionObj => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t\t//this.bsModalRef.content.readonly = !this.isContributorOnly;\n\t\t\tthis.bsModalRef.content.readonly = this.readOnly;\n\t\t}\n\t}\n\n\tonManageGeometryVersions(): void {\n\t\tlet geometry = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeometry = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\n\t\tthis.onManageAttributeVersions(geometry);\n\t}\n\n\tisDifferentText(attribute: Attribute): boolean {\n\t\tif ( this.isNullValue(this.calculatedPostObject[attribute.code]) && !this.isNullValue(this.calculatedPreObject[attribute.code])) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value.trim() !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tisDifferentValue(attribute: Attribute): boolean {\n\t\tif ( this.isNullValue(this.calculatedPostObject[attribute.code]) && !this.isNullValue(this.calculatedPreObject[attribute.code])) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif(attribute.type === 'date'){\n\t\t\treturn (this.calculatedPostObject[attribute.code].value && new Date(this.calculatedPostObject[attribute.code].value).getTime() !== new Date(this.calculatedPreObject[attribute.code].value).getTime());\n\t\t}\n\t\telse{\n\t\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value !== this.calculatedPreObject[attribute.code].value);\n\t\t}\n\t}\n\t\n\tisNullValue(vot: any)\n\t{\n\t  return vot == null || vot.value == null || vot.value == \"\";\n\t}\n\n\tonSelectPropertyOption(event: any, option: any): void {\n\t\tthis.currentTermOption = JSON.parse(JSON.stringify(this.modifiedTermOption));\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn attrOpts;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisStatusChanged(post, pre) {\n\n\t\tif ( (pre != null && post == null) || (post != null && pre == null) ) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (pre == null && post == null)\n\t\t{\n\t\t  return false;\n\t\t}\n\n\t\tif ( (pre.length == 0 && post.length > 0) || (post.length == 0 && pre.length > 0) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar preCompare = pre;\n\t\tif (Array.isArray(pre)) {\n\t\t\tpreCompare = pre[0];\n\t\t}\n\n\t\tvar postCompare = post;\n\t\tif (Array.isArray(post)) {\n\t\t\tpostCompare = post[0];\n\t\t}\n\n\t\treturn preCompare !== postCompare;\n\t}\n\n\tgetTypeDefinition(key: string): string {\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === key) {\n\t\t\t\treturn attr.type;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn this.isValid;\n\t}\n\n\tpublic getGeoObject(): any {\n\t\treturn this.postGeoObject;\n\t}\n}\n","<form class=\"modal-form\" name=\"geobject-shared-attribute-editor\" #attributeForm=\"ngForm\">\n  <fieldset>\n    <!-- <div class=\"col-md-12\"> -->\n    <div *ngIf=\"preGeoObject\">\n      <div *ngIf=\"!this.isEditingGeometries\" class=\"row\">\n        <!-- <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"change.request.geoobject.update.form.label\"></localize>\n                        </label>\n                    </div> -->\n        <div class=\"col-md-12\">\n          <span class=\"text\"></span>\n          <ul class=\"list-group\">\n            <li class=\"list-group-item\" style=\"text-align:left;border:none;padding:0;\" *ngFor=\"let attr of geoObjectType.attributes | geoObjectAttributeExcludesFilter:geoObjectAttributeExcludes; let i = index\">\n\n              <div class=\"panel panel-default\">\n                <div class=\"panel-heading\">\n                  <h4 *ngIf=\"attr.code !== 'geometry'\" style=\"margin:0;\">\n                    <span *ngIf=\"attr.code === 'code'\"> \n                      <localize key=\"geoobject.code.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code === 'displayLabel'\"> \n                      <localize key=\"geoobject.displayLabel.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code !== 'code' && attr.code !== 'displayLabel'\"> {{attr.label.localizedValue}} </span> \n                    \n<!--                     <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\" style=\"color:#BABABA;font-style:italic;\">  -->\n<!--                       ( <p style=\"font-size:14px;display:inline-block;\"> -->\n<!--                           {{calculatedPostObject[attr.code].startDate}} -->\n<!--                         </p> -->\n<!--                       - -->\n<!--                       <p *ngIf=\"calculatedPostObject[attr.code].endDate !== 'Present'\" style=\"font-size:14px;display:inline-block;\"> -->\n<!--                         {{calculatedPostObject[attr.code].endDate}} -->\n<!--                       </p> -->\n<!--                       <p *ngIf=\"calculatedPostObject[attr.code].endDate === 'Present'\" style=\"font-size:14px;display:inline-block;\"> -->\n<!--                         <localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize> -->\n<!--                       </p> -->\n<!--                       ) -->\n<!--                     </span> -->\n                  </h4>\n\n                  <h4 *ngIf=\"attr.code === 'geometry'\">\n                    <localize key=\"shared.attributes.attribute.geometry.label\"></localize>\n                    <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\"> \n                      ({{calculatedPostObject[attr.code].startDate}} - {{calculatedPostObject[attr.code].endDate}}) \n                    </span>\n                  </h4>\n\n                </div>\n\n                <div class=\"panel-body\">\n\n                  <div *ngIf=\"attr.code === 'code'\">\n                    <input *ngIf=\"postGeoObject\" type=\"text\" [(ngModel)]=\"calculatedPostObject[attr.code]\" (change)=\"handleChangeCode($event)\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" [disabled]=\"!isNew\" required>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'character' && attr.code !== 'code'\">\n                    <div class=\"input-group\">\n                      <input *ngIf=\"postGeoObject\" [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"text\" [ngModel]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon\">\n                        <i class=\"fa fa-pencil clickable\" (click)=\"onManageAttributeVersions(attr)\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentText(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'local'\">\n                    <ul class=\"list-group\" *ngIf=\"calculatedPostObject[attr.code].value != null\">\n                      <li class=\"list-group-item\" *ngFor=\"let localeValue of calculatedPostObject[attr.code].value.localeValues; let i = index\">\n                        <div class=\"panel panel-default\">\n                          <div class=\"panel-heading\">\n                            <h5><convert-key-label [key]=\"localeValue.locale\"></convert-key-label></h5>\n                          </div>\n\n                          <div class=\"panel-body\">\n\n                            <div class=\"input-group\">\n                              <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" [required]=\"localeValue.locale === 'defaultLocale'\" type=\"text\" [ngModel]=\"localeValue.value\" [name]=\"'mod-' + attr.code + '-' + localeValue.locale\" > \n                              <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                              </span>\n                            </div>\n\n\n                            <p class=\"warning-text\" *ngIf=\"!isNew && calculatedPreObject[attr.code].value != null && localeValue.value != null && localeValue.value.trim() !== calculatedPreObject[attr.code].value.localeValues[i].value\">\n                              <localize key=\"change.request.changed.value.prefix\"></localize>\n                              {{calculatedPreObject[attr.code].value.localeValues[i].value}}\n                            </p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'date'\">\n\n                    <div class=\"input-group\">\n<!--                       <input type=\"date\" [ngClass]=\"{'input-group-read-only': readOnly}\" [ngModel]=\"calculatedPostObject[attr.code].value | date:'yyyy-MM-dd'\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled>  -->\n                      \n                      <date-field [(value)]=\"calculatedPostObject[attr.code].value\" label=\"\" [inputName]=\"'mod-'+attr.code\" [disable]=\"true\" [classNames]=\"'input-group-read-only full-width'\"\n                        [allowInfinity]=\"false\" [allowFutureDates]=\"false\" [required]=\"false\" [placement]=\"'right'\"></date-field>\n                      \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value | date:\"yyyy/MM/dd\":\"+0000\"}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'boolean'\">\n                  \n\n                    <div class=\"input-group\" >\n                      <div [ngClass]=\"{'input-group-read-only': readOnly}\" class=\"radio-group\">\n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"calculatedPostObject[attr.code].value === true\" [value]=\"true\" id=\"mod-{{attr.code}}-true\" name=\"mod-{{attr.code}}-true\" disabled > \n                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                        </label> \n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"!calculatedPostObject[attr.code].value === false\" [value]=\"false\" id=\"mod-{{attr.code}}-false\" name=\"mod-{{attr.code}}-false\" disabled > \n                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                        </label> \n                      </div>\n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'float'\">\n\n                    <div class=\"input-group\">\n                      <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'integer'\">\n                  \n                    <div class=\"input-group\">\n                      <input [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" disabled id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'term'\">\n\n                    <div class=\"input-group\">\n                      <select [ngClass]=\"{'input-group-read-only': readOnly}\" id=\"mod-{{attr.code}}\" name=\"mod-term-{{attr.code}}\" class=\"select-area\" style=\"float: none;\" disabled [(ngModel)]=\"calculatedPostObject[attr.code].value\">\n                        <option value=\"\"></option>\n                        <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attr.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                      </select> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isStatusChanged(calculatedPostObject[attr.code].value, calculatedPreObject[attr.code].value)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'geometry' && this.isGeometryInlined\">\n<!--                     <geoobject-editor-map  -->\n<!--                       #geometryEditor  -->\n<!--                       [geometryType]=\"this.geoObjectType.geometryType\"  -->\n<!--                       [readOnly]=\"readOnly\" -->\n<!--                       [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\" -->\n<!--                       [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"  -->\n<!--                       [bboxCode]=\"this.preGeoObject.attributes.code\" -->\n<!--                       [bboxType]=\"this.geoObjectType.code\" -->\n<!--                       (onClickEdit)=\"this.onManageGeometryVersions()\"  -->\n<!--                       [bboxDate]=\"this.forDate.toISOString().split('T')[0]\">  -->\n<!--                     </geoobject-editor-map> -->\n\n                      <div class=\"button-holder text-left\" style=\"margin:0;\">\n                        <button type=\"submit\" style=\"width:100%;\" (click)=\"this.onManageGeometryVersions()\" class=\"btn btn-primary\" role=\"button\">\n                          <localize *ngIf=\"!readOnly\" key=\"modal.button.edit\"></localize>\n                          <localize *ngIf=\"readOnly\" key=\"modal.button.view\"></localize>\n                        </button>\n                      </div>\n                  </div>\n\n                  <!--                   <div *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"button-holder\" > -->\n                  <!--                     <button type=\"submit\" style=\"\" (click)=\"onManageAttributeVersions(attr)\" class=\"btn btn-primary\" role=\"button\"> -->\n                  <!--                       <localize key=\"changeovertime.manageVersions.button.label\"></localize> -->\n                  <!--                     </button> -->\n                  <!--                   </div> -->\n\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div *ngIf=\"this.isEditingGeometries && !this.isGeometryInlined\">\n          <geoobject-editor-map \n            #geometryEditor\n            [geometryType]=\"this.geoObjectType.geometryType\"\n            [readOnly]=\"readOnly\" \n            [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\"\n            [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"\n            [bboxCode]=\"this.preGeoObject.attributes.code\"\n            [bboxType]=\"this.geoObjectType.code\"\n            (onClickEdit)=\"this.onManageGeometryVersions()\"\n            [bboxDate]=\"this.forDate.toISOString().split('T')[0]\"\n          > </geoobject-editor-map>\n      </div>\n    </div>\n    <!-- </div> -->\n  </fieldset>\n</form>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-input',\n    templateUrl: './localized-input.component.html',\n    styleUrls: [],\n} )\nexport class LocalizedInputComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","<div class=\"row-holder\" *ngFor=\"let localeValue of value.localeValues\">\n  <div class=\"label-holder\">\n    <label>\n      <localize [key]=\"key\"></localize>\n      <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n    </label>\n  </div>\n  <div class=\"holder\">\n    <span class=\"text\">\n      <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"disabled\" [required]=\"localeValue.locale === 'defaultLocale'\">\n    </span>\n  </div>\n</div>\n","\nimport { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'simple-edit-control',\n\ttemplateUrl: './simple-edit-control.component.html',\n\tstyleUrls: ['./simple-edit-control.css']\n})\nexport class SimpleEditControl {\n\telRef: ElementRef\n\n\t@Output() editEmitter = new EventEmitter<void>();\n\n\t@Input() visible: boolean = true;\n\t@Input() editSessionEnabled: boolean = false;\n\t@Input() save: boolean = false;\n\n\tconstructor(elRef: ElementRef) {\n\t\tthis.elRef = elRef;\n\t}\n\n\tonAdd(map): any {\n\t\treturn this.elRef.nativeElement;\n\t}\n\n\tonRemove(map): void {\n\t\tthis.elRef.nativeElement.remove();\n\t}\n\n\tonClick(): void {\n\t\tthis.editEmitter.emit();\n\t}\n}\n","<div class=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\n  <button *ngIf=\"editSessionEnabled\" \n    class=\"fa\" \n    [ngClass]=\"{'fa-pencil-square-o':!save, 'fa-save':save}\" \n    style=\"color: black; font-size: 18px;\" \n    [title]=\"'changeovertime.manageVersions.button.label' | localize\" \n    (click)=\"this.onClick();\">\n  </button>\n  <div *ngIf=\"editSessionEnabled\" class=\"map-button-info-hint-wrapper\">\n    <div class=\"map-button-info-hint\">\n      <localize key=\"map.button.info.hint\"></localize>\n    </div>\n    <div class=\"map-button-pointer\"></div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\n\nimport { ChangeRequest, AbstractAction } from '@registry/model/crtable';\nimport { EventService } from '@shared/service';\nimport { GeoObject } from '@registry/model/registry';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ChangeRequestService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\t  getAllActions( requestId: string ): Promise<AbstractAction[]> {\n        let params: HttpParams = new HttpParams();\n\n        if ( requestId != null ) {\n            params = params.set( 'requestId', requestId );\n\t\t}\n\t\t\n//        this.eventService.start();\n\n        return this.http\n            .get<AbstractAction[]>( acp + '/changerequest/getAllActions', { params: params } )\n\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    applyAction( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyAction', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\tapplyActionStatusProperties( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyActionStatusProperties', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\t\n    lockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/lockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    unlockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/unlockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getAllRequests(filter: string): Promise<ChangeRequest[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\n\t\tparams = params.set('filter', filter );\n\n        return this.http.get<ChangeRequest[]>( acp + '/changerequest/get-all-requests', { params: params } )\n            .toPromise();\n    }\n\n    getRequestDetails( requestId: string ): Promise<ChangeRequest> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'requestId', requestId );\n\n        this.eventService.start();\n\n        return this.http.get<ChangeRequest>( acp + '/changerequest/get-request-details', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tconfirmChangeRequest( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/confirm-change-request', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    execute( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/execute-actions', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    delete( requestId: string ): Promise<string> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<string>( acp + '/changerequest/delete', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    rejectAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/reject-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    approveAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/approve-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    submitChangeRequest( actions: string ): Promise<GeoObject> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'actions', actions )\n\n        this.eventService.start();\n\n        return this.http.post<GeoObject>( acp + '/cgr/submitChangeRequest', {actions: actions}, { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tdeleteFile(actionId: string, fileId: string): Promise<ImportConfiguration> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<ImportConfiguration>(acp + '/changerequest/delete-file-action', JSON.stringify({ actionOid: actionId, vfOid: fileId }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { TreeEntity } from '@registry/model/registry';\nimport { EventService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HierarchyService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetHierarchyTypes(types: any): Promise<HierarchyType[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('types', JSON.stringify(types));\n\n\t\treturn this.http\n\t\t\t.get<HierarchyType[]>(acp + '/cgr/hierarchytype/get-all', { params: params })\n\t\t\t.toPromise();\n\t}\n\n\taddChildToHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/add', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tinsertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/insertBetweenTypes', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, middleGeoObjectTypeCode: middleGeoObjectTypeCode, youngestGeoObjectTypeCode: youngestGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveFromHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/remove', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcreateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/create', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tupdateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/update', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tdeleteHierarchyType(code: string): Promise<TreeEntity> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<TreeEntity>(acp + '/cgr/hierarchytype/delete', { 'code': code }, { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise()\n\t}\n\n\tsetInheritedHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/setInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'inheritedHierarchyTypeCode': inheritedHierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveInheritedHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/removeInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ImportConfiguration, Synonym, Location, Term } from '@registry/model/io';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: string;\r\n\r\n@Injectable()\r\nexport class IOService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\timportSpreadsheet(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcancelImport(configuration: ImportConfiguration): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/cancel-import', JSON.stringify({ configuration: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\timportShapefile(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tlistGeoObjectTypes(includeAbstractTypes: boolean): Promise<{ label: string, code: string, orgCode: string, superTypeCode?: string }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('includeAbstractTypes', includeAbstractTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, orgCode: string }[]>(acp + '/cgr/geoobjecttype/list-types', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetTypeAncestors(code: string, hierarchyCode: string, includeInheritedTypes: boolean): Promise<Location[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\tparams = params.set('includeInheritedTypes', includeInheritedTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Location[]>(acp + '/cgr/geoobjecttype/get-ancestors', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForType(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForSubtypes(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-subtype-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, hierarchy: string): Promise<any> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = parent;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectSynonym(entityId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/geo-synonym/createGeoEntitySynonym', JSON.stringify({ entityId: entityId, label: label }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectSynonym(synonymId: string, vOid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geo-synonym/deleteGeoEntitySynonym', JSON.stringify({ synonymId: synonymId, vOid: vOid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetTermSuggestions(mdAttributeId: string, text: string, limit: string): Promise<{ text: string, data: any }[]> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('mdAttributeId', mdAttributeId);\r\n\t\tparams = params.set('text', text);\r\n\t\tparams = params.set('limit', limit);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ text: string, data: any }[]>(acp + '/uploader/getClassifierSuggestions', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTermSynonym(classifierId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ classifierId: classifierId, label: label });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/uploader/createClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteTermSynonym(synonymId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ synonymId: synonymId });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/uploader/deleteClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTerm(label: string, code: string, parentTermCode: string): Promise<Term> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { parentTermCode: parentTermCode, termJSON: { label: label, code: code } };\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tremoveTerm(parentTermCode: string, termCode: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '@shared/service';\n\nimport { AllLocaleInfo } from '@registry/model/localization-manager';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\n    getNewLocaleInfo(): Promise<AllLocaleInfo> {\n        return this.http\n            .get<AllLocaleInfo>( acp + '/localization/getNewLocaleInformation' )\n            .toPromise();\n    }\n\n    installLocale( language: string, country: string, variant: string ): Promise<void> {\n        let params: HttpParams = new HttpParams();\n\n        if ( language != null ) {\n            params = params.set( 'language', language );\n        }\n\n        if ( country != null ) {\n            params = params.set( 'country', country );\n        }\n\n        if ( variant != null ) {\n            params = params.set( 'variant', variant );\n        }\n\n        return this.http\n            .get<void>( acp + '/localization/installLocale', { params: params } )\n            .toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\nimport * as mapboxgl from 'mapbox-gl';\r\n\r\nimport { LocationInformation } from '@registry/model/location-manager';\r\nimport { EventService } from '@shared/service';\r\nimport { GeoObject } from '@registry/model/registry';\n\r\ndeclare var acp: any;\r\n\r\n@Injectable()\r\nexport class MapService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) {\r\n\t\t(mapboxgl as any).accessToken = 'pk.eyJ1IjoidGVycmFmcmFtZSIsImEiOiJjanZxNWE5bWkwazYwNGFtb3loOGxsbjR1In0.ZNEwT-pBnGookEb-BF_jQQ';\r\n\t}\r\n\r\n\r\n\troots(typeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tif (typeCode != null) {\r\n\t\t\tparams = params.set('typeCode', typeCode);\r\n\t\t}\r\n\r\n\t\tif (hierarchyCode != null) {\r\n\t\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<LocationInformation>(acp + '/registrylocation/roots', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n/*\r\n\tselect(code: string, typeCode: string, childTypeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n    let params: HttpParams = new HttpParams();\r\n    params = params.set('code', code);\r\n    params = params.set('typeCode', typeCode);\r\n\r\n    if (date != null) {\r\n      params = params.set('date', date);\r\n    }\r\n\r\n    if (childTypeCode != null) {\r\n      params = params.set('childTypeCode', childTypeCode);\r\n    }\r\n\r\n    if (hierarchyCode != null) {\r\n      params = params.set('hierarchyCode', hierarchyCode);\r\n    }\r\n\r\n    this.eventService.start();\r\n\r\n    return this.http\r\n      .get<LocationInformation>(acp + '/registrylocation/select', { params: params })\r\n      .pipe(finalize(() => {\r\n        this.eventService.complete();\r\n      }))\r\n      .toPromise();\r\n  }\r\n\t*/\r\n\r\n\tsearch(text: string, date: string): Promise<{ type: string, features: GeoObject[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('text', text);\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ type: string, features: GeoObject[] }>(acp + '/registrylocation/search', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport {\n\tGeoObject, GeoObjectType, Attribute, Term, MasterList, MasterListVersion, ParentTreeNode,\r\n\tChildTreeNode, ValueOverTime, GeoObjectOverTime, HierarchyOverTime, ScheduledJob, PaginationPage, MasterListByOrg\n} from '@registry/model/registry';\r\n\r\nimport { HierarchyType } from '@registry/model/hierarchy';\r\nimport { Progress } from '@shared/model/progress';\r\n\r\nimport { Organization, OAuthServer } from '@shared/model/core';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class RegistryService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tinit(): Promise<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }> {\r\n\t\treturn this.http.get<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }>(acp + '/cgr/init')\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\t// param types: array of GeoObjectType codes. If empty array then all GeoObjectType objects are returned.\r\n\tgetGeoObjectTypes(types: string[], hierarchies: string[]): Promise<GeoObjectType[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\r\n\t\tif (types != null) {\r\n\t\t\tparams = params.set('types', JSON.stringify(types));\r\n\t\t}\r\n\r\n\t\tif (hierarchies != null) {\r\n\t\t\tparams = params.set('hierarchies', JSON.stringify(hierarchies));\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectType[]>(acp + '/cgr/geoobjecttype/get-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetParentGeoObjects(childId: string, childTypeCode: string, parentTypes: any, recursive: boolean, date: string): Promise<ParentTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('childId', childId)\r\n\t\tparams = params.set('childTypeCode', childTypeCode)\r\n\t\tparams = params.set('parentTypes', JSON.stringify(parentTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ParentTreeNode>(acp + '/cgr/geoobject/get-parent-geoobjects', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetChildGeoObjects(parentId: string, parentTypeCode: string, childrenTypes: any, recursive: boolean): Promise<ChildTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('parentId', parentId)\r\n\t\tparams = params.set('parentTypeCode', parentTypeCode)\r\n\t\tparams = params.set('childrenTypes', JSON.stringify(childrenTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ChildTreeNode>(acp + '/cgr/geoobject/getchildren', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tnewGeoObjectInstance(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectType(gtJSON: string): Promise<GeoObjectType> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/create', JSON.stringify({ 'gtJSON': gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateGeoObjectType(gtJSON: GeoObjectType): Promise<GeoObjectType> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/update', JSON.stringify({ \"gtJSON\": gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectType(code: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/delete', JSON.stringify({ code: code }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\taddAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/addattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/updateattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeType(geoObjTypeId: string, attributeName: string): Promise<boolean> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<boolean>(acp + '/cgr/geoobjecttype/deleteattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeName': attributeName }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\taddAttributeTermTypeOption(parentTermCode: string, term: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': term }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeTermTypeOption(parentTermCode: string, termJSON: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/updateterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': termJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeTermTypeOption(parentTermCode: string, termCode: string): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\t\r\n\tgetGeoObject(id: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('id', id)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBounds(code: string, typeCode: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBoundsAtDate(code: string, typeCode: string, date: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\t\tparams = params.set('date', date);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject-time/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectByCode(code: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForGeoObject(code: string, typeCode: string): Promise<HierarchyOverTime[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<HierarchyOverTime[]>(acp + '/cgr/geoobject/get-hierarchies-over-time', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, parentTypeCode: string, hierarchy: string, date: string): Promise<GeoObject> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = hierarchy;\r\n\t\t}\r\n\t\t\r\n\t\tif (parentTypeCode != null) {\r\n\t\t  params.parentTypeCode = parentTypeCode;\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams.date = date;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestionsTypeAhead(text: string, type: string): Promise<GeoObject> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-active', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetCompletedScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-completed', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJob(historyId: string, pageSize: number, pageNumber: number, onlyUnresolved: boolean): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\t\tparams = params.set(\"onlyUnresolved\", onlyUnresolved.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-import-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetExportDetails(historyId: string, pageSize: number, pageNumber: number): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-export-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tresolveScheduledJob(historyId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/import-resolve', JSON.stringify({ historyId: historyId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tsubmitValidationResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/validation-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsubmitErrorResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/error-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterLists(): Promise<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }>(acp + '/master-list/list-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListHistory(oid: string, versionType: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('versionType', versionType);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetAllMasterListVersions(): Promise<MasterList[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList[]>(acp + '/master-list/list-all-versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListVersion(oid: string): Promise<MasterListVersion> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterListVersion>(acp + '/master-list/version', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetLocales(): Promise<string[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<string[]>(acp + '/localization/get-locales', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectOverTime(geoObjectCode: string, geoObjectTypeCode: string): Promise<GeoObjectOverTime> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\t// let params: HttpParams = new HttpParams();\r\n\t\t// params = params.set( 'geoObjectCode', geoObjectCode );\r\n\t\t// params = params.set( 'geoObjectTypeCode', geoObjectTypeCode );\r\n\t\t// params = params.set( 'attributeName', attributeName );\r\n\r\n\t\t// return this.http\r\n\t\t//     .get<ValueOverTime[]>( acp + '/cgr/geoobject/getAttributeVersions', { params: params } )\r\n\t\t//     .toPromise();\r\n\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', geoObjectCode);\r\n\t\tparams = params.set('typeCode', geoObjectTypeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectOverTime>(acp + '/cgr/geoobject-time/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\r\n\t}\r\n\r\n\tnewGeoObjectOverTime(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject-time/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n\r\n\r\n\t// getAttributeVersions( geoObjectCode: string, geoObjectTypeCode: string, attributeName: string ): any[] {\r\n\t//     let test =[\r\n\t//         {\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":{\"localeValues\":[\r\n\t//             {\"locale\":\"defaultLocale\",\"value\":\"Anlong Veaeng\"}]}}\r\n\t//     ]\r\n\r\n\t//     // let test = [{\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":\"test\"}];\r\n\r\n\t//     return test;\r\n\t// }\r\n\r\n\r\n\tsetAttributeVersions(geoObjectCode: string, geoObjectTypeCode: string, attributeName: string, collection: ValueOverTime[]): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\tgeoObjectCode: geoObjectCode,\r\n\t\t\tgeoObjectTypeCode: geoObjectTypeCode,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tcollection: collection\r\n\r\n\t\t} as any;\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Response>(acp + '/cgr/geoobject/setAttributeVersions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterList(list: MasterList): Promise<MasterList> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/master-list/create', JSON.stringify({ list: list }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterListVersion(oid: string, forDate: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/create-version', JSON.stringify({ oid: oid, forDate: forDate }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishMasterListVersions(oid: string): Promise<{ job: string }> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ job: string }>(acp + '/master-list/publish-versions', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteMasterList(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tdeleteMasterListVersion(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove-version', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tpublishMasterList(oid: string): Observable<string> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http.post<string>(acp + '/master-list/publish', JSON.stringify({ oid: oid }), { headers: headers });\r\n\t}\r\n\r\n\tgetMasterList(oid: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n    /*\r\n     * Not really part of the RegistryService\r\n     */\r\n\tapplyGeoObjectEdit(parentTreeNode: HierarchyOverTime[], geoObject: GeoObjectOverTime, isNew: boolean, masterListId: string, notes: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\t\t\r\n\t\t// Custom attributes of Date type need to be encoded to date/time. The Date picker requires this format to be yyyy-mm-dd.\r\n\t\t// This conversion allows the date picker to work while ensuring the server recieves the correct format. \r\n\t\tfor(const prop in geoObject.attributes) { \r\n\t\t\tlet attr = geoObject.attributes[prop];\r\n \t\t\tif(attr.type === \"date\"){ \r\n\t\t\t\tattr.values.forEach( val => { \r\n\t\t\t\t\tval.value = new Date(val.value).getTime().toString();\r\n\t\t\t\t}) \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet params = { geoObject: geoObject, isNew: isNew, masterListId: masterListId };\r\n\r\n\t\tif (parentTreeNode != null) {\r\n\t\t\tparams['parentTreeNode'] = parentTreeNode;\r\n\t\t}\r\n\t\tif (notes != null) {\r\n\t\t\tparams['notes'] = notes;\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geoobject-editor/apply', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdata(oid: string, pageNumber: number, pageSize: number, filter: { attribute: string, value: string }[], sort: { attribute: string, order: string }): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tsort: sort\r\n\t\t} as any;\r\n\r\n\t\tif (pageNumber != null) {\r\n\t\t\tparams.pageNumber = pageNumber;\r\n\t\t}\r\n\r\n\t\tif (pageSize != null) {\r\n\t\t\tparams.pageSize = pageSize;\r\n\t\t}\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/master-list/data', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tvalues(oid: string, value: string, attributeName: string, valueAttribute: string, filter: { attribute: string, value: string }[]): Promise<{ label: string, value: string }[]> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tvalueAttribute: valueAttribute\r\n\t\t} as any;\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\tif (value != null && value.length > 0) {\r\n\t\t\tparams.value = value;\r\n\t\t}\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ label: string, value: string }[]>(acp + '/master-list/values', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishShapefile(oid: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/generate-shapefile', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tprogress(oid: string): Promise<Progress> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Progress>(acp + '/master-list/progress', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListsByOrg(): Promise<{ orgs: MasterListByOrg[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], orgs: MasterListByOrg[] }>(acp + '/master-list/list-org', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetPublishMasterListJobs(oid: string, pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/master-list/get-publish-jobs', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetDatasetBounds(oid: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid)\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/master-list/bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetOrganizations(): Promise<Organization[]> {\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Organization[]>(acp + '/cgr/organizations/get-all')\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { PageResult } from '@shared/model/core'\nimport { SynchronizationConfig, OrgSyncInfo, ExportScheduledJob } from '@registry/model/registry'\nimport { AttributeConfigInfo, DHIS2AttributeMapping } from '@registry/model/sync'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SynchronizationConfigService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetPage(pageNumber: number, pageSize: number): Promise<PageResult<SynchronizationConfig>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<SynchronizationConfig>>(acp + '/synchronization-config/get-all', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tget(oid: string): Promise<SynchronizationConfig> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<SynchronizationConfig>(acp + '/synchronization-config/get', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tgetCustomAttrCfg(geoObjectTypeCode: string, externalId: string): Promise<AttributeConfigInfo[]> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalId', externalId);\n    params = params.set('geoObjectTypeCode', geoObjectTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<AttributeConfigInfo[]>(acp + '/synchronization-config/get-custom-attr', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\t\n\tgetConfigForES(externalSystemId: string, hierarchyTypeCode: string): Promise<any> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalSystemId', externalSystemId);\n    params = params.set('hierarchyTypeCode', hierarchyTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<any[]>(acp + '/synchronization-config/get-config-for-es', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n\tapply(config: SynchronizationConfig): Promise<SynchronizationConfig> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<SynchronizationConfig>(acp + '/synchronization-config/apply', JSON.stringify({ config: config }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tedit(oid: string): Promise<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tlet params = {};\n\n\t\tif (oid != null) {\n\t\t\tparams = { oid: oid };\n\t\t}\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }>(acp + '/synchronization-config/edit', JSON.stringify(params), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremove(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tunlock(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/unlock', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\trun(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/run', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetJobs(oid:string, pageNumber: number, pageSize: number): Promise<PageResult<ExportScheduledJob>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n//\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExportScheduledJob>>(acp + '/synchronization-config/get-jobs', { params: params })\n//\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n//\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PaginationPage } from '@registry/model/registry';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tgetMyTasks(pageNum: number, pageSize: number, whereStatus: string): Promise<PaginationPage> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('orderBy', 'createDate');\r\n\t\tparams = params.set('pageNum', pageNum.toString());\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('whereStatus', whereStatus);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/tasks/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcompleteTask(taskId: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/complete', JSON.stringify({ 'id': taskId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsetTaskStatus(taskId: string, status: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/setTaskStatus', JSON.stringify({ 'id': taskId, 'status': status }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","import * as d3 from 'd3';\n\nexport function calculateTextWidth(text: string, fontSize: number): number {\n\tlet svg = d3.select(\"#svg\");\n\n\tlet textCalcGroup = svg.append(\"g\").classed(\"g-text-calc\", true);\n\n\tlet textEl = textCalcGroup.append(\"text\")\n\t\t.attr(\"x\", -5000)\n\t\t.attr(\"y\", -5000)\n\t\t.attr(\"font-size\", fontSize)\n\t\t.text(text);\n\n\tlet bbox = textEl.node().getBBox();\n\n\td3.select(\".g-text-calc\").remove();\n\n\treturn bbox.width + 2; // +2 is for padding. I caught this truncating just ever so slightly\n}\n\nexport function svgPoint(x: number, y: number) {\n\tlet svg: any = d3.select(\"#svg\").node();\n\tvar pt = svg.createSVGPoint();\n\n\tpt.x = x;\n\tpt.y = y;\n\n\treturn pt.matrixTransform(svg.getScreenCTM().inverse());\n}\n\nexport function isPointWithin(point: { x: number, y: number }, bbox: { x: number, y: number, width: number, height: number }) {\n\treturn point.y > bbox.y && point.y < (bbox.y + bbox.height) && point.x > bbox.x && point.x < (bbox.x + bbox.width);\n}\n\nexport function isBboxPartiallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t|| isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function isBboxTotallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t&& isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function getBboxFromSelection(selection: any) {\n\treturn { x: parseInt(selection.attr(\"x\")), y: parseInt(selection.attr(\"y\")), width: parseInt(selection.attr(\"width\")), height: parseInt(selection.attr(\"height\")) };\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\n@Component( {\n    selector: 'attributes-page',\n    templateUrl: './attributes-page.component.html',\n    styleUrls: []\n} )\nexport class AttributesPageComponent {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor() {\n    }\n\n    onNext(): void {\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.attributes.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.attributes.description\"></localize>\n    </p>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <!--\n    <h3 class=\"mb-3\">\n      <localize key=\"shapefile.modal.heading\"></localize>\n      {{configuration.sheet.name}}\n    </h3>\n    -->\n    <form class=\"modal-form\" #form=\"ngForm\">\n      \n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.hierarchy\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"configuration.hierarchy\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of configuration.hierarchies\" value={{hierarchy.code}}>{{hierarchy.label}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div class=\"form-group\" *ngFor=\"let attribute of configuration.type.attributes\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">{{attribute.label.localizedValue}}</label>\n          </div>\n          <div class=\"holder\">\n            <select [name]=\"attribute.code + (attribute.locale != null ? attribute.locale : '')\" class=\"select-area\"\n              [(ngModel)]=\"attribute.target\" [required]=\"attribute.required\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes[attribute.baseType]\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div *ngIf=\"configuration.hasPostalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.postalCode\"></localize>\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <div class=\"check-block\">\n              <div (click)=\"configuration.postalCode = !configuration.postalCode\"\n                [ngClass]=\"{'chk-checked' : configuration.postalCode}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\"\n                name=\"postalCode\">\n                <span></span>\n              </div>\n            </div>\n            <!-- <input type=\"checkbox\" class=\"form-check-input\" name=\"postalCode\" [(ngModel)]=\"configuration.postalCode\"> -->\n          </div>\n        </div>\n      </div>\n      \n      <div *ngIf=\"configuration.isExternal\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.modal.external\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"externalId\" class=\"select-area\"\n              [(ngModel)]=\"configuration.externalIdAttributeTarget\" [required]=\"true\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n        \n        <div *ngIf=\"configuration.externalSystem.type === 'RevealExternalSystem' && configuration.formatType === 'EXCEL'\" class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.import.revealGeometryAttribute\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"revealGeometryColumn\" class=\"select-area\"\n              [(ngModel)]=\"configuration.revealGeometryColumn\" [required]=\"false\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <!--\n      <div *ngIf=\"!configuration.hasPostalCode || !configuration.postalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.parentLookupType\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"parentLookupType\" class=\"select-area\" [(ngModel)]=\"configuration.parentLookupType\" required>\n              <option></option>\n              <option value=\"ALL\">\n                <localize key=\"io.modal.all\"></localize>\n              </option>\n              <option value=\"CODE\">\n                <localize key=\"io.modal.code\"></localize>\n              </option>\n              <option value=\"EXTERNAL\">\n                <localize key=\"io.modal.external\"></localize>\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      -->\n\n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize *ngIf=\"!configuration.postalCode\" key=\"io.next\"></localize>\n                <localize *ngIf=\"configuration.postalCode\" key=\"io.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter, Directive } from '@angular/core';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-page',\n    templateUrl: './location-page.component.html',\n    styleUrls: []\n} )\nexport class LocationPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor( private service: IOService ) { }\n\n    ngOnInit(): void {\n        this.service.getTypeAncestors( this.configuration.type.code, this.configuration.hierarchy, true ).then( locations => {\n            this.configuration.locations = locations;\n        } );\n    }\n\n    onNext(): void {\n        // Map the universals\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onBack(): void {\n        this.stateChange.emit( 'BACK' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<form class=\"modal-form\">\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.location.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.location.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <form #form=\"ngForm\">\n      \n      <div class=\"form-group\" *ngFor=\"let location of configuration.locations; let i = index;\">\n        <div class=\"row-holder\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\"><label> {{location.label}} </label></div>\n            <div class=\"panel-body\">\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.source\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select class=\"select-area\" [(ngModel)]=\"location.target\" [name]=\"i + '-location'\">\n                  <option value=\"\"></option>\n                  <option *ngFor=\"let attr of configuration.sheet.attributes.text\" [value]=\"attr\">{{attr}}</option>\n                </select>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.matchStrategy\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select [name]=\"i + '-matchStrategy'\" class=\"select-area\" [(ngModel)]=\"location.matchStrategy\" [required]=\"location.target != null && location.target !== ''\">\n\t\t\t            <option></option>\n\t\t\t            <option value=\"ALL\"><localize key=\"io.modal.all\"></localize></option>\n\t\t\t            <option value=\"CODE\"><localize key=\"io.modal.code\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal\" value=\"EXTERNAL\"><localize key=\"io.modal.external\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal && configuration.externalSystem.type === 'DHIS2ExternalSystem'\" value=\"DHIS2_PATH\"><localize key=\"io.modal.dhis2path\"></localize></option>\n\t\t\t          </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"submit\" (click)=\"onBack()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.back\"></localize>\n            </button>\n            <button type=\"btn\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize key=\"io.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n    </form>\n  </div>\n</form>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n\n    selector: 'location-problem-page',\n    templateUrl: './location-problem-page.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n\n            if ( !this.configuration.locationProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    handleError( err: any ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n            const problem = this.configuration.locationProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNOREATLOCATION' ) {\n                const value = ( problem.parent != null ? problem.parent + \"-\" + problem.label : problem.label );\n                const exclusion = { code: '##PARENT##', value: value };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.locationProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.locationProblem.description\"></localize>\n    </p>\n  </div>\n  <div >\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.locationContext\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownLocation\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.locationProblems; let i = index;\">\n        <location-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></location-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\" style=\"margin-top: 20px;\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize *ngIf=\"configuration.termProblems != null\" key=\"io.next\"></localize>\n              <localize *ngIf=\"configuration.termProblems == null\" key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\n\n@Component( {\n\n    selector: 'term-problem-page',\n    templateUrl: './term-problem-page.component.html',\n    styleUrls: []\n} )\nexport class TermProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n\n            if ( !this.configuration.termProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n            const problem = this.configuration.termProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNORE' ) {\n                const exclusion = { code: problem.attributeCode, value: problem.label };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.termProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.termProblem.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.categoryAttribute\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownCategory\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.termProblems; let i = index;\">\n        <term-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\"></term-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { \n\t\tComponent, \n\t\tOnInit, \n\t\tInput, \n\t\tOutput, \n\t\tChangeDetectorRef, \n\t\tEventEmitter,\n\t\tViewChildren, \n\t\tQueryList } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, AttributeTerm, PRESENT } from '@registry/model/registry';\n\nimport{ DateFieldComponent } from '../../../shared/component/form-fields/date-field/date-field.component';\n\nimport { RegistryService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'manage-versions',\n\ttemplateUrl: './manage-versions.component.html',\n\tstyleUrls: ['./manage-versions.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms',\n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsComponent implements OnInit {\n\t\n\t@ViewChildren('dateFieldComponents') dateFieldComponentsArray:QueryList<DateFieldComponent>;\n\t\n\tmessage: string = null;\n\n\tcurrentDate: Date = new Date();\n\n\tisValid: boolean = true;\n\t@Output() isValidChange = new EventEmitter<boolean>()\n\t\n\t@Input() readonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() attribute: Attribute\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\teditingGeometry: number = -1;\n\n\thasDuplicateDate: boolean = false;\n\n\tconflict: string;\n\thasConflict: boolean = false;\n\thasGap: boolean = false;\n\n\toriginalAttributeState: Attribute;\n\n\tconstructor(private service: RegistryService, private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef, private dateService: DateService) { }\n\n\tngOnInit(): void {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (this.attribute.code === 'geometry' && this.geoObjectOverTime.attributes[this.attribute.code].values.length === 1) {\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.editingGeometry = 0;\n\t\t\t}, 0);\n\t\t}\n\t}\n\t\n\tgeometryChange(vAttribute, event): void {\n\t\tvAttribute.value = event;\n\t}\n\t\n\tcheckDateFieldValidity(): boolean {\n\t\tlet dateFields = this.dateFieldComponentsArray.toArray();\n\t\t\n\t\tfor(let i=0; i<dateFields.length; i++){\n\t\t\tlet field = dateFields[i];\n\t\t\tif(!field.valid){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tonDateChange(): any {\n\t\tsetTimeout(() => {\n\t\t\tthis.hasConflict = false;\n\t\t\tthis.hasGap = false;\n\t\n\t\t\tlet vAttributes = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\t\n\t\t\tthis.isValid = this.checkDateFieldValidity();\n\t\n\t\t\tthis.hasConflict = this.dateService.checkRanges(vAttributes);\n\t\t}, 0);\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tif (this.attribute.type === \"local\") {\n\t\t\t//   vot.value = {\"localizedValue\":null,\"localeValues\":[{\"locale\":\"defaultLocale\",\"value\":null},{\"locale\":\"km_KH\",\"value\":null}]};\n\t\t\tvot.value = this.lService.create();\n\t\t}\n\t\telse if (this.attribute.type === 'geometry') {\n\n\t\t\tif (votArr.length > 0) {\n\t\t\t\tif (this.editingGeometry != -1 && this.editingGeometry != null) {\n\t\t\t\t\tvot.value = votArr[this.editingGeometry].value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvot.value = votArr[0].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\t\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\t\t\tvot.value.type = \"Polygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\t\t\tvot.value.type = \"Point\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tvot.value.type = \"MultiPoint\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\t\t\tvot.value.type = \"Line\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\t\t\tvot.value.type = \"MultiLine\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.attribute.type === 'term') {\n\t\t\tvar terms = this.getGeoObjectTypeTermAttributeOptions(this.attribute.code);\n\n\t\t\tif (terms && terms.length > 0) {\n\t\t\t\tvot.value = terms[0].code;\n\t\t\t}\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tif (this.attribute.code === 'geometry') {\n\t\t\tthis.editingGeometry = votArr.length - 1;\n\t\t}\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\teditGeometry(index: number) {\n\t\tthis.editingGeometry = index;\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\t// only remove status of the required status type\n\t\t\t\tif (attrOpts.length > 0) {\n\t\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn attrOpts;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes[this.attribute.code];\n\n\t\tlet position = -1;\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tposition = i\n\t\t\t}\n\t\t}\n\n\t\tif (position > -1) {\n\t\t\tval.values.splice(position, 1);\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t}\n\n\tisChangeOverTime(attr: Attribute): boolean {\n\t\tlet isChangeOverTime = false;\n\n\t\tthis.geoObjectType.attributes.forEach(attribute => {\n\t\t\tif (this.attribute.code === attr.code) {\n\t\t\t\tisChangeOverTime = attr.isChangeOverTime\n\t\t\t}\n\t\t})\n\n\t\treturn isChangeOverTime;\n\t}\n\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n//\t\tthis.isValidChange.emit(this.isValid);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\" autocomplete=\"off\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n            <h3>{{attribute.label.localizedValue}}</h3>\n\n            <div>\n              <div>\n                <ul class=\"list-group\">\n                  <!-- <li class=\"list-group-item\" style=\"text-align:left;\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\"> -->\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n\n                    <div *ngIf=\"attribute.type !== 'geometry'\">\n                    \n                      <table class=\"table table-striped\">\n                      \n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type === 'local'\" >\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                          \n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'ERROR', 'warning-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'WARNING'}\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\" *ngFor=\"let loc of vAttribute.value.localeValues; let idx = index;\">\n                                  <td colspan=\"2\">\n                                    <h5><convert-key-label [key]=\"loc.locale\"></convert-key-label></h5>\n                                    \n                                    <input type=\"text\" class=\"form-control\" [name]=\"'loc-val-' + i + '-' + idx\" [(ngModel)]=\"loc.value\" (ngModelChange)=\"loc.value = $event\" [required]=\"loc.locale === 'defaultLocale'\">\n                                    \n                                    <div class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"loc.locale === 'defaultLocale' && !loc.value\" class=\"error-message\">\n                                        <localize key=\"manage.versions.value.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                \n                                    <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\"  ></date-field>\n                                    \n                                  </td>\n                                  <td>\n                                    <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                  \n                                      <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" \n                                          [required]=\"true\" [placement]=\"'bottom'\" ></date-field>\n                        \n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr *ngIf=\"vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0\">\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\" >\n                                    {{msg.message}}\n                                  </p>\n                                </tr>\n                              </table>\n                            </td>\n                            \n                            <td (click)=\"remove(vAttribute)\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\">\n                              <i class=\"fa fa-times\" ></i>\n                            </td>\n                          </tr>\n                        </tbody>\n\n\n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type !== 'local'\">\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n\n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'ERROR', 'warning-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'WARNING'}\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\">\n                                  <td colspan=\"2\">\n                                    <div *ngIf=\"attribute.type === 'term'\">\n                                      <select id=\"mod-{{attribute.code}}\" [name]=\"'mod-term-' + i + '-' + attribute.code\" class=\"select-area\" [(ngModel)]=\"vAttribute.value\">\n                                          <option value=\"\"></option>\n                                          <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attribute.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                                      </select>\n                                    </div>\n                                    <div *ngIf=\"attribute.type === 'character'\">\n                                      <input type=\"text\" class=\"form-control\" [name]=\"'char-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'date'\">\n                                      <date-field [(value)]=\"vAttribute.value\" label=\"\" [inputName]=\"'date-val-' + i\" [allowInfinity]=\"false\" [allowFutureDates]=\"true\" \n                                          [required]=\"true\" [placement]=\"'right'\" [(valid)]=\"isValid\" ></date-field>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'integer' || attribute.type === 'float'\">\n                                      <input type=\"number\" class=\"form-control\" [name]=\"'int-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'boolean'\">\n                                        <label class=\"radio radio-inline\" style=\"padding-left:0;\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === true\" [value]=\"true\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-true\" name=\"mod-{{i}}-true\"> \n                                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                                        </label> \n                                        <label class=\"radio radio-inline\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === false\" [value]=\"false\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-false\" name=\"mod-{{i}}-false\"> \n                                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                                        </label>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                            \n                                    <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\"  ></date-field>\n                                  </td>\n                                  <td>\n                                    <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                      \n                                      <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" \n                                          [required]=\"true\" [placement]=\"'bottom'\" ></date-field>\n                        \n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr *ngIf=\"vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0\">\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\">\n                                    {{msg.message}}\n                                  </p>\n                                </tr>                                \n                              </table>\n                            </td>\n                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                              <i class=\"fa fa-times\"></i>\n                            </td>\n                          </tr>\n                        </tbody>\n                        \n                      </table>\n                    </div>\n\n                    <div *ngIf=\"attribute.type === 'geometry'\">\n                    \n                      <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                      \n                      <table class=\"table table-striped\">\n                        <thead style=\"font-size: 14px;\">\n                          <th style=\"width: 60%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.value\"></localize></th>\n                          <th style=\"width: 20%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.actions\"></localize></th>\n                        </thead>\n                        <tbody style=\"text-align: center;\">\n                          <tr @fadeInOut [ngClass]=\"{'active' : i === editingGeometry}\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\">\n                            <td style=\"vertical-align: middle;\">\n                              <button *ngIf=\"this.editingGeometry != i\" class=\"btn\" (click)=\"editGeometry(i)\" role=\"button\">\n                                <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                              </button> \n                              <geoobject-editor-map *ngIf=\"this.editingGeometry === i\" #geometryEditor [geometryType]=\"this.geoObjectType.geometryType\" \n                                  (geometryChange)=\"this.geometryChange(vAttribute, $event);\" [readOnly]=\"!geoObjectType.isGeometryEditable && readonly\" [postGeometry]=\"vAttribute.value\" \n                                  [bboxCode]=\"this.geoObjectOverTime.attributes.code\" [bboxType]=\"this.geoObjectType.code\" [bboxDate]=\"vAttribute.startDate\">\n                              </geoobject-editor-map>\n                            </td>\n                            <td style=\"vertical-align: middle;\">\n                              <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate-' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\" [disable]=\"readonly\" ></date-field>\n                            </td>\n                            <td style=\"vertical-align: middle;\">\n\n                              <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" \n                                  [required]=\"true\" [disable]=\"readonly\" [placement]=\"'bottom'\" ></date-field>\n                        \n                            </td>\n                            <td style=\"vertical-align: middle;\"><i class=\"fa fa-times delete-btn\" [ngClass]=\"{'clickable' : !readonly, 'disabled' : readonly}\" (click)=\"!readonly && remove(vAttribute)\"></i></td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                  </li>\n\n                  <li *ngIf=\"!readonly\" class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> \n                      <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"modal.button.close\"></localize>\n            </button>\n            \n            <button *ngIf=\"!readonly\" type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || !versionsform.valid || hasConflict\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, ViewChild, SimpleChanges, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { RegistryService, MapService} from '@registry/service';\n\nimport { Map, LngLatBounds, NavigationControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\ndeclare var acp: string;\n\n\n@Component({\n\tselector: 'geoobject-editor-map[geometryType]',\n\ttemplateUrl: './geoobject-editor-map.component.html',\n\tstyleUrls: ['./geoobject-editor-map.component.css']\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorMapComponent implements OnInit, OnDestroy {\n\n    /*\n     * Required. The GeometryType of the GeoJSON. Expected to be in uppercase (because that's how it is in the GeoObjectType for some reason)\n     */\n\t@Input() geometryType: string;\n\n    /*\n     * Optional. We will invoke this event with GeoJSON when the user makes an edit to the geometry.\n     */\n\t@Output() geometryChange = new EventEmitter<any>();\n\n    /*\n     * Optional. If specified, we will diff based on this GeoJSON geometry.\n     */\n\t@Input() preGeometry: any;\n\n    /*\n     * Optional. If we are read-only, this will be displayed as a layer. If we are not, it will be editable.\n     */\n\t@Input() postGeometry: any;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObject code.\n     */\n\t@Input() bboxCode: string;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObjectType at the date.\n     */\n\t@Input() bboxType: string;\n\n\t@Input() bboxDate: string;\n\n    /*\n     * Optional. If set to true the edit controls will not be displayed. Defaults to false.\n     */\n\t@Input() readOnly: boolean = false;\n\n    /*\n     * Optional. If specified, we will display an edit button on the map, and when it is clicked we will emit this event.\n     */\n\t@Output() onClickEdit = new EventEmitter<void>();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl;\n\n\t@ViewChild(\"mapDiv\") mapDiv;\n\n\tmap: Map;\n\n\teditingControl: any;\n\n\tconstructor(private registryService: RegistryService, private mapService: MapService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\t\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\n\t\t\tthis.mapDiv.nativeElement.id = Math.floor(Math.random() * (899999)) + 100000;\n\n\t\t\tthis.map = new Map({\n\t\t\t\tcontainer: this.mapDiv.nativeElement.id,\n\t\t\t\tstyle: 'mapbox://styles/mapbox/satellite-v9',\n\t\t\t\tzoom: 2,\n\t\t\t\tcenter: [110.880453, 10.897852]\n\t\t\t});\n\n\t\t\tthis.map.on('load', () => {\n\t\t\t\tthis.initMap();\n\t\t\t});\n\n\t\t\tthis.map.on('draw.create', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.delete', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.update', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\t\n\t\t}, 0);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['preGeometry'] || changes['postGeometry']) {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tpublic reload(): void {\n\t\tif (this.map != null) {\n\t\t\tthis.removeLayers();\n\t\t\tthis.addLayers();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tgetIsValid(): boolean {\n\t\tif (!this.readOnly) {\n\t\t\tlet isValid: boolean = false;\n\n\t\t\tif (this.editingControl != null) {\n\t\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\t\tif (featureCollection.features.length > 0) {\n\t\t\t\t\tisValid = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn isValid;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onValidChange(): void {\n\t\tthis.geometryChange.emit(this.saveDraw());\n\t}\n\n\tinitMap(): void {\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t\tthis.onValidChange();\n\t\t});\n\n\n\t\tthis.addLayers();\n\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.zoomToBbox();\n\t\t}\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl());\n\n\t\tif (!this.readOnly) {\n\t\t\tthis.enableEditing();\n\t\t}\n\t\telse {\n\t\t\tthis.addEditButton();\n\t\t}\n\n\t\tthis.onValidChange();\n\t}\n\n\taddEditButton(): void {\n\t\tthis.simpleEditControl.editEmitter.subscribe(versionObj => {\n\t\t\tthis.onClickEdit.emit();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tenableEditing(): void {\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (this.postGeometry != null) {\n\t\t\tthis.editingControl.add(this.postGeometry);\n\t\t}\n\t}\n\n\tremoveSource(prefix: string): void {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-polygon\");\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-point\");\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MultiLine\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-line\");\n\t\t}\n\n\t\tthis.map.removeSource(sourceName);\n\t}\n\n\tremoveLayers(): void {\n\t\tif (this.map.getSource(\"pre-geoobject\")) {\n\t\t\tthis.removeSource(\"pre\");\n\t\t}\n\t\tif (this.map.getSource(\"post-geoobject\")) {\n\t\t\tthis.removeSource(\"post\");\n\t\t}\n\t}\n\n\taddLayers(): void {\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.preGeometry, \"pre\", \"#EFA22E\")\n\t\t}\n\t\tif (this.readOnly && this.postGeometry != null && this.postGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.postGeometry, \"post\", \"#800000\");\n\t\t}\n\t}\n\n\trenderGeometryAsLayer(geometry: any, prefix: string, color: string) {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\t\t\n\t\tconsole.log(\"test\")\n\n\t\tthis.map.addSource(sourceName, {\n\t\t\ttype: 'geojson',\n\t\t\tdata: {\n\t\t\t\t\"type\": \"FeatureCollection\",\n\t\t\t\t\"features\": []\n\t\t\t}\n\t\t});\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\t// Polygon Layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-polygon\",\n\t\t\t\t\"type\": \"fill\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"fill-color\": color,\n\t\t\t\t\t\"fill-outline-color\": \"black\",\n\t\t\t\t\t\"fill-opacity\": 0.7,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-point\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 3,\n\t\t\t\t\t\"circle-color\": color,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-line\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"type\": \"line\",\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"line-join\": \"round\",\n\t\t\t\t\t\"line-cap\": \"round\"\n\t\t\t\t},\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"line-color\": color,\n\t\t\t\t\t\"line-width\": 2\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t(<any>this.map.getSource(sourceName)).setData(geometry);\n\t}\n\n\tzoomToBbox(): void {\n\t\tif (this.bboxCode != null && this.bboxType != null) {\n\t\t\tif (this.bboxDate == null) {\n\t\t\t\tthis.registryService.getGeoObjectBounds(this.bboxCode, this.bboxType).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.registryService.getGeoObjectBoundsAtDate(this.bboxCode, this.bboxType, this.bboxDate).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsaveDraw(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.postGeometry;\n\t\t}\n\n\t\treturn this.postGeometry;\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\t// TODO\n\t\tconsole.log(\"ERROR\", err);\n\t}\n\n\n}\n","<div #mapDiv class=\"map-view-port text-left\" style=\"height:400px;\"></div>\n\n<simple-edit-control [visible]=\"!readOnly\"  #simpleEditControl></simple-edit-control>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-parent-versions-modal',\n\ttemplateUrl: './manage-parent-versions-modal.component.html',\n\tstyleUrls: []\n})\nexport class ManageParentVersionsModalComponent implements OnInit {\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonVersionChange: Subject<HierarchyOverTime>;\n\n\thierarchy: HierarchyOverTime = null;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onVersionChange = new Subject();\n\t}\n\n\tinit(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t}\n\n\n\thandleVersionChange(hierarchy: HierarchyOverTime): void {\n\t\tif (hierarchy != null) {\n\t\t\tthis.onVersionChange.next(hierarchy);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-parent-versions *ngIf=\"hierarchy != null\" [hierarchy]=\"hierarchy\" (onChange)=\"handleVersionChange($event)\"></manage-parent-versions>\n</div>","import { \n\tComponent, \n\tOnInit, \n\tInput, \n\tOutput, \n\tEventEmitter, \n\tViewChildren, \n\tQueryList } from '@angular/core';\n\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { HierarchyOverTime, PRESENT, ValueOverTime } from '@registry/model/registry';\n\nimport{ DateFieldComponent } from '../../../shared/component/form-fields/date-field/date-field.component';\n\nimport { RegistryService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { LocalizationService } from '@shared/service';\n\nimport * as moment from 'moment';\n\n@Component({\n\tselector: 'manage-parent-versions',\n\ttemplateUrl: './manage-parent-versions.component.html',\n\tstyleUrls: [],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageParentVersionsComponent implements OnInit {\n\t\n\t@ViewChildren('dateFieldComponents') dateFieldComponentsArray:QueryList<DateFieldComponent>;\n\t\n\tcurrentDate : Date =new Date();\n\t\n\tisValid: boolean = true;\n\n\toriginalHierarchy: HierarchyOverTime;\n\t@Input() hierarchy: HierarchyOverTime = null;\n\n\t@Output() onChange = new EventEmitter<HierarchyOverTime>();\n\n\thasDuplicateDate: boolean = false;\n\n\tloading: any = {};\n\n\tconstructor(private service: RegistryService, private localizeService: LocalizationService, private dateService: DateService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.originalHierarchy = JSON.parse(JSON.stringify(this.hierarchy));\n\n\t\tthis.hierarchy.entries.forEach(entry => {\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\t\tif (entry.parents[current.code] == null) {\n\t\t\t\t\tentry.parents[current.code] = { text: '', geoObject: null };\n\t\t\t\t}\n\n\t\t\t\tentry.loading = {};\n\t\t\t}\n\t\t});\n\t}\n\n\tonAddNewVersion(): void {\n\n\t\tlet parents = {};\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparents[current.code] = {};\n\t\t}\n\n\t\tconst entry = {\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\tparents: parents,\n\t\t\tloading: {}\n\t\t}\n\n\t\tthis.hierarchy.entries.push(entry);\n\t}\n\n\tremove(entry: any): void {\n\n\t\tfor (let i = 0; i < this.hierarchy.entries.length; i++) {\n\t\t\tlet vals = this.hierarchy.entries[i];\n\n\t\t\tif (vals.startDate === entry.startDate) {\n\t\t\t\tthis.hierarchy.entries.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.onDateChange();\t\t\n\t}\n\n\tgetTypeAheadObservable(date: string, type: any, entry: any, index: number): Observable<any> {\n\n\t\tlet geoObjectTypeCode = type.code;\n\n\t\tlet parentCode = null;\n\t\tlet parentTypeCode = null;\n\t\tlet hierarchyCode = null;\n\n\t\tif (index > 0) {\n\t\t\tlet pType = this.hierarchy.types[index - 1];\n\t\t\tconst parent = entry.parents[pType.code];\n\n\t\t\tif (parent.geoObject != null && parent.geoObject.properties.code != null) {\n\t\t\t\thierarchyCode = this.hierarchy.code;\n\t\t\t\tparentCode = parent.geoObject.properties.code;\n\t\t\t\tparentTypeCode = parent.geoObject.properties.type;\n\t\t\t}\n\t\t}\n\n\t\treturn Observable.create((observer: any) => {\n\t\t  if (parentCode == null)\n\t\t  {\n\t\t    let loopI = index;\n\t\t  \n\t\t    while (parentCode == null && loopI > 0)\n\t\t    {\n\t\t      loopI = loopI - 1;\n\t\t      \n\t\t      let parent = entry.parents[this.hierarchy.types[loopI].code];\n\t\t      \n\t\t      if (parent != null)\n\t\t      {\n\t\t        if (parent.geoObject != null && parent.geoObject.properties.code != null)\n\t\t        {\n              parentCode = parent.geoObject.properties.code;\n              hierarchyCode = this.hierarchy.code;\n              parentTypeCode = this.hierarchy.types[loopI].code;\n            }\n            else if (parent.goCode != null)\n            {\n              parentCode = parent.goCode;\n              hierarchyCode = this.hierarchy.code;\n              parentTypeCode = this.hierarchy.types[loopI].code;\n            }\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t\n\t\t\tthis.service.getGeoObjectSuggestions(entry.parents[type.code].text, geoObjectTypeCode, parentCode, parentTypeCode, hierarchyCode, date).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, type: any, entry: any, date: string): void {\n\t\t//        let ptn: ParentTreeNode = parent.ptn;\n\n    \tentry.parents[type.code].text = e.item.name + \" : \" + e.item.code;\n   \t\tentry.parents[type.code].goCode = e.item.code;\n\n\t\tlet parentTypes = [];\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparentTypes.push(current.code);\n\n\t\t\tif (current.code === type.code) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.service.getParentGeoObjects(e.item.uid, type.code, parentTypes, true, date).then(ancestors => {\n\n      \tdelete entry.parents[type.code].goCode;\n\t\t\tentry.parents[type.code].geoObject = ancestors.geoObject;\n\t\t\tentry.parents[type.code].text = ancestors.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestors.geoObject.properties.code;\n\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\t\t\t\tlet ancestor = ancestors;\n\n\t\t\t\twhile (ancestor != null && ancestor.geoObject.properties.type != current.code) {\n\t\t\t\t\tif (ancestor.parents.length > 0) {\n\t\t\t\t\t\tancestor = ancestor.parents[0];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tancestor = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ancestor != null) {\n\t\t\t\t\tentry.parents[current.code].geoObject = ancestor.geoObject;\n\t\t\t\t\tentry.parents[current.code].text = ancestor.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestor.geoObject.properties.code;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}\n\n\tonRemove(type: any, entry: any): void {\n\t\tentry.parents[type.code].text = '';\n\t\tdelete entry.parents[type.code].geoObject;\n\t\tdelete entry.parents[type.code].goCode;\n\t}\n\t\n\tcheckDateFieldValidity(): boolean {\n\t\tlet dateFields = this.dateFieldComponentsArray.toArray();\n\t\t\n\t\tfor(let i=0; i<dateFields.length; i++){\n\t\t\tlet field = dateFields[i];\n\t\t\tif(!field.valid){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tonDateChange(): any {\n\t\t\n\t\tthis.isValid = this.checkDateFieldValidity();\n\n\t\tthis.dateService.checkRanges(this.hierarchy.entries);\n\t}\n\n\tformatDateString(dateObj: Date): string {\n\t\tconst day = dateObj.getUTCDate();\n\n\t\treturn dateObj.getUTCFullYear() + \"-\" + (dateObj.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n\t\tvar format = localeData.longDateFormat('L');\n\t\treturn moment().format(format);\n\t\t\n//\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\t\n\tsetInfinity(vAttribute, hierarchyOverTime: HierarchyOverTime): void {\n\t\t\n\t\tif(vAttribute.endDate === PRESENT){\n\t\t\tvAttribute.endDate = new Date();\n\t\t}\n\t\telse{\n\t\t\tvAttribute.endDate = PRESENT\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t}\n\t\n\tsort(hierarchyOverTime: HierarchyOverTime): void {\n\t\t\n\t\t// Sort the data by start date \n\t\thierarchyOverTime.entries.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\t\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.hierarchy);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalHierarchy);\n\t}\n}\n","<div>\n    <ng-template #customItemTemplate let-model=\"item\" let-index=\"index\">\n      <h5>{{model.name }} : {{ model.code }}</h5>\n    </ng-template>\n\n    <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\"><localize key=\"changeovertime.manageVersions.duplicateDate\"></localize></div>\n\n    <form #form=\"ngForm\" class=\"modal-form\" style=\"height: calc(100vh - 165px);display: contents;\" autocomplete=\"off\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"attribute-version-wrapper\">\n                            <ul class=\"list-group\" *ngIf=\"hierarchy != null\">\n                                <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                                    <table class=\"table table-striped\">\n                                    \n                                        <tbody class=\"attribute-element-wrapper\">\n\n                                          <p class=\"message\" *ngIf=\"hierarchy.entries.length === 0\">\n                                            <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                                          </p>\n                  \n                                          <tr @fadeInOut *ngFor=\"let entry of hierarchy.entries; let i = index;\" [ngClass]=\"{'error-border': entry.conflictMessage && entry.conflictMessage.length > 0 && entry.conflictMessage[0].type === 'ERROR', 'warning-border': entry.conflictMessage && entry.conflictMessage.length > 0 && entry.conflictMessage[0].type === 'WARNING'}\">\n                                            <td>\n                                              <table>\n                                                <tr class=\"attribute-value-row\">\n                                                  <td colspan=\"2\">\n                                                     <div style=\"float:left;width:100%;\" *ngFor=\"let type of hierarchy.types; let j = index\"> \n                                                       {{type.label}}\n                                                       <div class=\"input-group\">\n                                                          <input  style=\"width:100%;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n                                                            [name]=\"type.code + '-' + i\"\n                                                            [disabled]=\"entry.startDate == null || entry.startDate === ''\"\n                                                            [(ngModel)]=\"entry.parents[type.code].text\" \n                                                            [typeaheadAsync]=\"true\"\n                                                            [typeahead]=\"getTypeAheadObservable(entry.startDate, type, entry, j)\"\n                                                            (typeaheadOnSelect)=\"typeaheadOnSelect($event, type, entry, entry.startDate)\" \n                                                            (typeaheadLoading)=\"entry.loading[type.code] = $event\"\n                                                            [ngClass]=\"{'inline-loading':entry.loading[type.code]}\"                                                                \n                                                            [typeaheadOptionsLimit]=\"7\"\n                                                            [typeaheadItemTemplate]=\"customItemTemplate\" \n                                                            [typeaheadMinLength]=\"0\"\n                                                            [typeaheadWaitMs]=\"300\">\n                                                          \n                                                            <span class=\"input-group-addon clickable addon-alert\" (click)=\"onRemove(type, entry)\"> \n                                                              <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                                            </span>\n                                                        </div>\n                                                     </div>\n                                                  </td>\n                                                </tr>\n                                                <tr class=\"attribute-date-input-row\">\n                                                  <td>\n                                                    <h5>\n                                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                                    </h5> \n                                                  \n                                                    <date-field #dateFieldComponents style=\"width: 100%;\" [(value)]=\"entry.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\" ></date-field>\n                                                  </td>\n                                                  <td>\n                                                    <div class=\"version-edit-date-container\">\n                                                      <h5>\n                                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                                      </h5>\n                                                      \n                                                      <date-field #dateFieldComponents [(value)]=\"entry.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" [required]=\"true\" [placement]=\"'bottom'\"></date-field>\n                                                      \n                                                    </div>\n                                                  </td>\n                                                </tr>\n                                                <tr *ngIf=\"entry.conflictMessage && entry.conflictMessage.length > 0\">\n<!--                                                   <p class=\"error-message\"> -->\n<!--                                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                                   </p> -->\n                                                    <p *ngFor=\"let msg of entry.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\">\n                                                      {{msg.message}}\n                                                    </p>\n                                                </tr>                                                \n                                              </table>\n                                            </td>\n                                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(entry)\">\n                                              <i class=\"fa fa-times\"></i>\n                                            </td>\n                                          </tr>\n                                        </tbody>\n                                    </table>\n                                </li>\n\n                                <li class=\"list-group-item\" style=\"text-align: left;\">\n                                  <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"><localize key=\"changeovertime.manageVersions.newVersion\"></localize></i>\n                                </li>\n                            </ul>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"holder\" style=\"border: none; width: 100%;\">\n                    <div class=\"button-holder pull-right\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\" >\n                            <localize key=\"io.cancel\"></localize>\n                        </button> \n                        <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || form.invalid || hasDuplicateDate\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n</div>","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from '@circlon/angular-tree-component';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\n\tselector: 'tree-geo-selector',\n\ttemplateUrl: './tree-geo-selector.html',\n\tstyleUrls: ['./tree-geo-selector.css']\n})\nexport class TreeGeoSelector {\n\n\t@Input() hierarchy: HierarchyOverTime;\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() forDate: Date = null;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tnodes: any[] = [];\n\t\n\tactionMapping:IActionMapping = {\n\t  mouse: {\n\t    click: null,\n\t  }\n\t}\n\n\toptions: ITreeOptions = {\n\t\tdisplayField: 'name',\n\t\tisExpandedField: 'expanded',\n\t\tidField: 'code',\n\t\tactionMapping: this.actionMapping\n\t};\n\t\n\n\tconstructor() {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n    let time = null;\n    \n    if (this.forDate != null)\n    {\n\t\t  time = this.forDate.getTime();\n\t\t}\n\n\t\tlet nodes = [];\n\t\tlet current = null;\n\t\t\n\t\tthis.hierarchy.entries.forEach(pot => {\n\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\tif (time == null || time >= startDate && time <= endDate) {\n\t\t\t\tthis.hierarchy.types.forEach(type => {\n\t\t\t\t\tlet node: any = {\n\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\tlabel: type.label,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\texpanded: false\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\tnode.name = pot.parents[type.code].text;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (time == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t  node.name = node.name + \" (\" + pot.startDate + \" -> \" + pot.endDate + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tnode.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (current == null) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcurrent.children.push(node);\n\t\t\t\t\t\tcurrent.expanded = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent = node;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tcurrent = null;\n\t\t});\n\n\t\tthis.nodes = nodes;\n\t}\n\n\tonEdit(): void {\n\t\tthis.onManageVersion.emit(this.hierarchy);\n\t}\n}\n","<div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h4 style=\"margin: 0;\">{{hierarchy.label}}</h4>\n    </div>\n    <div class=\"panel-body\">\n\n<!--       <div class=\"input-group\"> -->\n        <div *ngIf=\"nodes.length > 0\" class=\"tree\" >\n          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n        </div>\n<!--         <span *ngIf=\"!readOnly\" class=\"input-group-addon\">  -->\n<!--           <i class=\"fa fa-pencil clickable\" (click)=\"onEdit()\" aria-hidden=\"true\"></i> -->\n<!--         </span> -->\n<!--       </div> -->\n      \n      <button class=\"btn btn-primary\" style=\"width:100%;margin-top:10px;\" *ngIf=\"!readOnly\" (click)=\"onEdit()\"><localize key=\"modal.button.edit\"></localize></button>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\nimport { GeoObjectType, GeoObjectOverTime } from '@registry/model/registry';\n\n@Component({\n  selector: 'submit-change-request',\n  templateUrl: './submit-change-request.component.html',\n  styleUrls: ['./submit-change-request.css']\n})\nexport class SubmitChangeRequestComponent implements OnInit {\n\n    /*\n     * Reference to the modal current showing\n     */\n\n  bsModalRef: BsModalRef;\n\n  geoObjectType: GeoObjectType;\n\n  geoObjectTypes: GeoObjectType[] = [];\n\n  geoObjectId: string = \"\";\n\n  reason: string = \"\";\n\n  dataSource: Observable<any>;\n  \n  dateStr: string = null;\n  \n  forDate: Date = null;\n  \n  @ViewChild(\"attributeEditor\") attributeEditor;\n\n  @ViewChild(\"geometryEditor\") geometryEditor;\n\n  /*\n   * The current state of the GeoObject in the GeoRegistry\n   */\n  preGeoObject: GeoObjectOverTime = null;\n\n  /*\n   * The state of the GeoObject after our Change Request has been approved \n   */\n  postGeoObject: GeoObjectOverTime = null;\n  \n  showGeoObjectDetails: boolean = false;\n\n  isValid: boolean = false;\n\n  loading: boolean = false;\n\n  geoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\", \"status\"];\n\n  constructor(private modalService: BsModalService, private registryService: RegistryService,\n    private changeRequestService: ChangeRequestService, private localizeService: LocalizationService, private authService: AuthService) {\n\n    this.dataSource = Observable.create((observer: any) => {\n      this.registryService.getGeoObjectSuggestionsTypeAhead(this.geoObjectId, this.geoObjectType.code).then(results => {\n        observer.next(results);\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this.registryService.getGeoObjectTypes([], null).then(types => {\n\n      var myOrgTypes = [];\n      for (var i = 0; i < types.length; ++i) {\n        const type = types[i];\n        const orgCode = type.organizationCode;\n        const typeCode = type.superTypeCode != null && type.superTypeCode != '' ? type.superTypeCode : type.code;\n\n        if (this.authService.isGeoObjectTypeRC(orgCode, typeCode)) {\n          myOrgTypes.push(types[i]);\n        }\n      }\n      this.geoObjectTypes = myOrgTypes;\n\n      this.geoObjectTypes.sort((a, b) => {\n        if (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n        else if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n        else return 0;\n      });\n\n      let pos = this.getGeoObjectTypePosition(\"ROOT\");\n      if (pos) {\n        this.geoObjectTypes.splice(pos, 1);\n      }\n\n      // this.currentGeoObjectType = this.geoObjectTypes[1];\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n  public handleDateChange() {\n    if (this.dateStr != null)\n    {\n      this.forDate = new Date(Date.parse(this.dateStr));\n    }\n    else\n    {\n      this.forDate = null;\n    }\n  }\n  \n  public clickShowDetails()\n  {\n    this.showGeoObjectDetails = !this.showGeoObjectDetails;\n    \n    if (this.forDate == null)\n    {\n      let date = new Date();\n      this.dateStr = date.toISOString().split(\"T\")[0];\n      this.handleDateChange();\n    }\n  }\n\n  public onValidChange(newValid: boolean) {\n    if (this.preGeoObject == null) {\n      this.isValid = false;\n      return;\n    }\n\n    if (this.geometryEditor != null && !this.geometryEditor.getIsValid()) {\n      this.isValid = false;\n      return;\n    }\n\n    if (this.attributeEditor != null && !this.attributeEditor.getIsValid()) {\n      this.isValid = false;\n      return;\n    }\n\n    this.isValid = true;\n  }\n\n  private getGeoObjectTypePosition(code: string): number {\n    for (let i = 0; i < this.geoObjectTypes.length; i++) {\n      let obj = this.geoObjectTypes[i];\n      if (obj.code === code) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  changeTypeaheadLoading(e: boolean): void {\n    this.loading = e;\n  }\n\n  typeaheadOnSelect(e: TypeaheadMatch): void {\n    this.registryService.getGeoObjectOverTime(e.item.code, this.geoObjectType.code).then(geoObject => {\n      this.preGeoObject = geoObject;\n      this.postGeoObject = JSON.parse(JSON.stringify(this.preGeoObject)); // Object.assign is a shallow copy. We want a deep copy.\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  submit(): void {\n\n    let goSubmit: GeoObjectOverTime = this.attributeEditor.getGeoObject();\n\n    if (this.geometryEditor != null) {\n      //      let goGeometries: GeoObjectOverTime = this.geometryEditor.saveDraw();\n      //            goSubmit.geometry = goGeometries.geometry;\n    }\n\n    let actions = [{\n      \"actionType\": \"geoobject/update\", // TODO: account for create\n      \"apiVersion\": \"1.0-SNAPSHOT\", // TODO: make dynamic\n      \"createActionDate\": new Date().getTime(),\n      \"geoObject\": goSubmit,\n      \"contributorNotes\": this.reason\n    }]\n\n    this.changeRequestService.submitChangeRequest(JSON.stringify(actions))\n      .then(geoObject => {\n        this.cancel();\n\n        this.bsModalRef = this.modalService.show(SuccessModalComponent, { backdrop: true });\n        this.bsModalRef.content.message = this.localizeService.decode(\"change.request.success.message\");\n\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n    this.isValid = false;\n  }\n\n  cancel(): void {\n    this.isValid = false;\n    this.preGeoObject = null;\n    this.postGeoObject = null;\n    this.geoObjectId = null;\n    this.geoObjectType = null;\n    this.reason = null;\n  }\n\n  public error(err: any): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n}","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div style=\"margin-top:50px;margin-bottom:50px;background:#f7f7f7;width:100%;padding:10px;\">\n      <h3 style=\"margin-bottom: 20px;\"><localize key=\"change.request.search.for.geoobject.header\"></localize></h3>\n      <div class=\"row\">\n\n        <div class=\"col-md-3\">\n          <localize key=\"dropdown.select.geoobjecttype.option.label\"></localize>\n          <select id=\"geoObjectTypeSelect\" name=\"geoObjectTypeSelect\" class=\"select-area\" [(ngModel)]=\"geoObjectType\" required>\n            <option>  </option>\n            <option *ngFor=\"let got of geoObjectTypes\" [ngValue]=\"got\">{{got.label.localizedValue}}</option>\n          </select>\n        </div>\n        \n        <div class=\"col-md-3\">\n          <localize key=\"changeOverTime.forDate\"></localize>\n          <date-field [(value)]=\"dateStr\" label=\"\" [inputName]=\"'dateStr'\" (change)=\"handleDateChange()\" [disable]=\"!geoObjectType\" \n            [allowInfinity]=\"false\" [allowFutureDates]=\"false\" [required]=\"false\" [placement]=\"'right'\" customStyles=\"width:100%\"></date-field>\n        </div>\n        \n        <div class=\"col-md-4\">\n          <localize key=\"change.request.search.for.geoobject.search.label\"></localize>\n          <input type=\"text\" [ngClass]=\"{'inline-loading':loading}\" [(ngModel)]=\"geoObjectId\" [disabled]=\"!geoObjectType\" name=\"geoObjectId\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\n            [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" [placeholder]=\"('masterlist.search' | localize) + '...'\" class=\"form-control\" autocomplete=\"off\">\n        \n            <span *ngIf=\"preGeoObject\" class=\"pull-right\">\n              <a (click)=\"clickShowDetails()\">\n                <localize *ngIf=\"!showGeoObjectDetails\" key=\"change.request.create.request.show.details.btn\"></localize>\n                <localize *ngIf=\"showGeoObjectDetails\" key=\"change.request.create.request.hide.details.btn\"></localize>\n              </a>\n            </span>\n            \n            <div *ngIf=\"showGeoObjectDetails\">\n              <geoobject-shared-attribute-editor \n              #attributeEditor (valid)=\"onValidChange($event)\" \n              [forDate]=\"this.forDate\"\n              [geoObjectType]=\"this.geoObjectType\" \n              [preGeoObject]=\"this.preGeoObject\" \n              [(postGeoObject)]=\"this.postGeoObject\" \n              [isGeometryInlined]=\"false\"\n              [readOnly]=\"true\"\n              [animate]=false>\n              </geoobject-shared-attribute-editor>\n           </div>\n        </div>\n        \n        <div class=\"col-md-2\">\n          <label></label>\n           <!-- We cannot use the dataset-location-manager here because it pulls the tiles from the dataset (list) and we don't have a dataset. -->\n           <!-- <a *ngIf=\"preGeoObject && forDate\" [routerLink]=\"['/registry/dataset-location-manager', '123', preGeoObject.attributes.type, 'false', dateStr, preGeoObject.attributes.code, 'true']\" -->\n          \n           <a *ngIf=\"preGeoObject && forDate\" [routerLink]=\"['/registry/location-manager', preGeoObject.attributes.uid, preGeoObject.attributes.type, dateStr, 'true', 'CR']\">\n            <button class=\"btn btn-primary\" style=\"width:100%;\"><localize key=\"change.request.open.geoobject.in.editor.link.btn\"></localize></button>\n          </a>\n          <button *ngIf=\"!(preGeoObject && forDate)\" disabled=\"true\" class=\"btn btn-primary\" style=\"width:100%;\"><localize key=\"change.request.open.geoobject.in.editor.link.btn\"></localize></button>\n        </div>\n\n      </div>\n      \n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\nimport { GeoObjectType, GeoObjectOverTime, HierarchyOverTime, ParentTreeNode, ImportError, ValueOverTime } from '@registry/model/registry';\n\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\n\n@Component({\n\tselector: 'geoobject-editor',\n\ttemplateUrl: './geoobject-editor.component.html',\n\tstyleUrls: ['./geoobject-editor.component.css'],\n\tproviders: [DatePipe]\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tisValid: boolean = false;\n\n\tisGeometryEditable: boolean;\n\n\ttabIndex: number = 0;\n\n\tdataSource: Observable<any>;\n\n\tmasterListId: string;\n\tnotes: string;\n\n\tisNewGeoObject: boolean = false;\n\n\t@Input() onSuccessCallback: Function;\n\n\tsubmitFunction: Function = null;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n    /*\n     * GeoObject Property Editor\n     */\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\tarePropertiesValid: boolean = false;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tgoPropertiesPre: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tgoPropertiesPost: GeoObjectOverTime;\n\n\t//    /*\n\t//     * GeoObject Geometry Editor\n\t//     */\n\t//    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\t//\n\t//    areGeometriesValid: boolean = false;\n\n    /*\n     * GeoObject Cascading Parent Selector\n     */\n\t@ViewChild(\"parentSelector\") parentSelector;\n\n\tareParentsValid: boolean = true;\n\n\thierarchies: HierarchyOverTime[];\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tisEditingGeometries: boolean = false;\n\n    /*\n     * The final artifacts which will be submitted\n     */\n\tprivate goSubmit: GeoObjectOverTime;\n\n\tconstructor(private modalService: BsModalService, public bsModalRef: BsModalRef,\n\t\tprivate registryService: RegistryService, private localizeService: LocalizationService,\n\t\tauthService: AuthService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tfindVotWithStartDate(votArray: ValueOverTime[], startDate: string): any {\n\t\tfor (let i: number = 0; i < votArray.length; ++i) {\n\t\t\tif (votArray[i].startDate === startDate) {\n\t\t\t\treturn votArray[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tsetMasterListId(id: string) {\n\t\tthis.masterListId = id;\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tsetOnSuccessCallback(func: Function) {\n\t\tthis.onSuccessCallback = func;\n\t}\n\n\t// Configures the widget to be used in a \"New\" context, that is to say\n\t// that it will be used to create a new GeoObject.\n\tpublic configureAsNew(typeCode: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tthis.isNewGeoObject = true;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, retJson.geoObject.attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\n\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t});\n\t}\n\n\t// Configures the widget to be used to resolve an ImportError\n\tpublic configureFromImportError(importError: ImportError, historyId: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tlet typeCode = importError.object.geoObject.attributes.type;\n\t\tthis.isNewGeoObject = importError.object.isNew;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tif (importError.object != null && importError.object.parents != null && importError.object.parents.length > 0) {\n\t\t\tthis.hierarchies = importError.object.parents;\n\t\t\tthis.areParentsValid = true;\n\t\t}\n\t\telse {\n\t\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t});\n\t\t\tthis.areParentsValid = false;\n\t\t}\n\n\t\t// TODO : Maybe we should ask the server for the pre object, if it exists.\n\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\n\t\tthis.submitFunction = () => {\n\t\t\tlet config = {\n\t\t\t\thistoryId: historyId,\n\t\t\t\timportErrorId: importError.id,\n\t\t\t\tresolution: 'APPLY_GEO_OBJECT',\n\t\t\t\tparentTreeNode: this.hierarchies,\n\t\t\t\tgeoObject: this.goSubmit,\n\t\t\t\tisNew: importError.object.isNew\n\t\t\t}\n\n\t\t\tthis.registryService.submitErrorResolve(config)\n\t\t\t\t.then(() => {\n\n\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t}\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// Configures the widget to be used in an \"Edit Existing\" context\n\tpublic configureAsExisting(code: string, typeCode: string, dateStr: string, isGeometryEditable: boolean): void {\n\t\tthis.isNewGeoObject = false;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObject(code, typeCode);\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchHierarchies(code, typeCode);\n\t\tthis.fetchLocales();\n\t}\n\n\tprivate fetchGeoObject(code: string, typeCode: string) {\n\t\tthis.registryService.getGeoObjectOverTime(code, typeCode).then(geoObject => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\t\t\t//this.goPropertiesPost = JSON.parse( JSON.stringify( this.goPropertiesPre ) );\n\n\t\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t\t//            this.areGeometriesValid = true;\n\t\t\tthis.arePropertiesValid = true;\n\t\t\tthis.isValid = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchLocales() {\n\t\tthis.registryService.getLocales().then(locales => {\n\t\t\tthis.localizeService.setLocales(locales);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchGeoObjectType(code: string) {\n\t\tthis.registryService.getGeoObjectTypes([code], null)\n\t\t\t.then(geoObjectType => {\n\t\t\t\tthis.geoObjectType = geoObjectType[0];\n\n\t\t\t\tif (this.goPropertiesPre != null) {\n\t\t\t\t\tthis.goPropertiesPre.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\t\t\t\tif (this.goPropertiesPost != null) {\n\t\t\t\t\tthis.goPropertiesPost.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\n\t\t\t\tif (!this.geoObjectType.isGeometryEditable) {\n\t\t\t\t\t//                    this.areGeometriesValid = true;\n\t\t\t\t}\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t//                this.error( err );\n\t\t\t});\n\t}\n\n\tprivate fetchHierarchies(code: string, typeTypeCode: string) {\n\t\tthis.registryService.getHierarchiesForGeoObject(code, typeTypeCode)\n\t\t\t.then((hierarchies: any) => {\n\t\t\t\tthis.hierarchies = hierarchies;\n\n\t\t\t\t//                this.parentTreeNode = CascadingGeoSelector.staticGetParents( this.hierarchies );\n\t\t\t\tthis.areParentsValid = true;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tgetTypeAheadObservable(text, typeCode) {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(text, typeCode).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, ptn: ParentTreeNode): void {\n\t\tthis.registryService.getGeoObjectByCode(e.item.code, ptn.geoObject.properties.type)\n\t\t\t.then(geoObject => {\n\n\t\t\t\tptn.geoObject = geoObject;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tpublic onValidChange() {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.arePropertiesValid = this.attributeEditor.getIsValid();\n\t\t}\n\t\t//        if ( this.geometryEditor != null ) {\n\t\t//            this.areGeometriesValid = this.geometryEditor.getIsValid();\n\t\t//        }\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.areParentsValid = this.parentSelector.getIsValid();\n\t\t}\n\n\t\t//        this.isValid = this.arePropertiesValid && this.areGeometriesValid && this.areParentsValid;\n\t\tthis.isValid = this.arePropertiesValid && this.areParentsValid;\n\t}\n\n\tchangePage(nextPage: number, force: boolean = false): void {\n\t\tif (nextPage === this.tabIndex && !force) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tthis.persistModelChanges();\n\n\t\tthis.tabIndex = nextPage;\n\n\t\tthis.onValidChange();\n\n\t\tif (nextPage === 2) {\n\t\t\tthis.isEditingGeometries = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isEditingGeometries = false;\n\t\t}\n\t}\n\n\tprivate persistModelChanges(): void {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.goPropertiesPost = this.attributeEditor.getGeoObject();\n\t\t}\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.hierarchies = this.parentSelector.getHierarchies();\n\t\t}\n\n\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t//        if ( this.parentTreeNode != null ) {\n\t\t//            this.parentTreeNode.geoObject = this.goSubmit;\n\t\t//        }\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic submit(): void {\n\t\tif (this.isValid) {\n\t\t\tthis.bsModalRef.hide();\n\n\t\t\tthis.persistModelChanges();\n\n\t\t\tif (this.submitFunction == null) {\n\t\t\t\tthis.registryService.applyGeoObjectEdit(this.hierarchies, this.goSubmit, this.isNewGeoObject, this.masterListId, this.notes)\n\t\t\t\t\t.then(() => {\n\n\t\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\t\tthis.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.submitFunction();\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"modal-body\">\n    \n    <form class=\"modal-form\" style=\"overflow: visible;\" #goForm=\"ngForm\">\n        <!-- <div class=\"row-holder\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n            \n                <div *ngIf=\"!areParentsValid\" class=\"alert alert-danger\" role=\"alert\">\n                  <localize key=\"geoobject.editor.modal.parents.must.be.assigned.message\"></localize>                \n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"btn-group geobject-editor-tab-holder\">\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 0}\" (click)=\"this.changePage(0);\">\n                        <localize key=\"geoobject.editor.tabZero\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 1, error: !areParentsValid}\" (click)=\"this.changePage(1);\">\n                        <localize key=\"geoobject.editor.tabOne\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 2, disabled: !isGeometryEditable}\" (click)=\"isGeometryEditable && this.changePage(2);\">\n                        <localize key=\"geoobject.editor.tabTwo\"></localize>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- Attributes tab -->\n        <geoobject-shared-attribute-editor \n            *ngIf=\"(this.tabIndex === 0 || this.tabIndex === 2) && this.geoObjectType && this.goPropertiesPre && this.goPropertiesPost\"\n            #attributeEditor \n            (valid)=\"this.onValidChange()\" \n            [geoObjectType]=\"this.geoObjectType\"\n            [preGeoObject]=\"this.goPropertiesPre\" \n            [postGeoObject]=\"this.goPropertiesPost\" \n            [forDate]=\"this.forDate\" \n            [isNew]=\"this.isNewGeoObject\"\n            [isEditingGeometries]=\"this.isEditingGeometries\">\n        </geoobject-shared-attribute-editor>\n\n\n        <!-- Parents tab -->\n        <div *ngIf=\"this.tabIndex === 1 && this.hierarchies != null\">\n          <cascading-geo-selector #parentSelector \n            [isValid]=\"this.isValid\" (valid)=\"this.onValidChange()\"\n            [forDate]=\"this.forDate\"             \n            [hierarchies]=\"this.hierarchies\">\n          </cascading-geo-selector>\n        </div>\n\n         <!-- Geometry tab -->\n         <!--\n         <div class=\"row-holder\">\n            <div class=\"label-holder\"></div>\n            <div class=\"holder\">\n              <geoobject-editor-map #geometryEditor *ngIf=\"this.tabIndex === 2\" [geometryType]=\"this.geoObjectType.geometryType\" [readOnly]=\"true\" [preGeometry]=\"this.goGeometries.getVotAtDate(this.forDate, 'geometry', this.geoObjectType, this.localizeService).value\" [bboxCode]=\"this.goGeometries.attributes.code\" [bboxType]=\"this.geoObjectType.code\"></geoobject-editor-map>\n            </div>\n        </div>\n        -->\n\n        <div *ngIf=\"!isMaintainer\" class=\"row-holder\" style=\"padding-top: 10px;\">\n            <div class=\"label-holder\"><label><localize key=\"change.request.action.detail.contributorNotes\"></localize></label></div>\n            <div class=\"holder text-left\">\n              <textarea style=\"width: 100%;border-radius: 8px;height: 70px; padding:5px;\" class=\"detail-value\" [(ngModel)]=\"notes\" name=\"notes\" required></textarea>\n              <div class=\"form-input-validation-error-message-wrapper\">\n                <p *ngIf=\"!notes\" class=\"error-message\">Notes are required.</p>\n              </div>\n            </div>\n        </div>\n\n         <div class=\"row-holder\" style=\"margin-bottom: 20px;\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input style=\"width:100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"button-holder text-left\">\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                        <localize key=\"modal.button.cancel\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"goForm.invalid || !this.isValid\">\n                        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\nimport { Step, StepConfig } from '@registry/model/registry';\n\n\n@Component( { \n    selector: 'step-indicator',\n    templateUrl: './step-indicator.component.html',\n    styleUrls: ['./step-indicator.css']\n} )\nexport class StepIndicatorComponent {\n\n    @Input('steps')\n    set steps(value: StepConfig) {\n        this._stepConfig = value;\n    }\n\n    _stepConfig: StepConfig;\n    step: Step;\n\n\n    constructor( private localizeService: LocalizationService ) {\n\n        this._stepConfig = {\"steps\": []};\n    }\n\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n       \n    }\n}\n","<div class=\"step-indicator\">\n    <ul *ngIf=\"_stepConfig && _stepConfig.steps && _stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\"\n            *ngFor=\"let step of _stepConfig.steps\"\n            [ngClass]=\"{'complete':step.status === 'COMPLETE', 'stuck':step.status === 'STUCK', 'working': step.status === 'WORKING'}\">\n            {{step.label}}\n        </li>\n    </ul>\n</div>","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { ContextLayer, ContextLayerGroup, MasterList } from '@registry/model/registry';\nimport { ContextLayerModalComponent } from './context-layer-modal.component';\nimport { RegistryService } from '@registry/service';\n\n@Component({\n\tselector: 'layer-panel',\n\ttemplateUrl: './layer-panel.component.html',\n\tstyleUrls: ['./location-manager.css']\n})\nexport class LayerPanelComponent implements OnInit, OnChanges {\n\n\t@Input() filter: string[] = [];\n\t@Output() layerChange = new EventEmitter<ContextLayer>();\n\t@Output() baseLayerChange = new EventEmitter<any>();\n\n\tbaselayerIconHover = false;\n\n\tlists: MasterList[] = [];\n\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'baselayer.satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n//\t\t {\n//\t\t \tname: 'Streets',\n//\t\t \tlabel: 'baselayer.streets',\n//\t\t \tid: 'streets-v11',\n//\t\t \tsprite: 'mapbox://sprites/mapbox/streets-v11',\n//\t\t \turl: 'mapbox://styles/mapbox/streets-v11'\n//\t\t }\n\t];\n\n\tcontextLayerGroups: ContextLayerGroup[] = [];\n\n\tconstructor(private modalService: BsModalService, public service: RegistryService) {\n\t}\n\n\n\tngOnInit(): void {\n\n\t\tthis.service.getAllMasterListVersions().then(lists => {\n\t\t\tthis.lists = lists;\n\n\t\t\tthis.updateContextGroups();\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.filter.currentValue !== changes.filter.previousValue) {\n\t\t\tthis.updateContextGroups();\n\t\t}\n\t}\n\n\tupdateContextGroups(): void {\n\n\t\tthis.lists.forEach(list => {\n\n\t\t\tlet contextGroup = { oid: list.oid, displayLabel: list.displayLabel.localizedValue, contextLayers: [] };\n\t\t\t\n\t\t\tlist.versions.forEach(version => {\n\n\t\t\t\tconst index = this.filter.indexOf(version.oid);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tlet thisContextLayer = { oid: version.oid, displayLabel: version.forDate, active: false, enabled: false };\n\n\t\t\t\t\tcontextGroup.contextLayers.push(thisContextLayer);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (contextGroup.contextLayers.length > 0) {\n\t\t\t\tthis.contextLayerGroups.push(contextGroup);\n\t\t\t}\n\t\t});\n\n\t}\n\n\tgroupHasEnabledContextLayers(group: string): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif (cLayerGroup.oid === group) {\n\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\t\thasEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\thasEnabledContextLayers(): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\thasEnabled = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\ttoggleContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = !layer.active;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\tremoveContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = false;\n\t\tlayer.enabled = false;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\taddContextLayerModal(): void {\n\t\tlet bsModalRef = this.modalService.show(ContextLayerModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'context-layer-modal'\n\t\t});\n\t\tbsModalRef.content.contextLayerGroups = this.contextLayerGroups;\n\n\t\t//\t\tbsModalRef.content.onSubmit.subscribe(() => {\n\t\t//\n\t\t//\t\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t//\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t//\n\t\t//\t\t\t\t\tconsole.log(\"Emitting event\", cLayer);\n\t\t//\t\t\t\t\tthis.layerChange.emit(cLayer);\n\t\t//\t\t\t\t});\n\t\t//\t\t\t})\n\t\t//\n\t\t//\t\t});\n\t}\n\n\n\ttoggleBaseLayer(layer: any): void {\n\t\tthis.baseLayers.forEach(bl => {\n\t\t\tbl.active = false;\n\t\t})\n\t\t\n\t\tlayer.active = true;\n\n\t\tthis.baseLayerChange.emit(layer);\n\t}\n\n}\n","\n<div class=\"layer-toggle\" (mouseenter)=\"baselayerIconHover = true\" (mouseleave)=\"baselayerIconHover = false\">\n\n  <i class=\"fa fa-bars\" *ngIf=\"!baselayerIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n  <div [hidden]=\"!baselayerIconHover\">\n\n    <div style=\"margin-bottom: 10px;\">\n      <h4>\n        <localize key=\"explorer.base.layers.label\"></localize>\n      </h4>\n      <div class=\"row-form\" *ngFor=\"let baseLayer of baseLayers\">\n        <input class=\"layer-toggle-input\" type='radio' name='baselayers' [value]='baseLayer.id' [checked]=\"baseLayer.selected\" (change)=\"toggleBaseLayer(baseLayer)\">\n        <label class=\"layer-toggle-label\"><localize [key]=\"baseLayer.label\"></localize></label>\n      </div>\n    </div>\n    <div>\n      <div *ngIf=\"hasEnabledContextLayers()\">\n        <h4>\n          <localize key=\"explorer.context.layers.label\"></localize>\n        </h4>\n        <div class=\"list-group\">\n          <div *ngFor=\"let cLayerGroup of contextLayerGroups;\">\n            <div *ngIf=\"groupHasEnabledContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n              <label>{{ cLayerGroup.displayLabel }}</label>\n              <div class=\"list-group\">\n                <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                  <div class=\"list-group-item\" style=\"border: none;\" *ngIf=\"cLayer.enabled\">\n                    <input type=\"checkbox\" [checked]=\"cLayer.active\" (click)=\"toggleContextLayer(cLayer)\"> {{ cLayer.displayLabel }} <i class=\"fa fa-times delete-btn clickable\" aria-hidden=\"true\" (click)=\"removeContextLayer(cLayer)\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"addContextLayerModal()\">+ <localize key=\"explorer.add.context.layer.button.label\"></localize></button>\n    </div>\n\n  </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, HierarchyOverTime, ValueOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorModalComponent, ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\n@Component({\n\tselector: 'feature-panel',\n\ttemplateUrl: './feature-panel.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class FeaturePanelComponent implements OnInit {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY',\n\t\tGEOMETRY: 'GEOMETRY'\n\t}\n\n\t@Input() datasetId: string;\n\n\t@Input() type: GeoObjectType;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() set code(value: string) {\n\t\tthis.updateCode(value);\n\t}\n\n\t_code: string = null;\n\n\t@Input() geometryChange: Subject<any>;\n\n\t@Output() geometryEdit = new EventEmitter<ValueOverTime>();\n\t@Output() featureChange = new EventEmitter<GeoObjectOverTime>();\n\t@Output() modeChange = new EventEmitter<boolean>();\n\t@Output() panelCancel = new EventEmitter<void>();\n\t@Output() panelSubmit = new EventEmitter<{isChangeRequest:boolean, geoObject?: any, changeRequestId?: string}>();\n\t\n\tisValid: boolean = true;\n\n\tbsModalRef: BsModalRef;\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tpreGeoObject: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tpostGeoObject: GeoObjectOverTime;\n\n\tattribute: Attribute = null;\n\n\tisNew: boolean = false;\n\n\tisEdit: boolean = true;\n\n\thierarchies: HierarchyOverTime[];\n\n\thierarchy: HierarchyOverTime = null;\n\t\n\treason: string = \"\";\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private authService: AuthService) {\n\t}\n\n\tngOnInit(): void {\n\t  this.isMaintainer = this.authService.isSRA() || this.authService.isOrganizationRA(this.type.organizationCode) || this.authService.isGeoObjectTypeOrSuperRM(this.type);\n\t\tthis.mode = 'ATTRIBUTES';\n\t\tthis.geometryChange.subscribe(v => {\n\t\t\tthis.updateGeometry(v);\n\t\t});\n\t}\n\t\n\tsetValid(valid: boolean): void {\n\t\tthis.isValid = valid;\n\t}\n\n\tupdateCode(code: string): void {\n\t\tthis._code = code;\n\t\tthis.postGeoObject = null;\n\t\tthis.preGeoObject = null;\n\t\tthis.hierarchies = null;\n\t\t\n\t\t//this.setEditMode(false);\n\t\tthis.setEditMode(true);\n\n\t\tif (code != null && this.type != null) {\n\n\t\t\tif (code !== '__NEW__') {\n\t\t\t\tthis.isNew = false;\n\n\t\t\t\tthis.service.getGeoObjectOverTime(code, this.type.code).then(geoObject => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t\tthis.service.getHierarchiesForGeoObject(code, this.type.code).then((hierarchies: HierarchyOverTime[]) => {\n\t\t\t\t\tthis.hierarchies = hierarchies;\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.isNew = true;\n\n\t\t\t\tthis.service.newGeoObjectOverTime(this.type.code).then(retJson => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, retJson.geoObject.attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\n\t\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t\t\tthis.setEditMode(true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\t\n\n\tonEditGeometryVersion(vot: ValueOverTime): void {\n\t\tthis.geometryEdit.emit(vot);\n\t}\n\n\tupdateGeometry(geometry: any): void {\n\t\t// Check if the geometry has been updated\n\t\tif (geometry != null && this.postGeoObject != null) {\n\n\t\t\tlet values = this.postGeoObject.attributes['geometry'].values;\n\t\t\tconst time = this.forDate.getTime();\n\n\t\t\tvalues.forEach(vot => {\n\n\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tvot.value = geometry;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tcalculateGeometry(goot: GeoObjectOverTime): any {\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tlet values = goot.attributes['geometry'].values;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst vot = values[i];\n\n\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\treturn vot.value;\n\t\t\t}\n\t\t};\n\n\t\treturn null;\n\t}\n\n\tonCancelInternal(): void {\n\n    this.panelCancel.emit();\n\n\n\t\t//if (this._code === '__NEW__') {\n\t\t//\tthis.updateCode(null);\n\t\t//}\n\t\t//else {\n\t\t//\tthis.updateCode(this._code);\n\t\t//}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.applyGeoObjectEdit(this.hierarchies, this.postGeoObject, this.isNew, this.datasetId, this.reason).then((applyInfo: any) => {\n\t\t  if (!applyInfo.isChangeRequest)\n      {\n\t\t\t  this.featureChange.emit(this.postGeoObject);\n\t\t\t  this.updateCode(this._code);\n\t\t\t}\n\t\t\tthis.panelSubmit.emit(applyInfo);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonManageAttributeVersion(attribute: Attribute): void {\n\t\tthis.attribute = attribute;\n\t\tthis.mode = this.MODE.VERSIONS;\n\t}\n\n\tonManageHiearchyVersion(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t\tthis.mode = this.MODE.HIERARCHY;\n\t}\n\n\tonAttributeChange(postGeoObject: GeoObjectOverTime): void {\n\t\t\n\t\tthis.postGeoObject = postGeoObject;\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\n\t\tthis.geometryEdit.emit(null);\n\t}\n\n\tonHierarchyChange(hierarchy: HierarchyOverTime): void {\n\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\tif (index !== -1) {\n\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t}\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\t}\n\n\tonEditAttributes(): void {\n\t\tthis.setEditMode(!this.isEdit);\n\t}\n\n\tsetEditMode(value: boolean): void {\n\t\tthis.isEdit = value;\n\t\tthis.reason = null;\n\n\t\tthis.modeChange.emit(this.isEdit)\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <div *ngIf=\"mode == MODE.ATTRIBUTES && postGeoObject != null\">\n    <!-- Attributes tab -->\n    <geoobject-shared-attribute-editor \n      #attributeEditor \n      [geoObjectType]=\"type\" \n      [preGeoObject]=\"preGeoObject\" \n      [postGeoObject]=\"postGeoObject\" \n      [forDate]=\"this.forDate\" \n      [isNew]=\"isNew\" \n      [isEditingGeometries]=\"false\" \n      [customEvent]=\"true\"\n      (onManageVersion)=\"onManageAttributeVersion($event)\" \n      (onChange)=\"onAttributeChange($event)\" \n      [readOnly]=\"!isEdit\"\n      [animate]=true\n      (valid)=\"setValid($event)\"\n      > \n    </geoobject-shared-attribute-editor>\n    \n    <div *ngIf=\"isEdit\" class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <h4 style=\"margin:0;\">\n          <localize key=\"explorer.geometry.section\"></localize>\n        </h4>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"button-holder text-left\" style=\"margin:0;\">\n          <button type=\"submit\" style=\"width:100%;\" (click)=\"this.mode = this.MODE.GEOMETRY\" class=\"btn btn-primary\" role=\"button\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"hierarchies != null\">\n      <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"this.forDate\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEdit\" (onManageVersion)=\"onManageHiearchyVersion($event)\"> </tree-geo-selector>\n    </div>\n    \n    <div *ngIf=\"isEdit && !isMaintainer\" class=\"form-group\" style=\"z-index: 0;\">\n      <label> \n        <localize key=\"change.request.reason.label\"></localize>\n      </label>\n      <textarea rows=\"4\" cols=\"50\" [(ngModel)]=\"reason\" class=\"form-control\" name=\"reason-input\" required></textarea>\n    </div>\n\n    <div class=\"button-holder text-right\" style=\"margin-bottom: 20px;\">\n      <button *ngIf=\"!readOnly && !isEdit\" type=\"submit\" (click)=\"onEditAttributes()\" class=\"btn btn-primary\" style=\"width:100%;\" role=\"button\">\n        <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n      </button>\n      \n      <button *ngIf=\"isEdit\" type=\"button\" class=\"btn btn-default\" (click)=\"onCancelInternal()\">\n        <localize key=\"modal.button.cancel\"></localize>\n      </button>\n      <button *ngIf=\"isEdit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || (!isMaintainer && (!reason || (reason && reason.trim().length === 0)))\">\n        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n      </button>\n\n    </div>\n  </div>\n  <div *ngIf=\"mode == MODE.VERSIONS && attribute != null\">\n    <!-- Attributes tab -->\n    <manage-versions \n      [attribute]=\"attribute\"\n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\">\n    </manage-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.HIERARCHY && hierarchy != null\">\n    <!-- Attributes tab -->\n    <manage-parent-versions \n      [hierarchy]=\"hierarchy\"\n      (onChange)=\"onHierarchyChange($event)\">\n    </manage-parent-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.GEOMETRY\">\n    <!-- Attributes tab -->\n    <geometry-panel \n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\"\n      (onEdit)=\"onEditGeometryVersion($event)\">\n    </geometry-panel>\n  </div>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\n@Component({\n\tselector: 'create-hierarchy-type-modal',\n\ttemplateUrl: './create-hierarchy-type-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateHierarchyTypeModalComponent implements OnInit {\n\n\thierarchyType: HierarchyType;\n\torganizations: any = [];\n\tmessage: string = null;\n\n\tedit: boolean = false; // if true, we are updating an existing. If false, we are creating new\n\n\treadOnly: boolean = false;\n\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onHierarchytTypeCreate: Subject<HierarchyType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, private hierarchyService: HierarchyService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onHierarchytTypeCreate = new Subject();\n\n\t\tthis.hierarchyType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"rootGeoObjectTypes\": [],\n\t\t\t\"organizationCode\": \"\"\n\t\t};\n\n\t\tthis.registryService.getOrganizations().then(orgs => {\n\n\t\t\t// Filter out organizations they're not RA's of, unless we're readOnly.\n\t\t\tif (!this.readOnly) {\n\t\t\t\tthis.organizations = [];\n\n\t\t\t\tfor (var i = 0; i < orgs.length; ++i) {\n\t\t\t\t\tif (this.auth.isOrganizationRA(orgs[i].code)) {\n\t\t\t\t\t\tthis.organizations.push(orgs[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.organizations = orgs;\n\t\t\t}\n\n\t\t\tif (!this.edit && this.organizations.length === 1) {\n\t\t\t\tthis.hierarchyType.organizationCode = this.organizations[0].code;\n\t\t\t\tthis.organizationLabel = this.organizations[0].label.localizedValue;\n\t\t\t}\n\t\t\telse if (this.edit || this.readOnly) {\n\t\t\t\tthis.organizationLabel = this.getOrganizationLabelFromCode(this.hierarchyType.organizationCode);\n\t\t\t}\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tgetOrganizationLabelFromCode(orgCode: string) {\n\t\tfor (var i = 0; i < this.organizations.length; ++i) {\n\t\t\tif (this.organizations[i].code === orgCode) {\n\t\t\t\treturn this.organizations[i].label.localizedValue;\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(\"Did not find org with code [\" + orgCode + \"]\");\n\t\treturn orgCode;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tif (this.readOnly) {\n\t\t\tthis.bsModalRef.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.edit) {\n\t\t\tconsole.log(this.hierarchyType);\t\t\t\n\t\t\t\n\t\t\tthis.hierarchyService.updateHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.hierarchyService.createHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<form>\n\n  <div class=\"modal-body\">\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n      <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"heading text-center\">\n          <h1>\n            <localize key=\"hierarchy.management.create.hierarchy.title\"></localize> \n          </h1>\n        </div> \n        \n      <div class=\"form-group\">\n        <label for=\"codeInput\">\n          <localize key=\"data.property.label.code\"></localize>\n        </label>\n        <input [(ngModel)]=\"hierarchyType.code\" name=\"code\" type=\"input\" class=\"form-control\" id=\"codeInput\"\n          [disabled]=\"edit || readOnly\" required>\n      </div>\n      <div class=\"form-group\" *ngFor=\"let localeValue of hierarchyType.label.localeValues\">\n        <label for=\"labelInput\">\n          <localize key=\"data.property.label.label\"></localize> \n          <span  style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n        </label>\n        <input [disabled]=\"readOnly\" [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\"\n          required>\n      </div>\n      \n      <localized-text [(value)]=\"hierarchyType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\" [disabled]=\"readOnly\"></localized-text>\n\n      <div class=\"form-group\">\n        <label for=\"organization\">\n          <localize key=\"attribute.organization.label\"></localize>\n        </label>\n        <select *ngIf=\"!edit && organizations.length > 1\" [disabled]=\"edit || readOnly\" class=\"select-area\" name=\"organization\"\n          [(ngModel)]=\"hierarchyType.organizationCode\" required>\n          <option></option>\n          <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label.localizedValue}}</option>\n        </select>\n        <span *ngIf=\"!edit && organizations.length == 1\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n        <span *ngIf=\"edit\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.progress\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.progress\" name=\"progress\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.acknowledgement\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.acknowledgement\" name=\"acknowledgement\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.disclaimer\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.disclaimer\" name=\"disclaimer\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.accessConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.useConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      \n      <hr/>\n      \n      <div class=\"form-group\">\n        <h4>\n          <localize key=\"masterlist.contact\"></localize>\n        </h4>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.contact\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.contact\" name=\"contact\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.phoneNumber\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.phoneNumber\" name=\"phoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.email\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>      \n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readOnly\" type=\"submit\" [disabled]=\"hierarchyType.code.length < 1 || form.invalid\" class=\"btn btn-primary\"\n              (click)=\"handleOnSubmit()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { Organization } from '@shared/model/core';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\n@Component({\n\tselector: 'create-geoobjtype-modal',\n\ttemplateUrl: './create-geoobjtype-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateGeoObjTypeModalComponent implements OnInit {\n\n\tgeoObjectType: GeoObjectType;\n\torganization: Organization = null;\n\tmessage: string = null;\n\tparents: GeoObjectType[];\n\thierarchyType: HierarchyType;\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onGeoObjTypeCreate: Subject<GeoObjectType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjTypeCreate = new Subject();\n\n\t\tthis.geoObjectType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"geometryType\": \"MULTIPOINT\",\n\t\t\t\"isLeaf\": false,\n\t\t\t\"isGeometryEditable\": true,\n\t\t\t\"organizationCode\": \"\",\n\t\t\t\"attributes\": [],\n\t\t};\n\t}\n\n\tinit(organization: Organization, parents: GeoObjectType[], groupSuperType: GeoObjectType, isAbstract: boolean) {\n\n\t\tthis.geoObjectType.isAbstract = isAbstract ? isAbstract : false;\n\n\t\tif (groupSuperType) {\n\t\t\tthis.geoObjectType.superTypeCode = groupSuperType.code;\n\t\t\tthis.geoObjectType.geometryType = groupSuperType.geometryType;\n\t\t\tthis.geoObjectType.isPrivate = groupSuperType.isPrivate;\n\t\t}\n\n\t\t// Filter out parents that are not abstract\n\t\tthis.parents = parents.filter(parent => parent.isAbstract);\n\n\t\t// Filter out organizations they're not RA's of\n\t\tthis.organization = organization;\n\t\tthis.geoObjectType.organizationCode = this.organization.code;\n\t\tthis.organizationLabel = this.organization.label.localizedValue;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tthis.registryService.createGeoObjectType(JSON.stringify(this.geoObjectType)).then(data => {\n\t\t\tthis.onGeoObjTypeCreate.next(data);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\ttoggleIsLeaf(): void {\n\t\tthis.geoObjectType.isLeaf = !this.geoObjectType.isLeaf;\n\t}\n\n\ttoggleIsGeometryEditable(): void {\n\t\tthis.geoObjectType.isGeometryEditable = !this.geoObjectType.isGeometryEditable;\n\t}\n\n\ttoggleIsAbstract(): void {\n\t\tthis.geoObjectType.isAbstract = !this.geoObjectType.isAbstract;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"form.valid && handleOnSubmit()\" class=\"modal-form\">\n\n  <div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize *ngIf=\"geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.group.title\"></localize> \n        <localize *ngIf=\"!geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.title\"></localize> \n      </h1>\n    </div> \n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <div>\n            <label for=\"codeInput\">\n              <localize key=\"data.property.label.code\"></localize>\n            </label>\n            <input [(ngModel)]=\"geoObjectType.code\" name=\"code\" type=\"text\" class=\"form-control\" id=\"codeInput\"\n              required>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\" *ngFor=\"let localeValue of geoObjectType.label.localeValues\">\n          <label>\n            <localize key=\"data.property.label.label\"></localize> \n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\"\n            class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <localized-text [(value)]=\"geoObjectType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\"></localized-text>\n      </div>\n    </div>\n    \n    <div class=\"row\" *ngIf=\"!geoObjectType.superTypeCode\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <label style=\"display: block;\">\n            <localize key=\"attribute.group.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n        \n          <label style=\"display: block;\">\n            <localize key=\"geoObjectType.attr.visibility.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"geoObjectType.superTypeCode != null\" [(value)]=\"geoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"geometryType\">\n            <localize key=\"data.property.label.geometryType\"></localize>\n          </label>\n          <select class=\"select-area\" name=\"geometryType\" [(ngModel)]=\"geoObjectType.geometryType\" required [disabled]=\"geoObjectType.superTypeCode != null && geoObjectType.superTypeCode != ''\">\n            <option></option>\n            <!-- <option value=\"POINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"LINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"POLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n            <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.multipoint\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.multiline\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.multipolygon\"></localize>\n            </option> -->\n             <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <!-- \n    <div class=\"form-group\">\n      <div >\n        <div class=\"check-block\" style=\"display:inline-block;\">\n         <div (click)=\"toggleIsLeaf()\" [ngClass]=\"{'chk-checked' : geoObjectType.isLeaf}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n          <span></span>\n         </div>\n    \n         <label class=\"checkbox-label\" style=\"line-height: normal;\"> <localize key=\"hierarchy.management.option.label.isLeafNode\"></localize></label>\n        </div>\n       </div>\n    </div>\n -->\n\n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <div class=\"check-block\">\n            <div (click)=\"toggleIsGeometryEditable()\" [ngClass]=\"{'chk-checked' : geoObjectType.isGeometryEditable}\"\n              style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n              <span></span>\n            </div>\n\n            <label class=\"checkbox-label\">\n              <localize key=\"hierarchy.management.option.label.isGeometryEditable\"></localize>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"organization\">\n            <localize key=\"attribute.organization.label\"></localize>\n          </label>\n          <span class=\"text\">\n            <input type=\"text\" name=\"organization\" [(ngModel)]=\"organizationLabel\" disabled required>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-primary\">\n            <localize key=\"modal.button.ok\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyService, GeoObjectTypeManagementService } from '@registry/service';\n\n\n@Component({\n\tselector: 'manage-geoobjecttype-modal',\n\ttemplateUrl: './manage-geoobjecttype-modal.component.html',\n\tstyleUrls: ['./manage-geoobjecttype-modal.css']\n})\nexport class ManageGeoObjectTypeModalComponent implements OnInit {\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": \"\", \"termOption\": \"\" };\n\tmodalStateSubscription: Subscription;\n\tgeoObjectType: GeoObjectType;\n\tpublic onGeoObjectTypeSubmitted: Subject<GeoObjectType>;\n\treadOnly: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, geoObjectTypeManagementService: GeoObjectTypeManagementService) {\n\t\tthis.modalStateSubscription = geoObjectTypeManagementService.modalStepChange.subscribe(modalState => {\n\t\t\tthis.modalState = modalState;\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjectTypeSubmitted = new Subject();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.modalStateSubscription.unsubscribe();\n\t}\n\n\tonModalStateChange(state: any): void {\n\t\tthis.modalState = state;\n\t}\n\n\tonGeoObjectTypeChange(data: any): void {\n\t\t// send persisted geoobjecttype to the parent calling component (hierarchy.component) so the \n\t\t// updated GeoObjectType can be reflected in the template\n\t\tthis.onGeoObjectTypeSubmitted.next(data);\n\t}\n\n\tupdate(): void {\n\n\t}\n\n\tclose(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","\n<form>\n\n  <modal-step-indicator></modal-step-indicator>\n\n  <geoobjecttype-input *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\" [readOnly]=\"readOnly\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\" [geoObjectType]=\"geoObjectType\" [setGeoObjectType]=\"geoObjectType\"></geoobjecttype-input>\n\n  <manage-attributes-modal *ngIf=\"modalState.state === 'MANAGE-ATTRIBUTES'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></manage-attributes-modal>\n\n  <define-attribute-modal-content *ngIf=\"modalState.state === 'DEFINE-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></define-attribute-modal-content>\n\n  <edit-attribute-modal-content *ngIf=\"modalState.state === 'EDIT-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></edit-attribute-modal-content>\n\n  <manage-term-options *ngIf=\"modalState.state === 'MANAGE-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\"></manage-term-options>\n\n  <edit-term-option-input *ngIf=\"modalState.state === 'EDIT-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" [termOption]=\"modalState.termOption\"></edit-term-option-input>\n\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { StepConfig } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component( {\n    selector: 'geoobjecttype-input',\n    templateUrl: './geoobjecttype-input.component.html',\n    styleUrls: ['./geoobjecttype-input.css']\n} )\nexport class GeoObjectTypeInputComponent implements OnInit {\n\n    @Input() readOnly: boolean = false;\n    @Input() geoObjectType: GeoObjectType;\n    @Output() geoObjectTypeChange:  EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n    editGeoObjectType: GeoObjectType;\n    \n    organizationLabel: string;\n    \n    @Input('setGeoObjectType') \n    set in(geoObjectType: GeoObjectType){\n        if(geoObjectType){\n          this.editGeoObjectType = JSON.parse(JSON.stringify(geoObjectType));\n        //   this.geoObjectType = geoObjectType;\n        }\n    }\n    message: string = null;\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\":\"\", \"termOption\":\"\"};\n\n    modalStepConfig: StepConfig = {\"steps\": [\n        {\"label\":this.localizationService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\":true, \"enabled\":true}\n    ]};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, \n        private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, \n        private localizationService: LocalizationService, private registryService: RegistryService ) {\n    \n    }\n\n    ngOnInit(): void {\n\n        this.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n        this.geoObjectTypeManagementService.setModalState(this.modalState);\n        \n        this.fetchOrganizationLabel();\n    }\n\n    fetchOrganizationLabel(): void {\n        \n      this.registryService.getOrganizations().then(orgs => {\n      \n        for (var i = 0; i < orgs.length; ++i)\n        {\n          if (orgs[i].code === this.editGeoObjectType.organizationCode)\n          {\n            this.organizationLabel = orgs[i].label.localizedValue;\n          }\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n      });\n    }\n\n    manageAttributes(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageAttributes, \"attribute\":\"\", \"termOption\":\"\"})\n    }\n\n    onModalStateChange(state: ManageGeoObjectTypeModalState): void {\n        this.modalState = state;\n    }\n\n    update(): void {\n        this.registryService.updateGeoObjectType( this.editGeoObjectType ).then( geoObjectType => {\n\n            // emit the persisted geoobjecttype to the parent widget component (manage-geoobjecttype.component)\n            // so that the change can be updated in the template\n            this.geoObjectTypeChange.emit(geoObjectType);\n\n            this.close();\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // resetGeoObjectType(): void {\n    //     this.geoObjectType = this.geoObjectTypeOriginal;\n    // }\n\n    close(): void {\n        // this.resetGeoObjectType();\n        this.bsModalRef.hide();\n    }\n\n\n    isValid(): boolean {\n        // if(this.attribute.code && this.attribute.label) {\n\n        //     // if code has a space\n        //     if(this.attribute.code.indexOf(\" \") !== -1){\n        //         return false;\n        //     }\n\n        //     // If label is only spaces\n        //     if(this.attribute.label.replace(/\\s/g, '').length === 0) {\n        //         return false\n        //     }\n\n        //     return true;\n        // }\n        \n        // return false;\n\n        return true;\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","\n<div class=\"modal-body\" *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"editGeoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading text-center\">\n            <h1>\n                <localize key=\"hierarchy.management.edit.geoobjecttype.title\"></localize>\n                : {{editGeoObjectType.label.localizedValue}}\n            </h1>\n        </div>\n        <fieldset>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.code\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"editGeoObjectType.code\" name=\"code\" disabled required>\n                    </span>\n                </div>\n            </div>\n            \n            <localized-input [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.label\" key=\"data.property.label.label\"></localized-input>\n            <localized-text [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.description\" key=\"data.property.label.description\"></localized-text>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"attribute.group.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"geoObjectType.attr.visibility.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"geoObjectType.superTypeCode\" [(value)]=\"editGeoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\" *ngIf=\"!geoObjectType.isAbstract && geoObjectType.superTypeCode\">\n                <div class=\"label-holder\">\n                    <localize key=\"attribute.parentType.label\"></localize>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> \n                        {{geoObjectType.superTypeCode}}\n                    </span>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.geometryType\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select name=\"geometryType\" [(ngModel)]=\"editGeoObjectType.geometryType\" disabled>\n                        <option></option>\n                         <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <!-- <option value=\"POINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"LINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"POLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.multipoint\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.multiline\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.multipolygon\"></localize></option> -->\n                    </select>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.option.label.geometryEditable\"></localize></label>\n                </div>\n                <div class=\"holder\">\n\n                    <boolean-field [disable]=\"readOnly\" [(value)]=\"editGeoObjectType.isGeometryEditable\" [localizeLabelKey]=\"'hierarchy.management.option.label.isGeometryEditable'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"attribute.organization.label\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n              </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group list-group-flush\">\n                                <li *ngFor=\"let attr of editGeoObjectType.attributes\" class=\"list-group-item\">{{attr.label.localizedValue}}</li>\n                            </ul>\n\n                            <button [disabled]=\"readOnly || geoObjectType.superTypeCode\" type=\"button\" class=\"btn btn-primary full-width\" (click)=\"manageAttributes()\">\n                                <localize key=\"modal.button.manageAttributes\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.cancel\"></localize>\n                        </button>\n                        <button *ngIf=\"!readOnly\" type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"update()\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n        </fieldset>\n    </form>\n</div>\n\n<!-- </form> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component({\n\tselector: 'manage-attributes-modal',\n\ttemplateUrl: './manage-attributes-modal.component.html',\n\tstyleUrls: ['./manage-attributes-modal.css']\n})\nexport class ManageAttributesModalComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute = null;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": this.attribute, \"termOption\": \"\" };\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onDeleteAttribute: Subject<boolean>;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, private localizeService: LocalizationService,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onDeleteAttribute = new Subject();\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.onDeleteAttribute.unsubscribe();\n\t}\n\n\tdefineAttributeModal(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\teditAttribute(attr: Attribute, e: any): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": attr, \"termOption\": \"\" })\n\t}\n\n\tremoveAttributeType(attr: Attribute, e: any): void {\n\n\t\tthis.confirmBsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.confirmBsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + attr.label.localizedValue + ']';\n\t\tthis.confirmBsModalRef.content.data = { 'attributeType': attr, 'geoObjectType': this.geoObjectType };\n\t\tthis.confirmBsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.confirmBsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.confirmBsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteAttributeType(data.geoObjectType.code, data.attributeType);\n\t\t});\n\t}\n\n\tdeleteAttributeType(geoObjectTypeCode: string, attr: Attribute): void {\n\n\t\tthis.registryService.deleteAttributeType(geoObjectTypeCode, attr.code).then(data => {\n\t\t\tthis.onDeleteAttribute.next(data);\n\n\t\t\tif (data) {\n\t\t\t\tthis.geoObjectType.attributes.splice(this.geoObjectType.attributes.indexOf(attr), 1);\n\t\t\t}\n\t\t\t\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"geoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading\">\n            <h1>\n                <localize key=\"hierarchy.management.manage.attributes.title\"></localize> {{geoObjectType.label.localizedValue}}</h1>\n        </div>\n        <fieldset>\n\n            <div>\n                <div class=\"label-holder\">\n                    <label>\n                        <localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder dataset-attr-holder\">\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <localize key=\"data.property.label.label\"></localize>\n                                    </th>\n                                    <th class=\"button-column-header\">\n                                        <localize key=\"data.property.label.actions\"></localize>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let attr of geoObjectType.attributes\">\n                                    <td>{{attr.label.localizedValue}}</td>\n                                    <td class=\"button-column\">\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\"\n                                            [title]=\"'modal.button.edit' | localize\"></a>\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\"\n                                            [title]=\"'modal.button.remove' | localize\"></a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <!-- <table class=\"list-table table table-bordered table-striped\">\n                        <tbody>\n                        <tr *ngFor=\"let attr of geoObjectType.attributes\" class=\"fade-ngRepeat-item\">\n                            <td class=\"button-column\">\n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\" title=\"<localize key='modal.button.edit'></localize>\"></a>                             \n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\" title=\"<localize key='modal.button.remove'></localize>\"></a>\n                            </td>                  \n                            <td class=\"submit-form\">\n                            <dl>\n                                <dd>\n                                <h4 class=\"disabled\" >{{attr.label}}</h4>\n                                </dd>\n                            </dl>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table> -->\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <i class=\"fa fa-plus clickable\" style=\"font-size:20px;margin:10px 0 10px 0;\" aria-hidden=\"true\" (click)=\"defineAttributeModal()\">\n                        <localize key=\"modal.button.add\"></localize>\n                    </i>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n\n</div>\n\n","import { Component, OnInit, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, AttributeTerm, AttributeDecimal, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n@Component({\n\tselector: 'define-attribute-modal-content',\n\ttemplateUrl: './define-attribute-modal-content.component.html',\n\tstyleUrls: ['./define-attribute-modal-content.css']\n})\nexport class DefineAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tnewAttribute: Attribute = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.create.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" };\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.setAttribute(\"character\");\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit(): void {\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tthis.attributeInputComponent.animate();\n\t\t}\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.addAttributeType(this.geoObjectType.code, this.newAttribute).then(data => {\n\t\t\tthis.geoObjectType.attributes.push(data);\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsetAttribute(type: string): void {\n\t\tif (type === 'term') {\n\t\t\tthis.newAttribute = new AttributeTerm(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse if (type === 'float') {\n\t\t\tthis.newAttribute = new AttributeDecimal(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse {\n\t\t\tthis.newAttribute = new Attribute(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t}\n\n\tisFormValid(): boolean {\n\n\t\tlet isAttrValid: boolean = false;\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tisAttrValid = this.attributeInputComponent.isValid();\n\t\t}\n\n\t\tif (isAttrValid) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <!-- <error-message [message]=\"message\"></error-message> -->\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.define.attribute.title\"></localize>\n                    </h1>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\" style=\"margin-bottom: 20px;\">\n                        <div class=\"btn-group define-attribute-btns\">\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'character'}\" (click)=\"setAttribute('character')\">\n                                <localize key=\"data.type.label.text\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'integer'}\" (click)=\"setAttribute('integer')\">\n                                <localize key=\"data.type.label.integer\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'float'}\" (click)=\"setAttribute('float')\">\n                                <localize key=\"data.type.label.float\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'date'}\" (click)=\"setAttribute('date')\">\n                                <localize key=\"data.type.label.date\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'boolean'}\" (click)=\"setAttribute('boolean')\">\n                                <localize key=\"data.type.label.boolean\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'term'}\" (click)=\"setAttribute('term')\">\n                                <localize key=\"data.type.label.term\"></localize>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"false\" [excludeDescription]=\"false\" [isDecimal]=\"newAttribute.type === 'float' ? true : false\" [(attribute)]=\"newAttribute\"></attribute-input>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidatorFn, Validator, FormControl } from '@angular/forms';\n\n\n// validation function\nfunction validateGeoObjectAttributeCodeValidator() : ValidatorFn {\n  return (c: AbstractControl) => {\n    if(c.value){\n        let isValid = c.value.indexOf(\" \") === -1;\n        \n        if(isValid) {\n            return null;\n        } else {\n            return {\n                geoObjectAttributeCode: {\n                     valid: false\n                }\n            };\n        }\n    }\n\n  }\n}\n\n\n@Directive({\n  selector: '[geoObjectAttributeCode][ngModel]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: GeoObjectAttributeCodeValidator, multi: true }\n  ]\n})\nexport class GeoObjectAttributeCodeValidator implements Validator {\n  validator: ValidatorFn;\n  \n  constructor() {\n    this.validator = validateGeoObjectAttributeCodeValidator();\n  }\n  \n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n  \n}","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\n\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n\n@Component({\n\tselector: 'edit-attribute-modal-content',\n\ttemplateUrl: './edit-attribute-modal-content.component.html',\n\tstyleUrls: ['./edit-attribute-modal-content.css']\n})\nexport class EditAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute = null;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\tconstructor(public bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeType(this.geoObjectType.code, this.attribute).then(data => {\n\n\t\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\t\tif (attr.code === data.code) {\n\t\t\t\t\tObject.assign(attr, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\tback(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n            \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.attribute.title\"></localize>: {{attribute.label.localizedValue}}\n                    </h1>\n                    \n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'character'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.text\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'integer'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.integer\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'float'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.float\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'boolean'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.boolean\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'date'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.date\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'term'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.term\"></localize></h4>                    \n                </div>\n                \n                \n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"true\" [excludeDescription]=\"attribute.type === 'term' ? true : false\" [isDecimal]=\"attribute.type === 'float' ? true : false\" [(attribute)]=\"attribute\"></attribute-input>\n\n                    <!-- *ngIf=\"attribute.type === 'term' && isFormValid()\" -->\n                    <term-option-widget *ngIf=\"attribute.type === 'term' && isFormValid()\" [(attribute)]=\"attribute\" [geoObjectType]=\"geoObjectType\"></term-option-widget>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n    \n\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, AttributeTerm, GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, Term} from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service/hierarchy.service';\nimport { GeoObjectTypeManagementService } from '@registry/service/geoobjecttype-management.service'\n\n@Component( {\n    selector: 'term-option-widget',\n    templateUrl: './term-option-widget.component.html',\n    styleUrls: ['./term-option-widget.css'],\n    animations: [\n        trigger('toggleInputs', [\n            state('none, void', \n                style({ 'opacity': 0})\n              ),\n              state('show', \n                style({ 'opacity': 1})\n              ),\n              transition('none => show', animate('300ms')),\n              transition('show => none', animate('100ms'))\n        ]),\n        trigger('openClose', \n            [\n            transition(\n                ':enter', [\n                style({ 'opacity': 0}),\n                animate('500ms', style({ 'opacity': 1}))\n                ]\n            ),\n            transition(\n                ':leave', [\n                style({ 'opacity': 1}),\n                animate('0ms', style({'opacity': 0})),\n                \n                ]\n            )]\n      )\n    ]\n} )\nexport class TermOptionWidgetComponent implements OnInit {\n\n    @Input() geoObjectType: GeoObjectType;\n    @Input() attribute: AttributeTerm = null;\n    @Output() attributeChange = new EventEmitter<AttributeTerm>();\n    message: string = null;\n    state: string = 'none';\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\":\"\"};\n\n    constructor( public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService ) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit() {\n        this.state = 'show';\n        this.cdr.detectChanges();\n    }\n\n    ngOnDestroy(){\n    \n    }\n\n    handleOnSubmit(): void {\n        \n    }\n\n    animate(): void {\n        this.state = \"none\";\n    }\n\n    onAnimationDone(event: AnimationEvent): void {\n        this.state = \"show\";\n    }\n\n    // isValid(): boolean {\n    //     if(this.termOption.code && this.termOption.code.length > 0 && this.termOption.label && this.termOption.label.length > 0){\n            \n    //         // If code has a space\n    //         if(this.termOption.code.indexOf(\" \") !== -1){\n    //             return false;\n    //         }\n\n    //         // If label is only spaces\n    //         if(this.termOption.label.replace(/\\s/g, '').length === 0) {\n    //             return false\n    //         }\n\n    //         return true;\n    //     }\n    //     else if(this.termOption.code && this.termOption.code.indexOf(\" \") !== -1){\n    //         return false;\n    //     }\n            \n    //     return false\n    // }\n\n    openAddTermOptionForm(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\": \"\"})\n\n    }    \n}\n","<div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n\n    <div>\n        <div class=\"label-holder\">\n            <label>\n                <localize key=\"hierarchy.management.manage.attributes.label.displayTerms\"></localize>\n            </label>\n        </div>\n        <div class=\"holder\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <ul class=\"list-group list-group-flush\">\n                        <li *ngFor=\"let term of attribute.rootTerm.children\" class=\"list-group-item\">{{term.label.localizedValue}}</li>\n                    </ul>\n\n                    <button type=\"button\" class=\"btn btn-primary full-width\" (click)=\"openAddTermOptionForm()\">\n                        <localize key=\"modal.button.manageTermOptions\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { GeoObjectType, AttributeTerm, Term, GeoObjectTypeModalStates } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-term-options',\n\ttemplateUrl: './manage-term-options.component.html',\n\tstyleUrls: ['./manage-term-options.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms')),\n\t\t\ttransition('show => none', animate('100ms'))\n\t\t]),\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class ManageTermOptionsComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Output() attributeChange = new EventEmitter<AttributeTerm>();\n\tmessage: string = null;\n\ttermOption: Term;\n\tstate: string = 'none';\n\tenableTermOptionForm = false;\n\tmodalStepConfig: StepConfig = {\r\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": true }\n\t\t]\r\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t\tthis.termOption = new Term(\"\", this.localizeService.create(), this.localizeService.create());\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.termOption.code && this.termOption.code.length > 0) {\n\n\t\t\t// If code has a space\n\t\t\tif (this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If label is only spaces\n\t\t\tfor (let i = 0; i < this.termOption.label.localeValues.length; i++) {\n\t\t\t\tif (this.termOption.label.localeValues[i].value.replace(/\\s/g, '').length === 0) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.termOption.code && this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false\n\t}\n\n\taddTermOption(): void {\n\n\t\tthis.registryService.addAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\n\t\t\tthis.attribute.rootTerm.children.push(data);\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t\tthis.enableTermOptionForm = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tdeleteTermOption(termOption: Term): void {\n\n\t\tthis.registryService.deleteAttributeTermTypeOption(this.attribute.rootTerm.code, termOption.code).then(data => {\n\n\t\t\tif (this.attribute.rootTerm.children.indexOf(termOption) !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children.splice(this.attribute.rootTerm.children.indexOf(termOption), 1);\n\t\t\t}\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tremoveTermOption(termOption: Term): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + termOption.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteTermOption(termOption);\n\t\t});\n\t}\n\n\teditTermOption(termOption: Term): void {\n\n\t\tconst state = {\n\t\t\t\"state\": GeoObjectTypeModalStates.editTermOption,\n\t\t\t\"attribute\": this.attribute,\n\t\t\t\"termOption\": JSON.parse(JSON.stringify(termOption))\n\t\t};\n\n\t\tthis.geoObjectTypeManagementService.setModalState(state);\n\t}\n\n\tclearTermOption(): void {\n\t\tthis.termOption.code = \"\";\n\t\tthis.termOption.label = this.localizeService.create();\n\t\tthis.termOption.description = this.localizeService.create();\n\t}\n\n\tcancelTermOption(): void {\n\t\tthis.clearTermOption();\n\t\tthis.enableTermOptionForm = false;\n\t}\n\n\topenAddTermOptionForm(): void {\n\t\tthis.enableTermOptionForm = true;\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <fieldset>\n\n            <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n            <div class=\"heading\">\n                <h1>\n                    <localize key=\"hierarchy.management.edit.term.options.title\">: {{attribute.label.localizedValue}}</localize>\n                </h1>\n            </div>\n            <div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n                <div [@openClose]>\n                    <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"term.option.input.label.existingTypes\"></localize>\n                        </label>\n                    </div>\n                    <div class=\"holder\">\n                        <span class=\"text\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>\n                                                <localize key=\"data.property.label.code\"></localize>\n                                            </th>\n                                            <th *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <localize key=\"data.property.label.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n                                            </th>\n                                            <th class=\"button-column-header\">\n                                                <localize key=\"data.property.label.actions\"></localize>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let option of attribute.rootTerm.children\">\n                                            <td>{{option.code}}</td>\n                                            <td *ngFor=\"let localeValue of option.label.localeValues\">{{localeValue.value}}</td>\n                                            <td class=\"button-column\">\n                                                <a class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editTermOption(option)\"></a>\n                                                <a class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeTermOption(option)\"></a>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <input type=\"text\" [(ngModel)]=\"termOption.code\" name=\"termOptionCode\" [required]=\"termOption.label ? true : null \">\n                                            </td>\n                                            <td *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <input type=\"text\" [(ngModel)]=\"localeValue.value\" [name]=\"'termOptionLabel-' + localeValue.locale\" [required]=\"termOption.code ? true : null \">\n                                            </td>\n                                            <td class=\"button-column\">\n                                                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"addTermOption()\">\n                                                    <localize key=\"modal.button.add\"></localize>\n                                                </button>\n                                                <!-- <a class=\"fa fa-plus-square ico-edit\" [routerLink]=\"\" (click)=\"addTermOption()\"></a> -->\n                                                <!-- <a class=\"fa fa-trash ico-remove\" [routerLink]=\"\" (click)=\"cancelTermOption()\"></a> -->\n                                                <!-- <button type=\"button\" class=\"btn btn-default\" (click)=\"cancelTermOption()\">\n                                    <localize key=\"modal.button.cancel\"></localize> \n                                </button> -->\n\n                                            </td>\n                                        </tr>\n                                        <!-- <tr>\n                          <td></td>\n                          <td></td>\n                          <td class=\"button-column\"> \n                            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"enableTermOptionForm === false\" (click)=\"openAddTermOptionForm()\">\n                                <localize key=\"modal.button.add\"></localize>\n                            </button>\n                          </td>\n                        </tr> -->\n                                        <!-- <a class=\"fa fa-plus\" [routerLink]=\"\" (click)=\"openAddTermOptionForm()\"></a> -->\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.done\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig } from '@shared/model/modal';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { GeoObjectType, AttributeTerm, Term, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\n@Component({\n\tselector: 'edit-term-option-input',\n\ttemplateUrl: './edit-term-option-input.component.html',\n\tstyleUrls: [],\n\tanimations: [\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class EditTermOptionInputComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm = null;\n\t@Input() termOption: Term;\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.term.option\"), \"active\": true, \"enabled\": true }\n\n\t\t]\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\t\t\t// Update the term definition on the attribute\n\t\t\tconst index = this.attribute.rootTerm.children.findIndex(t => t.code === data.code);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children[index] = data;\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #tForm=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"!tForm.invalid && handleOnSubmit()\">\n    \n        <div class=\"\">\n            <div class=\"\">\n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.term.option.title\"></localize>\n                    </h1>\n                </div>\n\n                <fieldset>\n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                            <label>\n                                <localize key=\"data.property.label.code\"></localize>\n                            </label>\n                        </div>\n                        <div class=\"holder\">\n                            <span class=\"text\">\n                                <input type=\"text\" [disabled]=\"true\" [(ngModel)]=\"termOption.code\" name=\"code\">\n                            </span>\n                        </div>\n                    </div>\n                    \n                    <localized-input [(value)]=\"termOption.label\" key=\"data.property.label.label\"></localized-input>\n                    \n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                        </div>\n                        <div class=\"holder\">\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"tForm.invalid\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n\n</div>\n","import * as d3 from 'd3';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyComponent } from '../hierarchy.component';\nimport { SvgHierarchyNode } from './svg-hierarchy-node';\nimport { calculateTextWidth, svgPoint } from './svg-util';\nimport { INHERITED_NODE_BANNER_COLOR, DEFAULT_NODE_BANNER_COLOR, RELATED_NODE_BANNER_COLOR, DEFAULT_NODE_FILL, INHERITED_NODE_FILL } from '../hierarchy.component';\n\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { TREE_SCALE_FACTOR_X, TREE_SCALE_FACTOR_Y } from '../hierarchy.component'; \n\nexport class SvgHierarchyType {\n\n\tpublic static gotRectW: number = 150;\n\tpublic static gotRectH: number = 25;\n\tpublic static gotBodyFontSize: number = 8;\n\tpublic static gotOptionsButtonFontSize: number = 12;\n\n\tpublic static gotHeaderW: number = 150;\n\tpublic static gotHeaderH: number = 14;\n\tpublic static gotHeaderFontSize: number = 8;\n\t\n\tpublic static MOUSE_HOVER_EVENT_ENTER = \"mouseenter\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_MOVE = \"mousemove\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_EXIT = \"mouseleave\";\n\t\n\thierarchyComponent: HierarchyComponent;\n\n\thierarchyType: HierarchyType;\n\n\tsvgEl: any;\n\n\td3Hierarchy: any;\n\n\td3Tree: any;\n\n\tisPrimary: boolean;\n\t\n\ttooltip: any;\n\n\tpublic constructor(hierarchyComponent: HierarchyComponent, svgEl: any, ht: HierarchyType, isPrimary: boolean, public localizationService: LocalizationService, public modalService: BsModalService, public authService: AuthService) {\n\t\tconst hierarchyType = ht;\n\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.hierarchyType = hierarchyType;\n\t\tthis.svgEl = svgEl;\n\n\t\tthis.d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]);\n\t\tthis.isPrimary = isPrimary;\n\n\t\tthis.d3Tree = d3.tree().nodeSize([ SvgHierarchyType.gotRectW*TREE_SCALE_FACTOR_X, (SvgHierarchyType.gotRectH + SvgHierarchyType.gotHeaderH)*TREE_SCALE_FACTOR_Y ]).separation((a, b) => 0.8)(this.d3Hierarchy);\n\t}\n\t\n\tpublic getD3Tree() {\n\t\treturn this.d3Tree;\n\t}\n\n\tpublic getCode(): string {\n\t\treturn this.hierarchyType.code\n\t}\n\n\tpublic getNodeByCode(gotCode: string): SvgHierarchyNode {\n\t\tlet treeNode = this.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n\t\t\n\t\tif (treeNode == null)\n\t\t{\n\t\t  return null;\n\t\t}\n\t\t\n\t\treturn new SvgHierarchyNode(this.hierarchyComponent, this, this.hierarchyComponent.findGeoObjectTypeByCode(gotCode), treeNode, this.localizationService, this.modalService, this.authService);\n\t}\n\n\tpublic renderHierarchyHeader(hg: any, colHeaderLabel: string) {\n\t\tlet bbox = hg.node().getBBox();\n\n\t\tlet colHeader = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tlet headerg = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tconst headerFontSize: number = 10;\n\t\tconst iconWidth: number = 20;\n\t\tconst maxHierarchyLabelLength = 200;\n\t\t\n\t\tlet hierarchyLabelW: number = calculateTextWidth(this.hierarchyType.label.localizedValue, headerFontSize);\n\t\tlet hierarchyLabelH:number = headerFontSize*2;\n\t\tlet hierarchyLabelY:number = bbox.y + headerFontSize*1.6;\n\t\tif (hierarchyLabelW > maxHierarchyLabelLength)\n\t\t{\n\t\t  hierarchyLabelW = maxHierarchyLabelLength;\n\t\t  hierarchyLabelH = headerFontSize*3;\n\t\t  hierarchyLabelY = bbox.y + headerFontSize;\n\t\t}\n\n\t\tlet lineWidth = bbox.width;\n\t\tlet textWidth = hierarchyLabelW + iconWidth;\n\n\t\tif (textWidth > lineWidth) {\n\t\t\tlineWidth = textWidth;\n\t\t}\n\n\t\t// Hierarchy icon (font awesome)\n\t\theaderg.append(\"text\").classed(\"hierarchy-header-icon\", true)\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"font-size\", 12)\n\t\t\t.text('\\uf0e8');\n\n\t\t// Hierarchy display label\n\t\tcolHeader.append(\"foreignObject\").classed(\"hierarchy-header-label\", true)\n      .attr(\"font-size\", headerFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"x\", bbox.x + iconWidth)\n      .attr(\"y\", hierarchyLabelY)\n      .attr(\"width\", hierarchyLabelW)\n      .attr(\"height\", hierarchyLabelH)\n      .append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"text-align\", \"left\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"gray\")\n      //.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n      .style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n      .html((d: any) => this.hierarchyType.label.localizedValue)\n\n\t\t// Line underneath the header\n\t\theaderg.append(\"line\").classed(\"hierarchy-header-line\", true)\n\t\t\t.attr(\"x1\", bbox.x)\n\t\t\t.attr(\"y1\", bbox.y + headerFontSize)\n\t\t\t.attr(\"x2\", bbox.x + lineWidth)\n\t\t\t.attr(\"y2\", bbox.y + headerFontSize)\n\t\t\t.attr(\"stroke\", \"grey\")\n\t\t\t.attr(\"stroke-width\", .5);\n\n\t\tlet headerGBbox = headerg.node().getBBox();\n\t\theaderg.attr(\"transform\", \"translate(0 -\" + headerGBbox.height + \")\");\n\n\t\t// Col header label\n\t\tcolHeader.append(\"text\").classed(\"hierarchy-header-label\", true)\n\t\t\t.attr(\"font-size\", headerFontSize + 2)\n\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.text(colHeaderLabel);\n\t  \n\t\tcolHeader.attr(\"transform\", \"translate(0 -\" + headerGBbox.height * 2.5 + \")\");\n\n\t\treturn headerg;\n\t}\n\n\tgetRelatedHierarchies(gotCode: string): string[] {\n\t\tlet got: GeoObjectType = this.hierarchyComponent.findGeoObjectTypeByCode(gotCode);\n\n\t\tif (got.relatedHierarchies == null) {\n\t\t\tgot.relatedHierarchies = this.hierarchyComponent.calculateRelatedHierarchies(got);\n\t\t}\n\n    let relatedHiers: string[] = got.relatedHierarchies;\n\n\t\tlet index = null;\n\t\tfor (let i = 0; i < relatedHiers.length; ++i) {\n\t\t\tif (relatedHiers[i] === this.getCode()) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\n\t\tif (index != null) {\n\t\t\trelatedHiers.splice(index, 1);\n\t\t}\n\n\t\treturn relatedHiers;\n\t}\n\t\n\tprivate nodeMouseover(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 1);\n\t}\n\t\n\tprivate nodeMousemove(event: any, element: any, data:any)\n\t{\n    d3.select(\"#hierarchyLabel\").html(this.hierarchyType.label.localizedValue);\n    d3.select(\"#hierarchyCodeLabel\").html(this.hierarchyType.code);\n    \n    d3.select(\"#geoObjectTypeLabel\").html(data.data.label);\n    d3.select(\"#geoObjectTypeCodeLabel\").html(data.data.geoObjectType);\n    \n    d3.select(\"#hierarchyOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyType.organizationCode).label.localizedValue);\n    d3.select(\"#geoObjectTypeOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyComponent.findGeoObjectTypeByCode(data.data.geoObjectType).organizationCode).label.localizedValue);\n    \n    let nodeTooltip: any = d3.select(\"#NodeTooltip\").node();\n    let nodeTooltipBbox: DOMRect = nodeTooltip.getBoundingClientRect();\n    \n    let pos = {x: event.pageX, y: event.pageY};\n    const yPointerOffset: number = 50;\n    const xPointerOffset: number = 0;\n    \n    // If overflow off bottom of page\n    if ((event.pageY + nodeTooltipBbox.height + yPointerOffset) > document.documentElement.scrollHeight)\n    {\n      // render above mouse pointer\n      pos.y = event.pageY - nodeTooltipBbox.height - yPointerOffset;\n    }\n    \n    // If overflow off right side of page\n    if ((event.pageX + nodeTooltipBbox.width + xPointerOffset) > document.documentElement.scrollWidth)\n    {\n      // render to the left of the mouse pointer\n      pos.x = event.pageX - nodeTooltipBbox.width - xPointerOffset;\n    }\n    \n    d3.select(\"#NodeTooltip\")\n      .style(\"left\", pos.x + \"px\")\n      .style(\"top\", pos.y + \"px\");\n\t}\n\t\n\tprivate nodeMouseleave(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 0)\n      .style(\"left\", \"-10000px\")\n      .style(\"top\", \"-10000px\");\n\t}\n\n\tpublic render() {\n\t\tlet that = this;\n\t\tlet descends: any = this.d3Tree.descendants();\n\n\t\td3.select('.g-hierarchy[data-primary=\"false\"]').remove();\n\t\tif (this.isPrimary) {\n\t\t\td3.select('.g-hierarchy[data-primary=\"true\"]').remove();\n\t\t}\n\n\t\tlet hg = this.svgEl.insert(\"g\", \".g-hierarchy\").classed(\"g-hierarchy\", true).attr(\"data-code\", this.hierarchyType.code).attr(\"data-primary\", this.isPrimary);\n\t\thg.attr(\"font-family\", \"sans-serif\");\n\n\t\tlet gtree = hg.append(\"g\").classed(\"g-hierarchy-tree\", true).attr(\"data-code\", this.hierarchyType.code);\n\n\t\t// Edge\n\t\tgtree.append(\"g\").classed(\"g-got-edge\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(this.d3Tree.links())\n\t\t\t.join(\"path\")\n\t\t\t//.attr(\"d\", d3.linkVertical().x(function(d:any) { return d.x; }).y(function(d:any) { return d.y; })); // draws edges as curved lines\n\t\t\t.attr(\"d\", (d: any, i) => { // draws edges as square bracket lines\n\t\t\t\treturn \"M\" + d.source.x + \",\" + (d.source.y)\n\t\t\t\t\t+ \"V\" + ((d.source.y + d.target.y) / 2)\n\t\t\t\t\t+ \"H\" + d.target.x\n\t\t\t\t\t+ \"V\" + (d.target.y);\n\t\t\t});\n\n\t\t// Header on square which denotes which hierarchy it's a part of\n\t\tlet gHeader = gtree.append(\"g\").classed(\"g-got-header\", true);\n\t\tgHeader.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotHeaderW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotHeaderH)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) =>\n\t\t\t\td.data.inheritedHierarchyCode != null\n\t\t\t)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Write the name of the hierarchy on the header\n\t\tgHeader.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => \n\t\t\t    d.x - (SvgHierarchyType.gotHeaderW / 2)\n\t\t\t  )\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-weight\", \"bold\")\n      .attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"width\", SvgHierarchyType.gotHeaderW)\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n\t\t\t.append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"fill\", \"white\")\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n      .style(\"text-align\", \"center\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"white\")\n      .style(\"height\", (SvgHierarchyType.gotHeaderH - 4) + \"px\")\n      .style(\"width\", SvgHierarchyType.gotHeaderW + \"px\")\n      .html(function (d: any) {\n        let name = d.data.inheritedHierarchyCode != null ? that.hierarchyComponent.findHierarchyByCode(d.data.inheritedHierarchyCode).label.localizedValue : that.hierarchyType.label.localizedValue;\n        calculateTextWidth(name, SvgHierarchyType.gotHeaderFontSize) > (SvgHierarchyType.gotHeaderW - 5) ? name = name.substring(0,34) + \"...\" : true;\n        return name;\n       })\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// GeoObjectType Body Square \n\t\tgtree.append(\"g\").classed(\"g-got\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-body-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"fill\", (d: any) => d.data.inheritedHierarchyCode != null ? INHERITED_NODE_FILL : DEFAULT_NODE_FILL)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.each(function(d: any) {\n\t\t\t\tif (d.data.geoObjectType != \"GhostNode\") {\n\t\t\t\t\tif (d.data.activeDropZones) {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW * 2 + 100, height: SvgHierarchyType.gotRectH * 4 };\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Arrows on Edges\n\t\tconst arrowRectD = { height: 7, width: 10 };\n\t\tlet gArrow = gtree.append(\"g\").classed(\"g-got-connector-arrow\", true);\n\t\tgArrow.selectAll(\"rect\").data(this.d3Tree.links()).join(\"rect\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.source.x - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", (d: any) => d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.source.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.selectAll(\"path\").data(this.d3Tree.links()).join(\"path\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", (d: any) => \"M\" + (d.source.x - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (d.source.x) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + (arrowRectD.height / 3))\n\t\t\t\t+ \"L\" + (d.source.x - arrowRectD.width / 2 + (arrowRectD.width / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 + arrowRectD.height / 2 - arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Ghost Drop Zone (Sibling) Backer\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-backer\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-backer-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"white\")\n\n\t\t// Ghost Drop Zone (Sibling) Body Rectangle\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-body\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-body-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#6BA542\")\n\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\n\t\t// GeoObjectType label\n\t\tgtree.append(\"g\").classed(\"g-got-codelabel\", true)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotBodyFontSize)\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.classed(\"svg-got-label-text\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2) + 5)\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2) + 2)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW - 32 + 5)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH - 4)\n\t\t\t// .filter(function(d: any) {\n\t\t\t// \treturn calculateTextWidth(d.data.label, 10) > SvgHierarchyType.gotRectW - 32 + 5;\n\t\t\t// })\n\t\t\t// .style(\"height\", SvgHierarchyType.gotRectH + 20 + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.append(\"xhtml:p\")\n\t\t\t.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n\t\t\t.attr(\"text-anchor\", \"start\")\n\t\t\t.attr(\"text-align\", \"left\")\n\t\t\t.style(\"vertical-align\", \"middle\")\n\t\t\t.style(\"display\", \"table-cell\")\n\t\t\t.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n\t\t\t.style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n\t\t\t.html((d: any) => d.data.label)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\tlet headerg;\n\t\tif (this.isPrimary) {\n\t\t\tgtree.append(\"g\").classed(\"g-got-relatedhiers-button\", true)\n\t\t\t\t.selectAll(\"text\")\n\t\t\t\t.data(descends)\n\t\t\t\t.join(\"text\")\n\t\t\t\t.filter(function(d: any) {\n\t\t\t\t\treturn (d.data.geoObjectType === \"GhostNode\" ? false : true) && d.data.inheritedHierarchyCode == null;\n\t\t\t\t})\n\t\t\t\t.classed(\"svg-got-relatedhiers-button\", true)\n\t\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\t.attr(\"x\", (d: any) => d.x + (SvgHierarchyType.gotRectW / 2) - (SvgHierarchyType.gotOptionsButtonFontSize) - 3)\n\t\t\t\t.attr(\"y\", (d: any) => d.y + (SvgHierarchyType.gotOptionsButtonFontSize*0.8) - SvgHierarchyType.gotOptionsButtonFontSize/2)\n\t\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.style(\"fill\", \"#767676\")\n\t\t\t\t.style(\"font-size\", SvgHierarchyType.gotOptionsButtonFontSize + \"px\")\n\t\t\t\t.text('\\uf013')\n\t\t\t\t.on('click', function(event, node) { that.getNodeByCode(node.data.geoObjectType).renderRelatedHierarchiesMenu(); });\n\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Selected Hierarchy\");\n\t\t}\n\t\telse {\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Related Hierarchy\");\n\t\t}\n\n\n\t\tlet paddingTop = (headerg.node().getBBox().height + 20);\n\t\t//gtree.attr(\"transform\", \"translate(0 \" + paddingTop + \")\");\n\t}\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'shapefile-modal',\n    templateUrl: './shapefile-modal.component.html',\n    styleUrls: []\n} )\nexport class ShapefileModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n    constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n        private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.message = null;\n\n        this.service.importShapefile( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n                this.bsModalRef.hide()\n\n                this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n                this.bsModalRef.content.cancelText = this.localizeService.decode( \"modal.button.close\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n            }\n        } ).catch(( response: HttpErrorResponse ) => {\n            this.error( response );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.message = null;\n\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\n\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-problem',\n    templateUrl: './location-problem.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: LocationProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    entityLabel: string;\n    entityId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.entityLabel, this.problem.type, this.problem.parent, this.configuration.hierarchy ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.entityLabel = null;\n        this.entityId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.entityId = e.item.id;\n        this.hasSynonym = ( this.entityId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createGeoObjectSynonym( this.entityId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    vOid: response.vOid, \n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    ignoreDataAtLocation(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNOREATLOCATION',\n            label: locationLabel,\n        };\n    }\n\n    undoAction(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        if ( this.problem.resolved ) {\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNOREATLOCATION' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteGeoObjectSynonym( action.synonymId, action.vOid ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n\n                    this.entityLabel = null;\n                    this.hasSynonym = ( this.entityLabel != null );\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n\n        }\n    }\n}\n","<div class=\"row\" style=\"padding-bottom: 10px;\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">\n      <ol *ngIf=\"problem.context.length > 0\">\n        <li *ngFor=\"let context of problem.context\">{{context.label}} ({{context.type}})</li>\n      </ol>\n    </div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}} ({{problem.typeLabel}})</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"entityLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymFromLocationTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreDataAtLocation()\" [title]=\"'dataUploader.ignoreAtLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <a> \n          <i class=\"fa fa-caret-right clickable\" aria-hidden=\"true\"></i> \n          <i class=\"fa fa-caret-down\" style=\"display: none;\" aria-hidden=\"true\"></i> \n          <localize key=\"dataUploader.resolvedSynonym\"></localize> [{{problem.action.label}}]\n        </a>\n        <span>\n          <ul>\n            <localize key=\"dataUploader.locatedWithin\"></localize>\n            <li *ngFor=\"let ancestor of problem.action.ancestors\">{{ancestor.label}}</li>\n          </ul>\n        </span>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNOREATLOCATION'\">\n        <localize key=\"dataUploader.resolvedIgnoreAtLocation\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'term-problem',\n    templateUrl: './term-problem.component.html',\n    styleUrls: []\n} )\nexport class TermProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: TermProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    termLabel: string;\n    termId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getTermSuggestions( this.problem.mdAttributeId, this.termLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.termLabel = null;\n        this.termId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n        this.hasSynonym = ( this.termId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createTermSynonym( this.termId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    createOption(): void {\n        this.onError.emit( null );\n        \n        this.service.createTerm( this.problem.label, uuid(), this.problem.parentCode).then( term => {\n            this.problem.resolved = true;\n            this.problem.action = {\n                name: 'OPTION',\n                term: term\n            };\n        } ).catch( e => {\n            this.onError.emit( e.error );\n        } );\n    }\n\n    ignoreValue(): void {\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNORE'\n        };\n    }\n\n    undoAction(): void {\n\n        if ( this.problem.resolved ) {\n\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNORE' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteTermSynonym( action.synonymId ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n            else if ( action.name == 'OPTION' ) {\n                this.onError.emit( null );\n\n                this.service.removeTerm(this.problem.parentCode, action.term.code ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n        }\n    }\n}\n","<div class=\"row\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">{{problem.attributeLabel}}</div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}}</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"termLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"label\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymCategoryTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-plus clickable\" (click)=\"createOption()\" [title]=\"'dataUploader.createNewOptionTooltip' | localize\"></i>        \n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreValue()\" [title]=\"'dataUploader.ignoreCategoryTooltip' | localize\"></i>      \n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'OPTION'\">\n        <localize key=\"dataUploader.resolvedCategoryOption\"></localize>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <localize key=\"dataUploader.resolvedSynonym\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNORE'\">\n        <localize key=\"dataUploader.resolvedIgnoreCategory\"></localize>\n        [{{problem.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedCategoryTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'spreadsheet-modal',\n    templateUrl: './spreadsheet-modal.component.html',\n    styleUrls: []\n} )\nexport class SpreadsheetModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n  constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n    private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.service.importSpreadsheet( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n              this.bsModalRef.hide()\n\n              this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n\n            }\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-page',\n    templateUrl: './data-page.component.html',\n    styleUrls: ['./data-page.css']\n} )\nexport class DataPageComponent implements OnInit {\n\n\tcontent: string = \"SPREADSHEET\";\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n\t\tthis.isMaintainer ? this.renderContent(\"SPREADSHEET\") : this.renderContent(\"EXPORT\");\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\n\t\tif(content === \"SPREADSHEET\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"spreadsheet.title\");\n\t\t}\n\t\telse if(content === \"SHAPEFILE\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"shapefile.title\");\n\t\t}\n\t\telse if(content === \"EXPORT\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"io.export.title\");\n\t\t}\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <!-- <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"spreadsheet.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"spreadsheet.description\"></localize>\n            </p>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-1\"></div>\n\t\t\t<div class=\"col-md-10\" style=\"padding-top: 30px;\">\n\t\t\t\t\n\t\t\t\t<div class=\"heading\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{{pageTitle}}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SPREADSHEET'}\" (click)=\"renderContent('SPREADSHEET')\">\n                      <localize key=\"import-spreadsheet-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SHAPEFILE'}\" (click)=\"renderContent('SHAPEFILE')\">\n                      <localize key=\"import-shapefile-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px;margin-top: 10px;\">\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SPREADSHEET'\" [format]=\"'EXCEL'\"></dataimporter>\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SHAPEFILE'\" [format]=\"'SHAPEFILE'\"></dataimporter>\n\t\t\t\t</div>\n\t\t\t\t\n            </div>\n            <div class=\"col-md-1\"></div>\n        </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ViewChildren, ElementRef, QueryList, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport{ DateFieldComponent } from '../../../shared/component/form-fields/date-field/date-field.component';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService, EventService, ExternalSystemService } from '@shared/service';\nimport { ExternalSystem } from '@shared/model/core';\n\nimport { SpreadsheetModalComponent } from './modals/spreadsheet-modal.component';\nimport { ShapefileModalComponent } from './modals/shapefile-modal.component';\nimport { IOService } from '@registry/service';\nimport { ImportStrategy, PRESENT } from '@registry/model/registry';\n\ndeclare var acp: string;\n\n@Component({\n\n\tselector: 'dataimporter',\n\ttemplateUrl: './dataimporter.component.html',\n\tstyleUrls: ['./dataimporter.css']\n})\nexport class DataImporterComponent implements OnInit {\n\t\n\t@ViewChildren('dateFieldComponents') dateFieldComponentsArray:QueryList<DateFieldComponent>;\n\t\n\tcurrentDate : Date = new Date();\n\n\tshowImportConfig: boolean = false;\n\t\n\tisValid: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n\timportStrategy: ImportStrategy;\n\timportStrategies: any[] = [\n\t\t{ \"strategy\": ImportStrategy.NEW_AND_UPDATE, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_AND_UPDATE\") },\n\t\t{ \"strategy\": ImportStrategy.NEW_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_ONLY\") },\n\t\t{ \"strategy\": ImportStrategy.UPDATE_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.UPDATE_ONLY\") }\n\t]\n\n    /*\n     * Currently selected code\n     */\n\tcode: string = null;\n\n    /*\n     * Start date\n     */\n\tstartDate: Date = null;\n\n    /*\n     * End date\n     */\n\tendDate: Date | string = null;\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n    /*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\t@Input()\n\tformat: string; // Can be SHAPEFILE or EXCEL\n\n\tisExternal: boolean = false;\n\n\t/*\n\t * List of available external systems (filtered based on user's org)\n\t */\n\texternalSystems: ExternalSystem[];\n\n\t/*\n\t * currently selected external system.\n\t */\n\texternalSystemId: string;\n\n\tisLoading: boolean = true;\n\n\tcopyBlank: boolean = true;\n\n\tconstructor(private service: IOService,\n\t\tprivate eventService: EventService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate localizationService: LocalizationService,\n\t\tprivate authService: AuthService,\n\t\tprivate sysService: ExternalSystemService,\n\t\tprivate changeDetectorRef: ChangeDetectorRef\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.sysService.getExternalSystems(1, 100).then(paginatedSystems => {\n\n\t\t\tthis.externalSystems = paginatedSystems.resultSet;\n\n\t\t\tif (this.externalSystems.length === 0) {\n\t\t\t\tthis.isExternal = false;\n\t\t\t\tthis.showImportConfig = true; // Show the upload widget if there are no external systems registered\n\t\t\t}\n\n\t\t\tthis.isLoading = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.service.listGeoObjectTypes(false).then(types => {\n\n\t\t\tconst myOrgTypes = [];\n\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.orgCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isOrganizationRA(orgCode) || this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.types = myOrgTypes;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tvar getUrl = acp + '/excel/get-configuration';\n\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\tgetUrl = acp + '/shapefile/get-shapefile-configuration';\n\n\t\t\t//this.showImportConfig = true; // show the upload widget if shapefile because external system from shapefile isn't supported\n\t\t}\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('type', this.code);\n\t\t\tform.append('copyBlank', this.copyBlank);\n\n\t\t\tif (this.startDate != null) {\n\t\t\t\tform.append('startDate', this.startDate);\n\t\t\t}\n\t\t\tif (this.endDate != null) {\n\t\t\t\tform.append('endDate', this.endDate);\n\t\t\t}\n\t\t\tif (this.importStrategy) {\n\t\t\t\tform.append('strategy', this.importStrategy);\n\t\t\t}\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst configuration = JSON.parse(response);\n\n\t\t\tconfiguration.isExternal = this.isExternal;\n\n\t\t\tlet externalSystem: ExternalSystem = null;\n\t\t\tfor (let i = 0; i < this.externalSystems.length; ++i) {\n\t\t\t\tlet sys: ExternalSystem = this.externalSystems[i];\n\n\t\t\t\tif (sys.oid === this.externalSystemId) {\n\t\t\t\t\texternalSystem = sys;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfiguration.externalSystemId = this.externalSystemId;\n\t\t\tconfiguration.externalSystem = externalSystem;\n\n\t\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\t\tthis.bsModalRef = this.modalService.show(ShapefileModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef = this.modalService.show(SpreadsheetModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.configuration = configuration;\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\n\tonClick(): void {\n\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetImportSource(event, type): void {\n\t\tif (type === \"EXTERNAL\") {\n\t\t\tthis.isExternal = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isExternal = false;\n\t\t}\n\t}\n\n\tonNext(): void {\n\t\tthis.showImportConfig = true;\n\t}\n\n\tonBack(): void {\n\t\tthis.showImportConfig = false;\n\t}\n\t\n//\tsetInfinity(endDate: any): void {\n//\n//\t\tif(endDate === PRESENT){\n//\t\t\tthis.endDate = null;\n//\t\t}\n//\t\telse{\n//\t\t\tthis.endDate = PRESENT;\n//\t\t}\n//\t}\n\n\tcheckDates(): any {\n\t\tsetTimeout(() => {\n\t\n\t\t\tthis.isValid = this.checkDateFieldValidity();\n\t\n\t\t}, 0);\n\t}\n\n\tcheckDateFieldValidity(): boolean {\n\t\tlet dateFields = this.dateFieldComponentsArray.toArray();\n\t\t\n\t\tlet startDateField: DateFieldComponent;\n\t\tfor(let i=0; i<dateFields.length; i++){\n\t\t\tlet field = dateFields[i];\n\t\t\t\n\t\t\tif(field.inputName === \"startDate\"){\n\t\t\t\t// set startDateField so we can use it in the next check\n\t\t\t\tstartDateField = field;\n\t\t\t}\n\t\t\t\n\t\t\tif(!field.valid){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(this.startDate > this.endDate){\n\t\t\t\n\t\t\tstartDateField.setInvalid(this.localizationService.decode('date.input.startdate.after.enddate.error.message'));\n\t\t\t\n\t\t\tthis.changeDetectorRef.detectChanges() \n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<div *ngIf=\"!isLoading && !showImportConfig && externalSystems.length > 0\">\n  <div>\n    <div class=\"row\">\n\n        <div class=\"col-xs-1\"></div>\n        <div class=\"col-xs-9 radio-btn-wrapper\">\n\n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"true\" [checked]=\"!isExternal\" (change)=\"setImportSource($event, 'FILE')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : !isExternal}\">\n                    <localize key=\"importer.import.from-file.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-file.description\"></localize>\n                </p>\n            </label>\n            \n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"false\" [checked]=\"isExternal\" (change)=\"setImportSource($event, 'EXTERNAL')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : isExternal}\">\n                    <localize key=\"importer.import.from-external.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-external.description\"></localize>\n                </p>\n            </label>\n\n            <div class=\"button-holder\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onNext()\">\n                    <localize key=\"io.next\"></localize>\n                </button>\n            </div>\n        </div>\n        <div class=\"col-xs-2\"></div>\n\t  </div>\n  </div>\n</div>\n\n<div *ngIf=\"!isLoading && isExternal !== null && showImportConfig\">\n    <div >\n        <form #form=\"ngForm\" autocomplete=\"off\">\n            <div *ngIf=\"isExternal\" class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"externalSystem\">\n                    <localize key=\"io.import.externalSystems\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"externalSystem\" name=\"externalSystem\" class=\"select-area\" [(ngModel)]=\"externalSystemId\" required>\n                        <option *ngFor=\"let externalSystem of externalSystems\" value={{externalSystem.oid}}>{{externalSystem.label.localizedValue}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\" *ngIf=\"types\">\n                <label class=\"col-md-2 text-right\" for=\"code\"> <localize key=\"io.geoObjectType\"></localize></label>\n                <div class=\"col-md-8\">\n                    <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" (change)=\"checkDates()\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" value={{type.code}}>{{type.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"strategy\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"spreadsheet.import.import.strategy\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"shapefile.import.import.strategy\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"strategy\" name=\"strategy\" class=\"select-area\" [(ngModel)]=\"importStrategy\" (change)=\"checkDates()\" required>\n                        <option *ngFor=\"let strategy of importStrategies\" value={{strategy.strategy}}>{{strategy.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"startDate\"><localize key=\"io.startDate\"></localize></label>\n                <div class=\"col-md-8\">\n                  <date-field #dateFieldComponents [(value)]=\"startDate\" label=\"\" [inputName]=\"'startDate'\" (change)=\"checkDates()\" [allowFutureDates]=\"false\"></date-field>\n                </div>\n                \n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"endDate\"><localize key=\"io.endDate\"></localize></label>\n                <div class=\"col-md-8\">\n                  <date-field #dateFieldComponents [(value)]=\"endDate\" label=\"\" [inputName]=\"'endDate'\" (change)=\"checkDates()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" [required]=\"true\" ></date-field>\n                </div>\n                                      \n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                \n                <label class=\"col-md-2 text-right\" for=\"copyBlank\">Copy blank values</label>\n                <div class=\"col-md-8\">\n                   <boolean-field [(value)]=\"copyBlank\" label=\"\"></boolean-field>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"file\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <input *ngIf=\"this.format === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".xls, .xlsx\" required />\n                    <input *ngIf=\"this.format === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".zip\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n\n            <div class=\"form-group row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"button-holder col-md-8 text-right\">\n<!--                     <button type=\"submit\" class=\"btn btn-default\" (click)=\"onBack()\"> -->\n<!--                         <localize key=\"io.back\"></localize> -->\n<!--                     </button> -->\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isValid || form.invalid\" (click)=\"onClick()\">\n                        <localize key=\"io.submit\"></localize>\n                    </button>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-manager',\n\ttemplateUrl: './master-list-manager.component.html',\n\tstyleUrls: ['./master-list-manager.css']\n})\nexport class MasterListManagerComponent implements OnInit {\n\tmessage: string = null;\n\torgs: MasterListByOrg[];\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.service.getMasterListsByOrg().then(response => {\n\t\t\tthis.orgs = response.orgs;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonCreate(org: MasterListByOrg): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(org);\n\t\tthis.bsModalRef.content.isNew = true;\n\t\tthis.bsModalRef.content.onMasterListChange.subscribe((list: any) => {\n\t\t\tconst obj = {\n\t\t\t\tlabel: list.displayLabel.localizedValue,\n\t\t\t\toid: list.oid,\n\t\t\t\tcreateDate: list.createDate,\n\t\t\t\tlastUpdateDate: list.lastUpdateDate,\n\t\t\t\tisMaster: list.isMaster,\n\t\t\t\twrite: list.write,\n\t\t\t\tread: list.read,\n\t\t\t\tvisibility: list.visibility\n\t\t\t};\n\n\t\t\torg.lists.push(obj);\n\t\t});\n\t}\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-view/', code])\n\t}\n\n\tonEdit(pair: { label: string, oid: string, visibility: string }): void {\n\t\tthis.service.getMasterList(pair.oid).then(list => {\n\n\t\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.edit = true;\n\t\t\tthis.bsModalRef.content.readonly = !list.write;\n\t\t\tthis.bsModalRef.content.master = list;\n\t\t\tthis.bsModalRef.content.isNew = false;\n\n\t\t\tthis.bsModalRef.content.onMasterListChange.subscribe(ret => {\n\t\t\t\tpair.label = ret.displayLabel.localizedValue;\n\t\t\t\tpair.visibility = ret.visibility;\n\t\t\t});\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDelete(org: MasterListByOrg, list: { label: string, oid: string }): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + list.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = \"danger\";\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterList(list.oid).then(response => {\n\t\t\t\torg.lists = org.lists.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== list.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <div class=\"heading\">\n            <h2>\n                <localize key=\"masterlists.manager.organizations\"></localize>\n            </h2>\n        </div>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\" *ngFor=\"let org of orgs;\">\n            <div class=\"col-md-12 order-md-1\">\n                <div style=\"margin-top: 30px;\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <h3>{{org.label}}</h3>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"org.lists && org.lists.length === 0\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <p class=\"inline-message\"><localize key=\"masterlists.no.lists.in.org.message\"></localize></p>\n                        </div>\n                    </div>\n                </div>\n\n                <ul *ngIf=\"org.lists && org.lists.length > 0\" class=\"list-group\" style=\"border-bottom: 2px solid lightgrey; margin-top: 30px;\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th style=\"width: 70%;\"><localize key=\"masterlist.menu\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let list of org.lists; let i = index;\" class=\"clickable\">\n                                <td style=\"width: 70%; vertical-align: middle;\">\n                                  <a [routerLink]=\"'/registry/master-list-view/' + list.oid\" routerLinkActive=\"active\">\n                                    {{list.label}}\n                                    <span *ngIf=\"list.isMaster\"><localize key=\"masterlist.master\"></localize></span>\n                                    <span>\n                                      (\n                                      <localize *ngIf=\"list.visibility === 'PUBLIC'\" key=\"masterlist.public\"></localize>\n                                      <localize *ngIf=\"list.visibility === 'PRIVATE'\" key=\"masterlist.private\"></localize>\n                                      )\n                                    </span>                                    \n                                  </a>\n                                </td>\n                                <td style=\"width: 30%; text-align: right;\">\n                                    <button type=\"submit\" (click)=\"onView(list.oid)\" class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"modal.button.view\"></localize>\n                                    </button>\n                                    <button type=\"submit\" (click)=\"onEdit(list)\" class=\"btn btn-default\" role=\"button\">\n                                        <localize key=\"masterlist.button.metadata\"></localize>\n                                    </button>\n                                    <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(org, list)\" class=\"btn btn-danger\" role=\"button\">\n                                        <localize key=\"modal.button.delete\"></localize>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ul>\n                <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div *ngIf=\"org.write\">\n                            <button type=\"submit\" (click)=\"onCreate(org)\" class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"hierarchy.management.button.create\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n\n@Component( {\n    selector: 'export-format-modal',\n    templateUrl: './export-format-modal.component.html',\n    styleUrls: []\n} )\nexport class ExportFormatModalComponent {\n\n    format: string;\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onFormat = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onFormat.next( this.format );\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"heading text-center\">\n        <h1>\n            <localize key=\"export-modal.title\"></localize>\n        </h1>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <label>\n                        <localize key=\"export-modal.message\"></localize>\n                    </label>\n\n                    <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                        <option></option>\n                        <option value=\"EXCEL\">\n                            <localize key=\"io.spreadsheet\"></localize>\n                        </option>\n                        <option value=\"SHAPEFILE\">\n                            <localize key=\"io.shapefile\"></localize>\n                        </option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" [disabled]=\"format == null || format == ''\"\n                            class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, ViewEncapsulation, ViewChild, ElementRef, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ChangeRequest, AbstractAction, AddChildAction, SetParentAction, CreateGeoObjectAction, RemoveChildAction, UpdateGeoObjectAction } from '@registry/model/crtable';\nimport { GeoObjectOverTime } from '@registry/model/registry';\n\nimport { ChangeRequestService } from '@registry/service';\nimport { LocalizationService, AuthService, EventService } from '@shared/service';\nimport { DateService } from '@shared/service/date.service';\nimport { ActionDetailModalComponent } from './action-detail/action-detail-modal.component'\n\nimport { ErrorHandler, ErrorModalComponent, ConfirmModalComponent } from '@shared/component';\n\ndeclare var acp: string;\ndeclare var $: any;\n\n@Component({\n\n\tselector: 'request-table',\n\ttemplateUrl: './request-table.component.html',\n\tstyleUrls: ['./request-table.css'],\n\tencapsulation: ViewEncapsulation.None,\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('300ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('100ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]),\n\t\t\ttrigger('fadeIn', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t])\n\t\t\t]),\n\t\t]\n\t]\n})\nexport class RequestTableComponent {\n\t\n\ttoday: string = this.dateService.getDateString(new Date());\n\n\tobjectKeys = Object.keys;\n\n\tbsModalRef: BsModalRef;\n\n\trequests: ChangeRequest[] = [];\n\n\tactions: AbstractAction[] | SetParentAction[] | AddChildAction[] | CreateGeoObjectAction[] | RemoveChildAction[] | UpdateGeoObjectAction[];\n\n\tcolumns: any[] = [];\n\n\t@Input() toggleId: string;\n\t\n\ttargetActionId: string\n\n\tfilterCriteria: string = 'ALL';\n\n\thasBaseDropZoneOver:boolean = false;\n\t\n\twaitingOnScroll: boolean = false;\n\t\n\t/*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\t\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\tconstructor(private service: ChangeRequestService, private modalService: BsModalService, private authService: AuthService, private localizationService: LocalizationService,\n\t\t\t\tprivate eventService: EventService, private router: Router, private dateService: DateService) {\n\n\t\tthis.columns = [\n\t\t\t{ name: localizationService.decode('change.request.user'), prop: 'createdBy', sortable: false },\n\t\t\t{ name: localizationService.decode('change.request.createDate'), prop: 'createDate', sortable: false, width: 195 },\n\t\t\t{ name: localizationService.decode('change.request.status'), prop: 'approvalStatus', sortable: false }\n\t\t];\n\n\t\tthis.refresh();\n\t}\n\t\n\tngOnInit(): void{\n\t\tvar getUrl = acp + '/changerequest/upload-file-action';\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('actionOid', this.targetActionId);\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: any, status: number, headers: any) => {\n\t\t\t\n\t\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\t\tlet action = this.actions[i];\n\t\t\t\t\n\t\t\t\tif(action.oid === this.targetActionId){\n\t\t\t\t\t\n\t\t\t\t\taction.documents.push(JSON.parse(response));\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t\t\n\t\tif (this.toggleId != null)\n\t\t{\n\t\t  this.onSelect({ selected: [{ oid: this.toggleId }] });\n\t\t  this.waitingOnScroll = true;\n\t\t}\n\t}\n\t\n\tscrollToBottom(): void {\n    //try {\n      // This is a hack but I expect it will need to be redone when we have pagination anyway.\n      $(\".new-admin-design-main\")[0].scrollTop = $(\".new-admin-design-main\")[0].scrollHeight;\n    //} catch(err) {\n    //  console.log(err);\n    //}\n  }\n\t\n\tgetGOTLabel(action: any): string {\n\t  if (action.geoObjectJson && action.geoObjectJson.attributes && action.geoObjectJson.attributes.displayLabel && action.geoObjectJson.attributes.displayLabel.values\n\t      && action.geoObjectJson.attributes.displayLabel.values[0] && action.geoObjectJson.attributes.displayLabel.values[0].value && action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues\n\t      && action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0] && action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value)\n\t  {\n\t    return action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value;\n\t  }\n\t  else if (action.geoObjectJson && action.geoObjectJson.attributes && action.geoObjectJson.attributes.code) \n\t  {\n\t    return action.geoObjectJson.attributes.code;\n\t  }\n\t  else\n\t  {\n\t    return this.localizationService.decode(\"geoObject.label\");\n\t  }\n\t}\n\t\n\tonUpload(action: AbstractAction): void {\n\t\tthis.targetActionId = action.oid;\n\t\t\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonDownloadFile(actionOid: string, fileOid: string): void {\n\t\twindow.location.href = acp + '/changerequest/download-file-action?actionOid=' + actionOid + '&' + 'vfOid=' + fileOid;\n\t}\n\t\n\tonDeleteFile(actionOid: string, fileOid: string): void {\n\t\tthis.service.deleteFile(actionOid, fileOid).then(response => {\n\t\t\t\n\t\t\tlet docPos = -1;\n\t\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\t\tlet action = this.actions[i];\n\t\t\t\tif(action.oid === actionOid){\n\t\t\t\t\t\n\t\t\t\t\tfor(let index=0; index<action.documents.length; index++){\n\t\t\t\t\t\tlet doc = action.documents[index];\n\t\t\t\t\t\tif(doc.oid === fileOid){\n\t\t\t\t\t\t\tdocPos = index;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(docPos > -1){\n\t\t\t\t\t\taction.documents.splice(docPos, 1)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\t}\n\t\n\tpublic fileOverBase(e:any):void {\n\t    this.hasBaseDropZoneOver = e;\n\t}\n\n\trefresh(): void {\n\n\t\tthis.service.getAllRequests(\"ALL\").then(requests => {\n\t\t\t\n\t\t\tthis.requests = requests;\n\t\t\t\n\t\t\tif (this.waitingOnScroll)\n\t\t\t{\n\t\t\t  let that = this;\n\t\t\t  setTimeout(function(){ that.scrollToBottom(); }, 100);\n\t\t\t  this.waitingOnScroll = false;\n\t\t\t}\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t}\n\n\n\tonSelect(selected: any): void {\n\n\t\t// this.request = selected.selected;\n\n\t\tthis.service.getAllActions(selected.selected[0].oid).then(actions => {\n\n\t\t\tthis.actions = actions;\n\t\t\t\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonExecute(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\t\n\t\t\tthis.service.execute(changeRequest.oid).then(request => {\n\t\t\t\tchangeRequest = request;\n\t\n\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\tthis.refresh();\n\t\t\t\t\n\t\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\t\tanimated: true,\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tignoreBackdropClick: true,\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tbsModalRef.content.submitText = this.localizationService.decode('change.requests.more.geoobject.updates.submit.btn');\n\t\t\t\tbsModalRef.content.cancelText = this.localizationService.decode('change.requests.more.geoobject.updates.cancel.btn');\n\t\t\t\tbsModalRef.content.message = this.localizationService.decode('change.requests.more.geoobject.updates.message');\n\t\t\t\t\n\t\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\t\t\n\t\t\t\t\tlet firstGeoObject = this.getFirstGeoObjectInActions();\n\t\t\t\t\t\n\t\t\t\t\tif(firstGeoObject){\n\t\t\t\t\t\tthis.router.navigate(['/registry/location-manager', firstGeoObject.attributes.uid, firstGeoObject.geoObjectType.code, this.today, true]);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tthis.router.navigate(['/registry/location-manager', firstGeoObject.attributes.uid, firstGeoObject.geoObjectType.code, this.today, true]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\n\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t}\n\t}\n\t\n\tgetFirstGeoObjectInActions(): GeoObjectOverTime {\n\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\tlet action = this.actions[i];\n\t\t\t\n\t\t\tif(action.hasOwnProperty(\"geoObjectJson\")){\n\t\t\t\treturn action[\"geoObjectJson\"];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\tonDelete(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\t\n\t\t\tbsModalRef.content.type = \"danger\";\n\t\t\tbsModalRef.content.submitText = this.localizationService.decode('change.request.delete.request.confirm.btn');\n\t\t\tbsModalRef.content.message = this.localizationService.decode('change.request.delete.request.message');\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.delete(changeRequest.oid).then(deletedRequestId => {\n\n\t\t\t\t\tlet pos = -1;\n\t\t\t\t\tfor(let i=0; i<this.requests.length; i++){\n\t\t\t\t\t\tlet req = this.requests[i];\n\t\t\t\t\t\tif(req.oid === deletedRequestId){\n\t\t\t\t\t\t\tpos = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(pos > -1){\n\t\t\t\t\t\tthis.requests.splice(pos, 1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tapplyActionStatusProperties(action: any): void {\n\t\t// var action = JSON.parse(JSON.stringify(this.action));\n\t\t// action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n\t\tthis.service.applyActionStatusProperties(action).then(response => {\n\t\t\taction.decisionMaker = (action.approvalStatus !== 'PENDING') ? this.authService.getUsername() : '';\n\t\t\t\n\t\t\t// this.crtable.refresh()\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonApproveAll(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.approveAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\n\t\t}\n\t}\n\n\tonRejectAll(changeRequest: ChangeRequest): void {\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.rejectAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\n\t\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\t\t// this.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\trequestTrackBy(index: number, request: ChangeRequest) {\n\t\treturn request.oid;\n\t}\n\n\ttoggle(event: any, oid: string): void {\n\n\t\tif (!event.target.parentElement.className.includes(\"btn\") && !event.target.className.includes(\"btn\")) {\n\t\t\tif (this.toggleId === oid) {\n\t\t\t\tthis.toggleId = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.toggleId = oid;\n\t\t\t\tthis.onSelect({ selected: [{ oid: oid }] });\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter(criteria: string): void {\n\n\t\tthis.service.getAllRequests(criteria).then(requests => {\n\t\t\tthis.requests = requests;\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t\tthis.filterCriteria = criteria;\n\t}\n\n\tsetActionStatus(action: AbstractAction, status: string): void {\n\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\t\n\t\t\n\n\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\taction.approvalStatus = status;\n\n\t\t\tthis.applyActionStatusProperties(action);\n\t\t});\n\t}\n\n\tgetActiveDetailComponent(action: AbstractAction): any {\n\t\t// TODO: I know this scales poorly to lots of different action types but I'm not sure how to do it better\n\t\tif (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction')) {\n\t\t\t// return this.cuDetail;\n\t\t}\n\t\t//   if (this.arDetail != null && (this.action.actionType.endsWith('AddChildAction') || this.action.actionType.endsWith('RemoveChildAction')))\n\t\t//   {\n\t\t//     return this.arDetail;\n\t\t//   }\n\n\t\treturn action;\n\t}\n\n\tshowActionDetail(action: any, cr: any) {\n\n\t\tthis.bsModalRef = this.modalService.show(ActionDetailModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.curAction(action, !cr.permissions.includes(\"WRITE_DETAILS\"));\n\t}\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\t\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n}\n","<!-- <div class=\"row text-center\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"change.request.title\"></localize>\n        </h2>\n    </div>\n</div> -->\n\n<!-- <div class=\"row text-center\">\n    <div class=\"col-md-12 text-left\" style=\"margin-top: 40px;\">\n        <h3>\n            <localize key=\"change.request.table.title\"></localize>\n        </h3>\n    </div>\n</div> -->\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"form-group button-row\">\n\n      <a [routerLink]=\"\" (click)=\"filter('ALL')\" [ngClass]=\"filterCriteria === 'ALL' ? 'cr-filter-link-active' : ''\" >\n        <localize key=\"change.request.all.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('PENDING')\" [ngClass]=\"filterCriteria === 'PENDING' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.pending.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('ACCEPTED')\" [ngClass]=\"filterCriteria === 'ACCEPTED' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.accepted.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('REJECTED')\" [ngClass]=\"filterCriteria === 'REJECTED' ? 'cr-filter-link-active' : ''\"style=\"margin-left: 5px;\" >\n        <localize key=\"change.request.rejected.filter.link\"></localize>\n      </a>\n\n    </div>\n\n    <hr style=\"border-top:solid 3px #6BA542\" />\n\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n\n  <table class=\"table\">\n    <thead>\n      <tr style=\"height: 50px;color: grey;\">\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.contributor.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.id.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.date.contributed.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.status.label\"></localize> </th>\n        <!-- <th style=\"vertical-align: middle;\">Actions</th> -->\n        <th></th>\n      </tr>\n    </thead>\n        <tbody>\n      <ng-template ngFor let-req [ngForOf]=\"requests\" [ngForTrackBy]=\"requestTrackBy\">\n        <tr class=\"clickable\" [ngClass]=\"{'row-active':toggleId === req.oid}\" (click)=\"toggle($event, req.oid)\" style=\"height: 50px;\">\n          <td class=\"col-md-3\">\n            <h5><strong>{{req.createdBy}}</strong></h5>\n          </td>\n          <td class=\"col-md-4\">\n            <h5><strong>{{req.oid}}</strong></h5>\n          </td>\n          <td class=\"col-md-2\" style=\"vertical-align: middle; color:grey;\">\n             <span class=\"date-string-display\">\n                {{formatDate(req.createDate)}}\n             </span>\n          </td>\n          <td class=\"col-md-2\">\n            <h5 [ngClass]=\"{'status-pending':req.approvalStatus === 'PENDING', 'status-accepted':req.approvalStatus === 'ACCEPTED', 'status-rejected':req.approvalStatus === 'REJECTED'}\">\n               <strong>{{req.statusLabel}}</strong>\n            </h5>\n          </td>\n          <td class=\"col-md-1\" style=\"vertical-align:middle;text-align:right;padding-right:25px;\">\n            <i class=\"arrow arrow-right\" aria-hidden=\"true\"></i>\n          </td>\n        </tr>\n        \n        <!-- Action panel only shows when activated with click -->\n        <tr [@fadeInOut] *ngIf=\"toggleId === req.oid\" style=\"background-color:#f7f7f7;\">\n          <td colspan=\"5\" >\n\n            <div class=\"row\" style=\"margin:0;\">\n              <!-- <div class=\"col-md-1\"></div> -->\n              <div class=\"col-md-12\">\n\n                <div *ngFor=\"let action of actions\" class=\"action-card\" [ngClass]=\"{'status-pending-container':action.approvalStatus === 'PENDING', 'status-accepted-container':action.approvalStatus === 'ACCEPTED', 'status-rejected-container':action.approvalStatus === 'REJECTED'}\" style=\"margin-bottom:10px; background-color:white;\"> \n                  <div class=\"row\" style=\"margin:0; padding-top:5px; padding-bottom:5px;\">\n                    <div class=\"col-md-3\" style=\"border-right:2px grey solid; height:50px;\">\n                      <i class=\"fa fa-circle\" style=\"float:left; line-height: 50px;\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" aria-hidden=\"true\"></i>\n                      <h4 class=\"vertical-center\" style=\"margin:0; float:left; padding-left:20px;\">{{req.createdBy}}</h4>\n                    </div>\n                    <div class=\"col-md-5\" style=\"height: 50px;\">\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\" class=\"fa fa-refresh vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\" class=\"fa fa-plus vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\" class=\"fa fa-link vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\" class=\"fa fa-chain-broken vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n\n                      <ul class=\"vertical-center\" style=\"list-style-type:none; float:left; padding-left:20px;\">\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\">\n                          <localize key=\"change.request.table.update\"\n                           [params]=\"{\n                             '{0}':getGOTLabel(action),\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\">\n                          <localize key=\"change.request.table.create\"\n                           [params]=\"{\n                             '{0}':getGOTLabel(action),\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.SetParentAction'\">\n                          <localize key=\"change.request.table.setparent\" [params]=\"{'{0}':action.childCode}\"></localize>\n                        </li>        \n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\">\n                          <localize key=\"change.request.table.setchild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\">\n                          <localize key=\"change.request.table.removechild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>                                        \n                        <li>\n                          <localize key=\"change.request.table.on\"></localize>\n                          <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(action.createActionDate)}}\n                          </span>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-md-4\" style=\"height: 50px;text-align: center;\">\n                      <h4 *ngIf=\"req.approvalStatus !== 'PENDING'\" class=\"vertical-center\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" style=\"margin: 0;\">{{action.approvalStatus}}</h4>\n                      <span *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS')\">\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'ACCEPTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'ACCEPTED')\" class=\"btn btn-primary vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.accept.btn\"></localize>\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'REJECTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'REJECTED')\" class=\"btn btn-danger vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.reject.btn\"></localize>\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'PENDING'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'PENDING')\" class=\"btn btn-warning vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.pending.btn\"></localize>\n                        </button>\n                      </span>\n                    </div>\n                  </div>\n\n                  <div class=\"row\" style=\"border-top: 1px grey solid;margin:0;padding: 10px 0;\">\n                    \n                    <div class=\"col-md-4\" >\n                      <div *ngIf=\"req.permissions.includes('READ_CONTRIBUTOR_NOTES')\" class=\"form-group\">\n                        <label for=\"contribNotesInput-{{req.oid}}\"> <localize key=\"change.request.contributor.notes.label\"></localize> </label>\n                        <textarea id=\"contribNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;\" [(ngModel)]=\"action.contributorNotes\" disabled></textarea>\n                      </div>  \n                      \n                      <button type=\"submit\" (click)=\"showActionDetail(action, req)\" class=\"btn btn-default pull-right\" style=\"margin:0;\" role=\"button\" [disabled]=\"!req.permissions.includes('READ_DETAILS')\" [title]=\"'change.request.details.btn.hover' | localize\">\n                        <localize style=\"text-transform:uppercase;\" key=\"change.request.action.details.label\"></localize>\n                      </button>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.email\"></localize>:\n                          </span>\n                          <label>{{req.email}}</label>\n                      </div>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.phone\"></localize>:\n                          </span>\n                          <label>{{req.phoneNumber}}</label>\n                      </div>\n                      \n                      <a *ngIf=\"(req.approvalStatus === 'ACCEPTED' || req.approvalStatus === 'REJECTED') && action.actionType != 'net.geoprism.registry.action.geoobject.SetParentAction'\" class=\"pull-right\" target=\"_blank\" [routerLink]=\"['/registry/location-manager', action.geoObjectJson.attributes.uid, action.geoObjectType.code, today, true]\">\n                          <localize key=\"change.request.open.geoobject.in.editor.link.btn\"></localize>\n                      </a>\n                      \n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div *ngIf=\"req.permissions.includes('READ_MAINTAINER_NOTES')\" class=\"form-group\">\n                        <label for=\"maintainerNotesInput-{{req.oid}}\"> <localize key=\"change.request.maintainer.notes.label\"></localize> </label>\n                        <textarea id=\"maintainerNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;margin:0\" [(ngModel)]=\"action.maintainerNotes\" [disabled]=\"!req.permissions.includes('WRITE_MAINTAINER_NOTES')\"></textarea>\n                      </div>  \n                      \n                      <div *ngIf=\"req.permissions.includes('READ_MAINTAINER_NOTES')\" class=\"form-group\">\n                            <label for=\"additionalNotes-{{req.oid}}\"> <localize key=\"change.request.action.detail.additionalNotes\"></localize> </label>\n                            <input type=\"text\" id=\"additionalNotes-{{req.oid}}\" class=\"form-control\" style=\"width:100%;\" [(ngModel)]=\"action.additionalNotes\" [disabled]=\"!req.permissions.includes('WRITE_MAINTAINER_NOTES')\">\n                      </div>  \n                          \n                      <div *ngIf=\"action.approvalStatus !== 'PENDING' && action.decisionMaker !== ''\">\n                            <span style=\"font-style: italic;\">\n                                <localize *ngIf=\"action.approvalStatus !== 'REJECTED'\" key=\"change.request.status.approvedBy\"></localize>\n                                <localize *ngIf=\"action.approvalStatus === 'REJECTED'\" key=\"change.request.status.rejectedBy\"></localize>:\n                            </span>\n                            <label> {{action.decisionMaker}} </label>\n                       </div>\n                          \n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div>\n                        <label><localize key=\"change.request.reference.documents.label\"></localize></label>\n                        <div *ngIf=\"action.documents.length > 0\" style=\"border:1px solid #ccc;border-radius: 4px;\">\n                          <ul style=\"padding:10px;margin:0;\">\n                              <li *ngFor=\"let doc of action.documents\" class=\"list-group-item\" style=\"padding:0;font-size:inherit;\">\n                                <a (click)=\"onDownloadFile(action.oid, doc.oid)\" >{{doc.fileName}}</a>\n                                <i (click)=\"onDeleteFile(action.oid, doc.oid)\" class=\"fa fa-times ico-remove\" style=\"margin-left:10px;\" aria-hidden=\"true\"></i>\n                              </li>\n                          </ul>\n                        </div>\n                        <p *ngIf=\"action.documents.length === 0\" style=\"color:grey;font-style:italic;\">\n                          <localize key=\"change.request.no.documents.label\"></localize>\n                        </p>\n                      \n                        <div *ngIf=\"req.permissions.includes('WRITE_DOCUMENTS')\" style=\"padding:10px 0;\">\n                            <!-- Limit file types with: accept=\".xls, .xlsx, .pdf, .doc\" -->\n                            <input class=\"ghost-input\" style=\"display:inline-block;padding:0;height:auto;border-radius:0;margin-top:10px;\" #myFile name=\"file\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" required />\n                            \n                            <button class=\"btn btn-primary pull-right\" style=\"margin:0;\" (click)=\"onUpload(action)\" [title]=\"'change.request.upload.document.btn.hover' | localize\">\n                              <localize key=\"change.request.reference.document.upload\"></localize>\n                            </button>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div> \n\n\n                <div *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS') || req.permissions.includes('DELETE')\" class=\"button-holder\">\n                  <span *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS')\">\n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onApproveAll(req)\" class=\"btn btn-primary\" role=\"button\" [title]=\"'change.request.accept.all.btn.hover' | localize\">\n                      <localize key=\"change.request.accept.all.btn\"></localize>\n                    </button>\n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onRejectAll(req)\" class=\"btn btn-danger\" role=\"button\" [title]=\"'change.request.reject.all.btn.hover' | localize\">\n                      <localize key=\"change.request.reject.all.btn\"></localize>\n                    </button>  \n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onExecute(req)\" class=\"btn btn-primary\" role=\"button\" [title]=\"'change.request.implement.decisions.btn.hover' | localize\">\n                      <localize key=\"change.request.accept.changes.btn\"></localize>\n                    </button>\n                  </span>\n                  \n                  <button type=\"submit\" role=\"button\" class=\"btn btn-danger pull-right\" [disabled]=\"!req.permissions.includes('DELETE')\" (click)=\"req.createdBy === getUsername() && onDelete(req)\" [title]=\"'change.request.delete.request.hover' | localize\" >\n                    <localize key=\"change.request.delete.request.btn\"></localize>\n                  </button>\n                  \n                </div>\n              </div>\n              <!-- <div class=\"col-md-1\"></div> -->\n            </div>\n\n          </td>\n        </tr> <!-- END Action panel -->\n        \n      </ng-template>\n    </tbody>\n  </table>\n  </div>   \n</div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nexport interface ActionDetailComponent {\n    endEdit(): void;\n}\n\n@Component( {\n    selector: 'action-detail-modal',\n    templateUrl: './action-detail-modal.component.html',\n    styleUrls: []\n} )\nexport class ActionDetailModalComponent {\n\n    action: any;\n    \n    readonly: boolean;\n\n    @ViewChild( \"cuDetail\" ) cuDetail: ActionDetailComponent;\n    @ViewChild( \"arDetail\" ) arDetail: ActionDetailComponent;\n    @ViewChild( \"spDetail\" ) spDetail: ActionDetailComponent;\n\n    @Input()\n    curAction( action: any, readonly: boolean ) {\n      this.action = action;\n      this.readonly = readonly\n    }\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n    }\n\n    cancel(): void {\n        if ( this.cuDetail != null ) {\n            this.cuDetail.endEdit();\n        }\n\n        if ( this.arDetail != null ) {\n            this.arDetail.endEdit();\n        }\n\n        if ( this.spDetail != null ) {\n            this.spDetail.endEdit();\n        }\n\n        this.bsModalRef.hide();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <!-- <div class=\"heading\">\n        <h2>\n            <localize key=\"export-modal.title\"></localize>\n        </h2>\n\t</div> -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <crtable-detail-create-geo-object #cuDetail *ngIf=\"action && (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </crtable-detail-create-geo-object>\n            <crtable-detail-add-remove-child #arDetail *ngIf=\"action && (action.actionType.endsWith('AddChildAction') || action.actionType.endsWith('RemoveChildAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </crtable-detail-add-remove-child>\n            <set-parent-detail #spDetail *ngIf=\"action && (action.actionType.endsWith('SetParentAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </set-parent-detail>\n        </div>\n    </div>\n\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"button-holder text-right\">\n                <button type=\"button\" (click)=\"cancel();\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n                    <span> <localize key=\"modal.button.close\"></localize>\n                    </span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, GeoObjectOverTime } from '@registry/model/registry';\n\n\n@Component({\n\tselector: 'manage-versions-modal',\n\ttemplateUrl: './manage-versions-modal.component.html',\n\tstyleUrls: ['./manage-versions-modal.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsModalComponent implements OnInit {\n\t\n\t@Input() readonly: boolean;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonAttributeVersionChange: Subject<GeoObjectOverTime>;\n\n\tattribute: Attribute;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\tisNewGeoObject: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onAttributeVersionChange = new Subject();\n\t}\n\n\tonVersionChange(geoObjectOverTime: GeoObjectOverTime): void {\n\t\t\n\t\tif (geoObjectOverTime != null) {\n\t\t\tthis.onAttributeVersionChange.next(geoObjectOverTime);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n}\n","<div class=\"modal-body\">\n\n    <div class=\"text-center\">\n        <h2 *ngIf=\"!readonly\">\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-versions\n      *ngIf=\"attribute != null\"\n      [attribute]=\"attribute\"\n      [geoObjectType]=\"geoObjectType\"\n      [geoObjectOverTimeInput]=\"geoObjectOverTime\"\n      [isNewGeoObject]=\"isNewGeoObject\"\n      (onChange)=\"onVersionChange($event)\"\n      [readonly]=\"readonly\"\n    ></manage-versions>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'geoObjectAttributeExcludesFilter',\n    pure: true\n})\nexport class GeoObjectAttributeExcludesPipe implements PipeTransform {\n    transform(items: any[], filter: string[]): any {\n        if (!items || !filter) {\n            return items;\n        }\n       \n        return items.filter(item => filter.indexOf(item.code) === -1)\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'change-request-page',\n    templateUrl: './change-request-page.component.html',\n    styleUrls: ['./change-request-page.css']\n} )\nexport class ChangeRequestPageComponent implements OnInit {\n\n  pageTitle: string;\n  bsModalRef: BsModalRef;\n  isAdmin: boolean;\n  isMaintainer: boolean;\n  isContributor: boolean;\n  isContributorOnly: boolean;\n  \n  urlSubscriber: any;\n  \n  highlightOid: string;\n    \n  constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService, private route: ActivatedRoute ) {\n    this.isAdmin = service.isAdmin();\n    this.isMaintainer = this.isAdmin || service.isMaintainer();\n    this.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n    this.isContributorOnly = service.isContributerOnly();\n  }\n\n  ngOnInit(): void {\n    this.urlSubscriber = this.route.params.subscribe(params => {\n      this.highlightOid = params['oid'];\n    });\n  }\n  \n  ngOnDestroy(): void {\n    this.urlSubscriber.unsubscribe();\n  }\n\n  public error( err: HttpErrorResponse ): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div id=\"app-container\" class=\"container-fluid\" style=\"height: 100%;\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div>\n          <div class=\"heading\">\n            <h2>{{pageTitle}}</h2>\n          </div>\n\n          <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n\n            <request-table [toggleId]=\"highlightOid\"></request-table>\n\n            <submit-change-request *ngIf=\"isContributorOnly\"></submit-change-request>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ManageParentVersionsModalComponent } from './manage-parent-versions-modal.component';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n@Component({\n\n\tselector: 'cascading-geo-selector',\n\ttemplateUrl: './cascading-geo-selector.html',\n})\nexport class CascadingGeoSelector {\n\n\t@Input() hierarchies: HierarchyOverTime[];\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Input() isValid: boolean = true;\n\t@Input() readOnly: boolean = false;\n\n\t@ViewChild(\"mainForm\") mainForm;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() customEvent: boolean = false;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tdateStr: string;\n\n\tcHierarchies: any[] = [];\n\n\tparentMap: any = {};\n\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tconst day = this.forDate.getUTCDate();\n\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\n\t\t// Truncate any hours/minutes/etc which may be part of the date\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n\t\tconst time = this.forDate.getTime();\n\n\t\tthis.isValid = true;\n\n\t\tthis.cHierarchies = [];\n\t\tthis.hierarchies.forEach(hierarchy => {\n\t\t\tconst object = {};\n\t\t\tobject['label'] = hierarchy.label;\n\t\t\tobject['code'] = hierarchy.code;\n\n\t\t\tthis.isValid = this.isValid && (this.hierarchies.length > 0);\n\n\t\t\thierarchy.entries.forEach(pot => {\n\t\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tlet parents = [];\n\n\t\t\t\t\thierarchy.types.forEach(type => {\n\t\t\t\t\t\tlet parent: any = {\n\t\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\t\tlabel: type.label\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\t\tparent.text = pot.parents[type.code].text;\n\t\t\t\t\t\t\tparent.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparents.push(parent);\n\t\t\t\t\t});\n\n\t\t\t\t\tobject['parents'] = parents;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.cHierarchies.push(object);\n\n\t\t});\n\n\t\tthis.valid.emit();\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getHierarchies(): any {\n\t\treturn this.hierarchies;\n\t}\n\n\tonManageVersions(code: string): void {\n\t\tconst hierarchy = this.hierarchies.find(h => h.code === code);\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(hierarchy);\n\t\t}\n\t\telse {\n\n\t\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.init(hierarchy);\n\t\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<form style=\"overflow:visible;\" class=\"modal-form\" name=\"cascading-geo-selector\" #mainForm=\"ngForm\">\n  <fieldset>\n    <div>\n      <div class=\"row-holder\" style=\"overflow:visible;\" *ngFor=\"let hierarchy of this.cHierarchies\">\n        <div class=\"label-holder\">\n          <label>\n            {{hierarchy.label}}\n          </label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"container\" style=\"width:100%;\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" style=\"float:left;width:150px;\" *ngFor=\"let parent of hierarchy.parents; let i = index\">\n                {{parent.label}}\n\n                <input style=\"width:150px;\" type=\"text\" class=\"form-control\" disabled\n                  [value]=\"parent.geoObject.properties.displayLabel.localizedValue + ' : ' + parent.geoObject.properties.code\" [name]=\"hierarchy.code + '-' + parent.code + '-input'\">\n                  \n              </div>\n              \n            </div>\n\n            <div class=\"row\" *ngIf=\"!readOnly\">\n              <div class=\"col-sm-12\">\n                  <div class=\"button-holder\" style=\"padding: 20px 0 20px 0;text-align: left;\">\n                      <button type=\"submit\" style=\"\" (click)=\"onManageVersions(hierarchy.code)\" class=\"btn btn-primary\" role=\"button\">\n                          <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n                      </button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { MasterListVersion } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { ExportFormatModalComponent } from './export-format-modal.component';\nimport { GeoObjectEditorComponent } from '../geoobject-editor/geoobject-editor.component';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService, ProgressService } from '@shared/service';\n\ndeclare var acp: string;\ndeclare var $: any;\n\n@Component({\n\tselector: 'master-list',\n\ttemplateUrl: './master-list.component.html',\n\tstyleUrls: ['./master-list.component.css']\n})\nexport class MasterListComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterListVersion = null;\n\tp: number = 1;\n\tcurrent: string = '';\n\tfilter: { attribute: string, value: string, label: string }[] = [];\n\tselected: string[] = [];\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 100,\n\t\tresults: []\n\t};\n\tsort = { attribute: 'code', order: 'ASC' };\n\tisPublished: boolean = true;\n\tisRefreshing: boolean = false;\n\tisWritable: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tpublic searchPlaceholder = \"\";\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\n\tconstructor(public service: RegistryService, private pService: ProgressService, private route: ActivatedRoute, private dateService: DateService,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private authService: AuthService ) {\n\n\t\tthis.searchPlaceholder = localizeService.decode(\"masterlist.search\");\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\t\tthis.isPublished = (this.route.snapshot.paramMap.get('published') == \"true\");\n\n\t\tthis.service.getMasterListVersion(oid).then(version => {\n\t\t\tthis.list = version;\n\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\tattribute.isCollapsed = true;\n\t\t\t});\n\t\t\tconst orgCode = this.list.orgCode;\n\t\t\tconst typeCode = this.list.superTypeCode != null ? this.list.superTypeCode : this.list.typeCode;\n\n\t\t\tthis.isWritable = this.authService.isGeoObjectTypeRC(orgCode, typeCode);\n\n\t\t\tthis.onPageChange(1);\n\t\t\t\n\t\t\tif (version.refreshProgress != null)\n\t\t\t{\n\t\t\t  this.handleProgressChange(version.refreshProgress);\n\t\t\t}\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/progress/' + oid);\n\t\tthis.notifier.subscribe(message => {\n\t\t  if (message.content != null)\n\t\t  {\n\t\t\t  this.handleProgressChange(message.content);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t  this.handleProgressChange(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\t\n\tngAfterViewInit() {\n\n\t}\n\n\n\tonPageChange(pageNumber: number): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.data(this.list.oid, pageNumber, this.page.pageSize, this.filter, this.sort).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t//    onSearch(): void {\n\t//        this.filter = this.current;\n\t//\n\t//        this.onPageChange( 1 );\n\t//    }\n\n\tonSort(attribute: { name: string, label: string }): void {\n\t\tif (this.sort.attribute === attribute.name) {\n\t\t\tthis.sort.order = (this.sort.order === 'ASC' ? 'DESC' : 'ASC');\n\t\t}\n\t\telse {\n\t\t\tthis.sort = { attribute: attribute.name, order: 'ASC' };\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tattr.search = null;\n\t\t});\n\n\t\tthis.filter = [];\n\t\tthis.selected = [];\n\n\t\tthis.onPageChange(1);\n\t}\n\n\ttoggleFilter(attribute: any): void {\n\t\tattribute.isCollapsed = !attribute.isCollapsed;\n\t}\n\n\tgetValues(attribute: any): void {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.message = null;\n\n\t\t\t// Get the valid values\n\t\t\tthis.service.values(this.list.oid, attribute.search, attribute.name, attribute.base, this.filter).then(options => {\n\t\t\t\toptions.unshift({ label: '[' + this.localizeService.decode(\"masterlist.nofilter\") + ']', value: null });\n\n\t\t\t\tobserver.next(options);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\thandleProgressChange(progress: any): void {\n\n\t\tthis.isRefreshing = (progress.current < progress.total);\n\n\t\tthis.pService.progress(progress);\n\t}\n\n\thandleDateChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && (attribute.value.start !== '' || attribute.value.end !== '')) {\n\n\t\t\tlet label = '[' + attribute.label + '] : [';\n\n\t\t\tif (attribute.value.start != null) {\n\t\t\t\tlabel += attribute.value.start;\n\t\t\t}\n\n\t\t\tif (attribute.value.start != null && attribute.value.end != null) {\n\t\t\t\tlabel += ' - ';\n\t\t\t}\n\n\t\t\tif (attribute.value.end != null) {\n\t\t\t\tlabel += attribute.value.end;\n\t\t\t}\n\n\t\t\tlabel += ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleInputChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && attribute.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleListChange(e: TypeaheadMatch, attribute: any): void {\n\t\tattribute.value = e.item;\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tif (attr.base === attribute.base) {\n\t\t\t\tattr.search = '';\n\t\t\t}\n\t\t});\n\n\t\tif (attribute.value.value != null && attribute.value.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value.label + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: e.item.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t\tattribute.search = e.item.label;\n\t\t}\n\t\telse {\n\t\t\tattribute.search = '';\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tisFilterable(attribute: any): boolean {\n\t\treturn attribute.type !== 'none' && (attribute.dependency.length === 0 || this.selected.indexOf(attribute.base) !== -1 || this.selected.filter(value => attribute.dependency.includes(value)).length > 0);\n\t}\n\n\tonEdit(data): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\teditModal.content.configureAsExisting(data.code, this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterList(this.list.oid).toPromise()\n\t\t\t.then( (historyOid: string) => {\n\t\t\t\tthis.isRefreshing = true;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\t//this.list = list;\n        //this.list.attributes.forEach(attribute => {\n        //  attribute.isCollapsed = true;\n        //});\n\n        // Refresh the resultSet\n        //this.onPageChange(1);\n\t}\n\n\tonNewGeoObject(): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t//editModal.content.fetchGeoObject( data.code, this.list.typeCode );\n\t\teditModal.content.configureAsNew(this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonExport(): void {\n\t\tthis.bsModalRef = this.modalService.show(ExportFormatModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.onFormat.subscribe(format => {\n\t\t\tif (format == 'SHAPEFILE') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-shapefile?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t\telse if (format == 'EXCEL') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-spreadsheet?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t});\n\t}\n\n\tchangeTypeaheadLoading(attribute: any, loading: boolean): void {\n\t\tattribute.loading = loading;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\t\n\tonWheel(event: WheelEvent): void {\n\t\tlet tableEl = (<Element>event.target).parentElement.closest('table').parentElement;\n//\t    if (event.deltaY > 0) tableEl!.scrollLeft += 40;\n//\t    else tableEl!.scrollLeft -= 40;\n\n\t\ttableEl.scrollLeft += event.deltaY;\n   \t\tevent.preventDefault();\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n    <progress-bar *ngIf=\"isRefreshing\"></progress-bar>\n    \n    <!--\n    <div *ngIf=\"isRefreshing\" class=\"version-busy-overlay\">\n      This Master List Version is currently refreshing...\n      ...Please wait... ?\n    </div>\n    -->\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\">\n            <div *ngIf=\"list\" class=\"col-md-12\">\n                <h2>\n                    <!-- <localize key=\"masterlist.title\"></localize> -->\n                    {{list.displayLabel}}\n                </h2>\n            </div>\n        </div>\n        <div *ngIf=\"list\" class=\"row form-group\">\n\n            <div class=\"col-md-12\">\n                <h4>\n                    <localize key=\"masterlist.generatedDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.publishDate)}}\n                      </span>\n                </h4>\n                \n                <h4>\n                    <localize key=\"masterlist.forDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.forDate)}}\n                      </span>\n                </h4>\n            </div>\n        </div>\n<!--         <div class=\"row\"> -->\n<!--             <div *ngIf=\"list\" class=\"col-md-12\"> -->\n<!--               <a [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, (!isWritable || list.isAbstract), list.forDate]\" routerLinkActive=\"active\"> -->\n<!--                 <localize key=\"masterlist.gotoMap\"></localize> -->\n<!--               </a> -->\n                \n<!--             </div> -->\n<!--         </div> -->\n\n\n        <div *ngIf=\"filter.length > 0\" class=\"row form-group\">\n            <div class=\"col-md-12 table-responsive\" style=\"\">\n                <localize key=\"masterlist.filters\"></localize>\n                <ol>\n                    <li *ngFor=\"let f of filter\">{{f.label}}</li>\n                </ol>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-md-12\">\n                <div class=\"button-holder pull-right\">\n            \n                    <span class=\"clickable\" (click)=\"clearFilters()\" style=\"padding: 10px;\">\n                        <span class=\"fa-stack fa-md\">\n                            <i class=\"fa fa-filter fa-stack-2x\" style=\"font-size: 25px;\"></i>\n                            <i class=\"fa fa-times-circle fa-stack-1x\" style=\"font-size: 13px;top: 4px;left: 6px;\"></i>\n                        </span>\n                        <localize key=\"masterlist.clearFilters\"></localize>\n                    </span>\n                    \n                    <span *ngIf=\"!isPublished\" class=\"clickable\" (click)=\"onPublish()\" style=\"padding: 10px;\">\n                        <i [ngClass]=\"{'fa fa-refresh clickable':true}\" style=\"font-size: 24px;vertical-align: middle;padding-right: 5px;\" aria-hidden=\"true\"></i>\n                        <localize key=\"masterlist.publish\"></localize>\n                    </span>\n\n\n                        <button *ngIf=\"isWritable && !list.isAbstract\" type=\"submit\"\n                           [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, '__NEW__', (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"\n                         class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"masterlist.newGeoObject\"></localize>\n                        </button>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"dropdown\" *ngIf=\"isWritable && list.isAbstract\">\n\t\t\t\t\t\t\t\t\t\t\t\t  <button class=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n\t\t\t\t\t\t\t\t\t\t\t\t    <localize key=\"masterlist.newGeoObject\"></localize>\n\t\t\t\t\t\t\t\t\t\t\t\t    <span class=\"caret\"></span>\n\t\t\t\t\t\t\t\t\t\t\t\t  </button>\n\t\t\t\t\t\t\t\t\t\t\t\t  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n\t\t\t\t\t\t\t\t\t\t\t\t    <li><localize style=\"padding-left:10px;\" key=\"masterlist.newGeoObject.selectASubtype\"></localize></li>\n\t\t\t\t\t\t\t\t\t\t\t\t    <li role=\"separator\" class=\"divider\"></li>\n\t\t\t\t\t\t\t\t\t\t\t\t    <li *ngFor=\"let subtype of list.subtypes\"><a [routerLink]=\"['/registry/dataset-location-manager', list.oid, subtype.code, !isWritable, list.forDate, '__NEW__', (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\">{{subtype.label}}</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t  </ul>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n                        <button type=\"submit\" (click)=\"onExport()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize *ngIf=\"filter.length === 0\" key=\"io.export.allrows\"></localize>\n                            <localize *ngIf=\"filter.length > 0\" key=\"io.export.filteredrows\"></localize>\n                        </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div *ngIf=\"list\"  class=\"col-md-12 table-responsive\" id=\"list-view-table\" style=\"max-height:calc(100vh - 399px);\">\n                <table class=\"list-table table table-bordered table-striped\"  >\n                    <thead style=\"position: sticky;top: 0;background: #ececec;\">\n                        <tr>\n                            <th style=\"width: 3%;position: sticky;top: 0 \" class=\"label-column\"><localize key=\"masterlist.view.column\"></localize></th>\n                            <th style=\"position: sticky;top: 0\" *ngFor=\"let attribute of list.attributes\" class=\"label-column\">\n\n                                <div style=\"display: table-cell; padding-right: 10px; vertical-align: middle;\" *ngIf=\"isFilterable(attribute)\">\n                                    <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\"> \n\t\t\t\t\t\t\t\t\t\t<i style=\"font-size: 20px;\" class=\"fa fa-filter\" [title]=\"'button.filter.helptext' | localize\"></i>\n                                    </a>\n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; word-break: keep-all; word-wrap: normal;\">{{attribute.label}} </a> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; vertical-align: middle; padding-left: 5px;\"> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'ASC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-down\" style=\"font-size: inherit;\"></i> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'DESC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-up\" style=\"font-size: inherit;\"></i>\n                            \t</a>\n\n                                <div *ngIf=\"isFilterable(attribute)\">\n                                    <!-- <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-filter\"></i>\n\t\t\t\t\t\t\t\t</a> -->\n                                    <div id=\"collapseBasic\" [collapse]=\"attribute.isCollapsed\">\n                                        <input *ngIf=\"attribute.type === 'input'\" [name]=\"attribute.name\" [(ngModel)]=\"attribute.value\" (keyup.enter)=\"handleInputChange(attribute)\" type=\"text\" class=\"form-control search-input\" />\n                                        <div *ngIf=\"attribute.type === 'date'\">\n<!--                                             <input [name]=\"attribute.name + 'Start'\" [(ngModel)]=\"attribute.value.start\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" />  -->\n<!--                                             <input [name]=\"attribute.name + 'End'\" [(ngModel)]=\"attribute.value.end\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" /> -->\n                                            <date-field [(value)]=\"attribute.value.start\" label=\"\" [classNames]=\"'search-input'\" [inputName]=\"attribute.name + 'Start'\" (change)=\"handleDateChange(attribute)\" [allowInfinity]=\"false\" [allowFutureDates]=\"false\" [required]=\"false\" [placement]=\"'bottom'\"></date-field>\n                                            <date-field [(value)]=\"attribute.value.end\" label=\"\" [classNames]=\"'search-input'\" [inputName]=\"attribute.name + 'End'\" (change)=\"handleDateChange(attribute)\" [allowInfinity]=\"false\" [allowFutureDates]=\"false\" [required]=\"false\" [placement]=\"'bottom'\"></date-field>\n                                        </div>\n                                        <input *ngIf=\"attribute.type === 'list'\" \n                                          type=\"text\" \n                                          [placeholder]=\"('masterlist.search' | localize) + '...'\" \n                                          [name]=\"attribute.name\"\n                                          [(ngModel)]=\"attribute.search\"\n                                          [typeaheadAsync]=\"true\"\n                                          [typeahead]=\"getValues(attribute)\"\n                                          (typeaheadOnSelect)=\"handleListChange($event, attribute)\"\n                                          [typeaheadOptionsLimit]=\"100\"\n                                          [typeaheadMinLength]=\"0\"\n                                          [typeaheadWaitMs]=\"300\"\n                                          [ngClass]=\"{'inline-loading':attribute.loading}\"    \n                                          (typeaheadLoading)=\"changeTypeaheadLoading(attribute, $event)\"                                      \n                                          typeaheadOptionField=\"label\"\n                                          class=\"form-control\" autocomplete=\"off\">\n\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\">\n                            <td style=\"width: 3%; text-align: center;\" class=\"label-column\">\n                              <a class=\"fa\" style=\"padding:3px;\" [ngClass]=\"isWritable ? 'fa fa-pencil' : 'fa fa-eye'\" [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, result.code, (!isWritable || list.isAbstract), 'ML' + (isPublished ? 'T' : 'F') + list.oid]\" routerLinkActive=\"active\"></a>\n                            </td>\n                            <td *ngFor=\"let attribute of list.attributes\" class=\"label-column\">{{ result[attribute.name] }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!-- <div class=\"row form-group\">\n            <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"display:inline-block;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                <span style=\"display:inline-block;margin-left:20px;vertical-align:middle;color:#cacaca;font-weight:bold;\">\n                  <localize key=\"masterlist.pagination.showing\"></localize>\n                  &nbsp;{{(page.pageNumber-1)*page.pageSize}} \n                  -&nbsp;{{page.pageNumber*page.pageSize}} \n                  &nbsp;<localize key=\"masterlist.pagination.of\"></localize>&nbsp;{{page.count}}\n                </span> \n            </div>\n        </div>\n    </div>\n    <!-- </div> -->\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { PublishModalComponent } from './publish-modal.component';\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { RegistryService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { AuthService, LocalizationService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'published-master-list-history',\n\ttemplateUrl: './published-master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class PublishedMasterListHistoryComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tpage: any = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresults: []\n\t};\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tisAdmin: boolean;\n\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, public authService: AuthService, private localizeService: LocalizationService,\n\t\tprivate dateService: DateService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'PUBLISH_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\t//isGeoObjectTypeRM(type: string): boolean {\n\t//\treturn this.authService.isGeoObjectTypeRM(type);\n\t//}\n\n\tonDeleteMasterListVersion(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.updateList();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdateList(): void {\n\t\t// update the list of versions. \n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterListVersions(this.list.oid).then((data: { job: string }) => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.list != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getPublishMasterListJobs(this.list.oid, this.page.pageSize, pageNumber, \"createDate\", true).then(response => {\n\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.updateList();\n\t\t}\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, true])\n\t}\n\n\tonPublishShapefile(version: MasterListVersion): void {\n\n\t\tthis.service.publishShapefile(version.oid).then(() => {\n\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDownloadShapefile(version: MasterListVersion): void {\n\t\twindow.location.href = acp + '/master-list/download-shapefile?oid=' + version.oid;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n     <div *ngIf=\"list && ((list.write))\" style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" \n                    [title]=\"'masterList.publish.help.text' | localize\">\n                        <localize key=\"masterlist.publish.versions\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\" style=\"border-bottom: solid lightgrey 3px;\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.publishDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onPublishShapefile(version)\" class=\"btn btn-default\" role=\"button\">\n                                    <localize key=\"masterlist.publish-shapefile\"></localize>\n                                </button>                                \n                                <button *ngIf=\"version.shapefile\" type=\"submit\" (click)=\"onDownloadShapefile(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"masterlist.download\"></localize>\n                                </button>   \n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onDeleteMasterListVersion( version )\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>  \n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.publishDate)}}\n                          </span>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12 order-md-1\">\n            <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <tr style=\"height: 56px;\">\n                                <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let job of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <td style=\"vertical-align: middle;\">\n                                    <div class=\"wrapper\">\n                                        <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                        <p style=\"padding-left: 60px;\">\n                                            <span style=\"display: block;\"> {{job.createDate}} </span>\n                                            <span style=\"display: block;\"> {{job.author}} </span>\n                                            <span style=\"display: block;\"> {{job.type}} </span>\n                                            <span style=\"display: block;\"> {{job.status}} </span>\n                                            <span *ngIf=\"job.exception\" style=\"display: block;\"> {{job.exception.message}} </span>\n                                        </p>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                    </div>\n                </div>\n            </ul>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { RegistryService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-history',\n\ttemplateUrl: './master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class MasterListHistoryComponent implements OnInit {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tforDate: string = '';\n\tisForDateValid: boolean = true;\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, private localizeService: LocalizationService,\n\t\tprivate dateService: DateService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"EXPLORATORY\").then(list => {\n\t\t\tthis.list = list;\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.createMasterListVersion(this.list.oid, this.forDate).then(version => {\n\t\t\tthis.list.versions.push(version);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, false])\n\t}\n\n\tonDelete(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.list.versions = this.list.versions.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== version.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div *ngIf=\"list && list.exploratory\" style=\"margin-bottom: 10px;\" class=\"row\">\n\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\" style=\"margin-left: 10px;\" autocomplete=\"off\">\n                <div class=\"form-group\">\n                    <label for=\"forDate\" style=\"display: block; margin-bottom: 0;\"><localize key=\"masterlist.publishingFor\"></localize></label> \n\n                    <date-field [(value)]=\"forDate\" [(valid)]=\"isForDateValid\" label=\"\" style=\"display:inline-grid;\" [inputName]=\"'forDate'\" \n                        [allowFutureDates]=\"false\" [required]=\"true\" [placement]=\"'right'\"></date-field>\n\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid || !isForDateValid\">\n                        <localize key=\"masterlist.publishNewVersion\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.generatedDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\"> -->\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(version)\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>\n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.createDate)}}\n                          </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { MasterList } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\n@Component({\n\n\tselector: 'master-list-view',\n\ttemplateUrl: './master-list-view.component.html',\n\tstyleUrls: ['./master-list-view.component.css']\n})\nexport class MasterListViewComponent implements OnInit {\n\n\tcontent: string = \"\";\n\tlist: MasterList = null;\n\n\t/*\n\t * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute) {\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tif (oid != null) {\n\t\t\tthis.content = \"PUB\";\n\t\t}\n\n\t\tthis.service.getMasterList(oid).then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tif (list.read) {\n\t\t\t\tthis.content = \"EXP\";\n\t\t\t}\n\t\t});\n\t}\n\n\tonViewMetadata(event: any): void {\n\t\tevent.preventDefault();\n\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h3>{{list.displayLabel.localizedValue}}</h3>\n                    </div>\n                </div>\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h5>\n                            <b> <a href=\"#\" (click)=\"onViewMetadata($event)\"><localize key=\"masterlist.view\"></localize> </a></b>\n                        </h5>\n                    </div>\n                </div>\n                \n                <div>\n                    <a *ngIf=\"list && list.read\" style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'EXP'}\" (click)=\"renderContent('EXP')\"><localize key=\"lists.exploratory.link.label\"></localize></a>\n                    <a style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'PUB'}\" (click)=\"renderContent('PUB')\"><localize key=\"lists.published.link.label\"></localize></a>\n                </div>\n\n                <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n                    <published-master-list-history *ngIf=\"list && content === 'PUB'\" [oid]=\"list.oid\"></published-master-list-history>\n                    <master-list-history *ngIf=\"list && content === 'EXP'\" [oid]=\"list.oid\"></master-list-history>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { interval } from 'rxjs';\n\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob, ScheduledJobOverview, PaginationPage } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { DateService } from '@shared/service/date.service';\nimport { ModalTypes } from '@shared/model/modal';\n\n@Component({\n\tselector: 'scheduled-jobs',\n\ttemplateUrl: './scheduled-jobs.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class ScheduledJobsComponent implements OnInit {\n\tmessage: string = null;\n\n\tactiveJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompleteJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tisViewAllOpen: boolean = false;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router, private dateService: DateService,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.onActiveJobsPageChange(1);\n\n\t\tthis.pollingData = interval(1000).subscribe(() => {\n\t\t\tthis.activeTimeCounter++\n\t\t\tthis.completeTimeCounter++\n\n\t\t\tif (this.isViewAllOpen) {\n\t\t\t\tif (this.activeTimeCounter >= 4) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t\tif (this.completeTimeCounter >= 7) {\n\t\t\t\t\tthis.onCompleteJobsPageChange(this.completeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.completeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.activeTimeCounter >= 2) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.pollingData.unsubscribe();\n\t}\n\n\tformatJobStatus(job: ScheduledJobOverview) {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PaginationPage): void {\n\n\t\tpage.results.forEach(job => {\n\n\t\t\tlet stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{ \"label\": this.localizeService.decode(\"scheduler.step.fileImport\"), \"status\": \"COMPLETE\" },\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.staging\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.validation\"),\n\t\t\t\t\t\t\"status\": job.stage === \"VALIDATE\" || job.stage === \"VALIDATION_RESOLVE\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"VALIDATE\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.databaseImport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"IMPORT\" || job.stage === \"IMPORT_RESOLVE\" || job.stage === \"RESUME_IMPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tjob = job as ScheduledJobOverview;\n\t\t\tjob.stepConfig = stepConfig;\n\t\t});\n\n\t}\n\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"NEW\", \"VALIDATE\", \"VALIDATION_RESOLVE\", \"IMPORT\", \"IMPORT_RESOLVE\", \"RESUME_IMPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\tonViewAllCompleteJobs(): void {\n\t\tthis.onCompleteJobsPageChange(1);\n\n\t\tthis.isViewAllOpen = true;\n\t}\n\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-history/', code])\n\t}\n\n\tonActiveJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJobs(this.activeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.activeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.activeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCompleteJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getCompletedScheduledJobs(this.completeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.completeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.completeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\tonCancelScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(job.configuration).then(response => {\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"py-5\">\n            <h2>\n                <localize key=\"scheduledjobs.title\"></localize>\n            </h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n                <ul class=\"list-group\">\n                    <div class=\"solid-table-wrapper\">\n                        <table class=\"table table-striped\"> \n                            <thead > \n                                <tr style=\"height: 56px;\"> \n                                    <th style=\"vertical-align: middle;\">\n                                        <localize key=\"scheduledjobs.jobs.table.header\"></localize>                                      \n                                    </th> \n                                </tr> \n                            </thead> \n                            <tbody> \n                                <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                                <tr *ngFor=\"let job of activeJobsPage.results | paginate: { id: 'activeJobs', itemsPerPage: activeJobsPage.pageSize, currentPage: activeJobsPage.pageNumber, totalItems: activeJobsPage.count }\" >\n                                    <td style=\"vertical-align: middle;\">\n                                        <div class=\"wrapper\">\n                                            <i style=\"position: absolute;font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            <p style=\"padding-left: 60px;\">\n                                                <span style=\"display: block;\">\n                                                    {{job.fileName}}\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    <span class=\"date-string-display\">\n                                                        {{formatDate(job.createDate)}}\n                                                    </span>\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    {{formatJobStatus(job)}}\n                                                </span>\n                                            </p>\n\n                                            <step-indicator [steps]=\"job.stepConfig\"></step-indicator>\n\n                                        </div>\n                                    </td> \n                                    <td *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;vertical-align: middle;\">  \n\n                                        <div class=\"button-holder\" style=\"float: right;\">\n                                            <a [routerLink]=\"'/registry/job/' + job.historyId\" routerLinkActive=\"active\">\n                                                <button class=\"btn btn-primary\" role=\"button\">\n                                                    <localize *ngIf=\"job.stage === 'IMPORT_RESOLVE' || job.stage === 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.fix.problems.button\"></localize>\n                                                    <localize *ngIf=\"job.stage != 'IMPORT_RESOLVE' && job.stage != 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.detail.button\"></localize>\n                                                </button>\n                                            </a>\n                                            <button *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\" type=\"button\" (click)=\"onCancelScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n                                                <localize key=\"etl.import.cancel.openModal\"></localize>\n                                            </button>\n                                            <button *ngIf=\"job.stage === 'IMPORT_RESOLVE'\" type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n\t\t\t\t\t\t\t\t\t\t\t\t                    </button>\n                                        </div>\n                                    </td> \n                                </tr> \n\n                            </tbody> \n                        </table>\n                        <div *ngIf=\"activeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                            <pagination-controls id=\"activeJobs\" (pageChange)=\"onActiveJobsPageChange($event)\"></pagination-controls>\n                        </div>\n                    </div>\n\n                    <div class=\"solid-table-wrapper\">\n\t                    <table class=\"table table-striped\"> \n\t                      <thead> \n\t                        <tr> \n\t                          <th style=\"width:40%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.completedjobs.table.header\"></localize>                                      \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.status\"></localize>                   \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importedRecords\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importStartDate\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importEndDate\"></localize>                   \n                            </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length < 1\" style=\"border-bottom: none; width:15%\">\n\t                            <button type=\"submit\" (click)=\"onViewAllCompleteJobs()\" class=\"btn btn-default pull-right\" role=\"button\">\n\t                              <localize key=\"scheduledjobs.view.completed.jobs.button\"></localize>\n\t                            </button>\n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"border-bottom: none; width:0%\">\n                            </th>\n\t                        </tr> \n\t                      </thead> \n\t                      <tbody> \n\t                      <!-- <tr *ngFor=\"let job of completedJobs; let i = index;\">  -->\n\t                      <tr *ngFor=\"let job of completeJobsPage.results | paginate: { id: 'completeJobs', itemsPerPage: completeJobsPage.pageSize, currentPage: completeJobsPage.pageNumber, totalItems: completeJobsPage.count }\" >\n\t                        <td style=\"width:40%; vertical-align: middle;\">\n\t                          <div class=\"wrapper\">\n                              <i class=\"fa fa-file\" style=\"position: absolute;\" aria-hidden=\"true\"></i>\n                              <p style=\"padding-left: 30px;margin: 0;\">{{job.fileName}}</p>\n\t                          </div>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n\t                          <p style=\"padding-left: 0px;margin: 0;\">{{formatJobStatus(job)}}</p>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n                            <p style=\"padding-left: 0px;margin: 0;\">{{job.importedRecords}}</p>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                              <span class=\"date-string-display\">\n                                {{formatDate(job.createDate)}}\n                              </span>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                            <span class=\"date-string-display\">\n                                {{formatDate(job.lastUpdateDate)}}\n                            </span>\n                          </td>\n\t                        <td *ngIf=\"isAdmin || isMaintainer\" style=\"width:15%;text-align: right;vertical-align: middle;\">                                \n\t                           <!-- \n\t                           <button type=\"submit\" (click)=\"onView(job.historyId)\" class=\"btn btn-primary\" role=\"button\"><localize key=\"scheduledjobs.detail.button\"></localize></button>\n\t                           -->\n\t                           <!-- <button type=\"submit\" (click)=\"onDelete(job)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"modal.button.delete\"></localize></button> -->\n\t                        </td>\n\t                       </tr> \n\t                      </tbody> \n\t                    </table>\n\t\n\t                    <div *ngIf=\"completeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls id=\"completeJobs\" (pageChange)=\"onCompleteJobsPageChange($event)\"></pagination-controls>\n\t                    </div>\n                    </div>\n                </ul>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { JobConflictModalComponent } from './conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './conflict-widgets/reupload-modal.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { ScheduledJob } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'job',\n\ttemplateUrl: './job.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class JobComponent implements OnInit {\n\tmessage: string = null;\n\tjob: ScheduledJob;\n\tallSelected: boolean = false;\n\thistoryId: string = \"\";\n\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\ttimeCounter: number = 0;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tisPolling: boolean = false;\n\thasRowValidationProblem: boolean = false;\n\n\tnotifier: WebSocketSubject<{ type: string, message: string }>;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService,\n\t\tprivate router: Router, private route: ActivatedRoute, private dateService: DateService,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.historyId = this.route.snapshot.params[\"oid\"];\n\n\t\tthis.onPageChange(1);\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'IMPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\tformatAffectedRows(rows: string) {\n\t\treturn rows.replace(/,/g, \", \");\n\t}\n\n\tformatValidationResolve(obj: any) {\n\t\treturn JSON.stringify(obj);\n\t}\n\n\tonProblemResolved(problem: any): void {\n\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\tlet pageConflict = this.page.results[i];\n\n\t\t\tif (pageConflict.id === problem.id) {\n\t\t\t\tthis.page.results.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFriendlyProblemType(probType: string): string {\n\n\t\tif (probType === \"net.geoprism.registry.io.ParentCodeException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.PostalCodeLocationException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.postal.code.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.AmbiguousParentException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.multi.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.InvalidGeometryException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.invalid.geom.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.DataNotFoundException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.datanotfound\");\n\t\t}\n\n\t\tif (\n\t\t\tprobType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.permission\");\n\t\t}\n\n\t\t// if(probType === \"net.geoprism.registry.io.TermValueException\"){\n\t\t//   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n\t\t// }\n\n\t\tif (\n\t\t\tprobType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.duplicate.data.lookup\");\n\t\t}\n\n\t\treturn probType;\n\t}\n\n\n\tonEdit(problem: any): void {\n\t\t// this.router.navigate( ['/registry/master-list-history/', code] )\n\n\t\tthis.bsModalRef = this.modalService.show(JobConflictModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.problem = problem;\n\t\tthis.bsModalRef.content.job = this.job;\n\t\tthis.bsModalRef.content.onConflictAction.subscribe(data => {\n\t\t\tif (data.action === 'RESOLVED') {\n\t\t\t\tthis.onProblemResolved(data.data);\n\t\t\t}\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJob(this.historyId, this.page.pageSize, pageNumber, true).then(response => {\n\n\t\t\tthis.job = response;\n\n\t\t\tif (this.job.stage === 'IMPORT_RESOLVE') {\n\t\t\t\tthis.page = this.job.importErrors;\n\t\t\t}\n\t\t\telse if (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.page = this.job.problems;\n\n\t\t\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\t\t\tlet problem = this.page.results[i];\n\n\t\t\t\t\tif (problem.type === 'RowValidationProblem') {\n\t\t\t\t\t\tthis.hasRowValidationProblem = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonViewAllActiveJobs(): void {\n\n\t}\n\n\tonViewAllCompleteJobs(): void {\n\n\t}\n\n\ttoggleAll(): void {\n\t\tthis.allSelected = !this.allSelected;\n\n\t\tthis.job.importErrors.results.forEach(row => {\n\t\t\trow.selected = this.allSelected;\n\t\t})\n\t}\n\n\tonReuploadAndResume(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ReuploadModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.job = this.job;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string): void {\n\t\tif (this.page.results.length == 0) {\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs']);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tif (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.validationDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.validationButton\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t});\n\t\t}\n\t}\n\n\tonCancelScheduledJob(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(this.job.configuration).then(response => {\n\t\t\t\t//this.bsModalRef.hide()\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                                <strong>{{job.fileName}}</strong>\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              <span class=\"date-string-display\">\n                                    {{formatDate(job.createDate)}}\n                              </span>\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.importedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.importedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n                <div class=\"col-md-5 order-md-1\">\n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'VALIDATION_RESOLVE'\" style=\"display:block; margin: 10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.validation.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.reimport.button\"></localize>\n                    </button>\n                  </div>\n                  \n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'IMPORT_RESOLVE'\" style=\"display:block; margin:10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.import.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                    </button>\n                  </div>\n      \n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && !hasRowValidationProblem\" class=\"button-holder\" style=\"display:block; margin:10px;text-align: right;\">\n                      <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <localize *ngIf=\"job && job.stage === 'VALIDATION_RESOLVE'\" key=\"etl.import.resume.openModal\"></localize>\n                        <span *ngIf=\"job && job.stage === 'IMPORT_RESOLVE'\">\n                          <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <div *ngIf=\"hasRowValidationProblem\"class=\"button-holder\" style=\"display:block; margin:10px;\">\n                    <button type=\"submit\" (click)=\"onReuploadAndResume(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <span>\n                          <localize key=\"scheduledjobs.reupload.resume.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <!--\n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && job.stage === 'VALIDATION_RESOLVE'\" class=\"button-holder\" style=\"display:block; margin:10px;\">\n                      <button type=\"button\" (click)=\"onCancelScheduledJob(job.historyId)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"etl.import.cancel.openModal\"></localize></button>\n                  </div>\n                  -->\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr>\n\t                                <!-- <th class=\"label-column\">\n\t                                  <div class=\"check-block\">\n\t                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n\t                                     <span></span>\n\t                                   </div>\n\t                                  </div>\n\t                                </th> -->\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"scheduledjobs.import.table.problem.type.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n\t                                    \n\t                                </th>\n                                </tr>\n                            </thead>\n                            <thead *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n                              <tr>\n                                <!-- <th class=\"label-column\">\n                                  <div class=\"check-block\">\n                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n                                     <span></span>\n                                   </div>\n                                  </div>\n                                </th> -->\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.problem.type.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.label.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  \n                                </th>\n                              </tr>\n                            </thead>\n\n                            <tbody *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <!-- <tr *ngFor=\"let row of job.errors.page; let i = index;\"> -->\n                                    <!-- <td class=\"label-column\">\n                                      <boolean-field [(value)]=\"row.selected\"></boolean-field>\n                                    </td> -->\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{getFriendlyProblemType(row.exception.type)}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.exception.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                    <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n                                        <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                            <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n\n                            <tbody *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n\t                            <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n\t                             <!-- <td class=\"label-column\">\n\t                               <boolean-field [(value)]=\"row.selected\"></boolean-field>\n\t                             </td> -->\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n\t                               <p>{{row.type}}</p> \n\t                             </td>\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p *ngIf=\"row.type === 'RowValidationProblem'\">{{row.exception.message}}</p>\n                                 <p *ngIf=\"row.type === 'ParentReferenceProblem' || row.type === 'TermReferenceProblem'\">{{row.label}}</p>\n                               </td>\n                               <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p>{{formatAffectedRows(row.affectedRows)}}</p>\n                               </td>\n\t                             <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n\t                              <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                    <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n\t                              </button>\n\t                             </td>\n\t                            </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ScheduledJobOverview } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'job-conflict-modal',\n    templateUrl: './job-conflict-modal.component.html',\n    styleUrls: []\n} )\nexport class JobConflictModalComponent implements OnInit {\n    message: string = null;\n    problem: any;\n    job: ScheduledJobOverview;\n    \n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef ) {\n      this.onConflictAction = new Subject();\n    }\n\n    ngOnInit(): void {\n      \n    }\n    \n    onProblemResolvedListener(problem: any): void {\n      this.onConflictAction.next({action:\"RESOLVED\", data: problem});\n    }\n\n    onCancel(): void {\n        this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"scheduledjobs.problemdetail.modal.title\"></localize>\n        </h2>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            \n            <div *ngIf=\"problem && job && job.stage === 'IMPORT_RESOLVE'\">\n                <import-problem-widget (onProblemResolved)=\"onProblemResolvedListener(problem)\" [problem]=\"problem\" [job]=\"job\"></import-problem-widget>\n            </div>\n            <div *ngIf=\"problem && job && job.stage === 'VALIDATION_RESOLVE'\">\n              <parent-reference-problem-widget *ngIf=\"problem.type === 'ParentReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener(problem)\" [problem]=\"problem\" [job]=\"job\" ></parent-reference-problem-widget>\n              <term-reference-problem-widget *ngIf=\"problem.type === 'TermReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener(problem)\" [problem]=\"problem\" [job]=\"job\" ></term-reference-problem-widget>\n              <row-validation-problem-widget *ngIf=\"problem.type === 'RowValidationProblem'\" (onProblemResolved)=\"onProblemResolvedListener(problem)\" [problem]=\"problem\" [job]=\"job\" ></row-validation-problem-widget>\n            </div>\n            \n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize key=\"io.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ScheduledJob, ImportError } from '@registry/model/registry';\n\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'import-problem-widget',\n    templateUrl: './import-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ImportProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: ImportError;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private dateService: DateService,\n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n    }\n\n    onEditGeoObject(): void {\n        let editModal = this.modalService.show( GeoObjectEditorComponent, {\n            backdrop: true,\n            ignoreBackdropClick: true\n        } );\n\n        editModal.content.configureFromImportError(this.problem, this.job.historyId, this.job.configuration.startDate, true);\n        editModal.content.setMasterListId( null );\n        editModal.content.setOnSuccessCallback(() => {\n\n          this.onProblemResolved.emit(this.problem);\n          this.bsModalRef.hide()\n            \n        } );\n    }\n\n    getFriendlyProblemType(probType: string): string {\n\n        if(probType === \"net.geoprism.registry.io.ParentCodeException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.PostalCodeLocationException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.AmbiguousParentException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.multi.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.InvalidGeometryException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.invalid.geom.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.DataNotFoundException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.datanotfound\" );\n        }\n        \n        if(\n            probType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.permission\" );\n        }\n\n        // if(probType === \"net.geoprism.registry.io.TermValueException\"){\n        //   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        // }\n        if(\n          probType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.duplicate.data.lookup\" );\n        }\n\n        return probType;\n    }\n\n    onSubmit(): void {\n\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide();\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>:\n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row equal\" style=\"display: flex;display: -webkit-flex;flex-wrap: wrap;\">\n                <div class=\"col-md-6\" style=\"padding-right: 5px;\">\n                    <div style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;\">\n                        <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{getFriendlyProblemType(problem.exception.type)}}</p>\n\n                        <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{problem.exception.message}}</p>\n\n                        <!-- <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                        <p>TODO: how to address the issue.</p> -->\n                    </div>\n                </div>\n                <div class=\"col-md-6\" style=\"padding-left: 5px;\">\n                    <div *ngIf=\"problem.object != null && problem.object.geoObject != null\" style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;text-align: center;\">\n                        <button style=\"width: 90%;\" type=\"submit\" (click)=\"onEditGeoObject()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"scheduledjobs.editGeoObject\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'parent-reference-problem-widget',\n    templateUrl: './parent-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ParentReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private dateService: DateService,\n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.parentProblem.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p>\n                      <localize key=\"etl.parentProblem.toResolve\"></localize>\n                    </p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"etl.problem.parent.context\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <div *ngIf=\"problem.context.length > 0\" style=\"margin-top:10px;\">\n\t\t                    <ol *ngFor=\"let con of problem.context\">\n\t\t\t\t\t\t\t\t          <li>{{con.label}} ({{con.type}})</li>\n\t\t\t\t\t\t\t\t        </ol>\n\t\t\t\t\t\t\t        </div>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.parent.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"parentSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem.typeCode, problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"name\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"problem.parent == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n    selector: 'term-reference-problem-widget',\n    templateUrl: './term-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class TermReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    termId: string = null;\n    searchLabel: string;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private dateService: DateService,\n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( conflict: any ): Observable<any> {\n        return Observable.create(( observer: any ) => {\n            this.iService.getTermSuggestions( conflict.mdAttributeId, this.searchLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n    \n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        classifierId: this.termId,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div *ngIf=\"problem\" class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.problem.termReference.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.termReference.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.attributeLabel\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{problem.attributeLabel}}</span>\n                    </div>\n                  </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.termReference.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"termSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"label\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"termId == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'row-validation-problem-widget',\n    templateUrl: './row-validation-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class RowValidationProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private dateService: DateService,\n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    formatAffectedRows(rows: string)\n    {\n      return rows.replace(/,/g, \", \");\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\"><localize key=\"etl.problem.rowValidation.message\"></localize></p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.rowValidation.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{formatAffectedRows(problem.affectedRows)}}</span>\n                    </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.rowValidation.message\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.exception.message}}</span>\n\t                  </div>\n\t                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ModalTypes } from '@shared/model/modal';\nimport { LocalizationService, EventService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { ScheduledJob } from '@registry/model/registry';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'reupload-modal',\n    templateUrl: './reupload-modal.component.html',\n    styleUrls: []\n} )\nexport class ReuploadModalComponent {\n  @Input() title: string = this.localizeService.decode(\"reuploadmodal.title\");\n\n  @Input() message: string = this.localizeService.decode(\"reuploadmodal.message\");\n  \n  @Input() data: any;\n  \n  @Input() submitText: string = this.localizeService.decode(\"reuploadmodal.import\");\n  \n  @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n  \n  @Input() type: ModalTypes = ModalTypes.warning;\n  \n  @Input() job: ScheduledJob;\n  \n  @ViewChild( 'myFile' )\n  fileRef: ElementRef;\n  \n  /*\n   * File uploader\n   */\n  uploader: FileUploader;\n  \n  errorMessage: string;\n  \n  /*\n   * Called on confirm\n   */\n  public onConfirm: Subject<any>;\n  \n  constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService, private eventService: EventService ) { }\n  \n  ngOnInit(): void {\n    this.onConfirm = new Subject();\n    \n    let options: FileUploaderOptions = {\n      queueLimit: 1,\n      removeAfterUpload: true,\n      url: acp + '/etl/reimport'\n    };\n    \n    this.uploader = new FileUploader( options );\n    this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n        form.append( 'json', JSON.stringify(this.job.configuration) );\n    };\n    this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n        this.eventService.start();\n    };\n    this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n        this.fileRef.nativeElement.value = \"\";\n        this.eventService.complete();\n    };\n    this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.onConfirm.next( this.data );\n      this.bsModalRef.hide();\n    };\n    this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.error( JSON.parse( response ) );\n    }\n  }\n  \n  toString(data: any): string\n  {\n    return JSON.stringify(data);\n  }\n  \n  confirm(): void {\n    if ( this.uploader.queue != null && this.uploader.queue.length > 0 ) {\n      this.uploader.uploadAll();\n    }\n    else {\n      this.error( { message: this.localizeService.decode( 'io.missing.file' ), error: {} } );\n    }\n  }\n  \n  public error( err: any ): void {\n    this.errorMessage = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div class=\"modal-body\">\n\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">{{errorMessage}}</div>\n\n  <div class=\"heading\">\n    <h3>{{title}}</h3>\n  </div>\n\n  <div>{{message}}</div>\n\n  <form *ngIf=\"job\" style=\"margin-top: 30px;\" #form=\"ngForm\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 text-right\" for=\"file\">\n        <localize *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n        <localize *ngIf=\"job.configuration.formatType === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n      </label>\n      <div class=\"col-md-9\">\n        <input *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".zip\" required />\n        <input *ngIf=\"job.configuration.formatType === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".xlsx,.zip\" required />\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\"\n          style=\"padding: 4px 18px;\">\n          <span>{{cancelText}}</span>\n        </button>\n        <button type=\"button\" (click)=\"confirm()\"\n          [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n          aria-disabled=\"false\" style=\"padding: 4px 18px;\">\n          <span>{{submitText}}</span>\n        </button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { TaskService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { GeoObjectType, PaginationPage } from '@registry/model/registry';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'task-viewer',\n\ttemplateUrl: './task-viewer.component.html',\n\tstyleUrls: ['./task-viewer.component.css'],\n\tproviders: [DatePipe]\n})\n\nexport class TaskViewerComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tinProgressTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompletedTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tisViewAllOpen: boolean = false;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tconstructor(private taskService: TaskService, private localizeService: LocalizationService, private dateService: DateService) { }\n\n\tngOnInit(): void {\n\t\tthis.onInProgressTasksPageChange(1);\n\t}\n\n\tupper(str: string): string {\n\t\tif (str != null) {\n\t\t\treturn str.toUpperCase();\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tonInProgressTasksPageChange(pageNumber: any): void {\n\t\tthis.taskService.getMyTasks(pageNumber, this.inProgressTasks.pageSize, 'UNRESOLVED').then(page => {\n\t\t\tthis.inProgressTasks = page;\n\t\t});\n\t}\n\n\tonCompletedTasksPageChange(pageNumber: any): void {\n\n\t\tthis.taskService.getMyTasks(pageNumber, this.completedTasks.pageSize, 'RESOLVED').then(page => {\n\t\t\tthis.completedTasks = page;\n\t\t});\n\t}\n\n\tonCompleteTask(task: any): void {\n\t\t// this.isViewAllOpen = true;\n\n\t\tthis.taskService.completeTask(task.id).then(() => {\n\n\t\t\tconst index = this.inProgressTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.inProgressTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.push(task);\n\t\t\t// this.onCompletedTasksPageChange(1);\n\t\t});\n\t}\n\n\tonMoveTaskToInProgress(task: any): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.taskService.setTaskStatus(task.id, 'UNRESOLVED').then(() => {\n\n\t\t\tconst index = this.completedTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\tthis.inProgressTasks.results.push(task);\n\t\t});\n\t}\n\n\tonViewAllCompletedTasks(): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.onCompletedTasksPageChange(1);\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n    <message></message>\n\n    <h2>\n      <localize key=\"tasks.openTasksTitle\"></localize>\n    </h2>\n    <hr>\n  \n\t\t<div class=\"row\" *ngIf=\"inProgressTasks.results.length > 0\">\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\">\n\t        <div *ngFor=\"let task of inProgressTasks.results | paginate: { id: 'inProgressTasks', itemsPerPage: inProgressTasks.pageSize, currentPage: inProgressTasks.pageNumber, totalItems: inProgressTasks.count }\" class=\"panel panel-default\">\n\t          <div class=\"panel-heading\">\n\t            <h4>{{upper(task.title)}}</h4>\n\t          </div>\n\t          \n\t          <div class=\"panel-body\">\n\t            <div class=\"row\">\n\t             <div class=\"col-md-9\">\n\t              <label><localize key=\"tasks.taskMessage\"></localize></label>\n\t              <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n\t              <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                  <span class=\"date-string-display\">\n                      {{formatDate(task.createDate)}}\n                  </span>\n\t             </div>\n\t             <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" checked id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                \n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" (click)=\"onCompleteTask(task)\" type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n\t             </div>\n\t            </div>\n\t          </div>\n\t        </div>\n\t        <div *ngIf=\"inProgressTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"inProgressTasks\" (pageChange)=\"onInProgressTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n      </div>\n\t\t</div>\n\t\t\n\t\t\n\t\t<div class=\"row\">\n\t\t<h2 class=\"col-md-9\">\n      <localize key=\"tasks.completedTasksTitle\"></localize>\n    </h2>\n    <button class=\"col-md-3\" style=\"margin-top:20px;\" type=\"submit\" (click)=\"onViewAllCompletedTasks()\" class=\"btn btn-default pull-right\" role=\"button\">\n      <localize key=\"tasks.viewCompletedTasksButton\"></localize>\n    </button>\n    </div>\n    <hr>\n  \n    <div class=\"row\" >\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\" *ngIf=\"isViewAllOpen && completedTasks.results.length > 0\">\n          <div *ngFor=\"let task of completedTasks.results | paginate: { id: 'completedTasks', itemsPerPage: completedTasks.pageSize, currentPage: completedTasks.pageNumber, totalItems: completedTasks.count }\" class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h4>{{upper(task.title)}}</h4>\n            </div>\n            \n            <div class=\"panel-body\">\n              <div class=\"row\">\n               <div class=\"col-md-9\">\n                <label><localize key=\"tasks.taskMessage\"></localize></label>\n                <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                <span class=\"date-string-display\" style=\"margin-right:30px;\">\n                   {{formatDate(task.createDate)}}\n                </span>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.completeDateLabel\"></localize></label>\n                <span class=\"date-string-display\" >\n                   {{formatDate(task.completedDate)}}\n                </span>\n               </div>\n               <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" (click)=\"onMoveTaskToInProgress(task)\" id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" checked type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n               </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"completedTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"completedTasks\" (pageChange)=\"onCompletedTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n        <div class=\"content-wrapper\" *ngIf=\"completedTasks.results.length === 0 && isViewAllOpen\">\n          <p style=\"font-style:italic;color:grey;\"><localize key=\"tasks.no.completed.tasks.message\"></localize></p>\n        </div>\n      </div>\n    </div>\n\n\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { PageResult } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { SynchronizationConfig } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { SynchronizationConfigModalComponent } from './synchronization-config-modal.component';\n\n@Component({\n\tselector: 'synchronization-config-manager',\n\ttemplateUrl: './synchronization-config-manager.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigManagerComponent implements OnInit {\n\tmessage: string = null;\n\n\tpage: PageResult<SynchronizationConfig> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 20\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: SynchronizationConfigService, private lService: LocalizationService, private router: Router, private modalService: BsModalService) { }\n\n\tngOnInit(): void {\n\t\tthis.onPageChange(1);\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tthis.service.getPage(pageNumber, this.page.pageSize).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcreate(): void {\n\t\tthis.service.edit(null).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(null, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonEdit(config: SynchronizationConfig): void {\n\n\t\tthis.service.edit(config.oid).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(response.config, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonRemove(config: SynchronizationConfig): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.lService.decode(\"confirm.modal.verify.delete\") + ' [' + config.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.submitText = this.lService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(() => {\n\t\t\tthis.service.remove(config.oid).then(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tonView(config: SynchronizationConfig): void {\n\t\tthis.router.navigate(['/registry/synchronization-config/', config.oid])\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div class=\"heading\">\n      <h2>\n        <localize key=\"synchronization.config.manager\"></localize>\n      </h2>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12 order-md-1\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th style=\"width: 70%;\"><localize key=\"synchronization.config.label\"></localize></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let config of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"clickable\">\n              <td style=\"width: 70%; vertical-align: middle;\">\n                <a [routerLink]=\"'/registry/synchronization-config/' + config.oid\" routerLinkActive=\"active\"> {{config.label.localizedValue}} </a>\n              </td>\n              <td style=\"width: 30%; text-align: right;\">\n                <button type=\"submit\" (click)=\"onView(config)\" class=\"btn btn-primary\" role=\"button\">\n                  <localize key=\"modal.button.view\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onEdit(config)\" class=\"btn btn-default\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.edit\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onRemove(config)\" class=\"btn btn-danger\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.delete\"></localize>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n\n        <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n          <div class=\"col-md-6\">\n            <button type=\"submit\" (click)=\"create()\" class=\"btn btn-primary\" role=\"button\">\n              <localize key=\"hierarchy.management.button.create\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { SynchronizationConfig, OrgSyncInfo, GeoObjectType } from '@registry/model/registry';\nimport { SynchronizationConfigService, RegistryService } from '@registry/service';\nimport { AttributeConfigInfo, DHIS2AttributeMapping, SyncLevel } from '@registry/model/sync';\n\nlet DEFAULT_MAPPING_STRATEGY = \"net.geoprism.registry.etl.DHIS2AttributeMapping\";\n\nexport interface LevelRow {\n  isAttributeEditor: boolean;\n\n  level?: SyncLevel;\n  levelNum?: number;\n\n  attrCfg?: GOTAttributeConfig;\n}\nexport interface GOTAttributeConfig {\n  geoObjectTypeCode?: string;\n  mappings: DHIS2AttributeMapping[];\n  attrConfigInfos: AttributeConfigInfo[];\n}\n\n@Component({\n  selector: 'synchronization-config-modal',\n  templateUrl: './synchronization-config-modal.component.html',\n  styleUrls: []\n})\nexport class SynchronizationConfigModalComponent implements OnInit {\n  message: string = null;\n\n  @ViewChild('form') form;\n\n  config: SynchronizationConfig = {\n    organization: null,\n    system: null,\n    hierarchy: null,\n    label: this.lService.create(),\n    configuration: {}\n  };\n\n  organizations: OrgSyncInfo[] = [];\n\n  cOrg: OrgSyncInfo = null;\n  cSystem: { label: string, oid: string, type: string } = null;\n\n  types: GeoObjectType[] = [];\n\n  levelRows: LevelRow[] = [];\n  \n  orgUnitGroups: any[] = [];\n\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n  onSuccess: Subject<SynchronizationConfig>;\n\n\n  constructor(private service: SynchronizationConfigService, private registryService: RegistryService, private lService: LocalizationService, private bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n    this.onSuccess = new Subject();\n  }\n\n  init(config: SynchronizationConfig, organizations: OrgSyncInfo[]): void {\n\n    this.organizations = organizations;\n\n    if (config != null) {\n      this.config = config;\n\n      let oIndex = this.organizations.findIndex(org => org.code === this.config.organization);\n\n      if (oIndex !== -1) {\n        this.cOrg = this.organizations[oIndex];\n      }\n\n      let sIndex = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n      if (sIndex !== -1) {\n        this.cSystem = this.cOrg.systems[sIndex];\n      }\n\n      if (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n        // Get the types  \n        //this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n        //  this.types = types;\n        //});\n        \n        this.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n          this.types = esConfig.types;\n          this.orgUnitGroups = esConfig.orgUnitGroups;\n        }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n        });\n\n      }\n\n      this.levelRows = [];\n      for (var i = 0; i < this.config.configuration.levels.length; ++i) {\n        var level = this.config.configuration.levels[i];\n\n        var levelRow: LevelRow = { level: level, levelNum: i, isAttributeEditor: false };\n\n        this.levelRows.push(levelRow);\n      }\n    }\n  }\n  \n  buildDefaultMappings(): DHIS2AttributeMapping[] {\n    return [\n      {\n        \"attributeMappingStrategy\": DEFAULT_MAPPING_STRATEGY,\n        \"isOrgUnitGroup\": false,\n        \"cgrAttrName\": \"displayLabel\",\n        \"externalId\": null,\n        \"dhis2Id\": \"name\",\n        \"dhis2AttrName\": \"name\"\n      },\n      {\n        \"attributeMappingStrategy\": DEFAULT_MAPPING_STRATEGY,\n        \"isOrgUnitGroup\": false,\n        \"cgrAttrName\": \"displayLabel\",\n        \"externalId\": null,\n        \"dhis2Id\": \"shortName\",\n        \"dhis2AttrName\": \"shortName\"\n      },\n      {\n        \"attributeMappingStrategy\": DEFAULT_MAPPING_STRATEGY,\n        \"isOrgUnitGroup\": false,\n        \"cgrAttrName\": \"code\",\n        \"dhis2Id\": \"code\",\n        \"externalId\": null,\n        \"dhis2AttrName\": \"code\"\n      },\n      {\n        \"attributeMappingStrategy\": DEFAULT_MAPPING_STRATEGY,\n        \"isOrgUnitGroup\": false,\n        \"cgrAttrName\": \"createDate\",\n        \"externalId\": null,\n        \"dhis2Id\": \"openingDate\",\n        \"dhis2AttrName\": \"openingDate\"\n      }\n      /*\n      {\n        \"attributeMappingStrategy\": DEFAULT_MAPPING_STRATEGY,\n        \"isOrgUnitGroup\": false,\n        \"cgrAttrName\": \"createDate\",\n        \"externalId\": null,\n        \"dhis2Id\": \"created\",\n        \"dhis2AttrName\": \"created\"\n      },\n      {\n        \"attributeMappingStrategy\": DEFAULT_MAPPING_STRATEGY,\n        \"isOrgUnitGroup\": false,\n        \"cgrAttrName\": \"lastUpdateDate\",\n        \"externalId\": null,\n        \"dhis2Id\": \"lastUpdated\",\n        \"dhis2AttrName\": \"lastUpdated\"\n      },\n      */\n    ];\n  }\n  \n  clearMappingData(): void {\n    this.types = [];\n    this.levelRows = [];\n    this.config.configuration['levels'] = [];\n    \n    if (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n      this.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n        this.types = esConfig.types;\n        this.orgUnitGroups = esConfig.orgUnitGroups;\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n      var lvl = {\n        type: null,\n        geoObjectType: null,\n        level: 0,\n        mappings: [],\n        orgUnitGroupId: null\n      };\n      this.config.configuration['levels'] = [lvl];\n      this.levelRows.push({ level: lvl, levelNum: 0,  isAttributeEditor: false });\n    }\n  }\n  \n  onSelectLevelType(levelRow: LevelRow): void {\n    if (levelRow.level.type == \"RELATIONSHIPS\")\n    {\n      levelRow.attrCfg.mappings = [];\n      levelRow.level.mappings = [];\n      \n      let editorIndex = this.getEditorIndex();\n      if (editorIndex != -1) {\n        this.levelRows.splice(editorIndex, 1);\n      }\n    }\n    else\n    {\n      if (levelRow.attrCfg.mappings.length == 0)\n      {\n        levelRow.attrCfg.mappings = this.buildDefaultMappings();\n        levelRow.level.mappings = levelRow.attrCfg.mappings;\n        \n        let len = levelRow.level.mappings.length;\n        for (let i = 0; i < len; ++i)\n        {\n          let mapping = levelRow.level.mappings[i];\n          \n          levelRow.attrCfg.attrConfigInfos.forEach( (info) => {\n            if (info.cgrAttr.name === mapping.cgrAttrName)\n            {\n              mapping.info = info;\n            }\n          });\n        }\n      }\n    }\n  }\n\n  onOrganizationSelected(): void {\n    let index = this.organizations.findIndex(org => org.code === this.config.organization);\n\n    if (index !== -1) {\n      this.cOrg = this.organizations[index];\n    }\n    else {\n      this.cOrg = null;\n      this.cSystem = null;\n    }\n    \n    this.clearMappingData();\n  }\n  \n  deleteMapping(levelRow: LevelRow, index: number): void {\n    levelRow.attrCfg.mappings.splice(index, 1);\n  }\n  \n  addNewMapping(levelRow: LevelRow): void {\n    levelRow.attrCfg.mappings.push({\n      attributeMappingStrategy: DEFAULT_MAPPING_STRATEGY,\n      cgrAttrName: null,\n      dhis2AttrName: null,\n      externalId: null,\n      terms: []\n    });\n  }\n\n  onChangeExternalSystem(): void {\n    let index = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n    if (index !== -1) {\n      this.cSystem = this.cOrg.systems[index];\n    }\n    else {\n      this.cSystem = null;\n    }\n    \n    this.clearMappingData();\n  }\n  \n  onChangeHierarchy(): void {\n    this.clearMappingData();\n  }\n\n  addLevel(): void {\n    var lvl = {\n      type: null,\n      geoObjectType: null,\n      level: this.config.configuration.levels.length,\n      mappings: [],\n      orgUnitGroupId: null\n    };\n    var len = this.config.configuration['levels'].push(lvl);\n    this.levelRows.push({ level: lvl, levelNum: len - 1, isAttributeEditor: false });\n  }\n\n  removeLevel(levelNum: number, levelRowIndex: number): void {\n    if (levelNum < this.config.configuration['levels'].length) {\n      var editorIndex = this.getEditorIndex();\n      if (editorIndex === levelRowIndex + 1) {\n        this.levelRows.splice(editorIndex, 1);\n      }\n\n      this.levelRows.splice(levelRowIndex, 1);\n\n      var newLevelNum = 0;\n      for (var i = 0; i < this.levelRows.length; ++i) {\n        var levelRow: LevelRow = this.levelRows[i];\n\n        levelRow.levelNum = newLevelNum;\n\n        if (!levelRow.isAttributeEditor) {\n          newLevelNum = newLevelNum + 1;\n        }\n      }\n\n      this.config.configuration['levels'].splice(levelNum, 1);\n    }\n  }\n\n  getEditorIndex(): number {\n    for (var i = 0; i < this.levelRows.length; ++i) {\n      var levelRow = this.levelRows[i];\n\n      if (levelRow.isAttributeEditor) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  configureAttributes(levelRow: any): void {\n    var editorIndex = this.getEditorIndex();\n\n    if (editorIndex != -1) {\n      this.levelRows.splice(editorIndex, 1);\n\n      if (editorIndex == levelRow.levelNum + 1) {\n        return;\n      }\n    }\n\n    this.onSelectGeoObjectType(levelRow.level.geoObjectType, levelRow.levelNum, false);\n  }\n\n  getTermOptions(info: AttributeConfigInfo, dhis2Id: string) {\n    for (var i = 0; i < info.dhis2Attrs.length; ++i) {\n      var dhis2Attr = info.dhis2Attrs[i];\n\n      if (dhis2Attr.dhis2Id === dhis2Id) {\n        return dhis2Attr.options;\n      }\n    }\n  }\n\n  onChangeDHIS2Attr(mapping: DHIS2AttributeMapping) {\n    if (mapping.dhis2Id == null || mapping.dhis2Id === \"\") {\n      if (mapping.terms != null) {\n        mapping.terms = {};\n      }\n      \n      mapping.dhis2AttrName = null;\n\n      return;\n    }\n\n    mapping.terms = {};\n    \n    let len = mapping.info.dhis2Attrs.length;\n    for (let i = 0; i < len; ++i)\n    {\n      if (mapping.info.dhis2Attrs[i].dhis2Id === mapping.dhis2Id)\n      {\n        if (mapping.info.dhis2Attrs[i].dhis2Id != mapping.info.dhis2Attrs[i].name)\n        {\n          mapping.externalId = mapping.info.dhis2Attrs[i].dhis2Id;\n        }\n        else\n        {\n          mapping.externalId = null;\n        }\n        mapping.dhis2AttrName = mapping.info.dhis2Attrs[i].name;\n      }\n    }\n  }\n\n  onSelectGeoObjectType(geoObjectTypeCode: string, levelRowIndex: number, isDifferentGot: boolean = true) {\n    if (geoObjectTypeCode === \"\" || geoObjectTypeCode == null) {\n      var levelRow: LevelRow = this.levelRows[levelRowIndex];\n\n      levelRow.attrCfg = null;\n      levelRow.level.mappings = [];\n\n      var editorIndex = this.getEditorIndex();\n\n      if (editorIndex != -1 && editorIndex === levelRowIndex + 1) {\n        this.levelRows.splice(editorIndex, 1);\n      }\n\n      return;\n    }\n\n    var attrCfg = this.levelRows[levelRowIndex].attrCfg;\n    if (attrCfg != null && attrCfg.geoObjectTypeCode === geoObjectTypeCode) {\n      // Resume an editing session on attributes that we fetched previously\n\n      var editorIndex = this.getEditorIndex();\n\n      if (editorIndex != -1 && editorIndex !== levelRowIndex + 1) {\n        this.levelRows.splice(editorIndex, 1);\n\n        if (editorIndex < levelRowIndex) {\n          levelRowIndex = levelRowIndex - 1;\n        }\n      }\n\n      this.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: attrCfg });\n    }\n    else {\n      this.service.getCustomAttrCfg(geoObjectTypeCode, this.config.system).then((infos: AttributeConfigInfo[]) => {\n        var editorIndex = this.getEditorIndex();\n        var levelRow: LevelRow = this.levelRows[levelRowIndex];\n        var level = levelRow.level;\n\n        if (level.mappings.length == 0 || isDifferentGot)\n        {\n          level.mappings = this.buildDefaultMappings();\n        }\n\n        let len = level.mappings.length;\n        for (let i = 0; i < len; ++i)\n        {\n          let mapping = level.mappings[i];\n          \n          infos.forEach( (info) => {\n            if (info.cgrAttr.name === mapping.cgrAttrName)\n            {\n              mapping.info = info;\n            }\n          });\n        }\n        \n        levelRow.attrCfg = { geoObjectTypeCode: geoObjectTypeCode, mappings: level.mappings, attrConfigInfos: infos };\n\n        if (editorIndex != -1 && (editorIndex === levelRowIndex + 1 || infos.length > 0)) {\n          this.levelRows.splice(editorIndex, 1);\n\n          if (editorIndex < levelRowIndex) {\n            levelRowIndex = levelRowIndex - 1;\n          }\n        }\n\n        if (!isDifferentGot)\n        {\n          this.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: levelRow.attrCfg, level: levelRow.level, levelNum: levelRow.levelNum });\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n    }\n  }\n  \n  mapCgrAttr(info: AttributeConfigInfo, mapping: DHIS2AttributeMapping)\n  {\n    if (info == null)\n    {\n      mapping.cgrAttrName = null;\n      mapping.info = null;\n      mapping.dhis2AttrName = null;\n      mapping.externalId = null;\n      mapping.terms = null;\n      mapping.isOrgUnitGroup = null;\n      return;\n    }\n  \n    mapping.cgrAttrName = info.cgrAttr.name;\n    mapping.info = info;\n    mapping.dhis2AttrName = null;\n    mapping.externalId = null;\n    mapping.terms = {};\n    mapping.isOrgUnitGroup = false;\n    mapping.attributeMappingStrategy = info.attributeMappingStrategies[0];\n  }\n  \n  onChangeTargetType(mapping: DHIS2AttributeMapping): void {\n    mapping.externalId = null;\n    \n    for (const key in mapping.terms) {\n      if (mapping.terms.hasOwnProperty(key)) {\n        mapping.terms[key] = null;\n      }\n    }\n  }\n\n  onSubmit(): void {\n    /*\n    let levelIndex = 0;\n    let len = this.levelRows.length;\n    for (let i = 0; i < len; ++i)\n    {\n      let levelRow: LevelRow = this.levelRows[i];\n      \n      if (levelRow.isAttributeEditor)\n      {\n        continue;\n      }\n      else if (levelRow.attrCfg == null)\n      {\n        levelIndex++;\n        continue;\n      }\n      \n      let mappings = this.config.configuration.levels[levelIndex].mappings;\n      let mappingsLen = levelRow.attrCfg.mappings.length;\n      for (let j = 0; j < mappingsLen; ++j)\n      {\n        let mapping = JSON.parse(JSON.stringify(levelRow.attrCfg.mappings[j]));\n        delete mapping.info;\n        mappings.push(mapping);\n      }\n      \n      levelIndex++;\n    }\n    */\n  \n    this.service.apply(this.config).then(cfg => {\n\n      this.onSuccess.next(cfg);\n      this.bsModalRef.hide();\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  cancel(): void {\n\n    if (this.config.oid != null) {\n      this.service.unlock(this.config.oid).then(() => {\n        this.bsModalRef.hide();\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n    }\n    else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  error(err: HttpErrorResponse): void {\n    this.message = ErrorHandler.getMessageFromError(err);\n  }\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"synchronization.config.title\"></localize>\n    </h2>\n  </div>\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n\n    <fieldset>\n      <div class=\"row-holder\" *ngFor=\"let localeValue of config.label.localeValues\">\n        <div class=\"label-holder\">\n          <label> <localize key=\"synchronization.config.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n          </label>\n        </div>\n        <div class=\"holder\">\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.organization\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.organization\" name=\"organization\" (change)='onOrganizationSelected()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n      <div *ngIf=\"cOrg != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.hierarchy\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.hierarchy\" name=\"hierarchy\" (change)='onChangeHierarchy()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of cOrg.hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"config.hierarchy != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.system\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.system\" name=\"system\" (change)='onChangeExternalSystem()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let system of cOrg.systems\" [value]=\"system.oid\">{{system.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"row-holder\" *ngIf=\"cSystem != null && cSystem.type === 'DHIS2ExternalSystem'\">\n\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.units\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"list-table-wrapper\">\n            <table id=\"manage-systems-table\" class=\"list-table table table-bordered\">\n              <thead>\n                <tr>\n                  <th style=\"width:3%\">\n                    <localize key=\"settings.external.synchronization.level.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                  </th>\n                  <th style=\"width:17%\">\n                    <localize key=\"synchronization.config.orgUnitGroup\"></localize>\n                  </th>\n                  <th style=\"width:25%; text-align: center;\">\n                    <localize key=\"settings.external.synchronization.actions.label\"></localize>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let levelRow of levelRows; let i = index;\" [style.background-color]=\"levelRow.isAttributeEditor === false ? '#F7F7F7' : ''\">\n                  <td style=\"width:3%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <label style=\"padding: 10px 0; margin: 0;\"><localize key=\"sync.level.label\"></localize> {{levelRow.levelNum + 1}}</label>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.geoObjectType\" (change)=\"onSelectGeoObjectType(levelRow.level.geoObjectType, i)\" [name]=\"'geoObjectType' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label.localizedValue}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" (change)=\"onSelectLevelType(levelRow)\" [(ngModel)]=\"levelRow.level.type\" [name]=\"'type' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option value=\"ORG_UNITS\"><localize key=\"synchronization.config.units\"></localize></option>\n                      <option value=\"RELATIONSHIPS\"><localize key=\"synchronization.config.relationships\"></localize></option>\n                      <option value=\"ALL\"><localize key=\"synchronization.config.all\"></localize></option>\n                    </select>\n                  </td>\n                  <td style=\"width:17%\" *ngIf=\"levelRow.isAttributeEditor === false && orgUnitGroups.length > 0\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.orgUnitGroupId\" [name]=\"'group' + levelRow.levelNum\">\n                      <option></option>\n                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <a style=\"padding: 10px;\" (click)=\"removeLevel(levelRow.levelNum, i)\" [title]=\"'button.delete.helptext' | localize\">\n\t\t\t\t\t\t\t\t\t      <i class=\"fa fa-trash-o ico-remove\"></i>\n\t\t\t\t\t\t\t\t\t      <label style=\"cursor:pointer; margin-left:9px;\"><localize key=\"sync.level.delete\"></localize></label>\n\t\t\t\t\t\t\t\t\t    </a> \n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n                      <a *ngIf=\"levelRow.level.geoObjectType && (levelRow.level.type === 'ORG_UNITS' || levelRow.level.type === 'ALL')\" style=\"padding: 10px;\" (click)=\"configureAttributes(levelRow)\" [title]=\"'sync.attr.configureAttributes.helptext' | localize\">\n                        <icon class=\"fa fa-edit\"></icon>\n                        <label style=\"cursor:pointer; margin-left:3px;\"><localize key=\"sync.attr.attributes.editButton\"></localize></label>\n                      </a> \n                    </div>\n\t\t\t\t\t\t\t\t\t</td>\n                  <td colspan=\"5\" *ngIf=\"levelRow.isAttributeEditor === true\">\n                    <h4><localize key=\"sync.attr.attributes.title\"></localize></h4>\n\t                  <table class=\"table table-bordered table-striped\" style=\"margin-left:80px; width: calc(100% - 80px)\">\n\n\t                    <colgroup>\n\t\t\t\t\t\t\t\t\t        <col width=\"5%\">\n\t\t\t\t\t\t\t\t\t        <col width=\"95%\">\n\t\t\t\t\t\t\t\t\t    </colgroup>\n\t                    <tbody>\n\t                      <tr *ngFor=\"let mapping of levelRow.attrCfg.mappings; let mappingIndex = index;\">\n\t                        <td colspan=\"2\" class=\"row-holder\">\n\t                          <table style=\"width:80%; margin-top:15px; margin-bottom: 10px;\">\n\t                            <thead>\n\t                              <tr>\n\t                                <th style=\"width:5%\"></th>\n\t                                <th style=\"width:23%\">\n\t                                  <label><localize key=\"sync.attr.sourceAttribute\"></localize></label>\n\t                                </th>\n\t                                <th style=\"width:23%\">\n                                    <label><localize key=\"sync.attr.type\"></localize></label>\n                                  </th>\n                                  <th style=\"width:23%\">\n                                    <label *ngIf=\"mapping.info && mapping.info.cgrAttr.type === 'term'\"><localize key=\"sync.attr.targetTypeHeader\"></localize></label>\n                                  </th>\n                                  <th style=\"width:23%\">\n                                    <label *ngIf=\"mapping.info\">\n                                      <localize *ngIf=\"!mapping.isOrgUnitGroup\" key=\"sync.attr.targetAttribute\"></localize>\n                                    </label>\n                                  </th>\n\t                              </tr>\n\t                            </thead>\n\t                            <tbody>\n\t                              <tr>\n\t                                <td style=\"width:5%\">\n\t                                  <icon (click)=\"deleteMapping(levelRow, mappingIndex)\" class=\"fa fa-times\"></icon>\n\t                                </td>\n\t                                <td style=\"width:23%\">\n\t                                  <select style=\"width:95%\" [(ngModel)]=\"mapping.cgrAttrName\" (change)=\"mapCgrAttr($event.target.selectedIndex == 0 ? null : levelRow.attrCfg.attrConfigInfos[$event.target.selectedIndex-1], mapping)\" [name]=\"'sourceAttrSelect' + i + '-' + mappingIndex + (mapping.cgrAttrName ? mapping.cgrAttrName : '')\">\n\t\t\t\t\t                            <option [ngValue]=\"null\"></option>\n\t\t\t\t\t                            <option *ngFor=\"let info of levelRow.attrCfg.attrConfigInfos\" [ngValue]=\"info.cgrAttr.name\">\n\t\t\t\t\t                              <label style=\"color:#999;\">{{info.cgrAttr.label}}</label>\n\t\t\t\t\t                            </option>\n\t\t\t\t\t                          </select>\n\t                                </td>\n\t                                <td style=\"width:23%\">\n\t                                  <label *ngIf=\"mapping.info\" style=\"color:#999;\">{{mapping.info.cgrAttr.typeLabel}}</label>\n\t                                </td>\n\t                                <td *ngIf=\"mapping.info && mapping.info.cgrAttr.type === 'term'\" style=\"margin-right:20px; width:23%\">\n\t                                  <select style=\"width:95%\" *ngIf=\"mapping.info.cgrAttr.type === 'term'\" [(ngModel)]=\"mapping.isOrgUnitGroup\" (change)=\"onChangeTargetType(mapping)\" [name]=\"'isOrgUnitGroup' + i + mapping.info.cgrAttr.name\">\n                                      <option [ngValue]=\"false\"><localize key=\"sync.attr.targetTypeOptionSet\"></localize></option>\n                                      <option [ngValue]=\"true\"><localize key=\"sync.attr.targetTypeOrgUnitGroup\"></localize></option>\n                                    </select>\n\t                                </td>\n\t                                <td *ngIf=\"mapping.info && mapping.info.cgrAttr.type !== 'term' && mapping.info.cgrAttr.name\" style=\"float:right; margin-right:20px; width:23%\">\n\t                                  <label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label>\n\t                                </td>\n\t                                <td style=\"width:23%\" *ngIf=\"mapping.info\">\n\t                                  <select *ngIf=\"mapping.info.dhis2Attrs.length > 0 && !mapping.isOrgUnitGroup\" [(ngModel)]=\"mapping.dhis2Id\" [ngModelOptions]=\"{standalone: true}\" (change)=\"onChangeDHIS2Attr(mapping)\">\n\t                                    <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                    <option [ngValue]=\"dhis2Attr.dhis2Id\" *ngFor=\"let dhis2Attr of mapping.info.dhis2Attrs\">\n\t                                      {{dhis2Attr.name}}\n\t                                    </option>\n\t                                  </select>\n\t                                  <label *ngIf=\"mapping.info.dhis2Attrs.length == 0 && !mapping.isOrgUnitGroup\" style=\"color:#999;\"><localize key=\"sync.noValid\"></localize></label>\n\t                                </td>\n\t                              </tr>\n\t                            </tbody>\n\t                          </table>\n\t                          <div *ngIf=\"mapping.info && ((mapping.externalId != null && mapping.externalId.length > 0) || mapping.isOrgUnitGroup)\">\n\t\t                          <table *ngFor=\"let term of mapping.info.terms\" class=\"row\" style=\"width:80%; margin-left:80px;\">\n\t                              <thead>\n\t                                <tr>\n\t                                  <th style=\"width:25%\">\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label><localize key=\"sync.attr.term.cgrTerm\"></localize></label>\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <!-- To -->\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label>\n\t                                      <localize *ngIf=\"!mapping.isOrgUnitGroup\" key=\"sync.attr.term.dhis2Option\"></localize>\n\t                                      <localize *ngIf=\"mapping.isOrgUnitGroup\" key=\"sync.attr.term.targetOrgUnitGroup\"></localize>\n\t                                    </label>\n\t                                  </th>\n\t                                </tr>\n\t                              </thead>\n\t                              <tbody>\n\t                                <tr>\n\t                                  <td></td>\n\t                                  <td><label style=\"color:#999;\">{{term.label}}</label></td>\n\t                                  <td style=\"float:right; margin-right:20px;\"><label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label></td>\n\t                                  <td>\n\t                                    <select *ngIf=\"!mapping.isOrgUnitGroup\" [(ngModel)]=\"mapping.terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t                                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                      <option *ngFor=\"let option of getTermOptions(mapping.info, mapping.externalId)\" [value]=\"option.code\">\n\t                                        {{option.name}}\n\t                                      </option>\n\t                                    </select>\n\t                                    <select *ngIf=\"mapping.isOrgUnitGroup\" type=\"text\" [(ngModel)]=\"mapping.terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t\t\t\t                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t\t\t\t\t\t\t\t\t                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n\t\t\t\t\t\t\t\t\t                    </select>\n\t                                  </td>\n\t                                </tr>\n\t                              </tbody>\n\t                            </table>\n                            </div>\n\t                        </td>\n\t                      </tr>\n\t                      <tr>\n                          <td class=\"button-column\">\n                            <a class=\"fa fa-plus\" (click)=\"addNewMapping(levelRow)\" [title]=\"'sync.attr.attributes.add.tooltip' | localize\"></a>\n                          </td>\n                        </tr>\n\t                    </tbody>\n\t                  </table>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"button-column\">\n                    <a class=\"fa fa-plus\" [title]=\"'sync.levels.add.tooltip' | localize\" (click)=\"addLevel()\"></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          \n          </div>\n      </div>\n\n\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\"></div>\n        <div class=\"holder\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\n\nimport { SynchronizationConfig, ExportScheduledJob } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component/error-handler/error-handler';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'synchronization-config',\n\ttemplateUrl: './synchronization-config.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigComponent implements OnInit {\n\tmessage: string = null;\n\n\tconfig: SynchronizationConfig = null;\n\n\tpage: PageResult<ExportScheduledJob> = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresultSet: []\n\t};\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tconstructor(private service: SynchronizationConfigService, private lService: LocalizationService, private route: ActivatedRoute) { }\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tthis.service.get(oid).then(config => {\n\t\t\tthis.config = config;\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'DATA_EXPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\n\t\tif (this.notifier != null) {\n\t\t\tthis.notifier.complete();\n\t\t}\n\t}\n\n\tonRun(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.run(this.config.oid).then(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.config != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getJobs(this.config.oid, pageNumber, this.page.pageSize).then(response => {\n\n\t\t\t\tthis.formatStepConfig(response);\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tformatJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PageResult<ExportScheduledJob>): void {\n\n\t\tpage.resultSet.forEach((job: ExportScheduledJob) => {\n\n\t\t\tjob.stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Queued\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Connecting\"),\n\t\t\t\t\t\t\"status\": job.stage === \"CONNECTING\" || job.stage === \"CONNECTION_FAILED\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"CONNECTION_FAILED\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.DatabaseExport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"EXPORT\" || job.stage === \"EXPORT_RESOLVE\" || job.stage === \"RESUME_EXPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"CONNECTING\", \"CONNECTION_FAILED\", \"EXPORT\", \"EXPORT_RESOLVE\", \"RESUME_EXPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\" || job.status === \"FAILURE\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"row\">\n      <div *ngIf=\"config != null\" class=\"col-md-12\">\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h3>{{config.label.localizedValue}}</h3>\n          </div>\n        </div>\n\n        <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <label style=\"vertical-align: middle;\">CGR</label> \n              <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" style=\"font-size: 23px;padding: 0 7px;vertical-align: middle; color: #bdbdbd;margin-bottom: 4px;\"></i> \n              <label style=\"vertical-align: middle;\">{{config.systemLabel}}</label>\n            </div>\n            <div class=\"col-md-4\">\n              <form #myForm=\"ngForm\">\n                <div class=\"form-group text-right\" style=\"margin: 0;\">\n                  <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onRun()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" [title]=\"'synchronization.config.run' | localize\">\n                    <localize key=\"synchronization.config.run\"></localize>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div class=\"row\" *ngIf=\"config != null && config.type === 'DHIS2ExternalSystem'\">\n            <div class=\"col-md-12\">\n\n                <h4>\n                    <localize key=\"synchronization.config.units\"></localize>\n                </h4>\n                <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <localize key=\"settings.external.synchronization.level.label\"></localize>\n                        </th>\n                        <th>\n                          <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                        </th>\n                        <th style=\"text-align: right;\">\n                          <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let level of this.config.configuration['levels']; let i = index;\" >\n                        <td style=\"vertical-align: middle;\">\n                          <localize key=\"settings.external.synchronization.level.label\"></localize> {{i + 1}}\n                        </td>\n                        <td style=\"\">\n                          {{level.geoObjectType}}\n                        </td>\n                        <td style=\"text-align: right;\">\n                          <localize *ngIf=\"level.type === 'ORG_UNITS'\" key=\"synchronization.config.units\"></localize>\n                          <localize *ngIf=\"level.type === 'RELATIONSHIPS'\" key=\"synchronization.config.relationships\"></localize>\n                          <localize *ngIf=\"level.type === 'ALL'\" key=\"synchronization.config.all\"></localize>\n                        </td>\n                      </tr>\n                    </tbody>\n                </table>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n              <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                  <table class=\"table table-striped\">\n                    <thead>\n                      <tr style=\"height: 56px;\">\n                        <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                      <tr *ngFor=\"let job of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                        <td style=\"vertical-align: middle;\">\n                          <div class=\"wrapper\">\n                            <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                            <p style=\"padding-left: 60px;\">\n                              <span style=\"display: block;\"> {{job.fileName}} </span>\n                              <span style=\"display: block;\"> {{job.createDate}} </span>\n                              <span style=\"display: block;\"> {{formatJobStatus(job)}} </span>\n                              <span *ngIf=\"job.exception != null && job.exception.type != 'java.lang.RuntimeException'\" style=\"display: block;\">\n                                {{job.exception.message}}\n                              </span>\n                            </p>\n\n                            <step-indicator *ngIf=\"job.status !== 'SUCCESS' && job.status !== 'FAILURE' && job.status !== 'CANCELED'\" [steps]=\"job.stepConfig\"></step-indicator>\n\n                          </div>\n                        </td>\n                        <td style=\"text-align: right; vertical-align: middle;\">\n                          <div class=\"button-holder\" style=\"float: right;\">\n                            <a *ngIf=\"job.status === 'FAILURE'\" [routerLink]=\"'/registry/sync/details/' + job.historyId\" routerLinkActive=\"active\">\n                              <button class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"scheduledjobs.detail.button\"></localize>\n                              </button>\n                            </a>\n                           </div>\n                         </td>\n                      </tr>\n\n                    </tbody>\n                  </table>\n                  <div *ngIf=\"page.resultSet.length > 0\" class=\"solid-table-footer\">\n                    <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\n@Component({\n  selector: 'job',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.css']\n})\nexport class SyncDetailsComponent implements OnInit {\n  message: string = null;\n  job: ScheduledJob;\n  historyId: string = \"\";\n\n  page: any = {\n    count: 0,\n    pageNumber: 1,\n    pageSize: 10,\n    results: []\n  };\n\n  isAdmin: boolean;\n  isMaintainer: boolean;\n  isContributor: boolean;\n\n  constructor(public service: RegistryService, private route: ActivatedRoute, authService: AuthService, public ioService: IOService) {\n    this.isAdmin = authService.isAdmin();\n    this.isMaintainer = this.isAdmin || authService.isMaintainer();\n    this.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n  }\n\n  ngOnInit(): void {\n\n    this.historyId = this.route.snapshot.params[\"oid\"];\n\n    this.onPageChange(1);\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  formatAffectedRows(rows: string) {\n    return rows.replace(/,/g, \", \");\n  }\n\n  formatValidationResolve(obj: any) {\n    return JSON.stringify(obj);\n  }\n\n  onPageChange(pageNumber: any): void {\n\n    this.message = null;\n\n    this.service.getExportDetails(this.historyId, this.page.pageSize, pageNumber).then(response => {\n\n      this.job = response;\n      \n      this.page = this.job.exportErrors;\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n  error(err: HttpErrorResponse): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              {{job.createDate}}\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.exportedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.exportedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead>\n                                <tr>\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"geoObject.label\"></localize>&nbsp;<localize key=\"geoObjectType.attr.code\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.code}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Map, LngLatBoundsLike, NavigationControl, MapboxEvent, AttributionControl, IControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AllGeoJSON } from '@turf/helpers'\nimport bbox from '@turf/bbox';\n\nimport { Subject } from 'rxjs';\n\nimport { GeoObject, ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { ModalState } from '@registry/model/location-manager';\n\nimport { MapService, RegistryService } from '@registry/service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, ErrorModalComponent, ConfirmModalComponent, SuccessModalComponent } from '@shared/component';\n\nimport { LocalizationService } from '@shared/service';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n  selector: 'location-manager',\n  templateUrl: './location-manager.component.html',\n  styleUrls: ['./location-manager.css']\n})\nexport class LocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  MODE: ModalState = {\n    SEARCH: 0,\n    VIEW: 1,\n  }\n\n  urlSubscriber: any;\n\n  editSessionEnabled: boolean = false;\n\n  bsModalRef: BsModalRef;\n\n    /* \n     * Root nodes of the tree\n     */\n  data: GeoObject[] = [];\n\n    /* \n     *  Search Text\n     */\n  text: string = '';\n\n    /* \n     *  MODE\n     */\n  mode: number = this.MODE.SEARCH;\n\n    /*\n     * Date of data for explorer\n     */\n  dateStr: string = null;\n\n  forDate: Date = null;\n\n\n    /* \n     * Currently selected geo object\n     */\n  current: GeoObject;\n\n    /* \n     * Currently selected geo object type\n     */\n  type: GeoObjectType;\n\n    /* \n     * Flag denoting if an object is currently being editted\n     */\n  isEdit: boolean = false;\n\n    /* \n     * mapbox-gl map\n     */\n  map: Map;\n\n    /* \n     * Flag denoting the draw control is active\n     */\n  active: boolean = false;\n  \n  public displayDateRequiredError: boolean = false;\n\n  vectorLayers: string[] = [];\n  \n  backReference: string;\n\n    /* \n     * List of base layers\n     */\n  baseLayers: any[] = [\n    {\n      name: 'Satellite',\n      label: 'Satellite',\n      id: 'satellite-v9',\n      sprite: 'mapbox://sprites/mapbox/satellite-v9',\n      url: 'mapbox://mapbox.satellite',\n      selected: true\n    },\n    // {\n    //   name: 'Streets',\n    //   label: 'Streets',\n    //   id: 'streets-v9',\n    //   sprite: 'mapbox://sprites/mapbox/basic-v9',\n    //   url: 'mapbox://mapbox.basic-v9'\n    // }\n  ];\n\n  hoverFeatureId: string;\n\n  preventSingleClick: boolean = false;\n  \n  hideSearchOptions: boolean = false;\n\n  /* \n     * Timer for determining double click vs single click\n     */\n  timer: any;\n\n  /* \n     * debounced subject for map extent change events\n     */\n  subject: Subject<MapboxEvent<MouseEvent | TouchEvent | WheelEvent>>;\n\n\n  // \n  // Editing of geomemtries\n  //\n  geometryChange: Subject<any> = new Subject();\n\n  vot: ValueOverTime = null;\n\n  @ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\n  editingControl: any;\n\n\n  constructor(private modalService: BsModalService, private mapService: MapService, public service: RegistryService, private route: ActivatedRoute, private router: Router, private lService: LocalizationService) {\n  \n  }\n\n  ngOnInit(): void {\n    this.urlSubscriber = this.route.params.subscribe(params => {\n      let geoObjectUid = params['geoobjectuid'];\n      let geoObjectTypeCode = params['geoobjecttypecode'];\n      this.hideSearchOptions = params['hideSearchOptions'];\n      this.backReference = this.route.snapshot.params[\"backReference\"];\n     \n      this.dateStr = params['datestr'];\n      this.handleDateChange();\n\n      if(geoObjectUid && geoObjectTypeCode && this.dateStr){\n        this.service.getGeoObject(geoObjectUid, geoObjectTypeCode).then(geoObj => {\n          this.setData([geoObj]);\n          this.select(geoObj, null);\n        }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n        });\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.map.remove();\n    this.urlSubscriber.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n\n    const layer = this.baseLayers[0];\n\n    this.map = new Map({\n      container: 'map',\n      style: {\n        \"version\": 8,\n        \"name\": layer.name,\n        \"metadata\": {\n          \"mapbox:autocomposite\": true\n        },\n        \"sources\": {\n          \"mapbox\": {\n            \"type\": \"raster\",\n            \"url\": layer.url,\n            \"tileSize\": 256\n          }\n        },\n        \"sprite\": layer.sprite,\n        \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n        \"layers\": [\n          {\n            \"id\": layer.id,\n            \"type\": 'raster',\n            \"source\": 'mapbox',\n            // \"source-layer\": \"mapbox_satellite_full\"\n          }\n        ]\n      },\n      zoom: 2,\n      attributionControl: false,\n      center: [-78.880453, 42.897852]\n    });\n\n    this.map.on('load', () => {\n      this.initMap();\n    });\n\n    this.map.addControl(this.simpleEditControl);\n  }\n\n  changeMode(mode: number): void {\n    this.mode = mode;\n\n    if (this.mode === this.MODE.SEARCH) {\n      this.isEdit = false;\n    }\n\n    this.clearGeometryEditing();\n\n    this.vot = null;\n  }\n\n  onModeChange(value: boolean): void {\n    this.isEdit = value;\n  }\n\n  handleDateChange(): void {\n    if (this.dateStr != null)\n    {\n      this.forDate = new Date(Date.parse(this.dateStr));\n      this.displayDateRequiredError = false;\n    }\n  }\n\n  initMap(): void {\n\n    this.map.on('style.load', () => {\n      this.addLayers();\n    });\n\n    this.addLayers();\n\n    // Add zoom and rotation controls to the map.\n    this.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n    this.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n    this.map.on('click', 'children-points', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n\n    this.map.on('click', 'children-polygon', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n\n  this.map.on('draw.selectionchange', (e: any) => {\n      if(e.features.length > 0 || e.points.length > 0) {\n        this.editSessionEnabled = true;\n      }\n      else {\n        this.editSessionEnabled = false;\n      }\n  });\n  \n  // Set map data on page load with URL params (single Geo-Object)\n  if(this.data){\n    let fc = {\"type\":\"FeatureCollection\", \"features\":this.data};\n    (<any>this.map.getSource('children')).setData(fc);\n    \n    this.zoomToFeature(this.data[0], null);\n  }\n  }\n\n  handleMapClickEvent(event: any): void {\n    if (!this.isEdit && event.features != null && event.features.length > 0) {\n      const feature = event.features[0];\n\n      if (feature.properties.code != null && (this.current == null || this.current.properties.code !== feature.properties.code)) {\n        this.select(feature, null);\n      }\n    }\n  }\n\n  onPanelCancel(): void {\n    if (this.backReference != null && this.backReference.length >= 2)\n    {\n      let ref = this.backReference.substring(0,2);\n      \n      if (ref === \"CR\")\n      {\n        this.router.navigate(['/registry/change-requests']);\n      }\n    }\n    else\n    {\n      this.changeMode(this.MODE.SEARCH);\n    }\n  }\n  \n  onPanelSubmit(applyInfo: {isChangeRequest:boolean, geoObject?: any, changeRequestId?: string}): void {\n    if (applyInfo.isChangeRequest)\n    {\n      if (this.backReference != null && this.backReference.length >= 2 && this.backReference.substring(0,2) === \"CR\")\n      {\n        this.bsModalRef = this.modalService.show(SuccessModalComponent, { backdrop: true, class:\"error-white-space-pre\" });\n        \n        this.bsModalRef.content.message = this.lService.decode(\"geoobject-editor.changerequest.submitted\");\n        this.bsModalRef.content.submitText = this.lService.decode(\"geoobject-editor.changerequest.view\");\n        \n        this.bsModalRef.content.onConfirm.subscribe( () => {\n          this.router.navigate(['/registry/change-requests', applyInfo.changeRequestId]);\n        } );\n      }\n      else\n      {\n        this.bsModalRef = this.modalService.show(ConfirmModalComponent, { backdrop: true, class:\"error-white-space-pre\" });\n        \n        this.bsModalRef.content.message = this.lService.decode(\"geoobject-editor.changerequest.submitted\");\n        this.bsModalRef.content.submitText = this.lService.decode(\"geoobject-editor.changerequest.view\");\n        this.bsModalRef.content.cancelText = this.lService.decode(\"geoobject-editor.cancel.returnExplorer\");\n        \n        this.bsModalRef.content.onConfirm.subscribe( () => {\n          this.router.navigate(['/registry/change-requests', applyInfo.changeRequestId]);\n        } );\n        this.bsModalRef.content.onCancel.subscribe( () => {\n          this.changeMode(this.MODE.SEARCH);\n        } );\n      }\n    }\n    else\n    {\n      this.bsModalRef = this.modalService.show(SuccessModalComponent, { backdrop: true, class:\"error-white-space-pre\" });\n      \n      this.bsModalRef.content.message = this.lService.decode(\"geoobject-editor.edit.submitted\");\n      this.bsModalRef.content.submitText = this.lService.decode(\"geoobject-editor.cancel.returnExplorer\");\n      \n      this.bsModalRef.content.onConfirm.subscribe( () => {\n        this.onPanelCancel();\n      } );\n    }\n  }\n\n  addLayers(): void {\n\n    const source = 'children';\n\n    this.map.addSource(source, {\n      type: 'geojson',\n      data: {\n        \"type\": \"FeatureCollection\",\n        \"features\": []\n      }\n    });\n\n    // Polygon layer\n    this.map.addLayer({\n      'id': source + '-polygon',\n      'type': 'fill',\n      'source': source,\n      'layout': {},\n      'paint': {\n        'fill-color': DEFAULT_COLOR,\n        'fill-opacity': 0.8,\n        'fill-outline-color': 'black'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      ]\n    });\n\n    // Point layer\n    this.map.addLayer({\n      \"id\": source + \"-points\",\n      \"type\": \"circle\",\n      \"source\": source,\n      \"paint\": {\n        \"circle-radius\": 10,\n        \"circle-color\": DEFAULT_COLOR,\n        \"circle-stroke-width\": 2,\n        \"circle-stroke-color\": '#FFFFFF'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      ]\n    });\n\n    //    // Selected layers\n    //    this.map.addLayer({\n    //      \"id\": source + \"-points-selected\",\n    //      \"type\": \"circle\",\n    //      \"source\": source,\n    //      \"paint\": {\n    //        \"circle-radius\": 10,\n    //        \"circle-color\": DEFAULT_COLOR,\n    //        \"circle-stroke-width\": 2,\n    //        \"circle-stroke-color\": '#FFFFFF'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n    //      ]\n    //    });\n    //\n    //    this.map.addLayer({\n    //      'id': source + '-polygon-selected',\n    //      'type': 'fill',\n    //      'source': source,\n    //      'layout': {},\n    //      'paint': {\n    //        'fill-color': DEFAULT_COLOR,\n    //        'fill-opacity': 0.8,\n    //        'fill-outline-color': 'black'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n    //      ]\n    //    });\n\n    // Label layer\n    this.map.addLayer({\n      \"id\": source + \"-label\",\n      \"source\": source,\n      \"type\": \"symbol\",\n      \"paint\": {\n        \"text-color\": \"black\",\n        \"text-halo-color\": \"#fff\",\n        \"text-halo-width\": 2\n      },\n      \"layout\": {\n        \"text-field\": ['get', 'localizedValue', ['get', 'displayLabel']],\n        \"text-font\": [\"NotoSansRegular\"],\n        \"text-offset\": [0, 0.6],\n        \"text-anchor\": \"top\",\n        \"text-size\": 12,\n      }\n    });\n\n    this.vectorLayers.forEach(cLayer => {\n      this.addVectorLayer(cLayer);\n    });\n  }\n\n  handleBasemapStyle(layer: any): void {\n    // this.map.setStyle('mapbox://styles/mapbox/' + layer.id);\n\n    this.baseLayers.forEach(baseLayer => {\n      baseLayer.selected = false;\n    });\n\n    layer.selected = true;\n\n    this.map.setStyle({\n      \"version\": 8,\n      \"name\": layer.name,\n      \"metadata\": {\n        \"mapbox:autocomposite\": true\n      },\n      \"sources\": {\n        \"mapbox\": {\n          \"type\": \"raster\",\n          \"url\": layer.url,\n          \"tileSize\": 256\n        },\n      },\n      \"sprite\": layer.sprite,\n      \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n      \"layers\": [\n        {\n          \"id\": layer.id,\n          \"type\": 'raster',\n          \"source\": 'mapbox',\n          // \"source-layer\": \"mapbox_satellite_full\"\n        }\n      ]\n    });\n  }\n\n  search(): void {\n    this.mapService.search(this.text, this.dateStr).then(data => {\n      (<any>this.map.getSource('children')).setData(data);\n\n\n      this.setData(data.features);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n\n  zoomToFeature(node: GeoObject, event: MouseEvent): void {\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.preventSingleClick = false;\n    const delay = 200;\n\n    this.timer = setTimeout(() => {\n      if (!this.preventSingleClick) {\n        if (node && node.geometry != null) {\n          const bounds = bbox(node as AllGeoJSON) as LngLatBoundsLike;\n          \n          let padding = 50;\n          let maxZoom = 20;\n          \n          // Zoom level was requested to be reduced when displaying point types as per #420\n          if (node.geometry.type === \"Point\" || node.geometry.type === \"MultiPoint\")\n          {\n            padding = 100;\n            maxZoom = 12;\n          }\n\n          this.map.fitBounds(bounds, { padding: padding, animate:true, maxZoom: maxZoom });\n        }\n      }\n    }, delay);\n  }\n\n  select(node: GeoObject, event: MouseEvent): void {\n\n    if (this.forDate == null)\n    {\n      this.displayDateRequiredError = true;\n    \n      return;\n    }\n\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.service.getGeoObjectTypes([node.properties.type], null).then(types => {\n      this.type = types[0];\n      this.current = node;\n      this.mode = this.MODE.VIEW;\n\n      //      const code = this.current.properties.code;\n      //\n      //      // Update the filter properties\n      //      this.map.setFilter('children-points-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      //      ]);\n      //\n      //      this.map.setFilter('children-polygon-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      //      ]);\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  setData(data: GeoObject[]): void {\n    this.data = data;\n  }\n\n  onContextLayerChange(layer: ContextLayer): void {\n\n    if (layer.active) {\n      this.addVectorLayer(layer.oid);\n    }\n    else {\n      this.removeVectorLayer(layer.oid);\n    }\n\n  }\n\n  removeVectorLayer(source: string): void {\n\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index !== -1) {\n      this.map.removeLayer(source + \"-points\");\n      this.map.removeLayer(source + \"-polygon\");\n      this.map.removeLayer(source + \"-label\");\n      this.map.removeSource(source);\n\n      this.vectorLayers.splice(index, 1);\n    }\n\n  }\n\n  addVectorLayer(source: string): void {\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index === -1) {\n      const prevLayer = 'children-polygon';\n\n      var protocol = window.location.protocol;\n      var host = window.location.host;\n\n      this.map.addSource(source, {\n        type: 'vector',\n        tiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n      });\n\n      // Point layer\n      this.map.addLayer({\n        \"id\": source + \"-points\",\n        \"type\": \"circle\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"paint\": {\n          \"circle-radius\": 10,\n          \"circle-color\": SELECTED_COLOR,\n          \"circle-stroke-width\": 2,\n          \"circle-stroke-color\": '#FFFFFF'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n        ]\n      }, prevLayer);\n\n      // Polygon layer\n      this.map.addLayer({\n        'id': source + '-polygon',\n        'type': 'fill',\n        'source': source,\n        \"source-layer\": 'context',\n        'layout': {},\n        'paint': {\n          'fill-color': SELECTED_COLOR,\n          'fill-opacity': 0.8,\n          'fill-outline-color': 'black'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n        ]\n      }, prevLayer);\n\n\n      // Label layer\n      this.map.addLayer({\n        \"id\": source + \"-label\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"type\": \"symbol\",\n        \"paint\": {\n          \"text-color\": \"black\",\n          \"text-halo-color\": \"#fff\",\n          \"text-halo-width\": 2\n        },\n        \"layout\": {\n          \"text-field\": [\"case\",\n            [\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n            [\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n            [\"string\", [\"get\", \"displayLabel\"]]\n          ],\n          \"text-font\": [\"NotoSansRegular\"],\n          \"text-offset\": [0, 0.6],\n          \"text-anchor\": \"top\",\n          \"text-size\": 12,\n        }\n      }, prevLayer);\n\n\n      this.vectorLayers.push(source);\n    }\n  }\n\n\n  //\n  // Editing of features\n  //\n  clearGeometryEditing(): void {\n    if (this.editingControl != null) {\n      this.editingControl.deleteAll();\n      this.map.removeControl(this.editingControl);\n    }\n\n    this.editingControl = null;\n  this.map.addControl(this.simpleEditControl);\n  \n  this.editSessionEnabled = false;\n  }\n\n\n  onGeometryEdit(vot: ValueOverTime): void {\n\n    this.clearGeometryEditing();\n\n    this.vot = vot;\n\n    this.addEditLayers(vot);\n  }\n\n  addEditLayers(vot: ValueOverTime): void {\n    if (vot != null) {\n      //      this.renderGeometryAsLayer(this.calculatedPreObject.geometry.value, \"pre\", \"#EFA22E\");\n\n      this.enableEditing(vot);\n    }\n  }\n\n  enableEditing(vot: ValueOverTime): void {\n    if (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: false,\n          polygon: true,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: true,\n          line_string: false,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: true,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    this.map.addControl(this.editingControl);\n\n    if (vot.value != null) {\n      this.editingControl.add(vot.value);\n    }\n  }\n\n  onMapSave(): void {\n    const geometry = this.getDrawGeometry();\n\n    this.editingControl.deleteAll();\n    this.map.removeControl(this.editingControl);\n    //    this.geometryChange.next(geometry);\n\n    this.vot.value = geometry;\n    this.vot = null;\n\n    this.editingControl = null;\n\n    this.editSessionEnabled = false;\n  }\n\n  getDrawGeometry(): any {\n    if (this.editingControl != null) {\n      let featureCollection: any = this.editingControl.getAll();\n\n      if (featureCollection.features.length > 0) {\n\n        // The first Feature is our GeoObject.\n\n        // Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n        if (this.type.geometryType === \"MULTIPOLYGON\") {\n          let polygons = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPolygon') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                polygons.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              polygons.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: polygons,\n            type: 'MultiPolygon'\n          };\n        }\n        else if (this.type.geometryType === \"MULTIPOINT\") {\n          let points = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPoint') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                points.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              points.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: points,\n            type: 'MultiPoint'\n          };\n        }\n        else if (this.type.geometryType === \"MULTILINE\") {\n          let lines = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiLineString') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                lines.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              lines.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: lines,\n            type: 'MultiLineString'\n          };\n        }\n        else {\n          return featureCollection.features[0].geometry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  error(err: HttpErrorResponse): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div id=\"navigator-left-sidebar\" class=\"col-md-5 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n  \n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <span style=\"margin-right:10px;\"><localize key=\"changeOverTime.forDate\" ng-reflect-key=\"changeOverTime.forDate\"></localize></span>\n<!--                     <input style=\"width: 100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" [disabled]=\"mode !== MODE.SEARCH\"/> -->\n                    <date-field [(value)]=\"dateStr\" label=\"\" [inputName]=\"'dateStr'\" (change)=\"handleDateChange()\" [disable]=\"mode !== MODE.SEARCH && !hideSearchOptions\" \n                        [allowInfinity]=\"false\" [allowFutureDates]=\"false\" [required]=\"false\" [classNames]=\"displayDateRequiredError ? 'date-required-message' : ''\" [placement]=\"'right'\" style=\"display:inline-grid;\"></date-field>\n                    <div *ngIf=\"displayDateRequiredError\" class=\"error-message\">\n                      <localize key=\"geoobject.editor.forDate.requiredErrorMessage\"></localize>\n                    </div>\n                  </div>\n                </div>\n              </div>\n  \n              <!-- Search bar -->\n              <div *ngIf=\"!hideSearchOptions\" class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"search()\" [(ngModel)]=\"text\" name=\"text\" [disabled]=\"mode !== MODE.SEARCH\">\n                      <span class=\"input-group-btn\">\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"search()\" [disabled]=\"mode !== MODE.SEARCH\">\n                          <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span> \n<!--                           <localize key=\"explorer.search.button.message\"></localize> -->\n                        </button>\n                      </span>\n                    </div>\n                    <div *ngIf=\"mode === MODE.VIEW && current != null\" style=\"padding: 20px 0;\">\n                      <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>              \n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <div class=\"row\"  *ngIf=\"mode === MODE.SEARCH\">\n            <div class=\"col-md-12\">\n              <div id=\"hierarchy-tree-container\" class=\"location-management-widget-section location-management-list-container\">\n                    <div class=\"list-group\">\n  \n                      <div *ngFor=\"let node of data; let i = index\" class=\"list-group-item\">\n                        <!-- Single column card -->\n                        <div class=\"card card-default\" (click)=\"select(node, $event)\">\n                          <div class=\"card-body\">\n                            <i class=\"fa fa-map-marker clickable\" style=\"float:right;font-size:25px;\" aria-hidden=\"true\" (click)=\"zoomToFeature(node, $event)\" [title]=\"'explorer.zoom.label' | localize\"></i>\n                            <h4 class=\"clickable\" style=\"word-break: break-all;\" title=\"View Geo-Object details\">{{node.properties.code}} - {{node.properties.displayLabel.localizedValue}}</h4>\n                          </div>\n                        </div>\n                      </div>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>    \n        <div *ngIf=\"mode === MODE.VIEW && current != null\" class=\"row\">\n          <div class=\"col-md-12\">\n<!--             <div style=\"padding: 20px 0;\"> -->\n<!--               <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>               -->\n<!--             </div> -->\n            <feature-panel\n              [type]=\"type\"\n              [code]=\"current.properties.code\"              \n              [forDate]=\"forDate\"\n              [readOnly]=\"!current.properties.writable\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"search()\"\n              (modeChange)=\"onModeChange($event)\"\n              (panelCancel)=\"onPanelCancel()\"\n              (panelSubmit)=\"onPanelSubmit($event)\"\n            ></feature-panel>\n          </div>\n        </div>            \n      </div>\n\n      <div class=\"col-md-7\" id=\"site-explorer-map\">\n        <div class=\"row\">\n          \n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\"></layer-panel>\n          </article>\n\n          <div id=\"map\" class=\"map-view-port\"></div>\n          <simple-edit-control [visible]=\"editingControl != null\" [editSessionEnabled]=\"editSessionEnabled\" [save]=\"true\" (editEmitter)=\"onMapSave()\" #simpleEditControl></simple-edit-control>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { MasterList, ContextLayer, ContextLayerGroup } from '@registry/model/registry';\n\n\n@Component( {\n    selector: 'context-layer-modal',\n    templateUrl: './context-layer-modal.component.html',\n    styleUrls: ['./location-manager.css']\n} )\nexport class ContextLayerModalComponent {\n\n    contextLayerGroups: ContextLayerGroup[];\n\n\n    /*\n     * Called on confirm\n     */\n    public onSubmit: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onSubmit = new Subject();\n    }\n\n    groupHasContextLayers(group:string): boolean {\n\t\tlet hasCLayers = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif(cLayerGroup.oid === group && cLayerGroup.contextLayers.length > 0){\n\t\t\t\thasCLayers = true;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn hasCLayers;\n\t}\n\n    confirm(): void {\n        this.onSubmit.next( this.contextLayerGroups );\n        this.bsModalRef.hide();\n    }\n\n}\n","<div class=\"modal-body\">\n    <div class=\"heading\">\n        <h2>\n            <localize key=\"explorer.add.context.layers.modal.title\"></localize>\n        </h2>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"list-group\">\n                        <div *ngFor=\"let cLayerGroup of contextLayerGroups;\" >\n                            <div *ngIf=\"groupHasContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n                                <h4>{{ cLayerGroup.displayLabel }}</h4>\n                                <div class=\"list-group\">\n                                    <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                                        <input type=\"checkbox\" [checked]=\"cLayer.enabled\" (change)=\"cLayer.enabled = !cLayer.enabled\" style=\"margin-left: 10px;\"> {{ cLayer.displayLabel }}\n                                        \n                                        <!-- <boolean-field [(value)]=\"cLayer.enabled\" [label]=\"cLayer.displayLabel\"></boolean-field> -->\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { \n\tComponent, \n\tOnInit, \n\tInput, \n\tOutput, \n\tChangeDetectorRef, \n\tEventEmitter, \n\tViewChildren, \n\tQueryList } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, PRESENT } from '@registry/model/registry';\n\nimport{ DateFieldComponent } from '../../../shared/component/form-fields/date-field/date-field.component';\n\nimport { LocalizationService } from '@shared/service';\nimport { DateService } from '@shared/service/date.service';\n\nimport * as moment from 'moment';\n\n\n@Component({\n\tselector: 'geometry-panel',\n\ttemplateUrl: './geometry-panel.component.html',\n\tstyleUrls: ['./geometry-panel.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class GeometryPanelComponent implements OnInit {\n\t\n\t@ViewChildren('dateFieldComponents') dateFieldComponentsArray:QueryList<DateFieldComponent>;\n\t\n\tcurrentDate : Date = new Date();\n\t\n\tisValid: boolean = true;\n\t\n\tisVersionForHighlight: number;\n\t\n\tmessage: string = null;\n\n\treadonly: boolean = false;\n\t\n\thasConflict: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Output() onEdit = new EventEmitter<ValueOverTime>()\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\t\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\thasDuplicateDate: boolean = false;\n\n\tconstructor(private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef, private dateService: DateService) { }\n\n\tngOnInit(): void {\n\t}\n\n\tcheckDateFieldValidity(): boolean {\n\t\tlet dateFields = this.dateFieldComponentsArray.toArray();\n\t\t\n\t\tfor(let i=0; i<dateFields.length; i++){\n\t\t\tlet field = dateFields[i];\n\t\t\tif(!field.valid){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\tonDateChange(): any {\n\t\tthis.hasConflict = false;\n\t\t\n\t\tthis.isValid = this.checkDateFieldValidity();\n\t\n\t\tlet vAttributes = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\tthis.hasConflict = this.dateService.checkRanges(vAttributes);\n\t}\n\n\tedit(vot: ValueOverTime, isVersionForHighlight: number): void {\n\t\tthis.onEdit.emit(vot);\n\t\t\n\t\tthis.isVersionForHighlight = isVersionForHighlight;\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\tvot.value.type = \"Polygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\tvot.value.type = \"Point\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\tvot.value.type = \"MultiPoint\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\tvot.value.type = \"Line\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\tvot.value.type = \"MultiLine\";\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes['geometry'];\n\n\t\tlet position = -1;\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tposition = i\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(position > -1){\n\t\t\tval.values.splice(position, 1);\n\t\t}\n\t\t\n\t}\n\t\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n  \t\tvar format = localeData.longDateFormat('L');\n  \t\treturn moment().format(format);\n\t}\n\t\n\tsetInfinity(vAttribute, attributes): void {\n\t\t\n\t\tif(vAttribute.endDate === PRESENT){\n\t\t\tvAttribute.endDate = new Date();\n\t\t}\n\t\telse{\n\t\t\tvAttribute.endDate = PRESENT\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t\t\n\t}\n\t\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\" autocomplete=\"off\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n\n                <ul class=\"list-group\">\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                    <table class=\"table table-striped\">\n\n                      <tbody class=\"attribute-element-wrapper\">\n                        <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\">\n                          <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                        </p>\n\n                        <tr *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'ERROR', 'warning-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'WARNING'}\">\n                          <td [ngClass]=\"{'active' : i === isVersionForHighlight}\">\n                            <table>\n                              <tr class=\"attribute-value-row\" *ngIf=\"geoObjectType.isGeometryEditable\">\n                                <td colspan=\"2\">\n                                  <button class=\"btn btn-primary\" (click)=\"edit(vAttribute, i)\" role=\"button\">\n                                    <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                                  </button>\n                                </td>\n                              </tr>\n                              <tr class=\"attribute-date-input-row\">\n                                <td>\n                                  <h5>\n                                    <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                  </h5> \n                                  \n                                  <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\" ></date-field>\n                                  \n                                </td>\n                                <td>\n                                  <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                      \n                                      <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" [required]=\"true\" [placement]=\"'bottom'\"></date-field>\n                                      \n                                    </div>\n                                </td>\n                              </tr>\n                              <tr *ngIf=\"vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0\">\n<!--                                   <p class=\"error-message\"> -->\n<!--                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                   </p> -->\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\">\n                                    {{msg.message}}\n                                  </p>\n                              </tr>    \n                            </table>\n                          </td>\n                          <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                            <i class=\"fa fa-times\"></i>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </li>\n\n                  <li class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"io.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || !versionsform.valid\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Map, NavigationControl, AttributionControl, LngLatBounds, IControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\nimport { ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { MapService, RegistryService } from '@registry/service';\nimport { DateService } from '@shared/service/date.service';\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\nimport { ConfirmModalComponent } from '@shared/component';\nimport { Subject } from 'rxjs';\n\nimport { LocalizationService } from '@shared/service';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n\tselector: 'dataset-location-manager',\n\ttemplateUrl: './dataset-location-manager.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class DatasetLocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY'\n\t}\n\t\n\teditSessionEnabled: boolean = false;\n\ttoolsIconHover: boolean = false;\n\tdatasetId: string;\n\ttypeCode: string;\n\treadOnly: boolean = false;\n\teditOnly: boolean = false;\n\tisEdit: boolean = false;\n\tdate: string;\n\tcode: string;\n\ttype: GeoObjectType;\n\tbsModalRef: BsModalRef;\n\tbackReference: string;\n\n    /* \n     * mapbox-gl map\n     */\n\tmap: Map;\n\n\tvectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'Satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n//\t\t {\n//\t\t \tname: 'Streets',\n//\t\t \tlabel: 'Streets',\n//\t\t \tid: 'streets-v11',\n//\t\t \tsprite: 'mapbox://sprites/mapbox/basic-v11',\n//\t\t \turl: 'mapbox://styles/mapbox/streets-v11'\n//\t\t }\n\t];\n\n\n\tmode: string = null;\n\tisMaintainer: boolean;\n\tforDate: Date = new Date();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\teditingControl: any;\n\n\tgeometryChange: Subject<any> = new Subject();\n\tvot: ValueOverTime;\n\n\tconstructor(private mapService: MapService, public service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute, \n\t\tauthService: AuthService, private lService: LocalizationService, private dateService: DateService, private router: Router) {\n\t\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.datasetId = this.route.snapshot.params[\"datasetId\"];\n\t\tthis.typeCode = this.route.snapshot.params[\"typeCode\"];\n\t\tthis.date = this.route.snapshot.params[\"date\"];\n\t\tthis.readOnly = this.route.snapshot.params[\"readOnly\"] === 'true';\n\t\tthis.editOnly = this.route.snapshot.params[\"editOnly\"] === 'true';\n\t\tthis.backReference = this.route.snapshot.params[\"backReference\"];\n\n\t\tif (this.route.snapshot.params[\"code\"] != null) {\n\t\t\tthis.code = this.route.snapshot.params[\"code\"];\n\t\t}\n\n\t\tthis.forDate = this.dateService.getDateFromDateString(this.date) // new Date(Date.parse(this.date));\n\n\t\tthis.service.getGeoObjectTypes([this.typeCode], null).then(types => {\n\t\t\tthis.type = types[0];\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\t\n\tonPanelCancel(): void {\n\t  if (this.backReference != null && this.backReference.length >= 2)\n\t  {\n\t    let ref = this.backReference.substring(0,2);\n\t    \n\t    if (ref === \"ML\")\n\t    {\n\t      let published = this.backReference.substring(3,3) === \"T\";\n\t      let oid = this.backReference.substring(3);\n\t    \n\t      this.router.navigate(['/registry/master-list', oid, published]);\n\t    }\n\t  }\n  }\n  \n  onPanelSubmit(applyInfo: {isChangeRequest:boolean, geoObject?: any, changeRequestId?: string}): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, { backdrop: true, class:\"error-white-space-pre\" });\n      \n    if (applyInfo.isChangeRequest)\n    {\n      this.bsModalRef.content.message = this.lService.decode(\"geoobject-editor.changerequest.submitted\");\n      this.bsModalRef.content.submitText = this.lService.decode(\"geoobject-editor.cancel.returnList\");\n      this.bsModalRef.content.cancelText = this.lService.decode(\"geoobject-editor.changerequest.view\");\n    }\n    else\n    {\n      this.bsModalRef.content.message = this.lService.decode(\"geoobject-editor.edit.submitted\");\n      this.bsModalRef.content.submitText = this.lService.decode(\"geoobject-editor.cancel.returnList\");\n      this.bsModalRef.content.cancelText = this.lService.decode(\"geoobject-editor.continueEditing\");\n    }\n    \n    this.bsModalRef.content.onConfirm.subscribe( () => {\n      this.onPanelCancel();\n    } );\n    \n    this.bsModalRef.content.onCancel.subscribe( () => {\n      if (applyInfo.isChangeRequest)\n      {\n        this.router.navigate(['/registry/change-requests', applyInfo.changeRequestId]);\n      }\n      else\n      {\n        // do nothing\n      }\n    } );\n  }\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tngAfterViewInit() {\n\n\t\tconst layer = this.baseLayers[0];\n\n\t\tthis.map = new Map({\n\t\t\tcontainer: 'dataset-map',\n\t\t\tstyle: {\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox-satellite\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n//\t\t\t\t\t{\n//\t\t\t\t\t\t\"id\": layer.id,\n//\t\t\t\t\t\t\"type\": 'raster',\n//\t\t\t\t\t\t\"source\": 'mapbox-satellite',\n//\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tzoom: 2,\n\t\t\tattributionControl: false,\n\t\t\tcenter: [-78.880453, 42.897852]\n\t\t});\n\n\t\tthis.map.on('load', () => {\n\t\t\tthis.initMap();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tonModeChange(value: boolean): void {\n\t\tthis.isEdit = value;\n\t}\n\n\tinitMap(): void {\n\t  if (this.code !== '__NEW__')\n\t  {\n  \t\tthis.service.getGeoObjectBoundsAtDate(this.code, this.typeCode, this.date).then(bounds => {\n\t\n\t\t\tif(bounds){\n\t  \t\t\tlet llb = new LngLatBounds([bounds[0], bounds[1]], [bounds[2], bounds[3]]);\n\t  \n\t  \t\t\tlet padding = 50;\n\t  \t\t\tlet maxZoom = 20;\n\t  \n\t  \t\t\t// Zoom level was requested to be reduced when displaying point types as per #420\n\t  \t\t\tif (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t  \t\t\t\tpadding = 100;\n\t  \t\t\t\tmaxZoom = 12;\n\t  \t\t\t}\n\t  \n\t  \t\t\tthis.map.fitBounds(llb, { padding: padding, animate: false, maxZoom: maxZoom });\n\t\t\t}\n  \t\t});\n\t\t}\n\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t});\n\n\t\tthis.addLayers();\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n\t\tthis.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n\t\tthis.map.on('click', this.datasetId + '-points', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\t\tthis.map.on('click', this.datasetId + '-polygon', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\n\t\tthis.map.on('draw.selectionchange', (e: any) => {\n\t\t\tif(e.features.length > 0 || e.points.length > 0) {\n\t\t\t\tthis.editSessionEnabled = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.editSessionEnabled = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\taddLayers(): void {\n\t\t\t\n\t\tthis.map.addLayer({\n\t\t\t\"type\": \"raster\",\n\t\t\t\"id\": 'satellite-map',\n\t\t\t\"source\": \"mapbox-satellite\"\n\t\t});\n\t\t\t\n\t\tthis.vectorLayers.forEach(vLayer => {\n\t\t\tthis.addVectorLayer(vLayer);\n\t\t});\n\t}\n\n\thandleBasemapStyle(layer: any): void {\n\n\t\tif(layer.id === \"streets-v11\"){\n\t\t\tthis.map.setStyle(layer.url);\n\t\t}\n\t\telse if(layer.id === \"satellite-v9\"){\n\t\t\tthis.map.setStyle({\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox-satellite\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\t\"source\": 'mapbox-satellite',\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}\n\n\tonContextLayerChange(layer: ContextLayer): void {\n\n\t\tif (layer.active) {\n\t\t\tthis.addVectorLayer(layer.oid);\n\t\t}\n\t\telse {\n\t\t\tthis.removeVectorLayer(layer.oid);\n\t\t}\n\n\t}\n\n\tremoveVectorLayer(source: string): void {\n\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index !== -1) {\n\t\t\tthis.map.removeLayer(source + \"-points\");\n\t\t\tthis.map.removeLayer(source + \"-polygon\");\n\t\t\tthis.map.removeLayer(source + \"-points-selected\");\n\t\t\tthis.map.removeLayer(source + \"-polygon-selected\");\n\t\t\tthis.map.removeLayer(source + \"-label\");\n\t\t\tthis.map.removeSource(source);\n\n\t\t\tthis.vectorLayers.splice(index, 1);\n\t\t}\n\n\t}\n\n\taddVectorLayer(source: string): void {\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index === -1) {\n\t\t\tconst prevLayer = (source !== this.datasetId) ? this.datasetId + '-points' : null;\n\n\t\t\tvar protocol = window.location.protocol;\n\t\t\tvar host = window.location.host;\n\n\t\t\tthis.map.addSource(source, {\n\t\t\t\ttype: 'vector',\n\t\t\t\ttiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n\t\t\t});\n\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-points\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\"circle-color\": DEFAULT_COLOR,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Polygon layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t'id': source + '-polygon',\n\t\t\t\t'type': 'fill',\n\t\t\t\t'source': source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t'layout': {},\n\t\t\t\t'paint': {\n\t\t\t\t\t'fill-color': DEFAULT_COLOR,\n\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Selected object layers\n\t\t\tif (source === this.datasetId) {\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t\"id\": source + \"-points-selected\",\n\t\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\t\"source\": source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t\"paint\": {\n\t\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\t\"circle-color\": SELECTED_COLOR,\n\t\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t'id': source + '-polygon-selected',\n\t\t\t\t\t'type': 'fill',\n\t\t\t\t\t'source': source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t'layout': {},\n\t\t\t\t\t'paint': {\n\t\t\t\t\t\t'fill-color': SELECTED_COLOR,\n\t\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\t\t\t}\n\n\t\t\t// Label layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-label\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"type\": \"symbol\",\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"text-color\": \"black\",\n\t\t\t\t\t\"text-halo-color\": \"#fff\",\n\t\t\t\t\t\"text-halo-width\": 2\n\t\t\t\t},\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"text-field\": [\"case\",\n\t\t\t\t\t\t[\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n\t\t\t\t\t\t[\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n\t\t\t\t\t\t[\"string\", [\"get\", \"displayLabel\"]]\n\t\t\t\t\t],\n\t\t\t\t\t\"text-font\": [\"NotoSansRegular\"],\n\t\t\t\t\t\"text-offset\": [0, 0.6],\n\t\t\t\t\t\"text-anchor\": \"top\",\n\t\t\t\t\t\"text-size\": 12,\n\t\t\t\t}\n\t\t\t}, prevLayer);\n\n\n\t\t\tthis.vectorLayers.push(source);\n\t\t}\n\t}\n\n\n\t/*\n\t * EDIT FUNCTIONALITY\n\t */\n\n\tclearGeometryEditing(): void {\n\t\tif (this.editingControl != null) {\n\t\t\tthis.editingControl.deleteAll();\n\t\t\tthis.map.removeControl(this.editingControl);\n\t\t}\n\n\t\tthis.editingControl = null;\n\t\t\n\t\tthis.editSessionEnabled = false;\n\t}\n\n\tonFeatureChange(): void {\n\t\t// Refresh the layer\n\t\tthis.removeVectorLayer(this.datasetId);\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\thandleMapClickEvent(event: any): void {\n\t\tif (!this.isEdit && event.features != null && event.features.length > 0) {\n\t\t\tconst feature = event.features[0];\n\n\t\t\tif (feature.properties.code != null && this.code !== feature.properties.code) {\n\t\t\t\tthis.code = feature.properties.code;\n\n\t\t\t\t// Update the filter properties\n\t\t\t\tthis.map.setFilter(this.datasetId + '-points-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]);\n\n\t\t\t\tthis.map.setFilter(this.datasetId + '-polygon-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n\n\tonMapSave(): void {\n\t\tconst geometry = this.getDrawGeometry();\n\n\t\tthis.editingControl.deleteAll();\n\t\tthis.map.removeControl(this.editingControl);\n\t\tthis.geometryChange.next(geometry);\n\n\t\tthis.vot.value = geometry;\n//\t\tthis.vot = null;\n\n\t\tthis.editingControl = null;\n\t\t\n\t\tthis.editSessionEnabled = false;\n\t}\n\n\tonGeometryEdit(vot: ValueOverTime): void {\n\t\tthis.clearGeometryEditing();\n\n\t\tthis.vot = vot;\n\n\t\tthis.addEditLayers(vot);\n\t}\n\n\t//\tonMapEdit(): void {\n\t//\t\t// Enable editing\n\t//\t\tif (this.editingControl == null) {\n\t//\t\t\tthis.addEditLayers();\n\t//\t\t}\n\t//\t}\n\n\taddEditLayers(vot: ValueOverTime): void {\n\t\tif (vot != null) {\n\t\t\tthis.enableEditing(vot);\n\t\t}\n\t}\n\n\tenableEditing(vot: ValueOverTime): void {\n\t\tif (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (vot.value != null) {\n\t\t\tthis.editingControl.add(vot.value);\n\t\t}\n\t}\n\n\n\tgetDrawGeometry(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.type.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tonNewGeoObject(): void {\n\t\tthis.code = '__NEW__';\n\t}\n\t\n\tformatDate(date: Date): string {\n\t\treturn this.dateService.formatDateForDisplay(date);\n\t}\n\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div *ngIf=\"type != null && code != null\" id=\"navigator-left-sidebar\" class=\"col-md-5 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            \n            <div id=\"attributes-header\">\n              <h3 *ngIf=\"type\">{{type.label.localizedValue}}</h3>\n              <h4><localize key=\"cgr.validity.valid.on.label\"></localize>: {{formatDate(forDate)}}</h4>\n            </div>\n            \n            <feature-panel\n              [type]=\"type\"\n              [code]=\"code\"              \n              [forDate]=\"forDate\"\n              [datasetId]=\"datasetId\"\n              [readOnly]=\"readOnly\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"onFeatureChange()\"              \n              (modeChange)=\"onModeChange($event)\"\n              (panelCancel)=\"onPanelCancel($event)\"\n              (panelSubmit)=\"onPanelSubmit($event)\"\n            ></feature-panel>\n          </div>\n        </div>\n      </div>\n\n      <div [ngClass]=\"{'col-md-7':code != null, 'col-md-12':code == null}\" id=\"site-explorer-map\">\n        <div class=\"row\">\n\n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\" (baseLayerChange)=\"handleBasemapStyle($event)\" [filter]=\"[datasetId]\"></layer-panel>\n            \n            <div *ngIf=\"!editOnly\" class=\"layer-toggle\" style=\"margin-top:10px;\" (mouseenter)=\"toolsIconHover = true\" (mouseleave)=\"toolsIconHover = false\">\n             \n              <i class=\"fa fa-plus-square\" *ngIf=\"!toolsIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n              <div *ngIf=\"toolsIconHover\" style=\"margin-top:10px;\">\n            \n                <span (click)=\"onNewGeoObject()\" role=\"button\">\n                  <button class=\"btn btn-primary\">\n                    <localize key=\"masterlist.newGeoObject\"></localize>              \n                  </button>\n                </span>\n              </div>\n            \n            </div>\n          </article>\n\n          <div id=\"dataset-map\" class=\"map-view-port\"></div>     \n          <simple-edit-control [visible]=\"editingControl != null\" [editSessionEnabled]=\"editSessionEnabled\" [save]=\"true\" (editEmitter)=\"onMapSave()\"  #simpleEditControl></simple-edit-control>\n          \n<!--           <span *ngIf=\"!readOnly\" (click)=\"onNewGeoObject()\" style=\"position: absolute; bottom: 70px; right: 10px\" role=\"button\"> -->\n<!--             <button class=\"btn btn-primary\"> -->\n<!--               <localize key=\"masterlist.newGeoObject\"></localize>               -->\n<!--             </button> -->\n<!--           </span> -->\n               \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import * as d3 from 'd3';\nimport { svgPoint } from './svg-util';\n\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\nimport { SvgHierarchyType } from './svg-hierarchy-type';\nimport { calculateTextWidth } from './svg-util';\nimport { HierarchyComponent, RELATED_NODE_BANNER_COLOR } from '../hierarchy.component';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nexport class SvgHierarchyNode {\n\n\tprivate hierarchyComponent: HierarchyComponent;\n\n\tprivate svgHierarchyType: SvgHierarchyType;\n\n\tprivate geoObjectType: GeoObjectType;\n\n\tprivate treeNode: any;\n\n\t/*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tconstructor(hierarchyComponent: HierarchyComponent, svgHierarchyType: SvgHierarchyType, geoObjectType: GeoObjectType, treeNode: any,\n\t\tpublic localizeService: LocalizationService, public modalService: BsModalService, public authService: AuthService) {\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.svgHierarchyType = svgHierarchyType;\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.treeNode = treeNode;\n\t}\n\n\tgetCode(): string {\n\t\treturn this.geoObjectType.code;\n\t}\n\n\tsetPos(x: number, y: number, dragging: boolean) {\n\t\tlet bbox = this.getBbox();\n\n\t\t// Move the GeoObjectType with the pointer when they move their mouse\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-header-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y - SvgHierarchyType.gotRectH / 2 + 2);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-label-text[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + 5)\n\t\t\t.attr(\"y\", y + 1);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-relatedhiers-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + bbox.width - 20)\n\t\t\t.attr(\"y\", y + 17);\n\n\n\t\t// Move inherit and uninherit buttons with the node they're moving\n\n\t\tlet inheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (inheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 60);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet inheritBbox = inheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - inheritBbox.x) + \" \" + (heritY - inheritBbox.y) + \")\");\n\t\t}\n\n\t\tlet uninheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (uninheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 71);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet uninheritBbox = uninheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - uninheritBbox.x) + \" \" + (heritY - uninheritBbox.y) + \")\");\n\t\t}\n\t}\n\n\tgetPos() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) };\n\t}\n\n\tgetBbox() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) - 3, width: parseInt(select.attr(\"width\")), height: parseInt(select.attr(\"height\")) + 3 };\n\t}\n\n\tgetTreeNode() {\n\t\treturn this.treeNode;\n\t}\n\t\n\thideRelatedHierarchy(): string {\n\t  let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n    if (existingSecondary.node() != null) {\n      existingSecondary.remove();\n      this.hierarchyComponent.calculateSvgViewBox();\n      \n      let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n      return existingSecondaryCode;\n    }\n\t}\n\n\trenderRelatedHierarchiesMenu() {\n\t\tlet that = this;\n\t\tlet existingMenu = d3.select(\".g-context-menu\");\n\n\t\tif (existingMenu.node() == null) {\n\t\t\t//let parent = d3.select('g.g-hierarchy-tree[data-code=\"' + this.svgHierarchyType.hierarchyType.code + '\"]');\n\t\t\tlet parent = d3.select('#svg');\n\n\t\t\tlet contextMenuGroup = parent.append(\"g\").classed(\"g-context-menu\", true);\n\n\t\t\tlet relatedHierarchies = this.svgHierarchyType.getRelatedHierarchies(this.getCode());\n\t\t\t\n\t\t\tconst hasActionsPermissions = this.authService.isSRA() || this.authService.isOrganizationRA(this.svgHierarchyType.hierarchyType.organizationCode);\n\n\t\t\tlet bbox = this.getBbox();\n\t\t\tlet x = bbox.x + bbox.width - 5;\n\t\t\tlet y = bbox.y + bbox.height / 2 - 8;\n\t\t\tconst height = 20;\n\t\t\tconst fontSize = 8;\n\t\t\tconst widthPadding = 10;\n\t\t\tconst borderColor = \"#aaaaaa\";\n\t\t\tconst dividerColor = \"#e4e4e4\";\n\t\t\tconst fontFamily = \"sans-serif\";\n\t\t\tconst titleFontSize = 9;\n\t\t\t\n\t\t\tconst titleLabel = this.hierarchyComponent.localize(\"hierarchy.content.relatedHierarchies\");\n\t\t\tconst actionsTitle = this.hierarchyComponent.localize(\"hierarchy.content.actionsTitle\");\n\t\t\tconst removeFromHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.removeFromHierarchy\");\n\t\t\tconst noRelatedHierLabel = this.hierarchyComponent.localize(\"hierarchy.content.noRelatedHierarchies\");\n\t\t\tconst hideRelatedHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.hideRelatedHierarchy\");\n\t\t\tconst uninheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.uninherit\");\n\t\t\tconst inheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.inherit\");\n\t\t\t\n      let isSecondaryHierarchyRendered = (d3.select('.g-hierarchy[data-primary=\"false\"]').node() != null);\n      \n      let numActions = hasActionsPermissions ? (isSecondaryHierarchyRendered ? 2 : 1) : 0;\n\n\t\t\t// Calculate the width of our title\n\t\t\tlet width = calculateTextWidth(titleLabel, titleFontSize);\n\t\t\t\n\t\t\t// Calculate with of remove text\n\t\t\tlet removeWidth = calculateTextWidth(removeFromHierarchyLabel, fontSize);\n\t\t\twidth = removeWidth > width ? removeWidth : width;\n\t\t\t\n\t\t\tif (isSecondaryHierarchyRendered)\n\t\t\t{\n  \t\t\t// Calculate width of \"hide related hierarchy\" label\n        let hideRelatedWidth = calculateTextWidth(hideRelatedHierarchyLabel, fontSize);\n        width = hideRelatedWidth > width ? hideRelatedWidth : width;\n      }\n      \n      if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n        let uninheritWidth = calculateTextWidth(uninheritLabel, fontSize);\n        width = uninheritWidth > width ? uninheritWidth : width;\n        numActions++;\n      }\n      else\n      {\n        let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n        if (existingSecondary.node() != null) {\n          let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n          let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n          \n          let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService, this.authService);\n          let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n          \n          if (this.treeNode.parent == null && relatedGotHasParents)\n          {\n            let inheritWidth = calculateTextWidth(inheritLabel, fontSize);\n            width = inheritWidth > width ? inheritWidth : width;\n            numActions++;\n          }\n        }\n      }\n      \n\t\t\t\n\t\t\t// Calculate the width of our context menu, which is based on how long the text inside it will be.\n\t\t\t// We don't know how long text is until we render it. So we'll need to loop over all the text and\n\t\t\t// render and destroy all of it.\n\t\t\tif (relatedHierarchies.length > 0)\n\t\t\t{\n  \t\t\trelatedHierarchies.forEach((relatedHierarchyCode: string) => {\n  \t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n  \n  \t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n  \t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n  \t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n  \t\t\t\t}\n  \n  \t\t\t\tlet textWidth = calculateTextWidth(relatedHierarchyLabel, fontSize);\n  \n  \t\t\t\tif (textWidth > width) {\n  \t\t\t\t\twidth = textWidth;\n  \t\t\t\t}\n  \t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t  let noHierLabelWidth = calculateTextWidth(noRelatedHierLabel, fontSize);\n\t\t\t  width = noHierLabelWidth > width ? noHierLabelWidth : width;\n\t\t\t}\n\n\t\t\twidth = width + widthPadding;\n\n\t\t\tlet heightAdditions: number = relatedHierarchies.length > 0 ? (numActions + 2) : (numActions + 3);\n\n\t\t\t// Background rectangle with border\n\t\t\tcontextMenuGroup.append(\"rect\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-background\", true)\n\t\t\t\t.attr(\"x\", x)\n\t\t\t\t.attr(\"y\", y)\n\t\t\t\t.attr(\"rx\", 5)\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height * (relatedHierarchies.length + heightAdditions))\n\t\t\t\t.attr(\"fill\", \"white\")\n\t\t\t\t.attr(\"stroke-width\", .5)\n\t\t\t\t.attr(\"stroke\", borderColor);\n\n\t\t\t// Related Hierarchies Title\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n\t\t\t\t.attr(\"font-size\", titleFontSize)\n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.text(titleLabel);\n\n\t\t\ty = y + height;\n\n\t\t\t// Dividing line at the bottom\n\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t.attr(\"x1\", x)\n\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t.attr(\"x2\", x + width)\n\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t.attr(\"stroke\", borderColor)\n\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t\n\t\t\tif (relatedHierarchies.length > 0) {\n\t\t\t\t// Loop over all related hierarchies and draw them as list items\n\t\t\t\tfor (let i = 0; i < relatedHierarchies.length; ++i) {\n\t\t\t\t\tlet relatedHierarchyCode = relatedHierarchies[i];\n\t\t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n\n\t\t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n\t\t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n\t\t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text that says the hierarchy's display label\n\t\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t\t.text(relatedHierarchyLabel)\n\t\t\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t\t\t.on('click', function(event, node) { that.renderSecondaryHierarchy(relatedHierarchy); });\n\n\t\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\t\tif (i < relatedHierarchies.length) {\n\t\t\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t\t\t.attr(\"stroke-width\", .5);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// Text that says \"No related Hierarchies\"\n\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t.text(noRelatedHierLabel)\n\n\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t}\n\n      // Actions Section\n      if (hasActionsPermissions)\n      {\n  \t\t\t// Actions Title\n  \t\t\tcontextMenuGroup.append(\"text\")\n  \t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n  \t\t\t\t.attr(\"x\", x + widthPadding / 2)\n  \t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n  \t\t\t\t.attr(\"font-size\", titleFontSize)\n  \t\t\t\t.attr(\"font-family\", fontFamily)\n  \t\t\t\t.attr(\"font-weight\", \"bold\")\n  \t\t\t\t.text(actionsTitle);\n  \n  \t\t\ty = y + height;\n  \n  \t\t\t// Dividing line at the bottom\n  \t\t\tcontextMenuGroup.append(\"line\")\n  \t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n  \t\t\t\t.attr(\"x1\", x)\n  \t\t\t\t.attr(\"y1\", y)\n  \t\t\t\t.attr(\"x2\", x + width)\n  \t\t\t\t.attr(\"y2\", y)\n  \t\t\t\t.attr(\"stroke\", borderColor)\n  \t\t\t\t.attr(\"stroke-width\", .5);\n  \n        // \"Remove from hierarchy\" button\n        contextMenuGroup.append(\"text\")\n        .classed(\"contextmenu-relatedhiers-text\", true)\n        .attr(\"data-remove\", \"REPLACE---gotCode\")\n        .attr(\"x\", x + widthPadding / 2)\n        .attr(\"y\", y + (height / 2) + (fontSize / 2))\n        .attr(\"font-size\", fontSize) \n        .attr(\"font-family\", fontFamily)\n        .text(removeFromHierarchyLabel)\n        .style(\"cursor\", \"pointer\")\n        .on('click', function (event, node) { that.removeGotFromHierarchy(); });\n      \n        y = y + height;\n  \t\t  \n  \t\t  // Inherit / Uninherit buttons\n  \t\t  if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n          contextMenuGroup.append(\"line\")\n            .classed(\"contextmenu-relatedhiers-divider\", true)\n            .attr(\"x1\", x)\n            .attr(\"y1\", y)\n            .attr(\"x2\", x + width)\n            .attr(\"y2\", y)\n            .attr(\"stroke\", borderColor)\n            .attr(\"stroke-width\", .5);\n          \n          contextMenuGroup.append(\"text\")\n            .classed(\"contextmenu-relatedhiers-text\", true)\n            .attr(\"x\", x + widthPadding / 2)\n            .attr(\"y\", y + (height / 2) + (fontSize / 2))\n            .attr(\"font-size\", fontSize)\n            .attr(\"font-family\", fontFamily)\n            .text(uninheritLabel)\n            .style(\"cursor\", \"pointer\")\n            .on('click', function (event, node) { that.onClickUninheritHierarchy(); });\n  \n          y = y + height;\n        }\n        else\n        {\n          let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n          if (existingSecondary.node() != null) {\n            let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n            let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n            \n            let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService, this.authService);\n            let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n            \n            if (this.treeNode.parent == null && relatedGotHasParents)\n            {\n              contextMenuGroup.append(\"line\")\n                .classed(\"contextmenu-relatedhiers-divider\", true)\n                .attr(\"x1\", x)\n                .attr(\"y1\", y)\n                .attr(\"x2\", x + width)\n                .attr(\"y2\", y)\n                .attr(\"stroke\", borderColor)\n                .attr(\"stroke-width\", .5);\n            \n              contextMenuGroup.append(\"text\")\n                .classed(\"contextmenu-relatedhiers-text\", true)\n                .attr(\"x\", x + widthPadding / 2)\n                .attr(\"y\", y + (height / 2) + (fontSize / 2))\n                .attr(\"font-size\", fontSize)\n                .attr(\"font-family\", fontFamily)\n                .text(inheritLabel)\n                .style(\"cursor\", \"pointer\")\n                .on('click', function (event, node) { that.onClickInheritHierarchy(secondaryHierarchy); });\n      \n              y = y + height;\n            }\n          }\n        }\n      }\n\t\t\t\n      if (isSecondaryHierarchyRendered) {\n  \t\t  contextMenuGroup.append(\"line\")\n          .classed(\"contextmenu-relatedhiers-divider\", true)\n          .attr(\"x1\", x)\n          .attr(\"y1\", y)\n          .attr(\"x2\", x + width)\n          .attr(\"y2\", y)\n          .attr(\"stroke\", borderColor)\n          .attr(\"stroke-width\", .5);\n  \t\t  \n  \t\t  contextMenuGroup.append(\"text\")\n          .classed(\"contextmenu-relatedhiers-text\", true)\n          .attr(\"x\", x + widthPadding / 2)\n          .attr(\"y\", y + (height / 2) + (fontSize / 2))\n          .attr(\"font-size\", fontSize) \n          .attr(\"font-family\", fontFamily)\n          .text(hideRelatedHierarchyLabel)\n          .style(\"cursor\", \"pointer\")\n          .on('click', function (event, node) {\n            that.hideRelatedHierarchy();\n            \n            let existingMenu = d3.select(\".g-context-menu\");\n            if (existingMenu.node() != null) {\n              existingMenu.remove();\n            }\n            \n            d3.select(\".g-hierarchy-got-connector\").remove();\n          });\n      }\n      \n\t\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t\t}\n\t\telse {\n\t\t\texistingMenu.remove();\n\t\t}\n\t}\n\n\tremoveGotFromHierarchy(){\n\t\t\n\t\tlet svgGot = this.hierarchyComponent.primarySvgHierarchy.getNodeByCode(this.geoObjectType.code);\n\n\t\tlet startPoint: any = svgGot.getPos();\n\t\t// let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\n\t\t// let deltaX: number = startPoint.x - svgMousePoint.x;\n\t\t// let deltaY: number = startPoint.y - svgMousePoint.y;\n\n\t\tlet obj = this.hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tlet message = this.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n\t\tmessage = message.replace(\"{label}\", obj.label.localizedValue);\n\n\t\tthis.bsModalRef.content.message = message;\n\t\tthis.bsModalRef.content.data = obj.code;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tlet treeNode = svgGot.getTreeNode();\n\t\t\tlet parent = null;\n\t\t\tif (treeNode.parent == null) {\n\t\t\t\tparent = \"ROOT\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (treeNode.parent.data.inheritedHierarchyCode != null) {\n\t\t\t\t\tparent = \"ROOT\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent = treeNode.parent.data.geoObjectType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { console.log(err) });\n\t\t});\n\n\t\t// (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n\t\t// \tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t// });\n\t}\n\n\trenderSecondaryHierarchy(relatedHierarchy: HierarchyType) {\n\t\td3.select(\".g-context-menu\").remove();\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\n\t\tlet that = this;\n\t\tlet myBbox = this.getBbox();\n\t\tlet svg = d3.select(\"#svg\");\n\n\t\t// Remove any secondary hierarchy that may already be rendered\n\t\tif (this.hideRelatedHierarchy() === relatedHierarchy.code)\n\t\t{\n\t\t  return;\n\t\t}\n\t\t\n\t\t// Get the bounding box for our primary hierarchy\n\t\tlet primaryHierBbox = (d3.select(\".g-hierarchy[data-primary=true]\").node() as any).getBBox();\n\n\t\t// Render the secondary hierarchy\n\t\tlet svgHt: SvgHierarchyType = new SvgHierarchyType(this.hierarchyComponent, svg, relatedHierarchy, false, this.localizeService, this.modalService, this.authService);\n\t\tsvgHt.render();\n\t\tlet gSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]')\n\n\t\t// Translate the secondary hierarchy to the right of the primary hierarchy\n\t\tlet gHierarchy: any = d3.select('.g-hierarchy[data-primary=\"false\"]').node();\n\t\tlet bbox = gHierarchy.getBBox();\n\t\tlet paddingLeft: number = primaryHierBbox.width + 40 + (primaryHierBbox.x - bbox.x);\n\t\tgSecondary.attr(\"transform\", \"translate(\" + paddingLeft + \" 0)\");\n\n\t\t// Draw dotted line between the shared node in the hierarchies\n\t\tlet secondaryGot = d3.select('.g-hierarchy[data-primary=false] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\t\tlet secondaryGotBbox = { x: parseInt(secondaryGot.attr(\"x\")), y: parseInt(secondaryGot.attr(\"y\")) - 3, width: parseInt(secondaryGot.attr(\"width\")), height: parseInt(secondaryGot.attr(\"height\")) + 3 };\n\t\tsecondaryGotBbox.x = secondaryGotBbox.x + paddingLeft; // Apply transformation\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\t\tlet gConnector = d3.select(\"#svg\").append(\"g\").classed(\"g-hierarchy-got-connector\", true);\n\t\tgConnector.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\n\t\t\t\t  \"d\",\n\t\t\t\t  \"M\" + (myBbox.x + myBbox.width) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"H\" + (((secondaryGotBbox.x) - (myBbox.x + myBbox.width)) / 2 + myBbox.x + myBbox.width)\n\t\t\t\t+ \"V\" + (secondaryGotBbox.y + secondaryGotBbox.height / 2)\n\t\t\t\t+ \"H\" + secondaryGotBbox.x\n\t\t\t);\n\n\t\t// Draw arrow for dotted line\n\t\tconst arrowRectD = { height: 10, width: 7 };\n\t\tlet gArrow = gConnector.append(\"g\").classed(\"g-hierarchy-got-connector-arrow\", true);\n\t\tgArrow.append(\"rect\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", myBbox.x + myBbox.width - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", myBbox.y + myBbox.height / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", \n\t\t\t\t\"M\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width + arrowRectD.width / 2 - ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Recalculate the viewbox (should probably be the last thing that happens)\n\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t}\n\n\tonClickInheritHierarchy(hierarchy: HierarchyType) {\n\t\tthis.hierarchyComponent.handleInheritHierarchy(this.svgHierarchyType.getCode(), hierarchy.code, this.getCode());\n\t}\n\n\tonClickUninheritHierarchy() {\n\t\tthis.hierarchyComponent.handleUninheritHierarchy(this.svgHierarchyType.getCode(), this.getCode());\n\t}\n\n}\n\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { TreeNode } from '@circlon/angular-tree-component';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\n\n\n@Component( {\n    selector: 'add-child-to-hierarchy-modal',\n    templateUrl: './add-child-to-hierarchy-modal.component.html',\n    styleUrls: []\n} )\nexport class AddChildToHierarchyModalComponent implements OnInit {\n\n\t /*\n     * parent id of the node being created\n     */\n    public parent: TreeNode;\n    public hierarchyType: HierarchyType;\n    public nodes: HierarchyNode[];\n    public allGeoObjectTypes: GeoObjectType[];\n    public selectedGeoObjectType: GeoObjectType;\n\tprivate toRoot: boolean = false;\n\tselectUndefinedOptionValue: any;\n    message: string = null;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n    public onNodeChange: Subject<HierarchyType>;\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef ) {\n    }\n\n    ngOnInit(): void {\n        this.onNodeChange = new Subject();\n    }\n    \n    onSelect(value: string): void {\n    \tthis.allGeoObjectTypes.forEach(gObj => {\n    \t\tif(gObj.code === value){\n    \t\t\tthis.selectedGeoObjectType = gObj;\n    \t\t}\n    \t})\n    }\n    \n    handleOnSubmit(): void {\n        this.message = null;\n        \n        let parent = (this.toRoot) ? \"ROOT\" : this.parent.data.geoObjectType;\n        this.hierarchyService.addChildToHierarchy( this.hierarchyType.code, parent, this.selectedGeoObjectType.code ).then( data => {\n            this.onNodeChange.next( data );\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n        \n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<form class=\"modal-form\">\n\n  <div *ngIf=\"parent != null\" class=\"modal-body\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"hierarchy.management.button.addRelationship\"></localize>\n      </h1>\n    </div>\n    <fieldset>\n\n      <div class=\"form-group\">\n\n        <select *ngIf=\"allGeoObjectTypes\" (change)=\"onSelect($event.target.value)\">\n          <option disabled hidden [value]=\"selectUndefinedOptionValue\">-- <localize\n              key=\"hierarchy.management.create.child.option.label.selectType\"></localize> --</option>\n          <!-- to filter out all geoobjecttypes that are already in hierarchies use this pip in the iterator > | geoobjecttype:nodes -->\n          <option></option>\n          <option *ngFor=\"let geoObjType of allGeoObjectTypes\" value={{geoObjType.code}}>\n            {{geoObjType.label.localizedValue}}\n          </option>\n        </select>\n\n      </div>\n\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.cancel\"></localize>\n          </span>\n        </button>\n        <button type=\"submit\" (click)=\"handleOnSubmit()\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.ok\"></localize>\n          </span>\n        </button>\n      </div>\n    </fieldset>\n  </div>\n</form>\n","import { Input, Component, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { GeoObjectOverTime, GeoObjectType } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-create-geo-object',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./crtable-detail-create-geo-object.css'],\n    encapsulation: ViewEncapsulation.None\n} )\n//export class CreateUpdateGeoObjectDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\nexport class CreateUpdateGeoObjectDetailComponent implements ActionDetailComponent {\n\t\n\tisMaintainer: boolean = false;\n\n    @Input() action: any;\n\n    preGeoObject: GeoObjectOverTime = null;\n\n    postGeoObject: GeoObjectOverTime = null;\n\n    geoObjectType: GeoObjectType = null;\n\n    @Input() readOnly: boolean;\n    \n    isEditing: boolean = false;\n\n    @ViewChild( \"attributeEditor\" ) attributeEditor;\n\n    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\n    bsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    dateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    forDate: Date = null;\n\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, \n\t\t\t\tprivate registryService: RegistryService, private authService: AuthService ) {\n\t\t\t\t\t\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\n        this.forDate = new Date();\n\n        const day = this.forDate.getUTCDate();\n        this.dateStr = this.forDate.getUTCFullYear() + \"-\" + ( this.forDate.getUTCMonth() + 1 ) + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n    ngOnInit(): void {\n\n        this.postGeoObject = this.action.geoObjectJson;\n        this.geoObjectType = this.action.geoObjectType;\n\n        if ( this.isNew() ) {\n            this.preGeoObject = this.postGeoObject;\n        }\n\n        this.onSelect( this.action );\n    }\n\n    isNew(): boolean {\n        return ( this.action.actionType === \"net.geoprism.registry.action.geoobject.CreateGeoObjectAction\" );\n    }\n\n    handleDateChange(): void {\n        this.forDate = new Date( Date.parse( this.dateStr ) );\n    }\n\n    applyAction() {\n        //var action = JSON.parse( JSON.stringify( this.action ) );\n        let action = this.action;\n        \n        action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n        if ( this.geometryEditor != null ) {\n            action.geoObjectJson.geometry = this.geometryEditor.saveDraw().geometry;\n        }\n\n        this.changeRequestService.applyAction( action ).then( response => {\n            this.endEdit();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    onSelect( action: AbstractAction ) {\n\n        // There are multiple ways we could show a diff of an object.\n        //\n        // This line will show a diff only when a person is typing so as to show the\n        // change they are creating.\n        //\n        // The method below (getGeoObjectByCode) will compare what is in the database\n        // at that time with the change request. This will only track state compared to\n        // what is currently in the database which isn't necessarily the original change.\n        //\n        // A third option which is NOT implemented yet would store the state of a geoobject\n        // (original and target) with the change request so as to manage state at time of\n        // the change request submission.\n        //\n        // Display diff when a user is changing a value\n        // this.preGeoObject = JSON.parse(JSON.stringify(this.postGeoObject));\n\n        // Display diff of what's in the database\n        if (\n            this.action.actionType === \"net.geoprism.registry.action.geoobject.UpdateGeoObjectAction\"\n            //    && typeof this.postGeoObject.properties.createDate !== 'undefined'\n        ) {\n            this.registryService.getGeoObjectOverTime( this.postGeoObject.attributes.code, this.geoObjectType.code ).then( geoObject => {\n                this.preGeoObject = geoObject;\n\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    //@HostListener( 'window:beforeunload' )\n    //canDeactivate(): Observable<boolean> | boolean {\n    //    if ( this.isEditing ) {\n    //        //event.preventDefault();\n    //        //event.returnValue = 'Are you sure?';\n    //        //return 'Are you sure?';\n//\n     //       return false;\n     //   }\n//\n    //    return true;\n    //}\n\n    //afterDeactivate( isDeactivating: boolean ) {\n    //    if ( isDeactivating && this.isEditing ) {\n    //        this.unlockActionSync();\n    //    }\n    //}\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.isEditing = true;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( true );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.isEditing = false;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( false );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n\n    <div class=\"heading text-center\">\n        <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n\t  </div>\n    \n    <div class=\"detail-content\">\n      <h4>\n        <localize key=\"io.geoObjectType\"></localize>: {{action.geoObjectType.code}}\n      </h4>\n    \n      <div style=\"margin: 20px 0;\">\n        <span style=\"margin-right:10px;\"><localize key=\"changeOverTime.forDate\"></localize></span>\n        <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n      </div>    \n    \n\n        <geoobject-shared-attribute-editor \n          #attributeEditor\n          *ngIf=\"preGeoObject\"\n          [readOnly]=\"!isEditing\"  \n          [geoObjectType]=\"geoObjectType\"\n          [postGeoObject]=\"postGeoObject\"\n          [preGeoObject]=\"preGeoObject\"\n          [forDate]=\"forDate\"\n          [isGeometryInlined]=\"true\">\n        </geoobject-shared-attribute-editor>\n\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" [disabled]=\"!isEditing\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Input, Component, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\nimport { AddChildAction } from '@registry/model/crtable';\nimport { ChangeRequestService } from '@registry/service';\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-add-remove-child',\n    templateUrl: './detail.component.html',\n    styleUrls: []\n} )\nexport class AddRemoveChildDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n    @Input() action: AddChildAction;\n\n    original: AddChildAction;\n\n    @Input() readOnly: boolean;\n    \n    isEditing: boolean = false;\n\n    private bsModalRef: BsModalRef;\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private authService: AuthService ) {\n\n    }\n\n    ngOnInit(): void {\n        this.original = Object.assign( {}, this.action );\n    }\n\n    applyAction() {\n        this.changeRequestService.applyAction( this.action ).then( response => {\n            this.original = Object.assign( {}, this.action );\n\n            this.unlockAction();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    @HostListener( 'window:beforeunload' )\n    canDeactivate(): Observable<boolean> | boolean {\n        if ( this.isEditing ) {\n            //event.preventDefault();\n            //event.returnValue = 'Are you sure?';\n            //return 'Are you sure?';\n\n            return false;\n        }\n\n        return true;\n    }\n\n    afterDeactivate( isDeactivating: boolean ) {\n        if ( isDeactivating && this.isEditing ) {\n            this.unlockActionSync();\n        }\n    }\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.isEditing = true;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.isEditing = false;\n\n            this.action = this.original;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n    onSelect( action: AddChildAction ) {\n        this.action = action;\n    }\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childId\" [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childTypeCode\" [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.parentid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentId\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentTypeCode\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.hierarchycode.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.hierarchyTypeCode\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\">\n            <localize key=\"change.request.status\"></localize> :\n        </label>\n        <select style=\"float:none;\" [ngClass]=\"{'status-rejected': action.approvalStatus === 'REJECTED', 'status-accepted': action.approvalStatus === 'ACCEPTED', 'status-pending': action.approvalStatus === 'PENDING'}\" [(ngModel)]=action.approvalStatus   [disabled]=\"isEditing\">\n            <option value=\"REJECTED\">\n                <localize key=\"change.request.status.rejected\"></localize>\n            </option>\n            <option value=\"ACCEPTED\">\n                <localize key=\"change.request.status.accepted\"></localize>\n            </option>\n            <option value=\"PENDING\">\n                <localize key=\"change.request.status.pending\"></localize>\n            </option>\n        </select>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\"  disabled></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n        \n    </div>\n</div>","import { GeoObjectOverTime, HierarchyOverTime } from './registry';\n\nexport class ChangeRequest {\n\toid: string;\n\tcreatedBy: string;\n\tcreateDate: Date;\n\tapprovalStatus: string;\n\tstatusLabel?: string;\t\n\ttotal: number;\n\tpending: number;\n\tdocuments: Document[];\n\tphoneNumber?: string;\n\temail?: string;\n\tpermissions?: string[];\n}\n\nexport class Document {\n\tfileName: string;\n\toid: string;\n}\n\nexport class AbstractAction {\n\tapprovalStatus: string;\n\tcreateActionDate: Date;\n\tlabel: string;\n\toid: string;\n\tactionType: string;\n\tactionLabel: string;\n\tdecisionMaker?: string;\n\tdocuments: Document[];\n}\n\nexport class UpdateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class CreateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class AddChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyTypeCode: string;\n\tcontributorNotes: string;\n\tmaintainerNotes: string;\n\tcreatedBy: string;\n}\n\nexport class RemoveChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyCode: string;\n}\n\nexport class GovernanceStatus {\n\tkey: string;\n\tlabel: string;\n}\n\nexport class PageEvent {\n\ttype: string;\n\tdata: any;\n}\n\nexport class SetParentAction extends AbstractAction {\n\tchildCode: string;\n\tchildTypeCode: string;\n\tjson: HierarchyOverTime[];\n}\n\n","import { Input, Component, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\nimport { ManageParentVersionsModalComponent } from '@registry/component/cascading-geo-selector/manage-parent-versions-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component({\n\n\tselector: 'set-parent-detail',\n\ttemplateUrl: './set-parent-detail.component.html',\n\tstyleUrls: [],\n\tencapsulation: ViewEncapsulation.None\n})\n// export class SetParentDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\nexport class SetParentDetailComponent implements ActionDetailComponent {\n\n\t@Input() action: any;\n\n\thierarchies: HierarchyOverTime[] = [];\n\t\n\t@Input() readOnly: boolean;\n\t\n\tisEditing: boolean = false;\n\n\tbsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tconstructor(private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private authService: AuthService) {\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tconst month = this.forDate.getUTCMonth();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (month < 10 ? \"0\" : \"\") + (month + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.hierarchies = this.action.json;\n\n\t\tthis.onSelect(this.action);\n\t}\n\n\tapplyAction() {\n\t\tvar action = JSON.parse(JSON.stringify(this.action));\n\n\t\tthis.changeRequestService.applyAction(action).then(response => {\n\t\t\tthis.endEdit();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tonSelect(action: AbstractAction) {\n\n\t}\n\n\tonManageVersions(hierarchy: HierarchyOverTime): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(hierarchy);\n\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\t\t\n\t\t\tif(index !== -1) {\n\t\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t// Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n\t//@HostListener('window:beforeunload')\n\t//canDeactivate(): Observable<boolean> | boolean {\n\t//\tif (this.isEditing) {\n\t//\t\t//event.preventDefault();\n\t//\t\t//event.returnValue = 'Are you sure?';\n\t//\t\t//return 'Are you sure?';\n\n\t//\t\treturn false;\n\t//\t}\n\n\t//\treturn true;\n\t//}\n\n\t//afterDeactivate(isDeactivating: boolean) {\n\t//\tif (isDeactivating && this.isEditing) {\n\t//\t\tthis.unlockActionSync();\n\t//\t}\n\t//}\n\n\tstartEdit(): void {\n\t\tthis.lockAction();\n\t}\n\n\tpublic endEdit(): void {\n\t\tthis.unlockAction();\n\t}\n\n\tlockAction() {\n\t\tthis.changeRequestService.lockAction(this.action.oid).then(response => {\n\t\t\tthis.isEditing = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tunlockAction() {\n\t\tthis.changeRequestService.unlockAction(this.action.oid).then(response => {\n\t\t\tthis.isEditing = false;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n\tunlockActionSync() {\n\t\t$.ajax({\n\t\t\turl: acp + '/changerequest/unlockAction',\n\t\t\tmethod: \"POST\",\n\t\t\tdata: { actionId: this.action.oid },\n\t\t\tsuccess: function(a) {\n\n\t\t\t},\n\t\t\tasync: false\n\t\t});\n\t}\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n        <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"null\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEditing\" (onManageVersion)=\"onManageVersions($event)\"> </tree-geo-selector>\n            \n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" [disabled]=\"readOnly || !isEditing\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { IOService } from '@registry/service';\nimport { AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-export',\n    templateUrl: './data-export.component.html',\n    styleUrls: []\n} )\nexport class DataExportComponent implements OnInit {\n\n    /*\n     * List of geo object types from the system\n     */\n    types: { label: string, code: string }[]\n\n    /*\n     * Currently selected code\n     */\n    code: string = null;\n\n    /*\n     * List of the hierarchies this type is part of\n     */\n    hierarchies: { label: string, code: string }[] = [];\n\n    /*\n     * Currently selected hierarchy\n     */\n    hierarchy: string = null;\n\n    /*\n     * Currently selected format\n     */\n    format: string = null;\n\n\n    /*\n     * Reference to the modal current showing\n     */\n    bsModalRef: BsModalRef;\n\n\n    constructor( private service: IOService, private modalService: BsModalService, private authService: AuthService ) { }\n\n    ngOnInit(): void {\n        this.service.listGeoObjectTypes( true ).then( types => {\n        \n            //this.types = types;\n            \n            var myOrgTypes = [];\n            for (var i = 0; i < types.length; ++i)\n            {\n              if (this.authService.isOrganizationRA(types[i].orgCode))\n              {\n                myOrgTypes.push(types[i]);\n              }\n            }\n            this.types = myOrgTypes;\n\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    onChange( code: string ): void {\n\n        if ( code != null && code.length > 0 ) {\n            this.service.getHierarchiesForType( code, false ).then( hierarchies => {\n                this.hierarchies = hierarchies;\n                this.hierarchy = null;\n            } ).catch(( err: HttpErrorResponse) => {\n                this.error( err );\n            } );\n        }\n        else {\n            this.hierarchies = [];\n            this.hierarchy = null;\n        }\n\n    }\n\n    onExport(): void {\n\n        if ( this.format == 'SHAPEFILE' ) {\n            window.location.href = acp + '/shapefile/export-shapefile?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n        else if ( this.format == 'EXCEL' ) {\n            window.location.href = acp + '/excel/export-spreadsheet?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n}\n","<!-- <div class=\"new-admin-design-main\"> -->\n    <!-- <cgr-header></cgr-header> -->\n    <loading-bar></loading-bar>\n\n    <!-- <div id=\"app-container\" class=\"container\">\n        <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"io.export.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"io.export.description\"></localize>\n            </p>\n        </div> -->\n\n        <!-- <div class=\"row\">\n            <div class=\"col-md-2\"></div>\n            <div class=\"col-md-8\" *ngIf=\"types\"> -->\n                <form #form=\"ngForm\" *ngIf=\"types\">\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"code\">\n                            <localize key=\"io.geoObjectType\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" (change)=\"onChange($event.target.value)\"\n                                required>\n                                <option></option>\n                                <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\" *ngIf=\"hierarchies.length > 0\">\n                        <label class=\"col-sm-3 text-right\">\n                            <localize key=\"io.modal.hierarchy\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"hierarchy\" required>\n                                <option></option>\n                                <option *ngFor=\"let hierarchy of hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"format\">\n                            <localize key=\"io.format\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                                <option></option>\n                                <option value=\"EXCEL\">\n                                    <localize key=\"io.spreadsheet\"></localize>\n                                </option>\n                                <option value=\"SHAPEFILE\">\n                                    <localize key=\"io.shapefile\"></localize>\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-12 text-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onExport()\">\n                                <localize key=\"io.export\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            <!-- </div>\n            <div class=\"col-md-2\"></div> -->\n        <!-- </div>\n    </div>\n</div> -->\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\n@Pipe({\n  name: 'geoobjecttype',\n  pure: false\n})\nexport class GeoObjectTypePipe implements PipeTransform {\n  transform(items: GeoObjectType[], filter: HierarchyNode[]): any {\n\t  if (!items || !filter) {\n          return items;\n      }\n\t  \n\t  let unassignedGeoObjTypes:string[] = [];\n      this.buildUnassignedGeoObjTypes(filter, unassignedGeoObjTypes)\n      \n      // filter items array, items which match and return true will be\n      // kept, false will be filtered out\n      return items.filter(item => unassignedGeoObjTypes.indexOf(item.code) === -1);\n  }\n  \n  buildUnassignedGeoObjTypes(filter: HierarchyNode[], unassignedGeoObjTypes: string[]): void{\n\t  filter.forEach(f => {\n\t\t  this.processHierarchyNodes(f, unassignedGeoObjTypes);\n\t  })\n  }\n  \n  processHierarchyNodes(node: HierarchyNode, unassignedGeoObjTypes: string[]){\n\t  unassignedGeoObjTypes.push(node.geoObjectType)\n\t  \n\t  node.children.forEach(child => {\n\t\t  this.processHierarchyNodes(child, unassignedGeoObjTypes);\n\t  })\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toEpochDateTime',\n    pure: true\n})\nexport class ToEpochDateTimePipe implements PipeTransform {\n    transform(date: string): any {\n        if (!date ) {\n            return date;\n        }\n       \n        return new Date(date).getTime();\n    }\n}","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\n\nimport { MaintainerGuard, ContributerGuard, AuthGuard } from '../shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'hierarchies',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'data',\n        component: DataPageComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'change-requests',\n        component: ChangeRequestPageComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'change-requests/:oid',\n        component: ChangeRequestPageComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'master-lists',\n        component: MasterListManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'scheduled-jobs',\n        component: ScheduledJobsComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'job/:oid',\n        component: JobComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'master-list/:oid/:published',\n        component: MasterListComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'master-list-view/:oid',\n        component: MasterListViewComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'change-request',\n        component: SubmitChangeRequestComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'tasks',\n        component: TaskViewerComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'synchronization-configs',\n        component: SynchronizationConfigManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'synchronization-config/:oid',\n        component: SynchronizationConfigComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'location-manager',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n\t  {\n        path: 'location-manager/:geoobjectuid/:geoobjecttypecode/:datestr/:hideSearchOptions',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'location-manager/:geoobjectuid/:geoobjecttypecode/:datestr/:hideSearchOptions/:backReference',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code/:editOnly',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code/:editOnly/:backReference',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'sync/details/:oid',\n        component: SyncDetailsComponent,\n        canActivate: [MaintainerGuard]\n    },\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class RegistryRoutingModule { }"],"sourceRoot":""}