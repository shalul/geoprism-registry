{"version":3,"sources":["webpack:///./src/app/registry/registry.module.ts","webpack:///./src/app/registry/service/index.ts","webpack:///./src/app/registry/model/io.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.ts","webpack:///./src/app/registry/component/form-fields/localized-text/localized-text.component.html","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.ts","webpack:///./src/app/registry/component/hierarchy/hierarchy.component.html","webpack:///./src/app/registry/service/geoobjecttype-management.service.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/attribute-input.component.html","webpack:///./src/app/registry/component/master-list/publish-modal.component.ts","webpack:///./src/app/registry/component/master-list/publish-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component.html","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.ts","webpack:///./src/app/registry/component/form-fields/localized-input/localized-input.component.html","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/simple-edit-control/simple-edit-control.component.html","webpack:///./src/app/registry/service/change-request.service.ts","webpack:///./src/app/registry/service/hierarchy.service.ts","webpack:///./src/app/registry/service/io.service.ts","webpack:///./src/app/registry/service/localization-manager.service.ts","webpack:///./src/app/registry/service/map.service.ts","webpack:///./src/app/registry/service/registry.service.ts","webpack:///./src/app/registry/service/synchronization-config.service.ts","webpack:///./src/app/registry/service/task.service.ts","webpack:///./src/app/registry/component/hierarchy/d3/svg-util.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.ts","webpack:///./src/app/registry/component/importer/modals/attributes-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-page.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem-page.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem-page.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions.component.html","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.ts","webpack:///./src/app/registry/component/geoobject-editor-map/geoobject-editor-map.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions-modal.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.ts","webpack:///./src/app/registry/component/cascading-geo-selector/manage-parent-versions.component.html","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.ts","webpack:///./src/app/registry/component/tree-geo-selector/tree-geo-selector.html","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.ts","webpack:///./src/app/registry/component/submit-change-request/submit-change-request.component.html","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.ts","webpack:///./src/app/registry/component/geoobject-editor/geoobject-editor.component.html","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/step-indicator.component.html","webpack:///./src/app/registry/component/location-manager/layer-panel.component.ts","webpack:///./src/app/registry/component/location-manager/layer-panel.component.html","webpack:///./src/app/registry/component/location-manager/feature-panel.component.ts","webpack:///./src/app/registry/component/location-manager/feature-panel.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-hierarchy-type-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/create-geoobjtype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/manage-geoobjecttype-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/geoobjecttype-input.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-attributes-modal.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component.html","webpack:///./src/app/registry/factory/form-validation.factory.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/term-option-widget.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/manage-term-options.component.html","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.ts","webpack:///./src/app/registry/component/hierarchy/geoobjecttype-management/edit-term-option-input.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-type.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/shapefile-modal.component.html","webpack:///./src/app/registry/component/importer/modals/location-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/location-problem.component.html","webpack:///./src/app/registry/component/importer/modals/term-problem.component.ts","webpack:///./src/app/registry/component/importer/modals/term-problem.component.html","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.ts","webpack:///./src/app/registry/component/importer/modals/spreadsheet-modal.component.html","webpack:///./src/app/registry/component/data-page/data-page.component.ts","webpack:///./src/app/registry/component/data-page/data-page.component.html","webpack:///./src/app/registry/component/importer/dataimporter.component.ts","webpack:///./src/app/registry/component/importer/dataimporter.component.html","webpack:///./src/app/registry/component/master-list/master-list-manager.component.ts","webpack:///./src/app/registry/component/master-list/master-list-manager.component.html","webpack:///./src/app/registry/component/master-list/export-format-modal.component.ts","webpack:///./src/app/registry/component/master-list/export-format-modal.component.html","webpack:///./src/app/registry/component/crtable/request-table.component.ts","webpack:///./src/app/registry/component/crtable/request-table.component.html","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/action-detail-modal.component.html","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.ts","webpack:///./src/app/registry/component/geoobject-shared-attribute-editor/manage-versions-modal.component.html","webpack:///./src/app/registry/pipe/geoobject-attribute-excludes.pipe.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.ts","webpack:///./src/app/registry/component/change-request-page/change-request-page.component.html","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.ts","webpack:///./src/app/registry/component/cascading-geo-selector/cascading-geo-selector.html","webpack:///./src/app/registry/component/master-list/master-list.component.ts","webpack:///./src/app/registry/component/master-list/master-list.component.html","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/published-master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-history.component.ts","webpack:///./src/app/registry/component/master-list/master-list-history.component.html","webpack:///./src/app/registry/component/master-list/master-list-view.component.ts","webpack:///./src/app/registry/component/master-list/master-list-view.component.html","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/scheduled-jobs.component.html","webpack:///./src/app/registry/component/scheduled-jobs/job.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/job.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/job-conflict-modal.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/import-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component.html","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.ts","webpack:///./src/app/registry/component/scheduled-jobs/conflict-widgets/reupload-modal.component.html","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.ts","webpack:///./src/app/registry/component/task-viewer/task-viewer.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-manager.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config-modal.component.html","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.ts","webpack:///./src/app/registry/component/synchronization-config/synchronization-config.component.html","webpack:///./src/app/registry/component/synchronization-config/details.component.ts","webpack:///./src/app/registry/component/synchronization-config/details.component.html","webpack:///./src/app/registry/component/location-manager/location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/location-manager.component.html","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.ts","webpack:///./src/app/registry/component/location-manager/context-layer-modal.component.html","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.ts","webpack:///./src/app/registry/component/location-manager/geometry-panel.component.html","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.ts","webpack:///./src/app/registry/component/location-manager/dataset-location-manager.component.html","webpack:///./src/app/registry/component/hierarchy/d3/svg-hierarchy-node.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.ts","webpack:///./src/app/registry/component/hierarchy/modals/add-child-to-hierarchy-modal.component.html","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/create-update-geo-object/detail.component.html","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/add-remove-child/detail.component.html","webpack:///./src/app/registry/model/crtable.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.ts","webpack:///./src/app/registry/component/crtable/action-detail/set-parent/set-parent-detail.component.html","webpack:///./src/app/registry/component/data-export/data-export.component.ts","webpack:///./src/app/registry/component/data-export/data-export.component.html","webpack:///./src/app/registry/pipe/geoobjecttype.pipe.ts","webpack:///./src/app/registry/pipe/to-epoch-date-time.pipe.ts","webpack:///./src/app/registry/registry-routing.module.ts"],"names":["RegistryModule","MapService","HierarchyService","LocalizationManagerService","ChangeRequestService","IOService","GeoObjectTypeManagementService","RegistryService","TaskService","DatePipe","ToEpochDateTimePipe","StepIndicatorComponent","SynchronizationConfigService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","TabsModule","CollapseModule","NgxPaginationModule","SharedModule","RegistryRoutingModule","AccordionModule","forRoot","HierarchyComponent","RequestTableComponent","CreateUpdateGeoObjectDetailComponent","AddRemoveChildDetailComponent","SetParentDetailComponent","CreateHierarchyTypeModalComponent","AddChildToHierarchyModalComponent","CreateGeoObjTypeModalComponent","ManageAttributesModalComponent","DefineAttributeModalContentComponent","ShapefileModalComponent","AttributesPageComponent","LocationPageComponent","LocationProblemPageComponent","LocationProblemComponent","TermProblemPageComponent","TermProblemComponent","SpreadsheetModalComponent","GeoObjectTypePipe","GeoObjectAttributeCodeValidator","EditAttributeModalContentComponent","TermOptionWidgetComponent","AttributeInputComponent","EditTermOptionInputComponent","ManageGeoObjectTypeModalComponent","GeoObjectTypeInputComponent","ManageTermOptionsComponent","LocalizedInputComponent","LocalizedTextComponent","GeoObjectSharedAttributeEditorComponent","ManageVersionsComponent","ManageVersionsModalComponent","SubmitChangeRequestComponent","GeoObjectEditorComponent","GeoObjectAttributeExcludesPipe","GeoObjectEditorMapComponent","SimpleEditControl","DataPageComponent","ChangeRequestPageComponent","CascadingGeoSelector","TreeGeoSelector","ManageParentVersionsModalComponent","ManageParentVersionsComponent","ActionDetailModalComponent","DataImporterComponent","DataExportComponent","MasterListManagerComponent","MasterListComponent","MasterListHistoryComponent","PublishedMasterListHistoryComponent","PublishModalComponent","MasterListViewComponent","ExportFormatModalComponent","ScheduledJobsComponent","JobComponent","JobConflictModalComponent","ReuploadModalComponent","ParentReferenceProblemWidgetComponent","TermReferenceProblemWidgetComponent","RowValidationProblemWidgetComponent","ImportProblemWidgetComponent","TaskViewerComponent","SynchronizationConfigManagerComponent","SynchronizationConfigModalComponent","SynchronizationConfigComponent","SyncDetailsComponent","LocationManagerComponent","DatasetLocationManagerComponent","ContextLayerModalComponent","LayerPanelComponent","FeaturePanelComponent","GeometryPanelComponent","NgModule","imports","declarations","providers","entryComponents","services","ImportSheet","Location","Term","TermProblem","LocationProblem","Exclusion","Synonym","ImportConfiguration","key","disabled","inlinelayout","valueChange","EventEmitter","Component","selector","templateUrl","styleUrls","Input","value","Output","TREE_SCALE_FACTOR_X","TREE_SCALE_FACTOR_Y","DEFAULT_NODE_FILL","DEFAULT_NODE_BANNER_COLOR","INHERITED_NODE_FILL","INHERITED_NODE_BANNER_COLOR","RELATED_NODE_BANNER_COLOR","Instance","hierarchyService","modalService","contextMenuService","localizeService","registryService","authService","userOrganization","currentHierarchy","instance","geoObjectTypes","hierarchiesByOrg","typesByOrg","filter","filteredHierarchiesByOrg","filteredTypesByOrg","hierarchyTypeDeleteExclusions","geoObjectTypeDeleteExclusions","_opened","isSRA","options","displayField","actionMapping","mouse","click","tree","node","$event","treeNodeOnClick","contextMenu","handleOnMenu","this","ngOnInit","refreshAll","fromEvent","searchInput","nativeElement","pipe","Boolean","debounceTime","distinctUntilChanged","tap","onFilterChange","subscribe","localize","decode","renderTree","rootGeoObjectTypes","length","d3","select","remove","forEach","got","canDrag","overflowDiv","scrollLeft","scrollRight","svg","append","attr","primarySvgHierarchy","SvgHierarchyType","render","calculateSvgViewBox","overflowDiv2","calculateCanDrag","getBBox","x","y","width","height","xPadding","yPadding","style","hierarchyComponent","isOrganizationRA","organizationCode","isGeoObjectTypeRM","hierarchyType","code","getNodeByCode","isAbstract","child","superTypeCode","calculateRelatedHierarchies","relatedHiers","i","hierarchies","hierarchy","descendants","find","data","geoObjectType","inheritedHierarchyCode","push","registerDragHandlers","deltaX","deltaY","that","dropTargets","dropSelector","onDrag","dragEl","dropEl","emptyHierarchyDropZone","closest","onDrop","addChild","mouseTarget","event","clearDropZones","lastDropEl","svgMousePoint","svgPoint","sourceEvent","pageX","pageY","getD3Tree","isPointWithin","dropZoneBbox","activeDropZones","parent","gotRectW","gotRectH","clearGhostNodes","isDragGroup","classed","dropNode","isDropGroup","findGeoObjectTypeByCode","dropElX","parseInt","dropElY","childW","childH","dzg","dropTargetHasChildren","children","isChildDZActive","childDzBacker","childDz","addChildLabel","childDzText","calculateTextWidth","text","parentDzBacker","gotHeaderH","parentDz","addParentLabel","parentDzText","ghostCode","parentIndex","addSiblingLabel","splice","ghostingCode","label","siblingGhostBody","getBboxFromSelection","activeDz","dragGot","youngest","insertBetweenTypes","ghostNode","drag","on","rect","getBoundingClientRect","left","top","selThis","target","document","elementFromPoint","selectAll","each","sidebarDragHandler","registerSvgHandlers","startPoint","svgGot","getPos","setPos","split","svgDragHandler","findHierarchyByCode","ht","findOrganizationByCode","organizations","org","hierarchyCode","parentGeoObjectTypeCode","childGeoObjectTypeCode","addChildToHierarchy","then","index","relatedHierarchies","refreshPrimaryHierarchy","catch","err","error","middleGeoObjectTypeCode","youngestGeoObjectTypeCode","ngAfterViewInit","isRA","orgCode","dropZone","getTypesByOrg","orgTypes","getHierarchiesByOrg","orgHierarchies","desiredHierarchy","init","response","setLocales","locales","setGeoObjectTypes","types","pos","getGeoObjectTypePosition","setHierarchies","setNodesOnInit","updateViewDatastructures","setAbstractTypes","type","sort","a","b","localizedValue","toLowerCase","setType","excludeHierarchyTypeDeletes","indexOf","excludeGeoObjectTypeDeletes","findIndex","h","setCurrentHierarchy","getHierarchy","hierarchyId","rootGeoObjectType","processHierarchyNodes","getHierarchyLabel","geoObjectTypeCode","gOT","show","next","childType","nodeMenuComponent","leafMenuComponent","item","preventDefault","stopPropagation","treeModel","setFocusedNode","isExpanded","collapse","expandAll","hierarchyOnClick","createHierarchy","bsModalRef","animated","backdrop","ignoreBackdropClick","content","onHierarchytTypeCreate","nameA","toUpperCase","nameB","deleteHierarchyType","obj","ConfirmModalComponent","message","submitText","onConfirm","removeHierarchyType","editHierarchyType","readOnly","edit","getHierarchyTypePosition","description","progress","acknowledgement","disclaimer","useConstraints","accessConstraints","contact","phoneNumber","email","isPrimaryHierarchy","createGeoObjectType","groupSuperType","onGeoObjTypeCreate","deleteGeoObjectType","ModalTypes","danger","removeGeoObjectType","errCallback","manageGeoObjectType","attributes","onGeoObjectTypeSubmitted","position","removeFromHierarchy","parentGotCode","gotCode","isActive","filtered","setTimeout","handleInheritHierarchy","hierarchyTypeCode","inheritedHierarchyTypeCode","setInheritedHierarchy","handleUninheritHierarchy","removeInheritedHierarchy","ErrorHandler","showErrorAsDialog","ViewChild","static","modalStateChangedSource","Subject","modalStepChange","asObservable","getModalState","modalState","setModalState","state","Injectable","cdr","disableCodeField","excludeDescription","isDecimal","attributeChange","detectChanges","ngOnChanges","ngOnDestroy","handleOnSubmit","toggleIsUnique","attribute","unique","animate","onAnimationDone","isValid","localeValues","console","log","precision","toString","scale","trigger","transition","animations","service","iService","lService","currentDate","Date","readonly","isNew","onMasterListChange","master","listGeoObjectTypes","myOrgTypes","typeCode","oid","displayLabel","create","representativityDate","publishingStartDate","publishDate","listAbstract","process","acknowledgements","contactName","organization","telephoneNumber","subtypeHierarchies","leaf","frequency","isMaster","visibility","getIsDisabled","elClasses","classList","onChange","getHierarchiesForType","getHierarchiesForSubtypes","onSubmit","createMasterList","hide","onCancel","getMessageFromError","isContributorOnly","preGeoObject","postGeoObject","calculatedPreObject","calculatedPostObject","attributeExcludes","forDate","isEditingGeometries","isGeometryInlined","valid","onManageVersion","customEvent","modifiedTermOption","currentTermOption","geoObjectAttributeExcludes","isContributerOnly","apply","geomAttr","geometry","Attribute","LocalizedValue","attributeForm","statusChanges","result","emit","changes","GeoObjectOverTime","JSON","parse","stringify","calculate","setBoolean","calculateCurrent","geometryEditor","reload","goot","object","time","getTime","startDate","endDate","isChangeOverTime","values","vot","formatDate","Array","isArray","date","formatDateForDisplay","handleChangeCode","e","onManageAttributeVersions","geoObjectOverTime","isNewGeoObject","onAttributeVersionChange","versionObj","onManageGeometryVersions","isDifferentText","trim","isDifferentValue","onSelectPropertyOption","option","getGeoObjectTypeTermAttributeOptions","termAttributeCode","attrOpts","rootTerm","removeStatuses","isStatusChanged","post","pre","preCompare","postCompare","getTypeDefinition","getIsValid","getGeoObject","opacity","arr","newArray","formatDateString","dateObj","day","getUTCDate","month","getUTCMonth","getUTCFullYear","dateRangeOverlaps","a_start","a_end","b_start","b_end","dateEndBeforeStart","start","end","hasGap","elRef","editEmitter","visible","editSessionEnabled","save","onAdd","map","onRemove","onClick","http","eventService","getAllActions","requestId","params","HttpParams","set","get","acp","finalize","toPromise","applyAction","action","headers","HttpHeaders","complete","applyActionStatusProperties","lockAction","actionId","unlockAction","getAllRequests","getRequestDetails","confirmChangeRequest","execute","delete","rejectAllActions","actions","approveAllActions","submitChangeRequest","deleteFile","fileId","actionOid","vfOid","getHierarchyTypes","createHierarchyType","htJSON","updateHierarchyType","importSpreadsheet","configuration","json","cancelImport","importShapefile","includeAbstractTypes","getTypeAncestors","includeInheritedTypes","includeTypes","getGeoObjectSuggestions","createGeoObjectSynonym","entityId","deleteGeoObjectSynonym","synonymId","vOid","getTermSuggestions","mdAttributeId","limit","createTermSynonym","classifierId","deleteTermSynonym","createTerm","parentTermCode","termJSON","removeTerm","termCode","getNewLocaleInfo","installLocale","language","country","variant","mapboxgl","accessToken","roots","search","getGeoObjectTypes","getParentGeoObjects","childId","childTypeCode","parentTypes","recursive","getChildGeoObjects","parentId","parentTypeCode","childrenTypes","newGeoObjectInstance","gtJSON","updateGeoObjectType","addAttributeType","geoObjTypeId","updateAttributeType","deleteAttributeType","attributeName","addAttributeTermTypeOption","term","updateAttributeTermTypeOption","deleteAttributeTermTypeOption","id","getGeoObjectBounds","getGeoObjectBoundsAtDate","getGeoObjectByCode","getHierarchiesForGeoObject","getGeoObjectSuggestionsTypeAhead","getScheduledJobs","pageSize","pageNumber","sortAttr","isAscending","getCompletedScheduledJobs","getScheduledJob","historyId","onlyUnresolved","getExportDetails","resolveScheduledJob","submitValidationResolve","config","submitErrorResolve","getMasterLists","getMasterListHistory","versionType","getAllMasterListVersions","getMasterListVersion","getLocales","getGeoObjectOverTime","geoObjectCode","newGeoObjectOverTime","setAttributeVersions","collection","list","createMasterListVersion","publishMasterListVersions","deleteMasterList","deleteMasterListVersion","publishMasterList","getMasterList","applyGeoObjectEdit","parentTreeNode","geoObject","masterListId","notes","prop","val","valueAttribute","publishShapefile","getMasterListsByOrg","getPublishMasterListJobs","getDatasetBounds","getOrganizations","getPage","getCustomAttrCfg","externalId","getConfigForES","externalSystemId","unlock","run","getJobs","getMyTasks","pageNum","whereStatus","completeTask","taskId","setTaskStatus","status","point","bbox","fontSize","pt","createSVGPoint","matrixTransform","getScreenCTM","inverse","bbox1","bbox2","selection","configurationChange","stateChange","onNext","locations","onBack","hasProblems","locationProblems","resolved","handleError","exclusions","problem","name","exclusion","termProblems","attributeCode","changeDetectorRef","isValidChange","editingGeometry","hasDuplicateDate","hasConflict","originalGeoObjectOverTime","geometryChange","vAttribute","checkDateFieldValidity","dateFields","dateFieldComponentsArray","toArray","onDateChange","vAttributes","j","h1","conflictMessage","s1","e1","h2","s2","e2","current","onAddNewVersion","votArr","ValueOverTime","geometryType","terms","editGeometry","getVersionData","versions","getDefaultLocaleVal","locale","defVal","locVal","version","host","ViewChildren","geoObjectOverTimeInput","mapService","onClickEdit","mapDiv","Math","floor","random","Map","container","zoom","center","initMap","onValidChange","removeLayers","addLayers","editingControl","getAll","features","saveDraw","preGeometry","zoomToBbox","addControl","NavigationControl","addEditButton","enableEditing","simpleEditControl","controls","line_string","polygon","trash","combine_features","uncombine_features","postGeometry","add","removeSource","prefix","sourceName","removeLayer","getSource","renderGeometryAsLayer","color","addSource","addLayer","setData","bboxCode","bboxType","bboxDate","boundArr","bounds","LngLatBounds","fitBounds","padding","featureCollection","polygons","feature","coordinates","points","lines","onVersionChange","handleVersionChange","loading","originalHierarchy","entries","entry","parents","getTypeAheadObservable","parentCode","pType","properties","Observable","observer","loopI","goCode","results","typeaheadOnSelect","uid","ancestors","ancestor","format","moment","localeData","longDateFormat","setInfinity","hierarchyOverTime","PRESENT","nodes","isExpandedField","idField","pot","expanded","onEdit","changeRequestService","geoObjectId","reason","showGeoObjectDetails","dataSource","isGeoObjectTypeRC","newValid","attributeEditor","changeTypeaheadLoading","submit","goSubmit","cancel","SuccessModalComponent","tabIndex","submitFunction","arePropertiesValid","areParentsValid","dateStr","isAdmin","isMaintainer","isContributor","isContributer","findVotWithStartDate","votArray","setMasterListId","handleDateChange","setOnSuccessCallback","func","onSuccessCallback","configureAsNew","isGeometryEditable","fetchGeoObjectType","fetchLocales","retJson","goPropertiesPre","goPropertiesPost","configureFromImportError","importError","importErrorId","resolution","configureAsExisting","fetchGeoObject","fetchHierarchies","typeTypeCode","ptn","parentSelector","changePage","nextPage","force","persistModelChanges","getHierarchies","_stepConfig","steps","layerChange","baseLayerChange","baselayerIconHover","lists","baseLayers","sprite","url","selected","contextLayerGroups","updateContextGroups","currentValue","previousValue","contextGroup","contextLayers","thisContextLayer","active","enabled","groupHasEnabledContextLayers","group","hasEnabled","cLayerGroup","cLayer","hasEnabledContextLayers","toggleContextLayer","layer","removeContextLayer","addContextLayerModal","toggleBaseLayer","bl","MODE","VERSIONS","ATTRIBUTES","HIERARCHY","GEOMETRY","_code","geometryEdit","featureChange","modeChange","mode","isEdit","updateCode","v","updateGeometry","setValid","setEditMode","onEditGeometryVersion","calculateGeometry","datasetId","onManageAttributeVersion","onManageHiearchyVersion","onAttributeChange","onHierarchyChange","onEditAttributes","auth","orgs","organizationLabel","getOrganizationLabelFromCode","isPrivate","toggleIsLeaf","isLeaf","toggleIsGeometryEditable","toggleIsAbstract","confirmBsModalRef","geoObjectTypeManagementService","GeoObjectTypeModalStates","modalStateSubscription","unsubscribe","onModalStateChange","onGeoObjectTypeChange","update","close","modalStepIndicatorService","localizationService","geoObjectTypeChange","modalStepConfig","editGeoObjectType","setStepConfig","fetchOrganizationLabel","manageAttributes","in","onDeleteAttribute","defineAttributeModal","defineAttribute","editAttribute","removeAttributeType","attributeType","newAttribute","setAttribute","attributeInputComponent","AttributeTerm","AttributeDecimal","isFormValid","isAttrValid","validator","c","geoObjectAttributeCode","validate","provide","NG_VALIDATORS","useExisting","multi","Directive","Object","assign","back","manageTermOption","openAddTermOptionForm","enableTermOptionForm","termOption","replace","addTermOption","clearTermOption","deleteTermOption","removeTermOption","editTermOption","cancelTermOption","t","svgEl","isPrimary","d3Hierarchy","d3Tree","nodeSize","separation","getCode","treeNode","SvgHierarchyNode","renderHierarchyHeader","hg","colHeaderLabel","colHeader","headerg","hierarchyLabelW","hierarchyLabelH","headerFontSize","hierarchyLabelY","lineWidth","textWidth","html","d","headerGBbox","getRelatedHierarchies","nodeMouseover","element","nodeMousemove","nodeTooltipBbox","documentElement","scrollHeight","scrollWidth","nodeMouseleave","descends","insert","gtree","links","join","source","gHeader","gotHeaderW","MOUSE_HOVER_EVENT_ENTER","MOUSE_HOVER_EVENT_MOVE","MOUSE_HOVER_EVENT_EXIT","gotHeaderFontSize","substring","arrowRectD","gArrow","gotBodyFontSize","gotOptionsButtonFontSize","renderRelatedHierarchiesMenu","router","onStateChange","handleBack","handleNext","handleCancel","postalCode","handleSubmit","cancelText","navigate","onError","entityLabel","hasSynonym","createSynonym","ignoreDataAtLocation","locationLabel","undoAction","termLabel","termId","createOption","ignoreValue","renderContent","pageTitle","sysService","showImportConfig","importStrategies","ImportStrategy","NEW_AND_UPDATE","NEW_ONLY","UPDATE_ONLY","isExternal","isLoading","copyBlank","getExternalSystems","paginatedSystems","externalSystems","resultSet","getUrl","queueLimit","removeAfterUpload","uploader","FileUploader","onBuildItemForm","fileItem","form","importStrategy","onBeforeUploadItem","onCompleteItem","fileRef","onSuccessItem","externalSystem","sys","onErrorItem","queue","uploadAll","setImportSource","onCreate","createDate","lastUpdateDate","write","read","onView","pair","ret","onDelete","onFormat","confirm","objectKeys","keys","requests","columns","filterCriteria","hasBaseDropZoneOver","sortable","refresh","targetActionId","documents","onUpload","onDownloadFile","fileOid","window","location","href","onDeleteFile","docPos","fileOverBase","onSelect","onExecute","changeRequest","request","firstGeoObject","getFirstGeoObjectInActions","hasOwnProperty","deletedRequestId","decisionMaker","approvalStatus","getUsername","onApproveAll","onRejectAll","requestTrackBy","toggle","parentElement","className","includes","toggleId","criteria","setActionStatus","getActiveDetailComponent","actionType","endsWith","showActionDetail","cr","curAction","permissions","encapsulation","ViewEncapsulation","None","cuDetail","endEdit","arDetail","spDetail","transform","items","Pipe","pure","cHierarchies","parentMap","onManageVersions","mainForm","pService","route","p","page","count","order","isPublished","isRefreshing","isWritable","searchPlaceholder","snapshot","paramMap","isCollapsed","onPageChange","baseUrl","hostname","port","notifier","webSocket","handleProgressChange","onSort","clearFilters","toggleFilter","getValues","base","unshift","total","f","s","handleInputChange","handleListChange","isFilterable","dependency","editModal","onPublish","onNewGeoObject","onExport","encodeURIComponent","onDeleteMasterListVersion","updateList","onViewMetadata","onPublishShapefile","onDownloadShapefile","isForDateValid","ioService","activeJobsPage","completeJobsPage","activeTimeCounter","completeTimeCounter","isViewAllOpen","onActiveJobsPageChange","pollingData","interval","onCompleteJobsPageChange","formatJobStatus","job","formatStepConfig","stepConfig","stage","getJobStatus","getCompletedStatus","jobStage","targetStage","jobPos","onViewAllCompleteJobs","onCancelScheduledJob","jobId","onResolveScheduledJob","allSelected","timeCounter","isPolling","hasRowValidationProblem","formatAffectedRows","rows","formatValidationResolve","onProblemResolved","getFriendlyProblemType","probType","onConflictAction","importErrors","problems","onViewAllActiveJobs","toggleAll","row","onReuploadAndResume","onProblemResolvedListener","onEditGeoObject","searchLabel","getString","conflict","getValidationProblemDisplayLabel","onIgnore","cfg","validationProblemId","onCreateSynonym","title","warning","errorMessage","taskService","inProgressTasks","completedTasks","onInProgressTasksPageChange","upper","str","onCompletedTasksPageChange","onCompleteTask","task","onMoveTaskToInProgress","onViewAllCompletedTasks","onSuccess","level","system","cOrg","cSystem","levelRows","orgUnitGroups","oIndex","sIndex","systems","esConfig","levels","levelRow","levelNum","isAttributeEditor","hasAttributes","onOrganizationSelected","onChangeExternalSystem","lvl","addLevel","len","removeLevel","levelRowIndex","editorIndex","getEditorIndex","newLevelNum","configureAttributes","onSelectGeoObjectType","getTermOptions","dhis2Id","dhis2Attrs","dhis2Attr","onChangeAttrMapping","newValue","attrCfg","attrs","attrCfgAttr","isDifferentGot","isOrgUnitGroup","onChangeTargetType","onRun","exportErrors","SEARCH","VIEW","vectorLayers","preventSingleClick","urlSubscriber","geoObjectUid","geoObj","protocol","attributionControl","changeMode","clearGeometryEditing","onModeChange","AttributionControl","compact","handleMapClickEvent","fc","zoomToFeature","addVectorLayer","handleBasemapStyle","baseLayer","setStyle","timer","maxZoom","onContextLayerChange","removeVectorLayer","tiles","navigator","deleteAll","removeControl","onGeometryEdit","addEditLayers","onMapSave","getDrawGeometry","groupHasContextLayers","hasCLayers","isVersionForHighlight","setDateAttribute","toolsIconHover","editOnly","llb","vLayer","prevLayer","onFeatureChange","setFilter","svgHierarchyType","dragging","getBbox","inheritNode","heritX","heritY","inheritBbox","uninheritNode","uninheritBbox","getTreeNode","hideRelatedHierarchy","existingSecondary","existingMenu","contextMenuGroup","hasActionsPermissions","titleLabel","actionsTitle","removeFromHierarchyLabel","noRelatedHierLabel","hideRelatedHierarchyLabel","uninheritLabel","inheritLabel","isSecondaryHierarchyRendered","numActions","removeWidth","hideRelatedWidth","uninheritWidth","existingSecondaryCode","secondaryHierarchy","relatedGotHasParents","inheritWidth","relatedHierarchyCode","relatedHierarchy","relatedHierarchyLabel","noHierLabelWidth","heightAdditions","widthPadding","renderSecondaryHierarchy","removeGotFromHierarchy","onClickUninheritHierarchy","onClickInheritHierarchy","myBbox","primaryHierBbox","gSecondary","paddingLeft","secondaryGot","secondaryGotBbox","gConnector","toRoot","onNodeChange","allGeoObjectTypes","gObj","selectedGeoObjectType","isEditing","geoObjectJson","startEdit","unlockActionSync","$","ajax","method","success","async","original","canDeactivate","afterDeactivate","isDeactivating","HostListener","ChangeRequest","Document","AbstractAction","UpdateGeoObjectAction","CreateGeoObjectAction","AddChildAction","RemoveChildAction","GovernanceStatus","PageEvent","SetParentAction","unassignedGeoObjTypes","buildUnassignedGeoObjTypes","routes","path","component","canActivate","AuthGuard","MaintainerGuard","ContributerGuard","LocationStrategy","useClass","HashLocationStrategy","forChild","exports"],"mappings":"mKAAA,WACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UAEA,UAEA,O,uCAGA,4B,wCAoJaA,I,iCAAAA,I,sCA9CD,CACV,GAAAC,WACA,GAAAC,iBACA,GAAAC,2BACA,GAAAC,qBACA,GAAAC,UACA,GAAAC,+BACA,GAAAC,gBACA,GAAAC,YACA,EAAAC,SACA,GAAAC,oBACA,GAAAC,uBACA,GAAAC,8BACA,SAlHQ,CACR,EAAAC,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBACA,GAAAC,gBAAgBC,c,EAnBlB,GAoJa,EAAA9B,mB,iEAAAA,GAAc,eA9HzB,EAAA+B,mBACA,EAAAC,sBACA,EAAAC,qCACA,EAAAC,8BACA,EAAAC,yBACA,EAAAC,kCACA,EAAAC,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAC,wBACA,EAAAC,wBACA,EAAAC,sBACA,EAAAC,6BACA,EAAAC,yBACA,EAAAC,yBACA,EAAAC,qBACA,EAAAC,0BACA,GAAAC,kBACA,GAAAC,gCACA,EAAAC,mCACA,EAAAC,0BACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,kCACA,EAAAC,4BACA,EAAAC,2BACA,EAAAC,wBACA,EAAAC,uBACA,EAAAC,wCACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,6BACA,GAAAC,yBACA,GAAAC,+BACA,GAAAvD,oBACA,GAAAwD,4BACA,GAAAC,kBACA,EAAAC,kBACA,EAAAC,2BACA,GAAAC,qBACA,GAAAC,gBACA,GAAAC,mCACA,GAAAC,8BACA,GAAAC,2BACA,EAAA3C,mBACA,GAAA4C,sBACA,GAAAC,oBAEA,EAAAC,2BACA,GAAAC,oBACA,GAAAC,2BACA,GAAAC,oCACA,EAAAC,sBACA,GAAAC,wBAEA,EAAAC,2BACA,GAAAC,uBACA,GAAAC,aACA,GAAAC,0BACA,GAAAC,uBACA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,oCACA,GAAA/E,uBACA,GAAAgF,6BACA,GAAAC,oBAEA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,+BACA,GAAAC,qBAEA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,2BACA,GAAAC,oBACA,GAAAC,sBACA,GAAAC,wBAAsB,SAlGtB,EAAAzF,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBAAqB,uB,gEAkIV5B,GAAc,E,KApJ1B,EAAAuG,S,MAAS,CACTC,QAAS,CACR,EAAA3F,aACA,EAAAC,aACA,EAAAC,YACA,EAAAC,oBACA,EAAAC,iBAEA,EAAAC,WACA,EAAAC,kBACA,EAAAC,iBACA,EAAAC,cACA,EAAAC,gBACA,EAAAC,kBACA,EAAAC,WACA,EAAAC,eACA,EAAAC,oBACA,GAAAC,aACA,GAAAC,sBACA,GAAAC,gBAAgBC,WAEjB2E,aAAc,CACb,EAAA1E,mBACA,EAAAC,sBACA,EAAAC,qCACA,EAAAC,8BACA,EAAAC,yBACA,EAAAC,kCACA,EAAAC,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAC,wBACA,EAAAC,wBACA,EAAAC,sBACA,EAAAC,6BACA,EAAAC,yBACA,EAAAC,yBACA,EAAAC,qBACA,EAAAC,0BACA,GAAAC,kBACA,GAAAC,gCACA,EAAAC,mCACA,EAAAC,0BACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,kCACA,EAAAC,4BACA,EAAAC,2BACA,EAAAC,wBACA,EAAAC,uBACA,EAAAC,wCACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,6BACA,GAAAC,yBACA,GAAAC,+BACA,GAAAvD,oBACA,GAAAwD,4BACA,GAAAC,kBACA,EAAAC,kBACA,EAAAC,2BACA,GAAAC,qBACA,GAAAC,gBACA,GAAAC,mCACA,GAAAC,8BACA,GAAAC,2BACA,EAAA3C,mBACA,GAAA4C,sBACA,GAAAC,oBAEA,EAAAC,2BACA,GAAAC,oBACA,GAAAC,2BACA,GAAAC,oCACA,EAAAC,sBACA,GAAAC,wBAEA,EAAAC,2BACA,GAAAC,uBACA,GAAAC,aACA,GAAAC,0BACA,GAAAC,uBACA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,oCACA,GAAA/E,uBACA,GAAAgF,6BACA,GAAAC,oBAEA,GAAAC,sCACA,GAAAC,oCACA,GAAAC,+BACA,GAAAC,qBAEA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,2BACA,GAAAC,oBACA,GAAAC,sBACA,GAAAC,wBAEDI,UAAW,CACV,GAAAzG,WACA,GAAAC,iBACA,GAAAC,2BACA,GAAAC,qBACA,GAAAC,UACA,GAAAC,+BACA,GAAAC,gBACA,GAAAC,YACA,EAAAC,SACA,GAAAC,oBACA,GAAAC,uBACA,GAAAC,8BAED+F,gBAAiB,CAChB,EAAAtE,kCACA,EAAAC,+BACA,EAAAC,+BACA,EAAAC,qCACA,EAAAW,mCACA,EAAAf,kCACA,EAAAK,wBACA,EAAAO,0BACA,EAAAI,0BACA,EAAAC,wBACA,EAAAC,6BACA,EAAAC,kCACA,EAAAC,4BACA,EAAAC,2BACA,EAAAG,wCACA,EAAAE,6BACA,GAAAU,mCACA,EAAAT,6BACA,GAAAC,yBACA,EAAAiB,sBACA,EAAAE,2BACA,EAAAf,kBACA,EAAAC,2BACA,GAAAK,2BACA,GAAAY,0BACA,GAAAC,uBACA,GAAA5E,uBACA,GAAAmF,oCACA,GAAAK,gC,kCA/EA,GAAAzB,2BAA0B,SA1C1B,EAAAzC,qCACA,EAAAC,8BACA,EAAAC,yBAAwB,2B,6aC1I1B,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEa,EAAAyE,SAAkB,CAC9B,EAAAxG,qBACA,EAAAE,+BACA,EAAAJ,iBACA,EAAAG,UACA,EAAAF,2BACA,EAAAF,WACA,EAAAM,gBACA,EAAAK,6BACA,EAAAJ,aAGD,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,a,qMC5BA,mBAAa,EAAAqG,cAUb,mBAAa,EAAAC,WAOb,mBAAa,EAAAC,OAKb,mBAAa,EAAAC,cAUb,mBAAa,EAAAC,kBAUb,mBAAa,EAAAC,YAKb,mBAAa,EAAAC,UAMb,mBAAa,EAAAC,uB,kHCvDb,W,GACA,O,0NCAA,0BACE,4BACE,4BACE,4BACE,4BACE,4BACE,4BACA,6BAA6B,iBAAO,qCAAkE,iBAAC,iBACzG,iBACF,iBACA,6BACE,8BACE,kCAAU,wEAAmG,iBAC/G,iBACF,iBACF,iBACF,iBACF,iBACF,kB,2CAjBO,6FACE,8EAEI,+EAES,yCAC6C,4CAGtD,+EAES,+CAA+B,sBAA/B,CAA+B,iCDVrD,iBAYI,aANgB,KAAAC,IAAc,GAEd,KAAAC,UAAoB,EACvB,KAAAC,cAAwB,EACpB,KAAAC,YAAc,IAAI,EAAAC,a,wCAL1B9D,I,iCAAAA,EAAsB,wVCPnC,gC,KAA6B,8C,0ODE7B,GAKa,EAAAA,0B,+DAAAA,EAAsB,E,KALlC,EAAA+D,U,MAAW,CACRC,SAAU,iBACVC,YAAa,kCACbC,UAAW,CAAC,6B,uBAGIR,IAAK,CAAF,C,KAAlB,EAAAS,QACeC,MAAO,CAAF,C,KAApB,EAAAD,QACeR,SAAU,CAAF,C,KAAvB,EAAAQ,QACYP,aAAc,CAAF,C,KAA3B,EAAAO,QACmBN,YAAW,E,KAA3B,EAAAQ,Y,qSEbL,WAEA,QACA,QAIA,GAHA,MAEA,OACA,QAEA,SACA,SACA,SAEA,SAEA,GADA,MACA,QAOA,GAFA,OAEA,QACA,S,qMCWS,6BACC,gCAAQ,mIAA6B,MAAM,EAAO,EAAF,QAE/C,6BACD,iBAE8B,gCAAQ,mIAA6B,MAAM,EAAM,EAAF,QAE3C,6BACJ,iBAC/B,kB,mDAWE,2BAEC,2I,uBAEgC,iB,KADhC,kE,mDAQgC,2BACI,qKAAmC,EAAO,EAAF,QAE5C,kB,mDAhBlC,8BAEC,6BAMA,2BACC,uIAAmC,M,uBAEH,iBAEA,6BAIlC,iB,+DAdG,sEAOD,+EAGoC,kD,mDAMtC,8BACC,2BACC,uIAAmC,M,uBACU,iBAC/C,iB,MADE,gF,+FA7BH,4BAKC,YAEA,gCAmBA,gCAKD,kB,4CA7BuD,0BAAgB,yFADrD,mGAA6G,0BAI9H,oEAEO,2EAmBA,6E,yBA7CV,4BACC,0BAEC,6BACC,4BAAO,YAAsC,iBAC9C,iBAEA,+BAYA,+BAgCD,iBACD,kB,2CAhDU,+DAGF,6EAc6B,gD,mDAiDnC,6BACC,gCAAQ,mGAEP,6BACD,iBACD,kB,mDASE,2BAEC,2I,uBAC8C,iB,KAA9C,kE,mDAJF,8BACC,6BAIA,2BACC,qIAAsC,M,uBACO,iBAC/C,iB,+DAPK,sEAMH,gF,mDAGF,8BACC,2BACC,qIAAsC,M,uBACO,iBAC/C,iB,MADE,gF,mGAnBH,4BAGC,0HACA,sBAA8B,YAE9B,gCAUA,gCAKD,iB,+CArB0D,0BAAqB,2GAIhD,oEAEvB,2EAUA,6E,yBA9BV,4BACC,0BAEC,6BACC,4BAAO,YAA2C,iBACnD,iBAEA,+BAOA,8BAsBD,iBACD,kB,2CAjCU,+DAGF,6EAOoB,sD,sBAiCb,6BAChB,6BACC,6BACC,2BACC,6BACD,iBACD,iBACD,iBACgB,kB,sBACA,0BACI,2BACI,6BACJ,iBACJ,kB,yBAdjB,0BACiB,+BASA,+BAKF,kB,6BAdQ,+FASA,iGDxHf,EAAAC,oBAA8B,IAC9B,EAAAC,oBAA8B,IAE9B,EAAAC,kBAAoB,UACpB,EAAAC,0BAA4B,UAC5B,EAAAC,oBAAsB,UACtB,EAAAC,4BAA8B,UAC9B,EAAAC,0BAA4B,EAAAD,4BAEzC,mBAAa,EAAAE,WAYb,iBAqFE,WAAYC,EAA4CC,EAC9CC,EACRC,EAA8CC,EAA0CC,GAF1F,WAAwD,KAAAJ,eAC9C,KAAAC,qBACsC,KAAAE,kBAA0C,KAAAC,cA/E1F,KAAAC,iBAA2B,KAG3B,KAAAC,iBAAkC,KAElC,KAAAC,SAAqB,IAAIT,EAGzB,KAAAU,eAAkC,GAElC,KAAAC,iBAA0E,GAC1E,KAAAC,WAA8D,GAE9D,KAAAC,OAAiB,GACjB,KAAAC,yBAAkF,GAClF,KAAAC,mBAAsE,GAGtE,KAAAC,8BAA0C,CAAC,YAAa,mBACxD,KAAAC,8BAA0C,CAAC,QAE3C,KAAAC,SAAmB,EAsBnB,KAAAC,OAAiB,EAMjB,KAAAC,QAAU,CAMRC,aAAc,QACdC,cAAe,CACbC,MAAO,CACLC,MAAO,SAACC,EAAWC,EAAWC,GAC5B,EAAKC,gBAAgBF,EAAMC,IAE7BE,YAAa,SAACJ,EAAWC,EAAWC,GAClC,EAAKG,aAAaJ,EAAMC,MAI9BJ,MAAO,IAePQ,KAAKZ,MAAQb,EAAYa,QAEzBY,KAAK9B,iBAAmBA,EACxB8B,KAAK3B,gBAAkBA,E,OAGzB,YAAA4B,SAAA,sBACED,KAAKE,WAAW,MAEhB,EAAAC,UAAUH,KAAKI,YAAYC,cAAe,SAASC,KAGjD,EAAAxB,OAAOyB,SACP,EAAAC,aAAa,KACb,EAAAC,uBACA,EAAAC,KAAI,WACF,EAAKC,qBAGPC,aAGJ,YAAAC,SAAA,SAAS/D,GACP,OAAOkD,KAAK3B,gBAAgByC,OAAOhE,IAG7B,YAAAiE,WAAR,sBACE,GAA6B,MAAzBf,KAAKvB,kBAAwE,MAA5CuB,KAAKvB,iBAAiBuC,oBAAiF,GAAnDhB,KAAKvB,iBAAiBuC,mBAAmBC,OAKhI,OAJAC,EAAGC,OAAO,QAAQC,cAClBpB,KAAKrB,eAAe0C,SAAQ,SAACC,GAC3BA,EAAIC,SAAU,KAKlBL,EAAGC,OAAO,mBAAmBC,SAC7BF,EAAGC,OAAO,6BAA6BC,SACvCF,EAAGC,OAAO,8BAA8BC,SAExC,IAAII,EAAmBN,EAAGC,OAAO,iBAAiBxB,OAC9C8B,EAAaD,EAAYC,WACzBC,EAAcF,EAAYE,YAE1BC,EAAMT,EAAGC,OAAO,QAEF,MAAdQ,EAAIhC,SACNgC,EAAMT,EAAGC,OAAO,cAAcS,OAAO,QACjCC,KAAK,KAAM,OAGjB7B,KAAK8B,oBAAsB,IAAI,EAAAC,iBAAiB/B,KAAM2B,EAAK3B,KAAKvB,kBAAkB,EAAMuB,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aACtIyB,KAAK8B,oBAAoBE,SAEzBhC,KAAKiC,sBAEL,IAAIC,EAAoBhB,EAAGC,OAAO,iBAAiBxB,OACnDuC,EAAaT,WAAaA,EAC1BS,EAAaR,YAAcA,EAI3B1B,KAAKrB,eAAe0C,SAAQ,SAACC,GAC3BA,EAAIC,QAAU,EAAKY,iBAAiBb,OAIxC,YAAAW,oBAAA,WACE,IAAIN,EAAWT,EAAGC,OAAO,QAGrB,EAFeQ,EAAIhC,OAEeyC,UAAhCC,EAAC,IAAEC,EAAC,IAAEC,EAAK,QAAEC,EAAM,SAIzBb,EAAIE,KAAK,UAAYQ,EAFJ,GAEoB,KAAOC,EAD3B,IAC2C,KAAOC,EAAQE,IAAgB,KAAOD,EAASE,KAE3GH,GAASA,EAAQE,IAAgB,EAAA/E,oBACjC8E,GAAUA,EAASE,IAAgB,EAAA/E,oBAEnCuD,EAAGC,OAAO,cAAcwB,MAAM,QAASJ,EAAQ,OAIjD,YAAAJ,iBAAA,SAAiBb,GACf,IAAIsB,EAAqB5C,KAEzB,GAAgC,MAA5BA,KAAK8B,oBAuCP,OAAO,EArCP,KAAQ9B,KAAKzB,YAAYa,SAAWY,KAAKzB,YAAYsE,iBAAiBvB,EAAIwB,mBACnE9C,KAAKzB,YAAYwE,kBAAkB/C,KAAK8B,oBAAoBkB,cAAcF,iBAAkBxB,EAAI2B,OAGrG,OAAO,EAIT,GAAwD,MAApDjD,KAAK8B,oBAAoBoB,cAAc5B,EAAI2B,MAC7C,OAAO,EAIT,GAAI3B,EAAI6B,WAAY,CAClB,IAAI,GAAiB,EAUrB,GARAnD,KAAKrB,eAAe0C,SAAQ,SAAC+B,GACvBA,EAAMC,gBAAkB/B,EAAI2B,MAC0C,MAApEL,EAAmBd,oBAAoBoB,cAAcE,EAAMH,QAC7D,GAAiB,MAKnB,EACF,OAAO,OAIN,GAAyB,MAArB3B,EAAI+B,eACoE,MAA3ET,EAAmBd,oBAAoBoB,cAAc5B,EAAI+B,eAC3D,OAAO,EASb,OAAO,GAGT,YAAAC,4BAAA,SAA4BhC,GAG1B,IAFA,IAAIiC,EAAe,GAEVC,EAAI,EAAGA,EAAIxD,KAAKyD,YAAYxC,SAAUuC,EAAG,CAChD,IAAIR,EAAgBhD,KAAKyD,YAAYD,GAErC,GAAwC,MAApCR,EAAchC,oBAA8BgC,EAAchC,mBAAmBC,OAAS,EACtEC,EAAGwC,UAAUV,EAAchC,mBAAmB,IAAI2C,cAE5CC,MAAK,SAACjE,GAC5B,OAAOA,EAAKkE,KAAKC,gBAAkBxC,EAAI2B,MAA4C,MAApCtD,EAAKkE,KAAKE,2BAIzDR,EAAaS,KAAKhB,EAAcC,MAKtC,OAAOM,GAGD,YAAAU,qBAAR,WACE,IAsRIC,EAAgBC,EAAgB5B,EAtRhC6B,EAAOpE,KAEPqE,EAA4B,GAGhCA,EAAYL,KAAK,CACfM,aAAc,sBAAuBC,OAAQ,SAASC,EAAiBC,GAMrE,GALmB,MAAfzE,KAAKyE,SACPzE,KAAKyE,OAAO9B,MAAM,eAAgB,MAClC3C,KAAKyE,OAAS,MAGF,MAAVA,EAAgB,CAClB,IAAIC,EAAyBD,EAAOE,QAAQ,uBAEd,MAA1BD,IACF1E,KAAKyE,OAASvD,EAAGC,OAAOuD,GAAwB/B,MAAM,eAAgB,cAGzEiC,OAAQ,SAASJ,GACC,MAAfxE,KAAKyE,SACPzE,KAAKyE,OAAO9B,MAAM,eAAgB,MAClCyB,EAAKS,SAAST,EAAK3F,iBAAiBwE,KAAM,OAAQ/B,EAAGC,OAAOqD,GAAQ3C,KAAK,OACzE7B,KAAKyE,OAAS,SAMpBJ,EAAYL,KAAK,CACfM,aAAc,qBAAsBC,OAAQ,SAASC,EAAiBM,EAAsBC,GAAhD,WAC1C/E,KAAKgF,iBAEL,IAAIC,EAAajF,KAAKyE,OAKtB,GAAW,MAFIvD,EAAGC,OAAO,QAAQxB,OAEjC,CAGA,IAAIuF,EAAgB,EAAAC,SAASJ,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,OA0BxE,GAtBAlB,EAAKtC,oBAAoByD,YAAY5B,cAActC,SAAQ,SAAC1B,GAC1B,cAA5BA,EAAKkE,KAAKC,eAAiC,EAAA0B,cAAcN,EAAevF,EAAKkE,KAAK4B,eACpF,EAAKhB,OAASvD,EAAGC,OAAO,oEAAsExB,EAAKkE,KAAKC,cAAgB,MACxHnE,EAAKkE,KAAK6B,iBAAkB,EAET,MAAf/F,EAAKgG,SACPhG,EAAKkE,KAAK4B,aAAe,CAAEpD,EAAG1C,EAAK0C,EAAI,EAAAN,iBAAiB6D,SAAW,EAAGtD,EAAG3C,EAAK2C,EAAgC,EAA5B,EAAAP,iBAAiB8D,SAActD,MAAO,EAAAR,iBAAiB6D,SAAUpD,OAAoC,EAA5B,EAAAT,iBAAiB8D,aAI9KlG,EAAKkE,KAAK6B,iBAAkB,EAET,MAAf/F,EAAKgG,SACPhG,EAAKkE,KAAK4B,aAAe,CAAEpD,EAAG1C,EAAK0C,EAAI,EAAAN,iBAAiB6D,SAAW,EAAGtD,EAAG3C,EAAK2C,EAAI,EAAAP,iBAAiB8D,SAAW,EAAGtD,MAAO,EAAAR,iBAAiB6D,SAAUpD,OAAQ,EAAAT,iBAAiB8D,gBAK/J,MAAf7F,KAAKyE,QAAiC,MAAdQ,GAAqC,MAAfjF,KAAKyE,QAAkBQ,EAAWpD,KAAK,iBAAmB7B,KAAKyE,OAAO5C,KAAK,kBAC3H7B,KAAK8F,iBAAgB,GAGJ,MAAf9F,KAAKyE,OAAgB,CACvB,IAAIsB,EAAc7E,EAAGC,OAAOqD,GAAQwB,QAAQ,oBACtC,EAAUhG,KAAKyE,OAAO5C,KAAK,gBAC7BoE,EAAW7B,EAAKtC,oBAAoByD,YAAY3B,MAAK,SAACjE,GAAW,OAAOA,EAAKkE,KAAKC,gBAAkB,KACpGoC,EAAc9B,EAAK+B,wBAAwB,GAAShD,WAExDnD,KAAKyE,OAAO5C,KAAK,SAAU,QAE3B,IAAMuE,EAAUC,SAASrG,KAAKyE,OAAO5C,KAAK,MACpCyE,EAAUD,SAASrG,KAAKyE,OAAO5C,KAAK,MAGpC0E,EAAiB,EAAAxE,iBAAiB6D,SAClCY,EAAiB,EAAAzE,iBAAiB8D,SAEpCY,EAAMvF,EAAGC,OAAO,QAAQS,OAAO,KAAKoE,QAAQ,kBAAkB,GAG9DU,IAA+C,MAArBT,EAASU,UAAgD,GAA5BV,EAASU,SAAS1F,QACzE2F,IAAmBV,GAAiBH,GAAgBW,GACxD,GAAIE,EAAiB,CACnB5G,KAAK6G,cAAgBJ,EAAI7E,OAAO,QAAQoE,QAAQ,2BAA2B,GACxEnE,KAAK,IAAKuE,EAAW,EAAArE,iBAAiB6D,SAAW,EAAMW,EAAS,GAChE1E,KAAK,IAAKyE,EAAU,EAAAvE,iBAAiB8D,SAAW,IAChDhE,KAAK,QAAS0E,GACd1E,KAAK,SAAU2E,GACf3E,KAAK,OAAQ,SAEhB7B,KAAK8G,QAAUL,EAAI7E,OAAO,QAAQoE,QAAQ,oBAAoB,GAC3DnE,KAAK,IAAKuE,EAAW,EAAArE,iBAAiB6D,SAAW,EAAMW,EAAS,GAChE1E,KAAK,IAAKyE,EAAU,EAAAvE,iBAAiB8D,SAAW,IAChDhE,KAAK,QAAS0E,GACd1E,KAAK,SAAU2E,GACf3E,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,mBAAoB,OAE5B,IAAIkF,EAAgBL,EAAwBtC,EAAK/F,gBAAgByC,OAAO,oCAAsCsD,EAAK/F,gBAAgByC,OAAO,8BAC1Id,KAAKgH,YAAcP,EAAI7E,OAAO,QAAQoE,QAAQ,yBAAyB,GACpEnE,KAAK,cAAe,cACpBA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbA,KAAK,IAAKuE,EAAW,EAAArE,iBAAiB6D,SAAW,EAAK,EAAAqB,mBAAmBF,EAAe,IAAM,GAC9FlF,KAAK,IAAKyE,EAAU,EAAAvE,iBAAiB8D,SAAW,GAAKW,EAAS,EAAI,GAClEU,KAAKH,GAIV,IAAKhB,EACL,CACE/F,KAAKmH,eAAiBV,EAAI7E,OAAO,QAAQoE,QAAQ,4BAA4B,GAC1EnE,KAAK,IAAKuE,EAAW,EAAArE,iBAAiB6D,SAAW,EAAMW,EAAS,GAChE1E,KAAK,IAAKyE,EAAU,EAAAvE,iBAAiBqF,WAAaZ,GAClD3E,KAAK,QAAS0E,GACd1E,KAAK,SAAU2E,GACf3E,KAAK,OAAQ,SAEhB7B,KAAKqH,SAAWZ,EAAI7E,OAAO,QAAQoE,QAAQ,qBAAqB,GAC7DnE,KAAK,IAAKuE,EAAW,EAAArE,iBAAiB6D,SAAW,EAAMW,EAAS,GAChE1E,KAAK,IAAKyE,EAAU,EAAAvE,iBAAiBqF,WAAaZ,GAClD3E,KAAK,QAAS0E,GACd1E,KAAK,SAAU2E,GACf3E,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,mBAAoB,OAE5BX,EAAGC,OAAO,2BAA2BC,SACrC,IAAIkG,EAAoC,MAAnBrB,EAASN,OAAiBvB,EAAK/F,gBAAgByC,OAAO,+BAAiCsD,EAAK/F,gBAAgByC,OAAO,qCACxId,KAAKuH,aAAed,EAAI7E,OAAO,QAAQoE,QAAQ,0BAA0B,GACtEnE,KAAK,cAAe,cACpBA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbA,KAAK,IAAKuE,EAAW,EAAArE,iBAAiB6D,SAAW,EAAK,EAAAqB,mBAAmBK,EAAgB,IAAM,GAC/FzF,KAAK,IAAKyE,EAAU,EAAAvE,iBAAiBqF,WAAaZ,EAAS,EAAI,GAC/DU,KAAKI,GAIV,GAAItH,KAAKwH,WAAa,IAGE,MAAlBxH,KAAKwH,WACPxH,KAAK8F,gBAAmC,MAAnBG,EAASN,QAGT,MAAnBM,EAASN,QAAgB,CAE3B,IADA,IAAI8B,EAAc,KACTjE,EAAI,EAAGA,EAAIyC,EAASN,OAAO9B,KAAK8C,SAAS1F,SAAUuC,EAAG,CAC/CyC,EAASN,OAAO9B,KAAK8C,SAASnD,GAErCM,gBAAkB,IACvB2D,EAAcjE,EAAI,GAItB,IAAIkE,EAAkBtD,EAAK/F,gBAAgByC,OAAO,8BAClDmF,EAASN,OAAO9B,KAAK8C,SAASgB,OAAOF,EAAa,EAAG,CAAEG,aAAc,EAAS9D,cAAe,YAAa+D,MAAOH,EAAiBf,SAAU,KAE5IvC,EAAKrD,aACLf,KAAKwH,UAAY,EAIrB,IAAIM,EAAmB5G,EAAGC,OAAO,+BAE5B4E,GAAe,EAAAP,cAAcN,EAAe,EAAA6C,qBAAqB/H,KAAKqH,YACzErH,KAAKqH,SAASxF,KAAK,SAAU,QAC7B7B,KAAKuH,aAAa1F,KAAK,OAAQ,QAC/B+E,GAAmB5G,KAAK8G,QAAQjF,KAAK,SAAU,SAC/C+E,GAAmB5G,KAAKgH,YAAYnF,KAAK,OAAQ,SACjDiG,EAAiBjG,KAAK,SAAU,SAChC7B,KAAKgI,SAAWhI,KAAKqH,UAEdT,GAAmB,EAAApB,cAAcN,EAAe,EAAA6C,qBAAqB/H,KAAK8G,YAChFf,GAAe/F,KAAKqH,SAASxF,KAAK,SAAU,UAC5CkE,GAAe/F,KAAKuH,aAAa1F,KAAK,OAAQ,SAC/C7B,KAAK8G,QAAQjF,KAAK,SAAU,QAC5B7B,KAAKgH,YAAYnF,KAAK,OAAQ,QAC9BiG,EAAiBjG,KAAK,SAAU,SAChC7B,KAAKgI,SAAWhI,KAAK8G,SAEa,MAA3BgB,EAAiBnI,QAAkB,EAAA6F,cAAcN,EAAe,EAAA6C,qBAAqBD,OAC3F/B,GAAe/F,KAAKqH,SAASxF,KAAK,SAAU,UAC5CkE,GAAe/F,KAAKuH,aAAa1F,KAAK,OAAQ,SAC/C+E,GAAmB5G,KAAK8G,QAAQjF,KAAK,SAAU,SAC/C+E,GAAmB5G,KAAKgH,YAAYnF,KAAK,OAAQ,SACjDiG,EAAiBjG,KAAK,SAAU,QAChC7B,KAAKgI,SAAW,cAGnBpD,OAAQ,SAASJ,GAClB,GAAmB,MAAfxE,KAAKyE,QAAmC,MAAjBzE,KAAKgI,SAAkB,CAChD,IAAI,EAAUhI,KAAKyE,OAAO5C,KAAK,gBAC3BoE,EAAW7B,EAAKtC,oBAAoByD,YAAY3B,MAAK,SAACjE,GAAW,OAAOA,EAAKkE,KAAKC,gBAAkB,KACpGmE,EAAU/G,EAAGC,OAAOqD,GAAQ3C,KAAK,MAErC,GAAI7B,KAAKgI,WAAahI,KAAK8G,QACzB,GAAqC,GAAjCb,EAASpC,KAAK8C,SAAS1F,OACzBmD,EAAKS,SAAST,EAAK3F,iBAAiBwE,KAAM,EAASgF,OAEhD,CAGH,IAFA,IAAIC,EAAW,GAEN1E,EAAI,EAAGA,EAAIyC,EAASpC,KAAK8C,SAAS1F,SAAUuC,EACnD0E,GAAsBjC,EAASpC,KAAK8C,SAASnD,GAAGM,cAE5CN,EAAIyC,EAASpC,KAAK8C,SAAS1F,OAAS,IACtCiH,GAAsB,KAI1B9D,EAAK+D,mBAAmB/D,EAAK3F,iBAAiBwE,KAAM,EAASgF,EAASC,QAGjElI,KAAKgI,WAAahI,KAAKqH,SACP,MAAnBpB,EAASN,OACXvB,EAAK+D,mBAAmB/D,EAAK3F,iBAAiBwE,KAAM,OAAQgF,EAAS,GAGrE7D,EAAK+D,mBAAmB/D,EAAK3F,iBAAiBwE,KAAMgD,EAASN,OAAO9B,KAAKC,cAAemE,EAAS,GAG1E,YAAlBjI,KAAKgI,UACZ5D,EAAKS,SAAST,EAAK3F,iBAAiBwE,KAAMgD,EAASN,OAAO9B,KAAKC,cAAe5C,EAAGC,OAAOqD,GAAQ3C,KAAK,OAGzG7B,KAAKgF,iBACLhF,KAAK8F,iBAAgB,IACpBd,eAAgB,WACE,MAAfhF,KAAKyE,QACPzE,KAAKyE,OAAO5C,KAAK,SAAU,MAG7B7B,KAAKyE,OAAS,KACdzE,KAAKgI,SAAW,KAEhBhI,KAAK8G,QAAU,KACf9G,KAAKqH,SAAW,KAEhBnG,EAAGC,OAAO,mBAAmBC,UAE5B0E,gBAAiB,SAAS/E,GAAT,WAClB,GAAsB,MAAlBf,KAAKwH,UAAmB,CAC1B,IAAIY,EAAYhE,EAAKtC,oBAAoByD,YAAY3B,MAAK,SAACjE,GAAW,OAAOA,EAAKkE,KAAK+D,eAAiB,EAAKJ,aAE7G,GAAiB,MAAbY,EAAmB,CAErB,IADA,IAAIX,EAAc,KACTjE,EAAI,EAAGA,EAAI4E,EAAUzC,OAAO9B,KAAK8C,SAAS1F,SAAUuC,EAAG,CAChD4E,EAAUzC,OAAO9B,KAAK8C,SAASnD,GAEtCoE,eAAiB5H,KAAKwH,YAC3BC,EAAcjE,GAIC,MAAfiE,IACFW,EAAUzC,OAAO9B,KAAK8C,SAASgB,OAAOF,EAAa,GAC/C1G,GACFqD,EAAKrD,cAKXf,KAAKwH,UAAY,SAOEtG,EAAGmH,OACzBC,GAAG,SAAS,SAASvD,GAEpB,GAAgB,UADF7D,EAAGC,OAAOnB,MAAM6B,KAAK,gBACnC,CAIA,IAAI0G,EAAOvI,KAAKwI,wBAChBtE,EAASqE,EAAKE,KAAO1D,EAAMK,YAAYC,MACvClB,EAASoE,EAAKG,IAAM3D,EAAMK,YAAYE,MACtC/C,EAAQgG,EAAKhG,UAEd+F,GAAG,QAAQ,SAASvD,GAEnB,GAAgB,UADF7D,EAAGC,OAAOnB,MAAM6B,KAAK,gBACnC,CAIAX,EAAGC,OAAO,mBAAmBC,SAE7B,IAAIuH,EAAUzH,EAAGC,OAAOnB,MAGxB2I,EAAQhG,MAAM,UAAW,QAEzB,IAAIiG,EAASC,SAASC,iBAAiB/D,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,OAElFqD,EAAQhG,MAAM,UAAW,MAEzB,IAAK,IAAIa,EAAI,EAAGA,EAAIa,EAAYpD,SAAUuC,EACxCa,EAAYb,GAAGe,OAAOvE,KAAM4I,EAAQ7D,GAWtC,GAPA4D,EACG3C,QAAQ,YAAY,GACpBrD,MAAM,OAASoC,EAAMK,YAAYC,MAAQnB,EAAU,MACnDvB,MAAM,MAAQoC,EAAMK,YAAYE,MAAQnB,EAAU,MAClDxB,MAAM,QAASJ,EAAQ,MAGtBoG,EAAQ3C,QAAQ,oBAAqB,CACvC,IAAI,EAAQ,EACZ9E,EAAG6H,UAAU,wCAA0CJ,EAAQ9G,KAAK,MAAQ,MAAMmH,MAAK,WAEzE9H,EAAGC,OADDnB,MAIXgG,QAAQ,YAAY,GACpBrD,MAAM,OAASoC,EAAMK,YAAYC,MAAQnB,EAAU,MACnDvB,MAAM,MAAQoC,EAAMK,YAAYE,MAAQnB,GAN7BnE,KAM0CwI,wBAAwBhG,OAAS,GAAK,EAAS,MACpGG,MAAM,QAASJ,EAAQ,MAE1B,YAGH+F,GAAG,OAAO,SAASvD,GACpB,IAAI4D,EAAUzH,EAAGC,OAAOnB,MACrBgG,QAAQ,YAAY,GACpBrD,MAAM,OAAQ,MACdA,MAAM,MAAO,MACbA,MAAM,QAAS,MAGdgG,EAAQ3C,QAAQ,qBAClB9E,EAAG6H,UAAU,wCAA0CJ,EAAQ9G,KAAK,MAAQ,MAAMmH,MAAK,WACzE9H,EAAGC,OAAOnB,MAGnBgG,QAAQ,YAAY,GACpBrD,MAAM,OAAQ,MACdA,MAAM,MAAO,MACbA,MAAM,QAAS,SAItB,IAAK,IAAIa,EAAI,EAAGA,EAAIa,EAAYpD,SAAUuC,EACxCa,EAAYb,GAAGoB,OAAO5E,KAAM+E,KAIlCkE,CAAmB/H,EAAG6H,UAAU,2DAG1B,YAAAG,oBAAR,WACE,IAGIhF,EAAgBC,EAChBgF,EACAC,EALAxG,EAAqB5C,KAMJkB,EAAGmH,OACrBC,GAAG,SAAS,SAASvD,GACpB,IAAIG,EAAqB,EAAAC,SAASJ,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,OAG7E8D,EAASxG,EAAmBd,oBAAoBoB,cAAchC,EAAGC,OAAOnB,MAAM6B,KAAK,iBAiCnFsH,EAAaC,EAAOC,SAEpBnF,EAASiF,EAAW9G,EAAI6C,EAAc7C,EACtC8B,EAASgF,EAAW7G,EAAI4C,EAAc5C,KAEvCgG,GAAG,QAAQ,SAASvD,GAEnB7D,EAAGC,OAAO,mBAAmBC,SAE7B,IAAI8D,EAAgB,EAAAC,SAASJ,EAAMK,YAAYC,MAAON,EAAMK,YAAYE,QAExE8D,EAASxG,EAAmBd,oBAAoBoB,cAAchC,EAAGC,OAAOnB,MAAM6B,KAAK,kBAE5EyH,OAAOpE,EAAc7C,EAAI6B,EAAQgB,EAAc5C,EAAI6B,GAAQ,MAEjEmE,GAAG,OAAO,SAASvD,GAEC7D,EAAGC,OAAO,QAAQU,KAAK,WAAW0H,MAAM,KAE7DH,EAAOE,OAAOH,EAAW9G,EAAG8G,EAAW7G,GAAG,KAoD9CkH,CAAetI,EAAG6H,UAAU,mIAGvB,YAAA5C,wBAAP,SAA+BlD,GAC7B,IAAK,IAAIO,EAAI,EAAGA,EAAIxD,KAAKrB,eAAesC,SAAUuC,EAAG,CACnD,IAAIlC,EAAqBtB,KAAKrB,eAAe6E,GAE7C,GAAIlC,EAAI2B,OAASA,EACf,OAAO3B,IAKN,YAAAmI,oBAAP,SAA2BxG,GACzB,IAAK,IAAIO,EAAI,EAAGA,EAAIxD,KAAKyD,YAAYxC,SAAUuC,EAAG,CAChD,IAAIkG,EAAoB1J,KAAKyD,YAAYD,GAEzC,GAAIkG,EAAGzG,OAASA,EACd,OAAOyG,IAKN,YAAAC,uBAAP,SAA8B1G,GAC5B,IAAK,IAAIO,EAAI,EAAGA,EAAIxD,KAAK4J,cAAc3I,SAAUuC,EAAG,CAClD,IAAIqG,EAAoB7J,KAAK4J,cAAcpG,GAE3C,GAAIqG,EAAI5G,OAASA,EACf,OAAO4G,IAKL,YAAAhF,SAAR,SAAiBiF,EAAuBC,EAAiCC,GAAzE,WACEhK,KAAK9B,iBAAiB+L,oBAAoBH,EAAeC,EAAyBC,GAAwBE,MAAK,SAACR,GAI9G,IAHA,IAAIpI,EAAM,EAAK6E,wBAAwB6D,GAEnCG,EAAQ,KACH3G,EAAI,EAAGA,EAAIlC,EAAI8I,mBAAmBnJ,SAAUuC,EACnD,GAAIlC,EAAI8I,mBAAmB5G,KAAOsG,EAAe,CAC/CK,EAAQ3G,EACR,MAIS,MAAT2G,GACF7I,EAAI8I,mBAAmBpG,KAAK8F,GAG9B,EAAKO,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIP,YAAApC,mBAAR,SAA2B2B,EAAuBC,EAAiCU,EAAiCC,GAApH,WACE1K,KAAK9B,iBAAiBiK,mBAAmB2B,EAAeC,EAAyBU,EAAyBC,GAA2BR,MAAK,SAACR,GACzI,EAAKW,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIf,YAAAI,gBAAA,aAIA,YAAAC,KAAA,WACE,OAAO5K,KAAKzB,YAAYqM,QAG1B,YAAA/H,iBAAA,SAAiBgI,EAAiBC,GAChC,YADgC,IAAAA,OAAA,GACzB9K,KAAKZ,OAASY,KAAKzB,YAAYsE,iBAAiBgI,IAGzD,YAAAE,cAAA,SAAclB,GAGZ,IAFA,IAAImB,EAA4B,GAEvBxH,EAAI,EAAGA,EAAIxD,KAAKrB,eAAesC,SAAUuC,EAAG,CACnD,IAAIM,EAA+B9D,KAAKrB,eAAe6E,GAEnDM,EAAchB,mBAAqB+G,EAAI5G,MACzC+H,EAAShH,KAAKF,GAIlB,OAAOkH,GAGT,YAAAC,oBAAA,SAAoBpB,GAGlB,IAFA,IAAIqB,EAAkC,GAE7B1H,EAAI,EAAGA,EAAIxD,KAAKyD,YAAYxC,SAAUuC,EAAG,CAChD,IAAIE,EAA2B1D,KAAKyD,YAAYD,GAE5CE,EAAUZ,mBAAqB+G,EAAI5G,MACrCiI,EAAelH,KAAKN,GAIxB,OAAOwH,GAGF,YAAAhL,WAAP,SAAkBiL,GAAlB,WAGEnL,KAAKrB,eAAiB,GAEtBqB,KAAK1B,gBAAgB8M,OAAOlB,MAAK,SAAAmB,GAC/B,EAAKhN,gBAAgBiN,WAAWD,EAASE,SAEzC,EAAKC,kBAAkBH,EAASI,OAEhC,EAAK7B,cAAgByB,EAASzB,cAE9B,EAAKA,cAAcvI,SAAQ,SAAAwI,GACrB,EAAKhH,iBAAiBgH,EAAI5G,QAC5B,EAAKzE,iBAAmBqL,EAAI5G,SAIhC,IAAIyI,EAAM,EAAKC,yBAAyB,QACpCD,GACF,EAAK/M,eAAegJ,OAAO+D,EAAK,GAGlC,EAAKE,eAAeP,EAAS5H,aAE7B,EAAKoI,eAAeV,GAEpB,EAAKW,8BAEJxB,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIR,YAAAiB,kBAAP,SAAyBC,GAAzB,WAGEzL,KAAK+L,iBAAiBN,GAGtBA,EAAMpK,SAAQ,SAAA2K,GACPA,EAAK7I,YACH6I,EAAK3I,eACR,EAAK1E,eAAeqF,KAAKgI,MAM/BhM,KAAKrB,eAAesN,MAAK,SAACC,EAAGC,GAC3B,OAAID,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,eAAuB,EAChFH,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,cAAsB,EACjF,KAIdZ,EAAMpK,SAAQ,SAAA2K,GACZ,IAAKA,EAAK7I,YACJ6I,EAAK3I,eAAiB2I,EAAK3I,cAAcpC,OAAS,EAEpD,IAAK,IAAIuC,EAAI,EAAGA,EAAI,EAAK7E,eAAesC,OAAQuC,IAAK,CACnD,IAAI8I,EAAU,EAAK3N,eAAe6E,GAC9BwI,EAAK3I,gBAAkBiJ,EAAQrJ,MACjC,EAAKtE,eAAegJ,OAAOnE,EAAI,EAAG,EAAGwI,QAUzC,YAAAD,iBAAR,SAAyBN,GAAzB,WACEA,EAAMpK,SAAQ,SAAA2K,GACRA,EAAK7I,YACP,EAAKxE,eAAeqF,KAAKgI,OAKxB,YAAAF,yBAAP,sBACE9L,KAAKpB,iBAAmB,GACxBoB,KAAKnB,WAAa,GAElB,IAAK,IAAI2E,EAAI,EAAGA,EAAIxD,KAAK4J,cAAc3I,SAAUuC,EAAG,CAClD,IAAIqG,EAAoB7J,KAAK4J,cAAcpG,GAE3CxD,KAAKpB,iBAAiBoF,KAAK,CAAE6F,IAAKA,EAAKpG,YAAazD,KAAKiL,oBAAoBpB,KAC7E7J,KAAKnB,WAAWmF,KAAK,CAAE6F,IAAKA,EAAK4B,MAAOzL,KAAK+K,cAAclB,KAG7D7J,KAAKrB,eAAe0C,SAAQ,SAACC,GAC3BA,EAAIC,QAAU,EAAKY,iBAAiBb,GACpCA,EAAI8I,mBAAqB,EAAK9G,4BAA4BhC,MAG5DtB,KAAKW,kBAGA,YAAA4L,4BAAP,SAAmC7I,GACjC,OAAwE,IAAhE1D,KAAKf,8BAA8BuN,QAAQ9I,EAAUT,OAGxD,YAAAwJ,4BAAP,SAAmC3I,GACjC,OAA4E,IAApE9D,KAAKd,8BAA8BsN,QAAQ1I,EAAcb,OAG3D,YAAA4I,eAAR,SAAuBV,GAErB,IAAIhB,GAAS,EASb,GAPwB,MAApBgB,EACFhB,EAAQnK,KAAKyD,YAAYiJ,WAAU,SAAAC,GAAK,OAAAA,EAAE1J,OAASkI,EAAiBlI,QAE7DjD,KAAKyD,YAAYxC,OAAS,IACjCkJ,EAAQ,GAGNA,GAAS,EAAG,CACd,IAAMzG,EAAY1D,KAAKyD,YAAY0G,GAEnCnK,KAAK4M,oBAAoBlJ,GAEzB1D,KAAKe,eAID,YAAA8L,aAAR,SAAqBC,GACnB,IAAIlE,EAAwB,KAO5B,OANA5I,KAAKyD,YAAYpC,SAAQ,SAAAqC,GACnBoJ,IAAgBpJ,EAAUT,OAC5B2F,EAASlF,MAINkF,GAGD,YAAAgD,eAAR,SAAuB/H,GAAvB,WACMJ,EAA+B,GACnCI,EAAKxC,SAAQ,SAAC2B,EAAemH,GAEvBnH,EAAchC,mBAAmBC,OAAS,GAC5C+B,EAAchC,mBAAmBK,SAAQ,SAAA0L,GACvC,EAAKC,sBAAsBD,MAI/BtJ,EAAYO,KAAKhB,MAInBhD,KAAKyD,YAAcA,EAEnBzD,KAAKyD,YAAYwI,MAAK,SAACC,EAAGC,GACxB,OAAID,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,eAAuB,EAChFH,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,cAAsB,EACjF,MAIR,YAAAW,sBAAR,SAA8BrN,GAA9B,WACc,MAARA,IACFA,EAAKkI,MAAQ7H,KAAKiN,kBAAkBtN,EAAKmE,eAEzCnE,EAAKgH,SAAStF,SAAQ,SAAA+B,GACpB,EAAK4J,sBAAsB5J,QAKzB,YAAA6J,kBAAR,SAA0BC,GACxB,IAAIrF,EAAgB,KAOpB,OANA7H,KAAKrB,eAAe0C,SAAQ,SAAS8L,GAC/BA,EAAIlK,OAASiK,IACfrF,EAAQsF,EAAItF,MAAMuE,mBAIfvE,GAGF,YAAA9H,aAAP,SAAoBJ,EAAWC,GACzBI,KAAK6C,iBAAiB7C,KAAKvB,iBAAiBqE,mBAC9C9C,KAAK5B,mBAAmBgP,KAAKC,KAAK,CAChCvN,YAAsC,OAAxBH,EAAKkE,KAAKyJ,UAAqBtN,KAAKuN,kBAAoBvN,KAAKwN,kBAC3EzI,MAAOnF,EACP6N,KAAM9N,IAERC,EAAO8N,iBACP9N,EAAO+N,oBAGP/N,EAAO8N,iBACP9N,EAAO+N,oBAIJ,YAAA9N,gBAAP,SAAuBF,EAAWC,GAEhCD,EAAKiO,UAAUC,eAAelO,GAE1BA,EAAKiO,UAAUE,WAAWnO,GAC5BA,EAAKoO,WAGLpO,EAAKiO,UAAUI,aAIZ,YAAAC,iBAAP,SAAwBlJ,EAAY0I,GAClCzN,KAAK4M,oBAAoBa,GACzBzN,KAAKe,cAGA,YAAAmN,gBAAP,sBACElO,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAAvV,kCAAmC,CAC1EuW,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,iBAGyBtO,KAAKmO,WAAWI,QAASC,uBAAuB5N,WAAU,SAAAiD,GAE5F,EAAKJ,YAAYO,KAAKH,GAEtB,EAAKJ,YAAYwI,MAAK,SAACC,EAAkBC,GACvC,IAAIsC,EAAQvC,EAAErE,MAAMuE,eAAesC,cAC/BC,EAAQxC,EAAEtE,MAAMuE,eAAesC,cAEnC,OAAID,EAAQE,GACF,EAGNF,EAAQE,EACH,EAGF,KAGT,EAAK7C,+BAIF,YAAA8C,oBAAP,SAA2BC,GAA3B,WACE7O,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC9DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEvBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO+N,EAAIhH,MAAMuE,eAAiB,IACjIpM,KAAKmO,WAAWI,QAAQ1K,KAAOgL,EAAI5L,KACnCjD,KAAKmO,WAAWI,QAAQvC,KAAO,SAC/BhM,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,uBAEzCd,KAAKmO,WAAWI,QAASU,UAAUrO,WAAU,SAAAiD,GACnE,EAAKqL,oBAAoBrL,OAItB,YAAAsL,kBAAP,SAAyBN,EAAoBO,GAA7C,WAEEpP,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAAvV,kCAAmC,CAC1EuW,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,iBAEXtO,KAAKmO,WAAWI,QAAQc,MAAO,EAC/BrP,KAAKmO,WAAWI,QAAQa,SAAWA,EACnCpP,KAAKmO,WAAWI,QAAQvL,cAAgB6L,EACxC7O,KAAKmO,WAAWI,QAAQC,uBAAuB5N,WAAU,SAAAiD,GACvD,IAAI6H,EAAM,EAAK4D,yBAAyBzL,EAAKZ,MAE7C,EAAKQ,YAAYiI,GAAK7D,MAAQhE,EAAKgE,MACnC,EAAKpE,YAAYiI,GAAK6D,YAAc1L,EAAK0L,YACzC,EAAK9L,YAAYiI,GAAK8D,SAAW3L,EAAK2L,SACtC,EAAK/L,YAAYiI,GAAK+D,gBAAkB5L,EAAK4L,gBAC7C,EAAKhM,YAAYiI,GAAKgE,WAAa7L,EAAK6L,WACxC,EAAKjM,YAAYiI,GAAKiE,eAAiB9L,EAAK8L,eAC5C,EAAKlM,YAAYiI,GAAKkE,kBAAoB/L,EAAK+L,kBAC/C,EAAKnM,YAAYiI,GAAKmE,QAAUhM,EAAKgM,QACrC,EAAKpM,YAAYiI,GAAKoE,YAAcjM,EAAKiM,YACzC,EAAKrM,YAAYiI,GAAKqE,MAAQlM,EAAKkM,MAEnC,EAAKjE,2BAED,EAAKrN,iBAAiBwE,OAASY,EAAKZ,OACtC,EAAK2J,oBAAoB,EAAKnJ,YAAYiI,IAE1C,EAAK3K,kBAKX,YAAA6L,oBAAA,SAAoB5J,GAClBhD,KAAKvB,iBAAmBuE,GAG1B,YAAAgN,mBAAA,SAAmBtM,GAEjB,OAAOA,EAAUT,OAASjD,KAAKvB,iBAAiBwE,MAG3C,YAAAiM,oBAAP,SAA2BjM,GAA3B,WACEjD,KAAK9B,iBAAiB0Q,oBAAoB3L,GAAMiH,MAAK,SAAAmB,GAEnD,IAAIK,EAAM,EAAK4D,yBAAyBrM,GACxC,EAAKQ,YAAYkE,OAAO+D,EAAK,GAC7B,EAAKI,2BAED,EAAKrI,YAAYxC,OAAS,EAC5B,EAAK2L,oBAAoB,EAAKnJ,YAAY,IAG1C,EAAKhF,iBAAmB,KAG1B,EAAKsC,gBAEJuJ,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIR,YAAA0F,oBAAP,SAA2BC,EAA+B/M,EAAqB0G,GAA/E,WACE7J,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAArV,+BAAgC,CACvEqW,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,iBAEXtO,KAAKmO,WAAWI,QAAQnD,KAAKvB,EAAK7J,KAAKrB,eAAgBuR,EAAgB/M,GAEvEnD,KAAKmO,WAAWI,QAAQ4B,mBAAmBvP,WAAU,SAAAiD,GAEnDA,EAAKuG,mBAAqB,EAAK9G,4BAA4BO,GAE3D,EAAK3D,WAAW,EAAKzB,sBAKlB,YAAA2R,oBAAP,SAA2BvB,GAA3B,WACE7O,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC9DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEvBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO+N,EAAIhH,MAAMuE,eAAiB,IACjIpM,KAAKmO,WAAWI,QAAQ1K,KAAOgL,EAAI5L,KACnCjD,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,uBACjEd,KAAKmO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAElBtQ,KAAKmO,WAAWI,QAASU,UAAUrO,WAAU,SAAAiD,GACnE,EAAK0M,oBAAoB1M,OAItB,YAAA0M,oBAAP,SAA2BtN,EAAcuN,GAAzC,gBAAyC,IAAAA,MAAA,MACvCxQ,KAAK1B,gBAAgB8R,oBAAoBnN,GAAMiH,MAAK,SAAAmB,GAElD,IAAIK,EAAM,EAAKC,yBAAyB1I,GACxC,EAAKtE,eAAegJ,OAAO+D,EAAK,GAEhC,EAAKxL,WAAW,EAAKzB,qBAEpB6L,OAAM,SAACC,GACW,MAAfiG,GACFA,EAAYjG,GAEd,EAAKC,MAAMD,OAIR,YAAAkG,oBAAP,SAA2B3M,EAA8BsL,GAAzD,WAEEpP,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAApU,kCAAmC,CAC1EoV,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,+BAGXxK,EAAc4M,WAAWzE,MAAK,SAACC,EAAGC,GAChC,OAAID,EAAErE,MAAMuE,eAAiBD,EAAEtE,MAAMuE,gBAAwB,EACpDF,EAAErE,MAAMuE,eAAiBD,EAAEtE,MAAMuE,eAAuB,EACrD,KAEdpM,KAAKmO,WAAWI,QAAQzK,cAAgBA,EACxC9D,KAAKmO,WAAWI,QAAQa,SAAWA,EAECpP,KAAKmO,WAAWI,QAASoC,yBAAyB/P,WAAU,SAAAiD,GAE9F,GAAIA,EAAKV,WACP,EAAKjD,WAAW,EAAKzB,sBAElB,CACH,IAAMmS,EAAW,EAAKjF,yBAAyB9H,EAAKZ,OAElC,IAAd2N,IACF,EAAKjS,eAAeiS,GAAY/M,GAIlC,EAAKiI,2BAEL,EAAKrI,YAAYpC,SAAQ,SAAC2B,GACxB,EAAKgK,sBAAsBhK,EAAchC,mBAAmB,OAIjC,MAAzB,EAAKvC,kBACP,EAAKuO,sBAAsB,EAAKvO,iBAAiBuC,mBAAmB,IAGtE,EAAKD,kBAKH,YAAAuO,yBAAR,SAAiCrM,GAC/B,IAAK,IAAIO,EAAI,EAAGA,EAAIxD,KAAKyD,YAAYxC,OAAQuC,IAAK,CAEhD,GADUxD,KAAKyD,YAAYD,GACnBP,OAASA,EACf,OAAOO,IAKL,YAAAmI,yBAAR,SAAiC1I,GAC/B,IAAK,IAAIO,EAAI,EAAGA,EAAIxD,KAAKrB,eAAesC,OAAQuC,IAAK,CAEnD,GADUxD,KAAKrB,eAAe6E,GACtBP,OAASA,EACf,OAAOO,EAIX,OAAO,MAGF,YAAA6G,wBAAP,SAA+BrH,GAC7BhD,KAAKgN,sBAAsBhK,EAAchC,mBAAmB,IAE5D,IAAK,IAAIwC,EAAI,EAAGA,EAAIxD,KAAKyD,YAAYxC,SAAUuC,EAAG,CAChCxD,KAAKyD,YAAYD,GAEnBP,OAASD,EAAcC,OACnCjD,KAAKyD,YAAYD,GAAKR,EAEtBhD,KAAK4M,oBAAoB5J,IAI7BhD,KAAK8L,2BAEL9L,KAAKe,cAGA,YAAA8P,oBAAP,SAA2BC,EAAeC,EAASP,GAAnD,gBAAmD,IAAAA,MAAA,MACjD,IAAMpM,EAAOpE,KAEbA,KAAK9B,iBAAiB2S,oBAAoB7Q,KAAKvB,iBAAiBwE,KAAM6N,EAAeC,GAAS7G,MAAK,SAAAlH,GAKjG,IAHA,IAAI1B,EAAM8C,EAAK+B,wBAAwB4K,GAEnC5G,EAAQ,KACH3G,EAAI,EAAGA,EAAIlC,EAAI8I,mBAAmBnJ,SAAUuC,EACnD,GAAIlC,EAAI8I,mBAAmB5G,KAAOR,EAAcC,KAAM,CACpDkH,EAAQ3G,EACR,MAIS,MAAT2G,GACF7I,EAAI8I,mBAAmBzC,OAAOwC,EAAO,GAGvC/F,EAAKiG,wBAAwBrH,MAE5BsH,OAAM,SAACC,GACW,MAAfiG,GACFA,EAAYjG,GAGd,EAAKC,MAAMD,OAIR,YAAAyG,SAAP,SAAgBvD,GACd,OAAOzN,KAAKvB,mBAAqBgP,GAGnC,YAAA9M,eAAA,sBACQkH,EAAQ7H,KAAKlB,OAAOuN,cAE1BrM,KAAKjB,yBAA2B,GAChCiB,KAAKhB,mBAAqB,GAE1BgB,KAAKpB,iBAAiByC,SAAQ,SAACoM,GAE7B,IAAMwD,EAAWxD,EAAKhK,YAAY3E,QAAO,SAAC4E,GAGxC,OAAmB,IAFLA,EAAUmE,MAAMuE,eAAeC,cAAcG,QAAQ3E,MAKrE,EAAK9I,yBAAyBiF,KAAK,CAAE6F,IAAK4D,EAAK5D,IAAKpG,YAAawN,OAGnEjR,KAAKnB,WAAWwC,SAAQ,SAACoM,GAEvB,IAAMwD,EAAWxD,EAAKhC,MAAM3M,QAAO,SAACkN,GAGlC,OAAmB,IAFLA,EAAKnE,MAAMuE,eAAeC,cAAcG,QAAQ3E,MAKhE,EAAK7I,mBAAmBgF,KAAK,CAAE6F,IAAK4D,EAAK5D,IAAK4B,MAAOwF,OAGvDC,YAAW,WAAQ,EAAKjN,yBAA2B,MAGrD,YAAAkN,uBAAA,SAAuBC,EAA2BC,EAAoCnE,GAAtF,WACElN,KAAK9B,iBAAiBoT,sBAAsBF,EAAmBC,EAA4BnE,GAAmBhD,MAAK,SAACR,GAClH,EAAKW,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIf,YAAAgH,yBAAA,SAAyBH,EAA2BlE,GAApD,WACElN,KAAK9B,iBAAiBsT,yBAAyBJ,EAAmBlE,GAAmBhD,MAAK,SAACR,GACzF,EAAKW,wBAAwBX,MAC5BY,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIR,YAAAC,MAAP,SAAaD,GACXvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCAn1ClD3G,GAAkB,+O,iCAAlBA,EAAkB,oD,GAAA,M,6nHCrD/B,4BACC,4BAEA,6BAEA,4BAGC,4BAEC,4BAEC,4BACC,4BACC,gCAC0D,+D,wBAD1D,iBAED,iBACD,iBACA,mCACC,yCACC,8BACC,4BACC,uBACD,iBACA,8BACD,iBACA,8BACC,+BAqDD,iBACD,iBACA,0CACC,8BACC,4BACC,uBACD,iBACA,8BACD,iBACA,8BACC,+BAsCD,iBACD,iBACD,iBACD,iBAEA,8BACC,8BAEC,gCAiBA,yBAGA,8BACS,8BACE,8BACE,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACA,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACA,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACF,iBACA,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACA,8BACE,8BACG,6BACE,8BACF,iBACF,iBACA,8BACE,2BACF,iBACH,iBACF,iBACF,iBACF,iBAmBR,iBACD,iBACD,iBACD,iBAED,kB,MA5NO,8FAAwD,oBAGhD,6CAAmB,kBACZ,sEAQW,4DAuDX,yCAAe,0CAQC,kEA8C3B,+J,isIDzFX,GAMa,EAAAA,sB,+DAAAA,EAAkB,E,KAN9B,EAAA2F,U,MAAU,CAETC,SAAU,cACVC,YAAa,6BACbC,UAAW,CAAC,wB,+KAoBgC8C,YAAa,CAAF,C,KAAtD,EAAAuR,U,MAAU,cAAe,CAAEC,QAAQ,MAeNrE,kBAAmB,CAAF,C,KAA9C,EAAAoE,U,MAAU,cAKmBnE,kBAAmB,CAAF,C,KAA9C,EAAAmE,U,MAAU,iB,0HE3Fb,WACA,Q,OAIA,aAOC,aAHQ,KAAAE,wBAA0B,IAAI,EAAAC,QACtC,KAAAC,gBAAkB/R,KAAK6R,wBAAwBG,e,OAIxC,YAAAC,cAAP,WACC,OAAOjS,KAAKkS,YAGN,YAAAC,cAAP,SAAqBC,GACpBpS,KAAKkS,WAAaE,EAElBpS,KAAK6R,wBAAwBxE,KAAKrN,KAAKkS,a,iCAf5Bnc,I,oCAAAA,EAA8B,QAA9BA,EAA8B,O,EAD3C,GACa,EAAAA,kC,+DAAAA,EAA8B,E,KAD1C,EAAAsc,c,gJCLD,WACA,O,GASA,OACA,O,6HCIE,uCAA4C,+GAAwE,iB,gCAAxE,+C,mDAG5C,4BACE,4BACE,4BACE,6BACF,iBACF,iBACA,4BACE,6BACE,+BAAmB,+GAAnB,iBACF,iBACF,iBACF,iB,gCAHyB,8D,mDAKzB,4BACE,4BACE,4BACE,6BACF,iBACF,iBACA,4BACE,6BACE,+BAAmB,2GAAnB,iBACF,iBACF,iBACF,iB,gCAHyB,0DDtB3B,iBA6BC,WAAoBnU,EAA4CoU,GAA5C,KAAApU,mBAA4C,KAAAoU,MAVvD,KAAAC,kBAA4B,EAC5B,KAAAC,oBAA8B,EAC9B,KAAAC,WAAqB,EAGpB,KAAAC,gBAAkB,IAAI,EAAAxV,aAChC,KAAA6R,QAAkB,KAElB,KAAAqD,MAAgB,O,OAKhB,YAAAnS,SAAA,aAIA,YAAA0K,gBAAA,WACC3K,KAAKoS,MAAQ,OACbpS,KAAKsS,IAAIK,iBAGV,YAAAC,YAAA,aAIA,YAAAC,YAAA,aAIA,YAAAC,eAAA,aAIA,YAAAC,eAAA,WACC/S,KAAKgT,UAAUC,QAAUjT,KAAKgT,UAAUC,QAGzC,YAAAC,QAAA,WACClT,KAAKoS,MAAQ,QAGd,YAAAe,gBAAA,SAAgBpO,GACf/E,KAAKoS,MAAQ,QAGd,YAAAgB,QAAA,WACC,QAAIpT,KAAKgT,UAAU/P,QAGwB,IAAtCjD,KAAKgT,UAAU/P,KAAKuJ,QAAQ,OAI0B,IAAtDxM,KAAKgT,UAAUnL,MAAMwL,aAAa,GAAG7V,MAAMyD,SAI3CjB,KAAKyS,WACRa,QAAQC,IAAIvT,KAAKgT,aAGdhT,KAAKyS,WAA0C,MAA5BzS,KAAKgT,UAAUQ,WAA4D,IAAvCxT,KAAKgT,UAAUQ,UAAUC,eAIhFzT,KAAKyS,WAAsC,MAAxBzS,KAAKgT,UAAUU,OAAoD,IAAnC1T,KAAKgT,UAAUU,MAAMD,gB,iCApElE3a,GAAuB,mF,iCAAvBA,EAAuB,khCClCpC,0BACE,4BACE,4BACE,4BACE,4BACF,iBACF,iBACA,4BACE,6BACE,8BAA2D,uEAA3D,iBACF,iBACF,iBACF,iBAEA,wCAAiB,sEAA4D,iBAC7E,yCAGA,+BAaA,+BAYF,kB,MAlCqC,2DAA6B,4BAK/C,uDACA,0DAGQ,gDAaA,kD,+eDVd,CACX,EAAA6a,QAAQ,eAAgB,CACvB,EAAAvB,MAAM,aACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAyP,MAAM,OACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAiR,WAAW,eAAgB,EAAAV,QAAQ,gB,EAZtC,GAiBa,EAAApa,2B,+DAAAA,EAAuB,E,KAjBnC,EAAAqE,U,MAAU,CACVC,SAAU,kBACVC,YAAa,mCACbC,UAAW,CAAC,yBACZuW,WAAY,CACX,EAAAF,QAAQ,eAAgB,CACvB,EAAAvB,MAAM,aACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAyP,MAAM,OACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAiR,WAAW,eAAgB,EAAAV,QAAQ,kB,2EAO5BX,iBAAkB,CAAF,C,KAAxB,EAAAhV,QACQiV,mBAAoB,CAAF,C,KAA1B,EAAAjV,QACQkV,UAAW,CAAF,C,KAAjB,EAAAlV,QACQuG,cAAe,CAAF,C,KAArB,EAAAvG,QACQyV,UAAW,CAAF,C,KAAjB,EAAAzV,QACSmV,gBAAe,E,KAAxB,EAAAjV,Y,iHEzCF,WAEA,GADA,MACA,OAMA,GAFA,OAEA,Q,GACA,M,iGCRI,6BAAqE,YAAW,kB,6BAAX,+C,sBAGjE,yBACI,6BACJ,kB,yBACA,yBACI,YACA,6BACJ,kB,6BAFI,mF,yBAQA,4BACI,4BACI,4BAAQ,6BACR,8BAA6B,iBAAO,sCAAkE,gBAAC,iBACvG,iBACJ,iBACA,6BACI,+BAAO,wEAAP,iBACJ,iBACJ,kB,2CAN+D,4CAIhD,+CAA+B,yBAA/B,CAA+B,sBAA/B,CAA+B,wC,yBAWlC,gCAAuD,YAAc,kB,uBAAlC,6BAAoB,6C,mDARnE,4BACI,4BACI,+BAAuB,6BACvB,iBACJ,iBACA,6BACI,gCAA0D,2GAA6B,iFACnF,wBACA,kCACJ,iBACJ,iBACJ,iB,gCALkE,yDAE7B,gD,mDAIrC,4BACI,4BACI,+BAAuB,6BACvB,iBACJ,iBACA,6BACE,+BAAO,2HAAP,iBACF,iBACJ,iB,gCAFa,0E,sBAwBL,+BAAuE,6BAAuD,kB,sBAmKtI,4BACI,uBACA,6BACI,6BACJ,iBACJ,kB,2GAQY,6BAGI,6BAGI,6BAAK,kHAAiC,KAAO,EAAH,wBACtC,sBACJ,iBAEA,+BAAiC,YAAgB,iBAGrD,iBAGJ,iB,+CAVyF,4FAIhD,6C,yBAhBrD,0BACI,4BACI,4BACI,4BAAQ,YAAoB,iBAChC,iBACA,6BACI,+BAiBJ,iBACJ,iBACJ,kB,uBAtBoB,qDAG4B,kD,mDA2BpC,6BAGI,6BAGI,6BAAK,kHAAiC,KAAO,EAAH,wBACtC,sBACJ,iBAEA,+BAAiC,YAAmB,iBACxD,iBACJ,iB,+CAN+F,4FAItD,6C,yBAhBrD,0BACI,4BACI,4BACI,4BAAQ,6BAA0D,iBACtE,iBACA,6BACI,+BAaJ,iBACJ,iBACJ,kB,6BAfmD,oE,mDAwBvC,gCAAwC,2FACpC,6BACJ,iB,iDAFmG,oC,yCD5R3H,aAiCC,WAAoBqW,EAAkCC,EAA6BC,EAAsC7F,EAAgC5P,GAArI,KAAAuV,UAAkC,KAAAC,WAA6B,KAAAC,WAAsC,KAAA7F,aAAgC,KAAA5P,cA3BzJ,KAAA0V,YAAqB,IAAIC,KACzB,KAAAnF,QAAkB,KAiBlB,KAAAoF,UAAoB,EAKpB,KAAA9E,MAAgB,EAEhB,KAAA+E,OAAiB,E,OAIjB,YAAAnU,SAAA,sBAECD,KAAKqU,mBAAqB,IAAI,EAAAvC,QAEzB9R,KAAKsU,QAAWtU,KAAKmU,WACzBnU,KAAK+T,SAASQ,oBAAmB,GAAMrK,MAAK,SAAAuB,GAG3C,IADA,IAAI+I,EAAa,GACRhR,EAAI,EAAGA,EAAIiI,EAAMxK,SAAUuC,EAAG,CACtC,IAAMqH,EAAUY,EAAMjI,GAAGqH,QACnB4J,EAAqC,MAA1BhJ,EAAMjI,GAAGH,cAAwBoI,EAAMjI,GAAGH,cAAgBoI,EAAMjI,GAAGP,KAEhF,EAAK1E,YAAYwE,kBAAkB8H,EAAS4J,IAC/CD,EAAWxQ,KAAKyH,EAAMjI,IAGxB,EAAKiI,MAAQ+I,KAEXlK,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZvK,KAAKsU,OAAS,CACbI,IAAK,KACLD,SAAU,GACVE,aAAc3U,KAAKgU,SAASY,SAC5B3R,KAAM,GACN4R,qBAAsB,KACtBC,oBAAqB,KACrBC,YAAa,KACbC,aAAc,GACdC,QAAS,GACTzF,SAAU,GACVI,kBAAmB,GACnBD,eAAgB,GAChBuF,iBAAkB,GAClBxF,WAAY,GACZyF,YAAa,GACbC,aAAc,GACdC,gBAAiB,GACjBtF,MAAO,GACPtM,YAAa,GACb6R,mBAAoB,GACpBC,MAAM,EACNC,UAAW,SACXC,SAAU,KACVC,WAAY,QAKf,YAAAtK,KAAA,SAAKvB,GACJ7J,KAAKsU,OAAOc,aAAevL,EAAI6K,KAGhC,YAAAiB,cAAA,SAAc5Q,GAEb,IADA,IAAI6Q,EAAY7Q,EAAM6D,OAAOiN,UACpBrS,EAAI,EAAGA,EAAIoS,EAAU3U,OAAQuC,IAAK,CAE1C,GAAU,aADFoS,EAAUpS,GAEjB,OAAO,EAIT,OAAO,GAGR,YAAAsS,SAAA,sBAE6B,MAAxB9V,KAAKsU,OAAOG,UAAoBzU,KAAKsU,OAAOG,SAASxT,OAAS,GACjEjB,KAAK+T,SAASgC,sBAAsB/V,KAAKsU,OAAOG,UAAU,GAAMvK,MAAK,SAAAzG,GACpE,EAAK6Q,OAAO7Q,YAAcA,KACxB6G,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZvK,KAAK+T,SAASiC,0BAA0BhW,KAAKsU,OAAOG,UAAU,GAAOvK,MAAK,SAAAzG,GACzE,EAAK6Q,OAAOgB,mBAAqB7R,KAC/B6G,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIZvK,KAAKsU,OAAO7Q,YAAc,IAI5B,YAAAwS,SAAA,sBACCjW,KAAK8T,QAAQoC,iBAAiBlW,KAAKsU,QAAQpK,MAAK,SAAAmB,GAE/C,EAAKgJ,mBAAmBhH,KAAKhC,GAC7B,EAAK8C,WAAWgI,UACd7L,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA6L,SAAA,WACCpW,KAAKmO,WAAWgI,QAGjB,YAAA3L,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCApIrC7P,GAAqB,0L,iCAArBA,EAAqB,qtH,GAAA,MChBlC,4BACI,8BAEA,4BACI,6BAGA,6BAIJ,iBAEA,+BAEI,+BACI,+BAUA,8BAYA,+BASA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,oEAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BAAyD,iBACrE,iBACA,8BACI,oCAA6C,yEACzC,yBACA,iCAAuB,8BAAwD,iBAC/E,iCAAyB,8BAA0D,iBACnF,iCAAwB,8BAAyD,iBACjF,iCAAwB,8BAAyD,iBACrF,iBACA,kCACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,qCAAY,iFAAoK,iBACpL,iBACJ,iBAEA,6BACI,6BACI,6BAAO,8BAAiD,iBAC5D,iBACA,8BACI,iCAA8C,0EAC1C,yBACA,iCAAuB,8BAA6C,iBACpE,iCAAwB,8BAA8C,iBAC1E,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BAAgD,iBAC5D,iBACA,8BACI,8BACI,8BAEI,8BAAK,yCAAS,EAAAib,cAAA,GAAwB,KAAO,EAAH,sCACtC,uBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAyBA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,mCAAU,4EAAiG,iBAC/G,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,mCAAU,uEAAuF,iBACrG,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,wEAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,iFAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,gCAAO,8EAAP,iBACJ,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,8BACI,mCAAU,gFAAyG,iBACvH,iBACJ,iBACA,6BACI,6BACI,6BAAQ,8BACR,iBACJ,iBACA,+BACI,oCAAU,0EAA6F,iBAC3G,iBACJ,iBAEA,8BACI,yBACA,+BACI,+BACJ,iBACJ,iBAEA,8BACI,8BACI,8BAAQ,+BACR,iBACJ,iBACA,+BACI,iCAAO,2EAAP,iBACJ,iBACJ,iBACA,8BACI,8BACI,8BAAQ,+BACR,iBACJ,iBACA,+BACI,iCAAO,+EAAP,iBACJ,iBACJ,iBACA,8BACI,8BACI,8BAAQ,+BACR,iBACJ,iBACA,+BACI,iCAAO,qEAAP,iBACJ,iBACJ,iBAEA,gCAOA,iCA2BA,gCAuBA,8BACI,yBACA,+BACI,+BACI,kCAAsB,wCAAS,EAAAS,cAC3B,+BACJ,iBACA,oCAGJ,iBACJ,iBACJ,iBAEJ,iBACJ,iBAEJ,kB,6BAhTU,oDAGG,4CAGA,6CAS+C,0EAUvB,mEAYA,kEAeV,qDAAyB,+BAQa,0DAA8B,uBAOnE,qDASI,kEAAsC,qCAAtC,CAAsC,kCAAtC,CAAsC,sBAAtC,CAAsC,sBASJ,2DAA+B,uBAe4B,qGAqC/F,6DAAiC,uBASjC,wDAA4B,uBAS/B,yDAA6B,uBAS7B,kEAAsC,uBAStC,+DAAmC,uBAShC,iEAAqC,uBASrC,2DAA+B,uBAiBlC,6DAAgC,uBAShC,gEAAoC,uBASpC,sDAA0B,uBAIhB,kEAOE,4DA2BrB,yEA4BoB,oEAEL,kD,iVD5RjC,GAKa,EAAA1b,yB,+DAAAA,EAAqB,E,KALjC,EAAAyC,U,MAAU,CACVC,SAAU,gBACVC,YAAa,iCACbC,UAAW,Q,iREdZ,WAGA,GAFA,MAEA,MACA,OAQA,SAIA,GAHA,MACA,MAEA,QAEA,SAEA,S,wICFoB,2BACE,6BACF,kB,sBACA,2BACE,6BACF,kB,yBACA,2BAAoE,YAA8B,kB,wCAA9B,qE,yBAPtE,4BACE,+BAGA,+BAGA,+BAeF,kB,uCArBS,oDAGA,4DAGA,8E,yBAmBP,2BACE,YACF,kB,6DADE,sI,yBAHJ,yBACE,6BACA,+BAGF,kB,4DAHS,8I,mDAUP,+BAAyC,4JAA6C,0FAAtF,iB,gEAA2H,gDAAuB,kDAAzG,uDAA6C,sB,yBADxF,0BACE,iCACF,kB,8BADU,qD,6EAKN,0B,6DAA2I,gDAAuB,kDAArI,0DAA+C,iD,mDAC5E,8BACE,2BAAkC,iJAA6D,iBACjG,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,yBAVJ,0BACE,6BACE,iCACA,gCAGF,iBAEA,6BAKF,kB,4DAXY,oDACD,oEAKgB,oE,mDAmBf,8BAAqF,iJACjF,sBACJ,kB,yBAIF,2BACE,6BACA,YACF,kB,uFADE,wG,yBAlBR,4BACE,6BACE,6BACE,yBAAI,sCAAkE,iBACxE,iBAEA,6BAEE,6BACE,0BACA,gCAGF,iBAGA,6BAIF,iBACF,iBACF,kB,qFAnB6B,4CAML,yEAA+C,sCAA/C,CAA+C,kBAA/C,CAA+C,mCACxD,oEAMgB,oL,yBAjBjC,2BACE,+BAuBF,kB,6DAvBsD,0F,yBAFxD,0BACE,8BAyBF,kB,4DAzB0B,gF,mDA+BtB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,Y,mBACF,kB,6DADE,qG,yBAXJ,0BAEE,6BACE,0B,mBACA,gCAGF,iBAEA,6BAKF,kB,4DAX6I,+DAAuB,kDAA7I,0DAA+C,gFAC3D,oEAKgB,qE,mDAqBvB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,yBArBJ,0BAGE,6BACE,6BACE,+BACE,0BACA,2BAAM,6BAA8D,iBACtE,iBACA,+BACE,0BACA,2BAAM,8BAA+D,iBACvE,iBACF,iBACA,iCAGF,iBAEA,8BAKF,kB,4DApBS,0EAEwH,oEAA4B,uDAAtG,kEAA0D,YAImB,qEAA6B,wDAA1G,kEAA4D,YAIxG,oEAKgB,qE,mDAWvB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,mDAXJ,0BAEE,6BACE,+BAA8E,iKAA9E,iBACA,gCAGF,iBAEA,6BAKF,iB,+DAXsI,+DAAuB,kDAAzI,0DAA+C,gDACxD,oEAKgB,qE,mDAWvB,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,mDAXJ,0BAEE,6BACE,+BAAqE,iKAArE,iBACA,gCAGF,iBAEA,6BAKF,iB,+DAXsI,+DAAuB,kDAAlJ,0DAA+C,gDAC/C,oEAKgB,qE,yBAYrB,gCAAqG,YAA+B,kB,uBAArD,6BAAsB,4D,mDAEvG,8BAAqF,iJACnF,sBACF,kB,yBAGF,2BACE,6BACA,YACF,kB,6DADE,kF,oDAdJ,0BAEE,6BACE,gCAA+J,iKAC7J,2BACA,kCACF,iBACA,gCAGF,iBAEA,6BAKF,iB,+DAd4D,+DAAuB,uDAAvE,0DAA+C,gDAE1B,sFAEtB,oEAKgB,2I,sBAsBnB,6B,sBACA,6B,oDAhBR,0BAaI,6BACE,gCAA0C,4GACxC,qCACA,qCACF,iBACF,iBACJ,iB,iCAJmB,gDACA,gD,0BAnMzB,2BAEE,6BACE,6BACE,8BAwBA,6BAOF,iBAEA,6BAEE,8BAIA,8BAeA,8BA4BA,+BAgBA,iCA0BA,+BAgBA,+BAgBA,gCAmBA,gCA2BF,iBACF,iBACF,kB,4CA5MW,wDAwBA,wDAWC,oDAIA,0EAeA,qDA4BA,oDAgBA,uDA0BA,qDAgBA,uDAgBA,oDAmBA,8E,0BA5LlB,4BAME,4BACE,wBACA,2BACE,gC,+CAiNF,iBACF,iBACF,kB,8BAnNkG,mH,oDAoNlG,0BACI,iDAQE,kHAEA,iBACN,iB,iCATM,yEAAgD,sBAAhD,CAAgD,6FAAhD,CAAgD,gGAAhD,CAAgD,0CAAhD,CAAgD,gCAAhD,CAAgD,mD,0BAjOxD,0BACE,+BA6NA,+BAaF,kB,6BA1OQ,2DA6NA,iFD1MZ,kBAgGC,WAAoBa,EAAsC6V,EAAuCzV,GAA7E,KAAAJ,eAAsC,KAAA6V,WAAuC,KAAAzV,cAxDjG,KAAA+X,mBAA6B,EAIpB,KAAApD,SAAmB,EAKnB,KAAAqD,aAAkC,KAKlC,KAAAC,cAAmC,KAG5C,KAAAC,oBAA2B,GAE3B,KAAAC,qBAA4B,GAInB,KAAAC,kBAA8B,GAE9B,KAAAC,QAAgB,IAAI1C,KAEpB,KAAA9E,UAAoB,EAEpB,KAAAgF,OAAiB,EAEjB,KAAAyC,qBAAsB,EAEtB,KAAAC,mBAAoB,EAInB,KAAAC,MAAQ,IAAI,EAAA7Z,aAEZ,KAAA8Z,gBAAkB,IAAI,EAAA9Z,aAKtB,KAAA4Y,SAAW,IAAI,EAAA5Y,aAEhB,KAAA+Z,aAAuB,EAEhC,KAAAC,mBAA2B,KAC3B,KAAAC,kBAA0B,KAC1B,KAAA/D,SAAmB,EAEnB,KAAAgE,2BAAuC,CAAC,MAAO,WAAY,OAAQ,iBAAkB,cAKpFpX,KAAKsW,kBAAoBtW,KAAKzB,YAAY8Y,oB,OAG3C,YAAApX,SAAA,WAE+B,MAA1BD,KAAK2W,oBACR3W,KAAKoX,2BAA2BpT,KAAKsT,MAAMtX,KAAKoX,2BAA4BpX,KAAK2W,mBAE5E3W,KAAK8W,mBACT9W,KAAKoX,2BAA2BpT,KAAK,aAKvC,IADA,IAAIuT,EAAW,KACN/T,EAAI,EAAGA,EAAIxD,KAAK8D,cAAc4M,WAAWzP,SAAUuC,EACb,aAA1CxD,KAAK8D,cAAc4M,WAAWlN,GAAGP,OACpCsU,EAAWvX,KAAK8D,cAAc4M,WAAWlN,IAG3C,GAAgB,MAAZ+T,EAAkB,CACrB,IAAIC,EAAsB,IAAI,EAAAC,UAAU,WAAY,WAAY,IAAI,EAAAC,eAAe,WAAY,MAAO,IAAI,EAAAA,eAAe,WAAY,OAAO,GAAM,GAAO,GAAO,GAChK1X,KAAK8D,cAAc4M,WAAW1M,KAAKwT,KAIrC,YAAA7M,gBAAA,sBACC3K,KAAK2X,cAAcC,cAAchX,WAAU,SAAAiX,GAC1C,EAAKzE,QAAsB,UAAXyE,GAAiC,aAAXA,EAEtC,EAAKd,MAAMe,KAAK,EAAK1E,aAIvB,YAAAR,YAAA,SAAYmF,GAEPA,EAAsB,cAEzB/X,KAAKuW,aAAe,IAAI,EAAAyB,kBAAkBhY,KAAK8D,cAAemU,KAAKC,MAAMD,KAAKE,UAAUnY,KAAKuW,eAAe7F,YAElF,MAAtB1Q,KAAKwW,cACRxW,KAAKwW,cAAgB,IAAI,EAAAwB,kBAAkBhY,KAAK8D,cAAemU,KAAKC,MAAMD,KAAKE,UAAUnY,KAAKuW,eAAe7F,YAG7G1Q,KAAKwW,cAAgB,IAAI,EAAAwB,kBAAkBhY,KAAK8D,cAAemU,KAAKC,MAAMD,KAAKE,UAAUnY,KAAKwW,gBAAgB9F,YAG/G1Q,KAAKoY,aAEGL,EAAiB,SACzB/X,KAAKoY,aAIP,YAAAC,WAAA,SAAWrF,EAAWxV,GACrBwV,EAAUxV,MAAQA,GAGnB,YAAA4a,UAAA,WACCpY,KAAKyW,oBAAsBzW,KAAKsY,iBAAiBtY,KAAKuW,cACtDvW,KAAK0W,qBAAuB1W,KAAKsY,iBAAiBtY,KAAKwW,eAE5B,MAAvBxW,KAAKuY,gBACRvY,KAAKuY,eAAeC,UAItB,YAAAF,iBAAA,SAAiBG,GAKhB,IALD,WACOC,EAAS,GAETC,EAAO3Y,KAAK4W,QAAQgC,U,WAEjBpV,GACR,IAAI3B,EAAO,EAAKiC,cAAc4M,WAAWlN,IACzCkV,EAAO7W,EAAKoB,MAAQ,KAEF,UAAdpB,EAAKmK,OACR0M,EAAO7W,EAAKoB,MACZ,CACC4V,UAAW,KACXC,QAAS,KACTtb,MAAO,EAAKwW,SAASY,WAInB/S,EAAKkX,kBACKN,EAAK/H,WAAW7O,EAAKoB,MAAM+V,OAEjC3X,SAAQ,SAAA4X,GAEd,IAAMJ,EAAY3E,KAAKgE,MAAMe,EAAIJ,WAC3BC,EAAU5E,KAAKgE,MAAMe,EAAIH,SAE3BH,GAAQE,GAAaF,GAAQG,IAEd,UAAdjX,EAAKmK,KACR0M,EAAO7W,EAAKoB,MAAQ,CACnB4V,UAAW,EAAKK,WAAWD,EAAIJ,WAC/BC,QAAS,EAAKI,WAAWD,EAAIH,SAC7Btb,MAAOya,KAAKC,MAAMD,KAAKE,UAAUc,EAAIzb,SAGhB,SAAdqE,EAAKmK,MAAgC,MAAbiN,EAAIzb,OAAiB2b,MAAMC,QAAQH,EAAIzb,QAAUyb,EAAIzb,MAAMyD,OAAS,EACpGyX,EAAO7W,EAAKoB,MAAQ,CACnB4V,UAAW,EAAKK,WAAWD,EAAIJ,WAC/BC,QAAS,EAAKI,WAAWD,EAAIH,SAC7Btb,MAAOyb,EAAIzb,MAAM,IAIlBkb,EAAO7W,EAAKoB,MAAQ,CACnB4V,UAAW,EAAKK,WAAWD,EAAIJ,WAC/BC,QAAS,EAAKI,WAAWD,EAAIH,SAC7Btb,MAAOyb,EAAIzb,WAOfkb,EAAO7W,EAAKoB,MAAQwV,EAAK/H,WAAW7O,EAAKoB,O,OAhDlCO,EAAI,EAAGA,EAAIxD,KAAK8D,cAAc4M,WAAWzP,SAAUuC,E,EAAnDA,GAoDT,IAASA,EAAI,EAAGA,EAAIxD,KAAK8D,cAAc4M,WAAWzP,SAAUuC,EAAG,CAC9D,IAAI3B,EAAO7B,KAAK8D,cAAc4M,WAAWlN,GAErC3B,EAAKkX,kBAAyC,MAArBL,EAAO7W,EAAKoB,QACxCyV,EAAO7W,EAAKoB,MAAQ,CACnB4V,UAAW,KACXC,QAAS,KACTtb,MAAO,KAKV,OAAOkb,GAGR,YAAAQ,WAAA,SAAWG,GACV,OAAOrZ,KAAKgU,SAASsF,qBAAqBD,IAG3C,YAAAE,iBAAA,SAAiBC,GAChBxZ,KAAKwW,cAAc9F,WAAWzN,KAAOjD,KAAK0W,qBAA2B,KAErE1W,KAAK8V,SAASgC,KAAK9X,KAAKwW,gBAGzB,YAAAiD,0BAAA,SAA0BzG,GAA1B,WAEKhT,KAAKiX,YACRjX,KAAKgX,gBAAgBc,KAAK9E,IAG1BhT,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA7T,6BAA8B,CACtE6U,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAItBtO,KAAKmO,WAAWI,QAAQmL,kBAAoB1Z,KAAKwW,cACjDxW,KAAKmO,WAAWI,QAAQzK,cAAgB9D,KAAK8D,cAC7C9D,KAAKmO,WAAWI,QAAQoL,eAAiB3Z,KAAKoU,MAC9CpU,KAAKmO,WAAWI,QAAQyE,UAAYA,EACpChT,KAAKmO,WAAWI,QAAQqL,yBAAyBhZ,WAAU,SAAAiZ,GAC1D,EAAKzB,eAGNpY,KAAKmO,WAAWI,QAAQ4F,SAAWnU,KAAKoP,WAI1C,YAAA0K,yBAAA,WAEC,IADA,IAAItC,EAAW,KACNhU,EAAI,EAAGA,EAAIxD,KAAK8D,cAAc4M,WAAWzP,SAAUuC,EACb,aAA1CxD,KAAK8D,cAAc4M,WAAWlN,GAAGP,OACpCuU,EAAWxX,KAAK8D,cAAc4M,WAAWlN,IAI3CxD,KAAKyZ,0BAA0BjC,IAGhC,YAAAuC,gBAAA,SAAgB/G,GACf,OAAiD,MAA7ChT,KAAK0W,qBAAqB1D,EAAU/P,OAA6D,MAA5CjD,KAAKyW,oBAAoBzD,EAAU/P,OAIpFjD,KAAK0W,qBAAqB1D,EAAU/P,MAAMzF,OAASwC,KAAK0W,qBAAqB1D,EAAU/P,MAAMzF,MAAMwc,SAAWha,KAAKyW,oBAAoBzD,EAAU/P,MAAMzF,OAGhK,YAAAyc,iBAAA,SAAiBjH,GAChB,OAAiD,MAA7ChT,KAAK0W,qBAAqB1D,EAAU/P,OAA6D,MAA5CjD,KAAKyW,oBAAoBzD,EAAU/P,OAIpFjD,KAAK0W,qBAAqB1D,EAAU/P,MAAMzF,OAASwC,KAAK0W,qBAAqB1D,EAAU/P,MAAMzF,QAAUwC,KAAKyW,oBAAoBzD,EAAU/P,MAAMzF,OAGzJ,YAAA0c,uBAAA,SAAuBnV,EAAYoV,GAClCna,KAAKmX,kBAAoBc,KAAKC,MAAMD,KAAKE,UAAUnY,KAAKkX,sBAGzD,YAAAkD,qCAAA,SAAqCC,GACpC,IAAK,IAAI7W,EAAI,EAAGA,EAAIxD,KAAK8D,cAAc4M,WAAWzP,OAAQuC,IAAK,CAC9D,IAAI3B,EAAY7B,KAAK8D,cAAc4M,WAAWlN,GAE9C,GAAkB,SAAd3B,EAAKmK,MAAmBnK,EAAKoB,OAASoX,EAAmB,CAG5D,IAAIC,GADJzY,EAAsBA,GACF0Y,SAAS5T,SAE7B,MAAkB,WAAd9E,EAAKoB,KACD,UAAMuX,eAAeF,GAGrBA,GAKV,OAAO,MAGR,YAAAG,gBAAA,SAAgBC,EAAMC,GAErB,GAAW,MAAPA,GAAuB,MAARD,EAClB,OAAO,EAGR,GAAW,MAAPC,GAAuB,MAARD,GAA8B,GAAdC,EAAI1Z,QAA8B,GAAfyZ,EAAKzZ,OAC1D,OAAO,EAGR,IAAI2Z,EAAaD,EACbxB,MAAMC,QAAQuB,KACjBC,EAAaD,EAAI,IAGlB,IAAIE,EAAcH,EAKlB,OAJIvB,MAAMC,QAAQsB,KACjBG,EAAcH,EAAK,IAGbE,IAAeC,GAGvB,YAAAC,kBAAA,SAAkBhe,GAEjB,IAAK,IAAI0G,EAAI,EAAGA,EAAIxD,KAAK8D,cAAc4M,WAAWzP,OAAQuC,IAAK,CAC9D,IAAI3B,EAAO7B,KAAK8D,cAAc4M,WAAWlN,GAEzC,GAAI3B,EAAKoB,OAASnG,EACjB,OAAO+E,EAAKmK,KAId,OAAO,MAGD,YAAA+O,WAAP,WACC,OAAO/a,KAAKoT,SAGN,YAAA4H,aAAP,WACC,OAAOhb,KAAKwW,e,iCArUDnd,GAAuC,sH,iCAAvCA,EAAuC,0E,GAAA,M,8lBAlCxC,CAAC,EAAAnD,WAAS,wiFC3BtB,+BACE,+BAEE,+BA6OF,iBACF,kB,MA9OU,qD,qsEDyBG,CACX,CACC,EAAAyd,QAAQ,YAAa,CACpB,EAAAC,WAAW,SAAU,CACpB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,QAKb,EAAAtH,QAAQ,QAAS,CAChB,EAAAvB,MAAM,OAAQ,EAAAzP,MAAM,CAAE8F,KAAM,KACvB,EAAA2J,MAAM,QAAS,EAAAzP,MAAM,CAAE8F,KAAM,UAC7B,EAAAmL,WAAW,SAAU,EAAAV,QAAQ,a,EAzBtC,GAsCa,EAAA7Z,4C,+DAAAA,GAAuC,E,KAtCnD,EAAA8D,U,MAAU,CACVC,SAAU,oCACVC,YAAa,qDACbC,UAAW,CAAC,2CACZnB,UAAW,CAAC,EAAAjG,UACZ2d,WAAY,CACX,CACC,EAAAF,QAAQ,YAAa,CACpB,EAAAC,WAAW,SAAU,CACpB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,QAKb,EAAAtH,QAAQ,QAAS,CAChB,EAAAvB,MAAM,OAAQ,EAAAzP,MAAM,CAAE8F,KAAM,KACvB,EAAA2J,MAAM,QAAS,EAAAzP,MAAM,CAAE8F,KAAM,UAC7B,EAAAmL,WAAW,SAAU,EAAAV,QAAQ,e,gGAmB5BA,QAAS,CAAF,C,KAAf,EAAA3V,QAKQgZ,aAAc,CAAF,C,KAApB,EAAAhZ,QAKQiZ,cAAe,CAAF,C,KAArB,EAAAjZ,QAOQuG,cAAe,CAAF,C,KAArB,EAAAvG,QAEQoZ,kBAAmB,CAAF,C,KAAzB,EAAApZ,QAEQqZ,QAAS,CAAF,C,KAAf,EAAArZ,QAEQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,QAEQ6W,MAAO,CAAF,C,KAAb,EAAA7W,QAEQsZ,oBAAmB,E,KAA3B,EAAAtZ,QAEQuZ,kBAAiB,E,KAAzB,EAAAvZ,QAE4Bgb,eAAc,E,KAA1C,EAAA5G,U,MAAU,oBAEDoF,MAAK,E,KAAd,EAAAtZ,SAESuZ,gBAAe,E,KAAxB,EAAAvZ,SAKSqY,SAAQ,E,KAAjB,EAAArY,SAEQwZ,YAAa,CAAF,C,KAAnB,EAAA1Z,QAQ2Boa,cAAa,E,KAAxC,EAAAhG,U,MAAU,sB,mHErHZ,W,GACA,O,+DCDA,4BACE,4BACE,4BACE,4BACA,6BAA6B,iBAAO,qCAAkE,gBAAC,iBACzG,iBACF,iBACA,4BACE,6BACE,+BAAO,wEAAP,iBACF,iBACF,iBACF,kB,2CATgB,yCAC6C,4CAKhD,+CAA+B,yBAA/B,CAA+B,sBAA/B,CAA+B,wCDN5C,iBAWI,aALgB,KAAA7U,IAAc,GAEd,KAAAC,UAAoB,EACnB,KAAAE,YAAc,IAAI,EAAAC,a,wCAJ1B/D,I,iCAAAA,EAAuB,8YCRpC,+B,KAAgD,8C,wJDGhD,GAKa,EAAAA,2B,+DAAAA,EAAuB,E,KALnC,EAAAgE,U,MAAW,CACRC,SAAU,kBACVC,YAAa,mCACbC,UAAW,Q,uBAGKR,IAAK,CAAF,C,KAAlB,EAAAS,QACeC,MAAO,CAAF,C,KAApB,EAAAD,QACeR,SAAU,CAAF,C,KAAvB,EAAAQ,QACgBN,YAAW,E,KAA3B,EAAAQ,Y,kFEZL,+BAgDA,OA1CQ,EAAA+c,eAAP,SAAuBU,GAGjB,IAFA,IAAIC,EAAW,GAEL3X,EAAI,EAAGA,EAAI0X,EAAIja,SAAUuC,EACV,mBAAhB0X,EAAI1X,GAAGP,MACU,uBAAhBiY,EAAI1X,GAAGP,MAEbkY,EAASnX,KAAKkX,EAAI1X,IAItB,OAAO2X,GAQN,EAAAC,iBAAP,SAAwBC,GACjB,IAAMC,EAAMD,EAAQE,aACdC,EAAQH,EAAQI,cAAgB,EAEtC,OAAOJ,EAAQK,iBAAmB,KAAQF,EAAQ,GAAK,IAAM,IAAOA,EAAQ,KAAQF,EAAM,GAAK,IAAM,IAAOA,GAG5G,EAAAK,kBAAP,SAAyBC,EAAiBC,EAAeC,EAAiBC,GACzE,OAAIH,GAAWE,GAAWA,GAAWD,IACjCD,GAAWG,GAASA,GAASF,GAC7BC,EAAUF,GAAWC,EAAQE,IAI3B,EAAAC,mBAAP,SAA0BC,EAAeC,GACxC,OAAIA,EAAMD,GAIJ,EAAAE,OAAP,SAAcN,EAAeC,GAC5B,OAAQA,EAAUD,EAAS,OAG7B,EAhDA,G,0HCCA,W,6ICAE,+BAKE,0F,uBACF,iB,gCAJE,8DAAwD,0E,sBAK1D,4BACE,4BACE,4BACF,iBACA,uBACF,kBDVF,iBAcC,WAAYO,GANF,KAAAC,YAAc,IAAI,EAAAnf,aAEnB,KAAAof,SAAmB,EACnB,KAAAC,oBAA8B,EAC9B,KAAAC,MAAgB,EAGxBxc,KAAKoc,MAAQA,E,OAGd,YAAAK,MAAA,SAAMC,GACL,OAAO1c,KAAKoc,MAAM/b,eAGnB,YAAAsc,SAAA,SAASD,GACR1c,KAAKoc,MAAM/b,cAAce,UAG1B,YAAAwb,QAAA,WACC5c,KAAKqc,YAAYvE,Q,iCAtBNle,GAAiB,oC,iCAAjBA,EAAiB,qkBCR9B,4BACE,iCAOA,8BAMF,kB,MAbW,yDAOH,2D,mmCDLR,GAKa,EAAAA,qB,+DAAAA,EAAiB,E,KAL7B,EAAAuD,U,MAAU,CACVC,SAAU,sBACVC,YAAa,uCACbC,UAAW,CAAC,kC,0CAKF+e,YAAW,E,KAApB,EAAA5e,SAEQ6e,QAAS,CAAF,C,KAAf,EAAA/e,QACQgf,mBAAoB,CAAF,C,KAA1B,EAAAhf,QACQif,KAAM,CAAF,C,KAAZ,EAAAjf,W,gHEfF,WACA,QACA,Q,GAGA,M,sBAOA,aAGI,WAAqBsf,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAEhD,YAAAC,cAAA,SAAeC,GACV,IAAIC,EAAqB,IAAI,EAAAC,WAQ7B,OANkB,MAAbF,IACDC,EAASA,EAAOE,IAAK,YAAaH,IAK/Bhd,KAAK6c,KACPO,IAAuBC,IAAM,+BAAgC,CAAEJ,OAAQA,IAChF3c,KAAK,EAAAgd,UAAS,gBAGLC,aAGT,YAAAC,YAAA,SAAaC,GAAb,WACQC,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACPnC,KAAY2C,IAAM,6BAA8BpF,KAAKE,UAAW,CAAEsF,OAAQA,IAAY,CAAEC,QAASA,IAC1Gpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGZ,YAAAM,4BAAA,SAA6BJ,GAA7B,WACWC,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACPnC,KAAY2C,IAAM,6CAA8CpF,KAAKE,UAAW,CAAEsF,OAAQA,IAAY,CAAEC,QAASA,IAC1Hpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAIT,YAAAO,WAAA,SAAYC,GAAZ,WACQL,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACPnC,KAAY2C,IAAM,4BAA6BpF,KAAKE,UAAW,CAAE4F,SAAUA,IAAc,CAAEL,QAASA,IAC7Gpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGT,YAAAS,aAAA,SAAcD,GAAd,WACQL,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACPnC,KAAY2C,IAAM,8BAA+BpF,KAAKE,UAAW,CAAE4F,SAAUA,IAAc,CAAEL,QAASA,IAC/Gpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGT,YAAAU,eAAA,SAAenf,GACjB,IAAIme,EAAqB,IAAI,EAAAC,WAIvB,OAFND,EAASA,EAAOE,IAAI,SAAUre,GAEjBkB,KAAK6c,KAAKO,IAAsBC,IAAM,kCAAmC,CAAEJ,OAAQA,IACrFM,aAGT,YAAAW,kBAAA,SAAmBlB,GAAnB,WACQC,EAAqB,IAAI,EAAAC,WAK7B,OAJAD,EAASA,EAAOE,IAAK,YAAaH,GAElChd,KAAK8c,aAAab,QAEXjc,KAAK6c,KAAKO,IAAoBC,IAAM,qCAAsC,CAAEJ,OAAQA,IAC/F3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGZ,YAAAY,qBAAA,SAAsBnB,GAAtB,WACWU,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KAAKnC,KAAqB2C,IAAM,wCAAyCpF,KAAKE,UAAW,CAAE6E,UAAWA,IAAe,CAAEU,QAASA,IAChJpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGT,YAAAa,QAAA,SAASpB,GAAT,WACQU,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KAAKnC,KAAqB2C,IAAM,iCAAkCpF,KAAKE,UAAW,CAAE6E,UAAWA,IAAe,CAAEU,QAASA,IACzIpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGT,YAAAc,OAAA,SAAQrB,GAAR,WACQU,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KAAKnC,KAAc2C,IAAM,wBAAyBpF,KAAKE,UAAW,CAAE6E,UAAWA,IAAe,CAAEU,QAASA,IACzHpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGT,YAAAe,iBAAA,SAAkBtB,EAAmBuB,GAArC,WACQb,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KAAKnC,KAAwB2C,IAAM,oCAAqCpF,KAAKE,UAAW,CAAE6E,UAAWA,EAAWuB,QAASA,IAAa,CAAEb,QAASA,IACjKpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGT,YAAAiB,kBAAA,SAAmBxB,EAAmBuB,GAAtC,WACQb,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAKpB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KAAKnC,KAAwB2C,IAAM,qCAAsCpF,KAAKE,UAAW,CAAE6E,UAAWA,EAAWuB,QAASA,IAAa,CAAEb,QAASA,IAClKpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGT,YAAAkB,oBAAA,SAAqBF,GAArB,WACQb,EAAU,IAAI,EAAAC,YAAa,CAC3B,eAAgB,qBAGhBV,EAAqB,IAAI,EAAAC,WAK7B,OAJAD,EAASA,EAAOE,IAAK,UAAWoB,GAEhCve,KAAK8c,aAAab,QAEXjc,KAAK6c,KAAKnC,KAAiB2C,IAAM,2BAA4B,CAACkB,QAASA,GAAU,CAAEb,QAASA,IACvGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAETL,aAGZ,YAAAmB,WAAA,SAAWX,EAAkBY,GAA7B,WACKjB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAA0B2C,IAAM,oCAAqCpF,KAAKE,UAAU,CAAEyG,UAAWb,EAAUc,MAAOF,IAAW,CAAEjB,QAASA,IACxIpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,a,iCA3MS1nB,GAAoB,sD,oCAApBA,EAAoB,QAApBA,EAAoB,O,EADjC,GACa,EAAAA,wB,+DAAAA,EAAoB,E,KADhC,EAAAwc,c,kLCOD,WACA,QAEA,Q,GAIA,M,sBAIA,aAGC,WAAoBwK,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAgC,kBAAA,SAAkBrT,GACjB,IAAIwR,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,QAASlF,KAAKE,UAAU1M,IAErCzL,KAAK6c,KACVO,IAAqBC,IAAM,6BAA8B,CAAEJ,OAAQA,IACnEM,aAGH,YAAAtT,oBAAA,SAAoBH,EAAuBC,EAAiCC,GAA5E,WAEK0T,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,yBAA0BpF,KAAKE,UAAU,CAAErO,cAAeA,EAAeC,wBAAyBA,EAAyBC,uBAAwBA,IAA2B,CAAE0T,QAASA,IACnNpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAApV,mBAAA,SAAmB2B,EAAuBC,EAAiCU,EAAiCC,GAA5G,WAEKgT,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,gCAAiCpF,KAAKE,UAAU,CAAErO,cAAeA,EAAeC,wBAAyBA,EAAyBU,wBAAyBA,EAAyBC,0BAA2BA,IAA8B,CAAEgT,QAASA,IAClRpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA1M,oBAAA,SAAoB/G,EAAuBC,EAAiCC,GAA5E,WAEK0T,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,4BAA6BpF,KAAKE,UAAU,CAAErO,cAAeA,EAAeC,wBAAyBA,EAAyBC,uBAAwBA,IAA2B,CAAE0T,QAASA,IACtNpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAwB,oBAAA,SAAoBC,GAApB,WAEKtB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,4BAA6BpF,KAAKE,UAAU,CAAE,OAAU6G,IAAW,CAAEtB,QAASA,IACxGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA0B,oBAAA,SAAoBD,GAApB,WAEKtB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,4BAA6BpF,KAAKE,UAAU,CAAE,OAAU6G,IAAW,CAAEtB,QAASA,IACxGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA3O,oBAAA,SAAoB3L,GAApB,WAEKya,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAiB2C,IAAM,4BAA6B,CAAE,KAAQpa,GAAQ,CAAEya,QAASA,IACjFpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAjM,sBAAA,SAAsBF,EAA2BC,EAAoCnE,GAArF,WAEKwQ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,0BAA2BpF,KAAKE,UAAU,CAAE,kBAAqB/G,EAAmB,2BAA8BC,EAA4B,kBAAqBnE,IAAsB,CAAEwQ,QAASA,IAC9Npd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA/L,yBAAA,SAAyBJ,EAA2BlE,GAApD,WAEKwQ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,6BAA8BpF,KAAKE,UAAU,CAAE,kBAAqB/G,EAAmB,kBAAqBlE,IAAsB,CAAEwQ,QAASA,IACvKpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,a,iCA1IS5nB,GAAgB,sD,oCAAhBA,EAAgB,QAAhBA,EAAgB,O,EAD7B,GACa,EAAAA,oB,+DAAAA,EAAgB,E,KAD5B,EAAA0c,c,2KC9BD,WACA,QACA,Q,GAGA,M,sBAIA,aAGC,WAAoBwK,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAoC,kBAAA,SAAkBC,GAAlB,WACKzB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAA0B2C,IAAM,cAAepF,KAAKE,UAAU,CAAEiH,KAAMD,IAAkB,CAAEzB,QAASA,IACnGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA8B,aAAA,SAAaF,GAAb,WACKzB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAW2C,IAAM,qBAAsBpF,KAAKE,UAAU,CAAEgH,cAAeA,IAAkB,CAAEzB,QAASA,IACpGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA+B,gBAAA,SAAgBH,GAAhB,WACKzB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAA0B2C,IAAM,cAAepF,KAAKE,UAAU,CAAEiH,KAAMD,IAAkB,CAAEzB,QAASA,IACnGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAhJ,mBAAA,SAAmBgL,GAClB,IAAItC,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,uBAAwBoC,EAAqB9L,YAE1DzT,KAAK6c,KACVO,IAAwDC,IAAM,gCAAiC,CAAEJ,OAAQA,IACzGM,aAGH,YAAAiC,iBAAA,SAAiBvc,EAAc6G,EAAuB2V,GACrD,IAAIxC,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,OAAQla,IACZka,IAAI,gBAAiBrT,IACrBqT,IAAI,wBAAyBsC,EAAsBhM,YAE5DzT,KAAK6c,KACVO,IAAgBC,IAAM,mCAAoC,CAAEJ,OAAQA,IACpEM,aAGH,YAAAxH,sBAAA,SAAsB9S,EAAcyc,GAApC,WACKzC,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,OAAQla,IACZka,IAAI,eAAgBuC,EAAajM,YAEjDzT,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAAmFC,IAAM,qCAAsC,CAAEJ,OAAQA,IACzI3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAvH,0BAAA,SAA0B/S,EAAcyc,GAAxC,WACKzC,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,OAAQla,IACZka,IAAI,eAAgBuC,EAAajM,YAEjDzT,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAAmFC,IAAM,6CAA8C,CAAEJ,OAAQA,IACjJ3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAoC,wBAAA,SAAwBzY,EAAc8E,EAAcrG,EAAgBjC,GAEnE,IAAIga,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CACZ/V,KAAMA,EACN8E,KAAMA,GAQP,OALc,MAAVrG,GAA+B,MAAbjC,IACrBuZ,EAAOtX,OAASA,EAChBsX,EAAOvZ,UAAYiC,GAGb3F,KAAK6c,KACVnC,KAAU2C,IAAM,6BAA8BpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IACjFH,aAGH,YAAAqC,uBAAA,SAAuBC,EAAkBhY,GAAzC,WACK6V,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAc2C,IAAM,sCAAuCpF,KAAKE,UAAU,CAAE0H,SAAUA,EAAUhY,MAAOA,IAAU,CAAE6V,QAASA,IAC5Hpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAuC,uBAAA,SAAuBC,EAAmBC,GAA1C,WACKtC,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAW2C,IAAM,sCAAuCpF,KAAKE,UAAU,CAAE4H,UAAWA,EAAWC,KAAMA,IAAS,CAAEtC,QAASA,IACzHpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA0C,mBAAA,SAAmBC,EAAuBhZ,EAAciZ,GAEvD,IAAIlD,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,gBAAiB+C,IACrB/C,IAAI,OAAQjW,IACZiW,IAAI,QAASgD,GAEtBngB,KAAK6c,KACVO,IAAmCC,IAAM,qCAAsC,CAAEJ,OAAQA,IACzFM,aAGH,YAAA6C,kBAAA,SAAkBC,EAAsBxY,GACvC,IAAI6V,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGb9Z,EAAOoU,KAAKE,UAAU,CAAEkI,aAAcA,EAAcxY,MAAOA,IAE/D,OAAO7H,KAAK6c,KACVnC,KAAc2C,IAAM,oCAAqCxZ,EAAM,CAAE6Z,QAASA,IAC1EH,aAGH,YAAA+C,kBAAA,SAAkBP,GACjB,IAAIrC,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGb9Z,EAAOoU,KAAKE,UAAU,CAAE4H,UAAWA,IAEvC,OAAO/f,KAAK6c,KACVnC,KAAW2C,IAAM,oCAAqCxZ,EAAM,CAAE6Z,QAASA,IACvEH,aAGH,YAAAgD,WAAA,SAAW1Y,EAAe5E,EAAcud,GACvC,IAAI9C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CAAEuD,eAAgBA,EAAgBC,SAAU,CAAE5Y,MAAOA,EAAO5E,KAAMA,IAE/E,OAAOjD,KAAK6c,KACVnC,KAAW2C,IAAM,6BAA8BpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IAClFH,aAGH,YAAAmD,WAAA,SAAWF,EAAwBG,GAClC,IAAIjD,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGjB,OAAO3d,KAAK6c,KACVnC,KAAW2C,IAAM,gCAAiCpF,KAAKE,UAAU,CAAE,eAAkBqI,EAAgB,SAAYG,IAAa,CAAEjD,QAASA,IACzIH,a,iCA7MSznB,GAAS,sD,oCAATA,EAAS,QAATA,EAAS,O,EADtB,GACa,EAAAA,a,+DAAAA,EAAS,E,KADrB,EAAAuc,c,4LCUD,WACA,Q,GAGA,M,sBAMA,aAII,WAAqBwK,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAG/C,YAAA8D,iBAAA,WACI,OAAO5gB,KAAK6c,KACPO,IAAoBC,IAAM,yCAC1BE,aAGT,YAAAsD,cAAA,SAAeC,EAAkBC,EAAiBC,GAC9C,IAAI/D,EAAqB,IAAI,EAAAC,WAc7B,OAZiB,MAAZ4D,IACD7D,EAASA,EAAOE,IAAK,WAAY2D,IAGrB,MAAXC,IACD9D,EAASA,EAAOE,IAAK,UAAW4D,IAGpB,MAAXC,IACD/D,EAASA,EAAOE,IAAK,UAAW6D,IAG7BhhB,KAAK6c,KACPO,IAAWC,IAAM,8BAA+B,CAAEJ,OAAQA,IAC1DM,a,iCA7BA3nB,GAA0B,sD,oCAA1BA,EAA0B,QAA1BA,EAA0B,O,EADvC,GACa,EAAAA,8B,+DAAAA,EAA0B,E,KADtC,EAAAyc,c,4KC7BD,WACA,QACA,QACA,S,GAGA,M,sBAKA,aAGC,WAAoBwK,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,eAC5CmE,EAAiBC,YAAc,gG,OAIjC,YAAAC,MAAA,SAAM1M,EAAkB3K,EAAuBuP,GAA/C,WAEK4D,EAAqB,IAAI,EAAAC,WAgB7B,OAdgB,MAAZzI,IACHwI,EAASA,EAAOE,IAAI,WAAY1I,IAGZ,MAAjB3K,IACHmT,EAASA,EAAOE,IAAI,gBAAiBrT,IAG1B,MAARuP,IACH4D,EAASA,EAAOE,IAAI,OAAQ9D,IAG7BrZ,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAAyBC,IAAM,0BAA2B,CAAEJ,OAAQA,IACpE3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAgCH,YAAA6D,OAAA,SAAOla,EAAcmS,GAArB,WACK4D,EAAqB,IAAI,EAAAC,WAS7B,OARAD,EAASA,EAAOE,IAAI,OAAQjW,GAEhB,MAARmS,IACH4D,EAASA,EAAOE,IAAI,OAAQ9D,IAG7BrZ,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAA6CC,IAAM,2BAA4B,CAAEJ,OAAQA,IACzF3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,a,iCA7ES7nB,GAAU,sD,oCAAVA,EAAU,QAAVA,EAAU,O,EADvB,GACa,EAAAA,c,+DAAAA,EAAU,E,KADtB,EAAA2c,c,iLCQD,WACA,QAGA,Q,GAWA,M,sBAKA,aAGC,WAAoBwK,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAA1R,KAAA,WACC,OAAOpL,KAAK6c,KAAKO,IAAgHC,IAAM,aACrIE,aAIH,YAAA8D,kBAAA,SAAkB5V,EAAiBhI,GAClC,IAAIwZ,EAAqB,IAAI,EAAAC,WAW7B,OARa,MAATzR,IACHwR,EAASA,EAAOE,IAAI,QAASlF,KAAKE,UAAU1M,KAG1B,MAAfhI,IACHwZ,EAASA,EAAOE,IAAI,cAAelF,KAAKE,UAAU1U,KAG5CzD,KAAK6c,KACVO,IAAqBC,IAAM,6BAA8B,CAAEJ,OAAQA,IACnEM,aAGH,YAAA+D,oBAAA,SAAoBC,EAAiBC,EAAuBC,EAAkBC,EAAoBrI,GACjG,IAAI4D,EAAqB,IAAI,EAAAC,WAW7B,OANAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,UAAWoE,IACfpE,IAAI,gBAAiBqE,IACrBrE,IAAI,cAAelF,KAAKE,UAAUsJ,KAClCtE,IAAI,YAAalF,KAAKE,UAAUuJ,IAEpC,MAARrI,IACH4D,EAASA,EAAOE,IAAI,OAAQ9D,IAGtBrZ,KAAK6c,KACVO,IAAoBC,IAAM,uCAAwC,CAAEJ,OAAQA,IAC5EM,aAGH,YAAAoE,mBAAA,SAAmBC,EAAkBC,EAAwBC,EAAoBJ,GAChF,IAAIzE,EAAqB,IAAI,EAAAC,WAO7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,WAAYyE,IAChBzE,IAAI,iBAAkB0E,IACtB1E,IAAI,gBAAiBlF,KAAKE,UAAU2J,KACpC3E,IAAI,YAAalF,KAAKE,UAAUuJ,IAEzC1hB,KAAK6c,KACVO,IAAmBC,IAAM,6BAA8B,CAAEJ,OAAQA,IACjEM,aAGH,YAAAwE,qBAAA,SAAqBtN,GAArB,WACKiJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAU2C,IAAM,sCAAuCpF,KAAKE,UAAU,CAAE,SAAY1D,IAAa,CAAEiJ,QAASA,IAC5Gpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAtN,oBAAA,SAAoB+R,GAApB,WAEKtE,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,4BAA6BpF,KAAKE,UAAU,CAAE,OAAU6J,IAAW,CAAEtE,QAASA,IACxGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA0E,oBAAA,SAAoBD,GAApB,WACKtE,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAoB2C,IAAM,4BAA6BpF,KAAKE,UAAU,CAAE,OAAU6J,IAAW,CAAEtE,QAASA,IACxGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAnN,oBAAA,SAAoBnN,GAApB,WACKya,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAW2C,IAAM,4BAA6BpF,KAAKE,UAAU,CAAElV,KAAMA,IAAS,CAAEya,QAASA,IACzFpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA2E,iBAAA,SAAiBC,EAAsBnP,GAAvC,WAEK0K,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAgB2C,IAAM,kCAAmCpF,KAAKE,UAAU,CAAE,aAAgBgK,EAAc,cAAiBnP,IAAc,CAAE0K,QAASA,IAClJpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA6E,oBAAA,SAAoBD,EAAsBnP,GAA1C,WAEK0K,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA3d,KAAK8c,aAAab,QAGXjc,KAAK6c,KACVnC,KAAgB2C,IAAM,qCAAsCpF,KAAKE,UAAU,CAAE,aAAgBgK,EAAc,cAAiBnP,IAAc,CAAE0K,QAASA,IACrJpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA8E,oBAAA,SAAoBF,EAAsBG,GAA1C,WAEK5E,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA3d,KAAK8c,aAAab,QAGXjc,KAAK6c,KACVnC,KAAc2C,IAAM,qCAAsCpF,KAAKE,UAAU,CAAE,aAAgBgK,EAAc,cAAiBG,IAAkB,CAAE5E,QAASA,IACvJpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAgF,2BAAA,SAA2B/B,EAAwBgC,GAAnD,WAEK9E,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA3d,KAAK8c,aAAab,QAGXjc,KAAK6c,KACVnC,KAAW2C,IAAM,6BAA8BpF,KAAKE,UAAU,CAAE,eAAkBqI,EAAgB,SAAYgC,IAAS,CAAE9E,QAASA,IAClIpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAkF,8BAAA,SAA8BjC,EAAwBC,GAAtD,WAEK/C,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA3d,KAAK8c,aAAab,QAGXjc,KAAK6c,KACVnC,KAAW2C,IAAM,gCAAiCpF,KAAKE,UAAU,CAAE,eAAkBqI,EAAgB,SAAYC,IAAa,CAAE/C,QAASA,IACzIpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAmF,8BAAA,SAA8BlC,EAAwBG,GAAtD,WAEKjD,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,OAHA3d,KAAK8c,aAAab,QAGXjc,KAAK6c,KACVnC,KAAgB2C,IAAM,gCAAiCpF,KAAKE,UAAU,CAAE,eAAkBqI,EAAgB,SAAYG,IAAa,CAAEjD,QAASA,IAC9Ipd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAvC,aAAA,SAAa2H,EAAYlO,GACxB,IAAIwI,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,KAAMwF,IACVxF,IAAI,WAAY1I,GAEzBzU,KAAK6c,KACVO,IAAeC,IAAM,qBAAsB,CAAEJ,OAAQA,IACrDM,aAGH,YAAAqF,mBAAA,SAAmB3f,EAAcwR,GAChC,IAAIwI,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,OAAQla,IACZka,IAAI,WAAY1I,GAEzBzU,KAAK6c,KACVO,IAAcC,IAAM,4BAA6B,CAAEJ,OAAQA,IAC3DM,aAGH,YAAAsF,yBAAA,SAAyB5f,EAAcwR,EAAkB4E,GACxD,IAAI4D,EAAqB,IAAI,EAAAC,WAM7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,OAAQla,IACZka,IAAI,WAAY1I,IAChB0I,IAAI,OAAQ9D,GAErBrZ,KAAK6c,KACVO,IAAcC,IAAM,iCAAkC,CAAEJ,OAAQA,IAChEM,aAGH,YAAAuF,mBAAA,SAAmB7f,EAAcwR,GAChC,IAAIwI,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,OAAQla,IACZka,IAAI,WAAY1I,GAEzBzU,KAAK6c,KACVO,IAAeC,IAAM,0BAA2B,CAAEJ,OAAQA,IAC1DM,aAGH,YAAAwF,2BAAA,SAA2B9f,EAAcwR,GAAzC,WACKwI,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,OAAQla,IACZka,IAAI,WAAY1I,GAEhCzU,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAAyBC,IAAM,2CAA4C,CAAEJ,OAAQA,IACrF3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAoC,wBAAA,SAAwBzY,EAAc8E,EAAcrG,EAAgBkc,EAAwBne,EAAmB2V,GAE9G,IAAIqE,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CACZ/V,KAAMA,EACN8E,KAAMA,GAgBP,OAbc,MAAVrG,GAA+B,MAAbjC,IACrBuZ,EAAOtX,OAASA,EAChBsX,EAAOvZ,UAAYA,GAGE,MAAlBme,IACF5E,EAAO4E,eAAiBA,GAGd,MAARxI,IACH4D,EAAO5D,KAAOA,GAGRrZ,KAAK6c,KACVnC,KAAgB2C,IAAM,6BAA8BpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IACvFH,aAGH,YAAAyF,iCAAA,SAAiC9b,EAAc8E,GAC9C,IAAI0R,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CACZ/V,KAAMA,EACN8E,KAAMA,GAGP,OAAOhM,KAAK6c,KACVnC,KAAgB2C,IAAM,6BAA8BpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IACvFH,aAGH,YAAA0F,iBAAA,SAAiBC,EAAkBC,EAAoBC,EAAkBC,GAExE,IAAIpG,EAAqB,IAAI,EAAAC,WAO7B,OAHAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,WAAY+F,EAASzP,aACzB0J,IAAI,aAAcgG,EAAW1P,aAC7B0J,IAAI,WAAYiG,IAChBjG,IAAI,cAAekG,EAAY5P,YAGxCzT,KAAK6c,KACVO,IAAoBC,IAAM,kBAAmB,CAAEJ,OAAQA,IACvDM,aAGH,YAAA+F,0BAAA,SAA0BJ,EAAkBC,EAAoBC,EAAkBC,GAEjF,IAAIpG,EAAqB,IAAI,EAAAC,WAM7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,WAAY+F,EAASzP,aACzB0J,IAAI,aAAcgG,EAAW1P,aAC7B0J,IAAI,WAAYiG,IAChBjG,IAAI,cAAekG,EAAY5P,YAExCzT,KAAK6c,KACVO,IAAoBC,IAAM,qBAAsB,CAAEJ,OAAQA,IAC1DM,aAGH,YAAAgG,gBAAA,SAAgBC,EAAmBN,EAAkBC,EAAoBM,GACxE,IAAIxG,EAAqB,IAAI,EAAAC,WAM7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,YAAaqG,IACjBrG,IAAI,WAAY+F,EAASzP,aACzB0J,IAAI,aAAcgG,EAAW1P,aAC7B0J,IAAI,iBAAkBsG,EAAehQ,YAE9CzT,KAAK6c,KACVO,IAAkBC,IAAM,0BAA2B,CAAEJ,OAAQA,IAC7DM,aAGH,YAAAmG,iBAAA,SAAiBF,EAAmBN,EAAkBC,GACrD,IAAIlG,EAAqB,IAAI,EAAAC,WAK7B,OAFAD,GADAA,GADAA,EAASA,EAAOE,IAAI,YAAaqG,IACjBrG,IAAI,WAAY+F,EAASzP,aACzB0J,IAAI,aAAcgG,EAAW1P,YAEtCzT,KAAK6c,KACVO,IAAkBC,IAAM,0BAA2B,CAAEJ,OAAQA,IAC7DM,aAGH,YAAAoG,oBAAA,SAAoBH,GAApB,WACK9F,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAW2C,IAAM,sBAAuBpF,KAAKE,UAAU,CAAEqL,UAAWA,IAAc,CAAE9F,QAASA,IAC7Fpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAqG,wBAAA,SAAwBC,GAAxB,WACKnG,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAiB2C,IAAM,0BAA2BpF,KAAKE,UAAU,CAAE0L,OAAQA,IAAW,CAAEnG,QAASA,IACjGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAuG,mBAAA,SAAmBD,GAAnB,WACKnG,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAiB2C,IAAM,qBAAsBpF,KAAKE,UAAU,CAAE0L,OAAQA,IAAW,CAAEnG,QAASA,IAC5Fpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAwG,eAAA,WACC,IAAI9G,EAAqB,IAAI,EAAAC,WAE7B,OAAOld,KAAK6c,KACVO,IAAgHC,IAAM,wBAAyB,CAAEJ,OAAQA,IACzJM,aAGH,YAAAyG,qBAAA,SAAqBtP,EAAauP,GACjC,IAAIhH,EAAqB,IAAI,EAAAC,WAI7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,MAAOzI,IACXyI,IAAI,cAAe8G,GAE5BjkB,KAAK6c,KACVO,IAAgBC,IAAM,wBAAyB,CAAEJ,OAAQA,IACzDM,aAGH,YAAA2G,yBAAA,WACC,IAAIjH,EAAqB,IAAI,EAAAC,WAE7B,OAAOld,KAAK6c,KACVO,IAAkBC,IAAM,iCAAkC,CAAEJ,OAAQA,IACpEM,aAGH,YAAA4G,qBAAA,SAAqBzP,GACpB,IAAIuI,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOzI,GAEpB1U,KAAK6c,KACVO,IAAuBC,IAAM,uBAAwB,CAAEJ,OAAQA,IAC/DM,aAGH,YAAA6G,WAAA,WACC,IAAInH,EAAqB,IAAI,EAAAC,WAE7B,OAAOld,KAAK6c,KACVO,IAAcC,IAAM,4BAA6B,CAAEJ,OAAQA,IAC3DM,aAGH,YAAA8G,qBAAA,SAAqBC,EAAuBpX,GAC7B,IAAI,EAAAyQ,YAAY,CAC7B,eAAgB,qBADjB,IAcIV,EAAqB,IAAI,EAAAC,WAI7B,OAFAD,GADAA,EAASA,EAAOE,IAAI,OAAQmH,IACZnH,IAAI,WAAYjQ,GAEzBlN,KAAK6c,KACVO,IAAuBC,IAAM,+BAAgC,CAAEJ,OAAQA,IACvEM,aAIH,YAAAgH,qBAAA,SAAqB9P,GAArB,WACKiJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAU2C,IAAM,2CAA4CpF,KAAKE,UAAU,CAAE,SAAY1D,IAAa,CAAEiJ,QAASA,IACjHpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAkBH,YAAAiH,qBAAA,SAAqBF,EAAuBpX,EAA2BoV,EAAuBmC,GAA9F,WACK/G,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CACZqH,cAAeA,EACfpX,kBAAmBA,EACnBoV,cAAeA,EACfmC,WAAYA,GAMb,OAFAzkB,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAe2C,IAAM,sCAAuCpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IAC/Fpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAArH,iBAAA,SAAiBwO,GAAjB,WACKhH,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAiB2C,IAAM,sBAAuBpF,KAAKE,UAAU,CAAEuM,KAAMA,IAAS,CAAEhH,QAASA,IACzFpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAoH,wBAAA,SAAwBjQ,EAAakC,GAArC,WACK8G,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAwB2C,IAAM,8BAA+BpF,KAAKE,UAAU,CAAEzD,IAAKA,EAAKkC,QAASA,IAAY,CAAE8G,QAASA,IACxHpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAqH,0BAAA,SAA0BlQ,GAA1B,WACKgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAsB2C,IAAM,gCAAiCpF,KAAKE,UAAU,CAAEzD,IAAKA,IAAQ,CAAEgJ,QAASA,IACtGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAsH,iBAAA,SAAiBnQ,GAAjB,WACKgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAW2C,IAAM,sBAAuBpF,KAAKE,UAAU,CAAEzD,IAAKA,IAAQ,CAAEgJ,QAASA,IACjFpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAuH,wBAAA,SAAwBpQ,GAAxB,WACKgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAW2C,IAAM,8BAA+BpF,KAAKE,UAAU,CAAEzD,IAAKA,IAAQ,CAAEgJ,QAASA,IACzFpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAwH,kBAAA,SAAkBrQ,GACjB,IAAIgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGjB,OAAO3d,KAAK6c,KAAKnC,KAAwB2C,IAAM,uBAAwBpF,KAAKE,UAAU,CAAEzD,IAAKA,IAAQ,CAAEgJ,QAASA,KAGjH,YAAAsH,cAAA,SAActQ,GACb,IAAIuI,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOzI,GAEpB1U,KAAK6c,KACVO,IAAgBC,IAAM,mBAAoB,CAAEJ,OAAQA,IACpDM,aAMH,YAAA0H,mBAAA,SAAmBC,EAAqCC,EAA8B/Q,EAAgBgR,EAAsBC,GAA5H,WACK3H,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAMjB,IAAI,IAAM2H,KAAQH,EAAUzU,WAAY,CACvC,IAAI7O,EAAOsjB,EAAUzU,WAAW4U,GACd,SAAdzjB,EAAKmK,MACRnK,EAAKmX,OAAO3X,SAAS,SAAAkkB,GACpBA,EAAI/nB,MAAQ,IAAI0W,KAAKqR,EAAI/nB,OAAOob,UAAUnF,cAK7C,IAAIwJ,EAAS,CAAEkI,UAAWA,EAAW/Q,MAAOA,EAAOgR,aAAcA,GAWjE,OATsB,MAAlBF,IACHjI,EAAuB,eAAIiI,GAEf,MAATG,IACHpI,EAAc,MAAIoI,GAGnBrlB,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAW2C,IAAM,0BAA2BpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IAC/Epd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA1Z,KAAA,SAAK6Q,EAAayO,EAAoBD,EAAkBpkB,EAAgDmN,GACvG,IAAIyR,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CACZvI,IAAKA,EACLzI,KAAMA,GAeP,OAZkB,MAAdkX,IACHlG,EAAOkG,WAAaA,GAGL,MAAZD,IACHjG,EAAOiG,SAAWA,GAGfpkB,EAAOmC,OAAS,IACnBgc,EAAOne,OAASA,GAGVkB,KAAK6c,KACVnC,KAAU2C,IAAM,oBAAqBpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IACxEH,aAGH,YAAAvE,OAAA,SAAOtE,EAAalX,EAAe8kB,EAAuBkD,EAAwB1mB,GACjF,IAAI4e,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CACZvI,IAAKA,EACL4N,cAAeA,EACfkD,eAAgBA,GAYjB,OATI1mB,EAAOmC,OAAS,IACnBgc,EAAOne,OAASA,GAGJ,MAATtB,GAAiBA,EAAMyD,OAAS,IACnCgc,EAAOzf,MAAQA,GAITwC,KAAK6c,KACVnC,KAAyC2C,IAAM,sBAAuBpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IACzGH,aAGH,YAAAkI,iBAAA,SAAiB/Q,GAChB,IAAIgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,CACZvI,IAAKA,GAGN,OAAO1U,KAAK6c,KACVnC,KAAwB2C,IAAM,kCAAmCpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IACpGH,aAGH,YAAA/N,SAAA,SAASkF,GACR,IAAIuI,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOzI,GAEpB1U,KAAK6c,KACVO,IAAcC,IAAM,wBAAyB,CAAEJ,OAAQA,IACvDM,aAGH,YAAAmI,oBAAA,WACC,IAAIzI,EAAqB,IAAI,EAAAC,WAE7B,OAAOld,KAAK6c,KACVO,IAAoDC,IAAM,wBAAyB,CAAEJ,OAAQA,IAC7FM,aAGH,YAAAoI,yBAAA,SAAyBjR,EAAawO,EAAkBC,EAAoBC,EAAkBC,GAE7F,IAAIpG,EAAqB,IAAI,EAAAC,WAQ7B,OAHAD,GADAA,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,MAAOzI,IACXyI,IAAI,WAAY+F,EAASzP,aACzB0J,IAAI,aAAcgG,EAAW1P,aAC7B0J,IAAI,WAAYiG,IAChBjG,IAAI,cAAekG,EAAY5P,YAGxCzT,KAAK6c,KACVO,IAAoBC,IAAM,gCAAiC,CAAEJ,OAAQA,IACrEM,aAGH,YAAAqI,iBAAA,SAAiBlR,GAChB,IAAIuI,EAAqB,IAAI,EAAAC,WAG7B,OAFAD,EAASA,EAAOE,IAAI,MAAOzI,GAEpB1U,KAAK6c,KACVO,IAAcC,IAAM,sBAAuB,CAAEJ,OAAQA,IACrDM,aAGH,YAAAsI,iBAAA,sBAIC,OAFA7lB,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAAoBC,IAAM,8BAC1B/c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,a,iCAlxBSvnB,GAAe,sD,oCAAfA,EAAe,QAAfA,EAAe,O,EAD5B,GACa,EAAAA,mB,+DAAAA,EAAe,E,KAD3B,EAAAqc,c,8LCpBD,WACA,QAEA,Q,GAEA,M,sBAQA,aAGC,WAAoBwK,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAgJ,QAAA,SAAQ3C,EAAoBD,GAA5B,WAEKjG,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,aAAcgG,EAAW1P,aAC7B0J,IAAI,WAAY+F,EAASzP,YAEzCzT,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAAuCC,IAAM,kCAAmC,CAAEJ,OAAQA,IAC1F3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAH,IAAA,SAAI1I,GAAJ,WAEKuI,EAAqB,IAAI,EAAAC,WAK7B,OAJAD,EAASA,EAAOE,IAAI,MAAOzI,GAE3B1U,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVO,IAA2BC,IAAM,8BAA+B,CAAEJ,OAAQA,IAC1E3c,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAwI,iBAAA,SAAiB7Y,EAA2B8Y,GAA5C,WAEO/I,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,aAAc6I,IAClB7I,IAAI,oBAAqBjQ,GAEzClN,KAAK8c,aAAab,QAEXjc,KAAK6c,KACTO,IAA6BC,IAAM,0CAA2C,CAAEJ,OAAQA,IACxF3c,KAAK,EAAAgd,UAAS,WACb,EAAKR,aAAac,eAEnBL,aAGN,YAAA0I,eAAA,SAAeC,EAA0B9U,GAAzC,WAEO6L,EAAqB,IAAI,EAAAC,WAM7B,OAJAD,GADAA,EAASA,EAAOE,IAAI,mBAAoB+I,IACxB/I,IAAI,oBAAqB/L,GAEzCpR,KAAK8c,aAAab,QAEXjc,KAAK6c,KACTO,IAA6BC,IAAM,4CAA6C,CAAEJ,OAAQA,IAC1F3c,KAAK,EAAAgd,UAAS,WACb,EAAKR,aAAac,eAEnBL,aAGN,YAAAjG,MAAA,SAAMuM,GAAN,WAEKnG,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAA4B2C,IAAM,gCAAiCpF,KAAKE,UAAU,CAAE0L,OAAQA,IAAW,CAAEnG,QAASA,IAClHpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAlO,KAAA,SAAKqF,GAAL,WAEKgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGbV,EAAS,GAQb,OANW,MAAPvI,IACHuI,EAAS,CAAEvI,IAAKA,IAGjB1U,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAA6D2C,IAAM,+BAAgCpF,KAAKE,UAAU8E,GAAS,CAAES,QAASA,IACtIpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAnc,OAAA,SAAOsT,GAAP,WAEKgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAU2C,IAAM,iCAAkCpF,KAAKE,UAAU,CAAEzD,IAAKA,IAAQ,CAAEgJ,QAASA,IAC3Fpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA4I,OAAA,SAAOzR,GAAP,WAEKgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAU2C,IAAM,iCAAkCpF,KAAKE,UAAU,CAAEzD,IAAKA,IAAQ,CAAEgJ,QAASA,IAC3Fpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA6I,IAAA,SAAI1R,GAAJ,WAEKgJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAU2C,IAAM,8BAA+BpF,KAAKE,UAAU,CAAEzD,IAAKA,IAAQ,CAAEgJ,QAASA,IACxFpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAA8I,QAAA,SAAQ3R,EAAYyO,EAAoBD,GAEvC,IAAIjG,EAAqB,IAAI,EAAAC,WAO7B,OAJAD,GADAA,GADAA,EAASA,EAAOE,IAAI,MAAOzI,IACXyI,IAAI,aAAcgG,EAAW1P,aAC7B0J,IAAI,WAAY+F,EAASzP,YAIlCzT,KAAK6c,KACVO,IAAoCC,IAAM,mCAAoC,CAAEJ,OAAQA,IAIxFM,a,iCAvKSlnB,GAA4B,sD,oCAA5BA,EAA4B,QAA5BA,EAA4B,O,EADzC,GACa,EAAAA,gC,+DAAAA,EAA4B,E,KADxC,EAAAgc,c,6KCbD,WACA,QACA,Q,GAGA,M,sBAKA,aAGC,WAAoBwK,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,e,OAE9C,YAAAwJ,WAAA,SAAWC,EAAiBrD,EAAkBsD,GAC7C,IAAIvJ,EAAqB,IAAI,EAAAC,WAO7B,OAFAD,GADAA,GADAA,GADAA,EAASA,EAAOE,IAAI,UAAW,eACfA,IAAI,UAAWoJ,EAAQ9S,aACvB0J,IAAI,WAAY+F,EAASzP,aACzB0J,IAAI,cAAeqJ,GAE5BxmB,KAAK6c,KACVO,IAAoBC,IAAM,aAAc,CAAEJ,OAAQA,IAClDM,aAGH,YAAAkJ,aAAA,SAAaC,GAAb,WACKhJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAU2C,IAAM,kBAAmBpF,KAAKE,UAAU,CAAE,GAAMuO,IAAW,CAAEhJ,QAASA,IAChFpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,aAGH,YAAAoJ,cAAA,SAAcD,EAAgBE,GAA9B,WACKlJ,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFA3d,KAAK8c,aAAab,QAEXjc,KAAK6c,KACVnC,KAAU2C,IAAM,uBAAwBpF,KAAKE,UAAU,CAAE,GAAMuO,EAAQ,OAAUE,IAAW,CAAElJ,QAASA,IACvGpd,KAAK,EAAAgd,UAAS,WACd,EAAKR,aAAac,eAElBL,a,iCA5CStnB,GAAW,sD,oCAAXA,EAAW,QAAXA,EAAW,O,EADxB,GACa,EAAAA,e,+DAAAA,EAAW,E,KADvB,EAAAoc,c,oRC7BD,aA8BA,SAAgB7M,EAAcqhB,EAAiCC,GAC9D,OAAOD,EAAMvkB,EAAIwkB,EAAKxkB,GAAKukB,EAAMvkB,EAAKwkB,EAAKxkB,EAAIwkB,EAAKtkB,QAAWqkB,EAAMxkB,EAAIykB,EAAKzkB,GAAKwkB,EAAMxkB,EAAKykB,EAAKzkB,EAAIykB,EAAKvkB,MA7B7G,8BAAmC2E,EAAc6f,GAChD,IAUID,EAVM5lB,EAAGC,OAAO,QAEIS,OAAO,KAAKoE,QAAQ,eAAe,GAEhCpE,OAAO,QAChCC,KAAK,KAAM,KACXA,KAAK,KAAM,KACXA,KAAK,YAAaklB,GAClB7f,KAAKA,GAEWvH,OAAOyC,UAIzB,OAFAlB,EAAGC,OAAO,gBAAgBC,SAEnB0lB,EAAKvkB,MAAQ,GAGrB,oBAAyBF,EAAWC,GACnC,IAAIX,EAAWT,EAAGC,OAAO,QAAQxB,OAC7BqnB,EAAKrlB,EAAIslB,iBAKb,OAHAD,EAAG3kB,EAAIA,EACP2kB,EAAG1kB,EAAIA,EAEA0kB,EAAGE,gBAAgBvlB,EAAIwlB,eAAeC,YAG9C,kBAIA,iCAAsCC,EAAgEC,GACrG,OAAO9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAGC,EAAG+kB,EAAM/kB,GAAKglB,IAAU9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAIglB,EAAM9kB,MAAOD,EAAG+kB,EAAM/kB,EAAI+kB,EAAM7kB,QAAU8kB,IAC9H9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAIglB,EAAM9kB,MAAOD,EAAG+kB,EAAM/kB,GAAKglB,IAAU9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAGC,EAAG+kB,EAAM/kB,EAAI+kB,EAAM7kB,QAAU8kB,IAGhI,+BAAoCD,EAAgEC,GACnG,OAAO9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAGC,EAAG+kB,EAAM/kB,GAAKglB,IAAU9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAIglB,EAAM9kB,MAAOD,EAAG+kB,EAAM/kB,EAAI+kB,EAAM7kB,QAAU8kB,IAC9H9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAIglB,EAAM9kB,MAAOD,EAAG+kB,EAAM/kB,GAAKglB,IAAU9hB,EAAc,CAAEnD,EAAGglB,EAAMhlB,EAAGC,EAAG+kB,EAAM/kB,EAAI+kB,EAAM7kB,QAAU8kB,IAGhI,gCAAqCC,GACpC,MAAO,CAAEllB,EAAGgE,SAASkhB,EAAU1lB,KAAK,MAAOS,EAAG+D,SAASkhB,EAAU1lB,KAAK,MAAOU,MAAO8D,SAASkhB,EAAU1lB,KAAK,UAAWW,OAAQ6D,SAASkhB,EAAU1lB,KAAK,c,mHC7CxJ,W,GAGA,O,sDCyBc,gCAAqF,YAAmB,kB,uBAA5C,wCAAyB,6C,yBAiBrF,gCAA+F,YAAQ,kB,uBAAvB,mCAAe,uC,yBATvG,4BACE,4BACE,4BACE,8BAAgB,YAAkC,iBACpD,iBACA,6BACE,gCACE,yEACA,wBACA,kCACF,iBACF,iBACF,iBACF,kB,2CAVsB,2DAGR,wEAA4E,mBAA5E,CAA4E,uBAGzD,qF,8FAQjC,4BACE,4BACE,4BACE,8BACE,6BACF,iBACF,iBACA,6BACE,6BACE,6BAAK,6IAGH,sBACF,iBACF,iBAEF,iBACF,iBACF,iB,gCARU,0F,yBAmBF,gCAAmF,YAAQ,kB,uBAAvB,mCAAe,uC,yBAanF,gCAAmF,YAAQ,kB,uBAAvB,mCAAe,uC,mDARzF,4BACE,4BACE,8BAAgB,6BAA6D,iBAC/E,iBACA,6BACE,gCACE,+HACA,wBACA,kCACF,iBACF,iBACF,iB,iCALM,4EAAgD,eAEvB,8E,mDAtBjC,4BACE,4BACE,4BACE,8BAAgB,6BAA6C,iBAC/D,iBACA,6BACE,gCACE,mIACA,wBACA,kCACF,iBACF,iBACF,iBAEA,+BAYF,iB,gCAnBQ,iFAAqD,eAE5B,6EAKzB,wI,qBA+CE,6B,qBACA,6BDlIhB,iBAWI,aAHU,KAAA2lB,oBAAsB,IAAI,EAAAtqB,aAC1B,KAAAuqB,YAAc,IAAI,EAAAvqB,a,OAK5B,YAAAwqB,OAAA,WACI1nB,KAAKwnB,oBAAoB1P,KAAM9X,KAAKmf,eACpCnf,KAAKynB,YAAY3P,KAAM,SAG3B,YAAA1B,SAAA,WACIpW,KAAKynB,YAAY3P,KAAM,W,iCAflB3f,I,iCAAAA,EAAuB,s2C,GAAA,MCVpC,0BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBAQE,+BAEE,4BACE,4BACE,6BACE,+BACE,8BACF,iBACF,iBACA,8BACE,iCAA6C,gFAC3C,yBACA,mCACF,iBACF,iBACF,iBACF,iBAEA,qBAEA,gCAeA,qBAEA,gCAoBA,iCAsDA,6BACE,6BACE,8BACE,iCAAsB,wCAAS,EAAAie,cAC3B,8BACJ,iBACA,iCAAsB,wCAAS,EAAAsR,YAC3B,qCACA,qCACJ,iBACF,iBACF,iBACF,iBACF,iBAEJ,kB,4BApHyD,kEAEb,mEAQQ,uEAiBxC,kEAoBA,+DA4D+E,kDAChE,gEACA,iE,mRDlI3B,GAKa,EAAAvvB,2B,+DAAAA,EAAuB,E,KALnC,EAAAgF,U,MAAW,CACRC,SAAU,kBACVC,YAAa,mCACbC,UAAW,Q,uBAIF6hB,cAAe,CAAF,C,KAArB,EAAA5hB,QACSiqB,oBAAmB,E,KAA5B,EAAA/pB,SACSgqB,YAAW,E,KAApB,EAAAhqB,Y,iHEdL,W,GAEA,OAEA,O,+DCmBkB,gCAAgF,YAAQ,kB,uBAAvB,wBAAe,uC,sBAWnF,gCAA0D,6BAA6C,kB,sBACvG,gCAA2H,6BAA8C,kB,yBAvBlL,6BACE,4BACE,6BACE,6BAA2B,4BAAQ,YAAmB,iBAAQ,iBAC9D,6BACE,6BACE,4BAAO,6BAAyD,iBAClE,iBACA,8BACE,iCAA4B,yEAC1B,4BACA,mCACF,iBACF,iBACA,8BACE,6BAAO,8BAAgE,iBACzE,iBACA,8BACE,iCAA0D,gFAC3D,yBACA,iCAAoB,8BAAwC,iBAC5D,iCAAqB,8BAAyC,iBAC9D,mCACA,mCACF,iBACC,iBACF,iBACF,iBACF,iBACF,kB,qDA1ByC,qDAMH,gDAA6B,sBAE9B,6EAOnB,uDAA6B,0BAA7B,CAA6B,0CAI7B,+DACA,6HD7BxB,iBAYI,WAAqBqW,GAAA,KAAAA,UAHX,KAAA0T,oBAAsB,IAAI,EAAAtqB,aAC1B,KAAAuqB,YAAc,IAAI,EAAAvqB,a,OAI5B,YAAA+C,SAAA,sBACID,KAAK8T,QAAQ0L,iBAAkBxf,KAAKmf,cAAcnT,KAAK/I,KAAMjD,KAAKmf,cAAczb,WAAW,GAAOwG,MAAM,SAAAyd,GACpG,EAAKxI,cAAcwI,UAAYA,MAIvC,YAAAD,OAAA,WAEI1nB,KAAKwnB,oBAAoB1P,KAAM9X,KAAKmf,eACpCnf,KAAKynB,YAAY3P,KAAM,SAG3B,YAAA8P,OAAA,WACI5nB,KAAKynB,YAAY3P,KAAM,SAG3B,YAAA1B,SAAA,WACIpW,KAAKynB,YAAY3P,KAAM,W,iCAzBlB1f,GAAqB,mC,iCAArBA,EAAqB,uzC,GAAA,MCZlC,6BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBACA,4BACE,kCAEE,+BA+BA,6BACE,6BACE,8BACE,iCAAsB,wCAAS,EAAAwvB,YAC3B,8BACJ,iBACA,iCAAmB,wCAAS,EAAAxR,cACxB,8BACJ,iBACA,iCAAsB,wCAAS,EAAAsR,YAC3B,8BACJ,iBACF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,4BAjDmD,iEAwCwC,oD,yQD9C3F,GAMa,EAAAtvB,yB,+DAAAA,EAAqB,E,KANjC,EAAA+E,U,MAAW,CAERC,SAAU,gBACVC,YAAa,iCACbC,UAAW,Q,yCAIF6hB,cAAe,CAAF,C,KAArB,EAAA5hB,QACSiqB,oBAAmB,E,KAA5B,EAAA/pB,SACSgqB,YAAW,E,KAApB,EAAAhqB,Y,wHEhBL,WAEA,GADA,OACA,Q,6DCQI,4BACE,6BACE,6BACF,iBACF,kB,yBACA,4BACE,6BAAgC,YAAW,iBAC7C,kB,6BADkC,+C,mDAyBhC,0BACE,0CAAkF,kGAAgC,iBACpH,iB,wDADoB,yCAAmB,gCAAnB,CAAmB,Y,qBAW/B,6B,qBACA,6BDlDd,iBAYI,aAHU,KAAAgqB,YAAc,IAAI,EAAAvqB,aAC5B,KAAA6R,QAAkB,K,OAIlB,YAAA9O,SAAA,aAGA,YAAA4nB,YAAA,WACI,IAAM,IAAIrkB,EAAI,EAAGA,EAAIxD,KAAKmf,cAAc2I,iBAAiB7mB,OAAQuC,IAE7D,IAAMxD,KAAKmf,cAAc2I,iBAAiBtkB,GAAGukB,SACzC,OAAO,EAIf,OAAO,GAGX,YAAAC,YAAA,SAAazd,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,IAGxD,YAAAmd,OAAA,WAC0C,MAAjC1nB,KAAKmf,cAAc8I,aACpBjoB,KAAKmf,cAAc8I,WAAa,IAGpC,IAAM,IAAIzkB,EAAI,EAAGA,EAAIxD,KAAKmf,cAAc2I,iBAAiB7mB,OAAQuC,IAAM,CACnE,IAAM0kB,EAAUloB,KAAKmf,cAAc2I,iBAAiBtkB,GAEpD,GAAK0kB,EAAQH,UAAmC,oBAAvBG,EAAQzK,OAAO0K,KAA6B,CACjE,IACMC,EAAY,CAAEnlB,KAAM,aAAczF,MADN,MAAlB0qB,EAAQviB,OAAiBuiB,EAAQviB,OAAS,IAAMuiB,EAAQrgB,MAAQqgB,EAAQrgB,OAGxF7H,KAAKmf,cAAc8I,WAAWjkB,KAAMokB,IAK5CpoB,KAAKynB,YAAY3P,KAAM,SAG3B,YAAA1B,SAAA,WACIpW,KAAKynB,YAAY3P,KAAM,W,iCA/ClBzf,I,iCAAAA,EAA4B,q6BCVzC,0BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBACA,0BACE,8BAKA,8BAGA,kCACE,6BACE,6BACE,6BACE,6BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACF,iBACA,gCAGA,6BACE,8BACE,iCAAsB,wCAAS,EAAA+d,cAC7B,4BACE,8BACF,iBACF,iBACA,iCAAsB,wCAAS,EAAAsR,YAC7B,4BACE,qCACA,qCACF,iBACF,iBACF,iBACF,iBACF,iBACF,iBACF,kB,MAnDU,oDAKA,oDA0BqB,yEAU0D,wDAEhE,uEACA,yE,oKDlDzB,GAMa,EAAArvB,gC,+DAAAA,EAA4B,E,KANxC,EAAA8E,U,MAAW,CAERC,SAAU,wBACVC,YAAa,yCACbC,UAAW,Q,uBAIF6hB,cAAe,CAAF,C,KAArB,EAAA5hB,QACSkqB,YAAW,E,KAApB,EAAAhqB,Y,oHEbL,W,GACA,O,4DCSI,4BACE,6BACE,6BACF,iBACF,kB,yBACA,4BACE,6BAAgC,YAAW,iBAC7C,kB,6BADkC,+C,mDAyBhC,0BACE,sCAA8E,kGAAgC,iBAChH,iB,wDADgB,yCAAmB,gCAAnB,CAAmB,YDvCzC,iBAYI,aAHU,KAAAgqB,YAAc,IAAI,EAAAvqB,aAC5B,KAAA6R,QAAkB,K,OAIlB,YAAA9O,SAAA,aAGA,YAAA4nB,YAAA,WACI,IAAM,IAAIrkB,EAAI,EAAGA,EAAIxD,KAAKmf,cAAckJ,aAAapnB,OAAQuC,IAEzD,IAAMxD,KAAKmf,cAAckJ,aAAa7kB,GAAGukB,SACrC,OAAO,EAIf,OAAO,GAGX,YAAAL,OAAA,WAC0C,MAAjC1nB,KAAKmf,cAAc8I,aACpBjoB,KAAKmf,cAAc8I,WAAa,IAGpC,IAAM,IAAIzkB,EAAI,EAAGA,EAAIxD,KAAKmf,cAAckJ,aAAapnB,OAAQuC,IAAM,CAC/D,IAAM0kB,EAAUloB,KAAKmf,cAAckJ,aAAa7kB,GAEhD,GAAK0kB,EAAQH,UAAmC,UAAvBG,EAAQzK,OAAO0K,KAAmB,CACvD,IAAMC,EAAY,CAAEnlB,KAAMilB,EAAQI,cAAe9qB,MAAO0qB,EAAQrgB,OAEhE7H,KAAKmf,cAAc8I,WAAWjkB,KAAMokB,IAI5CpoB,KAAKynB,YAAY3P,KAAM,SAG3B,YAAA1B,SAAA,WACIpW,KAAKynB,YAAY3P,KAAM,W,iCAzClBvf,I,iCAAAA,EAAwB,80BCTrC,0BACE,4BACE,yBACE,4BACF,iBACA,0BACE,4BACF,iBACF,iBACA,4BACE,8BAKA,8BAGA,kCACE,6BACE,6BACE,6BACE,6BACF,iBACF,iBACA,8BACE,6BACE,8BACF,iBACF,iBACA,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,6BACE,8BACF,iBACF,iBACF,iBACA,gCAGA,6BACE,8BACE,iCAAsB,wCAAS,EAAA6d,cAC7B,4BACE,8BACF,iBACF,iBACA,iCAAsB,wCAAS,EAAAsR,YAC7B,4BACE,8BACF,iBACF,iBACF,iBACF,iBACF,iBACF,iBACF,kB,MAlDU,oDAKA,oDA0BqB,qEAU0D,0D,gKDhDzF,GAMa,EAAAnvB,4B,+DAAAA,EAAwB,E,KANpC,EAAA4E,U,MAAW,CAERC,SAAU,oBACVC,YAAa,qCACbC,UAAW,Q,uBAIF6hB,cAAe,CAAF,C,KAArB,EAAA5hB,QACSkqB,YAAW,E,KAApB,EAAAhqB,Y,mHEZL,WASA,OAOA,SAQA,GAJA,OAEA,MAEA,Q,kICvBE,6BACE,6BACF,kB,sBAwBwB,2BAA4F,6BAA8E,kB,sBAY9J,2BACE,6BACF,kB,yBATN,4BACE,4BACE,yBAAI,sCAA0D,iBAE9D,+BAA4E,wEAAuB,2DAAnG,iBAEA,6BACE,6BAGF,iBACF,iBACF,kB,2DAV2B,4CAEiB,uDAAmC,kBAAnC,CAAmC,uCAGrE,0E,4FA4BR,2BACE,YACF,kB,uBAFkD,mFAChD,wD,yBAFJ,yBACE,6BAGF,kB,uCAHqB,0D,oHAtC3B,4BACE,yBACE,4BACE,8BAaA,4BACE,yBACE,yBACE,6BACF,iBAEA,uCAAiC,0EAAgC,oFAAkH,iBAErL,iBACA,0BACE,8BACE,0BACE,8BACF,iBAEA,wCAAiC,wEAA8B,oFACjB,iBAEhD,iBACF,iBACF,iBACA,+BAKF,iBACF,iBAEA,6BAAI,6G,wBACF,uBACF,iBACF,iB,oCAhDI,kCAAU,2MAGwC,4DAmBX,iDAAgC,2BAAhC,CAAgC,sBAAhC,CAAgC,eAS9B,+CAA8B,yBAA9B,CAA8B,mBAA9B,CAA8B,sBAA9B,CAA8B,cAA9B,CAA8B,sBAMhE,kFAQgE,0G,yBAhD7E,+BACE,6BAEA,gCAiDF,kB,8BAnDsB,uGAEkB,gG,sBAqDtC,2BAA4F,6BAA8E,kB,yBAU1J,gCAA0G,YAA+B,kB,uBAArD,6BAAsB,4D,mDAHhH,0BACE,gCAAwG,2GACpG,2BACA,kCACJ,iBACF,iB,6EAJU,yEAA4B,wDAA+C,mBAEpD,iG,mDAGjC,0BACE,+BAAiE,2GAA8B,8FAA/F,iBACF,iB,wDAD0C,kDAAwB,oB,mDAGlE,0BACE,oCAAY,yGAA4B,qFACyB,iBACnE,iB,6EAFc,6CAA4B,0BAA5B,CAA4B,mBAA5B,CAA4B,sBAA5B,CAA4B,cAA5B,CAA4B,oBAA5B,CAA4B,oB,mDAI1C,0BACE,+BAAkE,2GAA8B,8FAAhG,iBACF,iB,wDAD4C,iDAAuB,oB,mDAGnE,0BACI,+BACE,+BAAoG,2GAApG,iBACA,2BAAM,6BAA8D,iBACtE,iBACA,+BACE,+BAAsG,2GAAtG,iBACA,2BAAM,6BAA+D,iBACvE,iBACJ,iB,wDAPyI,+DAAoB,kDAAxG,qCAAqC,WAArC,CAAqC,mBAIiD,gEAAqB,mDAA3G,qCAAsC,WAAtC,CAAsC,oB,yBA2B7F,2BACE,YACF,kB,uBAFkD,mFAChD,wD,yBAFJ,yBACE,6BAGF,kB,uCAHqB,0D,mDAzD3B,4BACE,yBACE,4BACE,4BACE,4BACE,+BAMA,+BAIA,+BAKA,+BAIA,gCAUF,iBACF,iBACA,6BACE,0BACE,0BACE,8BACF,iBAEA,wCAAiC,0EAAgC,oFAAkH,iBACrL,iBACA,0BACE,8BACE,0BACE,8BACF,iBAEA,wCAAiC,wEAA8B,oFACjB,iBAEhD,iBACF,iBACF,iBACA,+BAKF,iBACF,iBACA,6BAAgJ,6G,wBAC9I,uBACF,iBACF,iB,yDAlEI,kCAAU,2MAKE,8DAMA,mEAIA,8DAKA,6FAIA,iEAkB2B,iDAAgC,2BAAhC,CAAgC,sBAAhC,CAAgC,eAQ9B,+CAA8B,yBAA9B,CAA8B,mBAA9B,CAA8B,sBAA9B,CAA8B,cAA9B,CAA8B,sBAMhE,kFAOmE,0G,yBAlEhF,+BACE,6BAEA,gCAmEF,kB,8BArEsB,uGAEkB,gG,yBA9D5C,0BAEE,+BAEE,iCAuDA,iCAwEF,iBACF,kB,8BAhI8C,+DAuDA,gE,sBA6E5C,2BAAwF,6BAA8E,kB,mDAY9J,gCAAsD,+HACpD,6BACF,kB,mDACA,iDACI,iJAEJ,iB,+DAHyE,0DAAgD,2DAAhD,CAAgD,uBAAhD,CAAgD,+CAAhD,CAAgD,gCAAhD,CAAgD,yB,uIAL7H,4BACE,4BACE,kCAGA,gDAIF,iBACA,4BACE,uCAAiC,0EAAgC,oFAAsI,iBACzM,iBACA,4BAEE,uCAAiC,wEAA8B,oFACI,iBAErE,iBACA,6BAAoC,4BAA+F,6HAA0C,iBAAI,iBACnL,iB,yDApBI,kCAAU,yDAED,yDAGc,0DAMU,iDAAgC,2BAAhC,CAAgC,sBAAhC,CAAgC,cAAhC,CAAgC,sBAIhC,+CAA8B,yBAA9B,CAA8B,mBAA9B,CAA8B,sBAA9B,CAA8B,cAA9B,CAA8B,qBAA9B,CAA8B,sBAIK,uF,yBA/B9E,0BAEE,6BAEA,+BACE,+BACE,4BAAwB,6BAAiF,iBACzG,4BAAwB,6BAAqF,iBAC7G,4BAAwB,6BAAmF,iBAC3G,6BAAwB,8BAAmF,iBAC7G,iBACA,gCACE,iCAqBF,iBACF,iBACF,kB,8BAjCsB,8FAUqE,wF,mDA2B7F,4BACE,2BAAgC,mGAC9B,6BACF,iBACF,kB,yBA1LR,6BACE,yBAAI,YAAkC,iBAEtC,0BACE,0BACE,4BAEE,4BAEE,+BAsIA,gCAqCF,iBAEA,8BAKF,iBACF,iBACF,iBACF,kB,6BA7LM,qEAQU,kEAsIA,kEAuCH,iD,mDAoBX,gCAAwC,2FACtC,6BACF,iB,mDAFmG,8DD5L/G,iBAsEC,WAAoBqW,EAAkCE,EAAsCuU,GAAxE,KAAAzU,UAAkC,KAAAE,WAAsC,KAAAuU,oBA1C5F,KAAAxZ,QAAkB,KAElB,KAAAkF,YAAoB,IAAIC,KAExB,KAAAd,SAAmB,EACT,KAAAoV,cAAgB,IAAI,EAAAtrB,aAErB,KAAAiX,UAAoB,EAKnB,KAAA2B,SAAW,IAAI,EAAA5Y,aAchB,KAAAyc,gBAA0B,EAMnC,KAAA8O,iBAA2B,EAE3B,KAAAC,kBAA4B,EAG5B,KAAAC,aAAuB,EACvB,KAAAxM,QAAkB,E,OAjBlB,sBAAa,qCAAsB,C,IAAnC,SAAoC3e,GACnCwC,KAAK4oB,0BAA4B3Q,KAAKC,MAAMD,KAAKE,UAAU3a,IAC3DwC,KAAK0Z,kBAAoBlc,G,gCAqB1B,YAAAyC,SAAA,aAGA,YAAA0K,gBAAA,sBAC6B,aAAxB3K,KAAKgT,UAAU/P,MAAgG,IAAzEjD,KAAK0Z,kBAAkBhJ,WAAW1Q,KAAKgT,UAAU/P,MAAM+V,OAAO/X,QAEvGiQ,YAAW,WACV,EAAKuX,gBAAkB,IACrB,IAIL,YAAAI,eAAA,SAAeC,EAAY/jB,GAC1B+jB,EAAWtrB,MAAQuH,GAGpB,YAAAgkB,uBAAA,WAGC,IAFA,IAAIC,EAAahpB,KAAKipB,yBAAyBC,UAEvC1lB,EAAE,EAAGA,EAAEwlB,EAAW/nB,OAAQuC,IAAI,CAErC,IADYwlB,EAAWxlB,GACbuT,MACT,OAAO,EAIT,OAAO,GAGR,YAAAoS,aAAA,WACCnpB,KAAK2oB,aAAc,EACnB3oB,KAAKmc,QAAS,EAEd,IAAIiN,EAAcppB,KAAK0Z,kBAAkBhJ,WAAW1Q,KAAKgT,UAAU/P,MAAM+V,OAEzEhZ,KAAKoT,QAAUpT,KAAK+oB,yBAGpB,IAAK,IAAIM,EAAI,EAAGA,EAAID,EAAYnoB,OAAQooB,IAAK,CAC5C,IAAMC,EAAKF,EAAYC,GAGvB,GAFAC,EAAGC,gBAAkB,GAEC,MAAhBD,EAAGzQ,WAAsC,KAAjByQ,EAAGzQ,WAAqC,MAAdyQ,EAAGxQ,SAAkC,KAAfwQ,EAAGxQ,QAAiB,CACjG,IAAI0Q,EAAU,IAAItV,KAAKoV,EAAGzQ,WACtB4Q,EAAU,IAAIvV,KAAKoV,EAAGxQ,SAEtB,UAAMkD,mBAAmBwN,EAAIC,KAChCH,EAAGC,gBAAgBvlB,KAAK,CACvB,KAAQ,QACR,QAAWhE,KAAKgU,SAASlT,OAAO,qDAEjCd,KAAK2oB,aAAc,GAGpB,IAAK,IAAInlB,EAAI,EAAGA,EAAI4lB,EAAYnoB,OAAQuC,IAEvC,GAAI6lB,IAAM7lB,EAAG,CACZ,IAAMkmB,EAAKN,EAAY5lB,GACvB,GAAsB,MAAhBkmB,EAAG7Q,WAAsC,KAAjB6Q,EAAG7Q,WAAqC,MAAd6Q,EAAG5Q,SAAkC,KAAf4Q,EAAG5Q,QAAiB,CACjG,IAAI6Q,EAAU,IAAIzV,KAAKwV,EAAG7Q,WACtB+Q,EAAU,IAAI1V,KAAKwV,EAAG5Q,SAGtB,UAAM6C,kBAAkB6N,EAAG5Q,UAAW6Q,EAAG7Q,UAAW+Q,EAAG/Q,UAAWgR,EAAGhR,aACxE0Q,EAAGC,gBAAgBvlB,KAAK,CACvB,KAAQ,QACR,QAAUhE,KAAKgU,SAASlT,OAAO,qCAEhCd,KAAK2oB,aAAc,MAQzB3oB,KAAKiM,KAAKmd,GAGV,IAAIS,EAAU,KAEd,IAASR,EAAI,EAAGA,EAAID,EAAYnoB,OAAQooB,IAAK,CAC5C,IAAIhc,EAAO+b,EAAYC,GAEvB,GAAIA,EAAI,GACoB,MAArBQ,EAAQhR,WAA2C,KAAtBgR,EAAQhR,WAA0C,MAAnBgR,EAAQ/Q,SAAuC,KAApB+Q,EAAQ/Q,QAAiB,CACjH2Q,EAAU,IAAIvV,KAAK2V,EAAQ/Q,SAE/B,GAAwB,MAAlBzL,EAAKwL,WAAwC,KAAnBxL,EAAKwL,WAAuC,MAAhBxL,EAAKyL,SAAoC,KAAjBzL,EAAKyL,QAAiB,CACrG6Q,EAAU,IAAIzV,KAAK7G,EAAKwL,WAExB,UAAMsD,OAAOsN,EAAG7Q,UAAW+Q,EAAG/Q,aACjCvL,EAAKkc,gBAAgBvlB,KAAK,CACzB,KAAQ,UACR,QAAUhE,KAAKgU,SAASlT,OAAO,iCAGhC+oB,EAAQN,gBAAgBvlB,KAAK,CAC5B,KAAQ,UACR,QAAUhE,KAAKgU,SAASlT,OAAO,mCAQpC+oB,EAAUxc,IAIZ,YAAAyc,gBAAA,WACC,IAAIC,EAA0B/pB,KAAK0Z,kBAAkBhJ,WAAW1Q,KAAKgT,UAAU/P,MAAM+V,OAEjFC,EAAqB,IAAI,EAAA+Q,cAI7B,GAHA/Q,EAAIJ,UAAY,KAChBI,EAAIH,QAAU,KAEc,UAAxB9Y,KAAKgT,UAAUhH,KAElBiN,EAAIzb,MAAQwC,KAAKgU,SAASY,cAEtB,GAA4B,aAAxB5U,KAAKgT,UAAUhH,KAEnB+d,EAAO9oB,OAAS,GACU,GAAzBjB,KAAKyoB,iBAAiD,MAAxBzoB,KAAKyoB,gBACtCxP,EAAIzb,MAAQusB,EAAO/pB,KAAKyoB,iBAAiBjrB,MAGzCyb,EAAIzb,MAAQusB,EAAO,GAAGvsB,OAIvByb,EAAIzb,MAAQ,CAAE,KAAQwC,KAAK8D,cAAcmmB,aAAc,YAAe,IAE9B,iBAApCjqB,KAAK8D,cAAcmmB,aACtBhR,EAAIzb,MAAMwO,KAAO,eAE2B,YAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,UAE2B,UAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,QAE2B,eAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,aAE2B,SAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,OAE2B,cAApChM,KAAK8D,cAAcmmB,eAC3BhR,EAAIzb,MAAMwO,KAAO,mBAIf,GAA4B,SAAxBhM,KAAKgT,UAAUhH,KAAiB,CACxC,IAAIke,EAAQlqB,KAAKoa,qCAAqCpa,KAAKgT,UAAU/P,MAEjEinB,GAASA,EAAMjpB,OAAS,IAC3BgY,EAAIzb,MAAQ0sB,EAAM,GAAGjnB,MAIvB8mB,EAAO/lB,KAAKiV,GAEgB,aAAxBjZ,KAAKgT,UAAU/P,OAClBjD,KAAKyoB,gBAAkBsB,EAAO9oB,OAAS,GAGxCjB,KAAKuoB,kBAAkB5V,iBAGxB,YAAAwX,aAAA,SAAahgB,GACZnK,KAAKyoB,gBAAkBte,GAGxB,YAAAigB,eAAA,SAAepX,GACd,IAAIqX,EAA4B,GAOhC,OALArqB,KAAK0Z,kBAAkBhJ,WAAWsC,EAAU/P,MAAM+V,OAAO3X,SAAQ,SAAAynB,GAChEA,EAAWtrB,MAAM6V,aAAahS,SAAQ,SAAAkkB,GACrC8E,EAASrmB,KAAKuhB,SAGT8E,GAGR,YAAAC,oBAAA,SAAoBC,GACnB,IAAIC,EAAS,KASb,OAPAD,EAAOlX,aAAahS,SAAQ,SAAAopB,GACL,kBAAlBA,EAAOF,SACVC,EAASC,EAAOjtB,UAKXgtB,GAGR,YAAApQ,qCAAA,SAAqCC,GACpC,IAAK,IAAI7W,EAAI,EAAGA,EAAIxD,KAAK8D,cAAc4M,WAAWzP,OAAQuC,IAAK,CAC9D,IAAI3B,EAAY7B,KAAK8D,cAAc4M,WAAWlN,GAE9C,GAAkB,SAAd3B,EAAKmK,MAAmBnK,EAAKoB,OAASoX,EAAmB,CAG5D,IAAIC,GADJzY,EAAsBA,GACF0Y,SAAS5T,SAG7B,GAAI2T,EAASrZ,OAAS,EACrB,MAAkB,WAAdY,EAAKoB,KACD,UAAMuX,eAAeF,GAGrBA,GAMX,OAAO,MAGR,YAAAlZ,OAAA,SAAOspB,GAKN,IAHA,IAAInF,EAAMvlB,KAAK0Z,kBAAkBhJ,WAAW1Q,KAAKgT,UAAU/P,MAEvD2N,GAAY,EACPpN,EAAI,EAAGA,EAAI+hB,EAAIvM,OAAO/X,OAAQuC,IAAK,CAChC+hB,EAAIvM,OAAOxV,GAGbqV,YAAc6R,EAAQ7R,YAC9BjI,EAAWpN,GAIToN,GAAY,GACf2U,EAAIvM,OAAOrR,OAAOiJ,EAAU,GAG7B5Q,KAAKmpB,gBAGN,YAAApQ,iBAAA,SAAiBlX,GAAjB,WACKkX,GAAmB,EAQvB,OANA/Y,KAAK8D,cAAc4M,WAAWrP,SAAQ,SAAA2R,GACjC,EAAKA,UAAU/P,OAASpB,EAAKoB,OAChC8V,EAAmBlX,EAAKkX,qBAInBA,GAGR,YAAA9M,KAAA,SAAK8d,GAGJA,EAAO9d,MAAK,SAASC,EAAGC,GAEvB,OAAmB,MAAfD,EAAE2M,WAAqC,KAAhB3M,EAAE2M,UACrB,EAEgB,MAAf1M,EAAE0M,WAAqC,KAAhB1M,EAAE0M,WACzB,EAGQ,IAAI3E,KAAKhI,EAAE2M,WACZ,IAAI3E,KAAK/H,EAAE0M,eAK7B,YAAA5C,SAAA,WACCjW,KAAK8V,SAASgC,KAAK9X,KAAK0Z,oBAIzB,YAAAtD,SAAA,WACCpW,KAAK8V,SAASgC,KAAK9X,KAAK4oB,4B,iCAzUbtvB,GAAuB,6H,iCAAvBA,EAAuB,wD,GAAA,K,ymICnDpC,0BACE,8BAKA,+BAEE,+BACE,4BAGE,4BACE,+BA+LF,iBAEF,iBAEA,4BAEE,4BACE,6BACE,gCAAsB,wCAAS,EAAA8c,cAC7B,8BACF,iBACA,mCAGF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,MA/NQ,uDAY0C,wDA0M7B,kD,gcDvLR,CACX,CACC,EAAAzC,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,a,EAjBhB,GAwBa,EAAA3hB,2B,+DAAAA,EAAuB,E,KAxBnC,EAAA6D,U,MAAU,CACVC,SAAU,kBACVC,YAAa,mCACbC,UAAW,CAAC,yBACZqtB,KAAM,CAAE,eAAgB,QACxB9W,WAAY,CACX,CACC,EAAAF,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,e,uGASsBgO,yBAAwB,E,KAA5D,EAAA2B,a,MAAa,yBAOJpC,cAAa,E,KAAtB,EAAA/qB,SAEQ0W,SAAU,CAAF,C,KAAhB,EAAA5W,QAKSuY,SAAQ,E,KAAjB,EAAArY,SAEQuV,UAAW,CAAF,C,KAAjB,EAAAzV,QAEQuG,cAAe,CAAF,C,KAArB,EAAAvG,QAKYstB,uBAAsB,E,KAAlC,EAAAttB,QAKQoc,eAAgB,CAAF,C,KAAtB,EAAApc,W,uHEjFF,WAKA,GAFA,OAEA,QACA,S,oFAKA,aA8DC,WAAoBe,EAA0CwsB,GAA1C,KAAAxsB,kBAA0C,KAAAwsB,aA1CpD,KAAAjC,eAAiB,IAAI,EAAA3rB,aA2BtB,KAAAkS,UAAoB,EAKnB,KAAA2b,YAAc,IAAI,EAAA7tB,a,OAc5B,YAAA+C,SAAA,aAIA,YAAA0K,gBAAA,sBACCuG,YAAW,WAEV,EAAK8Z,OAAO3qB,cAAcsiB,GAAKsI,KAAKC,MAAsB,OAAhBD,KAAKE,UAAuB,IAEtE,EAAKzO,IAAM,IAAI,EAAA0O,IAAI,CAClBC,UAAW,EAAKL,OAAO3qB,cAAcsiB,GACrChgB,MAAO,sCACP2oB,KAAM,EACNC,OAAQ,CAAC,WAAY,aAGtB,EAAK7O,IAAIpU,GAAG,QAAQ,WACnB,EAAKkjB,aAGN,EAAK9O,IAAIpU,GAAG,eAAe,WAC1B,EAAKmjB,mBAEN,EAAK/O,IAAIpU,GAAG,eAAe,WAC1B,EAAKmjB,mBAEN,EAAK/O,IAAIpU,GAAG,eAAe,WAC1B,EAAKmjB,qBAGJ,IAGJ,YAAA7Y,YAAA,SAAYmF,IACPA,EAAqB,aAAKA,EAAsB,eACnD/X,KAAKwY,UAIA,YAAAA,OAAP,WACiB,MAAZxY,KAAK0c,MACR1c,KAAK0rB,eACL1rB,KAAK2rB,cAIP,YAAA9Y,YAAA,WACC7S,KAAK0c,IAAItb,UAGV,YAAA2Z,WAAA,WACC,IAAK/a,KAAKoP,SAAU,CACnB,IAAIgE,GAAmB,EAEvB,GAA2B,MAAvBpT,KAAK4rB,eACqB5rB,KAAK4rB,eAAeC,SAE3BC,SAAS7qB,OAAS,IACvCmS,GAAU,GAIZ,OAAOA,EAGR,OAAO,GAGA,YAAAqY,cAAR,WACCzrB,KAAK6oB,eAAe/Q,KAAK9X,KAAK+rB,aAG/B,YAAAP,QAAA,sBAECxrB,KAAK0c,IAAIpU,GAAG,cAAc,WACzB,EAAKqjB,YACL,EAAKF,mBAINzrB,KAAK2rB,YAEmB,MAApB3rB,KAAKgsB,aAA4C,KAArBhsB,KAAKgsB,aACpChsB,KAAKisB,aAINjsB,KAAK0c,IAAIwP,WAAW,IAAI,EAAAC,mBAEnBnsB,KAAKoP,SAITpP,KAAKosB,gBAHLpsB,KAAKqsB,gBAMNrsB,KAAKyrB,iBAGN,YAAAW,cAAA,sBACCpsB,KAAKssB,kBAAkBjQ,YAAYzb,WAAU,SAAAiZ,GAC5C,EAAKkR,YAAYjT,UAGlB9X,KAAK0c,IAAIwP,WAAWlsB,KAAKssB,oBAG1B,YAAAD,cAAA,WAC2B,iBAAtBrsB,KAAKiqB,cAAyD,YAAtBjqB,KAAKiqB,aAChDjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACT1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIQ,UAAtB5sB,KAAKiqB,cAAkD,eAAtBjqB,KAAKiqB,aAC9CjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACT1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIQ,SAAtB5sB,KAAKiqB,cAAiD,cAAtBjqB,KAAKiqB,eAC7CjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACT1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,MAIvB5sB,KAAK0c,IAAIwP,WAAWlsB,KAAK4rB,gBAEA,MAArB5rB,KAAK6sB,cACR7sB,KAAK4rB,eAAekB,IAAI9sB,KAAK6sB,eAI/B,YAAAE,aAAA,SAAaC,GACZ,IAAIC,EAAqBD,EAAS,aAER,iBAAtBhtB,KAAKiqB,cAAyD,YAAtBjqB,KAAKiqB,aAChDjqB,KAAK0c,IAAIwQ,YAAYD,EAAa,YAEJ,UAAtBjtB,KAAKiqB,cAAkD,eAAtBjqB,KAAKiqB,aAC9CjqB,KAAK0c,IAAIwQ,YAAYD,EAAa,UAEJ,SAAtBjtB,KAAKiqB,cAAiD,cAAtBjqB,KAAKiqB,cAC7CjqB,KAAK0c,IAAIwQ,YAAYD,EAAa,SAGnCjtB,KAAK0c,IAAIqQ,aAAaE,IAGvB,YAAAvB,aAAA,WACK1rB,KAAK0c,IAAIyQ,UAAU,kBACtBntB,KAAK+sB,aAAa,OAEf/sB,KAAK0c,IAAIyQ,UAAU,mBACtBntB,KAAK+sB,aAAa,SAIpB,YAAApB,UAAA,WACyB,MAApB3rB,KAAKgsB,aAA4C,KAArBhsB,KAAKgsB,aACpChsB,KAAKotB,sBAAsBptB,KAAKgsB,YAAa,MAAO,WAEjDhsB,KAAKoP,UAAiC,MAArBpP,KAAK6sB,cAA8C,KAAtB7sB,KAAK6sB,cACtD7sB,KAAKotB,sBAAsBptB,KAAK6sB,aAAc,OAAQ,YAIxD,YAAAO,sBAAA,SAAsB5V,EAAewV,EAAgBK,GACpD,IAAIJ,EAAqBD,EAAS,aAElC1Z,QAAQC,IAAI,QAEZvT,KAAK0c,IAAI4Q,UAAUL,EAAY,CAC9BjhB,KAAM,UACNnI,KAAM,CACL,KAAQ,oBACR,SAAY,MAIY,iBAAtB7D,KAAKiqB,cAAyD,YAAtBjqB,KAAKiqB,aAEhDjqB,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMN,EAAa,WACnB,KAAQ,OACR,OAAUA,EACV,MAAS,CACR,aAAcI,EACd,qBAAsB,QACtB,eAAgB,MAIY,UAAtBrtB,KAAKiqB,cAAkD,eAAtBjqB,KAAKiqB,aAE9CjqB,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMN,EAAa,SACnB,KAAQ,SACR,OAAUA,EACV,MAAS,CACR,gBAAiB,EACjB,eAAgBI,EAChB,sBAAuB,EACvB,sBAAuB,aAIK,SAAtBrtB,KAAKiqB,cAAiD,cAAtBjqB,KAAKiqB,cAC7CjqB,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMN,EAAa,QACnB,OAAUA,EACV,KAAQ,OACR,OAAU,CACT,YAAa,QACb,WAAY,SAEb,MAAS,CACR,aAAcI,EACd,aAAc,KAKXrtB,KAAK0c,IAAIyQ,UAAUF,GAAaO,QAAQhW,IAG/C,YAAAyU,WAAA,sBACsB,MAAjBjsB,KAAKytB,UAAqC,MAAjBztB,KAAK0tB,WACZ,MAAjB1tB,KAAK2tB,SACR3tB,KAAK1B,gBAAgBskB,mBAAmB5iB,KAAKytB,SAAUztB,KAAK0tB,UAAUxjB,MAAK,SAAA0jB,GAC1E,IAAIC,EAAS,IAAI,EAAAC,aAAa,CAACF,EAAS,GAAIA,EAAS,IAAK,CAACA,EAAS,GAAIA,EAAS,KAEjF,EAAKlR,IAAIqR,UAAUF,EAAQ,CAAEG,QAAS,QACpC1jB,OAAM,SAACC,GACT,EAAKC,MAAMD,MAIZvK,KAAK1B,gBAAgBukB,yBAAyB7iB,KAAKytB,SAAUztB,KAAK0tB,SAAU1tB,KAAK2tB,UAAUzjB,MAAK,SAAA0jB,GAC/F,IAAIC,EAAS,IAAI,EAAAC,aAAa,CAACF,EAAS,GAAIA,EAAS,IAAK,CAACA,EAAS,GAAIA,EAAS,KAEjF,EAAKlR,IAAIqR,UAAUF,EAAQ,CAAEG,QAAS,QACpC1jB,OAAM,SAACC,GACT,EAAKC,MAAMD,QAMf,YAAAwhB,SAAA,WACC,GAA2B,MAAvB/rB,KAAK4rB,eAAwB,CAChC,IAAIqC,EAAyBjuB,KAAK4rB,eAAeC,SAEjD,GAAIoC,EAAkBnC,SAAS7qB,OAAS,EAAG,CAK1C,GAA0B,iBAAtBjB,KAAKiqB,aAAiC,CAGzC,IAFA,IAAIiE,EAAW,GAEN1qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAG3D,GAA8B,kBAF1B2qB,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACpB,IAAK,IAAIqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACxD6E,EAASlqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAI5C6E,EAASlqB,KAAKmqB,EAAQ3W,SAAS4W,aAIjC,MAAO,CACNA,YAAaF,EACbliB,KAAM,gBAGH,GAA0B,eAAtBhM,KAAKiqB,aAA+B,CAC5C,IAAIoE,EAAS,GAEb,IAAS7qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAG3D,GAA8B,gBAF1B2qB,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACpB,IAASqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACxDgF,EAAOrqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAI1CgF,EAAOrqB,KAAKmqB,EAAQ3W,SAAS4W,aAI/B,MAAO,CACNA,YAAaC,EACbriB,KAAM,cAGH,GAA0B,cAAtBhM,KAAKiqB,aAA8B,CAC3C,IAAIqE,EAAQ,GAEZ,IAAS9qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAC3D,IAAI2qB,EAEJ,GAA8B,qBAF1BA,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACpB,IAASqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACxDiF,EAAMtqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAIzCiF,EAAMtqB,KAAKmqB,EAAQ3W,SAAS4W,aAI9B,MAAO,CACNA,YAAaE,EACbtiB,KAAM,mBAIP,OAAOiiB,EAAkBnC,SAAS,GAAGtU,SAIvC,OAAOxX,KAAK6sB,aAGb,OAAO7sB,KAAK6sB,cAGN,YAAAriB,MAAP,SAAaD,GAEZ+I,QAAQC,IAAI,QAAShJ,I,iCAxZV5Q,GAA2B,2E,iCAA3BA,EAA2B,+E,GAAA,M,4mBCrBxC,yBAEA,0C,MAAqB,qD,iDDSrB,GAUa,EAAAA,+B,+DAAAA,EAA2B,E,KAVvC,EAAAwD,U,MAAU,CACVC,SAAU,qCACVC,YAAa,wCACbC,UAAW,CAAC,6C,mEAYH2sB,aAAc,CAAF,C,KAApB,EAAA1sB,QAKSsrB,eAAc,E,KAAvB,EAAAprB,SAKQuuB,YAAa,CAAF,C,KAAnB,EAAAzuB,QAKQsvB,aAAc,CAAF,C,KAApB,EAAAtvB,QAKQkwB,SAAU,CAAF,C,KAAhB,EAAAlwB,QAKQmwB,SAAU,CAAF,C,KAAhB,EAAAnwB,QAEQowB,SAAU,CAAF,C,KAAhB,EAAApwB,QAKQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,QAKSwtB,YAAW,E,KAApB,EAAAttB,SAE+B6uB,kBAAiB,E,KAAhD,EAAA3a,U,MAAU,uBAEUqZ,OAAM,E,KAA1B,EAAArZ,U,MAAU,e,8HEnEZ,WAEA,GADA,MACA,O,0FCKI,+CAA0E,2GAAyC,iB,gCAAjE,uCDDtD,iBAaC,WAAmBxD,GAAA,KAAAA,aAFnB,KAAAzK,UAA+B,K,OAI/B,YAAAzD,SAAA,WACCD,KAAKuuB,gBAAkB,IAAI,EAAAzc,SAG5B,YAAA1G,KAAA,SAAK1H,GACJ1D,KAAK0D,UAAYA,GAIlB,YAAA8qB,oBAAA,SAAoB9qB,GACF,MAAbA,GACH1D,KAAKuuB,gBAAgBlhB,KAAK3J,GAG3B1D,KAAKmO,WAAWgI,Q,iCAxBLlc,GAAkC,oC,iCAAlCA,EAAkC,yPCX/C,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,iDACJ,kB,MAD6B,wD,4FDD7B,GAKa,EAAAA,sC,+DAAAA,EAAkC,E,KAL9C,EAAAkD,U,MAAU,CACVC,SAAU,+BACVC,YAAa,gDACbC,UAAW,Q,yKETZ,WASA,OAOA,QAGA,SAOA,GAHA,OACA,MAEA,MACA,S,4HCzBM,yBAAI,YAAkC,kB,kBAAlC,gE,sBAGN,6BAAsE,6BAAuE,kB,sBAavG,2BACE,6BACF,kB,iGAOW,6BACE,YACA,6BACG,+BAGE,4IAA2C,qKAA3C,CAA2C,6HAH7C,iBAcE,8BAAsD,+IACpD,sBACF,iBACJ,iBACH,iB,wHApBE,qDAGK,iDAA4B,+CAA5B,CAA4B,iCAA5B,CAA4B,oBAA5B,CAA4B,wDAA5B,CAA4B,oDAA5B,CAA4B,0BAA5B,CAA4B,0BAA5B,CAA4B,uBAA5B,CAA4B,wB,4FA2CpC,2BACE,YACF,kB,uBAF6C,mFAC3C,wD,yBALN,yBAII,6BAGJ,kB,uCAHuB,0D,oHApD7B,4BACE,yBACE,4BACE,4BACE,4BACG,gCAsBH,iBACF,iBACA,4BACE,yBACE,yBACE,6BACF,iBAEA,wCAAsD,0EAA2B,oFAAiH,iBACpM,iBACA,0BACE,8BACE,0BACE,8BACF,iBAEA,wCAAiC,wEAAyB,oFAA2J,iBAEvN,iBACF,iBACF,iBACA,+BAQF,iBACF,iBACA,6BAAgJ,6G,wBAC9I,uBACF,iBACF,iB,yDA7DI,kCAAU,2MAKkD,yDA8BA,iDAA2B,2BAA3B,CAA2B,sBAA3B,CAA2B,eAQ9C,+CAAyB,yBAAzB,CAAyB,mBAAzB,CAAyB,sBAAzB,CAAyB,cAAzB,CAAyB,sBAK3D,kFAUmE,0G,mDApE5F,4BACI,4BACI,+BAEI,+BAEE,6BAIA,gCA8DF,iBACJ,iBACJ,iBAEA,4BACE,2BAAgC,kGAA4B,6BAAoE,iBAClI,iBACJ,iB,gCAzEkC,mEAIa,4DDO3E,iBAyCC,WAAoBwW,EAAkCzV,GAAlC,KAAAyV,UAAkC,KAAAzV,kBAbtD,KAAA4V,YAAoB,IAAIC,KAExB,KAAAd,SAAmB,EAGV,KAAA1P,UAA+B,KAE9B,KAAAoS,SAAW,IAAI,EAAA5Y,aAEzB,KAAAwrB,kBAA4B,EAE5B,KAAA+F,QAAe,G,OAIf,YAAAxuB,SAAA,sBAECD,KAAK0uB,kBAAoBzW,KAAKC,MAAMD,KAAKE,UAAUnY,KAAK0D,YAExD1D,KAAK0D,UAAUirB,QAAQttB,SAAQ,SAAAutB,GAC9B,IAAK,IAAIprB,EAAI,EAAGA,EAAI,EAAKE,UAAU+H,MAAMxK,OAAQuC,IAAK,CACrD,IAAIqmB,EAAU,EAAKnmB,UAAU+H,MAAMjI,GAEA,MAA/BorB,EAAMC,QAAQhF,EAAQ5mB,QACzB2rB,EAAMC,QAAQhF,EAAQ5mB,MAAQ,CAAEiE,KAAM,GAAIie,UAAW,OAGtDyJ,EAAMH,QAAU,QAKnB,YAAA3E,gBAAA,WAIC,IAFA,IAAI+E,EAAU,GAELrrB,EAAI,EAAGA,EAAIxD,KAAK0D,UAAU+H,MAAMxK,OAAQuC,IAAK,CAGrDqrB,EAFc7uB,KAAK0D,UAAU+H,MAAMjI,GAEnBP,MAAQ,GAGzB,IAAM2rB,EAAQ,CACb/V,UAAW,KACXC,QAAS,KACT+V,QAASA,EACTJ,QAAS,IAGVzuB,KAAK0D,UAAUirB,QAAQ3qB,KAAK4qB,IAG7B,YAAAxtB,OAAA,SAAOwtB,GAEN,IAAK,IAAIprB,EAAI,EAAGA,EAAIxD,KAAK0D,UAAUirB,QAAQ1tB,OAAQuC,IAAK,CAC5CxD,KAAK0D,UAAUirB,QAAQnrB,GAEzBqV,YAAc+V,EAAM/V,WAC5B7Y,KAAK0D,UAAUirB,QAAQhnB,OAAOnE,EAAG,GAInCxD,KAAKmpB,gBAGN,YAAA2F,uBAAA,SAAuBzV,EAAcrN,EAAW4iB,EAAYzkB,GAA5D,WAEK+C,EAAoBlB,EAAK/I,KAEzB8rB,EAAa,KACblN,EAAiB,KACjB/X,EAAgB,KAEpB,GAAIK,EAAQ,EAAG,CACd,IAAI6kB,EAAQhvB,KAAK0D,UAAU+H,MAAMtB,EAAQ,GACnC,EAASykB,EAAMC,QAAQG,EAAM/rB,MAEX,MAApB,EAAOkiB,WAAyD,MAApC,EAAOA,UAAU8J,WAAWhsB,OAC3D6G,EAAgB9J,KAAK0D,UAAUT,KAC/B8rB,EAAa,EAAO5J,UAAU8J,WAAWhsB,KACzC4e,EAAiB,EAAOsD,UAAU8J,WAAWjjB,MAI/C,OAAO,EAAAkjB,WAAWta,QAAO,SAACua,GACxB,GAAkB,MAAdJ,EAIF,IAFA,IAAIK,EAAQjlB,EAES,MAAd4kB,GAAsBK,EAAQ,GACrC,CACEA,GAAgB,EAEhB,IAAI,EAASR,EAAMC,QAAQ,EAAKnrB,UAAU+H,MAAM2jB,GAAOnsB,MAEzC,MAAV,IAEsB,MAApB,EAAOkiB,WAAyD,MAApC,EAAOA,UAAU8J,WAAWhsB,MAExD8rB,EAAa,EAAO5J,UAAU8J,WAAWhsB,KACzC6G,EAAgB,EAAKpG,UAAUT,KAC/B4e,EAAiB,EAAKne,UAAU+H,MAAM2jB,GAAOnsB,MAErB,MAAjB,EAAOosB,SAEdN,EAAa,EAAOM,OACpBvlB,EAAgB,EAAKpG,UAAUT,KAC/B4e,EAAiB,EAAKne,UAAU+H,MAAM2jB,GAAOnsB,OAMxD,EAAK6Q,QAAQ6L,wBAAwBiP,EAAMC,QAAQ7iB,EAAK/I,MAAMiE,KAAMgG,EAAmB6hB,EAAYlN,EAAgB/X,EAAeuP,GAAMnP,MAAK,SAAAolB,GAC5IH,EAAS9hB,KAAKiiB,UAKjB,YAAAC,kBAAA,SAAkB/V,EAAmBxN,EAAW4iB,EAAYvV,GAA5D,WAGIuV,EAAMC,QAAQ7iB,EAAK/I,MAAMiE,KAAOsS,EAAE/L,KAAK0a,KAAO,MAAQ3O,EAAE/L,KAAKxK,KAC7D2rB,EAAMC,QAAQ7iB,EAAK/I,MAAMosB,OAAS7V,EAAE/L,KAAKxK,KAI5C,IAFA,IAAIwe,EAAc,GAETje,EAAI,EAAGA,EAAIxD,KAAK0D,UAAU+H,MAAMxK,OAAQuC,IAAK,CACrD,IAAIqmB,EAAU7pB,KAAK0D,UAAU+H,MAAMjI,GAInC,GAFAie,EAAYzd,KAAK6lB,EAAQ5mB,MAErB4mB,EAAQ5mB,OAAS+I,EAAK/I,KACzB,MAIFjD,KAAK8T,QAAQwN,oBAAoB9H,EAAE/L,KAAK+hB,IAAKxjB,EAAK/I,KAAMwe,GAAa,EAAMpI,GAAMnP,MAAK,SAAAulB,UAE1Eb,EAAMC,QAAQ7iB,EAAK/I,MAAMosB,OACpCT,EAAMC,QAAQ7iB,EAAK/I,MAAMkiB,UAAYsK,EAAUtK,UAC/CyJ,EAAMC,QAAQ7iB,EAAK/I,MAAMiE,KAAOuoB,EAAUtK,UAAU8J,WAAWta,aAAavI,eAAiB,MAAQqjB,EAAUtK,UAAU8J,WAAWhsB,KAEpI,IAAK,IAAIO,EAAI,EAAGA,EAAI,EAAKE,UAAU+H,MAAMxK,OAAQuC,IAAK,CAIrD,IAHA,IAAIqmB,EAAU,EAAKnmB,UAAU+H,MAAMjI,GAC/BksB,EAAWD,EAEI,MAAZC,GAAoBA,EAASvK,UAAU8J,WAAWjjB,MAAQ6d,EAAQ5mB,MAEvEysB,EADGA,EAASb,QAAQ5tB,OAAS,EAClByuB,EAASb,QAAQ,GAGjB,KAIG,MAAZa,IACHd,EAAMC,QAAQhF,EAAQ5mB,MAAMkiB,UAAYuK,EAASvK,UACjDyJ,EAAMC,QAAQhF,EAAQ5mB,MAAMiE,KAAOwoB,EAASvK,UAAU8J,WAAWta,aAAavI,eAAiB,MAAQsjB,EAASvK,UAAU8J,WAAWhsB,WAOzI,YAAA0Z,SAAA,SAAS3Q,EAAW4iB,GACnBA,EAAMC,QAAQ7iB,EAAK/I,MAAMiE,KAAO,UACzB0nB,EAAMC,QAAQ7iB,EAAK/I,MAAMkiB,iBACzByJ,EAAMC,QAAQ7iB,EAAK/I,MAAMosB,QAGjC,YAAAtG,uBAAA,WAGC,IAFA,IAAIC,EAAahpB,KAAKipB,yBAAyBC,UAEvC1lB,EAAE,EAAGA,EAAEwlB,EAAW/nB,OAAQuC,IAAI,CAErC,IADYwlB,EAAWxlB,GACbuT,MACT,OAAO,EAIT,OAAO,GAGR,YAAAoS,aAAA,WAECnpB,KAAKoT,QAAUpT,KAAK+oB,yBAGpB,IAAK,IAAIM,EAAI,EAAGA,EAAIrpB,KAAK0D,UAAUirB,QAAQ1tB,OAAQooB,IAAK,CACvD,IAAMC,EAAKtpB,KAAK0D,UAAUirB,QAAQtF,GAGlC,GAFAC,EAAGC,gBAAkB,GAEC,MAAhBD,EAAGzQ,WAAsC,KAAjByQ,EAAGzQ,WAAqC,MAAdyQ,EAAGxQ,SAAkC,KAAfwQ,EAAGxQ,QAAiB,CACjG,IAAI0Q,EAAU,IAAItV,KAAKoV,EAAGzQ,WACtB4Q,EAAU,IAAIvV,KAAKoV,EAAGxQ,SAEtB,UAAMkD,mBAAmBwN,EAAIC,KAChCH,EAAGC,gBAAgBvlB,KAAK,CACvB,KAAQ,QACR,QAAWhE,KAAK3B,gBAAgByC,OAAO,qDAGxCd,KAAKoT,SAAU,GAGhB,IAAK,IAAI5P,EAAI,EAAGA,EAAIxD,KAAK0D,UAAUirB,QAAQ1tB,OAAQuC,IAElD,GAAI6lB,IAAM7lB,EAAG,CACZ,IAAMkmB,EAAK1pB,KAAK0D,UAAUirB,QAAQnrB,GAClC,GAAsB,MAAhBkmB,EAAG7Q,WAAsC,KAAjB6Q,EAAG7Q,WAAqC,MAAd6Q,EAAG5Q,SAAkC,KAAf4Q,EAAG5Q,QAAiB,CACjG,IAAI6Q,EAAU,IAAIzV,KAAKwV,EAAG7Q,WACtB+Q,EAAU,IAAI1V,KAAKwV,EAAG5Q,SAGtB,UAAM6C,kBAAkB6N,EAAG5Q,UAAW6Q,EAAG7Q,UAAW+Q,EAAG/Q,UAAWgR,EAAGhR,aACxE0Q,EAAGC,gBAAgBvlB,KAAK,CACvB,KAAQ,QACR,QAAUhE,KAAK3B,gBAAgByC,OAAO,qCAGvCd,KAAKoT,SAAU,MAQrBpT,KAAKiM,KAAKjM,KAAK0D,WAGf,IAAImmB,EAAU,KAEd,IAASR,EAAI,EAAGA,EAAIrpB,KAAK0D,UAAUirB,QAAQ1tB,OAAQooB,IAAK,CACvD,IAAIhc,EAAOrN,KAAK0D,UAAUirB,QAAQtF,GAElC,GAAIA,EAAI,GACoB,MAArBQ,EAAQhR,WAA2C,KAAtBgR,EAAQhR,WAA0C,MAAnBgR,EAAQ/Q,SAAuC,KAApB+Q,EAAQ/Q,QAAiB,CACjH2Q,EAAU,IAAIvV,KAAK2V,EAAQ/Q,SAE/B,GAAwB,MAAlBzL,EAAKwL,WAAwC,KAAnBxL,EAAKwL,WAAuC,MAAhBxL,EAAKyL,SAAoC,KAAjBzL,EAAKyL,QAAiB,CACrG6Q,EAAU,IAAIzV,KAAK7G,EAAKwL,WAExB,UAAMsD,OAAOsN,EAAG7Q,UAAW+Q,EAAG/Q,aACjCvL,EAAKkc,gBAAgBvlB,KAAK,CACzB,KAAQ,UACR,QAAUhE,KAAK3B,gBAAgByC,OAAO,iCAGvC+oB,EAAQN,gBAAgBvlB,KAAK,CAC5B,KAAQ,UACR,QAAUhE,KAAK3B,gBAAgByC,OAAO,mCAQ3C+oB,EAAUxc,IAIZ,YAAA+N,iBAAA,SAAiBC,GAChB,IAAMC,EAAMD,EAAQE,aAEpB,OAAOF,EAAQK,iBAAmB,KAAOL,EAAQI,cAAgB,GAAK,KAAOH,EAAM,GAAK,IAAM,IAAMA,GAGrG,YAAApC,WAAA,SAAWG,GACV,IACIsW,EADaC,EAAOC,WAAWxW,GACXyW,eAAe,KACvC,OAAOF,IAASD,OAAOA,IAKxB,YAAAI,YAAA,SAAYjH,EAAYkH,GAEpBlH,EAAWhQ,UAAY,EAAAmX,QACzBnH,EAAWhQ,QAAU,IAAI5E,KAGzB4U,EAAWhQ,QAAU,EAAAmX,QAGtBjwB,KAAKmpB,gBAGN,YAAAld,KAAA,SAAK+jB,GAGJA,EAAkBrB,QAAQ1iB,MAAK,SAASC,EAAGC,GAE1C,OAAmB,MAAfD,EAAE2M,WAAqC,KAAhB3M,EAAE2M,UACrB,EAEgB,MAAf1M,EAAE0M,WAAqC,KAAhB1M,EAAE0M,WACzB,EAGQ,IAAI3E,KAAKhI,EAAE2M,WACZ,IAAI3E,KAAK/H,EAAE0M,eAK7B,YAAA5C,SAAA,WACCjW,KAAK8V,SAASgC,KAAK9X,KAAK0D,YAGzB,YAAA0S,SAAA,WACCpW,KAAK8V,SAASgC,KAAK9X,KAAK0uB,oB,iCA7Tbx0B,GAA6B,oF,iCAA7BA,EAA6B,+D,GAAA,K,o6ECrD1C,0BACI,oEAIA,8BAEA,+BACI,+BACI,4BACI,4BACI,4BACQ,8BAgFR,iBACJ,iBAEJ,iBAEA,6BAEI,6BACI,8BACI,iCAAsB,wCAAS,EAAAkc,cAC3B,8BACJ,iBACA,iCAAsB,wCAAS,EAAAH,cAC3B,8BACJ,iBACJ,iBACJ,iBACJ,iBAEJ,iBACJ,iBACJ,kB,4BA5GU,uDAO0C,sDA4FqD,oF,mRDtE5F,CACX,CACC,EAAAtC,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,a,EAjBhB,GAwBa,EAAA/gB,iC,+DAAAA,EAA6B,E,KAxBzC,EAAAiD,U,MAAU,CACVC,SAAU,yBACVC,YAAa,0CACbC,UAAW,GACXqtB,KAAM,CAAE,eAAgB,QACxB9W,WAAY,CACX,CACC,EAAAF,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,e,4EASsBgO,yBAAwB,E,KAA5D,EAAA2B,a,MAAa,yBAOLlnB,UAAW,CAAF,C,KAAjB,EAAAnG,QAESuY,SAAQ,E,KAAjB,EAAArY,Y,2GEhEF,W,GAGA,O,uDCMQ,4BACE,6BACF,kB,6BADa,6CAAe,sB,mDAO9B,+BAAsF,yFAAmB,4BAA6C,kBDZ5J,iBAgCC,aAtBS,KAAA2R,UAAoB,EAEpB,KAAAwH,QAAgB,KAEf,KAAAI,gBAAkB,IAAI,EAAA9Z,aAEhC,KAAAgzB,MAAe,GAEf,KAAA3wB,cAA+B,CAC7BC,MAAO,CACLC,MAAO,OAIX,KAAAJ,QAAwB,CACvBC,aAAc,OACd6wB,gBAAiB,WACjBC,QAAS,OACT7wB,cAAeS,KAAKT,e,OAQrB,YAAAU,SAAA,WACCD,KAAKoY,aAGN,YAAAxF,YAAA,SAAYmF,GAEPA,EAAiB,SACpB/X,KAAKoY,aAIP,YAAAA,UAAA,sBACOO,EAAO,KAES,MAAhB3Y,KAAK4W,UAET+B,EAAO3Y,KAAK4W,QAAQgC,WAGtB,IAAIsX,EAAQ,GACRrG,EAAU,KAEd7pB,KAAK0D,UAAUirB,QAAQttB,SAAQ,SAAAgvB,GAC9B,IAAMxX,EAAY3E,KAAKgE,MAAMmY,EAAIxX,WAC3BC,EAAU5E,KAAKgE,MAAMmY,EAAIvX,UAEnB,MAARH,GAAgBA,GAAQE,GAAaF,GAAQG,IAChD,EAAKpV,UAAU+H,MAAMpK,SAAQ,SAAA2K,GAC5B,IAAIrM,EAAY,CACfsD,KAAM+I,EAAK/I,KACX4E,MAAOmE,EAAKnE,MACZlB,SAAU,GACV2pB,UAAU,GAGmB,MAA1BD,EAAIxB,QAAQ7iB,EAAK/I,QACpBtD,EAAKwoB,KAAOkI,EAAIxB,QAAQ7iB,EAAK/I,MAAMiE,KAEvB,MAARyR,IAEFhZ,EAAKwoB,KAAOxoB,EAAKwoB,KAAO,KAAOkI,EAAIxX,UAAY,OAASwX,EAAIvX,QAAU,KAGxEnZ,EAAKwlB,UAAYkL,EAAIxB,QAAQ7iB,EAAK/I,MAAMkiB,WAG1B,MAAX0E,EACHqG,EAAMlsB,KAAKrE,IAGXkqB,EAAQljB,SAAS3C,KAAKrE,GACtBkqB,EAAQyG,UAAW,GAGpBzG,EAAUlqB,KAIZkqB,EAAU,QAGX7pB,KAAKkwB,MAAQA,GAGd,YAAAK,OAAA,WACCvwB,KAAKgX,gBAAgBc,KAAK9X,KAAK0D,Y,iCA/FpB1J,I,iCAAAA,EAAe,+iBCX5B,0BAEE,4BACE,4BACE,2BAAuB,YAAmB,iBAC5C,iBACA,4BAGI,8BAQF,iCAEF,iBACF,iBACF,kB,MAjB6B,sDAKf,qDAQ6D,kD,wEDZ3E,GAMa,EAAAA,mB,+DAAAA,EAAe,E,KAN3B,EAAAmD,U,MAAU,CAEVC,SAAU,oBACVC,YAAa,2BACbC,UAAW,CAAC,gC,uBAIHoG,UAAW,CAAF,C,KAAjB,EAAAnG,QAEQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,QAEQqZ,QAAS,CAAF,C,KAAf,EAAArZ,QAESyZ,gBAAe,E,KAAxB,EAAAvZ,Y,wHEnBF,WAIA,GAFA,MAEA,OAGA,S,GACA,MAEA,O,4JCAY,gCAA2D,YAA4B,kB,uBAA5C,0BAAgB,4D,qBAWvD,6B,qBACA,6B,mDAHJ,8BACA,kBAAE,2BAAG,qIACD,oCACA,oCACF,iBACF,iB,gCAHe,4DACA,4D,mDAIf,0BACE,8DACiB,kGAAoC,kGAOrD,iBACH,iB,gCAPG,6DAAoC,8BAApC,CAAoC,gCAApC,CAAoC,uBAApC,CAAoC,cAApC,CAAoC,e,uFAU1C,6BACE,uBACA,2BAEE,gCAAoD,6BAA4E,iBAClI,iBACF,kB,6BAJK,+H,8CD5Bb,aA4CC,WAAoBU,EAAsCG,EACjDkyB,EAAoDnyB,EAA8CE,GAD3G,WAAoB,KAAAJ,eAAsC,KAAAG,kBACjD,KAAAkyB,uBAAoD,KAAAnyB,kBAA8C,KAAAE,cA/B3G,KAAAI,eAAkC,GAElC,KAAA8xB,YAAsB,GAEtB,KAAAC,OAAiB,GAWjB,KAAAna,aAAkC,KAKlC,KAAAC,cAAmC,KAEnC,KAAAma,sBAAgC,EAEhC,KAAAvd,SAAmB,EAEnB,KAAAqb,SAAmB,EAEnB,KAAArX,2BAAuC,CAAC,MAAO,WAAY,OAAQ,iBAAkB,aAAc,UAKlGpX,KAAK4wB,WAAa,EAAA1B,WAAWta,QAAO,SAACua,GACpC,EAAK7wB,gBAAgB0kB,iCAAiC,EAAKyN,YAAa,EAAK3sB,cAAcb,MAAMiH,MAAK,SAAAolB,GACrGH,EAAS9hB,KAAKiiB,S,OAKjB,YAAArvB,SAAA,sBACCD,KAAK1B,gBAAgB+iB,kBAAkB,GAAI,MAAMnX,MAAK,SAAAuB,GAGrD,IADA,IAAI+I,EAAa,GACRhR,EAAI,EAAGA,EAAIiI,EAAMxK,SAAUuC,EAAG,CACtC,IAAMwI,EAAOP,EAAMjI,GACbqH,EAAUmB,EAAKlJ,iBACf2R,EAAiC,MAAtBzI,EAAK3I,eAA+C,IAAtB2I,EAAK3I,cAAsB2I,EAAK3I,cAAgB2I,EAAK/I,KAEhG,EAAK1E,YAAYsyB,kBAAkBhmB,EAAS4J,IAC/CD,EAAWxQ,KAAKyH,EAAMjI,IAGxB,EAAK7E,eAAiB6V,EAEtB,EAAK7V,eAAesN,MAAK,SAACC,EAAGC,GAC5B,OAAID,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,eAAuB,EAChFH,EAAErE,MAAMuE,eAAeC,cAAgBF,EAAEtE,MAAMuE,eAAeC,cAAsB,EACjF,KAGb,IAAIX,EAAM,EAAKC,yBAAyB,QACpCD,GACH,EAAK/M,eAAegJ,OAAO+D,EAAK,MAK/BpB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAOL,YAAAkhB,cAAR,SAAsBqF,GACI,MAArB9wB,KAAKuW,eAKkB,MAAvBvW,KAAKuY,gBAA2BvY,KAAKuY,eAAewC,gBAK5B,MAAxB/a,KAAK+wB,iBAA4B/wB,KAAK+wB,gBAAgBhW,cAK1D/a,KAAKoT,SAAU,EAddpT,KAAKoT,SAAU,GAiBT,YAAAzH,yBAAR,SAAiC1I,GAChC,IAAK,IAAIO,EAAI,EAAGA,EAAIxD,KAAKrB,eAAesC,OAAQuC,IAAK,CAEpD,GADUxD,KAAKrB,eAAe6E,GACtBP,OAASA,EAChB,OAAOO,EAIT,OAAO,MAGR,YAAAwtB,uBAAA,SAAuBxX,GACtBxZ,KAAKyuB,QAAUjV,GAGhB,YAAA+V,kBAAA,SAAkB/V,GAAlB,WACCxZ,KAAK1B,gBAAgB+lB,qBAAqB7K,EAAE/L,KAAKxK,KAAMjD,KAAK8D,cAAcb,MAAMiH,MAAK,SAAAib,GACpF,EAAK5O,aAAe4O,EACpB,EAAK3O,cAAgByB,KAAKC,MAAMD,KAAKE,UAAU,EAAK5B,kBAElDjM,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA0mB,OAAA,sBAEKC,EAA8BlxB,KAAK+wB,gBAAgB/V,eAEnDhb,KAAKuY,eAKT,IAAIgG,EAAU,CAAC,CACd,WAAc,mBACd,WAAc,eACd,kBAAoB,IAAIrK,MAAO0E,UAC/B,UAAasY,EACb,iBAAoBlxB,KAAK0wB,SAG1B1wB,KAAKwwB,qBAAqB/R,oBAAoBxG,KAAKE,UAAUoG,IAC3DrU,MAAK,SAAAib,GACL,EAAKgM,SAEL,EAAKhjB,WAAa,EAAKhQ,aAAaiP,KAAK,EAAAgkB,sBAAuB,CAAE/iB,UAAU,IAC5E,EAAKF,WAAWI,QAAQQ,QAAU,EAAK1Q,gBAAgByC,OAAO,qCAE5DwJ,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGbvK,KAAKoT,SAAU,GAGhB,YAAA+d,OAAA,WACCnxB,KAAKoT,SAAU,EACfpT,KAAKuW,aAAe,KACpBvW,KAAKwW,cAAgB,KACrBxW,KAAKywB,YAAc,KACnBzwB,KAAK8D,cAAgB,KACrB9D,KAAK0wB,OAAS,MAGR,YAAAlmB,MAAP,SAAaD,GACZvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCA1KhD3E,GAA4B,yM,iCAA5BA,EAA4B,8D,GAAA,M,4nDClBzC,4BACE,4BACE,4BACE,2BAAiC,4BAAsE,iBACvG,4BAEE,4BACE,4BACA,+BAAgF,sEAC9E,wBACA,kCACF,iBACF,iBAEA,6BACE,8BACA,gCAA0D,oEAAyB,wCAAsH,EAAA+1B,kBAAA,KAA/I,CAAyB,uCACL,EAAAyB,uBAAA,M,wBAD9E,iBAGE,iCAOA,gCAWJ,iBAEA,gCAQF,iBAEF,iBACF,iBACF,kB,MA3C0F,uDAEtD,wDAMP,yEAAsC,wBAAtC,CAAsC,4BAAtC,CAAsC,oBAAtC,CAAsC,yBAAtC,CAAsC,0BAAtC,CAAsC,8DAGhD,mDAOD,2DAaJ,qD,8UD1Bd,GAKa,EAAAx3B,gC,+DAAAA,EAA4B,E,KALxC,EAAA2D,U,MAAU,CACVC,SAAU,wBACVC,YAAa,yCACbC,UAAW,CAAC,oC,uJAmBkByzB,gBAAe,E,KAA5C,EAAApf,U,MAAU,qBAEkB4G,eAAc,E,KAA1C,EAAA5G,U,MAAU,uB,oHErCZ,WAGA,GAFA,MACA,MACA,MAGA,SAMA,GAJA,OACA,MAGA,QAGA,Q,0ICFgB,6BACE,6BACF,kB,mDAsBR,8DAGI,gGAOJ,iB,gCANI,8CAAoC,iCAApC,CAAoC,mCAApC,CAAoC,oBAApC,CAAoC,yBAApC,CAAoC,8C,mDAUxC,0BACE,mDAC2B,gGAG3B,iBACF,iB,gCAJI,iDAAwB,oBAAxB,CAAwB,8B,sBAqBpB,2BAAwC,kCAAmB,kB,mDALnE,6BACI,6BAA0B,4BAAO,6BAAyE,iBAAQ,iBAClH,6BACE,kCAAiG,iGAA0C,iBAC3I,6BACE,6BACF,iBACF,iBACJ,iB,gCALuG,+CAE3F,8C,2HDvDpB,aAkFC,WAAoBxT,EAAqCgQ,EAChD7P,EAA0CD,EAClDE,GAFmB,KAAAJ,eAAqC,KAAAgQ,aAChD,KAAA7P,kBAA0C,KAAAD,kBApEnD,KAAA+U,SAAmB,EAInB,KAAAie,SAAmB,EAOnB,KAAA1X,gBAA0B,EAI1B,KAAA2X,eAA2B,KAW3B,KAAAC,oBAA8B,EAoB9B,KAAAC,iBAA2B,EAO3B,KAAAC,QAAkB,KAKlB,KAAA7a,QAAgB,KAEhB,KAAAC,qBAA+B,EAW9B7W,KAAK0xB,QAAUnzB,EAAYmzB,UAC3B1xB,KAAK2xB,aAAe3xB,KAAK0xB,SAAWnzB,EAAYozB,eAChD3xB,KAAK4xB,cAAgB5xB,KAAK0xB,SAAW1xB,KAAK2xB,cAAgBpzB,EAAYszB,gBAEtE7xB,KAAK4W,QAAU,IAAI1C,KAEnB,IAAMoH,EAAMtb,KAAK4W,QAAQ2E,aACzBvb,KAAKyxB,QAAUzxB,KAAK4W,QAAQ8E,iBAAmB,KAAO1b,KAAK4W,QAAQ6E,cAAgB,GAAK,KAAOH,EAAM,GAAK,IAAM,IAAMA,E,OAGvH,YAAArb,SAAA,aAIA,YAAA6xB,qBAAA,SAAqBC,EAA2BlZ,GAC/C,IAAK,IAAIrV,EAAY,EAAGA,EAAIuuB,EAAS9wB,SAAUuC,EAC9C,GAAIuuB,EAASvuB,GAAGqV,YAAcA,EAC7B,OAAOkZ,EAASvuB,GAIlB,OAAO,MAGR,YAAAwuB,gBAAA,SAAgBrP,GACf3iB,KAAKolB,aAAezC,GAGrB,YAAAsP,iBAAA,WACCjyB,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMlY,KAAKyxB,WAGzC,YAAAS,qBAAA,SAAqBC,GACpBnyB,KAAKoyB,kBAAoBD,GAKnB,YAAAE,eAAP,SAAsB5d,EAAkBgd,EAAiBa,GAAzD,WACCtyB,KAAK2Z,gBAAiB,EACtB3Z,KAAKyxB,QAAUA,EACfzxB,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMlY,KAAKyxB,UACxCzxB,KAAKsyB,mBAAqBA,EAE1BtyB,KAAKuyB,mBAAmB9d,GACxBzU,KAAKwyB,eAELxyB,KAAK1B,gBAAgBimB,qBAAqB9P,GAAUvK,MAAK,SAAAuoB,GACxD,EAAKC,gBAAkB,IAAI,EAAA1a,kBAAkB,EAAKlU,cAAe2uB,EAAQtN,UAAUzU,YACnF,EAAKiiB,iBAAmB,IAAI,EAAA3a,kBAAkB,EAAKlU,cAAemU,KAAKC,MAAMD,KAAKE,UAAU,EAAKua,kBAAkBhiB,YAEnH,EAAKjN,YAAcgvB,EAAQhvB,gBAKtB,YAAAmvB,yBAAP,SAAgCC,EAA0BrP,EAAmBiO,EAAiBa,GAA9F,WACK7d,EAAWoe,EAAYna,OAAOyM,UAAUzU,WAAW1E,KACvDhM,KAAK2Z,eAAiBkZ,EAAYna,OAAOtE,MACzCpU,KAAKyxB,QAAUA,EACfzxB,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMuZ,IACnCzxB,KAAKsyB,mBAAqBA,EAE1BtyB,KAAKuyB,mBAAmB9d,GACxBzU,KAAKwyB,eAEqB,MAAtBK,EAAYna,QAAgD,MAA9Bma,EAAYna,OAAOmW,SAAmBgE,EAAYna,OAAOmW,QAAQ5tB,OAAS,GAC3GjB,KAAKyD,YAAcovB,EAAYna,OAAOmW,QACtC7uB,KAAKwxB,iBAAkB,IAGvBxxB,KAAK1B,gBAAgBimB,qBAAqB9P,GAAUvK,MAAK,SAAAuoB,GACxD,EAAKhvB,YAAcgvB,EAAQhvB,eAE5BzD,KAAKwxB,iBAAkB,GAIxBxxB,KAAK0yB,gBAAkB,IAAI,EAAA1a,kBAAkBhY,KAAK8D,cAAe+uB,EAAYna,OAAOyM,UAAUzU,YAC9F1Q,KAAK2yB,iBAAmB,IAAI,EAAA3a,kBAAkBhY,KAAK8D,cAAe+uB,EAAYna,OAAOyM,UAAUzU,YAE/F1Q,KAAKsxB,eAAiB,WACrB,IAAIzN,EAAS,CACZL,UAAWA,EACXsP,cAAeD,EAAYlQ,GAC3BoQ,WAAY,mBACZ7N,eAAgB,EAAKzhB,YACrB0hB,UAAW,EAAK+L,SAChB9c,MAAOye,EAAYna,OAAOtE,OAG3B,EAAK9V,gBAAgBwlB,mBAAmBD,GACtC3Z,MAAK,WAEyB,MAA1B,EAAKkoB,mBACR,EAAKA,uBAGJ9nB,OAAM,SAACC,GACT,EAAKC,MAAMD,QAMR,YAAAyoB,oBAAP,SAA2B/vB,EAAcwR,EAAkBgd,EAAiBa,GAC3EtyB,KAAK2Z,gBAAiB,EACtB3Z,KAAKyxB,QAAUA,EACfzxB,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMlY,KAAKyxB,UACxCzxB,KAAKsyB,mBAAqBA,EAE1BtyB,KAAKizB,eAAehwB,EAAMwR,GAC1BzU,KAAKuyB,mBAAmB9d,GACxBzU,KAAKkzB,iBAAiBjwB,EAAMwR,GAC5BzU,KAAKwyB,gBAGE,YAAAS,eAAR,SAAuBhwB,EAAcwR,GAArC,WACCzU,KAAK1B,gBAAgB+lB,qBAAqBphB,EAAMwR,GAAUvK,MAAK,SAAAib,GAC9D,EAAKuN,gBAAkB,IAAI,EAAA1a,kBAAkB,EAAKlU,cAAemU,KAAKC,MAAMD,KAAKE,UAAUgN,IAAYzU,YACvG,EAAKiiB,iBAAmB,IAAI,EAAA3a,kBAAkB,EAAKlU,cAAemU,KAAKC,MAAMD,KAAKE,UAAU,EAAKua,kBAAkBhiB,YAGnH,EAAKwgB,SAAW,EAAKyB,iBAGrB,EAAKpB,oBAAqB,EAC1B,EAAKne,SAAU,KACb9I,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIL,YAAAioB,aAAR,sBACCxyB,KAAK1B,gBAAgB8lB,aAAala,MAAK,SAAAqB,GACtC,EAAKlN,gBAAgBiN,WAAWC,MAC9BjB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIL,YAAAgoB,mBAAR,SAA2BtvB,GAA3B,WACCjD,KAAK1B,gBAAgB+iB,kBAAkB,CAACpe,GAAO,MAC7CiH,MAAK,SAAApG,GACL,EAAKA,cAAgBA,EAAc,GAEP,MAAxB,EAAK4uB,kBACR,EAAKA,gBAAgB5uB,cAAgB,EAAKA,eAEd,MAAzB,EAAK6uB,mBACR,EAAKA,iBAAiB7uB,cAAgB,EAAKA,eAGvC,EAAKA,cAAcwuB,sBAItBhoB,OAAM,SAACC,GACT+I,QAAQC,IAAIhJ,OAKP,YAAA2oB,iBAAR,SAAyBjwB,EAAckwB,GAAvC,WACCnzB,KAAK1B,gBAAgBykB,2BAA2B9f,EAAMkwB,GACpDjpB,MAAK,SAACzG,GACN,EAAKA,YAAcA,EAGnB,EAAK+tB,iBAAkB,KAErBlnB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAId,YAAAukB,uBAAA,SAAuB5nB,EAAMuN,GAA7B,WACC,OAAO,EAAAya,WAAWta,QAAO,SAACua,GACzB,EAAK7wB,gBAAgB0kB,iCAAiC9b,EAAMuN,GAAUvK,MAAK,SAAAolB,GAC1EH,EAAS9hB,KAAKiiB,UAKjB,YAAAC,kBAAA,SAAkB/V,EAAmB4Z,GAArC,WACCpzB,KAAK1B,gBAAgBwkB,mBAAmBtJ,EAAE/L,KAAKxK,KAAMmwB,EAAIjO,UAAU8J,WAAWjjB,MAC5E9B,MAAK,SAAAib,GAELiO,EAAIjO,UAAYA,KAEd7a,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIN,YAAAkhB,cAAR,WAC6B,MAAxBzrB,KAAK+wB,kBACR/wB,KAAKuxB,mBAAqBvxB,KAAK+wB,gBAAgBhW,cAKrB,MAAvB/a,KAAKqzB,iBACRrzB,KAAKwxB,gBAAkBxxB,KAAKqzB,eAAetY,cAI5C/a,KAAKoT,QAAUpT,KAAKuxB,oBAAsBvxB,KAAKwxB,iBAGhD,YAAA8B,WAAA,SAAWC,EAAkBC,QAAA,IAAAA,OAAA,IACxBD,IAAavzB,KAAKqxB,UAAamC,KAKnCxzB,KAAKyzB,sBAELzzB,KAAKqxB,SAAWkC,EAEhBvzB,KAAKyrB,gBAGJzrB,KAAK6W,oBADW,IAAb0c,IAQG,YAAAE,oBAAR,WAC6B,MAAxBzzB,KAAK+wB,kBACR/wB,KAAK2yB,iBAAmB3yB,KAAK+wB,gBAAgB/V,gBAEnB,MAAvBhb,KAAKqzB,iBACRrzB,KAAKyD,YAAczD,KAAKqzB,eAAeK,kBAGxC1zB,KAAKkxB,SAAWlxB,KAAK2yB,kBAOf,YAAAnoB,MAAP,SAAaD,GACZvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,eAGrD,YAAAgzB,OAAP,WACCnxB,KAAKmO,WAAWgI,QAGV,YAAA8a,OAAP,sBACKjxB,KAAKoT,UACRpT,KAAKmO,WAAWgI,OAEhBnW,KAAKyzB,sBAEsB,MAAvBzzB,KAAKsxB,eACRtxB,KAAK1B,gBAAgB2mB,mBAAmBjlB,KAAKyD,YAAazD,KAAKkxB,SAAUlxB,KAAK2Z,eAAgB3Z,KAAKolB,aAAcplB,KAAKqlB,OACpHnb,MAAK,WAEyB,MAA1B,EAAKkoB,mBACR,EAAKA,uBAGJ9nB,OAAM,SAACC,GACT,EAAKC,MAAMD,MAIbvK,KAAKsxB,mB,iCA3VI73B,GAAwB,+L,iCAAxBA,EAAwB,yD,GAAA,M,wSAPzB,CAAC,EAAAvD,YAAS,umD,GAAA,MCvBtB,4BAEI,+BAQI,4BACI,4BAEI,8BAGJ,iBACJ,iBACA,4BAEI,4BACI,4BACI,8BAAqF,wCAAS,aAAgB,MAC1G,6BACJ,iBACA,+BAA8G,wCAAS,aAAgB,MACnI,6BACJ,iBACA,+BAAoH,8DAA+B,aAAgB,MAC/J,8BACJ,iBACJ,iBACJ,iBACJ,iBAIA,8DAcA,gCAkBA,gCAUC,8BACG,8BAA0B,6BAAO,8BAAkD,iBAAQ,iBAC3F,8BACI,gCAAuC,gEAAqB,4BAAW,EAAA+7B,sBAAvE,iBACJ,iBACJ,iBAEA,6BAEI,6BACI,8BACI,iCAA8C,wCAAS,EAAAd,YACnD,8BACJ,iBACA,iCAA8C,wCAAS,EAAAF,YACnD,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,4BAvFsB,uDASyC,8EAGA,iGAGA,oGAUlD,6HAaC,wEAkBA,oDAayC,iDAW8B,8DACnD,sG,kxCD3ElC,GAWa,EAAAx3B,4B,+DAAAA,EAAwB,E,KAXpC,EAAA0D,U,MAAU,CACVC,SAAU,mBACVC,YAAa,oCACbC,UAAW,CAAC,oCACZnB,UAAW,CAAC,EAAAjG,e,6IASH4N,cAAe,CAAF,C,KAArB,EAAAvG,QAeQ60B,kBAAmB,CAAF,C,KAAzB,EAAA70B,QAW6BwzB,gBAAe,E,KAA5C,EAAApf,U,MAAU,qBAoBkB0hB,eAAc,E,KAA1C,EAAA1hB,U,MAAU,uB,kHE9EZ,W,GACA,MAEA,O,sGCDQ,2BAGI,YACJ,kB,uBAFI,6GACA,sD,yBAJR,2BACI,6BAKJ,kB,6BAJyB,4DDG7B,iBAgBI,WAAqBtT,GAAA,KAAAA,kBAEjB2B,KAAK2zB,YAAc,CAAC,MAAS,I,OAXjC,sBACI,oBAAK,C,IADT,SACUn2B,GACNwC,KAAK2zB,YAAcn2B,G,gCAavB,YAAAyC,SAAA,aAGA,YAAA4S,YAAA,a,iCApBSzc,GAAsB,6C,iCAAtBA,EAAsB,iRCXnC,4BACI,6BAOJ,kB,MAPS,uG,ioDDKT,GAKa,EAAAA,0B,+DAAAA,EAAsB,E,KALlC,EAAA+G,U,MAAW,CACRC,SAAU,iBACVC,YAAa,kCACbC,UAAW,CAAC,6B,mDAKRs2B,MAAK,E,KADR,EAAAr2B,M,MAAM,c,+GEbX,WAIA,GAHA,MAGA,Q,GACA,O,2DCFE,qB,mDAOI,6BACE,+BAAuH,sHAAvH,iBACA,+BAAkC,6BAA6C,iBACjF,iB,0BAFmE,0CAAsB,sBAC3C,4C,mDAclC,6BACE,+BAAiD,yIAAjD,iBAAuF,YAA0B,2BAA+D,yIAAqC,iBACvN,iB,0CADyB,gDAAgE,6D,yBAF3F,0BACE,+BAGF,kB,uBAHsD,+C,yBAJ1D,6BACE,4BAAO,YAA8B,iBACrC,6BACE,+BAKF,iBACF,kB,uCARS,mDAEmB,wD,yBAJ9B,0BACE,+BAUF,kB,4CAVQ,2E,yBANZ,0BACE,yBACE,6BACF,iBACA,6BACE,+BAaF,iBACF,kB,6BAdiC,6DDdvC,iBAuCC,WAAoBY,EAAqC2V,GAArC,KAAA3V,eAAqC,KAAA2V,UAhChD,KAAAhV,OAAmB,GAClB,KAAA+0B,YAAc,IAAI,EAAA32B,aAClB,KAAA42B,gBAAkB,IAAI,EAAA52B,aAEhC,KAAA62B,oBAAqB,EAErB,KAAAC,MAAsB,GAMtB,KAAAC,WAAoB,CACnB,CACC9L,KAAM,YACNtgB,MAAO,sBACP8a,GAAI,eACJuR,OAAQ,uCACRC,IAAK,4BACLC,UAAU,IAWZ,KAAAC,mBAA0C,G,OAM1C,YAAAp0B,SAAA,sBAECD,KAAK8T,QAAQoQ,2BAA2Bha,MAAK,SAAA8pB,GAC5C,EAAKA,MAAQA,EAEb,EAAKM,0BAIP,YAAA1hB,YAAA,SAAYmF,GAEPA,EAAQjZ,OAAOy1B,eAAiBxc,EAAQjZ,OAAO01B,eAClDx0B,KAAKs0B,uBAIP,YAAAA,oBAAA,sBAECt0B,KAAKg0B,MAAM3yB,SAAQ,SAAAqjB,GAElB,IAAI+P,EAAe,CAAE/f,IAAKgQ,EAAKhQ,IAAKC,aAAc+P,EAAK/P,aAAavI,eAAgBsoB,cAAe,IAEnGhQ,EAAK2F,SAAShpB,SAAQ,SAAAqpB,GAIrB,IAAe,IAFD,EAAK5rB,OAAO0N,QAAQke,EAAQhW,KAExB,CACjB,IAAIigB,EAAmB,CAAEjgB,IAAKgW,EAAQhW,IAAKC,aAAc+V,EAAQ9T,QAASge,QAAQ,EAAOC,SAAS,GAElGJ,EAAaC,cAAc1wB,KAAK2wB,OAI9BF,EAAaC,cAAczzB,OAAS,GACvC,EAAKozB,mBAAmBrwB,KAAKywB,OAMhC,YAAAK,6BAAA,SAA6BC,GAC5B,IAAIC,GAAa,EAWjB,OAVAh1B,KAAKq0B,mBAAmBhzB,SAAQ,SAAA4zB,GAC3BA,EAAYvgB,MAAQqgB,GACvBE,EAAYP,cAAcrzB,SAAQ,SAAA6zB,GAC7BA,EAAOL,UACVG,GAAa,SAMVA,GAGR,YAAAG,wBAAA,WACC,IAAIH,GAAa,EASjB,OARAh1B,KAAKq0B,mBAAmBhzB,SAAQ,SAAA4zB,GAC/BA,EAAYP,cAAcrzB,SAAQ,SAAA6zB,GAC7BA,EAAOL,UACVG,GAAa,SAKTA,GAGR,YAAAI,mBAAA,SAAmBC,GAClBA,EAAMT,QAAUS,EAAMT,OAEtB50B,KAAK6zB,YAAY/b,KAAKud,IAGvB,YAAAC,mBAAA,SAAmBD,GAClBA,EAAMT,QAAS,EACfS,EAAMR,SAAU,EAEhB70B,KAAK6zB,YAAY/b,KAAKud,IAGvB,YAAAE,qBAAA,WACkBv1B,KAAK7B,aAAaiP,KAAK,EAAAxR,2BAA4B,CACnEwS,UAAU,EACVC,UAAU,EACVC,qBAAqB,EACrB,MAAS,wBAECC,QAAQ8lB,mBAAqBr0B,KAAKq0B,oBAgB9C,YAAAmB,gBAAA,SAAgBH,GACfr1B,KAAKi0B,WAAW5yB,SAAQ,SAAAo0B,GACvBA,EAAGb,QAAS,KAGbS,EAAMT,QAAS,EAEf50B,KAAK8zB,gBAAgBhc,KAAKud,I,iCArJfx5B,GAAmB,+E,iCAAnBA,EAAmB,6jCCXhC,4BAA0B,mEAAmC,IAAnC,CAAwC,sDAAoC,KAEpG,4BACA,4BAEE,4BACE,yBACE,4BACF,iBACA,8BAIF,iBACA,0BACE,8BAqBA,+BAAgC,wCAAS,EAAA05B,0BAAwB,kBAAE,6BAAmE,iBACxI,iBAEF,iBAEF,kB,MAvCyB,0DAClB,4DAM2C,oDAMtC,kE,82CDTZ,GAKa,EAAA15B,uB,+DAAAA,EAAmB,E,KAL/B,EAAAsB,U,MAAU,CACVC,SAAU,cACVC,YAAa,+BACbC,UAAW,CAAC,+B,uEAIHwB,OAAQ,CAAF,C,KAAd,EAAAvB,QACSs2B,YAAW,E,KAApB,EAAAp2B,SACSq2B,gBAAe,E,KAAxB,EAAAr2B,Y,iHEhBF,WAIA,GAFA,MAEA,QAGA,GAFA,OACA,MACA,Q,GACA,M,sJCYI,4BACE,6BACE,4BACE,6BACF,iBACF,iBACA,6BACE,6BACE,gCAA0C,8GACxC,6BACF,iBACF,iBACF,iBACF,kB,mDAGE,2CAA+H,uHAAqD,iB,+CAA3H,kCAAwB,cAAxB,CAAwB,uB,yBADnF,0BACE,6CACF,kB,8BAD2C,sD,mDAG3C,6BACE,4BACE,6BACF,iBACA,kCAA6B,mGAAuE,iBACtG,iB,iCAD+B,iD,mDAI7B,gCAAmD,oGACjD,6BACF,kB,mDAEA,gCAA6D,4FAC3D,6BACF,kB,mDACA,gCAAqC,4FACnC,6BACF,iB,iCAFgG,wGACpF,qG,mDAtDhB,0BAEE,4DASE,uHAAoD,2FAApD,CAAoD,gFAMtD,iBAEA,8BAeA,8BAIA,8BAOA,4BACE,iCAIA,iCAGA,iCAIF,iBACF,iB,gCAtDI,oDAAsB,8BAAtB,CAAsB,gCAAtB,CAAsB,oBAAtB,CAAsB,gBAAtB,CAAsB,yBAAtB,CAAsB,iBAAtB,CAAsB,qBAAtB,CAAsB,cAelB,6CAeA,wDAIA,8DAQK,2DAIA,6CAGA,8C,mDAMb,0BAEE,yCAKE,yGACF,iBACF,iB,gCANI,qDAAuB,uBAAvB,CAAuB,yCAAvB,CAAuB,sB,mDAO3B,0BAEE,gDAEE,yGACF,iBACF,iB,gCAHI,sD,mDAIJ,0BAEE,wCAIE,yGAAsC,8FAExC,iBACF,iB,gCANI,oDAAsB,yCAAtB,CAAsB,sBDtE5B,iBA2DC,WAAmBqW,EAAkC3V,EAAsCI,GAAxE,KAAAuV,UAAkC,KAAA3V,eAAsC,KAAAI,cArD3F,KAAAm3B,KAAO,CACNC,SAAU,WACVC,WAAY,aACZC,UAAW,YACXC,SAAU,YAOF,KAAAlf,QAAgB,IAAI1C,KAEpB,KAAA9E,UAAoB,EAM7B,KAAA2mB,MAAgB,KAIN,KAAAC,aAAe,IAAI,EAAA94B,aACnB,KAAA+4B,cAAgB,IAAI,EAAA/4B,aACpB,KAAAg5B,WAAa,IAAI,EAAAh5B,aAE3B,KAAAkW,SAAmB,EAInB,KAAA+iB,KAAe,KAUf,KAAAnjB,UAAuB,KAEvB,KAAAoB,OAAiB,EAEjB,KAAAgiB,QAAkB,EAIlB,KAAA1yB,UAA+B,KAE/B,KAAAgtB,OAAiB,G,OApCjB,sBAAa,mBAAI,C,IAAjB,SAAkBlzB,GACjBwC,KAAKq2B,WAAW74B,I,gCAwCjB,YAAAyC,SAAA,sBACED,KAAK2xB,aAAe3xB,KAAKzB,YAAYmzB,WAAa1xB,KAAKzB,YAAYwE,kBAAkB/C,KAAKgM,KAAKlJ,iBAAkB9C,KAAKgM,KAAK/I,MAC5HjD,KAAKm2B,KAAO,aACZn2B,KAAK6oB,eAAejoB,WAAU,SAAA01B,GAC7B,EAAKC,eAAeD,OAItB,YAAAE,SAAA,SAASzf,GACR/W,KAAKoT,QAAU2D,GAGhB,YAAAsf,WAAA,SAAWpzB,GAAX,WACCjD,KAAK+1B,MAAQ9yB,EACbjD,KAAKwW,cAAgB,KACrBxW,KAAKuW,aAAe,KACpBvW,KAAKyD,YAAc,KACnBzD,KAAKy2B,aAAY,GAEL,MAARxzB,GAA6B,MAAbjD,KAAKgM,OAEX,YAAT/I,GACHjD,KAAKoU,OAAQ,EAEbpU,KAAK8T,QAAQuQ,qBAAqBphB,EAAMjD,KAAKgM,KAAK/I,MAAMiH,MAAK,SAAAib,GAC5D,EAAK5O,aAAe,IAAI,EAAAyB,kBAAkB,EAAKhM,KAAMiM,KAAKC,MAAMD,KAAKE,UAAUgN,IAAYzU,YAC3F,EAAK8F,cAAgB,IAAI,EAAAwB,kBAAkB,EAAKhM,KAAMiM,KAAKC,MAAMD,KAAKE,UAAU,EAAK5B,eAAe7F,eAClGpG,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZvK,KAAK8T,QAAQiP,2BAA2B9f,EAAMjD,KAAKgM,KAAK/I,MAAMiH,MAAK,SAACzG,GACnE,EAAKA,YAAcA,KACjB6G,OAAM,SAACC,GACT,EAAKC,MAAMD,QAIZvK,KAAKoU,OAAQ,EAEbpU,KAAK8T,QAAQyQ,qBAAqBvkB,KAAKgM,KAAK/I,MAAMiH,MAAK,SAAAuoB,GACtD,EAAKlc,aAAe,IAAI,EAAAyB,kBAAkB,EAAKhM,KAAMymB,EAAQtN,UAAUzU,YACvE,EAAK8F,cAAgB,IAAI,EAAAwB,kBAAkB,EAAKhM,KAAMiM,KAAKC,MAAMD,KAAKE,UAAU,EAAK5B,eAAe7F,YAEpG,EAAKjN,YAAcgvB,EAAQhvB,YAC3B,EAAKgzB,aAAY,SAQrB,YAAAC,sBAAA,SAAsBzd,GACrBjZ,KAAKg2B,aAAale,KAAKmB,IAGxB,YAAAsd,eAAA,SAAe/e,GAEd,GAAgB,MAAZA,GAA0C,MAAtBxX,KAAKwW,cAAuB,CAEnD,IAAIwC,EAAShZ,KAAKwW,cAAc9F,WAAqB,SAAEsI,OACjD,EAAOhZ,KAAK4W,QAAQgC,UAE1BI,EAAO3X,SAAQ,SAAA4X,GAEd,IAAMJ,EAAY3E,KAAKgE,MAAMe,EAAIJ,WAC3BC,EAAU5E,KAAKgE,MAAMe,EAAIH,SAE3B,GAAQD,GAAa,GAAQC,IAChCG,EAAIzb,MAAQga,QAMhB,YAAAmf,kBAAA,SAAkBle,GAMjB,IAJA,IAAME,EAAO3Y,KAAK4W,QAAQgC,UAEtBI,EAASP,EAAK/H,WAAqB,SAAEsI,OAEhCxV,EAAI,EAAGA,EAAIwV,EAAO/X,OAAQuC,IAAK,CACvC,IAAMyV,EAAMD,EAAOxV,GAEbqV,EAAY3E,KAAKgE,MAAMe,EAAIJ,WAC3BC,EAAU5E,KAAKgE,MAAMe,EAAIH,SAE/B,GAAIH,GAAQE,GAAaF,GAAQG,EAChC,OAAOG,EAAIzb,MAIb,OAAO,MAGR,YAAA4Y,SAAA,WAEoB,YAAfpW,KAAK+1B,MACR/1B,KAAKq2B,WAAW,MAGhBr2B,KAAKq2B,WAAWr2B,KAAK+1B,QAIvB,YAAA9f,SAAA,sBACCjW,KAAK8T,QAAQmR,mBAAmBjlB,KAAKyD,YAAazD,KAAKwW,cAAexW,KAAKoU,MAAOpU,KAAK42B,UAAW52B,KAAK0wB,QAAQxmB,MAAK,WACnH,EAAK+rB,cAAcne,KAAK,EAAKtB,eAE7B,EAAK6f,WAAW,EAAKN,UACnBzrB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAssB,yBAAA,SAAyB7jB,GACxBhT,KAAKgT,UAAYA,EACjBhT,KAAKm2B,KAAOn2B,KAAK01B,KAAKC,UAGvB,YAAAmB,wBAAA,SAAwBpzB,GACvB1D,KAAK0D,UAAYA,EACjB1D,KAAKm2B,KAAOn2B,KAAK01B,KAAKG,WAGvB,YAAAkB,kBAAA,SAAkBvgB,GAEjBxW,KAAKwW,cAAgBA,EAErBxW,KAAKm2B,KAAOn2B,KAAK01B,KAAKE,WAEtB51B,KAAKg2B,aAAale,KAAK,OAGxB,YAAAkf,kBAAA,SAAkBtzB,GACjB,IAAMyG,EAAQnK,KAAKyD,YAAYiJ,WAAU,SAAAC,GAAK,OAAAA,EAAE1J,OAASS,EAAUT,SACpD,IAAXkH,IACHnK,KAAKyD,YAAY0G,GAASzG,GAG3B1D,KAAKm2B,KAAOn2B,KAAK01B,KAAKE,YAGvB,YAAAqB,iBAAA,WACCj3B,KAAKy2B,aAAaz2B,KAAKo2B,SAGxB,YAAAK,YAAA,SAAYj5B,GACXwC,KAAKo2B,OAAS54B,EACdwC,KAAK0wB,OAAS,KAEd1wB,KAAKk2B,WAAWpe,KAAK9X,KAAKo2B,SAGpB,YAAA5rB,MAAP,SAAaD,GACZvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCArNhDrC,GAAqB,kH,iCAArBA,EAAqB,62DCflC,0BACE,gCA2DA,8BAUA,8BAOA,8BAUF,kB,MAtFQ,qFA2DA,+EAUA,gFAOA,8D,o1CDnER,GAKa,EAAAA,yB,+DAAAA,EAAqB,E,KALjC,EAAAqB,U,MAAU,CACVC,SAAU,gBACVC,YAAa,iCACbC,UAAW,CAAC,uC,4FAUHs5B,UAAW,CAAF,C,KAAjB,EAAAr5B,QAEQyO,KAAM,CAAF,C,KAAZ,EAAAzO,QAEQqZ,QAAS,CAAF,C,KAAf,EAAArZ,QAEQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,QAEY0F,KAAI,E,KAAhB,EAAA1F,QAMQsrB,eAAgB,CAAF,C,KAAtB,EAAAtrB,QAESy4B,aAAY,E,KAArB,EAAAv4B,SACSw4B,cAAa,E,KAAtB,EAAAx4B,SACSy4B,WAAU,E,KAAnB,EAAAz4B,Y,6HEzCF,WAEA,GADA,MACA,OAEA,S,GAEA,OAEA,M,iGCHM,6BAAqE,YAAW,kB,6BAAX,+C,yBAerE,4BACE,+BACE,6BACA,8BAA8B,iBAAO,sCAAkE,gBAAC,iBAC1G,iBACA,+BAA6B,wEAA7B,iBAEF,kB,2CAJ4D,4CAEnD,mDAAqB,kBAArB,CAAqB,2B,yBAa1B,gCAA6D,YAA4B,kB,uBAA/C,6BAAmB,4D,mDAH/D,gCACE,0HACA,wBACA,kCACF,iB,gCAJkD,4CAA6B,4CAGrD,wD,mDAE1B,8BAA8D,+BAAmB,6GAAnB,iBAAyF,iB,gCAAtE,4D,mDACjF,8BAAgC,+BAAmB,6GAAnB,iBAAyF,iB,gCAAtE,4D,mDAwD/C,gCACE,iGACA,6BACF,iB,mDAHwC,mEDtFpD,iBAsBC,WAAoBuW,EAAuCkjB,EAA2B54B,EAA0CJ,EAA2CiQ,GAAvJ,KAAA6F,WAAuC,KAAAkjB,OAA2B,KAAA54B,kBAA0C,KAAAJ,mBAA2C,KAAAiQ,aAd3K,KAAAvE,cAAqB,GACrB,KAAAmF,QAAkB,KAElB,KAAAM,MAAgB,EAEhB,KAAAD,UAAoB,E,OAWpB,YAAAnP,SAAA,sBACCD,KAAKwO,uBAAyB,IAAI,EAAAsD,QAElC9R,KAAKgD,cAAgB,CACpB,KAAQ,GACR,MAAShD,KAAKgU,SAASY,SACvB,YAAe5U,KAAKgU,SAASY,SAC7B,mBAAsB,GACtB,iBAAoB,IAGrB5U,KAAK1B,gBAAgBunB,mBAAmB3b,MAAK,SAAAitB,GAG5C,GAAK,EAAK/nB,SAUT,EAAKxF,cAAgButB,MAVF,CACnB,EAAKvtB,cAAgB,GAErB,IAAK,IAAIpG,EAAI,EAAGA,EAAI2zB,EAAKl2B,SAAUuC,EAC9B,EAAK0zB,KAAKr0B,iBAAiBs0B,EAAK3zB,GAAGP,OACtC,EAAK2G,cAAc5F,KAAKmzB,EAAK3zB,IAQ3B,EAAK6L,MAAsC,IAA9B,EAAKzF,cAAc3I,QAI5B,EAAKoO,MAAQ,EAAKD,YAC1B,EAAKgoB,kBAAoB,EAAKC,6BAA6B,EAAKr0B,cAAcF,oBAJ9E,EAAKE,cAAcF,iBAAmB,EAAK8G,cAAc,GAAG3G,KAC5D,EAAKm0B,kBAAoB,EAAKxtB,cAAc,GAAG/B,MAAMuE,mBAMpD9B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA8sB,6BAAA,SAA6BxsB,GAC5B,IAAK,IAAIrH,EAAI,EAAGA,EAAIxD,KAAK4J,cAAc3I,SAAUuC,EAChD,GAAIxD,KAAK4J,cAAcpG,GAAGP,OAAS4H,EAClC,OAAO7K,KAAK4J,cAAcpG,GAAGqE,MAAMuE,eAKrC,OADAkH,QAAQC,IAAI,+BAAiC1I,EAAU,KAChDA,GAGR,YAAAiI,eAAA,sBACC9S,KAAK+O,QAAU,KAEX/O,KAAKoP,SACRpP,KAAKmO,WAAWgI,OAIbnW,KAAKqP,MACRiE,QAAQC,IAAIvT,KAAKgD,eAEjBhD,KAAK9B,iBAAiB+gB,oBAAoBhH,KAAKE,UAAUnY,KAAKgD,gBAAgBkH,MAAK,SAAArG,GAClF,EAAK2K,uBAAuBnB,KAAKxJ,GACjC,EAAKsK,WAAWgI,UACd7L,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIZvK,KAAK9B,iBAAiB6gB,oBAAoB9G,KAAKE,UAAUnY,KAAKgD,gBAAgBkH,MAAK,SAAArG,GAClF,EAAK2K,uBAAuBnB,KAAKxJ,GACjC,EAAKsK,WAAWgI,UACd7L,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKd,YAAAC,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAnGrC1S,GAAiC,iM,iCAAjCA,EAAiC,8pFChB9C,2BAEE,4BACE,+BAEE,8BAEE,4BACE,yBACE,4BACF,iBACF,iBAEF,4BACE,8BACE,6BACF,iBACA,+BAAO,2EAAP,iBAEF,iBACA,gCASA,yCAAgB,gFAAwH,iBAExI,6BACE,gCACE,8BACF,iBACA,mCAKA,iCACA,iCACF,iBAEA,6BACE,6BAAO,8BAAwD,iBAC/D,mCAAU,+EAAgG,iBAC5G,iBAEA,6BACE,6BAAO,8BAA+D,iBACtE,mCAAU,sFAA8G,iBAC1H,iBACA,6BACE,6BAAO,8BAA0D,iBACjE,mCAAU,iFAAgH,iBAC5H,iBAEA,6BACE,6BAAO,8BAAiE,iBACxE,mCAAU,wFAA8H,iBAC1I,iBAEA,6BACE,6BAAO,8BAA8D,iBACrE,mCAAU,qFAAwH,iBACpI,iBAEA,qBAEA,6BACE,0BACE,8BACF,iBACF,iBAEA,6BACE,6BAAO,8BAAuD,iBAC9D,gCAAO,8EAAP,iBACF,iBAEA,6BACE,6BAAO,8BAA2D,iBAClE,gCAAO,kFAAP,iBACF,iBAEA,6BACE,6BAAO,8BAAqD,iBAC5D,gCAAO,4EAAP,iBACF,iBAEA,8BACE,8BACE,8BACE,iCAA8C,wCAAS,EAAAsW,WAAA,UACrD,8BACF,iBACA,mCAIF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,MAtGY,oDAYG,4DAAgC,+BAGO,0EAShC,iEAAqC,kBAArC,CAAqC,uBAM1C,sEAKF,uEACA,2CAKG,gEAAoC,uBAKpC,uEAA2C,uBAI3C,kEAAsC,uBAKtC,yEAA6C,uBAK7C,sEAA0C,uBAa7C,+DAAmC,uBAKnC,mEAAuC,uBAKvC,6DAAiC,uBAS3B,kD,2UDtFrB,GAKa,EAAAtW,qC,+DAAAA,EAAiC,E,KAL7C,EAAAsF,U,MAAU,CACVC,SAAU,8BACVC,YAAa,+CACbC,UAAW,Q,+QEdZ,WAEA,GADA,MACA,OAEA,S,GAGA,OACA,M,0GCLI,6BAAqE,YAAW,kB,6BAAX,+C,qBAIjE,6B,qBACA,6B,yBAoBA,4BACE,4BACE,6BACA,8BAA6B,iBAAO,sCAAkE,gBAAC,iBACzG,iBACA,+BAAO,wEAAP,iBAEF,kB,uBAJ2D,4CAElD,+CAA+B,yBAA/B,CAA+B,wC,mDAY5C,4BACE,6BACE,4BACE,+BACE,6BACF,iBACA,6BACE,uCAAgC,kHAAuF,iBACzH,iBACF,iBACF,iBACF,iB,gCAJuB,0CAAgB,mCAAhB,CAAgB,kD,2CDxC3C,aAmBC,WAAoB0W,EAAuCkjB,EAA2B54B,EAAyC6P,GAA3G,KAAA6F,WAAuC,KAAAkjB,OAA2B,KAAA54B,kBAAyC,KAAA6P,aAX/H,KAAAiH,aAA6B,KAC7B,KAAArG,QAAkB,K,OAYlB,YAAA9O,SAAA,WACCD,KAAKmQ,mBAAqB,IAAI,EAAA2B,QAE9B9R,KAAK8D,cAAgB,CACpB,KAAQ,GACR,MAAS9D,KAAKgU,SAASY,SACvB,YAAe5U,KAAKgU,SAASY,SAC7B,aAAgB,aAChB,QAAU,EACV,oBAAsB,EACtB,iBAAoB,GACpB,WAAc,KAIhB,YAAAxJ,KAAA,SAAKgK,EAA4ByZ,EAA0B3e,EAA+B/M,GAEzFnD,KAAK8D,cAAcX,WAAaA,IAA0B,EAEtD+M,IACHlQ,KAAK8D,cAAcT,cAAgB6M,EAAejN,KAClDjD,KAAK8D,cAAcmmB,aAAe/Z,EAAe+Z,aACjDjqB,KAAK8D,cAAcwzB,UAAYpnB,EAAeonB,WAI/Ct3B,KAAK6uB,QAAUA,EAAQ/vB,QAAO,SAAA6G,GAAU,OAAAA,EAAOxC,cAG/CnD,KAAKoV,aAAeA,EACpBpV,KAAK8D,cAAchB,iBAAmB9C,KAAKoV,aAAanS,KACxDjD,KAAKo3B,kBAAoBp3B,KAAKoV,aAAavN,MAAMuE,gBAGlD,YAAA0G,eAAA,sBACC9S,KAAK+O,QAAU,KAEf/O,KAAK1B,gBAAgB2R,oBAAoBgI,KAAKE,UAAUnY,KAAK8D,gBAAgBoG,MAAK,SAAArG,GACjF,EAAKsM,mBAAmB9C,KAAKxJ,GAC7B,EAAKsK,WAAWgI,UACd7L,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAgtB,aAAA,WACCv3B,KAAK8D,cAAc0zB,QAAUx3B,KAAK8D,cAAc0zB,QAGjD,YAAAC,yBAAA,WACCz3B,KAAK8D,cAAcwuB,oBAAsBtyB,KAAK8D,cAAcwuB,oBAG7D,YAAAoF,iBAAA,WACC13B,KAAK8D,cAAcX,YAAcnD,KAAK8D,cAAcX,YAGrD,YAAAqH,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA3ErCxS,GAA8B,yJ,iCAA9BA,EAA8B,wjE,2BCjB3C,+BAAqB,sFAA0B,EAAA+a,oBAE7C,4BACE,8BAEA,4BACE,yBACE,mCACA,mCACF,iBACF,iBAEA,4BACE,4BACE,6BACE,2BACE,gCACE,8BACF,iBACA,gCAAO,2EAAP,iBAEF,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,gCAQF,iBACF,iBAEA,6BACE,6BACE,yCAAgB,gFAAkG,iBACpH,iBACF,iBAEA,gCAaA,6BACE,8BACE,6BAEE,gCACE,8BACF,iBACA,8BACE,wCAA+D,8EAAwF,iBACzJ,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,gCACE,8BACF,iBACA,iCAAgD,mFAC9C,yBAmBC,iCACC,8BACF,iBACA,iCACE,8BACF,iBACA,iCACE,8BACF,iBACF,iBACF,iBACF,iBACF,iBAeA,6BACE,8BACE,6BACE,8BACE,8BAAK,wCAAS,EAAA2kB,8BAEZ,uBACF,iBAEA,gCACE,8BACF,iBACF,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,gCACE,8BACF,iBACA,+BACE,gCAAuC,0EAAvC,iBACF,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,8BACE,iCAA8C,wCAAS,EAAAtpB,WAAA,UACrD,8BACF,iBACA,iCACE,8BACF,iBACF,iBACF,iBACF,iBAEF,iBACF,iB,+BAtKU,oDAIS,+DACA,gEAWA,4DASqC,0EAahC,iEAAqC,mBAIvC,mEAqBK,2EAA+C,kCAA/C,CAA+C,mDAYhB,oEAAwC,mFAmD5C,mGAoBH,4DAYnB,oD,6WDrJhC,GAKa,EAAApW,kC,+DAAAA,EAA8B,E,KAL1C,EAAAoF,U,MAAU,CACVC,SAAU,0BACVC,YAAa,2CACbC,UAAW,Q,wPEfZ,WAGA,GAFA,MAEA,OAGA,SACA,S,GAEA,O,wJCJE,4CAAiG,wHAAyH,iB,gCAA/I,oCAAqB,gCAArB,CAAqB,qC,mDAEhG,gDAA0G,wHAAsD,iB,gCAAtF,+C,mDAE1E,uDAAgH,wHAAsD,iB,gCAAtF,+C,mDAEhF,qDAA+I,wHAAsD,iB,gCAAzH,8CAA+B,qC,wBAE3G,uC,6BAAuE,8CAA+B,qC,wBAEtG,0C,6BAAwE,8CAA+B,mCAA/B,CAA+B,uCDHzG,iBAaC,WAAmB6Q,EAA+BwpB,EAA+BC,GAAjF,WAAmB,KAAAzpB,aAA+B,KAAAwpB,oBAPlD,KAAA5oB,QAAkB,KAClB,KAAAmD,WAA4C,CAAE,MAAS,EAAA2lB,yBAAyBpnB,oBAAqB,UAAa,GAAI,WAAc,IAIpI,KAAArB,UAAoB,EAGnBpP,KAAK83B,uBAAyBF,EAA+B7lB,gBAAgBnR,WAAU,SAAAsR,GACtF,EAAKA,WAAaA,K,OAIpB,YAAAjS,SAAA,WACCD,KAAK2Q,yBAA2B,IAAI,EAAAmB,SAGrC,YAAAe,YAAA,WACC7S,KAAK83B,uBAAuBC,eAG7B,YAAAC,mBAAA,SAAmB5lB,GAClBpS,KAAKkS,WAAaE,GAGnB,YAAA6lB,sBAAA,SAAsBp0B,GAGrB7D,KAAK2Q,yBAAyBtD,KAAKxJ,IAGpC,YAAAq0B,OAAA,aAIA,YAAAC,MAAA,WACCn4B,KAAKmO,WAAWgI,QAGjB,YAAA3L,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAzCrCvR,GAAiC,4H,iCAAjCA,EAAiC,unBChB9C,2BAEE,sCAEA,8CAEA,kDAEA,yDAEA,uDAEA,8CAEA,iDAEF,kB,MAZwB,kFAEI,6EAEO,4EAEF,0EAET,8EAEG,8E,4UDH3B,GAKa,EAAAA,qC,+DAAAA,EAAiC,E,KAL7C,EAAAmE,U,MAAU,CACVC,SAAU,6BACVC,YAAa,8CACbC,UAAW,CAAC,yC,mOEfb,WAMA,GALA,MACA,MAIA,QAIA,GAFA,MAEA,Q,GACA,O,0GCTI,4BAAqE,YAAW,kB,8BAAX,+C,yBAyC7D,4BACI,6BACI,6BACJ,iBACA,6BACI,8BACI,YACJ,iBACJ,iBACJ,kB,8BAHY,4E,yBAsDQ,4BAA8E,YAA6B,kB,uBAA7B,4D,mDAgBtF,gCAAwF,0FACpF,6BACJ,iB,iCAFgE,uC,mDAnHpF,+BAAkE,wFAC9D,4BACI,yBACI,4BACA,YACJ,iBACJ,iBACA,+BACI,4BACI,6BACI,4BAAO,8BAAoD,iBAC/D,iBACA,8BACI,+BAAoB,gCAAmB,mHAAnB,iBACpB,iBACJ,iBACJ,iBAEA,0CAAuC,kHAAoE,iBAC3G,yCAAsC,wHAAgF,iBAEtH,6BACI,8BACI,6BAAO,8BAAiD,iBAC5D,iBACA,8BACI,wCAAgC,mHAAuF,iBAC3H,iBACJ,iBAEA,6BACI,8BACI,6BAAO,8BAA+D,iBAC1E,iBACA,8BACI,wCAAuD,sHAA4F,iBACvJ,iBACJ,iBAEA,gCAYA,6BACI,8BACI,6BAAO,8BAA4D,iBACvE,iBACA,8BACI,iCAA4B,2HACxB,yBACC,iCAA2B,8BAAsD,iBAClF,iCAA0B,8BAAqD,iBAC/E,iCAA6B,8BAAwD,iBAOzF,iBACJ,iBACJ,iBAGA,6BACI,8BACI,6BAAO,8BAA8E,iBACzF,iBACA,8BAEI,wCAAoC,+HAA6H,iBACrK,iBACJ,iBAEA,6BACE,8BACE,6BAAO,8BAAwD,iBACjE,iBACA,8BACE,+BAAoB,gCAAmB,8GAAnB,iBAAyF,iBAC/G,iBACF,iBAEA,6BACI,8BACI,6BAAO,8BAA0F,iBACrG,iBACA,8BACI,8BACI,8BACI,6BACI,+BACJ,iBAEA,iCAA8G,oGAC1G,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEA,6BACQ,8BACI,iCAA8C,yFAC1C,8BACJ,iBACA,mCAGJ,iBACJ,iBACR,iBACJ,iB,iCArHY,wFAS2C,gEAK9B,mDAAqB,mCACtB,mDAAqB,yCAOd,0CAAgB,mCAAhB,CAAgB,iDAShB,qEAAuC,sCAAvC,CAAuC,mDAIrC,+FAiBW,wEAsBb,mDAAoB,+CAApB,CAAoB,2EASA,2DAYF,sEAGjB,kFAaH,iD,yBAtHjC,4BACI,8BAEA,iCA0HJ,kB,6BA5HU,oDAEgB,yDDS1B,iBA4BI,WAAqBY,EAA2CiQ,EAA+BwpB,EAAuCx5B,EAC1Hi6B,EAA8DR,EAC9DS,EAAkD/5B,GAFzC,KAAAJ,mBAA2C,KAAAiQ,aAA+B,KAAAwpB,oBAAuC,KAAAx5B,eAC1H,KAAAi6B,4BAA8D,KAAAR,iCAC9D,KAAAS,sBAAkD,KAAA/5B,kBAvBrD,KAAA8Q,UAAoB,EAEnB,KAAAkpB,oBAAoD,IAAI,EAAAp7B,aAYlE,KAAA6R,QAAkB,KAClB,KAAAmD,WAA4C,CAAC,MAAQ,EAAA2lB,yBAAyBpnB,oBAAqB,UAAY,GAAI,WAAa,IAEhI,KAAA8nB,gBAA8B,CAAC,MAAS,CACpC,CAAC,MAAQv4B,KAAKq4B,oBAAoBv3B,OAAO,6CAA8C,QAAS,EAAM,SAAU,K,OAXpH,sBACI,iBAAE,C,IADN,SACOgD,GACAA,IACD9D,KAAKw4B,kBAAoBvgB,KAAKC,MAAMD,KAAKE,UAAUrU,M,gCAiBzD,YAAA7D,SAAA,WAEID,KAAKo4B,0BAA0BK,cAAcz4B,KAAKu4B,iBAClDv4B,KAAK43B,+BAA+BzlB,cAAcnS,KAAKkS,YAEvDlS,KAAK04B,0BAGT,YAAAA,uBAAA,sBAEE14B,KAAK1B,gBAAgBunB,mBAAmB3b,MAAK,SAAAitB,GAE3C,IAAK,IAAI3zB,EAAI,EAAGA,EAAI2zB,EAAKl2B,SAAUuC,EAE7B2zB,EAAK3zB,GAAGP,OAAS,EAAKu1B,kBAAkB11B,mBAE1C,EAAKs0B,kBAAoBD,EAAK3zB,GAAGqE,MAAMuE,mBAI1C9B,OAAM,SAACC,GACN,EAAKC,MAAMD,OAIjB,YAAAouB,iBAAA,WACI34B,KAAK43B,+BAA+BzlB,cAAc,CAAC,MAAQ,EAAA0lB,yBAAyBc,iBAAkB,UAAY,GAAI,WAAa,MAGvI,YAAAX,mBAAA,SAAmB5lB,GACfpS,KAAKkS,WAAaE,GAGtB,YAAA8lB,OAAA,sBACIl4B,KAAK1B,gBAAgB2jB,oBAAqBjiB,KAAKw4B,mBAAoBtuB,MAAM,SAAApG,GAIrE,EAAKw0B,oBAAoBxgB,KAAKhU,GAE9B,EAAKq0B,WAEL7tB,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAQpB,YAAA4tB,MAAA,WAEIn4B,KAAKmO,WAAWgI,QAIpB,YAAA/C,QAAA,WAkBI,OAAO,GAGX,YAAA5I,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA5G/CtR,GAA2B,6U,iCAA3BA,EAA2B,0nECjBxC,8B,KAAyB,oE,ipBDYzB,GAKa,EAAAA,+B,+DAAAA,EAA2B,E,KALvC,EAAAkE,U,MAAW,CACRC,SAAU,sBACVC,YAAa,uCACbC,UAAW,CAAC,kC,iPAIH8R,SAAU,CAAF,C,KAAhB,EAAA7R,QACQuG,cAAe,CAAF,C,KAArB,EAAAvG,QACS+6B,oBAAqB,CAAF,C,KAA5B,EAAA76B,SAMGm7B,GAAE,E,KADL,EAAAr7B,M,MAAM,yB,0HE3BX,WAGA,GAFA,MACA,MACA,OAGA,SACA,SAGA,GAFA,MAEA,Q,GACA,O,+FCVI,4BAAqE,YAAW,kB,6BAAX,+C,mDAiCjC,2BAAoG,uI,uBACvD,iB,KAAzC,6D,mDACJ,2BAAuG,6I,uBACxD,iB,KAA3C,+D,yBANZ,yBACI,yBAAI,YAA6B,iBACjC,4BACI,6BAEA,6BAEJ,iBACJ,kB,uBAPQ,2DAEI,qEAEA,sE,mDAjCxC,+BAA8D,wFAC1D,4BACI,yBACI,4BAAyE,YAAsC,iBACvH,iBACA,+BAEI,0BACI,4BACI,4BACI,6BACJ,iBACJ,iBACA,8BAEI,8BACI,gCACI,6BACI,0BACI,0BACI,8BACJ,iBACA,6BACI,8BACJ,iBACJ,iBACJ,iBACA,6BACI,+BASJ,iBACJ,iBACJ,iBAkBJ,iBACJ,iBACA,8BACI,wBAEA,8BACI,4BAAgG,uGAC5F,8BACJ,iBACJ,iBACJ,iBAEA,8BACI,8BACI,8BACI,iCAA8C,wFAC1C,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,gCA5EqF,iFAyBpC,oEDlBrD,iBAyBC,WAAmB4Q,EAA+BwpB,EAAuCx5B,EAAsCE,EACtH+5B,EAA8DR,EAAwEt5B,GAD5H,KAAA6P,aAA+B,KAAAwpB,oBAAuC,KAAAx5B,eAAsC,KAAAE,kBACtH,KAAA+5B,4BAA8D,KAAAR,iCAAwE,KAAAt5B,kBAlBtI,KAAA0U,UAAuB,KACtB,KAAAslB,oBAAmD,IAAI,EAAAp7B,aAEjE,KAAA6R,QAAkB,KAClB,KAAAwpB,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASv4B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,KAG/G,KAAAoR,WAA4C,CAAE,MAAS,EAAA2lB,yBAAyBc,iBAAkB,UAAa34B,KAAKgT,UAAW,WAAc,I,OAW7I,YAAA/S,SAAA,WACCD,KAAK64B,kBAAoB,IAAI,EAAA/mB,QAC7B9R,KAAKo4B,0BAA0BK,cAAcz4B,KAAKu4B,kBAGnD,YAAA1lB,YAAA,WACC7S,KAAK64B,kBAAkBd,eAGxB,YAAAe,qBAAA,WACC94B,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBkB,gBAAiB,UAAa,GAAI,WAAc,MAGvI,YAAAC,cAAA,SAAcn3B,EAAiB2X,GAC9BxZ,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBmB,cAAe,UAAan3B,EAAM,WAAc,MAGvI,YAAAo3B,oBAAA,SAAoBp3B,EAAiB2X,GAArC,WAECxZ,KAAK23B,kBAAoB33B,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CACtEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAK23B,kBAAkBppB,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,+BAAiC,IAAMe,EAAKgG,MAAMuE,eAAiB,IACxIpM,KAAK23B,kBAAkBppB,QAAQ1K,KAAO,CAAE,cAAiBhC,EAAM,cAAiB7B,KAAK8D,eACrF9D,KAAK23B,kBAAkBppB,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,uBACxEd,KAAK23B,kBAAkBppB,QAAQvC,KAAO,EAAAqE,WAAWC,OAEzBtQ,KAAK23B,kBAAkBppB,QAASU,UAAUrO,WAAU,SAAAiD,GAC3E,EAAKwe,oBAAoBxe,EAAKC,cAAcb,KAAMY,EAAKq1B,mBAIzD,YAAA7W,oBAAA,SAAoBnV,EAA2BrL,GAA/C,WAEC7B,KAAK1B,gBAAgB+jB,oBAAoBnV,EAAmBrL,EAAKoB,MAAMiH,MAAK,SAAArG,GAC3E,EAAKg1B,kBAAkBxrB,KAAKxJ,GAExBA,GACH,EAAKC,cAAc4M,WAAW/I,OAAO,EAAK7D,cAAc4M,WAAWlE,QAAQ3K,GAAO,GAGnF,EAAKy2B,oBAAoBxgB,KAAK,EAAKhU,kBAEjCwG,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA4tB,MAAA,WACCn4B,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBpnB,oBAAqB,UAAazQ,KAAKgT,UAAW,WAAc,MAGvJ,YAAAxI,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA/ErCvS,GAA8B,qS,iCAA9BA,EAA8B,40CClB3C,4BACI,8BAEA,gCAiFJ,kB,MAnFU,oDAEgB,sD,klBDU1B,GAKa,EAAAA,kC,+DAAAA,EAA8B,E,KAL1C,EAAAmF,U,MAAU,CACVC,SAAU,0BACVC,YAAa,2CACbC,UAAW,CAAC,sC,uNAIHwG,cAAe,CAAF,C,KAArB,EAAAvG,QACQyV,UAAW,CAAF,C,KAAjB,EAAAzV,QACS+6B,oBAAqB,CAAF,C,KAA5B,EAAA76B,Y,gIEtBF,WAGA,GAFA,MAEA,QAKA,GAFA,MAEA,QAEA,GADA,OACA,Q,yFCHgB,6BAAqE,YAAW,kB,6BAAX,+C,oCDMrF,aAwBC,WACQ0Q,EACCiqB,EACAR,EACAv5B,EACAC,GAJD,KAAA6P,aACC,KAAAiqB,4BACA,KAAAR,iCACA,KAAAv5B,kBACA,KAAAC,kBArBC,KAAAg6B,oBAAmD,IAAI,EAAAp7B,aAEjE,KAAA6R,QAAkB,KAClB,KAAAoqB,aAA0B,KAC1B,KAAAZ,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASv4B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,yCAA0C,QAAU,EAAM,SAAW,KAG9G,KAAAoR,WAA4C,CAAE,MAAS,EAAA2lB,yBAAyBkB,gBAAiB,UAAa,GAAI,WAAc,I,OAchI,YAAA94B,SAAA,WACCD,KAAKo5B,aAAa,aAClBp5B,KAAKo4B,0BAA0BK,cAAcz4B,KAAKu4B,kBAGnD,YAAA5tB,gBAAA,WAEK3K,KAAKq5B,yBACRr5B,KAAKq5B,wBAAwBnmB,WAI/B,YAAAJ,eAAA,sBAEC9S,KAAK1B,gBAAgB4jB,iBAAiBliB,KAAK8D,cAAcb,KAAMjD,KAAKm5B,cAAcjvB,MAAK,SAAArG,GACtF,EAAKC,cAAc4M,WAAW1M,KAAKH,GAEnC,EAAK+zB,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,KAEvI,EAAKL,oBAAoBxgB,KAAK,EAAKhU,kBACjCwG,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA6uB,aAAA,SAAaptB,GAEXhM,KAAKm5B,aADO,SAATntB,EACiB,IAAI,EAAAstB,cAAc,GAAIttB,EAAMhM,KAAK3B,gBAAgBuW,SAAU5U,KAAK3B,gBAAgBuW,UAAU,GAAO,GAAO,GAAO,GAElH,UAAT5I,EACY,IAAI,EAAAutB,iBAAiB,GAAIvtB,EAAMhM,KAAK3B,gBAAgBuW,SAAU5U,KAAK3B,gBAAgBuW,UAAU,GAAO,GAAO,GAAO,GAGlH,IAAI,EAAA6C,UAAU,GAAIzL,EAAMhM,KAAK3B,gBAAgBuW,SAAU5U,KAAK3B,gBAAgBuW,UAAU,GAAO,GAAO,GAAO,IAIjI,YAAA4kB,YAAA,WAEC,IAAIC,GAAuB,EAM3B,OAJIz5B,KAAKq5B,0BACRI,EAAcz5B,KAAKq5B,wBAAwBjmB,aAGxCqmB,GAOL,YAAAtI,OAAA,WACCnxB,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,MAGxI,YAAAnuB,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCArFrCtS,GAAoC,6N,iCAApCA,EAAoC,uE,GAAA,K,cAgBrC,EAAAa,wBAAuB,G,skCClCnC,4BAII,+BAAwC,2CAAY,EAAAga,oBAChD,4BACI,4BACI,8BAEA,4BACI,yBACI,4BACJ,iBACJ,iBAEA,4BACI,6BACI,6BACI,gCAAmG,wCAAS,EAAAsmB,aAAa,gBACrH,8BACJ,iBACA,gCAAiG,wCAAS,EAAAA,aAAa,cACnH,8BACJ,iBACA,gCAA+F,wCAAS,EAAAA,aAAa,YACjH,8BACJ,iBACA,gCAA8F,wCAAS,EAAAA,aAAa,WAChH,8BACJ,iBACA,gCAAiG,wCAAS,EAAAA,aAAa,cACnH,8BACJ,iBACA,gCAA8F,wCAAS,EAAAA,aAAa,WAChH,8BACJ,iBACJ,iBACJ,iBACJ,iBAEA,gCAEI,0CAAoI,uEAA6B,iBAEjK,6BACI,8BAII,8BACI,iCAA8C,wCAAS,EAAAjI,YACnD,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAzDsB,oDAWiD,iGAGA,+FAGA,6FAGA,4FAGA,+FAGA,4FASlC,mDAA0B,wBAA1B,CAA0B,0CAA1B,CAA0B,4BAWe,2D,uqCDxC9E,GAKa,EAAAl5B,wC,+DAAAA,EAAoC,E,KALhD,EAAAkF,U,MAAU,CACVC,SAAU,iCACVC,YAAa,kDACbC,UAAW,CAAC,6C,2KAIHwG,cAAe,CAAF,C,KAArB,EAAAvG,QACS+6B,oBAAqB,CAAF,C,KAA5B,EAAA76B,SAamC47B,wBAAyB,CAAF,C,KAA1D,EAAA1nB,U,MAAU,EAAA7Y,8B,2HElCZ,WACA,Q,OAwBA,iBASE,aACEkH,KAAK05B,UA7BA,SAACC,GACN,GAAGA,EAAEn8B,MAGD,OAFwC,IAA1Bm8B,EAAEn8B,MAAMgP,QAAQ,KAGnB,KAEA,CACHotB,uBAAwB,CACnB7iB,OAAO,K,OAuB1B,YAAA8iB,SAAA,SAASF,GACP,OAAO35B,KAAK05B,UAAUC,I,iCARbhhC,I,iCAAAA,EAA+B,yFAJ/B,CACT,CAAEmhC,QAAS,EAAAC,cAAeC,YAAarhC,EAAiCshC,OAAO,Q,EAHnF,GAMa,EAAAthC,mC,+DAAAA,EAA+B,E,KAN3C,EAAAuhC,U,MAAU,CACT98B,SAAU,oCACVjB,UAAW,CACT,CAAE29B,QAAS,EAAAC,cAAeC,YAAarhC,EAAiCshC,OAAO,S,2JC5BnF,WAIA,GAHA,MAGA,QAEA,SAOA,GAJA,MAEA,OAEA,Q,kGCRgB,6BAAqE,YAAW,kB,6BAAX,+C,sBAOjE,4BAA6D,6BAAwE,iBAAE,6BAAgD,kB,sBACvL,4BAA2D,6BAAwE,iBAAE,6BAAmD,kB,sBACxL,4BAAyD,6BAAwE,iBAAE,6BAAiD,kB,sBACpL,4BAA2D,6BAAwE,iBAAE,6BAAmD,kB,sBACxL,4BAAwD,6BAAwE,iBAAE,6BAAgD,kB,sBAClL,4BAAwD,6BAAwE,iBAAE,6BAAgD,kB,mDAUlL,4CAAuE,uGAA0D,iB,gCAA1D,sCAAyB,kCDVpH,iBAuBC,WAAmB9rB,EACViqB,EACAR,EACAv5B,EACAC,GAJU,KAAA6P,aACV,KAAAiqB,4BACA,KAAAR,iCACA,KAAAv5B,kBACA,KAAAC,kBAnBA,KAAA0U,UAAuB,KACtB,KAAAslB,oBAAmD,IAAI,EAAAp7B,aAEjE,KAAA6R,QAAkB,KAClB,KAAAmD,WAA4C,CAAE,MAAS,EAAA2lB,yBAAyBmB,cAAe,UAAah5B,KAAKgT,UAAW,WAAc,IAC1I,KAAAulB,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASv4B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,uCAAwC,QAAU,EAAM,SAAW,K,OAa5G,YAAAb,SAAA,WACCD,KAAKo4B,0BAA0BK,cAAcz4B,KAAKu4B,kBAGnD,YAAA5tB,gBAAA,aAIA,YAAAkI,YAAA,aAGA,YAAAC,eAAA,sBAEC9S,KAAK1B,gBAAgB8jB,oBAAoBpiB,KAAK8D,cAAcb,KAAMjD,KAAKgT,WAAW9I,MAAK,SAAArG,GAEtF,IAAK,IAAIL,EAAI,EAAGA,EAAI,EAAKM,cAAc4M,WAAWzP,OAAQuC,IAAK,CAC9D,IAAI3B,EAAO,EAAKiC,cAAc4M,WAAWlN,GACzC,GAAI3B,EAAKoB,OAASY,EAAKZ,KAAM,CAC5Bk3B,OAAOC,OAAOv4B,EAAMgC,GACpB,OAIF,EAAK+zB,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,KAEvI,EAAKL,oBAAoBxgB,KAAK,EAAKhU,kBACjCwG,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAivB,YAAA,WASC,OAAO,GAGR,YAAArI,OAAA,WACCnxB,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,MAGxI,YAAA0B,KAAA,WACCr6B,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBc,iBAAkB,UAAa,GAAI,WAAc,MAGxI,YAAAnuB,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA7ErC3R,GAAkC,6N,iCAAlCA,EAAkC,qE,GAAA,K,cAgBnC,EAAAE,wBAAuB,G,isCCtCnC,4BAEI,+BAAwC,sFAA0B,EAAAga,oBAC9D,4BACI,4BACI,8BAEA,4BACI,yBACI,4BAAqE,YACzE,iBAEA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACJ,iBAIA,gCAEI,yCAAmK,oEAA0B,iBAG7L,8CAEA,8BACI,8BAII,8BACI,iCAA8C,wCAAS,EAAAqe,YACnD,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAGJ,iB,MA7CsB,oDAIuE,+EAGlD,mEACA,iEACA,+DACA,iEACA,8DACA,8DAON,mDAAyB,+CAAzB,CAAyB,uCAAzB,CAAyB,yBAGrB,+EAWqC,2D,46CDrB9E,GAKa,EAAAv4B,sC,+DAAAA,EAAkC,E,KAL9C,EAAAuE,U,MAAU,CACVC,SAAU,+BACVC,YAAa,gDACbC,UAAW,CAAC,2C,2KAIHwG,cAAe,CAAF,C,KAArB,EAAAvG,QACQyV,UAAW,CAAF,C,KAAjB,EAAAzV,QACS+6B,oBAAqB,CAAF,C,KAA5B,EAAA76B,SAYmC47B,wBAAyB,CAAF,C,KAA1D,EAAA1nB,U,MAAU,EAAA7Y,8B,qHEtCZ,WACA,OASA,GAFA,MAEA,Q,GAEA,O,+DCAwB,4BAA6E,YAA6B,kB,uBAA7B,4DDErG,iBA0CI,WAAoBqV,EAAgCmE,EAAgCslB,GAAhE,KAAAzpB,aAAgC,KAAAmE,MAAgC,KAAAslB,iCAN3E,KAAA5kB,UAA2B,KAC1B,KAAAN,gBAAkB,IAAI,EAAAxV,aAChC,KAAA6R,QAAkB,KAClB,KAAAqD,MAAgB,OAChB,KAAAF,WAA4C,CAAC,MAAQ,EAAA2lB,yBAAyByC,iBAAkB,UAAYt6B,KAAKgT,UAAW,WAAa,I,OAKzI,YAAA/S,SAAA,aAIA,YAAA0K,gBAAA,WACI3K,KAAKoS,MAAQ,OACbpS,KAAKsS,IAAIK,iBAGb,YAAAE,YAAA,aAIA,YAAAC,eAAA,aAIA,YAAAI,QAAA,WACIlT,KAAKoS,MAAQ,QAGjB,YAAAe,gBAAA,SAAgBpO,GACZ/E,KAAKoS,MAAQ,QAyBjB,YAAAmoB,sBAAA,WACIv6B,KAAK43B,+BAA+BzlB,cAAc,CAAC,MAAQ,EAAA0lB,yBAAyByC,iBAAkB,UAAYt6B,KAAKgT,UAAW,WAAc,M,iCA5D3Ina,GAAyB,mI,iCAAzBA,EAAyB,sjBC/CtC,4BAAgD,sDAAsB,EAAAsa,gBAAA,MAElE,0BACI,4BACI,4BACI,4BACJ,iBACJ,iBACA,4BACI,4BACI,4BACI,2BACI,6BACJ,iBAEA,gCAAyD,wCAAS,EAAAonB,2BAC9D,6BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAvBwB,sCAYqB,uE,2nBDM7B,CACR,EAAA5mB,QAAQ,eAAgB,CACpB,EAAAvB,MAAM,aACF,EAAAzP,MAAM,CAAE,QAAW,KAErB,EAAAyP,MAAM,OACJ,EAAAzP,MAAM,CAAE,QAAW,KAErB,EAAAiR,WAAW,eAAgB,EAAAV,QAAQ,UACnC,EAAAU,WAAW,eAAgB,EAAAV,QAAQ,YAEzC,EAAAS,QAAQ,YACJ,CACA,EAAAC,WACI,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,QAAS,EAAAvQ,MAAM,CAAE,QAAW,OAGxC,EAAAiR,WACI,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,MAAO,EAAAvQ,MAAM,CAAC,QAAW,a,EA1BjD,GAiCa,EAAA9J,6B,+DAAAA,EAAyB,E,KAjCrC,EAAAsE,U,MAAW,CACRC,SAAU,qBACVC,YAAa,sCACbC,UAAW,CAAC,4BACZuW,WAAY,CACR,EAAAF,QAAQ,eAAgB,CACpB,EAAAvB,MAAM,aACF,EAAAzP,MAAM,CAAE,QAAW,KAErB,EAAAyP,MAAM,OACJ,EAAAzP,MAAM,CAAE,QAAW,KAErB,EAAAiR,WAAW,eAAgB,EAAAV,QAAQ,UACnC,EAAAU,WAAW,eAAgB,EAAAV,QAAQ,YAEzC,EAAAS,QAAQ,YACJ,CACA,EAAAC,WACI,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,QAAS,EAAAvQ,MAAM,CAAE,QAAW,OAGxC,EAAAiR,WACI,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,MAAO,EAAAvQ,MAAM,CAAC,QAAW,e,6GASpCmB,cAAe,CAAF,C,KAArB,EAAAvG,QACQyV,UAAW,CAAF,C,KAAjB,EAAAzV,QACSmV,gBAAe,E,KAAxB,EAAAjV,Y,sHEnDL,WACA,OAWA,GAJA,MACA,MAGA,QACA,SAIA,GAHA,MAEA,OACA,Q,iGCZY,6BAAqE,YAAW,kB,6BAAX,+C,yBAuBrC,yBACI,6BAAsD,iBAAC,sCAAkE,iBAC7H,kB,uBAD8E,6C,yBAU9E,yBAA0D,YAAqB,kB,uBAArB,6C,mDAF9D,yBACI,yBAAI,YAAe,iBACnB,8BACA,4BACI,2BAAiD,uHAAyC,iBAC1F,2BAAoD,yHAA2C,iBACnG,iBACJ,iB,0BANQ,2CACwB,6D,yBAU5B,yBACI,+BAAmB,wEAAnB,iBACJ,kB,2CADuB,+CAA+B,mCAA/B,CAA+B,uCD/BlG,iBAmDC,WAAmB0Q,EAAgCmE,EAAgCslB,EAC1Ez5B,EAAsCE,EAA8C+5B,EACpF95B,GAFU,KAAA6P,aAAgC,KAAAmE,MAAgC,KAAAslB,iCAC1E,KAAAz5B,eAAsC,KAAAE,kBAA8C,KAAA+5B,4BACpF,KAAA95B,kBAhBC,KAAAoU,gBAAkB,IAAI,EAAAxV,aAChC,KAAA6R,QAAkB,KAElB,KAAAqD,MAAgB,OAChB,KAAAooB,sBAAuB,EACvB,KAAAjC,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASv4B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,uCAAwC,QAAU,EAAM,SAAW,GAC1G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,4CAA6C,QAAU,EAAM,SAAW,K,OASjH,YAAAb,SAAA,WACCD,KAAKo4B,0BAA0BK,cAAcz4B,KAAKu4B,iBAClDv4B,KAAKy6B,WAAa,IAAI,EAAAj+B,KAAK,GAAIwD,KAAK3B,gBAAgBuW,SAAU5U,KAAK3B,gBAAgBuW,WAGpF,YAAAjK,gBAAA,WACC3K,KAAKoS,MAAQ,OACbpS,KAAKsS,IAAIK,iBAGV,YAAAE,YAAA,aAIA,YAAAC,eAAA,aAIA,YAAAI,QAAA,WACClT,KAAKoS,MAAQ,QAGd,YAAAe,gBAAA,SAAgBpO,GACf/E,KAAKoS,MAAQ,QAGd,YAAAgB,QAAA,WACC,GAAIpT,KAAKy6B,WAAWx3B,MAAQjD,KAAKy6B,WAAWx3B,KAAKhC,OAAS,EAAG,CAG5D,IAA2C,IAAvCjB,KAAKy6B,WAAWx3B,KAAKuJ,QAAQ,KAChC,OAAO,EAIR,IAAK,IAAIhJ,EAAI,EAAGA,EAAIxD,KAAKy6B,WAAW5yB,MAAMwL,aAAapS,OAAQuC,IAC9D,GAA8E,IAA1ExD,KAAKy6B,WAAW5yB,MAAMwL,aAAa7P,GAAGhG,MAAMk9B,QAAQ,MAAO,IAAIz5B,OAClE,OAAO,EAKT,OAAO,EAEH,OAAIjB,KAAKy6B,WAAWx3B,MAAQjD,KAAKy6B,WAAWx3B,KAAKuJ,QAAQ,MACtD,GAMT,YAAAmuB,cAAA,sBAEC36B,KAAK1B,gBAAgBikB,2BAA2BviB,KAAKgT,UAAUuH,SAAStX,KAAMjD,KAAKy6B,YAAYvwB,MAAK,SAAArG,GAEnG,EAAKmP,UAAUuH,SAAS5T,SAAS3C,KAAKH,GAEtC,EAAK6O,gBAAgBoF,KAAK,EAAK9E,WAE/B,EAAK4nB,kBAEL,EAAKJ,sBAAuB,KAE1BlwB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAswB,iBAAA,SAAiBJ,GAAjB,WAECz6B,KAAK1B,gBAAgBokB,8BAA8B1iB,KAAKgT,UAAUuH,SAAStX,KAAMw3B,EAAWx3B,MAAMiH,MAAK,SAAArG,IAExC,IAA1D,EAAKmP,UAAUuH,SAAS5T,SAAS6F,QAAQiuB,IAC5C,EAAKznB,UAAUuH,SAAS5T,SAASgB,OAAO,EAAKqL,UAAUuH,SAAS5T,SAAS6F,QAAQiuB,GAAa,GAG/F,EAAK/nB,gBAAgBoF,KAAK,EAAK9E,WAE/B,EAAK4nB,qBAEHtwB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAuwB,iBAAA,SAAiBL,GAAjB,WACCz6B,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,+BAAiC,IAAM25B,EAAW5yB,MAAQ,IACxH7H,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,uBACjEd,KAAKmO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAElBtQ,KAAKmO,WAAWI,QAASU,UAAUrO,WAAU,SAAAiD,GACpE,EAAKg3B,iBAAiBJ,OAIxB,YAAAM,eAAA,SAAeN,GAEd,IAAMroB,EAAQ,CACb,MAAS,EAAAylB,yBAAyBkD,eAClC,UAAa/6B,KAAKgT,UAClB,WAAciF,KAAKC,MAAMD,KAAKE,UAAUsiB,KAGzCz6B,KAAK43B,+BAA+BzlB,cAAcC,IAGnD,YAAAwoB,gBAAA,WACC56B,KAAKy6B,WAAWx3B,KAAO,GACvBjD,KAAKy6B,WAAW5yB,MAAQ7H,KAAK3B,gBAAgBuW,SAC7C5U,KAAKy6B,WAAWlrB,YAAcvP,KAAK3B,gBAAgBuW,UAGpD,YAAAomB,iBAAA,WACCh7B,KAAK46B,kBACL56B,KAAKw6B,sBAAuB,GAG7B,YAAAD,sBAAA,WACCv6B,KAAKw6B,sBAAuB,GAG7B,YAAArC,MAAA,WACCn4B,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyBmB,cAAe,UAAah5B,KAAKgT,UAAW,WAAc,MAGjJ,YAAAxI,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA5JrCrR,GAA0B,4S,iCAA1BA,EAA0B,grC,2BCpDvC,4BAEI,+BAAwC,wFACpC,+BAEI,8BAEA,4BACI,yBACI,iCAA6D,YAAoC,iBACrG,iBACJ,iBACA,4BAAgD,sDAAsB,EAAAia,gBAAA,MAClE,2BACI,6BACI,6BACI,6BACJ,iBACJ,iBACA,6BACI,+BACI,8BACI,gCACI,6BACI,0BACI,0BACI,8BACJ,iBACA,+BAGA,6BACI,8BACJ,iBACJ,iBACJ,iBACA,6BACI,+BAQA,0BACI,0BACI,gCAAmB,wEAAnB,iBACJ,iBACA,+BAGA,6BACI,iCAAsE,wCAAS,EAAAwnB,mBAC3E,8BACJ,iBAOJ,iBACJ,iBAYJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAEA,6BACI,wBAEA,6BACI,8BACI,iCAA8C,wCAAS,EAAAxC,WACnD,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,MA3FkB,oDAI+D,8EAG7C,qDACf,iDAemD,wEAST,qEAUI,yDAA6B,uCAExB,uEAIsB,uD,wyBD9BjF,CACX,EAAAxkB,QAAQ,eAAgB,CACvB,EAAAvB,MAAM,aACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAyP,MAAM,OACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAiR,WAAW,eAAgB,EAAAV,QAAQ,UACnC,EAAAU,WAAW,eAAgB,EAAAV,QAAQ,YAEpC,EAAAS,QAAQ,YACP,CACC,EAAAC,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,QAAS,EAAAvQ,MAAM,CAAE,QAAW,OAGrC,EAAAiR,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,MAAO,EAAAvQ,MAAM,CAAE,QAAW,a,EA1BvC,GAiCa,EAAAzJ,8B,+DAAAA,EAA0B,E,KAjCtC,EAAAiE,U,MAAU,CACVC,SAAU,sBACVC,YAAa,uCACbC,UAAW,CAAC,6BACZuW,WAAY,CACX,EAAAF,QAAQ,eAAgB,CACvB,EAAAvB,MAAM,aACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAyP,MAAM,OACL,EAAAzP,MAAM,CAAE,QAAW,KAEpB,EAAAiR,WAAW,eAAgB,EAAAV,QAAQ,UACnC,EAAAU,WAAW,eAAgB,EAAAV,QAAQ,YAEpC,EAAAS,QAAQ,YACP,CACC,EAAAC,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,QAAS,EAAAvQ,MAAM,CAAE,QAAW,OAGrC,EAAAiR,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,MAAO,EAAAvQ,MAAM,CAAE,QAAW,e,8NAS7BmB,cAAe,CAAF,C,KAArB,EAAAvG,QACQyV,UAAW,CAAF,C,KAAjB,EAAAzV,QACSmV,gBAAe,E,KAAxB,EAAAjV,Y,wHExDF,WACA,OAWA,GALA,MAIA,MACA,QAEA,S,GACA,O,wFCdI,6BAAqE,YAAW,kB,6BAAX,+CDgBzE,iBA0CC,WAAmB0Q,EAAgCiqB,EAA8DR,EACxGv5B,EAA8CC,GADpC,KAAA6P,aAAgC,KAAAiqB,4BAA8D,KAAAR,iCACxG,KAAAv5B,kBAA8C,KAAAC,kBAjB9C,KAAA0U,UAA2B,KAGpC,KAAAjE,QAAkB,KAClB,KAAAmD,WAA4C,CAAE,MAAS,EAAA2lB,yBAAyBmB,cAAe,UAAah5B,KAAKgT,UAAW,WAAc,IAC1I,KAAAulB,gBAA8B,CAC7B,MAAS,CACR,CAAE,MAASv4B,KAAK3B,gBAAgByC,OAAO,6CAA8C,QAAU,EAAM,SAAW,GAChH,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,0CAA2C,QAAU,EAAM,SAAW,GAC7G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,uCAAwC,QAAU,EAAM,SAAW,GAC1G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,4CAA6C,QAAU,EAAM,SAAW,GAC/G,CAAE,MAASd,KAAK3B,gBAAgByC,OAAO,yCAA0C,QAAU,EAAM,SAAW,K,OAS9G,YAAAb,SAAA,WACCD,KAAKo4B,0BAA0BK,cAAcz4B,KAAKu4B,kBAGnD,YAAA5tB,gBAAA,aAIA,YAAAkI,YAAA,aAGA,YAAAC,eAAA,sBAEC9S,KAAK1B,gBAAgBmkB,8BAA8BziB,KAAKgT,UAAUuH,SAAStX,KAAMjD,KAAKy6B,YAAYvwB,MAAK,SAAArG,GAEtG,IAAMsG,EAAQ,EAAK6I,UAAUuH,SAAS5T,SAAS+F,WAAU,SAAAuuB,GAAK,OAAAA,EAAEh4B,OAASY,EAAKZ,SAE/D,IAAXkH,IACH,EAAK6I,UAAUuH,SAAS5T,SAASwD,GAAStG,GAG3C,EAAK+zB,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyByC,iBAAkB,UAAa,EAAKtnB,UAAW,WAAc,UACjJ1I,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAivB,YAAA,WAQC,OAAO,GAGR,YAAArI,OAAA,WACCnxB,KAAK43B,+BAA+BzlB,cAAc,CAAE,MAAS,EAAA0lB,yBAAyByC,iBAAkB,UAAat6B,KAAKgT,UAAW,WAAc,QAGpJ,YAAAxI,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAlErCxR,GAA4B,6N,iCAA5BA,EAA4B,yzB,2BCxCzC,4BACI,8BAEA,+BAAyC,yFAA8B,EAAA+Z,oBAEnE,4BACI,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,+BACI,6BACI,6BACI,6BACI,6BACJ,iBACJ,iBACA,8BACI,+BACI,gCAAqC,wEAArC,iBACJ,iBACJ,iBACJ,iBAEA,0CAAiB,uEAA6D,iBAE9E,6BACI,wBAEA,8BACI,8BACI,iCAA8C,wCAAS,EAAAqe,YACnD,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBAGJ,iB,+BAhDU,oDAqByC,4CAAiB,6BAK/B,wDAUyC,oD,wNDhBjE,CACX,EAAAxd,QAAQ,YACP,CACC,EAAAC,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,QAAS,EAAAvQ,MAAM,CAAE,QAAW,OAGrC,EAAAiR,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,MAAO,EAAAvQ,MAAM,CAAE,QAAW,a,EAhBvC,GAuBa,EAAA5J,gC,+DAAAA,EAA4B,E,KAvBxC,EAAAoE,U,MAAU,CACVC,SAAU,yBACVC,YAAa,0CACbC,UAAW,GACXuW,WAAY,CACX,EAAAF,QAAQ,YACP,CACC,EAAAC,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,QAAS,EAAAvQ,MAAM,CAAE,QAAW,OAGrC,EAAAiR,WACC,SAAU,CACV,EAAAjR,MAAM,CAAE,QAAW,IACnB,EAAAuQ,QAAQ,MAAO,EAAAvQ,MAAM,CAAE,QAAW,e,2KAS7BmB,cAAe,CAAF,C,KAArB,EAAAvG,QACQyV,UAAW,CAAF,C,KAAjB,EAAAzV,QACQk9B,WAAY,CAAF,C,KAAlB,EAAAl9B,W,4GE5CF,aAMA,SACA,SACA,SAKA,SAEA,aA+BC,WAAmBqF,EAAwCs4B,EAAYxxB,EAAmByxB,EAA2B9C,EAAiDl6B,EAAqCI,GAAtF,KAAA85B,sBAAiD,KAAAl6B,eAAqC,KAAAI,cAC1M,IAAMyE,EAAgB0G,EAEtB1J,KAAK4C,mBAAqBA,EAC1B5C,KAAKgD,cAAgBA,EACrBhD,KAAKk7B,MAAQA,EAEbl7B,KAAKo7B,YAAcl6B,EAAGwC,UAAUV,EAAchC,mBAAmB,IACjEhB,KAAKm7B,UAAYA,EAEjBn7B,KAAKq7B,OAASn6B,EAAGxB,OAAO47B,SAAS,CAAEv5B,EAAiB6D,SAAS,EAAAlI,qBAAsBqE,EAAiB8D,SAAW9D,EAAiBqF,YAAY,EAAAzJ,sBAAuB49B,YAAW,SAACrvB,EAAGC,GAAM,WAA1KjL,CAA+KlB,KAAKo7B,aAkapM,OA/ZQ,YAAA71B,UAAP,WACC,OAAOvF,KAAKq7B,QAGN,YAAAG,QAAP,WACC,OAAOx7B,KAAKgD,cAAcC,MAGpB,YAAAC,cAAP,SAAqB6N,GACpB,IAAI0qB,EAAWz7B,KAAKuF,YAAY3B,MAAK,SAACjE,GAAW,OAAOA,EAAKkE,KAAKC,gBAAkBiN,KAEpF,OAAgB,MAAZ0qB,EAEK,KAGF,IAAI,EAAAC,iBAAiB17B,KAAK4C,mBAAoB5C,KAAMA,KAAK4C,mBAAmBuD,wBAAwB4K,GAAU0qB,EAAUz7B,KAAKq4B,oBAAqBr4B,KAAK7B,aAAc6B,KAAKzB,cAG3K,YAAAo9B,sBAAP,SAA6BC,EAASC,GAAtC,WACK/U,EAAO8U,EAAGj8B,OAAOyC,UAEjB05B,EAAYF,EAAGh6B,OAAO,KAAKoE,QAAQ,sBAAsB,GAEzD+1B,EAAUH,EAAGh6B,OAAO,KAAKoE,QAAQ,sBAAsB,GAMvDg2B,EAA0B,EAAA/0B,mBAAmBjH,KAAKgD,cAAc6E,MAAMuE,eAJ3C,IAK3B6vB,EAAyBC,GACzBC,EAAyBrV,EAAKxkB,EAAI45B,GAClCF,EAL4B,MAO9BA,EAP8B,IAQ9BC,EAAkBC,GAClBC,EAAkBrV,EAAKxkB,EAXM,IAc/B,IAAI85B,EAAYtV,EAAKvkB,MACjB85B,EAAYL,EAdU,GAgBtBK,EAAYD,IACfA,EAAYC,GAIbN,EAAQn6B,OAAO,QAAQoE,QAAQ,yBAAyB,GACtDnE,KAAK,IAAKilB,EAAKzkB,GACfR,KAAK,IAAKilB,EAAKxkB,GACfK,MAAM,cAAe,eACrBd,KAAK,OAAQ,QACbA,KAAK,YAAa,IAClBqF,KAAK,KAGP40B,EAAUl6B,OAAO,iBAAiBoE,QAAQ,0BAA0B,GAC/DnE,KAAK,YAhCqB,IAiC1BA,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBA,KAAK,IAAKilB,EAAKzkB,EAlCM,IAmCrBR,KAAK,IAAKs6B,GACVt6B,KAAK,QAASm6B,GACdn6B,KAAK,SAAUo6B,GACfr6B,OAAO,WACPC,KAAK,QAAS,gCACdA,KAAK,cAAe,SACpBA,KAAK,aAAc,QACnBc,MAAM,iBAAkB,UACxBA,MAAM,UAAW,cACjBA,MAAM,QAAS,QAEfA,MAAM,SAAUZ,EAAiB8D,SAAW,EAAI,MAChDy2B,MAAK,SAACC,GAAW,SAAKv5B,cAAc6E,MAAMuE,kBAG/C2vB,EAAQn6B,OAAO,QAAQoE,QAAQ,yBAAyB,GACtDnE,KAAK,KAAMilB,EAAKzkB,GAChBR,KAAK,KAAMilB,EAAKxkB,EArDa,IAsD7BT,KAAK,KAAMilB,EAAKzkB,EAAI+5B,GACpBv6B,KAAK,KAAMilB,EAAKxkB,EAvDa,IAwD7BT,KAAK,SAAU,QACfA,KAAK,eAAgB,IAEvB,IAAI26B,EAAcT,EAAQp8B,OAAOyC,UAgBjC,OAfA25B,EAAQl6B,KAAK,YAAa,gBAAkB26B,EAAYh6B,OAAS,KAGjEs5B,EAAUl6B,OAAO,QAAQoE,QAAQ,0BAA0B,GACzDnE,KAAK,YAAaq6B,IAClBr6B,KAAK,cAAe,QACpBA,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBA,KAAK,OAAQ,QACbA,KAAK,IAAKilB,EAAKzkB,GACfR,KAAK,IAAKilB,EAAKxkB,GACf4E,KAAK20B,GAEPC,EAAUj6B,KAAK,YAAa,gBAAuC,IAArB26B,EAAYh6B,OAAe,KAElEu5B,GAGR,YAAAU,sBAAA,SAAsB1rB,GACrB,IAAIzP,EAAqBtB,KAAK4C,mBAAmBuD,wBAAwB4K,GAE3C,MAA1BzP,EAAI8I,qBACP9I,EAAI8I,mBAAqBpK,KAAK4C,mBAAmBU,4BAA4BhC,IAM9E,IAHE,IAAIiC,EAAyBjC,EAAI8I,mBAE/BD,EAAQ,KACH3G,EAAI,EAAGA,EAAID,EAAatC,SAAUuC,EACtCD,EAAaC,KAAOxD,KAAKw7B,YAC5BrxB,EAAQ3G,GAQV,OAJa,MAAT2G,GACH5G,EAAaoE,OAAOwC,EAAO,GAGrB5G,GAGA,YAAAm5B,cAAR,SAAsBH,EAAQI,EAAc94B,GAE1C3C,EAAGC,OAAO,gBACNwB,MAAM,UAAW,IAGf,YAAAi6B,cAAR,SAAsB73B,EAAY43B,EAAc94B,GAE7C3C,EAAGC,OAAO,mBAAmBm7B,KAAKt8B,KAAKgD,cAAc6E,MAAMuE,gBAC3DlL,EAAGC,OAAO,uBAAuBm7B,KAAKt8B,KAAKgD,cAAcC,MAEzD/B,EAAGC,OAAO,uBAAuBm7B,KAAKz4B,EAAKA,KAAKgE,OAChD3G,EAAGC,OAAO,2BAA2Bm7B,KAAKz4B,EAAKA,KAAKC,eAEpD5C,EAAGC,OAAO,+BAA+Bm7B,KAAKt8B,KAAK4C,mBAAmB+G,uBAAuB3J,KAAKgD,cAAcF,kBAAkB+E,MAAMuE,gBACxIlL,EAAGC,OAAO,mCAAmCm7B,KAAKt8B,KAAK4C,mBAAmB+G,uBAAuB3J,KAAK4C,mBAAmBuD,wBAAwBtC,EAAKA,KAAKC,eAAehB,kBAAkB+E,MAAMuE,gBAElM,IACIywB,EADmB37B,EAAGC,OAAO,gBAAgBxB,OACN6I,wBAEvCkD,EAAM,CAACrJ,EAAG0C,EAAMM,MAAO/C,EAAGyC,EAAMO,OAK/BP,EAAMO,MAAQu3B,EAAgBr6B,OAJJ,GAI+BqG,SAASi0B,gBAAgBC,eAGrFrxB,EAAIpJ,EAAIyC,EAAMO,MAAQu3B,EAAgBr6B,OAPT,IAW1BuC,EAAMM,MAAQw3B,EAAgBt6B,MAVJ,EAU8BsG,SAASi0B,gBAAgBE,cAGpFtxB,EAAIrJ,EAAI0C,EAAMM,MAAQw3B,EAAgBt6B,MAbT,GAgB/BrB,EAAGC,OAAO,gBACPwB,MAAM,OAAQ+I,EAAIrJ,EAAI,MACtBM,MAAM,MAAO+I,EAAIpJ,EAAI,OAGnB,YAAA26B,eAAR,SAAuBV,EAAQI,EAAc94B,GAE3C3C,EAAGC,OAAO,gBACNwB,MAAM,UAAW,GACjBA,MAAM,OAAQ,YACdA,MAAM,MAAO,aAGZ,YAAAX,OAAP,sBACKoC,EAAOpE,KACPk9B,EAAgBl9B,KAAKq7B,OAAO13B,cAEhCzC,EAAGC,OAAO,sCAAsCC,SAC5CpB,KAAKm7B,WACRj6B,EAAGC,OAAO,qCAAqCC,SAGhD,IAAIw6B,EAAK57B,KAAKk7B,MAAMiC,OAAO,IAAK,gBAAgBn3B,QAAQ,eAAe,GAAMnE,KAAK,YAAa7B,KAAKgD,cAAcC,MAAMpB,KAAK,eAAgB7B,KAAKm7B,WAClJS,EAAG/5B,KAAK,cAAe,cAEvB,IAAIu7B,EAAQxB,EAAGh6B,OAAO,KAAKoE,QAAQ,oBAAoB,GAAMnE,KAAK,YAAa7B,KAAKgD,cAAcC,MAGlGm6B,EAAMx7B,OAAO,KAAKoE,QAAQ,cAAc,GACtCnE,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,eAAgB,KACrBkH,UAAU,QACVlF,KAAK7D,KAAKq7B,OAAOgC,SACjBC,KAAK,QAELz7B,KAAK,KAAK,SAAC06B,EAAQ/4B,GACnB,MAAO,IAAM+4B,EAAEgB,OAAOl7B,EAAI,IAAOk6B,EAAEgB,OAAQ,EACxC,KAAQhB,EAAEgB,OAAOj7B,EAAIi6B,EAAE3zB,OAAOtG,GAAK,EACnC,IAAMi6B,EAAE3zB,OAAOvG,EACf,IAAOk6B,EAAE3zB,OAAQ,KAItB,IAAI40B,EAAUJ,EAAMx7B,OAAO,KAAKoE,QAAQ,gBAAgB,GACxDw3B,EAAQz0B,UAAU,QAChBlF,KAAKq5B,GACLI,KAAK,QACLx+B,QAAO,SAASy9B,GAAU,MAAgC,cAAzBA,EAAE14B,KAAKC,iBACxCkC,QAAQ,uBAAuB,GAC/BnE,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEl6B,EAAKN,EAAiB6D,SAAW,KACzD/D,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEj6B,EAAIP,EAAiB8D,SAAS,EAAI9D,EAAiBqF,WAAa,KACxFvF,KAAK,QAAQ,SAAC06B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAE14B,KAAKE,uBAAiC,EAAAhG,4BAA8B,EAAAF,0BAA6B,EAAAG,6BAC9I6D,KAAK,QAASE,EAAiB07B,YAC/B57B,KAAK,SAAUE,EAAiBqF,YAChCvF,KAAK,UAAU,SAAC06B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAE14B,KAAKE,uBAAiC,KAAO,OAAU,QACtGlC,KAAK,KAAM,GACXA,KAAK,gBAAgB,SAAC06B,GAAW,OAAAA,EAAE14B,KAAKC,iBACxCjC,KAAK,kBAAkB,SAAC06B,GACxB,OAAiC,MAAjCA,EAAE14B,KAAKE,0BAEPuE,GAAGvG,EAAiB27B,yBAAyB,SAAS34B,EAAYlB,GAAYO,EAAKs4B,cAAc33B,EAAO/E,KAAM6D,MAC3GyE,GAAGvG,EAAiB47B,wBAAwB,SAAS54B,EAAYlB,GAAYO,EAAKw4B,cAAc73B,EAAO/E,KAAM6D,MAC7GyE,GAAGvG,EAAiB67B,wBAAwB,SAAS74B,EAAYlB,GAAYO,EAAK64B,eAAel4B,EAAO/E,KAAM6D,MAGnH25B,EAAQz0B,UAAU,iBAChBlF,KAAKq5B,GACLI,KAAK,iBACLx+B,QAAO,SAASy9B,GAAU,MAAgC,cAAzBA,EAAE14B,KAAKC,iBACxCkC,QAAQ,uBAAuB,GAC/BnE,KAAK,KAAK,SAAC06B,GACR,OAAAA,EAAEl6B,EAAKN,EAAiB07B,WAAa,KAExC57B,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEj6B,EAAIP,EAAiB8D,SAAS,EAAI9D,EAAiBqF,WAAa,KACxFvF,KAAK,YAAaE,EAAiB87B,kBAAoB,MACvDh8B,KAAK,UAAU,SAAC06B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAE14B,KAAKE,uBAAiC,KAAO,OAAU,QACtGlC,KAAK,gBAAgB,SAAC06B,GAAW,OAAAA,EAAE14B,KAAKC,iBACxCjC,KAAK,kBAAkB,SAAC06B,GAAW,OAAiC,MAAjCA,EAAE14B,KAAKE,0BAC1ClC,KAAK,cAAe,cACpBA,KAAK,cAAe,QACjBA,KAAK,YAAaE,EAAiB87B,mBACnCh8B,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBA,KAAK,QAASE,EAAiB07B,YAC/B57B,KAAK,SAAUE,EAAiBqF,WAAa,GAChDxF,OAAO,WACJC,KAAK,QAAS,gCACdA,KAAK,OAAQ,SACbA,KAAK,SAAUE,EAAiBqF,WAAa,GAC7CzE,MAAM,aAAc,UACpBA,MAAM,iBAAkB,UACxBA,MAAM,UAAW,cACjBA,MAAM,QAAS,SACfA,MAAM,SAAWZ,EAAiBqF,WAAa,EAAK,MACpDzE,MAAM,QAASZ,EAAiB07B,WAAa,MAC7CnB,MAAK,SAAUC,GACd,IAAIpU,EAAwC,MAAjCoU,EAAE14B,KAAKE,uBAAiCK,EAAKxB,mBAAmB6G,oBAAoB8yB,EAAE14B,KAAKE,wBAAwB8D,MAAMuE,eAAiBhI,EAAKpB,cAAc6E,MAAMuE,eAE9K,QADA,EAAAnF,mBAAmBkhB,EAAMpmB,EAAiB87B,mBAAsB97B,EAAiB07B,WAAa,KAAKtV,EAAOA,EAAK2V,UAAU,EAAE,IAAM,OAC1H3V,KAER7f,GAAGvG,EAAiB27B,yBAAyB,SAAS34B,EAAYlB,GAAYO,EAAKs4B,cAAc33B,EAAO/E,KAAM6D,MAC9GyE,GAAGvG,EAAiB47B,wBAAwB,SAAS54B,EAAYlB,GAAYO,EAAKw4B,cAAc73B,EAAO/E,KAAM6D,MAC7GyE,GAAGvG,EAAiB67B,wBAAwB,SAAS74B,EAAYlB,GAAYO,EAAK64B,eAAel4B,EAAO/E,KAAM6D,MAGnHu5B,EAAMx7B,OAAO,KAAKoE,QAAQ,SAAS,GACjC+C,UAAU,QACVlF,KAAKq5B,GACLI,KAAK,QACLx+B,QAAO,SAASy9B,GAAU,MAAgC,cAAzBA,EAAE14B,KAAKC,iBACxCkC,QAAQ,qBAAqB,GAC7BnE,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEl6B,EAAKN,EAAiB6D,SAAW,KACzD/D,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEj6B,EAAKP,EAAiB8D,SAAW,KACzDhE,KAAK,QAAQ,SAAC06B,GAAW,OAAiC,MAAjCA,EAAE14B,KAAKE,uBAAiC,EAAAjG,oBAAsB,EAAAF,qBACvFiE,KAAK,QAASE,EAAiB6D,UAC/B/D,KAAK,SAAUE,EAAiB8D,UAChChE,KAAK,KAAM,GACXA,KAAK,UAAU,SAAC06B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAE14B,KAAKE,uBAAiC,KAAO,OAAU,QACtGlC,KAAK,gBAAgB,SAAC06B,GAAW,OAAAA,EAAE14B,KAAKC,iBACxCjC,KAAK,kBAAkB,SAAC06B,GAAW,OAAiC,MAAjCA,EAAE14B,KAAKE,0BAC1CiF,MAAK,SAASuzB,GACc,aAAxBA,EAAE14B,KAAKC,gBACNy4B,EAAE14B,KAAK6B,gBACV62B,EAAE14B,KAAK4B,aAAe,CAAEpD,EAAGk6B,EAAEl6B,EAAIN,EAAiB6D,SAAW,EAAGtD,EAAGi6B,EAAEj6B,EAAgC,EAA5BP,EAAiB8D,SAActD,MAAmC,EAA5BR,EAAiB6D,SAAe,IAAKpD,OAAoC,EAA5BT,EAAiB8D,UAG7K02B,EAAE14B,KAAK4B,aAAe,CAAEpD,EAAGk6B,EAAEl6B,EAAIN,EAAiB6D,SAAW,EAAGtD,EAAGi6B,EAAEj6B,EAAIP,EAAiB8D,SAAW,EAAGtD,MAAOR,EAAiB6D,SAAUpD,OAAQT,EAAiB8D,cAIrKyC,GAAGvG,EAAiB27B,yBAAyB,SAAS34B,EAAYlB,GAAYO,EAAKs4B,cAAc33B,EAAO/E,KAAM6D,MAC3GyE,GAAGvG,EAAiB47B,wBAAwB,SAAS54B,EAAYlB,GAAYO,EAAKw4B,cAAc73B,EAAO/E,KAAM6D,MAC7GyE,GAAGvG,EAAiB67B,wBAAwB,SAAS74B,EAAYlB,GAAYO,EAAK64B,eAAel4B,EAAO/E,KAAM6D,MAGnH,IAmFIk4B,EAnFEgC,EAAuB,EAAvBA,EAAiC,GACnCC,EAASZ,EAAMx7B,OAAO,KAAKoE,QAAQ,yBAAyB,GAChEg4B,EAAOj1B,UAAU,QAAQlF,KAAK7D,KAAKq7B,OAAOgC,SAASC,KAAK,QACtDt3B,QAAQ,4BAA4B,GACpCnE,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEgB,OAAOl7B,EAAI07B,EAAmB,KACtDl8B,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEgB,OAAOj7B,EAAIP,EAAiB8D,SAAW,EAAIk4B,EAAoB,KACvFl8B,KAAK,QAASk8B,GACdl8B,KAAK,SAAUk8B,GACfl8B,KAAK,QAAQ,SAAC06B,GAAW,SAAKpB,UAAqD,MAAxCoB,EAAEgB,OAAO15B,KAAKE,uBAAiC,EAAAhG,4BAA8B,EAAAF,0BAA6B,EAAAG,6BACvJggC,EAAOj1B,UAAU,QAAQlF,KAAK7D,KAAKq7B,OAAOgC,SAASC,KAAK,QACtDt3B,QAAQ,4BAA4B,GACpCnE,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,KAAK,SAAC06B,GAAW,WAAOA,EAAEgB,OAAOl7B,EAAI07B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOxB,EAAEgB,OAAOj7B,EAAIP,EAAiB8D,SAAW,EAAIk4B,EAAoB,EAA0B,EAApBA,EAAyB,GACtM,IAAOxB,EAAEgB,OAAQ,EAAI,KAAOhB,EAAEgB,OAAOj7B,EAAIP,EAAiB8D,SAAW,EAAIk4B,EAAoB,EAAKA,EAAoB,GACtH,KAAOxB,EAAEgB,OAAOl7B,EAAI07B,EAAmB,EAAKA,EAAmB,GAAM,KAAOxB,EAAEgB,OAAOj7B,EAAIP,EAAiB8D,SAAW,EAAIk4B,EAAoB,EAAIA,EAAoB,MAIzKX,EAAMx7B,OAAO,KAAKoE,QAAQ,0BAA0B,GAClD+C,UAAU,QACVlF,KAAKq5B,GACLI,KAAK,QACLx+B,QAAO,SAASy9B,GAAU,MAAgC,cAAzBA,EAAE14B,KAAKC,iBACxCkC,QAAQ,+BAA+B,GACvCnE,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEl6B,EAAKN,EAAiB6D,SAAW,KACzD/D,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEj6B,EAAKP,EAAiB8D,SAAW,KACzDhE,KAAK,QAASE,EAAiB6D,UAC/B/D,KAAK,SAAUE,EAAiB8D,UAChChE,KAAK,OAAQ,SAGfu7B,EAAMx7B,OAAO,KAAKoE,QAAQ,wBAAwB,GAChD+C,UAAU,QACVlF,KAAKq5B,GACLI,KAAK,QACLx+B,QAAO,SAASy9B,GAAU,MAAgC,cAAzBA,EAAE14B,KAAKC,iBACxCkC,QAAQ,6BAA6B,GACrCnE,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEl6B,EAAKN,EAAiB6D,SAAW,KACzD/D,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEj6B,EAAKP,EAAiB8D,SAAW,KACzDhE,KAAK,QAASE,EAAiB6D,UAC/B/D,KAAK,SAAUE,EAAiB8D,UAChChE,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,KACrBA,KAAK,mBAAoB,OACzBA,KAAK,gBAAgB,SAAC06B,GAAW,OAAAA,EAAE14B,KAAKC,iBAG1Cs5B,EAAMx7B,OAAO,KAAKoE,QAAQ,mBAAmB,GAC3CnE,KAAK,cAAe,cACpBA,KAAK,YAAaE,EAAiBk8B,iBACnCp8B,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBkH,UAAU,iBACVlF,KAAKq5B,GACLI,KAAK,iBACLt3B,QAAQ,sBAAsB,GAC9BnE,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEl6B,EAAKN,EAAiB6D,SAAW,EAAK,KAC9D/D,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEj6B,EAAKP,EAAiB8D,SAAW,EAAK,KAC9DhE,KAAK,QAASE,EAAiB6D,SAAW,GAAK,GAC/C/D,KAAK,SAAUE,EAAiB8D,SAAW,GAK3ChE,KAAK,UAAU,SAAC06B,GAAW,SAAKpB,UAA8C,MAAjCoB,EAAE14B,KAAKE,uBAAiC,KAAO,OAAU,QACtGlC,KAAK,gBAAgB,SAAC06B,GAAW,OAAAA,EAAE14B,KAAKC,iBACxCjC,KAAK,kBAAkB,SAAC06B,GAAW,OAAiC,MAAjCA,EAAE14B,KAAKE,0BAC1CnC,OAAO,WACPC,KAAK,QAAS,gCACdA,KAAK,cAAe,SACpBA,KAAK,aAAc,QACnBc,MAAM,iBAAkB,UACxBA,MAAM,UAAW,cACjBA,MAAM,QAASZ,EAAiB6D,SAAW,GAAK,EAAI,MACpDjD,MAAM,SAAUZ,EAAiB8D,SAAW,EAAI,MAChDy2B,MAAK,SAACC,GAAW,OAAAA,EAAE14B,KAAKgE,SACxBS,GAAGvG,EAAiB27B,yBAAyB,SAAS34B,EAAYlB,GAAYO,EAAKs4B,cAAc33B,EAAO/E,KAAM6D,MAC3GyE,GAAGvG,EAAiB47B,wBAAwB,SAAS54B,EAAYlB,GAAYO,EAAKw4B,cAAc73B,EAAO/E,KAAM6D,MAC7GyE,GAAGvG,EAAiB67B,wBAAwB,SAAS74B,EAAYlB,GAAYO,EAAK64B,eAAel4B,EAAO/E,KAAM6D,MAG/G7D,KAAKm7B,WACRiC,EAAMx7B,OAAO,KAAKoE,QAAQ,6BAA6B,GACrD+C,UAAU,QACVlF,KAAKq5B,GACLI,KAAK,QACLx+B,QAAO,SAASy9B,GAChB,MAAiC,cAAzBA,EAAE14B,KAAKC,eAAkF,MAAjCy4B,EAAE14B,KAAKE,0BAEvEiC,QAAQ,+BAA+B,GACvCnE,KAAK,gBAAgB,SAAC06B,GAAW,OAAAA,EAAE14B,KAAKC,iBACxCjC,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEl6B,EAAKN,EAAiB6D,SAAW,EAAM7D,EAAyC,yBAAI,KAC5GF,KAAK,KAAK,SAAC06B,GAAW,OAAAA,EAAEj6B,EAA+C,GAA1CP,EAAiBm8B,yBAAgCn8B,EAAiBm8B,yBAAyB,KACxHv7B,MAAM,cAAe,eACrBA,MAAM,SAAU,WAChBA,MAAM,OAAQ,WACdA,MAAM,YAAaZ,EAAiBm8B,yBAA2B,MAC/Dh3B,KAAK,KACLoB,GAAG,SAAS,SAASvD,EAAOpF,GAAQyE,EAAKlB,cAAcvD,EAAKkE,KAAKC,eAAeq6B,kCAElFpC,EAAU/7B,KAAK27B,sBAAsBC,EAAI,uBAGzCG,EAAU/7B,KAAK27B,sBAAsBC,EAAI,qBAIxBG,EAAQp8B,OAAOyC,UAAUI,QAtc9B,EAAAoD,SAAmB,IACnB,EAAAC,SAAmB,GACnB,EAAAo4B,gBAA0B,EAC1B,EAAAC,yBAAmC,GAEnC,EAAAT,WAAqB,IACrB,EAAAr2B,WAAqB,GACrB,EAAAy2B,kBAA4B,EAE5B,EAAAH,wBAA0B,aAE1B,EAAAC,uBAAyB,YAEzB,EAAAC,uBAAyB,aA4bxC,EA3cA,GAAa,EAAA77B,oB,mHCfb,WAOA,GANA,MACA,MAEA,MAEA,MACA,Q,GAIA,O,2GCVE,4BAAqE,YAAW,kB,6BAAX,+C,mDAGnE,0BACE,wCAAiB,gHAAiC,4FAAuC,iBAC3F,iB,iCADmB,8D,mDAEnB,0BACE,sCAAe,gHAAiC,4FAAuC,iBACzF,iB,iCADiB,8D,mDAEjB,0BACE,8CAAuB,gHAAiC,4FAAuC,iBACjG,iB,iCADyB,8D,mDAEzB,0BACE,0CAAmB,gHAAiC,4FAAuC,iBAC7F,iB,iCADqB,8D,yBAXvB,0BACE,8BAGA,8BAGA,8BAGA,8BAGF,kB,6BAZQ,oDAGA,yDAGA,iEAGA,8DDAV,iBAWI,WAAqB+R,EAA2B3F,EAAgChQ,EACpEE,EAA8C+/B,GADrC,KAAAtqB,UAA2B,KAAA3F,aAAgC,KAAAhQ,eACpE,KAAAE,kBAA8C,KAAA+/B,SAJ1D,KAAArvB,QAAkB,KAClB,KAAAqD,MAAgB,M,OAMhB,YAAAnS,SAAA,aAGA,YAAAo+B,cAAA,SAAet5B,GACI,SAAVA,EACD/E,KAAKs+B,aAEW,SAAVv5B,EACN/E,KAAKu+B,aAEW,WAAVx5B,GACN/E,KAAKw+B,gBAIb,YAAAF,WAAA,WACwB,aAAft+B,KAAKoS,QACNpS,KAAKoS,MAAQ,QAIrB,YAAAmsB,WAAA,WACwB,QAAfv+B,KAAKoS,MAEApS,KAAKmf,cAAcsf,WAIrBz+B,KAAK0+B,eAHL1+B,KAAKoS,MAAQ,WAMI,aAAfpS,KAAKoS,MACXpS,KAAK0+B,eAEgB,qBAAf1+B,KAAKoS,MAE6B,MAAnCpS,KAAKmf,cAAckJ,aACpBroB,KAAKoS,MAAQ,eAGbpS,KAAK0+B,eAGY,iBAAf1+B,KAAKoS,OACXpS,KAAK0+B,gBAIb,YAAAA,aAAA,sBACI1+B,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQwL,gBAAiBtf,KAAKmf,eAAgBjV,MAAM,SAAA2Z,GAErB,MAA3BA,EAAOiE,kBACR,EAAK1V,MAAQ,mBACb,EAAK+M,cAAgB0E,GAEQ,MAAvBA,EAAOwE,cACb,EAAKjW,MAAQ,eACb,EAAK+M,cAAgB0E,IAGrB,EAAK1V,WAAWgI,OAEhB,EAAKhI,WAAa,EAAKhQ,aAAaiP,KAAM,EAAA0B,sBAAuB,CAC7DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEzB,EAAKH,WAAWI,QAAQQ,QAAU,EAAK1Q,gBAAgByC,OAAQ,oDAC/D,EAAKqN,WAAWI,QAAQS,WAAa,EAAK3Q,gBAAgByC,OAAQ,2CAClE,EAAKqN,WAAWI,QAAQowB,WAAa,EAAKtgC,gBAAgByC,OAAQ,sBAEzC,EAAKqN,WAAWI,QAAUU,UAAUrO,WAAW,SAAAiD,GACpE,EAAKu6B,OAAOQ,SAAS,CAAC,oCAG9Bt0B,OAAM,SAAEe,GACR,EAAKb,MAAOa,OAKpB,YAAAmzB,aAAA,sBACIx+B,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQuL,aAAcrf,KAAKmf,eAAgBjV,MAAM,SAAAmB,GAClD,EAAK8C,WAAWgI,UAChB7L,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAC,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAxG/CrS,GAAuB,oL,iCAAvBA,EAAuB,0QClBpC,4BACE,8BAEA,8BAcF,kB,MAhBQ,oDAEA,6E,oJDUR,GAKa,EAAAA,2B,+DAAAA,EAAuB,E,KALnC,EAAAiF,U,MAAW,CACRC,SAAU,kBACVC,YAAa,mCACbC,UAAW,Q,4PEhBf,WAEA,Q,GAEA,OACA,O,gFCDQ,yBAA4C,YAAoC,kB,uBAApC,iE,yBAD9C,yBACE,6BACF,kB,6BAD0B,0D,yFAI5B,0BACE,4BACE,8BAAgC,uGAAyB,qGAAzD,iBACF,iBACA,4BACE,0BAA8E,gG,uBAA+F,iBAC7K,0BAA8C,uG,uBAA6F,iBAC7I,iBACF,iB,gCANW,oDAAwB,wBAAxB,CAAwB,oBAAxB,CAAwB,yBAAxB,CAAwB,2BAG5B,6EAAmC,4EACyC,iG,yBAU3E,yBAAsD,YAAkB,kB,uBAAlB,6C,yBAH1D,2BACE,yBACE,6BACA,6BACF,iBACF,kB,8BAF6B,mE,mDAN/B,4BACE,2BAAG,0FAAoB,sBAA+D,sBAA2E,6BAAyD,YAC1N,iBACA,+BAMF,iB,iCAR4N,sEAEnN,4C,yBAOT,4BACE,6BACA,YACF,kB,8BADE,uE,mDAbJ,0BACE,+BAUA,+BAIA,4BACE,2BAAsC,6F,uBAAoF,iBAC5H,iBACF,iB,gCAjByB,qEAUA,8EAKwC,iGD1BrE,iBAoBI,WAAqBwW,GAArB,WAAqB,KAAAA,UATX,KAAA+qB,QAA6B,IAAI,EAAA3hC,aAUvC8C,KAAK4wB,WAAa,EAAA1B,WAAWta,QAAO,SAAEua,GAClC,EAAKrb,QAAQ6L,wBAAyB,EAAKmf,YAAa,EAAK5W,QAAQlc,KAAM,EAAKkc,QAAQviB,OAAQ,EAAKwZ,cAAczb,WAAYwG,MAAM,SAAAolB,GACjIH,EAAS9hB,KAAMiiB,S,OAK3B,YAAArvB,SAAA,WACID,KAAK8+B,YAAc,KACnB9+B,KAAK6f,SAAW,KAChB7f,KAAK++B,YAAa,GAGtB,YAAAxP,kBAAA,SAAmB/V,GACfxZ,KAAK6f,SAAWrG,EAAE/L,KAAKkV,GACvB3iB,KAAK++B,WAAgC,MAAjB/+B,KAAK6f,UAG7B,YAAAmf,cAAA,sBACSh/B,KAAK++B,aACN/+B,KAAK6+B,QAAQ/mB,KAAM,MAEnB9X,KAAK8T,QAAQ8L,uBAAwB5f,KAAK6f,SAAU7f,KAAKkoB,QAAQrgB,OAAQqC,MAAM,SAAAmB,GAC3E,EAAK6c,QAAQH,UAAW,EACxB,EAAKG,QAAQzK,OAAS,CAClB0K,KAAM,UACNpI,UAAW1U,EAAS0U,UACpBC,KAAM3U,EAAS2U,KACfnY,MAAOwD,EAASxD,UAEpByC,OAAO,SAAAkP,GACP,EAAKqlB,QAAQ/mB,KAAM0B,EAAEhP,YAKjC,YAAAy0B,qBAAA,WACI,IAAIC,EAAgBl/B,KAAKkoB,QAAQrgB,MACjB7H,KAAKkoB,QAAQlc,KAE7BhM,KAAKkoB,QAAQH,UAAW,EAExB/nB,KAAKkoB,QAAQzK,OAAS,CAClB0K,KAAM,mBACNtgB,MAAOq3B,IAIf,YAAAC,WAAA,sBACwBn/B,KAAKkoB,QAAQrgB,MACjB7H,KAAKkoB,QAAQlc,KAE7B,GAAKhM,KAAKkoB,QAAQH,SAAW,CACzB,IAAItK,EAASzd,KAAKkoB,QAAQzK,OAEN,oBAAfA,EAAO0K,MACRnoB,KAAKkoB,QAAQH,UAAW,EACxB/nB,KAAKkoB,QAAQzK,OAAS,MAED,WAAfA,EAAO0K,OACbnoB,KAAK6+B,QAAQ/mB,KAAM,MAEnB9X,KAAK8T,QAAQgM,uBAAwBrC,EAAOsC,UAAWtC,EAAOuC,MAAO9V,MAAM,SAAAmB,GACvE,EAAK6c,QAAQH,UAAW,EACxB,EAAKG,QAAQzK,OAAS,KAEtB,EAAKqhB,YAAc,KACnB,EAAKC,WAAmC,MAApB,EAAKD,eACzBx0B,OAAO,SAAAkP,GACP,EAAKqlB,QAAQ/mB,KAAM0B,EAAEhP,a,iCApF5BlS,GAAwB,mC,iCAAxBA,EAAwB,o9BCbrC,4BACE,kCACE,4BACE,6BAGF,iBACA,4BAAoC,YAAyC,iBAC7E,+BASA,8BAmBF,iBACF,kB,MAlCW,+DAI6B,qFAC9B,wDASA,yD,kPDVV,GAMa,EAAAA,4B,+DAAAA,EAAwB,E,KANpC,EAAA6E,U,MAAW,CAERC,SAAU,mBACVC,YAAa,oCACbC,UAAW,Q,yCAIF6hB,cAAe,CAAF,C,KAArB,EAAA5hB,QACQ2qB,QAAS,CAAF,C,KAAf,EAAA3qB,QACQ4M,MAAO,CAAF,C,KAAb,EAAA5M,QACSshC,QAAS,CAAF,C,KAAhB,EAAAphC,Y,gHElBL,WAEA,QACA,S,GAEA,OACA,O,4ICFI,0BACE,4BACE,8BAAgC,qGAAuB,qGAAvD,iBACF,iBACA,4BACE,0BAA8E,gG,uBAA2F,iBACzK,0BAAsC,+F,uBAAoF,iBAC1H,0BAA8C,8F,uBAAkF,iBAClI,iBACF,iB,gCAPW,oDAAwB,sBAAxB,CAAwB,oBAAxB,CAAwB,yBAAxB,CAAwB,2BAG5B,6EAAmC,wEACyB,+FACO,+F,sBAIxE,4BACE,6BACF,kB,yBACA,4BACE,6BACA,YACF,kB,8BADE,uE,yBAEF,4BACE,6BACA,YACF,kB,8BADE,gE,mDAVJ,0BACE,+BAGA,+BAIA,+BAIA,4BACE,2BAAsC,6F,uBAAoF,iBAC5H,iBACF,iB,gCAdyB,oEAGA,qEAIA,oEAKwC,iGDnBrE,iBAoBI,WAAqBqW,GAArB,WAAqB,KAAAA,UATX,KAAA+qB,QAA6B,IAAI,EAAA3hC,aAUvC8C,KAAK4wB,WAAa,EAAA1B,WAAWta,QAAO,SAAEua,GAClC,EAAKrb,QAAQmM,mBAAoB,EAAKiI,QAAQhI,cAAe,EAAKkf,UAAW,MAAOl1B,MAAM,SAAAolB,GACtFH,EAAS9hB,KAAMiiB,S,OAK3B,YAAArvB,SAAA,WACID,KAAKo/B,UAAY,KACjBp/B,KAAKq/B,OAAS,KACdr/B,KAAK++B,YAAa,GAGtB,YAAAxP,kBAAA,SAAmB/V,GACfxZ,KAAKq/B,OAAS7lB,EAAE/L,KAAKjQ,MACrBwC,KAAK++B,WAA8B,MAAf/+B,KAAKq/B,QAG7B,YAAAL,cAAA,sBACSh/B,KAAK++B,aACN/+B,KAAK6+B,QAAQ/mB,KAAM,MAEnB9X,KAAK8T,QAAQsM,kBAAmBpgB,KAAKq/B,OAAQr/B,KAAKkoB,QAAQrgB,OAAQqC,MAAM,SAAAmB,GACpE,EAAK6c,QAAQH,UAAW,EACxB,EAAKG,QAAQzK,OAAS,CAClB0K,KAAM,UACNpI,UAAW1U,EAAS0U,UACpBlY,MAAOwD,EAASxD,UAEpByC,OAAO,SAAAkP,GACP,EAAKqlB,QAAQ/mB,KAAM0B,EAAEhP,YAKjC,YAAA80B,aAAA,sBACIt/B,KAAK6+B,QAAQ/mB,KAAM,MAEnB9X,KAAK8T,QAAQyM,WAAYvgB,KAAKkoB,QAAQrgB,MAAO,OAAQ7H,KAAKkoB,QAAQ6G,YAAY7kB,MAAM,SAAAsY,GAChF,EAAK0F,QAAQH,UAAW,EACxB,EAAKG,QAAQzK,OAAS,CAClB0K,KAAM,SACN3F,KAAMA,MAEVlY,OAAO,SAAAkP,GACP,EAAKqlB,QAAQ/mB,KAAM0B,EAAEhP,WAI7B,YAAA+0B,YAAA,WACIv/B,KAAKkoB,QAAQH,UAAW,EAExB/nB,KAAKkoB,QAAQzK,OAAS,CAClB0K,KAAM,WAId,YAAAgX,WAAA,sBAEI,GAAKn/B,KAAKkoB,QAAQH,SAAW,CAEzB,IAAItK,EAASzd,KAAKkoB,QAAQzK,OAEN,UAAfA,EAAO0K,MACRnoB,KAAKkoB,QAAQH,UAAW,EACxB/nB,KAAKkoB,QAAQzK,OAAS,MAED,WAAfA,EAAO0K,MACbnoB,KAAK6+B,QAAQ/mB,KAAM,MAEnB9X,KAAK8T,QAAQwM,kBAAmB7C,EAAOsC,WAAY7V,MAAM,SAAAmB,GACrD,EAAK6c,QAAQH,UAAW,EACxB,EAAKG,QAAQzK,OAAS,QACtBnT,OAAO,SAAAkP,GACP,EAAKqlB,QAAQ/mB,KAAM0B,EAAEhP,WAGJ,UAAfiT,EAAO0K,OACbnoB,KAAK6+B,QAAQ/mB,KAAM,MAEnB9X,KAAK8T,QAAQ4M,WAAW1gB,KAAKkoB,QAAQ6G,WAAYtR,EAAO+E,KAAKvf,MAAOiH,MAAM,SAAAmB,GACtE,EAAK6c,QAAQH,UAAW,EACxB,EAAKG,QAAQzK,OAAS,QACtBnT,OAAO,SAAAkP,GACP,EAAKqlB,QAAQ/mB,KAAM0B,EAAEhP,a,iCAnG5BhS,GAAoB,mC,iCAApBA,EAAoB,y1BCdjC,4BACE,kCACE,4BAAsB,YAA0B,iBAChD,4BAAoC,YAAiB,iBACrD,gCAUA,8BAgBF,iBACF,kB,MA7B0B,6DACc,oDAC9B,wDAUA,yD,wODNV,GAMa,EAAAA,wB,+DAAAA,EAAoB,E,KANhC,EAAA2E,U,MAAW,CAERC,SAAU,eACVC,YAAa,gCACbC,UAAW,Q,yCAIF6hB,cAAe,CAAF,C,KAArB,EAAA5hB,QACQ2qB,QAAS,CAAF,C,KAAf,EAAA3qB,QACQ4M,MAAO,CAAF,C,KAAb,EAAA5M,QACSshC,QAAS,CAAF,C,KAAhB,EAAAphC,Y,qHEnBL,WAOA,GALA,MACA,MACA,MAEA,MACA,Q,GAGA,O,2GCTE,4BAAqE,YAAW,kB,6BAAX,+C,mDAGnE,0BACE,wCAAiB,gHAAiC,4FAAuC,iBAC3F,iB,iCADmB,8D,mDAEnB,0BACE,sCAAe,gHAAiC,4FAAuC,iBACzF,iB,iCADiB,8D,mDAEjB,0BACE,8CAAuB,gHAAiC,4FAAuC,iBACjG,iB,iCADyB,8D,mDAEzB,0BACE,0CAAmB,gHAAiC,4FAAuC,iBAC7F,iB,iCADqB,8D,yBAXvB,0BACE,8BAGA,8BAGA,8BAGA,8BAGF,kB,6BAZQ,oDAGA,yDAGA,iEAGA,8DDDV,iBAWE,WAAqBqW,EAA2B3F,EAAgChQ,EACtEE,EAA8C+/B,GADnC,KAAAtqB,UAA2B,KAAA3F,aAAgC,KAAAhQ,eACtE,KAAAE,kBAA8C,KAAA+/B,SAJtD,KAAArvB,QAAkB,KAClB,KAAAqD,MAAgB,M,OAMhB,YAAAnS,SAAA,aAGA,YAAAo+B,cAAA,SAAet5B,GACI,SAAVA,EACD/E,KAAKs+B,aAEW,SAAVv5B,EACN/E,KAAKu+B,aAEW,WAAVx5B,GACN/E,KAAKw+B,gBAIb,YAAAF,WAAA,WACwB,aAAft+B,KAAKoS,QACNpS,KAAKoS,MAAQ,QAIrB,YAAAmsB,WAAA,WACwB,QAAfv+B,KAAKoS,MACApS,KAAKmf,cAAcsf,WAIrBz+B,KAAK0+B,eAHL1+B,KAAKoS,MAAQ,WAMI,aAAfpS,KAAKoS,MACXpS,KAAK0+B,eAEgB,qBAAf1+B,KAAKoS,MAE6B,MAAnCpS,KAAKmf,cAAckJ,aACpBroB,KAAKoS,MAAQ,eAGbpS,KAAK0+B,eAGY,iBAAf1+B,KAAKoS,OACXpS,KAAK0+B,gBAIb,YAAAA,aAAA,sBACI1+B,KAAK8T,QAAQoL,kBAAmBlf,KAAKmf,eAAgBjV,MAAM,SAAA2Z,GAEvB,MAA3BA,EAAOiE,kBACR,EAAK1V,MAAQ,mBACb,EAAK+M,cAAgB0E,GAEQ,MAAvBA,EAAOwE,cACb,EAAKjW,MAAQ,eACb,EAAK+M,cAAgB0E,IAGvB,EAAK1V,WAAWgI,OAEhB,EAAKhI,WAAa,EAAKhQ,aAAaiP,KAAM,EAAA0B,sBAAuB,CAC3DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEzB,EAAKH,WAAWI,QAAQQ,QAAU,EAAK1Q,gBAAgByC,OAAQ,oDAC/D,EAAKqN,WAAWI,QAAQS,WAAa,EAAK3Q,gBAAgByC,OAAQ,2CAEzC,EAAKqN,WAAWI,QAAUU,UAAUrO,WAAW,SAAAiD,GACpE,EAAKu6B,OAAOQ,SAAS,CAAC,oCAI9Bt0B,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAAi0B,aAAA,sBACIx+B,KAAK8T,QAAQuL,aAAcrf,KAAKmf,eAAgBjV,MAAM,SAAAmB,GAClD,EAAK8C,WAAWgI,UAChB7L,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAC,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAnG/C9R,GAAyB,oL,iCAAzBA,EAAyB,4QCjBtC,4BACE,8BAEA,8BAcF,kB,MAhBQ,oDAEA,6E,oJDSR,GAKa,EAAAA,6B,+DAAAA,EAAyB,E,KALrC,EAAA0E,U,MAAW,CACRC,SAAU,oBACVC,YAAa,qCACbC,UAAW,Q,qPEff,WAOA,GAJA,MAIA,Q,GACA,M,0JCkBK,0BAAoI,2FAAuB,kBAC1I,6BACF,iB,gCAFmE,0E,mDAGlF,0BAAkI,2FAAuB,gBACxI,6BACF,iB,gCAFmE,wE,qBAMlF,iC,KAAgD,+B,qBAChD,iC,KAA8C,mCDxBnD,iBAeI,WAAqB+6B,EAAkDl6B,EAAsC2V,GAAxF,KAAAukB,sBAAkD,KAAAl6B,eAAsC,KAAA2V,UAPhH,KAAAvF,QAAkB,cAQXvO,KAAK0xB,QAAU5d,EAAQ4d,UACvB1xB,KAAK2xB,aAAe3xB,KAAK0xB,SAAW5d,EAAQ6d,eAClD3xB,KAAK4xB,cAAgB5xB,KAAK0xB,SAAW1xB,KAAK2xB,cAAgB7d,EAAQ+d,gBAElE7xB,KAAK2xB,aAAe3xB,KAAKw/B,cAAc,eAAiBx/B,KAAKw/B,cAAc,U,OAGzE,YAAAv/B,SAAA,aAGH,YAAAu/B,cAAA,SAAcjxB,GACbvO,KAAKuO,QAAUA,EAEA,gBAAZA,EACFvO,KAAKy/B,UAAYz/B,KAAKq4B,oBAAoBv3B,OAAO,qBAE9B,cAAZyN,EACPvO,KAAKy/B,UAAYz/B,KAAKq4B,oBAAoBv3B,OAAO,mBAE9B,WAAZyN,IACPvO,KAAKy/B,UAAYz/B,KAAKq4B,oBAAoBv3B,OAAO,qBAKzC,YAAA0J,MAAP,SAAcD,GACNvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCApC1DtE,GAAiB,sH,iCAAjBA,EAAiB,qmBClB9B,4BACI,4BACA,6BAEA,4BAWI,4BACI,uBACT,4BAEC,4BACC,yBACC,YACD,iBACD,iBAEA,2BACC,6BAGA,6BAGD,iBAEA,6BACC,wCACA,wCACD,iBAEQ,iBACA,wBACJ,iBACR,iBA1CA,kB,MAqBM,yDAK6C,mDAGA,mDAM/B,8DACA,8D,+NDxBpB,GAMa,EAAAA,qB,+DAAAA,EAAiB,E,KAN7B,EAAAsD,U,MAAW,CAERC,SAAU,YACVC,YAAa,6BACbC,UAAW,CAAC,wB,uNEhBhB,WAIA,GAFA,MAEA,QAGA,SAIA,GAHA,MAGA,QACA,SAEA,GADA,OACA,Q,kLCbA,0BACE,0BACE,4BAEI,uBACA,4BAEI,8BACI,8BAA8D,iGAAkC,WAAhG,iBACA,6BACI,4BACJ,iBACA,0BACI,6BACJ,iBACJ,iBAEA,+BACI,+BAA8D,iGAAkC,eAAhG,iBACA,8BACI,8BACJ,iBACA,2BACI,8BACJ,iBACJ,iBAEA,8BACI,iCAA8C,yFAC1C,8BACJ,iBACJ,iBACJ,iBACA,yBACL,iBACD,iBACF,iB,gCA5BuC,wCAAc,yBAC/B,4EASiB,wCAAe,wBAChC,4E,yBA4BE,gCAAoF,YAAuC,kB,uBAApE,uCAA6B,4D,mDANhG,6BACI,+BACI,6BACJ,iBACA,6BACI,gCAAsE,6GAClE,kCACJ,iBACJ,iBACA,wBACJ,iB,iCAL8E,0DAC/B,0D,yBAUnC,gCAAuD,YAAc,kB,uBAAlC,wCAAoB,6C,mDALnE,6BACI,+BAA+C,6BAA4C,iBAC3F,6BACI,gCAAkD,iGAC9C,wBACA,kCACJ,iBACJ,iBACA,wBACJ,iB,iCAN0D,8CAErB,gD,qBAO7B,6B,qBACA,6B,yBAII,gCAA8E,YAAkB,kB,uBAA9C,4CAA4B,6C,qBA+BlF,6B,qBACA,6B,wBAGA,6B,8BACI,qC,wBACJ,6B,8BACI,qC,mDArExB,0BACI,0BACI,mCACI,+BAWA,+BAUA,6BACI,+BACI,oCACA,oCACJ,iBACA,8BACI,iCAA0D,0GACtD,mCACJ,iBACJ,iBACA,yBACJ,iBACA,8BACI,gCAAmD,8BAAwC,iBAC3F,8BACE,qCAAY,mGAAoF,iBAClG,iBAEA,yBACJ,iBACA,8BACI,gCAAiD,8BAAsC,iBACvF,8BACE,qCAAY,iGAAyH,iBACvI,iBAEA,yBACJ,iBACA,8BAEI,gCAAmD,iCAAiB,iBACpE,8BACG,wCAAe,mGAA+B,iBACjD,iBACA,yBACJ,iBACA,8BACI,gCACI,qCACA,qCACJ,iBACA,8BACI,kCAEA,kCAEJ,iBACA,yBACJ,iBAEA,8BACI,yBACA,8BAII,iCAAwE,0FACpE,8BACJ,iBACJ,iBACA,yBACJ,iBACJ,iBACJ,iBACJ,iB,mDArFkB,iDAWuB,4CAYV,uDACA,2DAG+C,wDACzB,0DAQvB,iDAAqB,wBAArB,CAAqB,uBAQrB,+CAAmB,sBAAnB,CAAmB,mBAAnB,CAAmB,sBAAnB,CAAmB,eASf,iDAMH,uDACA,2DAGH,uDAEA,2DAYsC,mDDrGlE,iBAuEC,WAAoBwW,EACXgJ,EACA3e,EACAk6B,EACA95B,EACAmhC,GALW,KAAA5rB,UACX,KAAAgJ,eACA,KAAA3e,eACA,KAAAk6B,sBACA,KAAA95B,cACA,KAAAmhC,aApET,KAAAzrB,YAAqB,IAAIC,KAEzB,KAAAyrB,kBAA4B,EAQ5B,KAAAC,iBAA0B,CACzB,CAAE,SAAY,EAAAC,eAAeC,eAAgB,MAAS9/B,KAAKq4B,oBAAoBv3B,OAAO,6CACtF,CAAE,SAAY,EAAA++B,eAAeE,SAAU,MAAS//B,KAAKq4B,oBAAoBv3B,OAAO,uCAChF,CAAE,SAAY,EAAA++B,eAAeG,YAAa,MAAShgC,KAAKq4B,oBAAoBv3B,OAAO,2CAMpF,KAAAmC,KAAe,KAKf,KAAA4V,UAAkB,KAKlB,KAAAC,QAAyB,KAkBzB,KAAAmnB,YAAsB,EAYtB,KAAAC,WAAqB,EAErB,KAAAC,WAAqB,E,OAUrB,YAAAlgC,SAAA,sBACCD,KAAK0/B,WAAWU,mBAAmB,EAAG,KAAKl2B,MAAK,SAAAm2B,GAE/C,EAAKC,gBAAkBD,EAAiBE,UAEJ,IAAhC,EAAKD,gBAAgBr/B,SACxB,EAAKg/B,YAAa,EAClB,EAAKN,kBAAmB,GAGzB,EAAKO,WAAY,KAEf51B,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZvK,KAAK8T,QAAQS,oBAAmB,GAAOrK,MAAK,SAAAuB,GAI3C,IAFA,IAAM+I,EAAa,GAEVhR,EAAI,EAAGA,EAAIiI,EAAMxK,SAAUuC,EAAG,CACtC,IAAMwI,EAAOP,EAAMjI,GACbqH,EAAUmB,EAAKnB,QACf4J,EAAiC,MAAtBzI,EAAK3I,cAAwB2I,EAAK3I,cAAgB2I,EAAK/I,MAEpE,EAAK1E,YAAYsE,iBAAiBgI,IAAY,EAAKtM,YAAYwE,kBAAkB8H,EAAS4J,KAC7FD,EAAWxQ,KAAKyH,EAAMjI,IAIxB,EAAKiI,MAAQ+I,KACXlK,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZ,IAAIi2B,EAASnjB,IAAM,2BACC,cAAhBrd,KAAK2vB,SACR6Q,EAASnjB,IAAM,0CAKhB,IAAIhe,EAA+B,CAClCohC,WAAY,EACZC,mBAAmB,EACnBvM,IAAKqM,GAGNxgC,KAAK2gC,SAAW,IAAI,EAAAC,aAAavhC,GAEjCW,KAAK2gC,SAASE,gBAAkB,SAACC,EAAeC,GAC/CA,EAAKn/B,OAAO,OAAQ,EAAKqB,MACzB89B,EAAKn/B,OAAO,YAAa,EAAKu+B,WAER,MAAlB,EAAKtnB,WACRkoB,EAAKn/B,OAAO,YAAa,EAAKiX,WAEX,MAAhB,EAAKC,SACRioB,EAAKn/B,OAAO,UAAW,EAAKkX,SAEzB,EAAKkoB,gBACRD,EAAKn/B,OAAO,WAAY,EAAKo/B,iBAG/BhhC,KAAK2gC,SAASM,mBAAqB,SAACH,GACnC,EAAKhkB,aAAab,SAEnBjc,KAAK2gC,SAASO,eAAiB,SAACzzB,EAAWpC,EAAeub,EAAalJ,GACtE,EAAKyjB,QAAQ9gC,cAAc7C,MAAQ,GACnC,EAAKsf,aAAac,YAEnB5d,KAAK2gC,SAASS,cAAgB,SAAC3zB,EAAWpC,EAAkBub,EAAgBlJ,GAC3E,IAAMyB,EAAgBlH,KAAKC,MAAM7M,GAEjC8T,EAAc8gB,WAAa,EAAKA,WAGhC,IADA,IAAIoB,EAAiC,KAC5B79B,EAAI,EAAGA,EAAI,EAAK88B,gBAAgBr/B,SAAUuC,EAAG,CACrD,IAAI89B,EAAsB,EAAKhB,gBAAgB98B,GAE3C89B,EAAI5sB,MAAQ,EAAKwR,mBACpBmb,EAAiBC,GAInBniB,EAAc+G,iBAAmB,EAAKA,iBACtC/G,EAAckiB,eAAiBA,EAEX,cAAhB,EAAK1R,OACR,EAAKxhB,WAAa,EAAKhQ,aAAaiP,KAAK,EAAAlV,wBAAyB,CAAEmW,UAAU,EAAMC,qBAAqB,IAGzG,EAAKH,WAAa,EAAKhQ,aAAaiP,KAAK,EAAA3U,0BAA2B,CAAE4V,UAAU,EAAMC,qBAAqB,IAG5G,EAAKH,WAAWI,QAAQ4Q,cAAgBA,GAEzCnf,KAAK2gC,SAASY,YAAc,SAAC9zB,EAAWpC,EAAkBub,EAAgBlJ,GACzE,IAAMlT,EAAQyN,KAAKC,MAAM7M,GAEzB,EAAKb,MAAM,CAAEA,MAAOA,MAItB,YAAAoS,QAAA,WAE4B,MAAvB5c,KAAK2gC,SAASa,OAAiBxhC,KAAK2gC,SAASa,MAAMvgC,OAAS,EAC/DjB,KAAK2gC,SAASc,YAGdzhC,KAAKwK,MAAM,CACVuE,QAAS/O,KAAKq4B,oBAAoBv3B,OAAO,mBACzC0J,MAAO,MAKV,YAAAk3B,gBAAA,SAAgB38B,EAAOiH,GAErBhM,KAAKigC,WADO,aAATj0B,GAQL,YAAA0b,OAAA,WACC1nB,KAAK2/B,kBAAmB,GAGzB,YAAA/X,OAAA,WACC5nB,KAAK2/B,kBAAmB,GAGzB,YAAA5P,YAAA,SAAYjX,GAERA,IAAY,EAAAmX,QACdjwB,KAAK8Y,QAAU,KAGf9Y,KAAK8Y,QAAU,EAAAmX,SAKV,YAAAzlB,MAAP,SAAaD,GACZvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCA3NhD/D,GAAqB,wO,iCAArBA,EAAqB,qD,GAAA,K,8kFCvBlC,gCAsCA,iC,MAtCM,mFAsCA,4F,+rBDrBN,GAMa,EAAAA,yB,+DAAAA,EAAqB,E,KANjC,EAAA+C,U,MAAU,CAEVC,SAAU,eACVC,YAAa,gCACbC,UAAW,CAAC,2B,wKA8CZ6jC,QAAS,CAAF,C,KADN,EAAAxvB,U,MAAU,YAIXge,OAAQ,CAAF,C,KADL,EAAApyB,W,sHEtEF,WAQA,GAPA,MACA,MAKA,OACA,QAEA,S,GACA,M,gGCEQ,4BAAqE,YAAW,kB,6BAAX,+C,sBAY7D,4BACI,6BACI,6BACI,2BAA0B,6BAA+D,iBAC7F,iBACJ,iBACJ,kB,sBAcoB,2BAA4B,6BAA6C,kB,qBAGvE,6B,qBACA,6B,mDAYF,gCAAyC,+JACrC,6BACJ,kB,mDAtBR,4BACI,4BACE,2BACE,YACA,gCACA,2BACE,kBACA,oCACA,oCACA,kBACF,iBACF,iBACF,iBACA,6BACI,iCAAsB,iHAClB,8BACJ,iBACA,iCAAsB,6GAClB,8BACJ,iBACA,mCAGJ,iBACJ,iB,0BAtBS,8EACD,qDACO,+CAGM,4DACA,6DAYJ,6C,yBA5B7B,4BACI,+BACI,4BACI,yBACI,4BAAwB,6BAA2C,iBACvE,iBACJ,iBACA,4BACI,+BAyBJ,iBACJ,iBACJ,kB,uCA3BiC,gD,mDA8BzB,0BACI,gCAAsB,8HAClB,6BACJ,iBACJ,kB,yBA5DhB,4BACI,4BACI,4BACI,6BACI,6BACI,yBAAI,YAAa,iBACrB,iBACJ,iBACJ,iBAEA,+BAQA,8BAoCA,6BACI,8BACI,gCAKJ,iBACJ,iBACJ,iBACJ,kB,uBA3DwB,4CAKV,gEAQD,8DAsCS,6CD1D9B,iBAcC,WAAmBuW,EAAkC3V,EAAsCigC,EAAwB//B,GAAhG,KAAAyV,UAAkC,KAAA3V,eAAsC,KAAAigC,SAAwB,KAAA//B,kBARnH,KAAA0Q,QAAkB,K,OAUlB,YAAA9O,SAAA,sBAECD,KAAK8T,QAAQ4R,sBAAsBxb,MAAK,SAAAmB,GACvC,EAAK8rB,KAAO9rB,EAAS8rB,QAEnB7sB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAo3B,SAAA,SAAS93B,GACR7J,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA1S,sBAAuB,CAC/D0T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQnD,KAAKvB,GAC7B7J,KAAKmO,WAAWI,QAAQ6F,OAAQ,EAChCpU,KAAKmO,WAAWI,QAAQ8F,mBAAmBzT,WAAU,SAAC8jB,GACrD,IAAM7V,EAAM,CACXhH,MAAO6c,EAAK/P,aAAavI,eACzBsI,IAAKgQ,EAAKhQ,IACVktB,WAAYld,EAAKkd,WACjBC,eAAgBnd,EAAKmd,eACrBpsB,SAAUiP,EAAKjP,SACfqsB,MAAOpd,EAAKod,MACZC,KAAMrd,EAAKqd,KACXrsB,WAAYgP,EAAKhP,YAGlB7L,EAAImqB,MAAMhwB,KAAK6K,OAIjB,YAAAmzB,OAAA,SAAO/+B,GACNjD,KAAKo+B,OAAOQ,SAAS,CAAC,8BAA+B37B,KAGtD,YAAAstB,OAAA,SAAO0R,GAAP,WACCjiC,KAAK8T,QAAQkR,cAAcid,EAAKvtB,KAAKxK,MAAK,SAAAwa,GAEzC,EAAKvW,WAAa,EAAKhQ,aAAaiP,KAAK,EAAA1S,sBAAuB,CAC/D0T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtB,EAAKH,WAAWI,QAAQc,MAAO,EAC/B,EAAKlB,WAAWI,QAAQ4F,UAAYuQ,EAAKod,MACzC,EAAK3zB,WAAWI,QAAQ+F,OAASoQ,EACjC,EAAKvW,WAAWI,QAAQ6F,OAAQ,EAEhC,EAAKjG,WAAWI,QAAQ8F,mBAAmBzT,WAAU,SAAAshC,GACpDD,EAAKp6B,MAAQq6B,EAAIvtB,aAAavI,eAC9B61B,EAAKvsB,WAAawsB,EAAIxsB,iBAErBpL,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA43B,SAAA,SAASt4B,EAAsB6a,GAA/B,WACC1kB,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO4jB,EAAK7c,MAAQ,IACnH7H,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,uBACjEd,KAAKmO,WAAWI,QAAQvC,KAAO,SAE/BhM,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAC3C,EAAKiQ,QAAQ+Q,iBAAiBH,EAAKhQ,KAAKxK,MAAK,SAAAmB,GAC5CxB,EAAImqB,MAAQnqB,EAAImqB,MAAMl1B,QAAO,SAACtB,EAAO2M,EAAO+Q,GAC3C,OAAO1d,EAAMkX,MAAQgQ,EAAKhQ,UAGzBpK,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAC,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA/FrCjQ,GAA0B,wJ,iCAA1BA,EAA0B,4kDClBvC,4BACI,4BACA,6BAGA,4BAEI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,8BAEA,+BAiEJ,iBACJ,kB,MApEc,oDAE2B,gD,qJDFzC,GAKa,EAAAA,8B,+DAAAA,EAA0B,E,KALtC,EAAA6C,U,MAAU,CACVC,SAAU,sBACVC,YAAa,uCACbC,UAAW,CAAC,kC,gPEhBb,WAEA,GADA,MACA,O,+BAGA,aAcI,WAAoB6Q,GAAA,KAAAA,a,OAEpB,YAAAlO,SAAA,WACID,KAAKoiC,SAAW,IAAI,EAAAtwB,SAGxB,YAAAuwB,QAAA,WACIriC,KAAKmO,WAAWgI,OAChBnW,KAAKoiC,SAAS/0B,KAAMrN,KAAK2vB,S,iCAjBpB/0B,GAA0B,oC,iCAA1BA,EAA0B,4sBCVvC,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,6BACI,+BACI,4BACI,4BACI,4BACI,4BACJ,iBAEA,gCAAsD,+DAClD,yBACA,gCACI,6BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBAEA,6BACI,6BACI,8BACI,iCAAsB,wCAAS,EAAAuT,WAAA,UAE3B,4BACI,8BACJ,iBACJ,iBACA,iCAAsB,wCAAS,EAAAk0B,aAE3B,4BACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,MAhC0E,iDAqBR,wE,wPD/BlE,GAKa,EAAAznC,8B,+DAAAA,EAA0B,E,KALtC,EAAAuC,U,MAAW,CACRC,SAAU,sBACVC,YAAa,uCACbC,UAAW,Q,iKERf,WAKA,GAJA,MAEA,MAEA,MAWA,SAOA,GAFA,OACA,MACA,QAEA,S,kHCoEsB,sB,qBACA,sB,qBACA,sB,qBACA,sB,sEAGE,yBACE,6BAKF,kB,uCAJG,iL,yBAKH,yBACE,6BAKF,kB,uCAJG,iL,4DAKH,yBACE,6BACF,kB,uCADiD,0E,yBAEjD,yBACE,6BAKF,kB,uCAJG,+F,yBAKH,yBACE,6BAKF,kB,uCAJG,+F,mHAcL,4BAA2Q,YAAyB,kB,uCAA/N,wIAAsM,sD,mDAEzQ,gCAAiH,mIAAiC,eAChJ,6BACF,iB,2CAFsB,wD,mDAGtB,gCAAiH,mIAAiC,eAChJ,6BACF,iB,2CAFsB,wD,mDAGtB,gCAAgH,mIAAiC,cAC/I,6BACF,iB,2CAFsB,uD,yBAPxB,2BACE,kCAGA,kCAGA,kCAGF,kB,wCAT2E,iEAGA,iEAGD,kE,mDAU1E,6BACE,+BAA4C,6BAAmE,iBAC/G,kCAAsG,sHAA+C,iBACvJ,iB,yEAFS,6EACG,4EAA4F,4C,uFAqBxG,2BACI,6BACJ,kB,uCAFwM,uG,mDAOxM,6BACE,+BAA+C,6BAAkE,iBACjH,kCAAiH,qHAAsG,iBACzN,iB,yEAFS,gFACG,+EAAuG,0CAAoC,+D,mDAGvJ,6BACM,+BAA0C,6BAAyE,iBACnH,+BAA6F,qHAA7F,iBACN,iB,yEAFa,2EACY,0EAA0E,0CAAoC,+D,qBAK7H,6B,qBACA,6B,yBAHV,0BACM,8BACI,oCACA,oCAAyG,iBAC7G,iBACA,4BAAQ,YAAyB,iBACtC,kB,uCAJoB,kEACA,kEAEP,8D,mDAUN,4BACE,2BAAG,8JAA+C,YAAgB,iBAClE,2BAAG,4JAAwH,iBAC7H,iB,0BAFoD,gD,yBAH1D,6BACE,4BACI,8BAIJ,iBACF,kB,uCAL0B,oD,sBAM1B,4BACE,8BACF,kB,mDAEA,8BAEI,+BAEA,iCAA6D,+H,uBAC3D,8BACF,iBACJ,iB,iCALiK,mDAErE,oG,2KA5IpG,6BACE,6BACE,6BACE,sBACA,4BAA6E,YAAiB,iBAChG,iBACA,6BACE,6BACA,6BACA,6BACA,8BAEA,6BACE,+BAOA,+BAOA,+BAGA,+BAOA,+BAOA,0BACE,8BACA,+BACI,aACJ,iBACF,iBACF,iBACF,iBACA,8BACE,+BACA,iCAWF,iBACF,iBAEA,8BAEE,8BACE,gCAKA,iCAAsB,uJ,wBACpB,8BACF,iBAEA,2BACI,+BACE,8BAAkF,kBACpF,iBACA,6BAAO,aAAa,iBACxB,iBAEA,2BACI,+BACE,8BAAkF,kBACpF,iBACA,6BAAO,aAAmB,iBAC9B,iBAEA,8BAIF,iBAEA,8BACE,gCAKA,gCAKA,gCAQF,iBAEA,8BACE,2BACE,6BAAO,8BAAoE,iBAC3E,gCAQA,8BAIA,gCAQF,iBAEF,iBACF,iBACF,iB,6EApJwD,yIAGa,wJACc,gDAGzE,kHACA,kHACA,sGACA,yGAGG,kHAOA,kHAOA,4GAGA,sGAOA,yGAUC,8EAMH,iEACE,oFAiBD,qFAK2H,gFAAsD,iEAQ5K,4CAOA,kDAGP,2KAOE,oFAKA,oFAKA,uFAaE,yDAQF,2DAIE,+E,mDAgBZ,2BACE,iCAAoE,mI,uBAClE,8BACF,iBACA,iCAAoE,kI,uBAClE,8BACF,iBACA,iCAAoE,gI,uBAClE,8BACF,iBACF,iB,2CATU,qEAA6C,kEAG7C,qEAA6C,kEAG7C,qEAA6C,6E,mDARzD,8BACE,kCAYA,4BAA0D,kK,uBACxD,8BACF,iBAEF,iB,2CAhBS,oFAYJ,2EAA2I,gF,yBA3KxJ,4BACE,4BAEE,6BAEE,4BAEE,iCAuJA,+BAkBF,iBAEF,iBAEF,iBACF,kB,2DArLI,kCAO4B,iDAuJlB,uH,8FArLd,4BAAsE,mHACpE,4BACE,yBAAI,6BAAQ,YAAiB,iBAAS,iBACxC,iBACA,4BACE,yBAAI,6BAAQ,YAAW,iBAAS,iBAClC,iBACA,4BACG,+BACG,aACH,iBACH,iBACA,6BACE,6BACG,8BAAQ,aAAmB,iBAC9B,iBACF,iBACA,6BACE,uBACF,iBACF,iBAGA,+B,8CAvBsB,kEAEN,gDAGA,0CAIR,wEAIA,uJACO,kDASG,wDDlD1B,kBA8DC,WAAoBwW,EAAuC3V,EAAsCI,EAAkC85B,EACxHvb,EAAoCshB,GAD3B,KAAAtqB,UAAuC,KAAA3V,eAAsC,KAAAI,cAAkC,KAAA85B,sBACxH,KAAAvb,eAAoC,KAAAshB,SA3B/C,KAAAkE,WAAanI,OAAOoI,KAIpB,KAAAC,SAA4B,GAI5B,KAAAC,QAAiB,GAMjB,KAAAC,eAAyB,MAEzB,KAAAC,qBAA8B,EAa7B3iC,KAAKyiC,QAAU,CACd,CAAEta,KAAMkQ,EAAoBv3B,OAAO,uBAAwBwkB,KAAM,YAAasd,UAAU,GACxF,CAAEza,KAAMkQ,EAAoBv3B,OAAO,6BAA8BwkB,KAAM,aAAcsd,UAAU,EAAOrgC,MAAO,KAC7G,CAAE4lB,KAAMkQ,EAAoBv3B,OAAO,yBAA0BwkB,KAAM,iBAAkBsd,UAAU,IAGhG5iC,KAAK6iC,U,OAGN,YAAA5iC,SAAA,sBAGKZ,EAA+B,CAClCohC,WAAY,EACZC,mBAAmB,EACnBvM,IALY9W,IAAM,qCAQnBrd,KAAK2gC,SAAW,IAAI,EAAAC,aAAavhC,GAEjCW,KAAK2gC,SAASE,gBAAkB,SAACC,EAAeC,GAC/CA,EAAKn/B,OAAO,YAAa,EAAKkhC,iBAE/B9iC,KAAK2gC,SAASM,mBAAqB,SAACH,GACnC,EAAKhkB,aAAab,SAEnBjc,KAAK2gC,SAASO,eAAiB,SAACzzB,EAAWpC,EAAeub,EAAalJ,GACtE,EAAKyjB,QAAQ9gC,cAAc7C,MAAQ,GACnC,EAAKsf,aAAac,YAEnB5d,KAAK2gC,SAASS,cAAgB,SAAC3zB,EAAWpC,EAAeub,EAAgBlJ,GAExE,IAAI,IAAIla,EAAE,EAAGA,EAAE,EAAK+a,QAAQtd,OAAQuC,IAAI,CACvC,IAAIia,EAAS,EAAKc,QAAQ/a,GAE1B,GAAGia,EAAO/I,MAAQ,EAAKouB,eAAe,CAErCrlB,EAAOslB,UAAU/+B,KAAKiU,KAAKC,MAAM7M,IAEjC,SAKHrL,KAAK2gC,SAASY,YAAc,SAAC9zB,EAAWpC,EAAkBub,EAAgBlJ,GACzE,IAAMlT,EAAQyN,KAAKC,MAAM7M,GAEzB,EAAKb,MAAM,CAAEA,MAAOA,MAItB,YAAAw4B,SAAA,SAASvlB,GACRzd,KAAK8iC,eAAiBrlB,EAAO/I,IAEF,MAAvB1U,KAAK2gC,SAASa,OAAiBxhC,KAAK2gC,SAASa,MAAMvgC,OAAS,EAC/DjB,KAAK2gC,SAASc,YAGdzhC,KAAKwK,MAAM,CACVuE,QAAS/O,KAAKq4B,oBAAoBv3B,OAAO,mBACzC0J,MAAO,MAKV,YAAAy4B,eAAA,SAAerkB,EAAmBskB,GACjCC,OAAOC,SAASC,KAAOhmB,IAAM,iDAAmDuB,EAAzDvB,UAAsF6lB,GAG9G,YAAAI,aAAA,SAAa1kB,EAAmBskB,GAAhC,WACCljC,KAAK8T,QAAQ4K,WAAWE,EAAWskB,GAASh5B,MAAK,SAAAmB,GAGhD,IADA,IAAIk4B,GAAU,EACN//B,EAAE,EAAGA,EAAE,EAAK+a,QAAQtd,OAAQuC,IAAI,CACvC,IAAIia,EAAS,EAAKc,QAAQ/a,GAC1B,GAAGia,EAAO/I,MAAQkK,EAAU,CAE3B,IAAI,IAAIzU,EAAM,EAAGA,EAAMsT,EAAOslB,UAAU9hC,OAAQkJ,IAAQ,CAEvD,GADUsT,EAAOslB,UAAU54B,GACpBuK,MAAQwuB,EAAQ,CACtBK,EAASp5B,EACT,OAICo5B,GAAU,GACZ9lB,EAAOslB,UAAUp7B,OAAO47B,EAAQ,GAGjC,WAIAj5B,OAAM,SAACe,GACT,EAAKb,MAAMa,OAIN,YAAAm4B,aAAP,SAAoBhqB,GAChBxZ,KAAK2iC,oBAAsBnpB,GAG/B,YAAAqpB,QAAA,sBAEC7iC,KAAK8T,QAAQmK,eAAe,OAAO/T,MAAK,SAAAs4B,GAEvC,EAAKA,SAAWA,KAEdl4B,OAAM,SAACe,GACT,EAAKb,MAAMa,OAMb,YAAAo4B,SAAA,SAASrP,GAAT,WAICp0B,KAAK8T,QAAQiJ,cAAcqX,EAASA,SAAS,GAAG1f,KAAKxK,MAAK,SAAAqU,GAEzD,EAAKA,QAAUA,KAEbjU,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAm5B,UAAA,SAAUC,GAAV,WAEsB,MAAjBA,GAEH3jC,KAAK8T,QAAQsK,QAAQulB,EAAcjvB,KAAKxK,MAAK,SAAA05B,GAC5CD,EAAgBC,EAGhB,EAAKf,UAEL,IAAM10B,EAAa,EAAKhQ,aAAaiP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBH,EAAWI,QAAQS,WAAa,EAAKqpB,oBAAoBv3B,OAAO,qDAChEqN,EAAWI,QAAQowB,WAAa,EAAKtG,oBAAoBv3B,OAAO,qDAChEqN,EAAWI,QAAQQ,QAAU,EAAKspB,oBAAoBv3B,OAAO,kDAE7DqN,EAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAEtC,IAAIggC,EAAiB,EAAKC,6BAGzB,EAAK1F,OAAOQ,SAAS,CAAC,6BAA8BiF,EAAenzB,WAAW8e,IAAKqU,EAAe//B,cAAcb,aAOhHqH,OAAM,SAACe,GACR,EAAKb,MAAMa,OAKf,YAAAy4B,2BAAA,WACC,IAAI,IAAItgC,EAAE,EAAGA,EAAExD,KAAKue,QAAQtd,OAAQuC,IAAI,CACvC,IAAIia,EAASzd,KAAKue,QAAQ/a,GAE1B,GAAGia,EAAOsmB,eAAe,iBACxB,OAAOtmB,EAAsB,cAI/B,OAAO,MAGR,YAAA0kB,SAAA,SAASwB,GAAT,WAEC,GAAqB,MAAjBA,EAAuB,CAC1B,IAAMx1B,EAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBH,EAAWI,QAAQvC,KAAO,SAC1BmC,EAAWI,QAAQS,WAAahP,KAAKq4B,oBAAoBv3B,OAAO,6CAChEqN,EAAWI,QAAQQ,QAAU/O,KAAKq4B,oBAAoBv3B,OAAO,yCAE7DqN,EAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GACtC,EAAKiQ,QAAQuK,OAAOslB,EAAcjvB,KAAKxK,MAAK,SAAA85B,GAG3C,IADA,IAAIt4B,GAAO,EACHlI,EAAE,EAAGA,EAAE,EAAKg/B,SAASvhC,OAAQuC,IAAI,CAExC,GADU,EAAKg/B,SAASh/B,GACjBkR,MAAQsvB,EAAiB,CAC/Bt4B,EAAMlI,EACN,OAICkI,GAAO,GACT,EAAK82B,SAAS76B,OAAO+D,EAAK,GAG3B,EAAKm3B,aACHv4B,OAAM,SAACe,GACT,EAAKb,MAAMa,WAMf,YAAAwS,4BAAA,SAA4BJ,GAA5B,WAICzd,KAAK8T,QAAQ+J,4BAA4BJ,GAAQvT,MAAK,SAAAmB,GACrDoS,EAAOwmB,cAA2C,YAA1BxmB,EAAOymB,eAAgC,EAAK3lC,YAAY4lC,cAAgB,MAG9F75B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA65B,aAAA,SAAaT,GAAb,WAEsB,MAAjBA,GACgB3jC,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGXC,QAAQU,UAAUrO,WAAU,SAAAiD,GACtC,EAAKiQ,QAAQ0K,kBAAkBmlB,EAAcjvB,IAAK,EAAK6J,SAASrU,MAAK,SAAAqU,GACpE,EAAKA,QAAUA,KACbjU,OAAM,SAACe,GACT,EAAKb,MAAMa,UAOf,YAAAg5B,YAAA,SAAYV,GAAZ,WACsB,MAAjBA,GACgB3jC,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGXC,QAAQU,UAAUrO,WAAU,SAAAiD,GACtC,EAAKiQ,QAAQwK,iBAAiBqlB,EAAcjvB,IAAK,EAAK6J,SAASrU,MAAK,SAAAqU,GACnE,EAAKA,QAAUA,KAIbjU,OAAM,SAACe,GACT,EAAKb,MAAMa,UAMR,YAAAb,MAAP,SAAaD,GACZvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,eAG5D,YAAAmmC,eAAA,SAAen6B,EAAey5B,GAC7B,OAAOA,EAAQlvB,KAGhB,YAAA6vB,OAAA,SAAOx/B,EAAY2P,GAEb3P,EAAM6D,OAAO47B,cAAcC,UAAUC,SAAS,QAAW3/B,EAAM6D,OAAO67B,UAAUC,SAAS,SACzF1kC,KAAK2kC,WAAajwB,EACrB1U,KAAK2kC,SAAW,MAGhB3kC,KAAK2kC,SAAWjwB,EAChB1U,KAAKyjC,SAAS,CAAErP,SAAU,CAAC,CAAE1f,IAAKA,SAKrC,YAAA5V,OAAA,SAAO8lC,GAAP,WAEC5kC,KAAK8T,QAAQmK,eAAe2mB,GAAU16B,MAAK,SAAAs4B,GAC1C,EAAKA,SAAWA,KACdl4B,OAAM,SAACe,GACT,EAAKb,MAAMa,MAGZrL,KAAK0iC,eAAiBkC,GAGvB,YAAAC,gBAAA,SAAgBpnB,EAAwBmJ,GAAxC,WACoB5mB,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAChEV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAKXC,QAAQU,UAAUrO,WAAU,SAAAiD,GACtC4Z,EAAOymB,eAAiBtd,EAExB,EAAK/I,4BAA4BJ,OAInC,YAAAqnB,yBAAA,SAAyBrnB,GAUxB,OARIA,EAAOsnB,WAAWC,SAAS,0BAA4BvnB,EAAOsnB,WAAWC,SAAS,yBAQ/EvnB,GAGR,YAAAwnB,iBAAA,SAAiBxnB,EAAaynB,GAE7BllC,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAAjT,2BAA4B,CACpEiU,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQ42B,UAAU1nB,GAASynB,EAAGE,YAAYV,SAAS,mBAEpE,YAAAxrB,WAAA,SAAWG,GACV,OAAOrZ,KAAKq4B,oBAAoB/e,qBAAqBD,IAGtD,YAAA8qB,YAAA,WACC,OAAOnkC,KAAKzB,YAAY4lC,e,iCAvXb1sC,GAAqB,oO,iCAArBA,EAAqB,sD,GAAA,K,orNC/ClC,4BACE,4BACE,4BAEE,0BAAmB,wCAAS,EAAAqH,OAAO,UACjC,4BACF,iBACA,0BAAmB,wCAAS,EAAAA,OAAO,cACjC,4BACF,iBACA,0BAAmB,wCAAS,EAAAA,OAAO,eACjC,4BACF,iBACA,0BAAmB,wCAAS,EAAAA,OAAO,eACjC,6BACF,iBAEF,iBAEA,uBAEF,iBACF,iBAEA,6BACE,6BAEA,gCACE,6BACE,6BACE,6BAAqC,8BAA6D,iBAClG,6BAAqC,8BAAoD,iBACzF,6BAAqC,8BAAkE,iBACvG,6BAAqC,8BAAwD,iBAE7F,qBACF,iBACF,iBACI,6BACF,2CAgNF,iBACF,iBACA,iBACF,kB,MAtPiD,2FAGI,+FAGC,gGAGA,gGA0BrB,mDAAoB,mC,mzEDpBxC,CACX,CACC,EAAA6U,QAAQ,YAAa,CACpB,EAAAC,WAAW,SAAU,CACpB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,QAKb,EAAAtH,QAAQ,SAAU,CACjB,EAAAC,WAAW,SAAU,CACpB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,kB,EA5Bb,GAkCa,EAAAzb,0B,+DAAAA,GAAqB,E,KAlCjC,EAAA0F,U,MAAU,CAEVC,SAAU,gBACVC,YAAa,iCACbC,UAAW,CAAC,uBACZ+nC,cAAe,EAAAC,kBAAkBC,KACjC1xB,WAAY,CACX,CACC,EAAAF,QAAQ,YAAa,CACpB,EAAAC,WAAW,SAAU,CACpB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,QAKb,EAAAtH,QAAQ,SAAU,CACjB,EAAAC,WAAW,SAAU,CACpB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,oB,oKAgCZiuB,QAAS,CAAF,C,KADN,EAAAxvB,U,MAAU,e,sHExFZ,W,GACA,M,8GCQY,2DAA2K,iGAA2C,iB,gCAA3C,gCAAmB,wB,mDAC9L,0DAA+J,iGAA2C,iB,gCAA3C,gCAAmB,wB,mDAClL,6CAA+F,iGAA2C,iB,gCAA3C,gCAAmB,wBDH9H,iBA0BI,WAAoBxD,GAAA,KAAAA,a,OAVpB,YAAAg3B,UADA,SACW1nB,EAAatJ,GACtBnU,KAAKyd,OAASA,EACdzd,KAAKmU,SAAWA,GAUlB,YAAAlU,SAAA,aAGA,YAAAkxB,OAAA,WAC0B,MAAjBnxB,KAAKwlC,UACNxlC,KAAKwlC,SAASC,UAGI,MAAjBzlC,KAAK0lC,UACN1lC,KAAK0lC,SAASD,UAGI,MAAjBzlC,KAAK2lC,UACN3lC,KAAK2lC,SAASF,UAGlBzlC,KAAKmO,WAAWgI,QAGpB,YAAAksB,QAAA,WACIriC,KAAKmO,WAAWgI,Q,iCA3CXhc,GAA0B,oC,iCAA1BA,EAA0B,4D,GAAA,M,2rBCbvC,4BAOI,4BACI,4BACI,2DACA,0DACA,4CACJ,iBACJ,iBAEA,oBACA,4BACI,4BACI,4BACI,gCAAsB,wCAAS,EAAAg3B,YAC3B,4BAAO,6BACP,iBACJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAlByD,6JACD,kJACd,gG,oBDH1C,GAKa,EAAAh3B,8B,+DAAAA,EAA0B,E,KALtC,EAAAgD,U,MAAW,CACRC,SAAU,sBACVC,YAAa,uCACbC,UAAW,Q,0CAQckoC,SAAU,CAAF,C,KAAhC,EAAA7zB,U,MAAW,cACa+zB,SAAU,CAAF,C,KAAhC,EAAA/zB,U,MAAW,cACag0B,SAAU,CAAF,C,KAAhC,EAAAh0B,U,MAAW,cAGZwzB,UAAS,E,KADR,EAAA5nC,W,wHEvBL,WAEA,GADA,MACA,OACA,O,6DCAQ,yBACI,4BACJ,kB,mDAGJ,wCAME,uGAED,iB,gCANC,sCAAuB,gCAAvB,CAAuB,6CAAvB,CAAuB,kCAAvB,CAAuB,wBDG7B,iBAyCC,WAAmB4Q,GAAA,KAAAA,aAFnB,KAAAwL,gBAA0B,E,OAI1B,YAAA1Z,SAAA,WACCD,KAAK4Z,yBAA2B,IAAI,EAAA9H,SAGrC,YAAAyc,gBAAA,SAAgB7U,GAEU,MAArBA,GACH1Z,KAAK4Z,yBAAyBvM,KAAKqM,GAGpC1Z,KAAKmO,WAAWgI,Q,iCA7BL5c,GAA4B,oC,iCAA5BA,EAA4B,iF,0aCrCzC,4BAEI,4BACI,6BAGJ,iBAEA,0CASJ,kB,MAda,gDAMN,wD,6xBDSM,CACX,CACC,EAAAoa,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,YAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,a,EAjBhB,GAwBa,EAAA1hB,gC,+DAAAA,EAA4B,E,KAxBxC,EAAA4D,U,MAAU,CACVC,SAAU,wBACVC,YAAa,yCACbC,UAAW,CAAC,+BACZqtB,KAAM,CAAE,eAAgB,QACxB9W,WAAY,CACX,CACC,EAAAF,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,YAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,e,0CASN9G,SAAU,CAAF,C,KAAhB,EAAA5W,W,0HEvCF,W,OAEA,2B,OAKI,YAAAqoC,UAAA,SAAUC,EAAc/mC,GACpB,OAAK+mC,GAAU/mC,EAIR+mC,EAAM/mC,QAAO,SAAA2O,GAAQ,OAA+B,IAA/B3O,EAAO0N,QAAQiB,EAAKxK,SAHrC4iC,G,iCAHNnsC,I,qEAAAA,EAA8B,U,EAJ3C,GAIa,EAAAA,kC,+DAAAA,EAA8B,E,KAJ1C,EAAAosC,K,MAAK,CACF3d,KAAM,mCACN4d,MAAM,M,kICJV,WAOA,GANA,MAIA,MAEA,Q,sFCUY,uCDNZ,iBAeI,WAAqB1N,EAAkDl6B,EAAsC2V,GAAxF,KAAAukB,sBAAkD,KAAAl6B,eAAsC,KAAA2V,UACzG9T,KAAK0xB,QAAU5d,EAAQ4d,UACvB1xB,KAAK2xB,aAAe3xB,KAAK0xB,SAAW5d,EAAQ6d,eAClD3xB,KAAK4xB,cAAgB5xB,KAAK0xB,SAAW1xB,KAAK2xB,cAAgB7d,EAAQ+d,gBAClE7xB,KAAKsW,kBAAoBxC,EAAQuD,oB,OAG/B,YAAApX,SAAA,aAIO,YAAAuK,MAAP,SAAcD,GACNvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCArB1DrE,GAA0B,sH,iCAA1BA,EAA0B,iTCjBvC,4BACE,4BACA,6BAEA,4BAEE,4BACE,4BACE,0BACE,4BACE,yBAAI,YAAa,iBACnB,iBAEA,6BAEE,gCAEA,iDACF,iBACF,iBAEF,iBACF,iBACF,iBACF,kB,MAdgB,gDAOoB,0D,2MDNpC,GAMa,EAAAA,8B,+DAAAA,EAA0B,E,KANtC,EAAAqD,U,MAAW,CAERC,SAAU,sBACVC,YAAa,uCACbC,UAAW,CAAC,kC,sNEfhB,WAQA,GALA,MAIA,OACA,QAEA,S,uFCGc,6BACE,YAEA,0BAGF,kB,qDALE,qDAGE,0HAA4G,oC,mDAMlH,4BACE,6BACI,6BACI,gCAA+B,2IAC3B,6BACJ,iBACJ,iBACJ,iBACF,kB,yBA3BN,4BACE,4BACE,4BACE,YACF,iBACF,iBACA,4BACE,4BACE,4BACE,8BAQF,iBAEA,8BASF,iBACF,iBACF,kB,2CA3BM,qDAM4E,iDAU1D,iDDX9B,iBA8BC,WAAoBa,EAAsCG,GAAtC,KAAAH,eAAsC,KAAAG,kBArBhD,KAAAyY,MAAQ,IAAI,EAAA7Z,aAEb,KAAAkW,SAAmB,EACnB,KAAAhE,UAAoB,EAIpB,KAAAwH,QAAgB,IAAI1C,KAEpB,KAAA+C,aAAuB,EAEtB,KAAAD,gBAAkB,IAAI,EAAA9Z,aAIhC,KAAA8oC,aAAsB,GAEtB,KAAAC,UAAiB,G,OAQjB,YAAAhmC,SAAA,WACC,IAAMqb,EAAMtb,KAAK4W,QAAQ2E,aAEzBvb,KAAKyxB,QAAUzxB,KAAK4W,QAAQ8E,iBAAmB,KAAO1b,KAAK4W,QAAQ6E,cAAgB,GAAK,KAAOH,EAAM,GAAK,IAAM,IAAMA,EAGtHtb,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMlY,KAAKyxB,UAExCzxB,KAAKoY,aAGN,YAAAxF,YAAA,SAAYmF,GAEPA,EAAiB,SACpB/X,KAAKoY,aAIP,YAAAA,UAAA,sBACOO,EAAO3Y,KAAK4W,QAAQgC,UAE1B5Y,KAAKoT,SAAU,EAEfpT,KAAKgmC,aAAe,GACpBhmC,KAAKyD,YAAYpC,SAAQ,SAAAqC,GACxB,IAAMgV,EAAS,GACfA,EAAc,MAAIhV,EAAUmE,MAC5B6Q,EAAa,KAAIhV,EAAUT,KAE3B,EAAKmQ,QAAU,EAAKA,SAAY,EAAK3P,YAAYxC,OAAS,EAE1DyC,EAAUirB,QAAQttB,SAAQ,SAAAgvB,GACzB,IAAMxX,EAAY3E,KAAKgE,MAAMmY,EAAIxX,WAC3BC,EAAU5E,KAAKgE,MAAMmY,EAAIvX,SAE/B,GAAIH,GAAQE,GAAaF,GAAQG,EAAS,CACzC,IAAI,EAAU,GAEdpV,EAAU+H,MAAMpK,SAAQ,SAAA2K,GACvB,IAAIrG,EAAc,CACjB1C,KAAM+I,EAAK/I,KACX4E,MAAOmE,EAAKnE,OAGiB,MAA1BwoB,EAAIxB,QAAQ7iB,EAAK/I,QACpB0C,EAAOuB,KAAOmpB,EAAIxB,QAAQ7iB,EAAK/I,MAAMiE,KACrCvB,EAAOwf,UAAYkL,EAAIxB,QAAQ7iB,EAAK/I,MAAMkiB,WAG3C,EAAQnhB,KAAK2B,MAGd+S,EAAgB,QAAI,MAItB,EAAKstB,aAAahiC,KAAK0U,MAIxB1Y,KAAK+W,MAAMe,QAGL,YAAAiD,WAAP,WACC,OAAO,GAGD,YAAA2Y,eAAP,WACC,OAAO1zB,KAAKyD,aAGb,YAAAyiC,iBAAA,SAAiBjjC,GAAjB,WACOS,EAAY1D,KAAKyD,YAAYG,MAAK,SAAA+I,GAAK,OAAAA,EAAE1J,OAASA,KAEpDjD,KAAKiX,YACRjX,KAAKgX,gBAAgBc,KAAKpU,IAI1B1D,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAAnT,mCAAoC,CAC5EmU,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQnD,KAAK1H,GAC7B1D,KAAKmO,WAAWI,QAAQggB,gBAAgB3tB,WAAU,SAAA8C,GACjD,EAAK0U,iBAKD,YAAA5N,MAAP,SAAaD,GACZvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCAzHhDpE,GAAoB,+E,iCAApBA,EAAoB,+D,GAAA,K,2iCChBjC,+BACE,+BACE,0BACE,8BA+BF,iBACF,iBACF,kB,MAjC8E,wD,yIDQ9E,GAKa,EAAAA,wB,+DAAAA,EAAoB,E,KALhC,EAAAoD,U,MAAU,CAEVC,SAAU,yBACVC,YAAa,qC,uEAIJoG,YAAa,CAAF,C,KAAnB,EAAAlG,QAESwZ,MAAK,E,KAAd,EAAAtZ,SAEQ2V,QAAS,CAAF,C,KAAf,EAAA7V,QACQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,QAEsB4oC,SAAQ,E,KAA9B,EAAAx0B,U,MAAU,cAEFiF,QAAS,CAAF,C,KAAf,EAAArZ,QAEQ0Z,YAAa,CAAF,C,KAAnB,EAAA1Z,QAESyZ,gBAAe,E,KAAxB,EAAAvZ,Y,+GEhCF,WAMA,GAJA,MACA,MAGA,OACA,SAIA,GADA,OACA,QACA,SAEA,S,GACA,M,0ICTQ,6BAAqE,YAAW,kB,6BAAX,+C,yBAGjE,4BACI,yBAEI,YACJ,iBACJ,kB,6BAFQ,kE,yBAIZ,4BAEI,4BACI,yBACI,6BACA,kBAAE,8BACI,YACJ,iBACN,iBAEA,yBACI,6BACA,kBAAE,+BACI,aACJ,iBACN,iBACJ,iBACJ,kB,6BAXkB,8EAOA,2E,yBAmBN,yBAA6B,YAAW,kB,uBAAX,6C,yBAJzC,4BACI,6BACI,6BACA,yBACI,8BACJ,iBACJ,iBACJ,kB,6BAH8B,iD,uHAkBlB,8BAA6C,4FACzC,sBACA,6BACJ,iB,gCAFO,8E,qHAKH,gCAGI,6BACJ,kB,6BAHG,4I,qBAKC,6B,qBACA,6B,mDAaI,6BACI,2BAAY,mIACtC,sB,uBAC0B,iBAC5B,iB,0CAH0E,6DACvB,kF,qBAKlD,sB,qBACA,sB,mDAQ+B,+BAAkE,4GAA6B,kIAA/F,iB,2CAA0C,4BAAuB,oB,mDACjE,0BACI,+BAAyC,kHAAmC,4HAA5E,iBAAqK,+BAAuC,gHAAiC,4HAAxE,iBACzK,iB,2CADW,mDAAiC,yBAAoI,iDAA+B,wB,iGAE/M,+BAIE,6GAA8B,yIAA9B,CAA8B,+I,uBAJhC,iB,gEAEE,yEAAwD,cAAxD,CAAwD,mBAAxD,CAAwD,oBAAxD,CAAwD,2BAAxD,CAAwD,4BAAxD,CAAwD,uBAAxD,CAAwD,sBAAxD,CAAwD,8C,yBAXlE,0BAII,6BACI,iCACA,+BAGA,kCAgBJ,iBACJ,kB,uCAtB4B,sDACZ,qDACF,oDAGE,qD,mDAtBpB,4BAEI,+BAKxB,2BAAG,6GAAkG,YAAoB,iBACzH,2BAAG,6GACF,6BACA,6BACoB,iBAEG,+BA2BJ,iB,+CAtCoF,sDAKH,oDAEhG,oFACA,qFAGyB,uD,yBAmCV,4BAAmE,YAA4B,kB,qDAA5B,+C,+GAJvE,4BACI,4BACE,sBACF,iBACA,8BACJ,kB,4CAHoB,+EAAqD,qIAE3C,0D,kGArD1C,6BACI,+BACI,4BACI,yBACI,4BAA2C,6BAAkD,iBAC7F,8BAyCJ,iBACJ,iBACA,4BACI,+B,uBAMJ,iBACJ,iBACJ,kB,6BApD0C,yDA4CP,gJDnH/C,iBAiCC,WAAmBqW,EAAkCsyB,EAAmCC,EAC/EloC,EAAsCE,EAA8CE,GAD1E,KAAAuV,UAAkC,KAAAsyB,WAAmC,KAAAC,QAC/E,KAAAloC,eAAsC,KAAAE,kBAA8C,KAAAE,cA5B7F,KAAAwQ,QAAkB,KAClB,KAAA2V,KAA0B,KAC1B,KAAA4hB,EAAY,EACZ,KAAAzc,QAAkB,GAClB,KAAA/qB,OAAgE,GAChE,KAAAs1B,SAAqB,GACrB,KAAAmS,KAAY,CACXC,MAAO,EACPrjB,WAAY,EACZD,SAAU,IACVoM,QAAS,IAEV,KAAArjB,KAAO,CAAE+G,UAAW,OAAQyzB,MAAO,OACnC,KAAAC,aAAuB,EACvB,KAAAC,cAAwB,EACxB,KAAAC,YAAsB,EAOf,KAAAC,kBAAoB,GAQ1B7mC,KAAK6mC,kBAAoBxoC,EAAgByC,OAAO,qB,OAGjD,YAAAb,SAAA,sBACOyU,EAAM1U,KAAKqmC,MAAMS,SAASC,SAAS3pB,IAAI,OAC7Cpd,KAAK0mC,YAAgE,QAAjD1mC,KAAKqmC,MAAMS,SAASC,SAAS3pB,IAAI,aAErDpd,KAAK8T,QAAQqQ,qBAAqBzP,GAAKxK,MAAK,SAAAwgB,GAC3C,EAAKhG,KAAOgG,EACZ,EAAKhG,KAAKhU,WAAWrP,SAAQ,SAAA2R,GAC5BA,EAAUg0B,aAAc,KAEzB,IAAMn8B,EAAU,EAAK6Z,KAAK7Z,QACpB4J,EAAsC,MAA3B,EAAKiQ,KAAKrhB,cAAwB,EAAKqhB,KAAKrhB,cAAgB,EAAKqhB,KAAKjQ,SAEvF,EAAKmyB,WAAa,EAAKroC,YAAYsyB,kBAAkBhmB,EAAS4J,GAE9D,EAAKwyB,aAAa,MAGnB,IAAIC,EAAU,SAAW/D,OAAOC,SAAS+D,UAAYhE,OAAOC,SAASgE,KAAO,IAAMjE,OAAOC,SAASgE,KAAO,IAAM/pB,IAE/Grd,KAAKqnC,SAAW,EAAAC,UAAUJ,EAAU,uBAAyBxyB,GAC7D1U,KAAKqnC,SAASzmC,WAAU,SAAAmO,GACvB,EAAKw4B,qBAAqBx4B,EAAQR,aAIpC,YAAAsE,YAAA,WACC7S,KAAKqnC,SAASzpB,YAIf,YAAAqpB,aAAA,SAAa9jB,GAAb,WAECnjB,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQjQ,KAAK7D,KAAK0kB,KAAKhQ,IAAKyO,EAAYnjB,KAAKumC,KAAKrjB,SAAUljB,KAAKlB,OAAQkB,KAAKiM,MAAM/B,MAAK,SAAAq8B,GAC7F,EAAKA,KAAOA,KACVj8B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAUb,YAAAi9B,OAAA,SAAOx0B,GACFhT,KAAKiM,KAAK+G,YAAcA,EAAUmV,KACrCnoB,KAAKiM,KAAKw6B,MAA6B,QAApBzmC,KAAKiM,KAAKw6B,MAAkB,OAAS,MAGxDzmC,KAAKiM,KAAO,CAAE+G,UAAWA,EAAUmV,KAAMse,MAAO,OAGjDzmC,KAAKinC,aAAa,IAGnB,YAAAQ,aAAA,WACCznC,KAAK0kB,KAAKhU,WAAWrP,SAAQ,SAAAQ,GAC5BA,EAAKuf,OAAS,QAGfphB,KAAKlB,OAAS,GACdkB,KAAKo0B,SAAW,GAEhBp0B,KAAKinC,aAAa,IAGnB,YAAAS,aAAA,SAAa10B,GACZA,EAAUg0B,aAAeh0B,EAAUg0B,aAGpC,YAAAW,UAAA,SAAU30B,GAAV,WACC,OAAO,EAAAkc,WAAWta,QAAO,SAACua,GACzB,EAAKpgB,QAAU,KAGf,EAAK+E,QAAQkF,OAAO,EAAK0L,KAAKhQ,IAAK1B,EAAUoO,OAAQpO,EAAUmV,KAAMnV,EAAU40B,KAAM,EAAK9oC,QAAQoL,MAAK,SAAA7K,GACtGA,EAAQwoC,QAAQ,CAAEhgC,MAAO,IAAM,EAAKxJ,gBAAgByC,OAAO,uBAAyB,IAAKtD,MAAO,OAEhG2xB,EAAS9hB,KAAKhO,MACZiL,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAg9B,qBAAA,SAAqB/3B,GAEpBxP,KAAK2mC,aAAgBn3B,EAASqa,QAAUra,EAASs4B,MAEjD9nC,KAAKomC,SAAS52B,SAASA,IAGxB,YAAAyiB,iBAAA,SAAiBjf,GAOhB,GANAA,EAAUg0B,aAAc,EAGxBhnC,KAAKlB,OAASkB,KAAKlB,OAAOA,QAAO,SAAAipC,GAAK,OAAAA,EAAE/0B,YAAcA,EAAU40B,QAChE5nC,KAAKo0B,SAAWp0B,KAAKo0B,SAASt1B,QAAO,SAAAkpC,GAAK,OAAAA,IAAMh1B,EAAU40B,QAEnC,MAAnB50B,EAAUxV,QAA4C,KAA1BwV,EAAUxV,MAAMye,OAAwC,KAAxBjJ,EAAUxV,MAAM0e,KAAa,CAE5F,IAAIrU,EAAQ,IAAMmL,EAAUnL,MAAQ,QAEP,MAAzBmL,EAAUxV,MAAMye,QACnBpU,GAASmL,EAAUxV,MAAMye,OAGG,MAAzBjJ,EAAUxV,MAAMye,OAAwC,MAAvBjJ,EAAUxV,MAAM0e,MACpDrU,GAAS,OAGiB,MAAvBmL,EAAUxV,MAAM0e,MACnBrU,GAASmL,EAAUxV,MAAM0e,KAG1BrU,GAAS,IAET7H,KAAKlB,OAAOkF,KAAK,CAAEgP,UAAWA,EAAU40B,KAAMpqC,MAAOwV,EAAUxV,MAAOqK,MAAOA,IAC7E7H,KAAKo0B,SAASpwB,KAAKgP,EAAU40B,MAG9B5nC,KAAKinC,aAAa,IAGnB,YAAAgB,kBAAA,SAAkBj1B,GAOjB,GANAA,EAAUg0B,aAAc,EAGxBhnC,KAAKlB,OAASkB,KAAKlB,OAAOA,QAAO,SAAAipC,GAAK,OAAAA,EAAE/0B,YAAcA,EAAU40B,QAChE5nC,KAAKo0B,SAAWp0B,KAAKo0B,SAASt1B,QAAO,SAAAkpC,GAAK,OAAAA,IAAMh1B,EAAU40B,QAEnC,MAAnB50B,EAAUxV,OAAqC,KAApBwV,EAAUxV,MAAc,CACtD,IAAMqK,EAAQ,IAAMmL,EAAUnL,MAAhB,QAAuCmL,EAAUxV,MAAQ,IAEvEwC,KAAKlB,OAAOkF,KAAK,CAAEgP,UAAWA,EAAU40B,KAAMpqC,MAAOwV,EAAUxV,MAAOqK,MAAOA,IAC7E7H,KAAKo0B,SAASpwB,KAAKgP,EAAU40B,MAG9B5nC,KAAKinC,aAAa,IAGnB,YAAAiB,iBAAA,SAAiB1uB,EAAmBxG,GAcnC,GAbAA,EAAUxV,MAAQgc,EAAE/L,KACpBuF,EAAUg0B,aAAc,EAGxBhnC,KAAKlB,OAASkB,KAAKlB,OAAOA,QAAO,SAAAipC,GAAK,OAAAA,EAAE/0B,YAAcA,EAAU40B,QAChE5nC,KAAKo0B,SAAWp0B,KAAKo0B,SAASt1B,QAAO,SAAAkpC,GAAK,OAAAA,IAAMh1B,EAAU40B,QAE1D5nC,KAAK0kB,KAAKhU,WAAWrP,SAAQ,SAAAQ,GACxBA,EAAK+lC,OAAS50B,EAAU40B,OAC3B/lC,EAAKuf,OAAS,OAIa,MAAzBpO,EAAUxV,MAAMA,OAA2C,KAA1BwV,EAAUxV,MAAMA,MAAc,CAClE,IAAMqK,EAAQ,IAAMmL,EAAUnL,MAAhB,QAAuCmL,EAAUxV,MAAMqK,MAAQ,IAE7E7H,KAAKlB,OAAOkF,KAAK,CAAEgP,UAAWA,EAAU40B,KAAMpqC,MAAOgc,EAAE/L,KAAKjQ,MAAOqK,MAAOA,IAC1E7H,KAAKo0B,SAASpwB,KAAKgP,EAAU40B,MAC7B50B,EAAUoO,OAAS5H,EAAE/L,KAAK5F,WAG1BmL,EAAUoO,OAAS,GAGpBphB,KAAKinC,aAAa,IAGnB,YAAAkB,aAAA,SAAan1B,GACZ,MAA0B,SAAnBA,EAAUhH,OAAoD,IAAhCgH,EAAUo1B,WAAWnnC,SAA2D,IAA3CjB,KAAKo0B,SAAS5nB,QAAQwG,EAAU40B,OAAgB5nC,KAAKo0B,SAASt1B,QAAO,SAAAtB,GAAS,OAAAwV,EAAUo1B,WAAW1D,SAASlnC,MAAQyD,OAAS,IAGxM,YAAAsvB,OAAA,SAAO1sB,GAAP,WACKwkC,EAAYroC,KAAK7B,aAAaiP,KAAK,EAAA3T,yBAA0B,CAAE4U,UAAU,EAAMC,qBAAqB,IACxG+5B,EAAU95B,QAAQykB,oBAAoBnvB,EAAKZ,KAAMjD,KAAK0kB,KAAKjQ,SAAUzU,KAAK0kB,KAAK9N,QAAS5W,KAAK0kB,KAAK4N,oBAClG+V,EAAU95B,QAAQyjB,gBAAgBhyB,KAAK0kB,KAAKhQ,KAC5C2zB,EAAU95B,QAAQ2jB,sBAAqB,WAEtC,EAAK+U,aAAa,EAAKV,KAAKpjB,gBAI9B,YAAAmlB,UAAA,sBACCtoC,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQiR,kBAAkB/kB,KAAK0kB,KAAKhQ,KAAK6I,YAC5CrT,MAAK,SAAAwa,GACL,EAAKA,KAAOA,EACZ,EAAKA,KAAKhU,WAAWrP,SAAQ,SAAA2R,GAC5BA,EAAUg0B,aAAc,KAIzB,EAAKC,aAAa,MAChB38B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAId,YAAAg+B,eAAA,sBACKF,EAAYroC,KAAK7B,aAAaiP,KAAK,EAAA3T,yBAA0B,CAAE4U,UAAU,EAAMC,qBAAqB,IAExG+5B,EAAU95B,QAAQ8jB,eAAeryB,KAAK0kB,KAAKjQ,SAAUzU,KAAK0kB,KAAK9N,QAAS5W,KAAK0kB,KAAK4N,oBAClF+V,EAAU95B,QAAQyjB,gBAAgBhyB,KAAK0kB,KAAKhQ,KAC5C2zB,EAAU95B,QAAQ2jB,sBAAqB,WAEtC,EAAK+U,aAAa,EAAKV,KAAKpjB,gBAI9B,YAAAqlB,SAAA,sBACCxoC,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAAxS,2BAA4B,CACpEwT,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQ6zB,SAASxhC,WAAU,SAAA+uB,GAC5B,aAAVA,EACHwT,OAAOC,SAASC,KAAOhmB,IAAM,qCAAuC,EAAKqH,KAAKhQ,IAAM,WAAa+zB,mBAAmBxwB,KAAKE,UAAU,EAAKrZ,SAEtH,SAAV6wB,IACRwT,OAAOC,SAASC,KAAOhmB,IAAM,uCAAyC,EAAKqH,KAAKhQ,IAAM,WAAa+zB,mBAAmBxwB,KAAKE,UAAU,EAAKrZ,cAK7I,YAAAkyB,uBAAA,SAAuBhe,EAAgByb,GACtCzb,EAAUyb,QAAUA,GAGrB,YAAAvV,WAAA,SAAWG,GACV,OAAOrZ,KAAK3B,gBAAgBib,qBAAqBD,IAGlD,YAAA7O,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAjRrChQ,GAAmB,0O,iCAAnBA,EAAmB,k8GCxBhC,4BACI,4BACA,6BAGA,4BACI,8BAEA,4BACI,8BAMJ,iBACA,+BA4BA,8BAQA,4BACI,6BACI,6CAAiD,8CAAc,EAAA0sC,aAAA,MAAsB,iBAErF,6BAEI,+BAAwB,wCAAS,EAAAQ,kBAC7B,+BACI,uBACA,uBACJ,iBACA,8BACJ,iBAEA,iCAMI,mCAKA,iCAAsB,wCAAS,EAAAe,cAC3B,qCACA,qCACJ,iBACR,iBACJ,iBACJ,iBACA,6BACI,iCA0DJ,iBAKA,6BACI,6BACI,6CAAiD,8CAAc,EAAAvB,aAAA,MAAsB,iBACzF,iBACJ,iBACJ,iBAEJ,kB,MArJc,oDAGI,2CAOJ,2CA4BA,sDAsBa,oDAMM,qEAMM,wDACA,sDAMrB,6C,gVDlElB,GAKa,EAAA1sC,uB,+DAAAA,EAAmB,E,KAL/B,EAAA4C,U,MAAU,CACVC,SAAU,cACVC,YAAa,+BACbC,UAAW,Q,+SEtBZ,WAIA,GAHA,MACA,MAEA,QAIA,SAGA,S,GACA,OACA,M,wGCZI,6BAAqE,YAAW,kB,6BAAX,+C,mDAEpE,6BACG,6BACI,mCACI,6BACI,gCAAiD,4F,uBAE7C,6BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,+BAP6H,kDAA2B,4D,mDA0B5H,gCAAmD,yIAC/C,6BACJ,kB,mDACA,gCAAgD,0IAC5C,6BACJ,kB,mDACA,gCAAmD,gJAC/C,6BACJ,kB,mDAdZ,yBACI,4BACI,6BACI,gCAAsB,6GAClB,6BACJ,iBACA,kCAGA,kCAGA,kCAGJ,iBACJ,iBACA,4BACE,8BACI,aACJ,iBACF,iBACA,6BACE,+BACI,aACJ,iBACF,iBAEJ,iB,+CAtBqB,yDAGA,gDAGA,yDAOX,qEAKA,0E,yBAlCtB,6BACI,+BACI,4BACI,yBACI,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAAkD,iBAClG,iBACJ,iBACA,6BACI,gCA6BJ,iBACJ,iBACJ,kB,6BA/BoC,yD,yBAuDA,8BAAqD,YAA0B,kB,uCAA1B,kE,yBATrE,yBACI,4BACI,6BACI,sBACA,2BACI,8BAA+B,YAAmB,iBAClD,8BAA+B,YAAe,iBAC9C,8BAA+B,aAAa,iBAC5C,+BAA+B,aAAe,iBAC9C,iCACJ,iBACJ,iBACJ,iBACJ,kB,uBAR+C,0DACA,sDACA,oDACA,sDACxB,iD,mDAO/B,6BACI,6CAAqB,sGAAoC,iBAC7D,kB,yED1EpB,aA2BC,WAAmBwW,EAAkCsqB,EAAwBjgC,EAAqCI,EAAkCF,GAAjI,KAAAyV,UAAkC,KAAAsqB,SAAwB,KAAAjgC,eAAqC,KAAAI,cAAkC,KAAAF,kBArBpJ,KAAA0Q,QAAkB,KAClB,KAAA2V,KAAmB,KACnB,KAAA6hB,KAAY,CACXrjB,SAAU,GACVC,WAAY,EACZqjB,MAAO,EACPlX,QAAS,IAiBTtvB,KAAK0xB,QAAUnzB,EAAYmzB,U,OAG5B,YAAAzxB,SAAA,sBACCD,KAAK8T,QAAQkQ,qBAAqBhkB,KAAK0U,IAAK,aAAaxK,MAAK,SAAAwa,GAC7D,EAAKA,KAAOA,EAEZ,EAAKuiB,aAAa,MAGnB,IAAIC,EAAU,SAAW/D,OAAOC,SAAS+D,UAAYhE,OAAOC,SAASgE,KAAO,IAAMjE,OAAOC,SAASgE,KAAO,IAAM/pB,IAE/Grd,KAAKqnC,SAAW,EAAAC,UAAUJ,EAAU,qBACpClnC,KAAKqnC,SAASzmC,WAAU,SAAAmO,GACF,uBAAjBA,EAAQ/C,MACX,EAAKi7B,aAAa,EAAKV,KAAKpjB,gBAK/B,YAAAtQ,YAAA,WACC7S,KAAKqnC,SAASzpB,YAOf,YAAA8qB,0BAAA,SAA0Bhe,GAA1B,WACC1qB,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO4pB,EAAQ9T,QAAU,IACxH5W,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,uBAEjEd,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAC3C,EAAKiQ,QAAQgR,wBAAwB4F,EAAQhW,KAAKxK,MAAK,SAAAmB,GACtD,EAAKs9B,gBAEHr+B,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAo+B,WAAA,sBAEC3oC,KAAK8T,QAAQkQ,qBAAqBhkB,KAAK0U,IAAK,aAAaxK,MAAK,SAAAwa,GAC7D,EAAKA,KAAOA,KACVpa,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA+9B,UAAA,sBACCtoC,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQ8Q,0BAA0B5kB,KAAK0kB,KAAKhQ,KAAKxK,MAAK,SAACrG,GAE3D,EAAKojC,aAAa,EAAKV,KAAKpjB,eAE1B7Y,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA08B,aAAA,SAAa9jB,GAAb,WACkB,MAAbnjB,KAAK0kB,OAER1kB,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQ6R,yBAAyB3lB,KAAK0kB,KAAKhQ,IAAK1U,KAAKumC,KAAKrjB,SAAUC,EAAY,cAAc,GAAMjZ,MAAK,SAAAmB,GAE7G,EAAKk7B,KAAOl7B,KAEVf,OAAM,SAACC,GACT,EAAKC,MAAMD,MAGZvK,KAAK2oC,eAIP,YAAAC,eAAA,WACC5oC,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA1S,sBAAuB,CAC/D0T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQ4F,UAAW,EACnCnU,KAAKmO,WAAWI,QAAQ+F,OAAStU,KAAK0kB,KACtC1kB,KAAKmO,WAAWI,QAAQ6F,OAAQ,GAIjC,YAAA4tB,OAAA,SAAOtX,GACN1qB,KAAKo+B,OAAOQ,SAAS,CAAC,yBAA0BlU,EAAQhW,KAAK,KAG9D,YAAAm0B,mBAAA,SAAmBne,GAAnB,WAEC1qB,KAAK8T,QAAQ2R,iBAAiBiF,EAAQhW,KAAKxK,MAAK,WAE/C,EAAK+8B,aAAa,EAAKV,KAAKpjB,eAE1B7Y,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAu+B,oBAAA,SAAoBpe,GACnByY,OAAOC,SAASC,KAAOhmB,IAAM,uCAAyCqN,EAAQhW,KAG/E,YAAAwE,WAAA,SAAWG,GACV,OAAOrZ,KAAK3B,gBAAgBib,qBAAqBD,IAGlD,YAAA7O,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAjJrC9P,GAAmC,2L,iCAAnCA,EAAmC,+4DCtBhD,0BACI,8BAEC,8BAaD,4BACI,+BA0CJ,iBAGA,4BACI,4BACI,2BACI,4BACI,8BACI,6BACI,4BACI,6BAAoC,8BAA2C,iBACnF,iBACJ,iBACA,6BACI,gC,wBAcJ,iBACJ,iBACA,gCAGJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,MA/FU,oDAEC,yDAcG,2CAwDkC,iJAgBtB,8D,6MDxE1B,GAKa,EAAAA,uC,+DAAAA,EAAmC,E,KAL/C,EAAA0C,U,MAAU,CACVC,SAAU,gCACVC,YAAa,iDACbC,UAAW,Q,yIAYFoX,IAAK,CAAF,C,KAAX,EAAAnX,W,sHEhCF,WAOA,GANA,MACA,MAKA,QACA,S,GAEA,OACA,M,gGCVI,4BAAqE,YAAW,kB,6BAAX,+C,mDAErE,4BAEI,4BACI,+BACI,4BACI,+BAA+D,6BAAoD,iBAEnH,oCAAY,iGAAmB,2FACwC,iBAEvE,gCAAiD,4FAC7C,6BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iB,mDAT4B,+CAAmB,yBAAnB,CAAmB,sBAAnB,CAAmB,sBAAnB,CAAmB,cAAnB,CAAmB,qBAG8E,sE,mDA0BjG,gCAAyC,+HACrC,6BACJ,kB,mDARZ,yBACI,4BACI,6BACI,gCAAsB,6GAClB,6BACJ,iBACA,kCAGJ,iBACJ,iBACA,4BACE,8BACI,YACJ,iBACF,iBACA,4BACE,+BACI,aACJ,iBACF,iBACJ,iB,+CAfqB,iDAOX,qEAKA,yE,yBA7BtB,6BACI,+BACI,4BACI,yBACI,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAA8C,iBAC1F,4BAA4C,6BAAoD,iBACpG,iBACJ,iBACA,6BAEI,gCAsBJ,iBACJ,iBACJ,kB,6BAxBoC,yDDpB5C,iBAkBC,WAAmBuW,EAAkCsqB,EAAwBjgC,EAAsCE,GAAhG,KAAAyV,UAAkC,KAAAsqB,SAAwB,KAAAjgC,eAAsC,KAAAE,kBAZnH,KAAA0Q,QAAkB,KAClB,KAAA2V,KAAmB,KACnB,KAAA9N,QAAkB,GAClB,KAAAmyB,gBAA0B,E,OAa1B,YAAA9oC,SAAA,sBACCD,KAAK8T,QAAQkQ,qBAAqBhkB,KAAK0U,IAAK,eAAexK,MAAK,SAAAwa,GAC/D,EAAKA,KAAOA,MAId,YAAA4jB,UAAA,sBACCtoC,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQ6Q,wBAAwB3kB,KAAK0kB,KAAKhQ,IAAK1U,KAAK4W,SAAS1M,MAAK,SAAAwgB,GACtE,EAAKhG,KAAK2F,SAASrmB,KAAK0mB,MAEtBpgB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAq+B,eAAA,WACC5oC,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA1S,sBAAuB,CAC/D0T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQ4F,UAAW,EACnCnU,KAAKmO,WAAWI,QAAQ+F,OAAStU,KAAK0kB,KACtC1kB,KAAKmO,WAAWI,QAAQ6F,OAAQ,GAIjC,YAAA4tB,OAAA,SAAOtX,GACN1qB,KAAKo+B,OAAOQ,SAAS,CAAC,yBAA0BlU,EAAQhW,KAAK,KAG9D,YAAAytB,SAAA,SAASzX,GAAT,WACC1qB,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,+BAAiC,KAAO4pB,EAAQ9T,QAAU,IACxH5W,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,uBAEjEd,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAC3C,EAAKiQ,QAAQgR,wBAAwB4F,EAAQhW,KAAKxK,MAAK,SAAAmB,GACtD,EAAKqZ,KAAK2F,SAAW,EAAK3F,KAAK2F,SAASvrB,QAAO,SAACtB,EAAO2M,EAAO+Q,GAC7D,OAAO1d,EAAMkX,MAAQgW,EAAQhW,UAG5BpK,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAA2O,WAAA,SAAWG,GACV,OAAOrZ,KAAK3B,gBAAgBib,qBAAqBD,IAIlD,YAAA7O,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA7ErC/P,GAA0B,wJ,iCAA1BA,EAA0B,g3CClBvC,0BACI,8BAEA,+BAkBA,4BACI,+BAoCJ,iBACJ,kB,MA1DU,oDAEA,+DAmBI,6C,8JDTd,GAKa,EAAAA,8B,+DAAAA,EAA0B,E,KALtC,EAAA2C,U,MAAU,CACVC,SAAU,sBACVC,YAAa,uCACbC,UAAW,Q,oHAQFoX,IAAK,CAAF,C,KAAX,EAAAnX,W,mHExBF,WAOA,GANA,MACA,MAIA,OACA,Q,2GCGgB,4BACI,4BACI,yBAAI,YAAoC,iBAC5C,iBACJ,kB,6BAFY,wE,mDAGZ,4BACI,4BACI,yBACI,wBAAI,2BAAY,mGAAiC,6BAA4C,iBAAI,iBACrG,iBACJ,iBACJ,kB,uFAGI,0BAAoH,2FAAuB,UAAQ,6BAAwD,iB,gCAAjI,kE,wBAK1E,kD,6BAAiE,gC,wBACjE,wC,6BAAuD,gCDrB3E,iBAgBC,WAAoBuW,EAAkC3V,EAAsCkoC,GAAxE,KAAAvyB,UAAkC,KAAA3V,eAAsC,KAAAkoC,QAR5F,KAAA93B,QAAkB,GAClB,KAAAmW,KAAmB,K,OAUnB,YAAAzkB,SAAA,sBACOyU,EAAM1U,KAAKqmC,MAAMS,SAASC,SAAS3pB,IAAI,OAElC,MAAP1I,IACH1U,KAAKuO,QAAU,OAGhBvO,KAAK8T,QAAQkR,cAActQ,GAAKxK,MAAK,SAAAwa,GACpC,EAAKA,KAAOA,EAERA,EAAKqd,OACR,EAAKxzB,QAAU,WAKlB,YAAAq6B,eAAA,SAAe7jC,GACdA,EAAM2I,iBAEN1N,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA1S,sBAAuB,CAC/D0T,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQ4F,UAAW,EACnCnU,KAAKmO,WAAWI,QAAQ+F,OAAStU,KAAK0kB,KACtC1kB,KAAKmO,WAAWI,QAAQ6F,OAAQ,GAGjC,YAAAorB,cAAA,SAAcjxB,GACbvO,KAAKuO,QAAUA,G,iCA3CJ5T,GAAuB,qH,iCAAvBA,EAAuB,qkBCfpC,4BACI,4BACA,6BAEA,4BAGI,4BACI,4BAEI,8BAKA,8BAQA,0BACI,4BACA,2BAA0F,wCAAS,EAAA6kC,cAAc,UAAQ,6BAAsD,iBACnL,iBAEA,6BACI,yDACA,+CACJ,iBAEJ,iBACJ,iBACJ,iBACJ,kB,MA1BsB,2CAKA,2CASE,wDAC4C,gFAIhB,8DACV,gE,qPDrB1C,GAMa,EAAA7kC,2B,+DAAAA,EAAuB,E,KANnC,EAAAwC,U,MAAU,CAEVC,SAAU,mBACVC,YAAa,oCACbC,UAAW,CAAC,yC,uNEbb,WAKA,GAJA,MACA,MAGA,OAMA,GAHA,OAGA,QAEA,GADA,MACA,Q,mHCRQ,6BAAqE,YAAW,kB,6BAAX,+C,qBAgDzB,6B,qBACA,6B,mDAGR,gCAAiE,uJAC7D,6BACJ,kB,mDACA,gCAA6D,wJACvE,6BACF,kB,yBAdI,4BAEI,6BACI,2BACI,gCACI,oCACA,oCACJ,iBACJ,iBACA,kCAGA,kCAGJ,iBACJ,kB,uCAbW,uEAEgB,+FACA,6FAGV,mEAGA,gE,yBAlCrB,yBACI,4BACI,6BACI,sBACA,2BACI,8BACI,YACJ,iBACA,8BACI,8BACI,YACJ,iBACJ,iBACA,+BACI,aACJ,iBACJ,iBAEA,oCAEJ,iBACJ,iBACA,+BAiBJ,kB,2CAjCoB,wDAII,wEAIJ,kEAIQ,kDAInB,+D,mDAqBjB,6BACI,6CAAqC,gHAA8C,iBACvF,kB,sBAUG,4BACE,6BACF,kB,sBACA,4BACG,6BACF,kB,sBACA,4BACE,6BACF,kB,sBACA,4BACE,6BACF,kB,mDACD,4BACE,gCAAsB,wGACpB,6BACF,iBACF,kB,qBACA,uB,qBA6BF,uB,yBAvBF,yBACE,4BACE,6BACG,sBACA,2BAAyC,YAAgB,iBAC5D,iBACF,iBACA,4BACE,2BAAwC,YAAwB,iBAClE,iBACA,4BACG,4BAAwC,aAAuB,iBACjE,iBACA,6BACI,+BACE,aACF,iBACJ,iBACA,6BACE,+BACI,aACJ,iBACF,iBACD,+BAMD,kB,2CAzB+C,+CAIJ,yDAGC,sDAIpC,wEAKA,4EAGF,+D,mDAUT,6BACG,6CAAuC,kHAAgD,iBAC1F,kB,gLD5HrB,aAsCC,WAAmBwW,EAAkC3V,EAAsCigC,EAClF//B,EAAsCE,EAAiCyqC,GAD7D,KAAAl1B,UAAkC,KAAA3V,eAAsC,KAAAigC,SAClF,KAAA//B,kBAAuE,KAAA2qC,YAjChF,KAAAj6B,QAAkB,KAElB,KAAAk6B,eAAiC,CAChCzC,MAAO,EACPrjB,WAAY,EACZD,SAAU,GACVoM,QAAS,IAGV,KAAA4Z,iBAAmC,CAClC1C,MAAO,EACPrjB,WAAY,EACZD,SAAU,GACVoM,QAAS,IAYV,KAAA6Z,kBAA4B,EAC5B,KAAAC,oBAA8B,EAI9B,KAAAC,eAAyB,EAIxBrpC,KAAK0xB,QAAUnzB,EAAYmzB,UAC3B1xB,KAAK2xB,aAAe3xB,KAAK0xB,SAAWnzB,EAAYozB,eAChD3xB,KAAK4xB,cAAgB5xB,KAAK0xB,SAAW1xB,KAAK2xB,cAAgBpzB,EAAYszB,gB,OAGvE,YAAA5xB,SAAA,sBAECD,KAAKspC,uBAAuB,GAE5BtpC,KAAKupC,YAAc,EAAAC,SAAS,KAAM5oC,WAAU,WAC3C,EAAKuoC,oBACL,EAAKC,sBAED,EAAKC,eACJ,EAAKF,mBAAqB,IAC7B,EAAKG,uBAAuB,EAAKL,eAAe9lB,YAEhD,EAAKgmB,kBAAoB,GAEtB,EAAKC,qBAAuB,IAC/B,EAAKK,yBAAyB,EAAKP,iBAAiB/lB,YAEpD,EAAKimB,oBAAsB,IAIxB,EAAKD,mBAAqB,IAC7B,EAAKG,uBAAuB,EAAKL,eAAe9lB,YAEhD,EAAKgmB,kBAAoB,OAO7B,YAAAt2B,YAAA,WACC7S,KAAKupC,YAAYxR,eAGlB,YAAA2R,gBAAA,SAAgBC,GACf,MAAmB,aAAfA,EAAI/iB,OACA5mB,KAAK3B,gBAAgByC,OAAO,0BAEZ,YAAf6oC,EAAI/iB,QAAuC,QAAf+iB,EAAI/iB,OACjC5mB,KAAK3B,gBAAgByC,OAAO,yBAEZ,WAAf6oC,EAAI/iB,OACL5mB,KAAK3B,gBAAgByC,OAAO,wBAEZ,YAAf6oC,EAAI/iB,OACL5mB,KAAK3B,gBAAgByC,OAAO,yBAEZ,aAAf6oC,EAAI/iB,OACL5mB,KAAK3B,gBAAgByC,OAAO,0BAEZ,YAAf6oC,EAAI/iB,OACL5mB,KAAK3B,gBAAgByC,OAAO,yBAG5Bd,KAAK3B,gBAAgByC,OAAO,0BAIrC,YAAA8oC,iBAAA,SAAiBrD,GAAjB,WAECA,EAAKjX,QAAQjuB,SAAQ,SAAAsoC,GAEpB,IAAIE,EAAa,CAChB,MAAS,CACR,CAAE,MAAS,EAAKxrC,gBAAgByC,OAAO,6BAA8B,OAAU,YAE/E,CACC,MAAS,EAAKzC,gBAAgByC,OAAO,0BACrC,OAAwB,QAAd6oC,EAAIG,MAAkB,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,QAG7F,CACC,MAAS,EAAKzrC,gBAAgByC,OAAO,6BACrC,OAAwB,aAAd6oC,EAAIG,OAAsC,uBAAdH,EAAIG,MAAiC,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,aAGxI,CACC,MAAS,EAAKzrC,gBAAgByC,OAAO,iCACrC,OAAwB,WAAd6oC,EAAIG,OAAoC,mBAAdH,EAAIG,OAA4C,kBAAdH,EAAIG,MAA4B,EAAKC,aAAaJ,GAAO,OAKlIA,EAAMA,GACFE,WAAaA,MAMnB,YAAAG,mBAAA,SAAmBC,EAAkBC,GACpC,IAAIzD,EAAQ,CAAC,MAAO,WAAY,qBAAsB,SAAU,iBAAkB,iBAE9E0D,EAAS1D,EAAMj6B,QAAQy9B,GAE3B,OADgBxD,EAAMj6B,QAAQ09B,GACdC,EACR,WAGA,IAIT,YAAAJ,aAAA,SAAaJ,GACZ,MAAmB,WAAfA,EAAI/iB,QAAsC,YAAf+iB,EAAI/iB,OAC3B,UAEgB,aAAf+iB,EAAI/iB,OACL,QAGD,IAIR,YAAAwjB,sBAAA,WACCpqC,KAAKypC,yBAAyB,GAE9BzpC,KAAKqpC,eAAgB,GAItB,YAAArH,OAAA,SAAO/+B,GACNjD,KAAKo+B,OAAOQ,SAAS,CAAC,iCAAkC37B,KAGzD,YAAAqmC,uBAAA,SAAuBnmB,GAAvB,WAECnjB,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQmP,iBAAiBjjB,KAAKipC,eAAe/lB,SAAUC,EAAY,cAAc,GAAOjZ,MAAK,SAAAmB,GAEjG,EAAK49B,eAAiB59B,EACtB,EAAKu+B,iBAAiB,EAAKX,mBAEzB3+B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAk/B,yBAAA,SAAyBtmB,GAAzB,WAECnjB,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQwP,0BAA0BtjB,KAAKkpC,iBAAiBhmB,SAAUC,EAAY,cAAc,GAAOjZ,MAAK,SAAAmB,GAE5G,EAAK69B,iBAAmB79B,EACxB,EAAKu+B,iBAAiB,EAAKV,qBAEzB5+B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAA8/B,qBAAA,SAAqB7mB,EAAmBmmB,GAAxC,WACC3pC,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,uCAC9Dd,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,kCAEjEd,KAAKmO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CtQ,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAE3C,EAAKmlC,UAAU3pB,aAAasqB,EAAIxqB,eAAejV,MAAK,SAAAmB,GACnD,EAAK8C,WAAWgI,OAEhB,IAAK,IAAI3S,EAAI,EAAGA,EAAI,EAAKylC,eAAe3Z,QAAQruB,SAAUuC,EAAG,CAG5D,GAFgB,EAAKylC,eAAe3Z,QAAQ9rB,GAE9B8mC,QAAUX,EAAIW,MAAO,CAClC,EAAKrB,eAAe3Z,QAAQ3nB,OAAOnE,EAAG,GACtC,OAIF,EAAK4mC,2BAEH9/B,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMd,YAAAggC,sBAAA,SAAsB/mB,EAAmBmmB,GAAzC,WACC3pC,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,6CAC9Dd,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,wCAEjEd,KAAKmO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CtQ,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAE3C,EAAKiQ,QAAQ6P,oBAAoBH,GAAWtZ,MAAK,SAAAmB,GAEhD,EAAK8C,WAAWgI,OAEhB,IAAK,IAAI3S,EAAI,EAAGA,EAAI,EAAKylC,eAAe3Z,QAAQruB,SAAUuC,EAAG,CAG5D,GAFgB,EAAKylC,eAAe3Z,QAAQ9rB,GAE9B8mC,QAAUX,EAAIW,MAAO,CAClC,EAAKrB,eAAe3Z,QAAQ3nB,OAAOnE,EAAG,GACtC,OAIF,EAAK4mC,2BAEH9/B,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMd,YAAA2O,WAAA,SAAWG,GACV,OAAOrZ,KAAK3B,gBAAgBib,qBAAqBD,IAGlD,YAAA7O,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAhRrC1P,GAAsB,4N,iCAAtBA,EAAsB,usFCpBnC,4BACI,4BACA,6BAEA,4BACI,8BAEA,4BACI,yBACI,4BACJ,iBACJ,iBACA,4BACI,4BACI,4BACI,6BACI,+BACI,6BACI,6BACI,6BACI,8BACJ,iBACJ,iBACJ,iBACA,6BAEI,gC,wBAyCJ,iBACJ,iBACA,gCAGJ,iBAEA,6BACC,+BACE,6BACE,0BACE,6BACE,8BACF,iBACA,+BAGA,+BAGC,+BAGA,+BAGD,+BAKA,+BAEF,iBACF,iBACA,6BAEA,gC,wBA8BA,iBACF,iBAEA,gCAGD,iBACJ,iBAEJ,iBACJ,iBACJ,iBACJ,kB,MA7Ic,oDAqBsC,2LA2CtB,sEAYE,wEAGA,wEAGC,wEAGA,wEAGD,wEAKA,wEAMW,kMAiChB,0E,skBD1H3B,GAKa,EAAAA,0B,+DAAAA,EAAsB,E,KALlC,EAAAsC,U,MAAU,CACVC,SAAU,iBACVC,YAAa,kCACbC,UAAW,CAAC,6B,0QElBb,WAKA,GAJA,MACA,MAGA,QAEA,SACA,SAIA,GAHA,OAGA,QAEA,GADA,MACA,Q,0GCTQ,4BAAqE,YAAW,kB,6BAAX,+C,mDA+C3D,6BACE,8BACE,6BACF,iBACA,gCAAsB,gIACpB,6BACF,iBACF,kB,mDAEA,6BACE,8BACE,6BACF,iBACA,gCAAsB,gIACpB,6BACF,iBACF,kB,qBAIM,6B,sBACA,2BACE,6BACF,kB,mDALN,6BACI,gCAAsB,gIACpB,oCACA,gCAGF,iBACJ,iB,iCALiB,8EACJ,2E,mDAMb,6BACE,gCAAsB,8HAClB,2BACE,6BACF,iBACF,iBACJ,kB,yBAzEN,4BAKI,4BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACE,6BACA,aACF,iBACA,+BACE,8BACA,+BACM,aACN,iBACF,iBACJ,iBAEJ,iBACJ,iBACA,8BACI,2BAEI,0BAAI,yBAAG,aACL,8BACA,aACA,8BACF,iBAAI,iBACJ,0BAAI,aAAwC,8BAA6D,iBAE7G,iBACJ,iBACA,8BACE,gCASA,gCASA,gCASA,gCAaF,iBACJ,kB,6BAtE4B,mDAIV,0DAKM,4EAUL,kEAEL,6DAGE,kFAKJ,wGASA,oGASA,sHASA,+D,sBAqBI,4BACI,yBAQC,4BACI,6BACJ,iBACA,4BACK,6BACL,iBACA,4BACG,6BACF,iBACD,uBAGD,iBACJ,kB,sBACA,4BACE,yBAQE,4BACE,6BACF,iBACA,4BACE,6BACF,iBACA,4BACE,6BACF,iBACA,uBAGF,iBACF,kB,mDAiBQ,4BACI,gCAAsB,6HAClB,6BACJ,iBACJ,kB,yBAlBJ,yBAKI,4BACE,wBAAG,YAA8C,iBACnD,iBACA,4BACE,wBAAG,YAAyB,iBAC9B,iBACA,4BACE,wBAAG,YAAc,iBACnB,iBACA,+BAKJ,kB,4CAbS,+EAGA,wDAGA,6CAEqB,+D,kGAflC,4BACI,+B,uBAoBJ,kB,8BApBwB,gJ,yBA+BnB,wBAA+C,YAAyB,kB,uCAAzB,yD,yBAC/C,wBAAwF,YAAa,kB,uCAAb,6C,mDAK3F,4BACC,gCAAsB,6HACjB,6BACL,iBACD,kB,yBAlBD,yBAIC,4BACE,wBAAG,YAAY,iBACjB,iBACA,4BACG,6BACA,6BACF,iBACA,4BACE,wBAAG,YAAwC,iBAC7C,iBACD,+BAKD,kB,4CAdM,2CAGE,oEACA,uGAGD,yEAEoB,+D,yBAf5B,4BACC,+B,uBAoBD,kB,8BApBqB,gJ,mDAuBrB,6BACI,6CAAqB,uGAAoC,iBAC7D,kB,yBArGZ,6BAEI,4BAEI,+BACI,iCAuBA,iCAwBA,iCAuBA,iCAsBJ,iBACA,6BACI,+BAGJ,iBACJ,iBACJ,kB,8BAnGoB,mEAuBA,uEAwBA,mEAuBA,uEAwBF,6D,yBApGtB,6BACI,+BAyGJ,kB,6BAzGuC,2CD7EnD,iBAkCC,WAAmBwW,EAAkC3V,EAC5CigC,EAAwBiI,EACxBhoC,EAAsCE,EAAiCyqC,GAF7D,KAAAl1B,UAAkC,KAAA3V,eAC5C,KAAAigC,SAAwB,KAAAiI,QACxB,KAAAhoC,kBAAuE,KAAA2qC,YA9BhF,KAAAj6B,QAAkB,KAElB,KAAAy7B,aAAuB,EACvB,KAAAhnB,UAAoB,GAEpB,KAAA+iB,KAAY,CACXC,MAAO,EACPrjB,WAAY,EACZD,SAAU,GACVoM,QAAS,IAGV,KAAAmb,YAAsB,EAWtB,KAAAC,WAAqB,EACrB,KAAAC,yBAAmC,EAOlC3qC,KAAK0xB,QAAUnzB,EAAYmzB,UAC3B1xB,KAAK2xB,aAAe3xB,KAAK0xB,SAAWnzB,EAAYozB,eAChD3xB,KAAK4xB,cAAgB5xB,KAAK0xB,SAAW1xB,KAAK2xB,cAAgBpzB,EAAYszB,gB,OAGvE,YAAA5xB,SAAA,sBAECD,KAAKwjB,UAAYxjB,KAAKqmC,MAAMS,SAAS7pB,OAAY,IAEjDjd,KAAKinC,aAAa,GAElB,IAAIC,EAAU,SAAW/D,OAAOC,SAAS+D,UAAYhE,OAAOC,SAASgE,KAAO,IAAMjE,OAAOC,SAASgE,KAAO,IAAM/pB,IAE/Grd,KAAKqnC,SAAW,EAAAC,UAAUJ,EAAU,qBACpClnC,KAAKqnC,SAASzmC,WAAU,SAAAmO,GACF,sBAAjBA,EAAQ/C,MACX,EAAKi7B,aAAa,EAAKV,KAAKpjB,gBAK/B,YAAAtQ,YAAA,aAGA,YAAA+3B,mBAAA,SAAmBC,GAClB,OAAOA,EAAKnQ,QAAQ,KAAM,OAG3B,YAAAoQ,wBAAA,SAAwBj8B,GACvB,OAAOoJ,KAAKE,UAAUtJ,IAGvB,YAAAk8B,kBAAA,SAAkB7iB,GACjB,IAAK,IAAI1kB,EAAI,EAAGA,EAAIxD,KAAKumC,KAAKjX,QAAQruB,SAAUuC,EAAG,CAC/BxD,KAAKumC,KAAKjX,QAAQ9rB,GAEpBmf,KAAOuF,EAAQvF,IAC/B3iB,KAAKumC,KAAKjX,QAAQ3nB,OAAOnE,EAAG,KAK/B,YAAAwnC,uBAAA,SAAuBC,GAEtB,MAAiB,iDAAbA,EACIjrC,KAAK3B,gBAAgByC,OAAO,gDAGnB,yDAAbmqC,EACIjrC,KAAK3B,gBAAgByC,OAAO,qDAGnB,sDAAbmqC,EACIjrC,KAAK3B,gBAAgByC,OAAO,sDAGnB,sDAAbmqC,EACIjrC,KAAK3B,gBAAgByC,OAAO,sDAGnB,gDAAbmqC,EACIjrC,KAAK3B,gBAAgByC,OAAO,+CAItB,mEAAbmqC,GACgB,kEAAbA,GACa,mEAAbA,GACa,iEAAbA,EAEIjrC,KAAK3B,gBAAgByC,OAAO,6CAQtB,oDAAbmqC,GACgB,sDAAbA,GACa,0DAAbA,EAEIjrC,KAAK3B,gBAAgByC,OAAO,wDAG7BmqC,GAIR,YAAA1a,OAAA,SAAOrI,GAAP,WAGCloB,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAArS,0BAA2B,CACnEqT,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQ2Z,QAAUA,EAClCloB,KAAKmO,WAAWI,QAAQo7B,IAAM3pC,KAAK2pC,IACnC3pC,KAAKmO,WAAWI,QAAQ28B,iBAAiBtqC,WAAU,SAAAiD,GAC9B,aAAhBA,EAAK4Z,QACR,EAAKstB,kBAAkBlnC,EAAKA,UAK/B,YAAAojC,aAAA,SAAa9jB,GAAb,WAECnjB,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQyP,gBAAgBvjB,KAAKwjB,UAAWxjB,KAAKumC,KAAKrjB,SAAUC,GAAY,GAAMjZ,MAAK,SAAAmB,GAIvF,GAFA,EAAKs+B,IAAMt+B,EAEY,mBAAnB,EAAKs+B,IAAIG,MACZ,EAAKvD,KAAO,EAAKoD,IAAIwB,kBAEjB,GAAuB,uBAAnB,EAAKxB,IAAIG,MAAgC,CACjD,EAAKvD,KAAO,EAAKoD,IAAIyB,SAErB,IAAK,IAAI5nC,EAAI,EAAGA,EAAI,EAAK+iC,KAAKjX,QAAQruB,SAAUuC,EAAG,CAG7B,yBAFP,EAAK+iC,KAAKjX,QAAQ9rB,GAEpBwI,OACX,EAAK2+B,yBAA0B,QAIhCrgC,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAA8gC,oBAAA,aAIA,YAAAjB,sBAAA,aAIA,YAAAkB,UAAA,sBACCtrC,KAAKwqC,aAAexqC,KAAKwqC,YAEzBxqC,KAAK2pC,IAAIwB,aAAa7b,QAAQjuB,SAAQ,SAAAkqC,GACrCA,EAAInX,SAAW,EAAKoW,gBAItB,YAAAgB,oBAAA,SAAoBhoB,GAApB,WACCxjB,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAApS,uBAAwB,CAChEoT,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBtO,KAAKmO,WAAWI,QAAQo7B,IAAM3pC,KAAK2pC,IAEnC3pC,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAC3C,EAAKu6B,OAAOQ,SAAS,CAAC,iCAIxB,YAAA2L,sBAAA,SAAsB/mB,GAAtB,WACiC,GAA5BxjB,KAAKumC,KAAKjX,QAAQruB,OACrBjB,KAAK8T,QAAQ6P,oBAAoBH,GAAWtZ,MAAK,SAAAmB,GAChD,EAAK+yB,OAAOQ,SAAS,CAAC,gCACpBt0B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIZvK,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGC,uBAAnBtO,KAAK2pC,IAAIG,OACZ9pC,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,iDAC9Dd,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,8CAGjEd,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,6CAC9Dd,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,yCAGlEd,KAAKmO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CtQ,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAE3C,EAAKiQ,QAAQ6P,oBAAoBH,GAAWtZ,MAAK,SAAAmB,GAEhD,EAAK+yB,OAAOQ,SAAS,CAAC,gCAEpBt0B,OAAM,SAACC,GACT,EAAKC,MAAMD,WAOf,YAAA8/B,qBAAA,SAAqB7mB,GAArB,WACCxjB,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAK3B,gBAAgByC,OAAO,uCAC9Dd,KAAKmO,WAAWI,QAAQS,WAAahP,KAAK3B,gBAAgByC,OAAO,kCAEjEd,KAAKmO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CtQ,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,SAAAiD,GAE3C,EAAKmlC,UAAU3pB,aAAa,EAAKsqB,IAAIxqB,eAAejV,MAAK,SAAAmB,GAExD,EAAK+yB,OAAOQ,SAAS,CAAC,gCACpBt0B,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMd,YAAA2O,WAAA,SAAWG,GACV,OAAOrZ,KAAK3B,gBAAgBib,qBAAqBD,IAGlD,YAAA7O,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAzQrCzP,GAAY,kQ,iCAAZA,EAAY,27FCvBzB,4BACI,4BACA,6BAEA,4BACI,8BAEI,4BACI,yBACI,4BACJ,iBACJ,iBACA,gCAkFA,8BA2GR,iBACJ,kB,MArMc,oDAOI,0CAkFA,sE,qgBD5ElB,GAKa,EAAAA,gB,+DAAAA,EAAY,E,KALxB,EAAAqC,U,MAAU,CACVC,SAAU,MACVC,YAAa,uBACbC,UAAW,CAAC,6B,+SErBb,WAEA,GADA,MACA,OAOA,GAFA,OAEA,Q,GACA,M,mHCTI,6BAAqE,YAAW,kB,6BAAX,+C,mDAY7D,0BACI,+CAAuB,4IAAiG,iBAC5H,iB,gCAD4F,iDAAmB,c,mDAG7G,yDAAmF,6IAAkG,iB,iCAAjC,kCAAmB,c,mDACvK,uDAA+E,6IAAkG,iB,iCAAjC,kCAAmB,c,mDACnK,uDAA+E,6IAAkG,iB,iCAAjC,kCAAmB,c,yBAHrK,0BACE,2DACA,yDACA,yDACF,kB,6BAHoC,8EACF,4EACA,6EDP9C,iBAmBI,WAAqBwW,EAAkCC,EAA6BC,EAAsC7F,GAArG,KAAA2F,UAAkC,KAAAC,WAA6B,KAAAC,WAAsC,KAAA7F,aAb1H,KAAAY,QAAkB,KASlB,KAAAoF,UAAoB,EACpB,KAAA9E,MAAgB,EAIdrP,KAAKkrC,iBAAmB,IAAI,EAAAp5B,Q,OAG9B,YAAA7R,SAAA,aAIA,YAAAwrC,0BAAA,SAA0BvjB,GACxBloB,KAAKkrC,iBAAiB79B,KAAK,CAACoQ,OAAO,WAAY5Z,KAAMqkB,KAGvD,YAAA9R,SAAA,WACIpW,KAAKmO,WAAWgI,QAGpB,YAAA3L,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA/B/CxP,GAAyB,uJ,iCAAzBA,EAAyB,shBCjBtC,4BACI,8BAEA,4BACI,yBACI,4BACJ,iBACJ,iBAEA,+BAEI,+BAEI,8BAGA,8BAMA,6BAEI,6BACI,6BACI,iCAAsB,wCAAS,EAAAqb,cAC3B,8BACJ,iBACJ,iBACJ,iBACJ,iBAEJ,iBACJ,iBAEJ,kB,MAnCU,oDAYQ,qFAGA,2F,kRDJlB,GAKa,EAAArb,6B,+DAAAA,EAAyB,E,KALrC,EAAAoC,U,MAAW,CACRC,SAAU,qBACVC,YAAa,sCACbC,UAAW,Q,iPEff,WAQA,GAPA,MACA,MAIA,OAEA,QAIA,GADA,OACA,Q,GACA,M,uECZI,6BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,6BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,yBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6E,mDA+BV,6BACI,gCAA0C,kGACtC,6BACJ,iBACJ,kBDnDpB,iBAeI,WAAqBwW,EAAkCC,EAC3CC,EAAsC7F,EAAgChQ,GAD7D,KAAA2V,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA7F,aAAgC,KAAAhQ,eAVlF,KAAA4Q,QAAkB,KAGD,KAAAg8B,kBAAoB,IAAI,EAAA7tC,aAEzC,KAAAiX,UAAoB,EACpB,KAAA9E,MAAgB,E,OAOhB,YAAApP,SAAA,aAIA,YAAAyrC,gBAAA,sBACQrD,EAAYroC,KAAK7B,aAAaiP,KAAM,EAAA3T,yBAA0B,CAC9D4U,UAAU,EACVC,qBAAqB,IAGzB+5B,EAAU95B,QAAQqkB,yBAAyB5yB,KAAKkoB,QAASloB,KAAK2pC,IAAInmB,UAAWxjB,KAAK2pC,IAAIxqB,cAActG,WAAW,GAC/GwvB,EAAU95B,QAAQyjB,gBAAiB,MACnCqW,EAAU95B,QAAQ2jB,sBAAqB,WAErC,EAAK6Y,kBAAkBjzB,KAAK,EAAKoQ,SACjC,EAAK/Z,WAAWgI,WAKtB,YAAA60B,uBAAA,SAAuBC,GAEnB,MAAgB,iDAAbA,EACQjrC,KAAKgU,SAASlT,OAAQ,gDAGjB,yDAAbmqC,EACQjrC,KAAKgU,SAASlT,OAAQ,qDAGjB,sDAAbmqC,EACMjrC,KAAKgU,SAASlT,OAAQ,sDAGf,sDAAbmqC,EACMjrC,KAAKgU,SAASlT,OAAQ,sDAGf,gDAAbmqC,EACMjrC,KAAKgU,SAASlT,OAAQ,+CAId,mEAAbmqC,GACgB,kEAAbA,GACa,mEAAbA,GACa,iEAAbA,EAEEjrC,KAAKgU,SAASlT,OAAQ,6CAOhB,oDAAbmqC,GACgB,sDAAbA,GACa,0DAAbA,EAEIjrC,KAAKgU,SAASlT,OAAQ,wDAGxBmqC,GAGX,YAAAh1B,SAAA,aAIA,YAAAG,SAAA,WACEpW,KAAKmO,WAAWgI,QAGrB,YAAA+C,WAAA,SAAWG,GACV,OAAOrZ,KAAKgU,SAASsF,qBAAqBD,IAGxC,YAAA7O,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA5F/CnP,GAA4B,6L,iCAA5BA,EAA4B,uoDCpBzC,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,4BACI,4BACI,4BACI,yBAAI,6BAAQ,6BAAsD,iBAAS,iBAC3E,2BAA+B,aAAkD,iBAEjF,0BAAI,8BAAQ,8BAAsD,iBAAS,iBAC3E,2BAA+B,aAA6B,iBAIhE,iBACJ,iBACA,8BACI,gCAKJ,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MAvEU,oDAWA,qDAwC6C,wFAGA,gEAO7B,+F,4DD/C1B,GAKa,EAAAA,gC,+DAAAA,EAA4B,E,KALxC,EAAA+B,U,MAAW,CACRC,SAAU,wBACVC,YAAa,yCACbC,UAAW,Q,2IAIF4qB,QAAS,CAAF,C,KAAf,EAAA3qB,QACQosC,IAAK,CAAF,C,KAAX,EAAApsC,QACgBwtC,kBAAiB,E,KAAjC,EAAAttC,Y,iIExBL,WAKA,GAJA,MACA,MAGA,OAQA,GALA,OAEA,OAGA,Q,GACA,M,wFCbI,6BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,6BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,yBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6E,yBAyCR,yBACJ,yBAAI,YAA4B,iBAClC,kB,uBADM,iE,yBAFD,6BACC,8BAGP,kB,6BAH2B,0DDxD1C,iBAsBI,WAAqBqW,EAAkCC,EAC3CC,EAAsC7F,EAAgChQ,GAD7D,KAAA2V,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA7F,aAAgC,KAAAhQ,eAjBlF,KAAA4Q,QAAkB,KAGD,KAAAg8B,kBAAoB,IAAI,EAAA7tC,aASzC,KAAAiX,UAAoB,EACpB,KAAA9E,MAAgB,E,OAOhB,YAAApP,SAAA,WAMID,KAAKkoB,QAAQviB,OAAS,KACtB3F,KAAK2rC,YAAc,IAIvB,YAAAC,UAAA,SAAUC,GACR,OAAO5zB,KAAKE,UAAU0zB,IAGxB,YAAAC,iCAAA,SAAiCD,GAC/B,OAAOA,EAAS7/B,MAGlB,YAAA8iB,uBAAA,SAAwBra,EAAkBo3B,GAA1C,WAGQ/hC,EAAgB9J,KAAK2pC,IAAIxqB,cAAczb,UAE3C,OAAO,EAAAwrB,WAAWta,QAAO,SAAEua,GACvB,EAAKrb,QAAQ6L,wBAAyB,EAAKgsB,YAAal3B,EAJ3C,KAIiE,KAAM3K,EAAe,EAAK6/B,IAAI9wB,WAAY3O,MAAM,SAAAolB,GAC1HH,EAAS9hB,KAAMiiB,UAK3B,YAAAC,kBAAA,SAAmB/V,EAAmBqyB,GAAtC,WAEI7rC,KAAK8T,QAAQwN,oBAAqB9H,EAAE/L,KAAK+hB,IAAKqc,EAASp3B,SAAU,IAAI,EAAOzU,KAAK2pC,IAAI9wB,WAAY3O,MAAM,SAAAulB,GAEnGoc,EAASlmC,OAAS8pB,EAAUtK,UAC5B,EAAKwmB,YAAclc,EAAUtK,UAAU8J,WAAWta,aAAavI,kBAE/D9B,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAwhC,SAAA,sBACMC,EAAM,CACRjZ,WAAY,SACZkZ,oBAAqBjsC,KAAKkoB,QAAQvF,IAGpC3iB,KAAK8T,QAAQ8P,wBAAyBooB,GAAM9hC,MAAM,SAAAmB,GAEhD,EAAK0/B,kBAAkBjzB,KAAK,EAAKoQ,SAEjC,EAAK/Z,WAAWgI,UAEd7L,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA2hC,gBAAA,sBACMF,EAAM,CACRC,oBAAqBjsC,KAAKkoB,QAAQvF,GAClCoQ,WAAY,UACZ9vB,KAAMjD,KAAKkoB,QAAQviB,OAAOspB,WAAWhsB,KACrCwR,SAAUzU,KAAKkoB,QAAQviB,OAAOspB,WAAWjjB,KACzCnE,MAAO7H,KAAKkoB,QAAQrgB,OAGtB7H,KAAK8T,QAAQ8P,wBAAyBooB,GAAM9hC,MAAM,SAAAmB,GAEhD,EAAK0/B,kBAAkBjzB,KAAK,EAAKoQ,SAEjC,EAAK/Z,WAAWgI,UAEd7L,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA6L,SAAA,WACEpW,KAAKmO,WAAWgI,QAGrB,YAAA+C,WAAA,SAAWG,GACV,OAAOrZ,KAAKgU,SAASsF,qBAAqBD,IAGxC,YAAA7O,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA9G/CtP,GAAqC,6L,iCAArCA,EAAqC,8wECrBlD,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,4BACI,4BACI,yBAAI,6BAAQ,4BAAsD,iBAAS,iBAC3E,2BAA+B,aAA6C,iBAE5E,0BAAI,8BAAQ,6BAAsD,iBAAS,iBAC3E,2BACE,8BACF,iBAEA,0BAAI,8BAAQ,8BAAwD,iBAAS,iBAC7E,yBACE,8BACF,iBACJ,iBACA,8BACC,8BACE,8BACC,6BACE,+BAAmB,8BAAsD,iBAC3E,iBACD,iBACA,8BACE,gCAKF,iBACF,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAAoD,iBACzE,iBACF,iBACA,8BACE,+BAA4C,aAAiB,iBAC/D,iBACF,iBACA,8BACG,8BACE,6BACE,+BAAmB,8BAAsD,iBAC3E,iBACF,iBACA,8BACE,gCAEC,oEAAyB,wCAGJ,EAAAs0B,kBAAA,gBALtB,iBAUF,iBACF,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAAsD,iBAC3E,iBACF,iBACA,8BACE,iCAA0D,wCAAS,EAAA2c,qBACjE,8BACF,iBACA,iCAAsB,wCAAS,EAAAH,cAC7B,8BACF,iBACF,iBACF,iBACF,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MA9HU,oDAWA,qDAuCyC,kFAoBxB,gEAcsC,oDAY1C,qDAAyB,oBAAzB,CAAyB,mEAAzB,CAAyB,0BAAzB,CAAyB,uBAAzB,CAAyB,uBAiBJ,iE,8IDlG5C,GAKa,EAAA9wC,yC,+DAAAA,EAAqC,E,KALjD,EAAAkC,U,MAAW,CACRC,SAAU,kCACVC,YAAa,mDACbC,UAAW,Q,2IAIF4qB,QAAS,CAAF,C,KAAf,EAAA3qB,QACQosC,IAAK,CAAF,C,KAAX,EAAApsC,QACgBwtC,kBAAiB,E,KAAjC,EAAAttC,Y,+HEzBL,WAIA,GAFA,MACA,MACA,OAOA,GAJA,OACA,OAEA,MACA,Q,yFCVI,4BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,4BACI,4BAEI,qBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,wBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6E,mDAiBlB,6BACI,6BACI,yBAAI,6BAAQ,6BAAsD,iBAAS,iBAC3E,2BAA+B,YAA6C,iBAE5E,yBAAI,6BAAQ,6BAAsD,iBAAS,iBAC3E,4BACE,8BACF,iBAEA,0BAAI,8BAAQ,8BAAwD,iBAAS,iBAC7E,yBAAG,8BAA+D,iBACtE,iBACA,8BACC,8BACG,8BACE,6BACE,+BAAmB,8BAAoE,iBACzF,iBACF,iBACA,8BACE,+BAA4C,aAA0B,iBACxE,iBACF,iBACD,8BACE,8BACE,6BACE,+BAAmB,8BAA2D,iBAChF,iBACF,iBACA,8BACE,+BAA4C,aAAiB,iBAC/D,iBACF,iBACA,8BACG,8BACE,6BACE,+BAAmB,8BAA6D,iBAClF,iBACF,iBACA,8BACE,gCAEC,uGAAyB,uHAF1B,iBAUF,iBACF,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAA6D,iBAClF,iBACF,iBACA,8BACE,iCAAkD,kGAChD,8BACF,iBACA,iCAAsB,2FACpB,8BACF,iBACF,iBACF,iBACF,iBACJ,iB,gCAlEuC,kFAkBe,8DAUD,oDAY1C,qDAAyB,oBAAzB,CAAyB,gDAAzB,CAAyB,0BAAzB,CAAyB,uBAAzB,CAAyB,uBAiBJ,wDD/F5C,iBAkBI,WAAqBqW,EAAkCC,EAC3CC,EAAsC7F,EAAgChQ,GAD7D,KAAA2V,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA7F,aAAgC,KAAAhQ,eAblF,KAAA4Q,QAAkB,KAGD,KAAAg8B,kBAAoB,IAAI,EAAA7tC,aAEzC,KAAAmiC,OAAiB,KAGjB,KAAAlrB,UAAoB,EACpB,KAAA9E,MAAgB,E,OAOhB,YAAApP,SAAA,WAEID,KAAKkoB,QAAQviB,OAAS,KACtB3F,KAAK2rC,YAAc,IAIvB,YAAAG,iCAAA,SAAiCD,GAC/B,OAAOA,EAAS7/B,MAGlB,YAAA8iB,uBAAA,SAAwB+c,GAAxB,WACI,OAAO,EAAA3c,WAAWta,QAAO,SAAEua,GACvB,EAAKpb,SAASkM,mBAAoB4rB,EAAS3rB,cAAe,EAAKyrB,YAAa,MAAOzhC,MAAM,SAAAolB,GACrFH,EAAS9hB,KAAMiiB,UAK3B,YAAAC,kBAAA,SAAmB/V,GACfxZ,KAAKq/B,OAAS7lB,EAAE/L,KAAKjQ,OAGzB,YAAAuuC,SAAA,sBACMC,EAAM,CACRjZ,WAAY,SACZkZ,oBAAqBjsC,KAAKkoB,QAAQvF,IAGpC3iB,KAAK8T,QAAQ8P,wBAAyBooB,GAAM9hC,MAAM,SAAAmB,GAEhD,EAAK0/B,kBAAkBjzB,KAAK,EAAKoQ,SAEjC,EAAK/Z,WAAWgI,UAEd7L,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA2hC,gBAAA,sBACMF,EAAM,CACRC,oBAAqBjsC,KAAKkoB,QAAQvF,GAClCoQ,WAAY,UACZ1S,aAAcrgB,KAAKq/B,OACnBx3B,MAAO7H,KAAKkoB,QAAQrgB,OAGtB7H,KAAK8T,QAAQ8P,wBAAyBooB,GAAM9hC,MAAM,SAAAmB,GAEhD,EAAK0/B,kBAAkBjzB,KAAK,EAAKoQ,SAEjC,EAAK/Z,WAAWgI,UAEd7L,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA6L,SAAA,WACEpW,KAAKmO,WAAWgI,QAGrB,YAAA+C,WAAA,SAAWG,GACV,OAAOrZ,KAAKgU,SAASsF,qBAAqBD,IAGxC,YAAA7O,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCArF/CrP,GAAmC,6L,iCAAnCA,EAAmC,uxEClBhD,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,gCAsEJ,iBACJ,iBAEJ,kB,MAxHU,oDAWA,qDAoCQ,gD,oIDnClB,GAKa,EAAAA,uC,+DAAAA,EAAmC,E,KAL/C,EAAAiC,U,MAAW,CACRC,SAAU,gCACVC,YAAa,iDACbC,UAAW,Q,2IAIF4qB,QAAS,CAAF,C,KAAf,EAAA3qB,QACQosC,IAAK,CAAF,C,KAAX,EAAApsC,QACgBwtC,kBAAiB,E,KAAjC,EAAAttC,Y,+HEtBL,WAKA,GAHA,MACA,MAEA,OAQA,GALA,OACA,OAIA,Q,GACA,M,uECbI,6BAAqE,YAAW,kB,6BAAX,+C,yBAWrE,4BAKI,6BACI,6BAEI,sBACA,2BACI,8BACI,6BAAQ,YAAgB,iBAC5B,iBACA,8BACI,6BAA2D,aAC/D,iBACA,+BACI,8BAA4D,kBAC5D,+BACM,aACN,iBACJ,iBACJ,iBAEJ,iBACJ,iBACA,yBACJ,kB,6BAhB4B,mDAGmD,2DAKrD,6EDf9B,iBAsBI,WAAqBqW,EAAkCC,EAC3CC,EAAsC7F,EAAgChQ,GAD7D,KAAA2V,UAAkC,KAAAC,WAC3C,KAAAC,WAAsC,KAAA7F,aAAgC,KAAAhQ,eAjBlF,KAAA4Q,QAAkB,KAGD,KAAAg8B,kBAAoB,IAAI,EAAA7tC,aASzC,KAAAiX,UAAoB,EACpB,KAAA9E,MAAgB,E,OAOhB,YAAApP,SAAA,WAMID,KAAKkoB,QAAQviB,OAAS,KACtB3F,KAAK2rC,YAAc,IAIvB,YAAAC,UAAA,SAAUC,GACR,OAAO5zB,KAAKE,UAAU0zB,IAGxB,YAAAC,iCAAA,SAAiCD,GAC/B,OAAOA,EAAS7/B,MAGlB,YAAA8iB,uBAAA,SAAwBra,EAAkBo3B,GAA1C,WAGQ/hC,EAAgB9J,KAAK2pC,IAAIxqB,cAAczb,UAE3C,OAAO,EAAAwrB,WAAWta,QAAO,SAAEua,GACvB,EAAKrb,QAAQ6L,wBAAyB,EAAKgsB,YAAal3B,EAJ3C,KAIiE,KAAM3K,EAAe,EAAK6/B,IAAI9wB,WAAY3O,MAAM,SAAAolB,GAC1HH,EAAS9hB,KAAMiiB,UAK3B,YAAAC,kBAAA,SAAmB/V,EAAmBqyB,GAAtC,WAEI7rC,KAAK8T,QAAQwN,oBAAqB9H,EAAE/L,KAAK+hB,IAAKqc,EAASp3B,SAAU,IAAI,EAAOzU,KAAK2pC,IAAI9wB,WAAY3O,MAAM,SAAAulB,GAEnGoc,EAASlmC,OAAS8pB,EAAUtK,UAC5B,EAAKwmB,YAAclc,EAAUtK,UAAU8J,WAAWta,aAAavI,kBAE/D9B,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAwhC,SAAA,sBACMC,EAAM,CACRjZ,WAAY,SACZkZ,oBAAqBjsC,KAAKkoB,QAAQvF,IAGpC3iB,KAAK8T,QAAQ8P,wBAAyBooB,GAAM9hC,MAAM,SAAAmB,GAEhD,EAAK0/B,kBAAkBjzB,KAAK,EAAKoQ,SAEjC,EAAK/Z,WAAWgI,UAEd7L,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAAqgC,mBAAA,SAAmBC,GAEjB,OAAOA,EAAKnQ,QAAQ,KAAM,OAG5B,YAAAwR,gBAAA,sBACMF,EAAM,CACRC,oBAAqBjsC,KAAKkoB,QAAQvF,GAClCoQ,WAAY,UACZ9vB,KAAMjD,KAAKkoB,QAAQviB,OAAOspB,WAAWhsB,KACrCwR,SAAUzU,KAAKkoB,QAAQviB,OAAOspB,WAAWjjB,KACzCnE,MAAO7H,KAAKkoB,QAAQrgB,OAGtB7H,KAAK8T,QAAQ8P,wBAAyBooB,GAAM9hC,MAAM,SAAAmB,GAEhD,EAAK0/B,kBAAkBjzB,KAAK,EAAKoQ,SAEjC,EAAK/Z,WAAWgI,UAEd7L,OAAM,SAAEC,GACV,EAAKC,MAAMD,OAIf,YAAA6L,SAAA,WACEpW,KAAKmO,WAAWgI,QAGlB,YAAA3L,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA/G/CpP,GAAmC,6L,iCAAnCA,EAAmC,qnDCrBhD,4BACI,8BAWA,+BA6BA,4BAKI,4BAEI,4BACI,4BACI,yBAAI,6BAAQ,4BAAsD,iBAAS,iBAC3E,2BAA+B,aAA6C,iBAE5E,0BAAI,8BAAQ,6BAAsD,iBAAS,iBAC3E,2BAA+B,8BAA6D,iBAE5F,0BAAI,8BAAQ,8BAAwD,iBAAS,iBAC7E,yBAAG,8BAA+D,iBACtE,iBACA,8BACC,8BACE,8BACC,6BACE,+BAAmB,8BAA+E,iBACpG,iBACD,iBACA,8BACG,+BAA4C,aAA4C,iBAC1F,iBACH,iBACA,8BACE,8BACE,6BACE,+BAAmB,8BAA6D,iBAClF,iBACF,iBACA,8BACE,+BAA4C,aAA6B,iBAC3E,iBACF,iBACD,iBACJ,iBACJ,iBACJ,iBAEJ,kB,MApFU,oDAWA,qDAuCyC,kFAgBe,kFAUD,kE,4DD7DjE,GAKa,EAAAA,uC,+DAAAA,EAAmC,E,KAL/C,EAAAgC,U,MAAW,CACRC,SAAU,gCACVC,YAAa,iDACbC,UAAW,Q,2IAIF4qB,QAAS,CAAF,C,KAAf,EAAA3qB,QACQosC,IAAK,CAAF,C,KAAX,EAAApsC,QACgBwtC,kBAAiB,E,KAAjC,EAAAttC,Y,kHEzBL,WAEA,GADA,MACA,OACA,SAEA,SAEA,GADA,MACA,Q,GAEA,O,4FCPE,4BAAkE,YAAgB,kB,6BAAhB,oD,qBAW5D,6B,qBACA,6B,wBAGA,6B,8BACgB,qC,wBAChB,6B,8BACgB,qC,mDAVtB,+BACE,4BACE,8BACE,mCACA,oCACF,iBACA,6BACE,iCAEA,iCAEF,iBACF,iBAEA,6BACE,8BACE,iCAAsB,6EAAS0Q,WAAA,UAE7B,4BAAM,aAAc,iBACtB,iBACA,iCAAsB,0FAGpB,4BAAM,aAAc,iBACtB,iBACF,iBACF,iBACF,iB,gCAxBiB,iFACA,6EAGH,iFAEA,6EASA,iDAGN,kGAEM,kDDpBhB,iBAmCE,WAAoBA,EAAgC9P,EAA8Cye,GAA9E,KAAA3O,aAAgC,KAAA9P,kBAA8C,KAAAye,eA7BzF,KAAAqvB,MAAgBnsC,KAAK3B,gBAAgByC,OAAO,uBAE5C,KAAAiO,QAAkB/O,KAAK3B,gBAAgByC,OAAO,yBAI9C,KAAAkO,WAAqBhP,KAAK3B,gBAAgByC,OAAO,wBAEjD,KAAA69B,WAAqB3+B,KAAK3B,gBAAgByC,OAAO,uBAEjD,KAAAkL,KAAmB,EAAAqE,WAAW+7B,Q,OAqBvC,YAAAnsC,SAAA,sBACED,KAAKiP,UAAY,IAAI,EAAA6C,QAErB,IAAIzS,EAA+B,CACjCohC,WAAY,EACZC,mBAAmB,EACnBvM,IAAK9W,IAAM,iBAGbrd,KAAK2gC,SAAW,IAAI,EAAAC,aAAcvhC,GAClCW,KAAK2gC,SAASE,gBAAkB,SAAEC,EAAeC,GAC7CA,EAAKn/B,OAAQ,OAAQqW,KAAKE,UAAU,EAAKwxB,IAAIxqB,iBAEjDnf,KAAK2gC,SAASM,mBAAqB,SAAEH,GACjC,EAAKhkB,aAAab,SAEtBjc,KAAK2gC,SAASO,eAAiB,SAAEzzB,EAAWpC,EAAeub,EAAalJ,GACpE,EAAKyjB,QAAQ9gC,cAAc7C,MAAQ,GACnC,EAAKsf,aAAac,YAEtB5d,KAAK2gC,SAASS,cAAgB,SAAE3zB,EAAWpC,EAAkBub,EAAgBlJ,GAC3E,EAAKzO,UAAU5B,KAAM,EAAKxJ,MAC1B,EAAKsK,WAAWgI,QAElBnW,KAAK2gC,SAASY,YAAc,SAAE9zB,EAAWpC,EAAkBub,EAAgBlJ,GACzE,EAAKlT,MAAOyN,KAAKC,MAAO7M,MAI5B,YAAAoI,SAAA,SAAS5P,GAEP,OAAOoU,KAAKE,UAAUtU,IAGxB,YAAAw+B,QAAA,WAC8B,MAAvBriC,KAAK2gC,SAASa,OAAiBxhC,KAAK2gC,SAASa,MAAMvgC,OAAS,EAC/DjB,KAAK2gC,SAASc,YAGdzhC,KAAKwK,MAAO,CAAEuE,QAAS/O,KAAK3B,gBAAgByC,OAAQ,mBAAqB0J,MAAO,MAI7E,YAAAA,MAAP,SAAcD,GACZvK,KAAKqsC,aAAe,EAAA56B,aAAa4E,oBAAoB9L,I,iCA5E5CvP,GAAsB,mH,iCAAtBA,EAAsB,uD,GAAA,K,w4CClBnC,4BAEE,8BAEA,4BACE,yBAAI,YAAS,iBACf,iBAEA,0BAAK,YAAW,iBAEhB,gCA4BF,kB,MApCQ,mDAGA,4CAGD,8CAEE,4C,+JDGT,GAKa,EAAAA,0B,+DAAAA,EAAsB,E,KALlC,EAAAmC,U,MAAW,CACRC,SAAU,iBACVC,YAAa,kCACbC,UAAW,Q,6FAGJ6uC,MAAO,CAAF,C,KAAb,EAAA5uC,QAEQwR,QAAS,CAAF,C,KAAf,EAAAxR,QAEQsG,KAAM,CAAF,C,KAAZ,EAAAtG,QAEQyR,WAAY,CAAF,C,KAAlB,EAAAzR,QAEQohC,WAAY,CAAF,C,KAAlB,EAAAphC,QAEQyO,KAAM,CAAF,C,KAAZ,EAAAzO,QAEQosC,IAAK,CAAF,C,KAAX,EAAApsC,QAGD4jC,QAAS,CAAF,C,KADN,EAAAxvB,U,MAAW,e,+GEjCd,WACA,O,GAEA,OACA,OAEA,M,mHCSS,6BACE,6BACE,yBAAI,YAAqB,iBAC3B,iBAEA,6BACE,4BACC,4BACC,4BAAO,6BAA6C,iBACpD,2BAA+B,aAAY,iBAC3C,gCAAkC,8BAAiD,iBAChF,+BACI,aACJ,iBACJ,iBACA,8BACE,gCACE,2BACA,4BAAM,8BAAsC,iBAC9C,iBAEA,gCACE,gCAAwE,qHAAxE,iBACA,4BAAM,8BAA0C,iBAClD,iBACF,iBACD,iBACF,iBACF,iB,+CA1BQ,qDAO6B,0CAGxB,wEAKwE,kDAAAgR,GAAA,eAA4B,uDAKY,kDAAAA,GAAA,cAA2B,uD,mDAOxJ,6BACG,6CAA0C,sHAAmD,iBAC/F,kB,uHAlCR,4BACI,4BACE,6BACC,gC,uBA6BA,+BAGD,iBACF,iBACJ,kB,6BAlC6B,2LA6BhB,wE,mDAqBL,6BACE,6BACE,yBAAI,YAAqB,iBAC3B,iBAEA,6BACE,4BACC,4BACC,4BAAO,6BAA6C,iBACpD,2BAA+B,aAAY,iBAC3C,gCAAkC,8BAAiD,iBACnF,+BACG,aACH,iBACA,gCAAkC,8BAAmD,iBACrF,+BACG,aACH,iBACD,iBACA,8BAEC,gCACE,gCAAoE,6HAApE,iBACA,4BAAM,8BAAsC,iBAC9C,iBACA,gCACE,2BACA,4BAAM,8BAA0C,iBAClD,iBACD,iBACD,iBACF,iBACF,iB,+CA9BQ,qDAO6B,0CAG5B,wEAIA,2EAM0G,kDAAAA,GAAA,eAA4B,uDAI1C,kDAAAA,GAAA,cAA2B,uD,mDAOhI,6BACE,6CAAyC,qHAAkD,iBAC7F,kB,sHApCF,6BACE,gC,uBAiCA,+BAGF,kB,6BApCwB,uLAiChB,uE,sBAIR,6BACE,2BAAyC,6BAA4D,iBACvG,kBDhGR,iBAgCC,WAAoB2pB,EAAkCjuC,GAAlC,KAAAiuC,cAAkC,KAAAjuC,kBArBtD,KAAAkuC,gBAAkC,CACjC/F,MAAO,EACPrjB,WAAY,EACZD,SAAU,GACVoM,QAAS,IAGV,KAAAkd,eAAiC,CAChChG,MAAO,EACPrjB,WAAY,EACZD,SAAU,GACVoM,QAAS,IAGV,KAAA+Z,eAAyB,EAEzB,KAAAF,kBAA4B,EAC5B,KAAAC,oBAA8B,E,OAM9B,YAAAnpC,SAAA,WACCD,KAAKysC,4BAA4B,IAGlC,YAAAC,MAAA,SAAMC,GACL,OAAW,MAAPA,EACIA,EAAIj+B,cAGJ,IAIT,YAAA+9B,4BAAA,SAA4BtpB,GAA5B,WACCnjB,KAAKssC,YAAYhmB,WAAWnD,EAAYnjB,KAAKusC,gBAAgBrpB,SAAU,cAAchZ,MAAK,SAAAq8B,GACzF,EAAKgG,gBAAkBhG,MAIzB,YAAAqG,2BAAA,SAA2BzpB,GAA3B,WAECnjB,KAAKssC,YAAYhmB,WAAWnD,EAAYnjB,KAAKwsC,eAAetpB,SAAU,YAAYhZ,MAAK,SAAAq8B,GACtF,EAAKiG,eAAiBjG,MAIxB,YAAAsG,eAAA,SAAeC,GAAf,WAGC9sC,KAAKssC,YAAY7lB,aAAaqmB,EAAKnqB,IAAIzY,MAAK,WAE3C,IAAMC,EAAQ,EAAKoiC,gBAAgBjd,QAAQ5iB,WAAU,SAAAuuB,GAAK,OAAAA,EAAEtY,KAAOmqB,EAAKnqB,OAEzD,IAAXxY,GACH,EAAKoiC,gBAAgBjd,QAAQ3nB,OAAOwC,EAAO,GAG5C,EAAKqiC,eAAeld,QAAQtrB,KAAK8oC,OAKnC,YAAAC,uBAAA,SAAuBD,GAAvB,WACC9sC,KAAKqpC,eAAgB,EAErBrpC,KAAKssC,YAAY3lB,cAAcmmB,EAAKnqB,GAAI,cAAczY,MAAK,WAE1D,IAAMC,EAAQ,EAAKqiC,eAAeld,QAAQ5iB,WAAU,SAAAuuB,GAAK,OAAAA,EAAEtY,KAAOmqB,EAAKnqB,OAExD,IAAXxY,GACH,EAAKqiC,eAAeld,QAAQ3nB,OAAOwC,EAAO,GAG3C,EAAKqiC,eAAeld,QAAQ3nB,OAAOwC,EAAO,GAC1C,EAAKoiC,gBAAgBjd,QAAQtrB,KAAK8oC,OAIpC,YAAAE,wBAAA,WACChtC,KAAKqpC,eAAgB,EAErBrpC,KAAK4sC,2BAA2B,IAGjC,YAAA1zB,WAAA,SAAWG,GACV,OAAOrZ,KAAK3B,gBAAgBib,qBAAqBD,I,iCA5FtChe,GAAmB,gF,iCAAnBA,EAAmB,kGAHpB,CAAC,EAAAnF,YAAS,qkDCZtB,4BACE,4BAEA,4BAEE,yBAEA,yBACE,4BACF,iBACA,oBAEF,8BAwCA,4BACA,2BACI,6BACF,iBACA,gCAAgE,wCAAS,EAAA82C,6BACvE,6BACF,iBACA,iBACA,qBAEA,6BACE,6BACE,gCAsCA,gCAGF,iBACF,iBAGH,iBACD,kB,MAlGoB,uEAoDkB,uFAsCA,2F,oqCD9FtC,GAOa,EAAA3xC,uB,+DAAAA,EAAmB,E,KAP/B,EAAA8B,U,MAAU,CACVC,SAAU,cACVC,YAAa,+BACbC,UAAW,CAAC,+BACZnB,UAAW,CAAC,EAAAjG,e,wEAKH4N,cAAe,CAAF,C,KAArB,EAAAvG,W,iIEjBF,WAQA,GANA,MACA,MAIA,MACA,QACA,SAIA,GADA,OACA,Q,oICQY,4BACE,4BACE,2BAA8F,YAAgC,iBAChI,iBACA,4BACE,gCAAsB,4GACpB,6BACF,iBACA,gCAAsB,4GACpB,6BACF,iBACA,gCAAsB,8GACpB,8BACF,iBACF,iBACF,iB,0BAbO,oFAA2F,qE,yEDR9G,aAoBC,WAAmBuW,EAA+CE,EAAuCoqB,EAAwBjgC,GAA9G,KAAA2V,UAA+C,KAAAE,WAAuC,KAAAoqB,SAAwB,KAAAjgC,eAdjI,KAAA4Q,QAAkB,KAElB,KAAAw3B,KAA0C,CACzChG,UAAW,GACXiG,MAAO,EACPrjB,WAAY,EACZD,SAAU,I,OAUX,YAAAjjB,SAAA,WACCD,KAAKinC,aAAa,IAGnB,YAAAA,aAAA,SAAa9jB,GAAb,WACCnjB,KAAK8T,QAAQgS,QAAQ3C,EAAYnjB,KAAKumC,KAAKrjB,UAAUhZ,MAAK,SAAAq8B,GACzD,EAAKA,KAAOA,KACVj8B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAqK,OAAA,sBACC5U,KAAK8T,QAAQzE,KAAK,MAAMnF,MAAK,SAAAmB,GAE5B,IAAI8C,EAAa,EAAKhQ,aAAaiP,KAAK,EAAA7R,oCAAqC,CAC5E6S,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBH,EAAWI,QAAQnD,KAAK,KAAMC,EAAS8rB,MACvChpB,EAAWI,QAAQ0+B,UAAUrsC,WAAU,WACtC,EAAKqmC,aAAa,EAAKV,KAAKpjB,mBAK/B,YAAAoN,OAAA,SAAO1M,GAAP,WAEC7jB,KAAK8T,QAAQzE,KAAKwU,EAAOnP,KAAKxK,MAAK,SAAAmB,GAElC,IAAI8C,EAAa,EAAKhQ,aAAaiP,KAAK,EAAA7R,oCAAqC,CAC5E6S,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBH,EAAWI,QAAQnD,KAAKC,EAASwY,OAAQxY,EAAS8rB,MAClDhpB,EAAWI,QAAQ0+B,UAAUrsC,WAAU,WACtC,EAAKqmC,aAAa,EAAKV,KAAKpjB,mBAK/B,YAAAxG,SAAA,SAASkH,GAAT,WAEC7jB,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQQ,QAAU/O,KAAKgU,SAASlT,OAAO,+BAAiC,KAAO+iB,EAAOhc,MAAMuE,eAAiB,IAC7HpM,KAAKmO,WAAWI,QAAQS,WAAahP,KAAKgU,SAASlT,OAAO,uBAC1Dd,KAAKmO,WAAWI,QAAQvC,KAAO,EAAAqE,WAAWC,OAE1CtQ,KAAKmO,WAAWI,QAAQU,UAAUrO,WAAU,WAC3C,EAAKkT,QAAQ1S,OAAOyiB,EAAOnP,KAAKxK,MAAK,WACpC,EAAK+8B,aAAa,EAAKV,KAAKpjB,eAC1B7Y,OAAM,SAACC,GACT,EAAKC,MAAMD,UAKd,YAAAy3B,OAAA,SAAOne,GACN7jB,KAAKo+B,OAAOQ,SAAS,CAAC,oCAAqC/a,EAAOnP,OAGnE,YAAAlK,MAAA,SAAMD,GACJvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCArFtCjP,GAAqC,qK,iCAArCA,EAAqC,+7BCpBlD,4BACE,4BACA,6BAEA,4BAEE,4BACE,yBACE,4BACF,iBACF,iBAEA,4BACE,4BACE,8BACE,6BACE,0BACE,4BAAwB,6BAAwD,iBAClF,iBACF,iBACA,6BACE,+B,wBAgBF,iBACF,iBACA,8CAAqB,8CAAc,EAAA2rC,aAAA,MAAsB,iBAEzD,8BACE,8BACE,iCAAsB,wCAAS,EAAAryB,YAC7B,8BACF,iBACF,iBACF,iBACF,iBACF,iBACF,iBACF,kB,MA9BmC,qJ,uMDNnC,GAKa,EAAAtZ,yC,+DAAAA,EAAqC,E,KALjD,EAAA6B,U,MAAU,CACVC,SAAU,iCACVC,YAAa,kDACbC,UAAW,Q,sQElBZ,WAEA,GADA,MACA,OAIA,GADA,MACA,Q,GAGA,O,2GCRE,6BAAqE,YAAW,kB,6BAAX,+C,yBAWjE,4BACE,4BACE,4BAAQ,6BAAyD,iBAAC,sCAAkE,iBACpI,iBACF,iBACA,6BACE,+BAAO,wEAAP,iBACF,iBACF,kB,uBANyF,4CAI9E,+CAA+B,yBAA/B,CAA+B,wC,yBAWlC,gCAA6D,YAAa,kB,uBAAhC,6BAAmB,6C,yBAa7D,gCAA4E,YAAmB,kB,uBAA5C,6BAAyB,6C,mDARpF,4BACE,4BACE,4BAAO,6BAA4D,iBACrE,iBACA,6BACE,8BACE,gCAAoB,4GAClB,wBACA,kCACF,iBACF,iBACF,iBACF,iB,gCAN0B,0DAA8B,+BAElB,2D,yBAc9B,gCAAiE,YAAgB,kB,uBAArC,4BAAqB,6C,mDARzE,4BACE,4BACE,4BAAO,6BAAyD,iBAClE,iBACA,6BACE,8BACE,gCAAoB,yGAA2B,6FAC7C,wBACA,kCACF,iBACF,iBACF,iBACF,iB,gCAN0B,uDAA2B,+BAElB,uD,yBAmCvB,4BACE,+BAA2C,6BAA6C,YAAyB,iBACnH,kB,uCAD0F,0D,yBAKtF,gCAAuD,YAA6B,kB,uBAAjD,6BAAoB,4D,mDAH3D,4BACE,gCAAoB,yHAA0C,oKAC5D,wBACA,kCACF,iBACF,iB,+DAJsB,6DAA0C,mCAEnC,gD,mDAG7B,4BACE,gCAAoB,gHAClB,wBACA,gCAA0B,6BAAwD,iBAClF,gCAA8B,6BAAgE,iBAC9F,gCAAoB,6BAAsD,iBAC5E,iBACF,iB,0CANsB,oDAAiC,2B,yBAUnD,gCAA+D,YAAc,kB,uBAAjC,2BAAmB,4C,mDAHnE,4BACE,gCAAoB,0HAClB,wBACA,kCACF,iBACF,iB,+DAJsB,8DAA2C,2BAEnC,wD,mDAW1B,2BAAyD,2I,uBACvD,yBACA,+BAAgD,6BAAyD,iBAC3G,iB,KAHiG,kF,mDARrG,4BACP,0BACE,2BAA0B,2J,uBACxB,yBACA,+BAAgD,6BAA6C,iBAC/F,iBACF,iBACA,0BACW,6BAIF,iBACX,iB,0CAX0E,iFAMzD,qD,sBA2BU,4BAAoC,6BAAsD,kB,qBAIxF,6B,mDAYH,gCAAuD,iKAAyB,GAAG4vC,MAAMx8B,WAAW,EAAnB,yBAA1B,CAAuE,qKAA0C,GAAGw8B,MAAMx8B,WAAW,EAAnB,UACtK,gCAA0B,6BAAyD,iBACnF,gCAAyB,6BAA4D,iBACvF,iB,2FAHsD,iFAAuE,kCACnH,0CACA,2C,yBAHb,4BACE,kCAIF,kB,uCAJ6B,qD,sBAK7B,4BACE,+BAA2B,6BAAwC,iBACrE,kB,yBAII,gCACE,YACF,kB,uBAFQ,gCACN,qD,2FAHJ,gCAAyG,gKAAyB,GAAGw8B,MAAMx8B,WAAW,EAAnB,qBAA1B,CAAmE,uLAAiF,GAAGw8B,MAAMx8B,WAAW,EAAnB,oBAA2C,GAAGw8B,MAAMx8B,WAAW,EAAnB,uBACxS,gCAAyB,6BAA0C,iBACnE,kCAGF,iB,0FALyG,6EAAmE,yCAClK,4CACkD,qD,sBAI5D,+BAA6H,6BAAwC,kB,qBAmBjK,6B,qBACA,6B,yBAaA,gCACE,YACF,kB,uBAF2G,6BACzG,qD,mDAHJ,gCAA2E,+LAAyB,GAAGw8B,MAAMx8B,WAAW,EAAnB,yBACnG,gCAAyB,6BAA0C,iBACnE,kCAGF,iB,yHAL2E,gFAAyE,yCAC1I,4CACmB,iH,yBAMnC,gCAA+D,YAAc,kB,uBAAjC,2BAAmB,4C,mDAFzD,iCAAsF,+LAAyB,GAAGw8B,MAAMx8B,WAAW,EAAnB,yBACtH,gCAAyB,6BAA0C,iBACnE,kCACF,iB,yHAH8F,gFAAyE,yCAC7J,4CACkB,wD,yBAjC7B,+BACG,4BACE,yBACE,uBAEA,4BACE,4BAAO,6BAAkD,iBAC3D,iBACA,uBAGA,4BACE,4BACE,qCACA,qCACF,iBACF,iBACF,iBACF,iBACA,6BACE,0BACE,qBACA,0BAAI,gCAA2B,aAAc,iBAAQ,iBACrD,6BAA4C,gCAA2B,8BAAwC,iBAAQ,iBACvH,0BACE,mCAMA,mCAIF,iBACF,iBACF,iBACF,kB,sGAzBqB,+FACA,6FAQgB,4CAGpB,8FAMA,8F,yBAhCnB,0BACC,kCAuCA,kB,uCAvCwB,gD,yBAjD7B,yBACE,2BACE,+BACE,4BACE,yBACE,4BACE,4BAAO,6BAAqD,iBAC9D,iBACA,4BACG,4BAAO,8BAA0C,iBACnD,iBACA,6BACE,kCACF,iBACA,6BACE,6BACE,qCACF,iBACF,iBACH,iBACF,iBACA,6BACE,0BACE,0BAAI,gCAA2B,aAAc,iBAAQ,iBACrD,0BACE,gCAA2B,aAAkB,iBAC/C,iBACA,+BAMA,+BAGA,0BACE,mCAMA,kCACF,iBACF,iBACF,iBACF,iBACA,gCAyCF,iBACF,kB,uEA9EqB,qDAIK,8FAOe,4CAEF,gDAExB,oDAMA,oDAIM,qHAMD,sHAKV,yN,yBAzDf,4BACE,yBAAI,yBAAU,iBACf,+BACE,4BACE,yBACE,oBACF,iBACF,iBACA,4BACE,+BA2FF,iBACF,iBACD,kB,uCA7F0B,wD,yBA/C5B,yBACE,8BAGA,8BAMA,8BAQA,8BAMA,8BAcA,8BAuGF,kB,4CA7IuD,wEAC/B,6DAGC,6DAMA,6DAQA,uFAMA,6DAcN,8D,mDAlE7B,4BAEE,4BACE,4BAAO,6BAAwD,iBACjE,iBACA,6BACE,6BACE,+BACE,4BACE,yBACE,4BACE,8BACF,iBACA,6BACE,8BACF,iBACA,6BACE,8BACF,iBACA,6BACE,8BACF,iBACA,6BACE,8BACF,iBACF,iBACF,iBACA,6BACE,+BA8IA,0BACE,6BACE,4BAAsB,2FAAqB,iBAC7C,iBACF,iBACF,iBACF,iBAEF,iBACJ,iBAGA,iB,gCA1JmC,qDDhEzC,iBAoCC,WAAoBoD,EAA+CxV,EAA0C0V,EAAuC7F,GAAhI,KAAA2F,UAA+C,KAAAxV,kBAA0C,KAAA0V,WAAuC,KAAA7F,aA9BpJ,KAAAY,QAAkB,KAIlB,KAAA8U,OAAgC,CAC/BzO,aAAc,KACd+3B,OAAQ,KACRzpC,UAAW,KACXmE,MAAO7H,KAAKgU,SAASY,SACrBuK,cAAe,IAGhB,KAAAvV,cAA+B,GAE/B,KAAAwjC,KAAoB,KACpB,KAAAC,QAAwD,KAExD,KAAA5hC,MAAyB,GAEzB,KAAA6hC,UAAwB,GAExB,KAAAC,cAAuB,G,OAWvB,YAAAttC,SAAA,WACCD,KAAKitC,UAAY,IAAI,EAAAn7B,SAGtB,YAAA1G,KAAA,SAAKyY,EAA+Bja,GAApC,WAIC,GAFA5J,KAAK4J,cAAgBA,EAEP,MAAVia,EAAgB,CACnB7jB,KAAK6jB,OAASA,EAEd,IAAI2pB,EAASxtC,KAAK4J,cAAc8C,WAAU,SAAA7C,GAAO,OAAAA,EAAI5G,OAAS,EAAK4gB,OAAOzO,iBAE1D,IAAZo4B,IACHxtC,KAAKotC,KAAOptC,KAAK4J,cAAc4jC,IAGhC,IAAIC,EAASztC,KAAKotC,KAAKM,QAAQhhC,WAAU,SAAAygC,GAAU,OAAAA,EAAOz4B,MAAQ,EAAKmP,OAAOspB,WAE9D,IAAZM,IACHztC,KAAKqtC,QAAUrtC,KAAKotC,KAAKM,QAAQD,IAGd,MAAhBztC,KAAKqtC,SAAyC,wBAAtBrtC,KAAKqtC,QAAQrhC,MAMxChM,KAAK8T,QAAQmS,eAAejmB,KAAK6jB,OAAOspB,OAAQntC,KAAK6jB,OAAOngB,WAAWwG,MAAK,SAAAyjC,GACtE,EAAKliC,MAAQkiC,EAASliC,MACtB,EAAK8hC,cAAgBI,EAASJ,iBAC7BjjC,OAAM,SAACC,GACR,EAAKC,MAAMD,MAKlBvK,KAAKstC,UAAY,GACjB,IAAK,IAAI9pC,EAAI,EAAGA,EAAIxD,KAAK6jB,OAAO1E,cAAcyuB,OAAO3sC,SAAUuC,EAAG,CACjE,IAAI0pC,EAAQltC,KAAK6jB,OAAO1E,cAAcyuB,OAAOpqC,GAEzCqqC,EAAqB,CAAEX,MAAOA,EAAOY,SAAUtqC,EAAGuqC,mBAAmB,GAEjD,MAApBb,EAAMx8B,YAAsBypB,OAAOoI,KAAK2K,EAAMx8B,YAAYzP,OAAS,IACtE4sC,EAASG,eAAgB,GAG1BhuC,KAAKstC,UAAUtpC,KAAK6pC,MAKvB,YAAAI,uBAAA,sBACK9jC,EAAQnK,KAAK4J,cAAc8C,WAAU,SAAA7C,GAAO,OAAAA,EAAI5G,OAAS,EAAK4gB,OAAOzO,iBAE1D,IAAXjL,EACHnK,KAAKotC,KAAOptC,KAAK4J,cAAcO,IAG/BnK,KAAKotC,KAAO,KACZptC,KAAKqtC,QAAU,OAIjB,YAAAa,uBAAA,sBACK/jC,EAAQnK,KAAKotC,KAAKM,QAAQhhC,WAAU,SAAAygC,GAAU,OAAAA,EAAOz4B,MAAQ,EAAKmP,OAAOspB,UAU7E,GAPCntC,KAAKqtC,SADS,IAAXljC,EACYnK,KAAKotC,KAAKM,QAAQvjC,GAGlB,KAII,MAAhBnK,KAAKqtC,SAAyC,wBAAtBrtC,KAAKqtC,QAAQrhC,MAaxC,GAPAhM,KAAK8T,QAAQmS,eAAejmB,KAAK6jB,OAAOspB,OAAQntC,KAAK6jB,OAAOngB,WAAWwG,MAAK,SAAAyjC,GACvE,EAAKliC,MAAQkiC,EAASliC,MACtB,EAAK8hC,cAAgBI,EAASJ,iBAC7BjjC,OAAM,SAACC,GACR,EAAKC,MAAMD,MAG2B,MAAvCvK,KAAK6jB,OAAO1E,cAAsB,OAAW,CAChD,IAAIgvB,EAAM,CACTniC,KAAM,KACNlI,cAAe,KACfopC,MAAO,GAERltC,KAAK6jB,OAAO1E,cAAsB,OAAI,CAACgvB,GACvCnuC,KAAKstC,UAAUtpC,KAAK,CAAEkpC,MAAOiB,EAAKL,SAAU,EAAGC,mBAAmB,UAKnE/tC,KAAKyL,MAAQ,IAIf,YAAA2iC,SAAA,WACC,IAAID,EAAM,CACTniC,KAAM,KACNlI,cAAe,KACfopC,MAAOltC,KAAK6jB,OAAO1E,cAAcyuB,OAAO3sC,QAErCotC,EAAMruC,KAAK6jB,OAAO1E,cAAsB,OAAEnb,KAAKmqC,GACnDnuC,KAAKstC,UAAUtpC,KAAK,CAAEkpC,MAAOiB,EAAKL,SAAUO,EAAM,EAAGN,mBAAmB,KAGzE,YAAAO,YAAA,SAAYR,EAAkBS,GAC7B,GAAIT,EAAW9tC,KAAK6jB,OAAO1E,cAAsB,OAAEle,OAAQ,CAC1D,IAAIutC,EAAcxuC,KAAKyuC,iBACnBD,IAAgBD,EAAgB,GACnCvuC,KAAKstC,UAAU3lC,OAAO6mC,EAAa,GAGpCxuC,KAAKstC,UAAU3lC,OAAO4mC,EAAe,GAGrC,IADA,IAAIG,EAAc,EACTlrC,EAAI,EAAGA,EAAIxD,KAAKstC,UAAUrsC,SAAUuC,EAAG,CAC/C,IAAIqqC,EAAqB7tC,KAAKstC,UAAU9pC,GAExCqqC,EAASC,SAAWY,EAEfb,EAASE,oBACbW,GAA4B,GAI9B1uC,KAAK6jB,OAAO1E,cAAsB,OAAExX,OAAOmmC,EAAU,KAIvD,YAAAW,eAAA,WACC,IAAK,IAAIjrC,EAAI,EAAGA,EAAIxD,KAAKstC,UAAUrsC,SAAUuC,EAAG,CAG/C,GAFexD,KAAKstC,UAAU9pC,GAEjBuqC,kBACZ,OAAOvqC,EAIT,OAAQ,GAGT,YAAAmrC,oBAAA,SAAoBd,GACnB,IAAIW,EAAcxuC,KAAKyuC,kBAEH,GAAhBD,IACHxuC,KAAKstC,UAAU3lC,OAAO6mC,EAAa,GAE/BA,GAAeX,EAASC,SAAW,IAKxC9tC,KAAK4uC,sBAAsBf,EAASX,MAAMppC,cAAe+pC,EAASC,UAAU,IAG7E,YAAAe,eAAA,SAAehtC,EAA6BitC,GAC3C,IAAK,IAAItrC,EAAI,EAAGA,EAAI3B,EAAKktC,WAAW9tC,SAAUuC,EAAG,CAChD,IAAIwrC,EAAYntC,EAAKktC,WAAWvrC,GAEhC,GAAIwrC,EAAUF,UAAYA,EACzB,OAAOE,EAAU3vC,UAKpB,YAAA4vC,oBAAA,SAAoBptC,EAAWqtC,EAAkBrB,GAChD,GAAgB,MAAZqB,GAAiC,KAAbA,GAQxB,IAAK,IAAI7lB,EAAI,EAAGA,EAAIwkB,EAASsB,QAAQC,MAAMnuC,OAAQooB,IAClD,GAAIwkB,EAASsB,QAAQC,MAAM/lB,GAAGlB,OAAStmB,EAAKsmB,KAAM,CACjD,IAAIknB,EAAmBxB,EAASsB,QAAQC,MAAM/lB,GAE9C,GAAyB,MAArBgmB,EAAYnlB,MAAe,CAC9BroB,EAAKqoB,MAAQ,GAEb,IAAK,IAAI1mB,EAAI,EAAGA,EAAI6rC,EAAYnlB,MAAMjpB,SAAUuC,EAAG,CAClD,IAAIgf,EAAO6sB,EAAYnlB,MAAM1mB,GAE7B3B,EAAKqoB,MAAM1H,EAAKvf,MAAQ,MAI1B,aArBiB,MAAdpB,EAAKqoB,QACRroB,EAAKqoB,MAAQ,KAyBhB,YAAA0kB,sBAAA,SAAsB1hC,EAA2BqhC,EAAuBe,GAAxE,WACC,QADuE,IAAAA,OAAA,GAC7C,KAAtBpiC,GAAiD,MAArBA,EAA2B,CAC1D,IAAI2gC,EAAqB7tC,KAAKstC,UAAUiB,GAYxC,OAVAV,EAASG,eAAgB,EACzBH,EAASsB,QAAU,KACnBtB,EAASX,MAAMx8B,WAAa,SAIR,IAFhB89B,EAAcxuC,KAAKyuC,mBAEED,IAAgBD,EAAgB,GACxDvuC,KAAKstC,UAAU3lC,OAAO6mC,EAAa,IAMrC,IAIKA,EAJDW,EAAUnvC,KAAKstC,UAAUiB,GAAeY,QAC7B,MAAXA,GAAmBA,EAAQjiC,oBAAsBA,IAKhC,IAFhBshC,EAAcxuC,KAAKyuC,mBAEED,IAAgBD,EAAgB,IACxDvuC,KAAKstC,UAAU3lC,OAAO6mC,EAAa,GAE/BA,EAAcD,IACjBA,GAAgC,IAIlCvuC,KAAKstC,UAAU3lC,OAAO4mC,EAAgB,EAAG,EAAG,CAAER,mBAAmB,EAAMoB,QAASA,KAGhFnvC,KAAK8T,QAAQiS,iBAAiB7Y,EAAmBlN,KAAK6jB,OAAOspB,QAAQjjC,MAAK,SAACklC,GAC1E,IAAIZ,EAAc,EAAKC,iBACnBZ,EAAqB,EAAKP,UAAUiB,GACpCrB,EAAQW,EAASX,MAgBrB,GAdIoC,IACHpC,EAAMx8B,WAAa,IAGpBm9B,EAASsB,QAAU,CAAEjiC,kBAAmBA,EAAmBkiC,MAAOA,IAE9C,GAAhBZ,IAAsBA,IAAgBD,EAAgB,GAAKa,EAAMnuC,OAAS,KAC7E,EAAKqsC,UAAU3lC,OAAO6mC,EAAa,GAE/BA,EAAcD,IACjBA,GAAgC,IAI9Ba,EAAMnuC,OAAS,EAAG,CACrB4sC,EAASG,eAAgB,EAEzB,IAAK,IAAIxqC,EAAI,EAAGA,EAAI4rC,EAAMnuC,SAAUuC,EAAG,CACtC,IAAI3B,EAAOutC,EAAM5rC,GAEjB,IAAI8rC,GAAiD,MAA/BpC,EAAMx8B,WAAW7O,EAAKsmB,SAC3C+kB,EAAMx8B,WAAW7O,EAAKsmB,MAAQ,CAC7BA,KAAMtmB,EAAKsmB,KACXnC,WAAY,KACZupB,gBAAgB,GAGC,MAAd1tC,EAAKqoB,OAAiBroB,EAAKqoB,MAAMjpB,OAAS,GAAG,CAChDisC,EAAMx8B,WAAW7O,EAAKsmB,MAAM+B,MAAQ,GAEpC,IAAK,IAAIb,EAAI,EAAGA,EAAIxnB,EAAKqoB,MAAMjpB,SAAUooB,EAAG,CAC3C,IAAI7G,EAAO3gB,EAAKqoB,MAAMb,GAEtB6jB,EAAMx8B,WAAW7O,EAAKsmB,MAAM+B,MAAM1H,EAAKvf,MAAQ,OAUnD,EAAKqqC,UAAU3lC,OAAO4mC,EAAgB,EAAG,EAAG,CAAER,mBAAmB,EAAMoB,QAAS,CAAEjiC,kBAAmBA,EAAmBkiC,MAAOA,UAG/HvB,EAASG,eAAgB,KAExB1jC,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKd,YAAAilC,mBAAA,SAAmB3tC,GAGjB,IAAK,IAAM/E,KAFX+E,EAAKmkB,WAAa,KAEAnkB,EAAKqoB,MAChBroB,EAAKqoB,MAAM6Z,eAAejnC,KAC5B+E,EAAKqoB,MAAMptB,GAAO,OAKzB,YAAAmZ,SAAA,sBACCjW,KAAK8T,QAAQwD,MAAMtX,KAAK6jB,QAAQ3Z,MAAK,SAAA8hC,GAEpC,EAAKiB,UAAU5/B,KAAK2+B,GACpB,EAAK79B,WAAWgI,UACd7L,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA4mB,OAAA,sBAEwB,MAAnBnxB,KAAK6jB,OAAOnP,IACf1U,KAAK8T,QAAQqS,OAAOnmB,KAAK6jB,OAAOnP,KAAKxK,MAAK,WACzC,EAAKiE,WAAWgI,UACd7L,OAAM,SAACC,GACT,EAAKC,MAAMD,MAKZvK,KAAKmO,WAAWgI,QAIlB,YAAA3L,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA7WrChP,GAAmC,0K,iCAAnCA,EAAmC,qE,GAAA,K,unIC/BhD,4BACE,8BAEA,4BACE,yBACE,4BACF,iBACF,iBAEA,+BAAwC,sFAA0B,EAAA0a,cAEhE,+BACE,8BASA,4BACE,6BACE,6BAAO,6BAA+D,iBACxE,iBACA,8BACE,+BACE,iCAAoB,4EAAiC,4BAA+B,EAAAg4B,4BAClF,yBACA,mCACF,iBACF,iBACF,iBACF,iBACA,gCAcA,gCAcA,iCAwLA,6BACE,wBACA,8BACE,8BACE,gCAAmF,wCAAS,EAAA9c,Y,wBAA5F,iBACA,2B,wBACF,iBACF,iBACF,iBAEF,iBACF,iBAEF,iB,+BAlQQ,oDAW8C,mEAetB,6DAAiC,+BAE3B,uDAK1B,iDAcA,6DAcmB,4FA4LE,2EACA,2EAAqC,uB,yUDjOtE,GAKa,EAAA51B,uC,+DAAAA,EAAmC,E,KAL/C,EAAA4B,U,MAAU,CACVC,SAAU,+BACVC,YAAa,gDACbC,UAAW,Q,sIAKQyjC,KAAI,E,KAAtB,EAAApvB,U,MAAU,a,0HElCZ,WAGA,GAFA,MAEA,QAOA,GAJA,MAGA,OACA,Q,2HCJI,4BAAqE,YAAW,kB,6BAAX,+C,qBA0D/C,6B,qBACA,6B,qBACA,6B,yBAVJ,yBACE,2BACE,6BAA0E,YAC5E,iBACA,yBACE,YACF,iBACA,4BACE,oCACA,oCACA,oCACF,iBACF,kB,iCAV8E,iDAG1E,6DAGW,yDACA,6DACA,oD,yBA/B3B,4BACE,4BAEI,yBACI,6BACJ,iBACA,+BACI,4BACE,yBACE,yBACE,6BACF,iBACA,yBACE,8BACF,iBACA,6BACE,8BACF,iBACF,iBACF,iBACA,6BACE,gCAaF,iBACJ,iBAEJ,iBACF,kB,8BAjBkC,uE,yBAwCd,8BACE,YACF,kB,uCADE,kE,wBAIJ,mC,uCAA0G,oC,yBAM1G,2BACE,gCACE,6BACF,iBACF,kB,uCAJoC,kE,yBAnB1C,yBACE,2BACE,6BACE,sBACA,2BACE,8BAA+B,YAAiB,iBAChD,8BAA+B,YAAmB,iBAClD,8BAA+B,aAAyB,iBACxD,iCAGF,iBAEA,2CAEF,iBACF,iBACA,6BACE,8BACE,8BAKD,iBACF,iBACH,kB,4CArBuC,wDACA,0DACA,kEACxB,sGAKQ,sGAMb,0D,mDAWd,6BACE,6CAAqB,uGAAoC,iBAC3D,kB,4HA/GZ,4BAEE,4BACE,4BACE,yBAAI,YAA+B,iBACrC,iBACF,iBAEA,4BACE,4BACE,4BACE,8BAAuC,kBAAG,iBAC1C,uBACA,+BAAuC,aAAsB,iBAC/D,iBACA,8BACE,oCACE,8BACE,iCAAiD,wF,wBAC/C,8BACF,iBACF,iBACF,iBACF,iBACF,iBAEA,iCAyCA,6BACE,8BACE,6BACE,8BACE,gCACE,6BACE,6BACE,4BAAoC,8BAA2C,iBACjF,iBACF,iBACA,6BAEE,gC,wBA4BF,iBACF,iBACA,gCAGF,iBACF,iBACF,iBACF,iBACF,iBACF,iB,oDAjHU,kEASqC,yDAKsE,kDAA2B,0DAQ1H,0FAqDc,oJA8BlB,+DDxGxB,iBAmBC,WAAoBmC,EAA+CE,EAAuCqyB,GAAtF,KAAAvyB,UAA+C,KAAAE,WAAuC,KAAAqyB,QAb1G,KAAAt3B,QAAkB,KAElB,KAAA8U,OAAgC,KAEhC,KAAA0iB,KAAuC,CACtCrjB,SAAU,GACVC,WAAY,EACZqjB,MAAO,EACPjG,UAAW,I,OAOZ,YAAAtgC,SAAA,sBACOyU,EAAM1U,KAAKqmC,MAAMS,SAASC,SAAS3pB,IAAI,OAE7Cpd,KAAK8T,QAAQsJ,IAAI1I,GAAKxK,MAAK,SAAA2Z,GAC1B,EAAKA,OAASA,EACd,EAAKojB,aAAa,MAGnB,IAAIC,EAAU,SAAW/D,OAAOC,SAAS+D,UAAYhE,OAAOC,SAASgE,KAAO,IAAMjE,OAAOC,SAASgE,KAAO,IAAM/pB,IAE/Grd,KAAKqnC,SAAW,EAAAC,UAAUJ,EAAU,qBACpClnC,KAAKqnC,SAASzmC,WAAU,SAAAmO,GACF,2BAAjBA,EAAQ/C,MACX,EAAKi7B,aAAa,EAAKV,KAAKpjB,gBAK/B,YAAAtQ,YAAA,WAEsB,MAAjB7S,KAAKqnC,UACRrnC,KAAKqnC,SAASzpB,YAIhB,YAAA6xB,MAAA,sBACCzvC,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQsS,IAAIpmB,KAAK6jB,OAAOnP,KAAKxK,MAAK,WAEtC,EAAK+8B,aAAa,EAAKV,KAAKpjB,eAE1B7Y,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA08B,aAAA,SAAa9jB,GAAb,WACoB,MAAfnjB,KAAK6jB,SAER7jB,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQuS,QAAQrmB,KAAK6jB,OAAOnP,IAAKyO,EAAYnjB,KAAKumC,KAAKrjB,UAAUhZ,MAAK,SAAAmB,GAE1E,EAAKu+B,iBAAiBv+B,GACtB,EAAKk7B,KAAOl7B,KAEVf,OAAM,SAACC,GACT,EAAKC,MAAMD,QAKd,YAAAm/B,gBAAA,SAAgBC,GACf,MAAmB,aAAfA,EAAI/iB,OACA5mB,KAAKgU,SAASlT,OAAO,0BAEL,YAAf6oC,EAAI/iB,QAAuC,QAAf+iB,EAAI/iB,OACjC5mB,KAAKgU,SAASlT,OAAO,yBAEL,WAAf6oC,EAAI/iB,OACL5mB,KAAKgU,SAASlT,OAAO,wBAEL,YAAf6oC,EAAI/iB,OACL5mB,KAAKgU,SAASlT,OAAO,yBAEL,aAAf6oC,EAAI/iB,OACL5mB,KAAKgU,SAASlT,OAAO,0BAEL,YAAf6oC,EAAI/iB,OACL5mB,KAAKgU,SAASlT,OAAO,yBAGrBd,KAAKgU,SAASlT,OAAO,0BAI9B,YAAA8oC,iBAAA,SAAiBrD,GAAjB,WAECA,EAAKhG,UAAUl/B,SAAQ,SAACsoC,GAEvBA,EAAIE,WAAa,CAChB,MAAS,CACR,CACC,MAAS,EAAK71B,SAASlT,OAAO,+BAC9B,OAAwB,QAAd6oC,EAAIG,MAAkB,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,QAG7F,CACC,MAAS,EAAK91B,SAASlT,OAAO,mCAC9B,OAAwB,eAAd6oC,EAAIG,OAAwC,sBAAdH,EAAIG,MAAgC,EAAKC,aAAaJ,GAAO,EAAKK,mBAAmBL,EAAIG,MAAO,sBAEzI,CACC,MAAS,EAAK91B,SAASlT,OAAO,uCAC9B,OAAwB,WAAd6oC,EAAIG,OAAoC,mBAAdH,EAAIG,OAA4C,kBAAdH,EAAIG,MAA4B,EAAKC,aAAaJ,GAAO,UAOpI,YAAAK,mBAAA,SAAmBC,EAAkBC,GACpC,IAAIzD,EAAQ,CAAC,aAAc,oBAAqB,SAAU,iBAAkB,iBAExE0D,EAAS1D,EAAMj6B,QAAQy9B,GAG3B,OAFgBxD,EAAMj6B,QAAQ09B,GAEdC,EACR,WAGA,IAIT,YAAAJ,aAAA,SAAaJ,GACZ,MAAmB,WAAfA,EAAI/iB,QAAsC,YAAf+iB,EAAI/iB,OAC3B,UAEgB,aAAf+iB,EAAI/iB,QAAwC,YAAf+iB,EAAI/iB,OAClC,QAGD,IAIR,YAAApc,MAAA,SAAMD,GACLvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAhJrC/O,GAA8B,uI,iCAA9BA,EAA8B,mgECnB3C,4BACE,4BACA,6BAEA,4BAEE,8BAEA,4BACE,gCAsHF,iBACF,iBACF,kB,MA3HU,oDAGE,qD,yTDKZ,GAKa,EAAAA,kC,+DAAAA,EAA8B,E,KAL1C,EAAA2B,U,MAAU,CACVC,SAAU,yBACVC,YAAa,0CACbC,UAAW,Q,uOEjBZ,WAKA,GAJA,MAGA,MACA,Q,GAEA,O,iGCFQ,4BAAqE,YAAW,kB,6BAAX,+C,yBAOjE,4BAKI,4BACI,6BAEI,sBACA,2BACI,8BACE,6BACA,YACF,iBACA,8BACE,6BACA,aACF,iBACJ,iBAEJ,iBACJ,iBACA,8BACI,2BAEI,0BAAI,yBAAG,aACL,8BACA,aACA,8BACF,iBAAI,iBACJ,0BAAI,aAAwC,8BAA6D,iBAE7G,iBACJ,iBACJ,kB,6BAtBkB,0DAIA,8DASC,kEAEL,6DAGE,mF,yBA0BI,yBACI,4BACE,wBAAG,YAAY,iBACjB,iBACA,4BACE,wBAAG,YAAe,iBACpB,iBACA,4BACE,wBAAG,YAAc,iBACnB,iBACJ,kB,uBARS,2CAGA,8CAGA,8C,mDAMb,6BACI,6CAAqB,uGAAoC,iBAC7D,kB,kGApCZ,6BAEI,4BAEI,+BACI,4BACI,yBACC,4BACI,6BAA2C,gBAAM,6BACrD,iBACA,4BACK,8BACJ,iBACD,6BACG,8BACF,iBACF,iBACJ,iBAEA,6BACI,gC,wBAWJ,iBACJ,iBACA,8BACI,gCAGJ,iBACJ,iBACJ,kB,8BAnBoC,iJAclB,6D,yBAnCtB,6BACI,gCAwCJ,kB,6BAxCuC,2CDtCnD,iBAqBE,WAAmBwW,EAAkCuyB,EAAuB9nC,EAAiCyqC,GAA1F,KAAAl1B,UAAkC,KAAAuyB,QAAwD,KAAA2C,YAf7G,KAAAj6B,QAAkB,KAElB,KAAAyU,UAAoB,GAEpB,KAAA+iB,KAAY,CACVC,MAAO,EACPrjB,WAAY,EACZD,SAAU,GACVoM,QAAS,IAQTtvB,KAAK0xB,QAAUnzB,EAAYmzB,UAC3B1xB,KAAK2xB,aAAe3xB,KAAK0xB,SAAWnzB,EAAYozB,eAChD3xB,KAAK4xB,cAAgB5xB,KAAK0xB,SAAW1xB,KAAK2xB,cAAgBpzB,EAAYszB,gB,OAGxE,YAAA5xB,SAAA,WAEED,KAAKwjB,UAAYxjB,KAAKqmC,MAAMS,SAAS7pB,OAAY,IAEjDjd,KAAKinC,aAAa,IAIpB,YAAAp0B,YAAA,aAGA,YAAA+3B,mBAAA,SAAmBC,GACjB,OAAOA,EAAKnQ,QAAQ,KAAM,OAG5B,YAAAoQ,wBAAA,SAAwBj8B,GACtB,OAAOoJ,KAAKE,UAAUtJ,IAGxB,YAAAo4B,aAAA,SAAa9jB,GAAb,WAEEnjB,KAAK+O,QAAU,KAEf/O,KAAK8T,QAAQ4P,iBAAiB1jB,KAAKwjB,UAAWxjB,KAAKumC,KAAKrjB,SAAUC,GAAYjZ,MAAK,SAAAmB,GAEjF,EAAKs+B,IAAMt+B,EAEX,EAAKk7B,KAAO,EAAKoD,IAAI+F,gBAEpBplC,OAAM,SAACC,GACR,EAAKC,MAAMD,OAKf,YAAAC,MAAA,SAAMD,GACFvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCA1DzC9O,GAAoB,mJ,iCAApBA,EAAoB,slDCfjC,4BACI,4BACA,6BAEA,4BACI,8BAEI,4BACI,yBACI,4BACJ,iBACJ,iBACA,+BAmCA,8BA0CR,iBACJ,kB,MArFc,oDAOI,0CAmCA,sE,qgBDrClB,GAKa,EAAAA,wB,+DAAAA,EAAoB,E,KALhC,EAAA0B,U,MAAU,CACTC,SAAU,MACVC,YAAa,2BACbC,UAAW,CAAC,sB,yOEbd,WAEA,GADA,MACA,QACA,SAMA,GAJA,MAIA,QAEA,QAOA,GAFA,OAEA,Q,sLCgBoB,6BACE,2BAAyD,kHAAuC,6BAAoD,iBACtJ,kB,mDAaE,6BAEE,6BAA+B,gHAC7B,6BACE,2BAA6F,uH,uBAAiF,iBAC9K,4BAAqF,YAA0E,iBACjK,iBACF,iBACF,iB,0BAJyI,8EAC9C,6G,yBAVvG,4BACE,4BACE,6BACM,6BAEE,+BAUN,iBACF,iBACF,iBACF,kB,6BAbkC,+C,mDAepC,4BACE,4BAIE,uCAME,0GAAuC,mFAAvC,CAAuC,yFAGxC,iBACH,iBACF,iB,gCAVM,2CAAa,iCAAb,CAAa,oBAAb,CAAa,0CAAb,CAAa,oCDhD3B,IAGA,aAoHE,WAAoBa,EAAsC2sB,EAA+BhX,EAAkCuyB,GAAvG,KAAAloC,eAAsC,KAAA2sB,aAA+B,KAAAhX,UAAkC,KAAAuyB,QA7G3H,KAAA3Q,KAAmB,CACjBia,OAAQ,EACRC,KAAM,GAKR,KAAArzB,oBAA8B,EAO9B,KAAA1Y,KAAoB,GAKpB,KAAAqD,KAAe,GAKf,KAAAivB,KAAen2B,KAAK01B,KAAKia,OAKzB,KAAAle,QAAkB,KAElB,KAAA7a,QAAgB,IAAI1C,KAgBpB,KAAAkiB,QAAkB,EAUlB,KAAAxB,QAAkB,EAElB,KAAAib,aAAyB,GAKzB,KAAA5b,WAAoB,CAClB,CACE9L,KAAM,YACNtgB,MAAO,YACP8a,GAAI,eACJuR,OAAQ,uCACRC,IAAK,4BACLC,UAAU,IAad,KAAA0b,oBAA8B,EAgB9B,KAAAjnB,eAA+B,IAAI,EAAA/W,QAEnC,KAAAmH,IAAqB,K,OAWrB,YAAAhZ,SAAA,sBACDD,KAAK+vC,cAAgB/vC,KAAKqmC,MAAMppB,OAAOrc,WAAU,SAAAqc,GAC3C,IAAI+yB,EAAe/yB,EAAqB,aACvC/P,EAAoB+P,EAA0B,kBAEjD+yB,GAAgB9iC,GAClB,EAAK4G,QAAQkH,aAAag1B,EAAc9iC,GAAmBhD,MAAK,SAAA+lC,GAC/D,EAAKziB,QAAQ,CAACyiB,IACd,EAAK9uC,OAAO8uC,EAAQ,SAClB3lC,OAAM,SAACC,GACT,EAAKC,MAAMD,UAMb,YAAAsI,YAAA,WACE7S,KAAK0c,IAAItb,SACZpB,KAAK+vC,cAAchY,eAGlB,YAAAptB,gBAAA,sBAEQ0qB,EAAQr1B,KAAKi0B,WAAW,GAE9Bj0B,KAAK0c,IAAM,IAAI,EAAA0O,IAAI,CACjBC,UAAW,MACX1oB,MAAO,CACL,QAAW,EACX,KAAQ0yB,EAAMlN,KACd,SAAY,CACV,wBAAwB,GAE1B,QAAW,CACT,OAAU,CACR,KAAQ,SACR,IAAOkN,EAAMlB,IACb,SAAY,MAGhB,OAAUkB,EAAMnB,OAChB,OAAUiP,OAAOC,SAAS8M,SAAW,KAAO/M,OAAOC,SAASzY,KAAOtN,IAAM,kCACzE,OAAU,CACR,CACE,GAAMgY,EAAM1S,GACZ,KAAQ,SACR,OAAU,YAKhB2I,KAAM,EACN6kB,oBAAoB,EACpB5kB,OAAQ,EAAE,UAAW,aAGvBvrB,KAAK0c,IAAIpU,GAAG,QAAQ,WAClB,EAAKkjB,aAGPxrB,KAAK0c,IAAIwP,WAAWlsB,KAAKssB,oBAG3B,YAAA8jB,WAAA,SAAWja,GACTn2B,KAAKm2B,KAAOA,EAERn2B,KAAKm2B,OAASn2B,KAAK01B,KAAKia,SAC1B3vC,KAAKo2B,QAAS,GAGhBp2B,KAAKqwC,uBAELrwC,KAAKiZ,IAAM,MAGb,YAAAq3B,aAAA,SAAa9yC,GACXwC,KAAKo2B,OAAS54B,GAGhB,YAAAy0B,iBAAA,WACEjyB,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMlY,KAAKyxB,WAG1C,YAAAjG,QAAA,sBA8BD,GA5BGxrB,KAAK0c,IAAIpU,GAAG,cAAc,WACxB,EAAKqjB,eAGP3rB,KAAK2rB,YAGL3rB,KAAK0c,IAAIwP,WAAW,IAAI,EAAAC,kBAAkB,CAAE,gBAAkB,KAC9DnsB,KAAK0c,IAAIwP,WAAW,IAAI,EAAAqkB,mBAAmB,CAAEC,SAAS,IAAS,gBAE/DxwC,KAAK0c,IAAIpU,GAAG,QAAS,mBAAmB,SAACvD,GACvC,EAAK0rC,oBAAoB1rC,MAG3B/E,KAAK0c,IAAIpU,GAAG,QAAS,oBAAoB,SAACvD,GACxC,EAAK0rC,oBAAoB1rC,MAG9B/E,KAAK0c,IAAIpU,GAAG,wBAAwB,SAACkR,GAChCA,EAAEsS,SAAS7qB,OAAS,GAAKuY,EAAE6U,OAAOptB,OAAS,EAC7C,EAAKsb,oBAAqB,EAG1B,EAAKA,oBAAqB,KAK1Bvc,KAAK6D,KAAK,CACZ,IAAI6sC,EAAK,CAAC,KAAO,oBAAqB,SAAW1wC,KAAK6D,MAChD7D,KAAK0c,IAAIyQ,UAAU,YAAaK,QAAQkjB,GAE9C1wC,KAAK2wC,cAAc3wC,KAAK6D,KAAK,GAAI,QAIjC,YAAA4sC,oBAAA,SAAoB1rC,GAClB,IAAK/E,KAAKo2B,QAA4B,MAAlBrxB,EAAM+mB,UAAoB/mB,EAAM+mB,SAAS7qB,OAAS,EAAG,CACvE,IAAMktB,EAAUppB,EAAM+mB,SAAS,GAEA,MAA3BqC,EAAQc,WAAWhsB,MAAiC,MAAhBjD,KAAK6pB,SAAmB7pB,KAAK6pB,QAAQoF,WAAWhsB,OAASkrB,EAAQc,WAAWhsB,MAClHjD,KAAKmB,OAAOgtB,EAAS,QAO3B,YAAAxC,UAAA,sBAEQ4R,EAAS,WAEfv9B,KAAK0c,IAAI4Q,UAAUiQ,EAAQ,CACzBvxB,KAAM,UACNnI,KAAM,CACJ,KAAQ,oBACR,SAAY,MAKhB7D,KAAK0c,IAAI6Q,SAAS,CAChB,GAAMgQ,EAAS,WACf,KAAQ,OACR,OAAUA,EACV,OAAU,GACV,MAAS,CACP,aAnRc,UAoRd,eAAgB,GAChB,qBAAsB,SAExBz+B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,MAKpEkB,KAAK0c,IAAI6Q,SAAS,CAChB,GAAMgQ,EAAS,UACf,KAAQ,SACR,OAAUA,EACV,MAAS,CACP,gBAAiB,GACjB,eAnSc,UAoSd,sBAAuB,EACvB,sBAAuB,WAEzBz+B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,MAsC/DkB,KAAK0c,IAAI6Q,SAAS,CAChB,GAAMgQ,EAAS,SACf,OAAUA,EACV,KAAQ,SACR,MAAS,CACP,aAAc,QACd,kBAAmB,OACnB,kBAAmB,GAErB,OAAU,CACR,aAAc,CAAC,MAAO,iBAAkB,CAAC,MAAO,iBAChD,YAAa,CAAC,mBACd,cAAe,CAAC,EAAG,IACnB,cAAe,MACf,YAAa,MAIjBv9B,KAAK6vC,aAAaxuC,SAAQ,SAAA6zB,GACxB,EAAK0b,eAAe1b,OAIxB,YAAA2b,mBAAA,SAAmBxb,GAGjBr1B,KAAKi0B,WAAW5yB,SAAQ,SAAAyvC,GACtBA,EAAU1c,UAAW,KAGvBiB,EAAMjB,UAAW,EAEjBp0B,KAAK0c,IAAIq0B,SAAS,CAChB,QAAW,EACX,KAAQ1b,EAAMlN,KACd,SAAY,CACV,wBAAwB,GAE1B,QAAW,CACT,OAAU,CACR,KAAQ,SACR,IAAOkN,EAAMlB,IACb,SAAY,MAGhB,OAAUkB,EAAMnB,OAChB,OAAUiP,OAAOC,SAAS8M,SAAW,KAAO/M,OAAOC,SAASzY,KAAOtN,IAAM,kCACzE,OAAU,CACR,CACE,GAAMgY,EAAM1S,GACZ,KAAQ,SACR,OAAU,cAOlB,YAAAvB,OAAA,sBACEphB,KAAK8qB,WAAW1J,OAAOphB,KAAKkH,KAAMlH,KAAKyxB,SAASvnB,MAAK,SAAArG,GAC7C,EAAK6Y,IAAIyQ,UAAU,YAAaK,QAAQ3pB,GAG9C,EAAK2pB,QAAQ3pB,EAAKioB,aACjBxhB,OAAM,SAACC,GACR,EAAKC,MAAMD,OAMf,YAAAomC,cAAA,SAAchxC,EAAiBoF,GAA/B,WACe,MAATA,GACFA,EAAM4I,kBAGR3N,KAAK8vC,oBAAqB,EAG1B9vC,KAAKgxC,MAAQ9/B,YAAW,WACtB,IAAK,EAAK4+B,oBACJnwC,GAAyB,MAAjBA,EAAK6X,SAAkB,CACjC,IAAMqW,EAAS,UAAKluB,GAEhBquB,EAAU,GACVijB,EAAU,GAGa,UAAvBtxC,EAAK6X,SAASxL,MAA2C,eAAvBrM,EAAK6X,SAASxL,OAElDgiB,EAAU,IACVijB,EAAU,IAGZ,EAAKv0B,IAAIqR,UAAUF,EAAQ,CAAEG,QAASA,EAAS9a,SAAQ,EAAM+9B,QAASA,OAjB9D,MAuBhB,YAAA9vC,OAAA,SAAOxB,EAAiBoF,GAAxB,WAEe,MAATA,GACFA,EAAM4I,kBAGR3N,KAAK8T,QAAQuN,kBAAkB,CAAC1hB,EAAKsvB,WAAWjjB,MAAO,MAAM9B,MAAK,SAAAuB,GAChE,EAAKO,KAAOP,EAAM,GAClB,EAAKoe,QAAUlqB,EACf,EAAKw2B,KAAO,EAAKT,KAAKka,QAerBtlC,OAAM,SAACC,GACR,EAAKC,MAAMD,OAIf,YAAAijB,QAAA,SAAQ3pB,GACN7D,KAAK6D,KAAOA,GAGd,YAAAqtC,qBAAA,SAAqB7b,GAEfA,EAAMT,OACR50B,KAAK4wC,eAAevb,EAAM3gB,KAG1B1U,KAAKmxC,kBAAkB9b,EAAM3gB,MAKjC,YAAAy8B,kBAAA,SAAkB5T,GAEhB,IAAMpzB,EAAQnK,KAAK6vC,aAAarjC,QAAQ+wB,IAEzB,IAAXpzB,IACFnK,KAAK0c,IAAIwQ,YAAYqQ,EAAS,WAC9Bv9B,KAAK0c,IAAIwQ,YAAYqQ,EAAS,YAC9Bv9B,KAAK0c,IAAIwQ,YAAYqQ,EAAS,UAC9Bv9B,KAAK0c,IAAIqQ,aAAawQ,GAEtBv9B,KAAK6vC,aAAaloC,OAAOwC,EAAO,KAKpC,YAAAymC,eAAA,SAAerT,GAGb,IAAe,IAFDv9B,KAAK6vC,aAAarjC,QAAQ+wB,GAEtB,CAChB,IAEI2S,EAAW/M,OAAOC,SAAS8M,SAC3BvlB,EAAOwY,OAAOC,SAASzY,KAE3B3qB,KAAK0c,IAAI4Q,UAAUiQ,EAAQ,CACzBvxB,KAAM,SACNolC,MAAO,CAAClB,EAAW,KAAOvlB,EAAOtN,IAAM,8CAAgDorB,mBAAmBxwB,KAAKE,UAAU,CAAEzD,IAAK6oB,QAIlIv9B,KAAK0c,IAAI6Q,SAAS,CAChB,GAAMgQ,EAAS,UACf,KAAQ,SACR,OAAUA,EACV,eAAgB,UAChB,MAAS,CACP,gBAAiB,GACjB,eAlgBa,UAmgBb,sBAAuB,EACvB,sBAAuB,WAEzBz+B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAvB7C,oBA4BlBkB,KAAK0c,IAAI6Q,SAAS,CAChB,GAAMgQ,EAAS,WACf,KAAQ,OACR,OAAUA,EACV,eAAgB,UAChB,OAAU,GACV,MAAS,CACP,aAnhBa,UAohBb,eAAgB,GAChB,qBAAsB,SAExBz+B,OAAQ,CAAC,MACP,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,KAxClD,oBA8ClBkB,KAAK0c,IAAI6Q,SAAS,CAChB,GAAMgQ,EAAS,SACf,OAAUA,EACV,eAAgB,UAChB,KAAQ,SACR,MAAS,CACP,aAAc,QACd,kBAAmB,OACnB,kBAAmB,GAErB,OAAU,CACR,aAAc,CAAC,OACb,CAAC,MAAO,gBAAkB8T,UAAUvwB,SAASzU,eAC7C,CAAC,WAAY,CAAC,SAAU,CAAC,MAAO,gBAAkBglC,UAAUvwB,SAASzU,gBAAiB,CAAC,SAAU,CAAC,MAAO,kBACzG,CAAC,SAAU,CAAC,MAAO,kBAErB,YAAa,CAAC,mBACd,cAAe,CAAC,EAAG,IACnB,cAAe,MACf,YAAa,KAjEC,oBAsElBrM,KAAK6vC,aAAa7rC,KAAKu5B,KAQ3B,YAAA8S,qBAAA,WAC6B,MAAvBrwC,KAAK4rB,iBACP5rB,KAAK4rB,eAAe0lB,YACpBtxC,KAAK0c,IAAI60B,cAAcvxC,KAAK4rB,iBAG9B5rB,KAAK4rB,eAAiB,KACzB5rB,KAAK0c,IAAIwP,WAAWlsB,KAAKssB,mBAEzBtsB,KAAKuc,oBAAqB,GAIzB,YAAAi1B,eAAA,SAAev4B,GAEbjZ,KAAKqwC,uBAELrwC,KAAKiZ,IAAMA,EAEXjZ,KAAKyxC,cAAcx4B,IAGrB,YAAAw4B,cAAA,SAAcx4B,GACD,MAAPA,GAGFjZ,KAAKqsB,cAAcpT,IAIvB,YAAAoT,cAAA,SAAcpT,GACmB,iBAA3BjZ,KAAKgM,KAAKie,cAA8D,YAA3BjqB,KAAKgM,KAAKie,aACzDjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACnCW,SAAU,CACR1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIU,UAA3B5sB,KAAKgM,KAAKie,cAAuD,eAA3BjqB,KAAKgM,KAAKie,aACvDjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACnCW,SAAU,CACR1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIU,SAA3B5sB,KAAKgM,KAAKie,cAAsD,cAA3BjqB,KAAKgM,KAAKie,eACtDjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACnCW,SAAU,CACR1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,MAI1B5sB,KAAK0c,IAAIwP,WAAWlsB,KAAK4rB,gBAER,MAAb3S,EAAIzb,OACNwC,KAAK4rB,eAAekB,IAAI7T,EAAIzb,QAIhC,YAAAk0C,UAAA,WACE,IAAMl6B,EAAWxX,KAAK2xC,kBAEtB3xC,KAAK4rB,eAAe0lB,YACpBtxC,KAAK0c,IAAI60B,cAAcvxC,KAAK4rB,gBAG5B5rB,KAAKiZ,IAAIzb,MAAQga,EACjBxX,KAAKiZ,IAAM,KAEXjZ,KAAK4rB,eAAiB,KAEzB5rB,KAAKuc,oBAAqB,GAGzB,YAAAo1B,gBAAA,WACE,GAA2B,MAAvB3xC,KAAK4rB,eAAwB,CAC/B,IAAIqC,EAAyBjuB,KAAK4rB,eAAeC,SAEjD,GAAIoC,EAAkBnC,SAAS7qB,OAAS,EAAG,CAKzC,GAA+B,iBAA3BjB,KAAKgM,KAAKie,aAAiC,CAG7C,IAFA,IAAIiE,EAAW,GAEN1qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAG1D,GAA8B,kBAF1B2qB,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACnB,IAAK,IAAIqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACvD6E,EAASlqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAI7C6E,EAASlqB,KAAKmqB,EAAQ3W,SAAS4W,aAInC,MAAO,CACLA,YAAaF,EACbliB,KAAM,gBAGL,GAA+B,eAA3BhM,KAAKgM,KAAKie,aAA+B,CAChD,IAAIoE,EAAS,GAEb,IAAS7qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAG1D,GAA8B,gBAF1B2qB,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACnB,IAASqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACvDgF,EAAOrqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAI3CgF,EAAOrqB,KAAKmqB,EAAQ3W,SAAS4W,aAIjC,MAAO,CACLA,YAAaC,EACbriB,KAAM,cAGL,GAA+B,cAA3BhM,KAAKgM,KAAKie,aAA8B,CAC/C,IAAIqE,EAAQ,GAEZ,IAAS9qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAC1D,IAAI2qB,EAEJ,GAA8B,qBAF1BA,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACnB,IAASqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACvDiF,EAAMtqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAI1CiF,EAAMtqB,KAAKmqB,EAAQ3W,SAAS4W,aAIhC,MAAO,CACLA,YAAaE,EACbtiB,KAAM,mBAIR,OAAOiiB,EAAkBnC,SAAS,GAAGtU,UAK3C,OAAO,MAGT,YAAAhN,MAAA,SAAMD,GACJvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCAluBlDzC,GAAwB,uJ,iCAAxBA,EAAwB,yD,GAAA,K,4nDC9BrC,4BACE,4BACA,6BAGA,4BAEE,4BACE,4BACE,0BACE,4BACE,4BAEE,4BACE,6BACE,6BACE,+BAAwC,gEAAqB,4BAAW,EAAAu2B,sBAAxE,iBACF,iBACF,iBACF,iBAGA,6BACE,6BACE,6BACE,6BACE,+BAAwC,8CAAe,EAAA7Q,WAAf,CAAwB,gDAAhE,iBACA,8BACE,iCAA8C,wCAAS,EAAAA,YACrD,0BAEF,iBACF,iBACF,iBACA,gCAIF,iBACF,iBACF,iBACF,iBACF,iBAEA,gCAmBF,iBACA,gCAiBF,iBAEA,8BACE,6BAEE,kCACE,sCAAa,+CAAe,EAAA8vB,qBAAA,MAA8B,iBAC5D,iBAEA,yBACA,iDAAgH,8CAAe,EAAAQ,eAAgC,iBAEjK,iBACF,iBACF,iBACF,iBACF,kB,MAjF4D,kDAAqB,mCAUM,8CAAkB,mCAEhB,+DAM/D,0EAUG,2DAoBf,0EA2BiB,8DAAkC,0CAAlC,CAAkC,a,qiDDlEjE,GAKa,EAAAh2C,4B,+DAAAA,EAAwB,E,KALpC,EAAAyB,U,MAAU,CACTC,SAAU,mBACVC,YAAa,oCACbC,UAAW,CAAC,+B,mHA4GoBgvB,kBAAmB,CAAF,C,KAAhD,EAAA3a,U,MAAU,0B,sHExIb,WAEA,GADA,MACA,O,+DCcoC,0BACI,+BAAkD,mFAAlD,iBAA0H,YAI9H,kB,uBAJ2B,iDAAmG,6D,yBAJtI,6BACI,yBAAI,YAA8B,iBAClC,4BACI,8BAMJ,iBACJ,kB,uCATQ,mDAEwB,wD,yBAJpC,0BACI,+BAWJ,kB,2CAXU,oEDNlC,iBAeI,WAAoBxD,GAAA,KAAAA,a,OAEpB,YAAAlO,SAAA,WACID,KAAKiW,SAAW,IAAI,EAAAnE,SAGxB,YAAA8/B,sBAAA,SAAsB7c,GACxB,IAAI8c,GAAa,EAOjB,OANA7xC,KAAKq0B,mBAAmBhzB,SAAQ,SAAA4zB,GAC5BA,EAAYvgB,MAAQqgB,GAASE,EAAYP,cAAczzB,OAAS,IAClE4wC,GAAa,MAIRA,GAGL,YAAAxP,QAAA,WACIriC,KAAKiW,SAAS5I,KAAMrN,KAAKq0B,oBACzBr0B,KAAKmO,WAAWgI,Q,iCA7BXva,GAA0B,oC,iCAA1BA,EAA0B,mqBCZvC,4BACI,4BACI,yBACI,4BACJ,iBACJ,iBAEA,6BACI,+BACI,4BACI,4BACI,4BACI,8BAaJ,iBACJ,iBACJ,iBAEA,6BACI,6BACI,6BACI,gCAAsB,wCAAS,EAAAuS,WAAA,UAE3B,4BACI,8BACJ,iBACJ,iBACA,iCAAsB,wCAAS,EAAAk0B,aAC3B,4BACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,iBACJ,kB,MApCqD,8D,i7CDLrD,GAKa,EAAAzmC,8B,+DAAAA,EAA0B,E,KALtC,EAAAuB,U,MAAW,CACRC,SAAU,sBACVC,YAAa,uCACbC,UAAW,CAAC,+B,kKEVhB,WASA,OAOA,SAMA,GAFA,MAEA,QAEA,O,uGCvBE,6BACE,6BACF,kB,sBAiBsB,2BACE,6BACF,kB,mDAKM,4BACE,4BACE,gCAAgC,2IAC9B,6BACF,iBACF,iBACF,kB,4FAyBI,2BACE,YACF,kB,uBAFkD,mFAChD,wD,yBALN,yBAII,6BAGJ,kB,uCAHuB,0D,oJAlC7B,4BACE,4BACE,4BACE,8BAOA,4BACE,yBACE,yBACE,6BACF,iBAEA,uCAAiC,0EAAgC,oFAAiH,iBAEpL,iBACA,0BACE,8BACI,0BACE,8BACF,iBAEA,wCAAiC,wEAA8B,oFAA2J,iBAE5N,iBACJ,iBACF,iBACA,+BAQF,iBACF,iBACA,6BAAgJ,6G,wBAC9I,uBACF,iBACF,iB,yDA3C+F,wNACzF,2FAEiC,uEAaI,iDAAgC,2BAAhC,CAAgC,sBAAhC,CAAgC,eAS5B,+CAA8B,yBAA9B,CAA8B,mBAA9B,CAA8B,sBAA9B,CAA8B,cAA9B,CAA8B,sBAKlE,kFAUmE,0G,mDAnD5F,6BAEM,4BACE,4BACE,+BAEE,+BACE,6BAIA,gCA4CF,iBACF,iBACF,iBAEA,4BACE,2BAAgC,kGAA6B,6BAC7D,iBACF,iBACF,iBACF,iB,gCAzD8B,8FAIO,uF,mDA8DvC,gCAAwC,2FACtC,6BACF,kB,mDACA,gCAAwC,2FACtC,6BACF,iB,mDAFmG,+CD9D/G,iBAiEC,WAAoB0W,EAAsCuU,GAAtC,KAAAvU,WAAsC,KAAAuU,oBArC1D,KAAAtU,YAAqB,IAAIC,KAEzB,KAAAd,SAAmB,EAInB,KAAArE,QAAkB,KAElB,KAAAoF,UAAoB,EAEpB,KAAAwU,aAAuB,EAKb,KAAA7S,SAAW,IAAI,EAAA5Y,aAEf,KAAAqzB,OAAS,IAAI,EAAArzB,aAYd,KAAAyc,gBAA0B,EAMnC,KAAA+O,kBAA4B,E,OAX5B,sBAAa,qCAAsB,C,IAAnC,SAAoClrB,GACnCwC,KAAK4oB,0BAA4B3Q,KAAKC,MAAMD,KAAKE,UAAU3a,IAC3DwC,KAAK0Z,kBAAoBlc,G,gCAa1B,YAAAyC,SAAA,aAGA,YAAA8oB,uBAAA,WAGC,IAFA,IAAIC,EAAahpB,KAAKipB,yBAAyBC,UAEvC1lB,EAAE,EAAGA,EAAEwlB,EAAW/nB,OAAQuC,IAAI,CAErC,IADYwlB,EAAWxlB,GACbuT,MACT,OAAO,EAIT,OAAO,GAGR,YAAAoS,aAAA,WACCnpB,KAAK2oB,aAAc,EAEnB3oB,KAAKoT,QAAUpT,KAAK+oB,yBAMpB,IAJA,IAAIK,EAAcppB,KAAK0Z,kBAAkBhJ,WAAqB,SAAEsI,OAIvDqQ,EAAI,EAAGA,EAAID,EAAYnoB,OAAQooB,IAAK,CAC5C,IAAMC,EAAKF,EAAYC,GAGvB,GAFAC,EAAGC,gBAAkB,GAEC,MAAhBD,EAAGzQ,WAAsC,KAAjByQ,EAAGzQ,WAAqC,MAAdyQ,EAAGxQ,SAAkC,KAAfwQ,EAAGxQ,QAAiB,CACjG,IAAI0Q,EAAU,IAAItV,KAAKoV,EAAGzQ,WACtB4Q,EAAU,IAAIvV,KAAKoV,EAAGxQ,SAEtB,UAAMkD,mBAAmBwN,EAAIC,KAChCH,EAAGuiB,UAAW,EACdviB,EAAGC,gBAAgBvlB,KAAK,CACvB,KAAQ,QACR,QAAWhE,KAAKgU,SAASlT,OAAO,qDAGjCd,KAAK2oB,aAAc,EAEnB3oB,KAAKoT,SAAU,GAGhB,IAAK,IAAI5P,EAAI,EAAGA,EAAI4lB,EAAYnoB,OAAQuC,IAEvC,GAAI6lB,IAAM7lB,EAAG,CACZ,IAAMkmB,EAAKN,EAAY5lB,GACvB,GAAsB,MAAhBkmB,EAAG7Q,WAAsC,KAAjB6Q,EAAG7Q,WAAqC,MAAd6Q,EAAG5Q,SAAkC,KAAf4Q,EAAG5Q,QAAiB,CACjG,IAAI6Q,EAAU,IAAIzV,KAAKwV,EAAG7Q,WACtB+Q,EAAU,IAAI1V,KAAKwV,EAAG5Q,SAGtB,UAAM6C,kBAAkB6N,EAAG5Q,UAAW6Q,EAAG7Q,UAAW+Q,EAAG/Q,UAAWgR,EAAGhR,aACxE0Q,EAAGC,gBAAgBvlB,KAAK,CACvB,KAAQ,QACR,QAAUhE,KAAKgU,SAASlT,OAAO,qCAGhCd,KAAK2oB,aAAc,EAEnB3oB,KAAKoT,SAAU,MASrBpT,KAAKiM,KAAKmd,GAGV,IAAIS,EAAU,KAEd,IAASR,EAAI,EAAGA,EAAID,EAAYnoB,OAAQooB,IAAK,CAC5C,IAAIhc,EAAO+b,EAAYC,GAEvB,GAAIA,EAAI,GACoB,MAArBQ,EAAQhR,WAA2C,KAAtBgR,EAAQhR,WAA0C,MAAnBgR,EAAQ/Q,SAAuC,KAApB+Q,EAAQ/Q,QAAiB,CACjH2Q,EAAU,IAAIvV,KAAK2V,EAAQ/Q,SAE/B,GAAwB,MAAlBzL,EAAKwL,WAAwC,KAAnBxL,EAAKwL,WAAuC,MAAhBxL,EAAKyL,SAAoC,KAAjBzL,EAAKyL,QAAiB,CACrG6Q,EAAU,IAAIzV,KAAK7G,EAAKwL,WAExB,UAAMsD,OAAOsN,EAAG7Q,UAAW+Q,EAAG/Q,aACjCvL,EAAKkc,gBAAgBvlB,KAAK,CACzB,KAAQ,UACR,QAAUhE,KAAKgU,SAASlT,OAAO,iCAGhC+oB,EAAQN,gBAAgBvlB,KAAK,CAC5B,KAAQ,UACR,QAAUhE,KAAKgU,SAASlT,OAAO,mCAQpC+oB,EAAUxc,IAIZ,YAAAgC,KAAA,SAAK4J,EAAoB64B,GACxB9xC,KAAKuwB,OAAOzY,KAAKmB,GAEjBjZ,KAAK8xC,sBAAwBA,GAG9B,YAAAhoB,gBAAA,WACC,IAAIC,EAA0B/pB,KAAK0Z,kBAAkBhJ,WAAqB,SAAEsI,OAExEC,EAAqB,IAAI,EAAA+Q,cAC7B/Q,EAAIJ,UAAY,KAChBI,EAAIH,QAAU,KAEdG,EAAIzb,MAAQ,CAAE,KAAQwC,KAAK8D,cAAcmmB,aAAc,YAAe,IAE9B,iBAApCjqB,KAAK8D,cAAcmmB,aACtBhR,EAAIzb,MAAMwO,KAAO,eAE2B,YAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,UAE2B,UAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,QAE2B,eAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,aAE2B,SAApChM,KAAK8D,cAAcmmB,aAC3BhR,EAAIzb,MAAMwO,KAAO,OAE2B,cAApChM,KAAK8D,cAAcmmB,eAC3BhR,EAAIzb,MAAMwO,KAAO,aAGlB+d,EAAO/lB,KAAKiV,GAEZjZ,KAAKuoB,kBAAkB5V,iBAGxB,YAAAyX,eAAA,SAAepX,GACd,IAAIqX,EAA4B,GAOhC,OALArqB,KAAK0Z,kBAAkBhJ,WAAWsC,EAAU/P,MAAM+V,OAAO3X,SAAQ,SAAAynB,GAChEA,EAAWtrB,MAAM6V,aAAahS,SAAQ,SAAAkkB,GACrC8E,EAASrmB,KAAKuhB,SAGT8E,GAGR,YAAAC,oBAAA,SAAoBC,GACnB,IAAIC,EAAS,KASb,OAPAD,EAAOlX,aAAahS,SAAQ,SAAAopB,GACL,kBAAlBA,EAAOF,SACVC,EAASC,EAAOjtB,UAKXgtB,GAGR,YAAAunB,iBAAA,SAAiB94B,EAAoBsM,GACpCtM,EAAIzb,MAAQ,IAAI0W,KAAKqR,GAAK3M,UAAUnF,YAGrC,YAAArS,OAAA,SAAOspB,GAKN,IAHA,IAAInF,EAAMvlB,KAAK0Z,kBAAkBhJ,WAAqB,SAElDE,GAAY,EACPpN,EAAI,EAAGA,EAAI+hB,EAAIvM,OAAO/X,OAAQuC,IAAK,CAChC+hB,EAAIvM,OAAOxV,GAGbqV,YAAc6R,EAAQ7R,YAC9BjI,EAAWpN,GAIVoN,GAAY,GACd2U,EAAIvM,OAAOrR,OAAOiJ,EAAU,IAK9B,YAAAsI,WAAA,SAAWG,GACV,IACMsW,EADWC,EAAOC,WAAWxW,GACTyW,eAAe,KACvC,OAAOF,IAASD,OAAOA,IAG1B,YAAAI,YAAA,SAAYjH,EAAYpY,GAEpBoY,EAAWhQ,UAAY,EAAAmX,QACzBnH,EAAWhQ,QAAU,IAAI5E,KAGzB4U,EAAWhQ,QAAU,EAAAmX,QAGtBjwB,KAAKmpB,gBAIN,YAAAld,KAAA,SAAK8d,GAGJA,EAAO9d,MAAK,SAASC,EAAGC,GAEvB,OAAmB,MAAfD,EAAE2M,WAAqC,KAAhB3M,EAAE2M,UACrB,EAEgB,MAAf1M,EAAE0M,WAAqC,KAAhB1M,EAAE0M,WACzB,EAGQ,IAAI3E,KAAKhI,EAAE2M,WACZ,IAAI3E,KAAK/H,EAAE0M,eAK7B,YAAA5C,SAAA,WACCjW,KAAK8V,SAASgC,KAAK9X,KAAK0Z,oBAGzB,YAAAtD,SAAA,WACCpW,KAAK8V,SAASgC,KAAK9X,KAAK4oB,4B,iCAtRb7sB,GAAsB,sF,iCAAtBA,EAAsB,uD,GAAA,K,+wECnDnC,0BACE,8BAKA,+BAEE,+BACE,4BAGE,4BACE,+BAiEF,iBAEF,iBAEA,4BAEE,4BACE,6BACE,kCAGA,mCAGF,iBACF,iBACF,iBAEF,iBACF,iBACF,kB,MAjGQ,uDAY0C,wDAyE7B,gDAGA,kD,kUDzDR,CACX,CACC,EAAA4X,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,a,EAjBhB,GAwBa,EAAAlf,0B,+DAAAA,EAAsB,E,KAxBlC,EAAAoB,U,MAAU,CACVC,SAAU,iBACVC,YAAa,kCACbC,UAAW,CAAC,wBACZqtB,KAAM,CAAE,eAAgB,QACxB9W,WAAY,CACX,CACC,EAAAF,QAAQ,YAAa,CACpB,EAAAC,WAAW,YAAa,CACvB,EAAAjR,MAAM,CACLsY,QAAS,IAEV,EAAA/H,QAAQ,WAET,EAAAU,WAAW,SACV,EAAAV,QAAQ,QACP,EAAAvQ,MAAM,CACLsY,QAAS,e,8EASsBgO,yBAAwB,E,KAA5D,EAAA2B,a,MAAa,yBAiBJ9U,SAAQ,E,KAAjB,EAAArY,SAES8yB,OAAM,E,KAAf,EAAA9yB,SAEQqG,cAAe,CAAF,C,KAArB,EAAAvG,QAKYstB,uBAAsB,E,KAAlC,EAAAttB,QAKQoc,eAAgB,CAAF,C,KAAtB,EAAApc,W,2HEpFF,WAIA,GAHA,MAEA,MACA,QACA,SAKA,GAFA,OACA,MACA,QACA,Q,GAEA,M,mJCAc,yBAAiB,YAA6B,kB,8BAA7B,iE,mDALzB,6BACE,4BACE,6BAEE,6BACE,8BACA,yBAAI,6BAAuD,YAAyB,iBACtF,iBAEA,uCAOE,0GAAuC,8FAAvC,CAAuC,yFAGxC,iBACH,iBACF,iBACF,iB,gCAjBa,2CACsD,qEAI3D,2CAAa,cAAb,CAAa,oBAAb,CAAa,wBAAb,CAAa,sBAAb,CAAa,oC,qBAsBb,sB,mDACA,6BAEE,8BAAM,kGACJ,gCACE,6BACF,iBACF,iBACF,kB,mDAVF,6BAAqE,kGAA+B,IAA/B,CAAoC,qFAAgC,KAEvI,6BACA,+BASF,iB,gCAVgC,sDACxB,sD,iFDrBpB,aA4EC,WAAoButB,EAA+BhX,EAAkC3V,EAAsCkoC,EAC1H9nC,EAAkCyV,GADf,KAAA8W,aAA+B,KAAAhX,UAAkC,KAAA3V,eAAsC,KAAAkoC,QACxF,KAAAryB,WAvEnC,KAAA0hB,KAAO,CACNC,SAAU,WACVC,WAAY,aACZC,UAAW,aAGZ,KAAAtZ,oBAA8B,EAE9B,KAAAy1B,gBAA0B,EAM1B,KAAA5iC,UAAoB,EAEpB,KAAA6iC,UAAoB,EAEpB,KAAA7b,QAAkB,EAelB,KAAAyZ,aAAyB,GAKzB,KAAA5b,WAAoB,CACnB,CACC9L,KAAM,YACNtgB,MAAO,YACP8a,GAAI,eACJuR,OAAQ,uCACRC,IAAK,4BACLC,UAAU,IAYZ,KAAA+B,KAAe,KAIf,KAAAvf,QAAgB,IAAI1C,KAKpB,KAAA2U,eAA+B,IAAI,EAAA/W,QAMjC9R,KAAK2xB,aAAepzB,EAAYmzB,WAAanzB,EAAYozB,e,OAG3D,YAAA1xB,SAAA,sBAECD,KAAK42B,UAAY52B,KAAKqmC,MAAMS,SAAS7pB,OAAkB,UACvDjd,KAAKyU,SAAWzU,KAAKqmC,MAAMS,SAAS7pB,OAAiB,SACrDjd,KAAKqZ,KAAOrZ,KAAKqmC,MAAMS,SAAS7pB,OAAa,KAC7Cjd,KAAKoP,SAAsD,SAA3CpP,KAAKqmC,MAAMS,SAAS7pB,OAAiB,SACrDjd,KAAKiyC,SAAsD,SAA3CjyC,KAAKqmC,MAAMS,SAAS7pB,OAAiB,SAEX,MAAtCjd,KAAKqmC,MAAMS,SAAS7pB,OAAa,OACpCjd,KAAKiD,KAAOjD,KAAKqmC,MAAMS,SAAS7pB,OAAa,MAG9Cjd,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMlY,KAAKqZ,OAExCrZ,KAAK8T,QAAQuN,kBAAkB,CAACrhB,KAAKyU,UAAW,MAAMvK,MAAK,SAAAuB,GAC1D,EAAKO,KAAOP,EAAM,MAChBnB,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAsI,YAAA,WACC7S,KAAK0c,IAAItb,UAGV,YAAAuJ,gBAAA,sBAEO0qB,EAAQr1B,KAAKi0B,WAAW,GAE9Bj0B,KAAK0c,IAAM,IAAI,EAAA0O,IAAI,CAClBC,UAAW,cACX1oB,MAAO,CACN,QAAW,EACX,KAAQ0yB,EAAMlN,KACd,SAAY,CACX,wBAAwB,GAEzB,QAAW,CACV,mBAAoB,CACnB,KAAQ,SACR,IAAOkN,EAAMlB,IACb,SAAY,MAGd,OAAUkB,EAAMnB,OAChB,OAAUiP,OAAOC,SAAS8M,SAAW,KAAO/M,OAAOC,SAASzY,KAAOtN,IAAM,kCACzE,OAAU,IAQXiO,KAAM,EACN6kB,oBAAoB,EACpB5kB,OAAQ,EAAE,UAAW,aAGtBvrB,KAAK0c,IAAIpU,GAAG,QAAQ,WACnB,EAAKkjB,aAGNxrB,KAAK0c,IAAIwP,WAAWlsB,KAAKssB,oBAG1B,YAAAgkB,aAAA,SAAa9yC,GACZwC,KAAKo2B,OAAS54B,GAGf,YAAAguB,QAAA,sBACoB,YAAdxrB,KAAKiD,MAERjD,KAAK8T,QAAQ+O,yBAAyB7iB,KAAKiD,KAAMjD,KAAKyU,SAAUzU,KAAKqZ,MAAMnP,MAAK,SAAA2jB,GAEjF,GAAGA,EAAO,CACP,IAAIqkB,EAAM,IAAI,EAAApkB,aAAa,CAACD,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,KAElEG,EAAU,GACVijB,EAAU,GAGiB,UAA3B,EAAKjlC,KAAKie,cAAuD,eAA3B,EAAKje,KAAKie,eACnD+D,EAAU,IACVijB,EAAU,IAGX,EAAKv0B,IAAIqR,UAAUmkB,EAAK,CAAElkB,QAASA,EAAS9a,SAAS,EAAO+9B,QAASA,QAMzEjxC,KAAK0c,IAAIpU,GAAG,cAAc,WACzB,EAAKqjB,eAGN3rB,KAAK2rB,YAGL3rB,KAAK0c,IAAIwP,WAAW,IAAI,EAAAC,kBAAkB,CAAE,gBAAkB,KAC9DnsB,KAAK0c,IAAIwP,WAAW,IAAI,EAAAqkB,mBAAmB,CAAEC,SAAS,IAAS,gBAE/DxwC,KAAK0c,IAAIpU,GAAG,QAAStI,KAAK42B,UAAY,WAAW,SAAC7xB,GACjD,EAAK0rC,oBAAoB1rC,MAG1B/E,KAAK0c,IAAIpU,GAAG,QAAStI,KAAK42B,UAAY,YAAY,SAAC7xB,GAClD,EAAK0rC,oBAAoB1rC,MAI1B/E,KAAK0c,IAAIpU,GAAG,wBAAwB,SAACkR,GACjCA,EAAEsS,SAAS7qB,OAAS,GAAKuY,EAAE6U,OAAOptB,OAAS,EAC7C,EAAKsb,oBAAqB,EAG1B,EAAKA,oBAAqB,KAI5Bvc,KAAK4wC,eAAe5wC,KAAK42B,YAG1B,YAAAjL,UAAA,sBAEC3rB,KAAK0c,IAAI6Q,SAAS,CACjB,KAAQ,SACR,GAAM,gBACN,OAAU,qBAGXvtB,KAAK6vC,aAAaxuC,SAAQ,SAAA8wC,GACzB,EAAKvB,eAAeuB,OAItB,YAAAtB,mBAAA,SAAmBxb,GAEF,gBAAbA,EAAM1S,GACR3iB,KAAK0c,IAAIq0B,SAAS1b,EAAMlB,KAEJ,iBAAbkB,EAAM1S,IACb3iB,KAAK0c,IAAIq0B,SAAS,CACjB,QAAW,EACX,KAAQ1b,EAAMlN,KACd,SAAY,CACX,wBAAwB,GAEzB,QAAW,CACV,mBAAoB,CACnB,KAAQ,SACR,IAAOkN,EAAMlB,IACb,SAAY,MAGd,OAAUkB,EAAMnB,OAChB,OAAUiP,OAAOC,SAAS8M,SAAW,KAAO/M,OAAOC,SAASzY,KAAOtN,IAAM,kCACzE,OAAU,CACT,CACC,GAAMgY,EAAM1S,GACZ,KAAQ,SACR,OAAU,wBAOf,YAAAuuB,qBAAA,SAAqB7b,GAEhBA,EAAMT,OACT50B,KAAK4wC,eAAevb,EAAM3gB,KAG1B1U,KAAKmxC,kBAAkB9b,EAAM3gB,MAK/B,YAAAy8B,kBAAA,SAAkB5T,GAEjB,IAAMpzB,EAAQnK,KAAK6vC,aAAarjC,QAAQ+wB,IAEzB,IAAXpzB,IACHnK,KAAK0c,IAAIwQ,YAAYqQ,EAAS,WAC9Bv9B,KAAK0c,IAAIwQ,YAAYqQ,EAAS,YAC9Bv9B,KAAK0c,IAAIwQ,YAAYqQ,EAAS,oBAC9Bv9B,KAAK0c,IAAIwQ,YAAYqQ,EAAS,qBAC9Bv9B,KAAK0c,IAAIwQ,YAAYqQ,EAAS,UAC9Bv9B,KAAK0c,IAAIqQ,aAAawQ,GAEtBv9B,KAAK6vC,aAAaloC,OAAOwC,EAAO,KAKlC,YAAAymC,eAAA,SAAerT,GAGd,IAAe,IAFDv9B,KAAK6vC,aAAarjC,QAAQ+wB,GAEtB,CACjB,IAAM6U,EAAa7U,IAAWv9B,KAAK42B,UAAa52B,KAAK42B,UAAY,UAAY,KAEzEsZ,EAAW/M,OAAOC,SAAS8M,SAC3BvlB,EAAOwY,OAAOC,SAASzY,KAE3B3qB,KAAK0c,IAAI4Q,UAAUiQ,EAAQ,CAC1BvxB,KAAM,SACNolC,MAAO,CAAClB,EAAW,KAAOvlB,EAAOtN,IAAM,8CAAgDorB,mBAAmBxwB,KAAKE,UAAU,CAAEzD,IAAK6oB,QAIjIv9B,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMgQ,EAAS,UACf,KAAQ,SACR,OAAUA,EACV,eAAgB,UAChB,MAAS,CACR,gBAAiB,GACjB,eAhTiB,UAiTjB,sBAAuB,EACvB,sBAAuB,WAExBz+B,OAAQ,CAAC,MACR,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAE1DszC,GAGHpyC,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMgQ,EAAS,WACf,KAAQ,OACR,OAAUA,EACV,eAAgB,UAChB,OAAU,GACV,MAAS,CACR,aAjUiB,UAkUjB,eAAgB,GAChB,qBAAsB,SAEvBz+B,OAAQ,CAAC,MACR,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,KAE/DszC,GAGC7U,IAAWv9B,KAAK42B,YACnB52B,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMgQ,EAAS,mBACf,KAAQ,SACR,OAAUA,EACV,eAAgB,UAChB,MAAS,CACR,gBAAiB,GACjB,eAlViB,UAmVjB,sBAAuB,EACvB,sBAAuB,WAExBz+B,OAAQ,CAAC,MACR,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAbkB,KAAKiD,KAAejD,KAAKiD,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAE1DmvC,GAEHpyC,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMgQ,EAAS,oBACf,KAAQ,OACR,OAAUA,EACV,eAAgB,UAChB,OAAU,GACV,MAAS,CACR,aAnWiB,UAoWjB,eAAgB,GAChB,qBAAsB,SAEvBz+B,OAAQ,CAAC,MACR,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAbkB,KAAKiD,KAAejD,KAAKiD,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,KAE/DmvC,IAIJpyC,KAAK0c,IAAI6Q,SAAS,CACjB,GAAMgQ,EAAS,SACf,OAAUA,EACV,eAAgB,UAChB,KAAQ,SACR,MAAS,CACR,aAAc,QACd,kBAAmB,OACnB,kBAAmB,GAEpB,OAAU,CACT,aAAc,CAAC,OACd,CAAC,MAAO,gBAAkB8T,UAAUvwB,SAASzU,eAC7C,CAAC,WAAY,CAAC,SAAU,CAAC,MAAO,gBAAkBglC,UAAUvwB,SAASzU,gBAAiB,CAAC,SAAU,CAAC,MAAO,kBACzG,CAAC,SAAU,CAAC,MAAO,kBAEpB,YAAa,CAAC,mBACd,cAAe,CAAC,EAAG,IACnB,cAAe,MACf,YAAa,KAEZ+lC,GAGHpyC,KAAK6vC,aAAa7rC,KAAKu5B,KASzB,YAAA8S,qBAAA,WAC4B,MAAvBrwC,KAAK4rB,iBACR5rB,KAAK4rB,eAAe0lB,YACpBtxC,KAAK0c,IAAI60B,cAAcvxC,KAAK4rB,iBAG7B5rB,KAAK4rB,eAAiB,KAEtB5rB,KAAKuc,oBAAqB,GAG3B,YAAA81B,gBAAA,WAECryC,KAAKmxC,kBAAkBnxC,KAAK42B,WAC5B52B,KAAK4wC,eAAe5wC,KAAK42B,YAG1B,YAAA6Z,oBAAA,SAAoB1rC,GACnB,IAAK/E,KAAKo2B,QAA4B,MAAlBrxB,EAAM+mB,UAAoB/mB,EAAM+mB,SAAS7qB,OAAS,EAAG,CACxE,IAAMktB,EAAUppB,EAAM+mB,SAAS,GAEA,MAA3BqC,EAAQc,WAAWhsB,MAAgBjD,KAAKiD,OAASkrB,EAAQc,WAAWhsB,OACvEjD,KAAKiD,KAAOkrB,EAAQc,WAAWhsB,KAG/BjD,KAAK0c,IAAI41B,UAAUtyC,KAAK42B,UAAY,mBAAoB,CAAC,MACxD,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAb52B,KAAKiD,KAAejD,KAAKiD,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,QAAS,cAAc,GAAM,KAG5DjD,KAAK0c,IAAI41B,UAAUtyC,KAAK42B,UAAY,oBAAqB,CAAC,MACzD,CAAC,KAAM,CAAC,MAAO,QAAsB,MAAb52B,KAAKiD,KAAejD,KAAKiD,KAAO,IACxD,CAAC,QAAS,CAAC,iBAAkB,CAAC,UAAW,iBAAiB,GAAM,QAMpE,YAAAyuC,UAAA,WACC,IAAMl6B,EAAWxX,KAAK2xC,kBAEtB3xC,KAAK4rB,eAAe0lB,YACpBtxC,KAAK0c,IAAI60B,cAAcvxC,KAAK4rB,gBAC5B5rB,KAAK6oB,eAAexb,KAAKmK,GAEzBxX,KAAKiZ,IAAIzb,MAAQga,EAGjBxX,KAAK4rB,eAAiB,KAEtB5rB,KAAKuc,oBAAqB,GAG3B,YAAAi1B,eAAA,SAAev4B,GACdjZ,KAAKqwC,uBAELrwC,KAAKiZ,IAAMA,EAEXjZ,KAAKyxC,cAAcx4B,IAUpB,YAAAw4B,cAAA,SAAcx4B,GACF,MAAPA,GACHjZ,KAAKqsB,cAAcpT,IAIrB,YAAAoT,cAAA,SAAcpT,GACkB,iBAA3BjZ,KAAKgM,KAAKie,cAA8D,YAA3BjqB,KAAKgM,KAAKie,aAC1DjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACT1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIa,UAA3B5sB,KAAKgM,KAAKie,cAAuD,eAA3BjqB,KAAKgM,KAAKie,aACxDjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACT1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,KAIa,SAA3B5sB,KAAKgM,KAAKie,cAAsD,cAA3BjqB,KAAKgM,KAAKie,eACvDjqB,KAAK4rB,eAAiB,IAAI,UAAW,CACpCW,SAAU,CACT1F,OAAO,EACP2F,aAAa,EACbC,SAAS,EACTC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,MAIvB5sB,KAAK0c,IAAIwP,WAAWlsB,KAAK4rB,gBAER,MAAb3S,EAAIzb,OACPwC,KAAK4rB,eAAekB,IAAI7T,EAAIzb,QAK9B,YAAAm0C,gBAAA,WACC,GAA2B,MAAvB3xC,KAAK4rB,eAAwB,CAChC,IAAIqC,EAAyBjuB,KAAK4rB,eAAeC,SAEjD,GAAIoC,EAAkBnC,SAAS7qB,OAAS,EAAG,CAK1C,GAA+B,iBAA3BjB,KAAKgM,KAAKie,aAAiC,CAG9C,IAFA,IAAIiE,EAAW,GAEN1qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAG3D,GAA8B,kBAF1B2qB,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACpB,IAAK,IAAIqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACxD6E,EAASlqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAI5C6E,EAASlqB,KAAKmqB,EAAQ3W,SAAS4W,aAIjC,MAAO,CACNA,YAAaF,EACbliB,KAAM,gBAGH,GAA+B,eAA3BhM,KAAKgM,KAAKie,aAA+B,CACjD,IAAIoE,EAAS,GAEb,IAAS7qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAG3D,GAA8B,gBAF1B2qB,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACpB,IAASqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACxDgF,EAAOrqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAI1CgF,EAAOrqB,KAAKmqB,EAAQ3W,SAAS4W,aAI/B,MAAO,CACNA,YAAaC,EACbriB,KAAM,cAGH,GAA+B,cAA3BhM,KAAKgM,KAAKie,aAA8B,CAChD,IAAIqE,EAAQ,GAEZ,IAAS9qB,EAAI,EAAGA,EAAIyqB,EAAkBnC,SAAS7qB,OAAQuC,IAAK,CAC3D,IAAI2qB,EAEJ,GAA8B,qBAF1BA,EAAUF,EAAkBnC,SAAStoB,IAE7BgU,SAASxL,KACpB,IAASqd,EAAI,EAAGA,EAAI8E,EAAQ3W,SAAS4W,YAAYntB,OAAQooB,IACxDiF,EAAMtqB,KAAKmqB,EAAQ3W,SAAS4W,YAAY/E,SAIzCiF,EAAMtqB,KAAKmqB,EAAQ3W,SAAS4W,aAI9B,MAAO,CACNA,YAAaE,EACbtiB,KAAM,mBAIP,OAAOiiB,EAAkBnC,SAAS,GAAGtU,UAKxC,OAAO,MAGR,YAAA+wB,eAAA,WACCvoC,KAAKiD,KAAO,WAGb,YAAAiW,WAAA,SAAWG,GACV,OAAOrZ,KAAKgU,SAASsF,qBAAqBD,IAIpC,YAAA7O,MAAP,SAAaD,GACZvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCA3lBhDxC,GAA+B,qO,iCAA/BA,EAA+B,iE,GAAA,K,m2CCzB5C,0BACE,4BACA,6BAGA,4BAEE,4BACE,8BAwBA,4BACE,4BAEE,gCACE,oCAAa,+CAAe,EAAAu1C,qBAAA,KAAf,CAA4C,sCAAoB,EAAAL,mBAAA,MAAmD,iBAEhI,+BAaF,iBAEA,wBACA,+CAAgH,8CAAe,EAAAa,eAAiC,iBAQlK,iBACF,iBACF,iBACF,iBACF,kB,MA1DY,+DAwBD,wFAI0G,0EAEnG,gDAgBa,8DAAkC,0CAAlC,CAAkC,a,2uCDlCjE,GAKa,EAAA/1C,mC,+DAAAA,EAA+B,E,KAL3C,EAAAwB,U,MAAU,CACVC,SAAU,2BACVC,YAAa,4CACbC,UAAW,CAAC,uC,qKAkEoBgvB,kBAAmB,CAAF,C,KAAhD,EAAA3a,U,MAAU,0B,4GEzFZ,aAMA,SACA,SACA,SAKA,SAGA,aAeC,WAAY/O,EAAwC2vC,EAAoCzuC,EAA8B23B,EAC9Gp9B,EAA6CF,EAAqCI,GAAlF,KAAAF,kBAA6C,KAAAF,eAAqC,KAAAI,cACzFyB,KAAK4C,mBAAqBA,EAC1B5C,KAAKuyC,iBAAmBA,EACxBvyC,KAAK8D,cAAgBA,EACrB9D,KAAKy7B,SAAWA,EAyiBlB,OAtiBC,YAAAD,QAAA,WACC,OAAOx7B,KAAK8D,cAAcb,MAG3B,YAAAqG,OAAA,SAAOjH,EAAWC,EAAWkwC,GAC5B,IAAI1rB,EAAO9mB,KAAKyyC,UAGhBvxC,EAAGC,OAAO,oEAAsEnB,KAAKw7B,UAAY,MAC/Fx1B,QAAQ,WAAYwsC,GACpB3wC,KAAK,IAAKQ,GACVR,KAAK,IAAKS,GAEZpB,EAAGC,OAAO,sEAAwEnB,KAAKw7B,UAAY,MACjGx1B,QAAQ,WAAYwsC,GACpB3wC,KAAK,IAAKQ,GACVR,KAAK,IAAKS,EAAI,EAAAP,iBAAiB8D,SAAW,EAAI,GAEhD3E,EAAGC,OAAO,qEAAuEnB,KAAKw7B,UAAY,MAChGx1B,QAAQ,WAAYwsC,GACpB3wC,KAAK,IAAKQ,EAAI,GACdR,KAAK,IAAKS,EAAI,GAEhBpB,EAAGC,OAAO,8EAAgFnB,KAAKw7B,UAAY,MACzGx1B,QAAQ,WAAYwsC,GACpB3wC,KAAK,IAAKQ,EAAIykB,EAAKvkB,MAAQ,IAC3BV,KAAK,IAAKS,EAAI,IAKhB,IAAIowC,EAAmBxxC,EAAGC,OAAO,2EAA6EnB,KAAKw7B,UAAY,MAAM77B,OACrI,GAAmB,MAAf+yC,EAAqB,CACxB,IAAMC,EAAUtwC,EAAIykB,EAAKvkB,MAAQ,GAC3BqwC,EAAUtwC,EAAIwkB,EAAKtkB,OAAS,GAC9BqwC,EAAcH,EAAYtwC,UAC9BlB,EAAGC,OAAO,2EAA6EnB,KAAKw7B,UAAY,MACtGx1B,QAAQ,WAAYwsC,GACpB3wC,KAAK,YAAa,cAAgB8wC,EAASE,EAAYxwC,GAAK,KAAOuwC,EAASC,EAAYvwC,GAAK,KAGhG,IAAIwwC,EAAqB5xC,EAAGC,OAAO,6EAA+EnB,KAAKw7B,UAAY,MAAM77B,OACzI,GAAqB,MAAjBmzC,EAAuB,CACpBH,EAAUtwC,EAAIykB,EAAKvkB,MAAQ,GAC3BqwC,EAAUtwC,EAAIwkB,EAAKtkB,OAAS,GADlC,IAEIuwC,EAAgBD,EAAc1wC,UAClClB,EAAGC,OAAO,6EAA+EnB,KAAKw7B,UAAY,MACxGx1B,QAAQ,WAAYwsC,GACpB3wC,KAAK,YAAa,cAAgB8wC,EAASI,EAAc1wC,GAAK,KAAOuwC,EAASG,EAAczwC,GAAK,OAIrG,YAAA+G,OAAA,WACC,IAAIlI,EAASD,EAAGC,OAAO,oEAAsEnB,KAAKw7B,UAAY,MAE9G,MAAO,CAAEn5B,EAAGgE,SAASlF,EAAOU,KAAK,MAAOS,EAAG+D,SAASlF,EAAOU,KAAK,QAGjE,YAAA4wC,QAAA,WACC,IAAItxC,EAASD,EAAGC,OAAO,oEAAsEnB,KAAKw7B,UAAY,MAE9G,MAAO,CAAEn5B,EAAGgE,SAASlF,EAAOU,KAAK,MAAOS,EAAG+D,SAASlF,EAAOU,KAAK,MAAQ,EAAGU,MAAO8D,SAASlF,EAAOU,KAAK,UAAWW,OAAQ6D,SAASlF,EAAOU,KAAK,WAAa,IAG7J,YAAAmxC,YAAA,WACC,OAAOhzC,KAAKy7B,UAGb,YAAAwX,qBAAA,WACE,IAAIC,EAAoBhyC,EAAGC,OAAO,sCACjC,GAAgC,MAA5B+xC,EAAkBvzC,OAKpB,OAJAuzC,EAAkB9xC,SAClBpB,KAAK4C,mBAAmBX,sBAEIixC,EAAkBrxC,KAAK,cAKxD,YAAAs8B,6BAAA,sBACK/5B,EAAOpE,KACPmzC,EAAejyC,EAAGC,OAAO,mBAE7B,GAA2B,MAAvBgyC,EAAaxzC,OAAgB,CAEhC,IAEIyzC,EAFSlyC,EAAGC,OAAO,QAEOS,OAAO,KAAKoE,QAAQ,kBAAkB,GAEhEoE,EAAqBpK,KAAKuyC,iBAAiB9V,sBAAsBz8B,KAAKw7B,WAEpE6X,EAAwBrzC,KAAKzB,YAAYa,SAAWY,KAAKzB,YAAYsE,iBAAiB7C,KAAK8D,cAAchB,mBACrG9C,KAAKzB,YAAYwE,kBAAkB/C,KAAKuyC,iBAAiBvvC,cAAcF,iBAAkB9C,KAAK8D,cAAcb,MAElH6jB,EAAO9mB,KAAKyyC,UACZpwC,EAAIykB,EAAKzkB,EAAIykB,EAAKvkB,MAAQ,EAC1BD,EAAIwkB,EAAKxkB,EAAIwkB,EAAKtkB,OAAS,EAAI,EAS7B8wC,EAAatzC,KAAK4C,mBAAmB/B,SAAS,wCAC9C0yC,EAAevzC,KAAK4C,mBAAmB/B,SAAS,kCAChD2yC,EAA2BxzC,KAAK4C,mBAAmB/B,SAAS,yCAC5D4yC,EAAqBzzC,KAAK4C,mBAAmB/B,SAAS,0CACtD6yC,EAA4B1zC,KAAK4C,mBAAmB/B,SAAS,0CAC7D8yC,EAAiB3zC,KAAK4C,mBAAmB/B,SAAS,+BAClD+yC,EAAe5zC,KAAK4C,mBAAmB/B,SAAS,6BAE/CgzC,EAA0F,MAA1D3yC,EAAGC,OAAO,sCAAsCxB,OAEhFm0C,EAAaT,EAAyBQ,EAA+B,EAAI,EAAK,EAGjF,EAAQ,EAAA5sC,mBAAmBqsC,EAfT,GAkBlBS,EAAc,EAAA9sC,mBAAmBusC,EAvBpB,GA0BjB,GAFA,EAAQO,EAAc,EAAQA,EAAc,EAExCF,EACJ,CAEK,IAAIG,EAAmB,EAAA/sC,mBAAmBysC,EA7B9B,GA8BZ,EAAQM,EAAmB,EAAQA,EAAmB,EAGxD,GAA4B,MAAxBh0C,KAAKy7B,SAAS91B,QAAsE,MAApD3F,KAAKy7B,SAAS91B,OAAO9B,KAAKE,wBAAsF,IAApD/D,KAAKy7B,SAAS91B,OAAO9B,KAAKE,uBAA8B,CACtJ,IAAIkwC,EAAiB,EAAAhtC,mBAAmB0sC,EAlC5B,GAmCZ,EAAQM,EAAiB,EAAQA,EAAiB,EAClDH,QAGF,CAEE,GAAgC,OAD5BZ,EAAoBhyC,EAAGC,OAAO,uCACZxB,OAAgB,CACpC,IAAIu0C,EAAwBhB,EAAkBrxC,KAAK,aAC/CsyC,EAAqBn0C,KAAK4C,mBAAmB6G,oBAAoByqC,GAGjEE,EAAmG,MAD3E,IAAI,EAAAryC,iBAAiB/B,KAAK4C,mBAAoB1B,EAAGC,OAAO,QAASgzC,GAAoB,EAAMn0C,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aACpH2E,cAAclD,KAAKw7B,WAAWwX,cAAcrtC,OAE7F,GAA4B,MAAxB3F,KAAKy7B,SAAS91B,QAAkByuC,EACpC,CACE,IAAIC,EAAe,EAAAptC,mBAAmB2sC,EAlD9B,GAmDR,EAAQS,EAAe,EAAQA,EAAe,EAC9CP,MAST,GAAI1pC,EAAmBnJ,OAAS,EAE9BmJ,EAAmB/I,SAAQ,SAACizC,GAC3B,IAAIC,EAAmB,EAAK3xC,mBAAmB6G,oBAAoB6qC,GAE/DE,EAAwBD,EAAiB1sC,MAAMuE,eACvB,MAAxB,EAAKqvB,SAAS91B,QAAkB,EAAK81B,SAAS91B,OAAO9B,KAAKE,yBAA2BwwC,EAAiBtxC,OACzGuxC,EAAwBA,EAAwB,KAAO,EAAK5xC,mBAAmB/B,SAAS,+BAAiC,KAG1H,IAAIw7B,EAAY,EAAAp1B,mBAAmButC,EAvErB,GAyEVnY,EAAY,IACf,EAAQA,UAKZ,CACE,IAAIoY,EAAmB,EAAAxtC,mBAAmBwsC,EAhF3B,GAiFf,EAAQgB,EAAmB,EAAQA,EAAmB,EAGxD,GAnFqB,GAqFrB,IAoKWvB,EApKPwB,EAA0BtqC,EAAmBnJ,OAAS,EAAK6yC,EAAa,EAAMA,EAAa,EAqC/F,GAlCAV,EAAiBxxC,OAAO,QACtBoE,QAAQ,uCAAuC,GAC/CnE,KAAK,IAAKQ,GACVR,KAAK,IAAKS,GACVT,KAAK,KAAM,GACXA,KAAK,QAAS,GACdA,KAAK,SAhGQ,IAgGYuI,EAAmBnJ,OAASyzC,IACrD7yC,KAAK,OAAQ,SACbA,KAAK,eAAgB,IACrBA,KAAK,SAhGa,WAmGpBuxC,EAAiBxxC,OAAO,QACtBoE,QAAQ,kCAAkC,GAC1CnE,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,KAC7BT,KAAK,YApGe,GAqGpBA,KAAK,cAtGY,cAuGjBA,KAAK,cAAe,QACpBqF,KAAKosC,GAEPhxC,GA/Ge,GAkHf8wC,EAAiBxxC,OAAO,QACtBoE,QAAQ,oCAAoC,GAC5CnE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SArHa,WAsHlBA,KAAK,eAAgB,IAGnBuI,EAAmBnJ,OAAS,EAE/B,I,eAASuC,GACR,IAAI8wC,EAAuBlqC,EAAmB5G,GAC1C+wC,EAAmB,EAAK3xC,mBAAmB6G,oBAAoB6qC,GAE/DE,EAAwBD,EAAiB1sC,MAAMuE,eACvB,MAAxB,EAAKqvB,SAAS91B,QAAkB,EAAK81B,SAAS91B,OAAO9B,KAAKE,yBAA2BwwC,EAAiBtxC,OACzGuxC,EAAwBA,EAAwB,KAAO,EAAK5xC,mBAAmB/B,SAAS,+BAAiC,KAI1HuyC,EAAiBxxC,OAAO,QACtBoE,QAAQ,iCAAiC,GACzCnE,KAAK,gBAAiByyC,GACtBzyC,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YA5IQ,GA6IbA,KAAK,cAzIU,cA0IfqF,KAAKstC,GACL7xC,MAAM,SAAU,WAChB2F,GAAG,SAAS,SAASvD,EAAOpF,GAAQyE,EAAKwwC,yBAAyBL,MAEpEjyC,GAnJa,GAsJTkB,EAAI4G,EAAmBnJ,QAC1BmyC,EAAiBxxC,OAAO,QACtBoE,QAAQ,oCAAoC,GAC5CnE,KAAK,gBAAiByyC,GACtBzyC,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,EAAQ,GACvBR,KAAK,KAAMS,GACXT,KAAK,SA1JW,WA2JhBA,KAAK,eAAgB,K,OAjChB2B,EAAI,EAAGA,EAAI4G,EAAmBnJ,SAAUuC,E,EAAxCA,QAuCT4vC,EAAiBxxC,OAAO,QACtBoE,QAAQ,iCAAiC,GACzCnE,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAxKS,GAyKdA,KAAK,cArKW,cAsKhBqF,KAAKusC,GAEPnxC,GA7Kc,GAgLd8wC,EAAiBxxC,OAAO,QACtBoE,QAAQ,oCAAoC,GAC5CnE,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,EAAQ,GACvBR,KAAK,KAAMS,GACXT,KAAK,SAlLa,WAmLlBA,KAAK,eAAgB,IAKrB,GAAIwxC,EAuCJ,GApCDD,EAAiBxxC,OAAO,QACtBoE,QAAQ,kCAAkC,GAC1CnE,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,KAC7BT,KAAK,YA7La,GA8LlBA,KAAK,cA/LU,cAgMfA,KAAK,cAAe,QACpBqF,KAAKqsC,GAEPjxC,GAxMa,GA2Mb8wC,EAAiBxxC,OAAO,QACtBoE,QAAQ,oCAAoC,GAC5CnE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SA9MW,WA+MhBA,KAAK,eAAgB,IAGpBuxC,EAAiBxxC,OAAO,QACvBoE,QAAQ,iCAAiC,GACzCnE,KAAK,cAAe,qBACpBA,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAzNM,GA0NXA,KAAK,cAtNQ,cAuNbqF,KAAKssC,GACL7wC,MAAM,SAAU,WAChB2F,GAAG,SAAS,SAAUvD,EAAOpF,GAAQyE,EAAKywC,4BAE3CvyC,GAhOU,GAmOgB,MAAxBtC,KAAKy7B,SAAS91B,QAAsE,MAApD3F,KAAKy7B,SAAS91B,OAAO9B,KAAKE,wBAAsF,IAApD/D,KAAKy7B,SAAS91B,OAAO9B,KAAKE,uBACtHqvC,EAAiBxxC,OAAO,QACrBoE,QAAQ,oCAAoC,GAC5CnE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SAvOK,WAwOVA,KAAK,eAAgB,IAExBuxC,EAAiBxxC,OAAO,QACrBoE,QAAQ,iCAAiC,GACzCnE,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAhPE,GAiPPA,KAAK,cA7OI,cA8OTqF,KAAKysC,GACLhxC,MAAM,SAAU,WAChB2F,GAAG,SAAS,SAAUvD,EAAOpF,GAAQyE,EAAK0wC,+BAE7CxyC,GAvPQ,QA4PR,GAAgC,OAD5B4wC,EAAoBhyC,EAAGC,OAAO,uCACZxB,OAAgB,CAChCu0C,EAAwBhB,EAAkBrxC,KAAK,aAAnD,IACI,EAAqB7B,KAAK4C,mBAAmB6G,oBAAoByqC,GAGjEE,EAAmG,MAD3E,IAAI,EAAAryC,iBAAiB/B,KAAK4C,mBAAoB1B,EAAGC,OAAO,QAAS,GAAoB,EAAMnB,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aACpH2E,cAAclD,KAAKw7B,WAAWwX,cAAcrtC,OAEjE,MAAxB3F,KAAKy7B,SAAS91B,QAAkByuC,IAElChB,EAAiBxxC,OAAO,QACrBoE,QAAQ,oCAAoC,GAC5CnE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SAxQC,WAyQNA,KAAK,eAAgB,IAExBuxC,EAAiBxxC,OAAO,QACrBoE,QAAQ,iCAAiC,GACzCnE,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YAjRF,GAkRHA,KAAK,cA9QA,cA+QLqF,KAAK0sC,GACLjxC,MAAM,SAAU,WAChB2F,GAAG,SAAS,SAAUvD,EAAOpF,GAAQyE,EAAK2wC,wBAAwB,MAErEzyC,GAxRI,IA8RRuxC,IACJT,EAAiBxxC,OAAO,QACnBoE,QAAQ,oCAAoC,GAC5CnE,KAAK,KAAMQ,GACXR,KAAK,KAAMS,GACXT,KAAK,KAAMQ,EAAI,GACfR,KAAK,KAAMS,GACXT,KAAK,SAlSO,WAmSZA,KAAK,eAAgB,IAE1BuxC,EAAiBxxC,OAAO,QACnBoE,QAAQ,iCAAiC,GACzCnE,KAAK,IAAKQ,EAAIsyC,GACd9yC,KAAK,IAAKS,EAAI,GAAe,GAC7BT,KAAK,YA3SI,GA4STA,KAAK,cAxSM,cAySXqF,KAAKwsC,GACL/wC,MAAM,SAAU,WAChB2F,GAAG,SAAS,SAAUvD,EAAOpF,GAC5ByE,EAAK6uC,uBAEL,IAAIE,EAAejyC,EAAGC,OAAO,mBACF,MAAvBgyC,EAAaxzC,QACfwzC,EAAa/xC,SAGfF,EAAGC,OAAO,8BAA8BC,aAIjDpB,KAAK4C,mBAAmBX,2BAGxBkxC,EAAa/xC,UAIf,YAAAyzC,uBAAA,sBAEKzrC,EAASpJ,KAAK4C,mBAAmBd,oBAAoBoB,cAAclD,KAAK8D,cAAcb,MAStF4L,GAPkBzF,EAAOC,SAOnBrJ,KAAK4C,mBAAmBuD,wBAAwBiD,EAAOoyB,YAEjEx7B,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAA0B,sBAAuB,CAC/DV,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAGtB,IAAIS,EAAU/O,KAAK3B,gBAAgByC,OAAO,yCAC1CiO,EAAUA,EAAQ2rB,QAAQ,UAAW7rB,EAAIhH,MAAMuE,gBAE/CpM,KAAKmO,WAAWI,QAAQQ,QAAUA,EAClC/O,KAAKmO,WAAWI,QAAQ1K,KAAOgL,EAAI5L,KAEXjD,KAAKmO,WAAWI,QAASU,UAAUrO,WAAU,SAAAiD,GACpE,IAAI43B,EAAWryB,EAAO4pC,cAClBrtC,EAAS,KAEZA,EADsB,MAAnB81B,EAAS91B,QAIuC,MAA/C81B,EAAS91B,OAAO9B,KAAKE,uBAHhB,OAOC03B,EAAS91B,OAAO9B,KAAKC,cAIhC,EAAKlB,mBAAmBiO,oBAAoBlL,EAAQyD,EAAOoyB,WAAW,SAACjxB,GAAe+I,QAAQC,IAAIhJ,UAQpG,YAAAqqC,yBAAA,SAAyBL,GACxBrzC,EAAGC,OAAO,mBAAmBC,SAC7BF,EAAGC,OAAO,8BAA8BC,SAExC,IACI4zC,EAASh1C,KAAKyyC,UACd9wC,EAAMT,EAAGC,OAAO,QAGpB,GAAInB,KAAKizC,yBAA2BsB,EAAiBtxC,KAArD,CAMA,IAAIgyC,EAAmB/zC,EAAGC,OAAO,mCAAmCxB,OAAeyC,UAGrD,IAAI,EAAAL,iBAAiB/B,KAAK4C,mBAAoBjB,EAAK4yC,GAAkB,EAAOv0C,KAAK3B,gBAAiB2B,KAAK7B,aAAc6B,KAAKzB,aAClJyD,SACN,IAAIkzC,EAAah0C,EAAGC,OAAO,sCAIvB2lB,EADkB5lB,EAAGC,OAAO,sCAAsCxB,OAChDyC,UAClB+yC,EAAsBF,EAAgB1yC,MAAQ,IAAM0yC,EAAgB5yC,EAAIykB,EAAKzkB,GACjF6yC,EAAWrzC,KAAK,YAAa,aAAeszC,EAAc,OAG1D,IAAIC,EAAel0C,EAAGC,OAAO,qEAAuEnB,KAAKw7B,UAAY,MACjH6Z,EAAmB,CAAEhzC,EAAGgE,SAAS+uC,EAAavzC,KAAK,MAAOS,EAAG+D,SAAS+uC,EAAavzC,KAAK,MAAQ,EAAGU,MAAO8D,SAAS+uC,EAAavzC,KAAK,UAAWW,OAAQ6D,SAAS+uC,EAAavzC,KAAK,WAAa,GACpMwzC,EAAiBhzC,EAAIgzC,EAAiBhzC,EAAI8yC,EAC1Cj0C,EAAGC,OAAO,8BAA8BC,SACxC,IAAIk0C,EAAap0C,EAAGC,OAAO,QAAQS,OAAO,KAAKoE,QAAQ,6BAA6B,GACpFsvC,EAAW1zC,OAAO,QAChBoE,QAAQ,2BAA2B,GACnCnE,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,mBAAoB,OACzBA,KAAK,eAAgB,KACrBA,KACE,IACA,KAAOmzC,EAAO3yC,EAAI2yC,EAAOzyC,OAAS,KAAOyyC,EAAO1yC,EAAI0yC,EAAOxyC,OAAS,GACpE,MAAS6yC,EAAkB,GAAKL,EAAO3yC,EAAI2yC,EAAOzyC,QAAU,EAAIyyC,EAAO3yC,EAAI2yC,EAAOzyC,OAClF,KAAO8yC,EAAiB/yC,EAAI+yC,EAAiB7yC,OAAS,GACtD,IAAM6yC,EAAiBhzC,GAI3B,IAAM07B,EAAuB,GAAvBA,EAAkC,EACpCC,EAASsX,EAAW1zC,OAAO,KAAKoE,QAAQ,mCAAmC,GAC/Eg4B,EAAOp8B,OAAO,QACZoE,QAAQ,sCAAsC,GAC9CnE,KAAK,IAAKmzC,EAAO3yC,EAAI2yC,EAAOzyC,MAAQw7B,EAAmB,GACvDl8B,KAAK,IAAKmzC,EAAO1yC,EAAI0yC,EAAOxyC,OAAS,EAAIu7B,EAAoB,GAC7Dl8B,KAAK,QAASk8B,GACdl8B,KAAK,SAAUk8B,GACfl8B,KAAK,OAAQ,EAAA7D,2BACfggC,EAAOp8B,OAAO,QACZoE,QAAQ,sCAAsC,GAC9CnE,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,eAAgB,KACrBA,KAAK,IACL,KAAOmzC,EAAO3yC,EAAI2yC,EAAOzyC,MAAQw7B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOiX,EAAO1yC,EAAI0yC,EAAOxyC,OAAS,EAAIu7B,EAAoB,EAA0B,EAApBA,EAAyB,GAC/K,KAAOiX,EAAO3yC,EAAI2yC,EAAOzyC,MAAQw7B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOiX,EAAO1yC,EAAI0yC,EAAOxyC,OAAS,GAC1H,KAAOwyC,EAAO3yC,EAAI2yC,EAAOzyC,MAAQw7B,EAAmB,EAAyB,EAAnBA,EAAwB,GAAM,KAAOiX,EAAO1yC,EAAI0yC,EAAOxyC,OAAS,EAAIu7B,EAAoB,EAAIA,EAAoB,IAI9K/9B,KAAK4C,mBAAmBX,wBAGzB,YAAA8yC,wBAAA,SAAwBrxC,GACvB1D,KAAK4C,mBAAmBuO,uBAAuBnR,KAAKuyC,iBAAiB/W,UAAW93B,EAAUT,KAAMjD,KAAKw7B,YAGtG,YAAAsZ,0BAAA,WACC90C,KAAK4C,mBAAmB2O,yBAAyBvR,KAAKuyC,iBAAiB/W,UAAWx7B,KAAKw7B,YAGzF,EA7jBA,GAAa,EAAAE,oB,6HChBb,WAEA,GADA,MACA,OAGA,S,GAGA,O,uECJI,6BAAqE,YAAW,kB,8BAAX,+C,yBAgB/D,gCACE,YACF,kB,uBAFqD,wCACnD,qE,mDANJ,gCAAkC,4GAChC,gCAA6D,kBAAG,6BACgB,kBAAE,iBAElF,wBACA,kCAGF,iB,iCAP0B,kEAIO,4D,mDAlBvC,4BAEE,8BAEA,4BACE,yBACE,4BACF,iBACF,iBACA,+BAEE,4BAEE,iCAUF,iBAEA,4BACE,+BAAsB,6EAASvtB,WAAA,UAC7B,4BACE,8BACF,iBACF,iBACA,iCAAsB,iGACpB,4BACE,8BACF,iBACF,iBACF,iBACF,iBACF,iB,gCApCQ,oDAWO,yDDJjB,iBA+BI,WAAqBjQ,EAA2CiQ,GAA3C,KAAAjQ,mBAA2C,KAAAiQ,aAT3D,KAAAonC,QAAkB,EAEvB,KAAAxmC,QAAkB,K,OAUlB,YAAA9O,SAAA,WACID,KAAKw1C,aAAe,IAAI,EAAA1jC,SAG5B,YAAA2xB,SAAA,SAASjmC,GAAT,WACCwC,KAAKy1C,kBAAkBp0C,SAAQ,SAAAq0C,GAC3BA,EAAKzyC,OAASzF,IAChB,EAAKm4C,sBAAwBD,OAKhC,YAAA5iC,eAAA,sBACI9S,KAAK+O,QAAU,KAEf,IAAIpJ,EAAU3F,KAAW,OAAI,OAASA,KAAK2F,OAAO9B,KAAKC,cACvD9D,KAAK9B,iBAAiB+L,oBAAqBjK,KAAKgD,cAAcC,KAAM0C,EAAQ3F,KAAK21C,sBAAsB1yC,MAAOiH,MAAM,SAAArG,GAChH,EAAK2xC,aAAanoC,KAAMxJ,GACxB,EAAKsK,WAAWgI,UAChB7L,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAAC,MAAA,SAAOD,GACCvK,KAAK+O,QAAU,EAAA0C,aAAa4E,oBAAoB9L,I,iCAvD/CzS,GAAiC,4E,iCAAjCA,EAAiC,iyBChB9C,6BAEE,+BAuCF,kB,MAvCQ,qD,4LDSR,GAKa,EAAAA,qC,+DAAAA,EAAiC,E,KAL7C,EAAAqF,U,MAAW,CACRC,SAAU,+BACVC,YAAa,gDACbC,UAAW,Q,0MEdf,WAcA,GAZA,MACA,MAOA,OAEA,MAEA,Q,2ICGQ,yD,6BAGE,sCAAuB,gCAAvB,CAAuB,gCAAvB,CAAuB,8BAAvB,CAAuB,oBAAvB,CAAuB,yB,mDAiBvB,gCAAwC,4FACtC,6BACF,kB,mDACA,gCAAuC,0FACrC,6BACF,kB,mDACA,gCAAuC,8FACrC,6BACF,kBDxBV,iBAyCI,WAAqB8gC,EAAwB5N,EAAoDryB,EACzFG,EAA0CC,GAD7B,KAAA6/B,SAAwB,KAAA5N,uBAAoD,KAAAryB,eACzF,KAAAG,kBAA0C,KAAAC,cAhCrD,KAAAozB,cAAwB,EAIrB,KAAApb,aAAkC,KAElC,KAAAC,cAAmC,KAEnC,KAAA1S,cAA+B,KAI/B,KAAA8xC,WAAqB,EAWrB,KAAAnkB,QAAkB,KAKlB,KAAA7a,QAAgB,KAMlB5W,KAAK2xB,aAAepzB,EAAYmzB,WAAanzB,EAAYozB,eAEnD3xB,KAAK4W,QAAU,IAAI1C,KAEnB,IAAMoH,EAAMtb,KAAK4W,QAAQ2E,aACzBvb,KAAKyxB,QAAUzxB,KAAK4W,QAAQ8E,iBAAmB,KAAQ1b,KAAK4W,QAAQ6E,cAAgB,GAAM,KAAQH,EAAM,GAAK,IAAM,IAAOA,E,OAG9H,YAAArb,SAAA,WAEID,KAAKwW,cAAgBxW,KAAKyd,OAAOo4B,cACjC71C,KAAK8D,cAAgB9D,KAAKyd,OAAO3Z,cAE5B9D,KAAKoU,UACNpU,KAAKuW,aAAevW,KAAKwW,eAG7BxW,KAAKyjC,SAAUzjC,KAAKyd,SAGxB,YAAArJ,MAAA,WACI,MAAoC,iEAA3BpU,KAAKyd,OAAOsnB,YAGzB,YAAA9S,iBAAA,WACIjyB,KAAK4W,QAAU,IAAI1C,KAAMA,KAAKgE,MAAOlY,KAAKyxB,WAG9C,YAAAjU,YAAA,sBAEQC,EAASzd,KAAKyd,OAElBA,EAAOo4B,cAAgB71C,KAAK+wB,gBAAgB/V,eAEhB,MAAvBhb,KAAKuY,iBACNkF,EAAOo4B,cAAcr+B,SAAWxX,KAAKuY,eAAewT,WAAWvU,UAGnExX,KAAKwwB,qBAAqBhT,YAAaC,GAASvT,MAAM,SAAAmB,GAClD,EAAKo6B,aACLn7B,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAk5B,SAAA,SAAUhmB,GAAV,WAoBmC,iEAA3Bzd,KAAKyd,OAAOsnB,YAGZ/kC,KAAK1B,gBAAgB+lB,qBAAsBrkB,KAAKwW,cAAc9F,WAAWzN,KAAMjD,KAAK8D,cAAcb,MAAOiH,MAAM,SAAAib,GAC3G,EAAK5O,aAAe4O,KAEpB7a,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAyBxB,YAAAurC,UAAA,WACI91C,KAAK8d,cAGF,YAAA2nB,QAAP,WACIzlC,KAAKge,gBAGT,YAAAF,WAAA,sBACI9d,KAAKwwB,qBAAqB1S,WAAY9d,KAAKyd,OAAO/I,KAAMxK,MAAM,SAAAmB,GAC1D,EAAKuqC,WAAY,EACW,MAAvB,EAAKr9B,gBACN,EAAKA,eAAe8T,eAAe,MAEvC/hB,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAyT,aAAA,sBACIhe,KAAKwwB,qBAAqBxS,aAAche,KAAKyd,OAAO/I,KAAMxK,MAAM,SAAAmB,GAC5D,EAAKuqC,WAAY,EACW,MAAvB,EAAKr9B,gBACN,EAAKA,eAAe8T,eAAe,MAEvC/hB,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAAwrC,iBAAA,WACIC,EAAEC,KAAM,CACJ9hB,IAAK9W,IAAM,8BACX64B,OAAQ,OACRryC,KAAM,CAAEka,SAAU/d,KAAKyd,OAAO/I,KAC9ByhC,QAAS,SAAUjqC,KAGnBkqC,OAAO,KAIlB,YAAAjS,YAAA,WACC,OAAOnkC,KAAKzB,YAAY4lC,eAGf,YAAA35B,MAAP,SAAcD,GACNvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCArL1DzG,GAAoC,4L,iCAApCA,EAAoC,yE,GAAA,M,k0CC7BjD,4BAEI,4BACI,2BAAiC,YAAsB,iBAC5D,iBAEC,4BACE,yBACE,4BAA4C,YAC9C,iBAEA,4BACE,6BAAiC,6BAAkD,iBACnF,+BAAmB,gEAAqB,4BAAW,EAAAu6B,sBAAnD,iBACF,iBAGE,6DAYA,2BACI,gCACI,8BAA0E,mBAC9E,iBACA,mCAAoF,gFAA8D,iBACtJ,iBAEA,8BACE,mCAGA,mCAGA,mCAGF,iBACJ,iBACJ,kB,MA7CyC,yDAKW,0EAKzB,iDAMhB,mDAcqF,iEAAqC,yBAIlH,8DAGA,6DAGA,+D,8jBDtBnB,GAQa,EAAAv6B,wC,+DAAAA,EAAoC,E,KARhD,EAAAyF,U,MAAW,CAERC,SAAU,mCACVC,YAAa,0BACbC,UAAW,CAAC,0CACZ+nC,cAAe,EAAAC,kBAAkBC,U,0IAOxB9nB,OAAQ,CAAF,C,KAAd,EAAAlgB,QAQQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,QAI+BwzB,gBAAe,E,KAA9C,EAAApf,U,MAAW,qBAEmB4G,eAAc,E,KAA5C,EAAA5G,U,MAAW,uB,yHE/ChB,WAYA,GATA,MACA,MAIA,OACA,OACA,MAEA,Q,kHCiCU,gCAAwC,4FACtC,6BACF,kB,mDACA,gCAAuC,0FACrC,6BACF,kB,mDACA,gCAAuC,8FACrC,6BACF,kB,0FDnCV,aAkBI,WAAqBysB,EAAwB5N,EAAoDryB,EAAsCI,GAAlH,KAAA6/B,SAAwB,KAAA5N,uBAAoD,KAAAryB,eAAsC,KAAAI,cAJvI,KAAAq3C,WAAqB,E,OAQrB,YAAA31C,SAAA,WACID,KAAKq2C,SAAWlc,OAAOC,OAAQ,GAAIp6B,KAAKyd,SAG5C,YAAAD,YAAA,sBACIxd,KAAKwwB,qBAAqBhT,YAAaxd,KAAKyd,QAASvT,MAAM,SAAAmB,GACvD,EAAKgrC,SAAWlc,OAAOC,OAAQ,GAAI,EAAK3c,QAExC,EAAKO,kBACL1T,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAMpB,YAAA+rC,cADA,WAEI,OAAKt2C,KAAK41C,WAWd,YAAAW,gBAAA,SAAiBC,GACRA,GAAkBx2C,KAAK41C,WACxB51C,KAAK+1C,oBAIb,YAAAD,UAAA,WACI91C,KAAK8d,cAGF,YAAA2nB,QAAP,WACIzlC,KAAKge,gBAGT,YAAAF,WAAA,sBACI9d,KAAKwwB,qBAAqB1S,WAAY9d,KAAKyd,OAAO/I,KAAMxK,MAAM,SAAAmB,GAC1D,EAAKuqC,WAAY,KACjBtrC,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAyT,aAAA,sBACIhe,KAAKwwB,qBAAqBxS,aAAche,KAAKyd,OAAO/I,KAAMxK,MAAM,SAAAmB,GAC5D,EAAKuqC,WAAY,EAEjB,EAAKn4B,OAAS,EAAK44B,YACnB/rC,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAKpB,YAAAwrC,iBAAA,WACIC,EAAEC,KAAM,CACJ9hB,IAAK9W,IAAM,8BACX64B,OAAQ,OACRryC,KAAM,CAAEka,SAAU/d,KAAKyd,OAAO/I,KAC9ByhC,QAAS,SAAUjqC,KAGnBkqC,OAAO,KAIf,YAAA3S,SAAA,SAAUhmB,GACNzd,KAAKyd,OAASA,GAGrB,YAAA0mB,YAAA,WACC,OAAOnkC,KAAKzB,YAAY4lC,eAGf,YAAA35B,MAAP,SAAcD,GACNvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCAlG1DxG,GAA6B,qJ,iCAA7BA,EAA6B,gF,+CAA7B,qBAAe,sB,qwCCxB5B,4BACI,4BACE,2BAAiC,YAAsB,iBACzD,iBAEA,4BAEI,8BAA4B,4BAAwD,kBAAE,iBACtF,8BAAwC,uEAAxC,iBAEA,8BAA4B,6BAA0D,mBAAE,iBACxF,+BAAwC,6EAAxC,iBAEA,+BAA4B,6BAAyD,mBAAE,iBACvF,+BAAwC,wEAAxC,iBAEA,+BAA4B,6BAA0D,mBAAE,iBACxF,+BAAwC,8EAAxC,iBAEA,+BAA4B,6BAA8D,mBAAE,iBAC5F,+BAAwC,iFAAxC,iBAEA,+BACI,8BAAkD,mBACtD,iBACA,iCAAkN,8EAC9M,iCACI,8BACJ,iBACA,iCACI,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBAEA,2BACI,+BACI,8BAA0E,mBAC9E,iBACA,mCAAoF,gFAAgD,iBACxI,iBAEA,8BACE,mCAGA,mCAGA,mCAGF,iBAEJ,iBACJ,kB,MAvDuC,yDAMS,wDAA4B,wBAG5B,8DAAkC,wBAGlC,yDAA6B,wBAG7B,+DAAmC,wBAGnC,kEAAsC,wBAKlD,6KAAqL,kCAArL,CAAqL,wBAgBzH,kEAI7E,8DAGA,6DAGA,+D,yMDjCnB,GAMa,EAAAA,iC,+DAAAA,EAA6B,E,KANzC,EAAAwF,U,MAAW,CAERC,SAAU,kCACVC,YAAa,0BACbC,UAAW,Q,iHAIFmgB,OAAQ,CAAF,C,KAAd,EAAAlgB,QAIQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,QA0BD+4C,cAAa,E,KADZ,EAAAG,a,MAAc,4B,inBErDnB,mBAAa,EAAAC,gBAcb,mBAAa,EAAAC,WAKb,mBAAa,EAAAC,iBAWb,+B,+CAEA,OAF2C,OAE3C,EAFA,CAA2CA,GAA9B,EAAAC,wBAIb,+B,+CAEA,OAF2C,OAE3C,EAFA,CAA2CD,GAA9B,EAAAE,wBAIb,+B,+CASA,OAToC,OASpC,EATA,CAAoCF,GAAvB,EAAAG,iBAWb,+B,+CAMA,OANuC,OAMvC,EANA,CAAuCH,GAA1B,EAAAI,oBAQb,mBAAa,EAAAC,mBAKb,mBAAa,EAAAC,YAKb,+B,+CAIA,OAJqC,OAIrC,EAJA,CAAqCN,GAAxB,EAAAO,mB,oHCrEb,WAcA,GAZA,MACA,MAOA,OAEA,MAEA,QAGA,S,2HCXQ,2CAA0H,+GAA8C,iB,8CAA/G,6BAAgB,cAAhB,CAAgB,0B,mDAUvE,gCAAwC,4FACtC,6BACF,kB,mDACA,gCAAuC,0FACrC,6BACF,kB,mDACA,gCAAuC,8FACrC,6BACF,kBDFV,iBA8BC,WAAoB/Y,EAAwB5N,EAAoDryB,EAAsCI,GAAlH,KAAA6/B,SAAwB,KAAA5N,uBAAoD,KAAAryB,eAAsC,KAAAI,cAlBtI,KAAAkF,YAAmC,GAInC,KAAAmyC,WAAqB,EAOrB,KAAAnkB,QAAkB,KAKlB,KAAA7a,QAAgB,KAGf5W,KAAK4W,QAAU,IAAI1C,KAEnB,IAAMoH,EAAMtb,KAAK4W,QAAQ2E,aACnBC,EAAQxb,KAAK4W,QAAQ6E,cAC3Bzb,KAAKyxB,QAAUzxB,KAAK4W,QAAQ8E,iBAAmB,KAAOF,EAAQ,GAAK,IAAM,KAAOA,EAAQ,GAAK,KAAOF,EAAM,GAAK,IAAM,IAAMA,E,OAG5H,YAAArb,SAAA,WAECD,KAAKyD,YAAczD,KAAKyd,OAAO2B,KAE/Bpf,KAAKyjC,SAASzjC,KAAKyd,SAGpB,YAAAD,YAAA,sBACKC,EAASxF,KAAKC,MAAMD,KAAKE,UAAUnY,KAAKyd,SAE5Czd,KAAKwwB,qBAAqBhT,YAAYC,GAAQvT,MAAK,SAAAmB,GAClD,EAAKo6B,aACHn7B,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAA0nB,iBAAA,WACCjyB,KAAK4W,QAAU,IAAI1C,KAAKA,KAAKgE,MAAMlY,KAAKyxB,WAGzC,YAAAgS,SAAA,SAAShmB,KAIT,YAAAyoB,iBAAA,SAAiBxiC,GAAjB,WAEC1D,KAAKmO,WAAanO,KAAK7B,aAAaiP,KAAK,EAAAnT,mCAAoC,CAC5EmU,UAAU,EACVC,UAAU,EACVC,qBAAqB,IAEtBtO,KAAKmO,WAAWI,QAAQnD,KAAK1H,GAC7B1D,KAAKmO,WAAWI,QAAQggB,gBAAgB3tB,WAAU,SAAA8C,GACjD,IAAMyG,EAAQ,EAAK1G,YAAYiJ,WAAU,SAAAC,GAAK,OAAAA,EAAE1J,OAASS,EAAUT,SAErD,IAAXkH,IACF,EAAK1G,YAAY0G,GAASzG,OA2B7B,YAAAoyC,UAAA,WACC91C,KAAK8d,cAGC,YAAA2nB,QAAP,WACCzlC,KAAKge,gBAGN,YAAAF,WAAA,sBACC9d,KAAKwwB,qBAAqB1S,WAAW9d,KAAKyd,OAAO/I,KAAKxK,MAAK,SAAAmB,GAC1D,EAAKuqC,WAAY,KACftrC,OAAM,SAACC,GACT,EAAKC,MAAMD,OAIb,YAAAyT,aAAA,sBACChe,KAAKwwB,qBAAqBxS,aAAahe,KAAKyd,OAAO/I,KAAKxK,MAAK,SAAAmB,GAC5D,EAAKuqC,WAAY,KACftrC,OAAM,SAACC,GACT,EAAKC,MAAMD,OAKb,YAAAwrC,iBAAA,WACCC,EAAEC,KAAK,CACN9hB,IAAK9W,IAAM,8BACX64B,OAAQ,OACRryC,KAAM,CAAEka,SAAU/d,KAAKyd,OAAO/I,KAC9ByhC,QAAS,SAASjqC,KAGlBkqC,OAAO,KAIT,YAAAjS,YAAA,WACC,OAAOnkC,KAAKzB,YAAY4lC,eAGf,YAAA35B,MAAP,SAAcD,GACNvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCAxI1DvG,GAAwB,qJ,iCAAxBA,EAAwB,g6BC9BrC,4BACI,4BACE,2BAAiC,YAAsB,iBACzD,iBAEA,4BACI,4CAEA,0BACI,8BACI,4BAA0E,kBAC9E,iBACA,kCAAoF,gFAA0E,iBAClK,iBAEA,6BACE,kCAGA,mCAGA,kCAGF,iBACJ,iBACJ,kB,MAzBuC,yDAIU,qDAM+C,iEAAqC,qCAIlH,8DAGA,6DAGA,+D,2IDAnB,GAQa,EAAAA,4B,+DAAAA,EAAwB,E,KARpC,EAAAuF,U,MAAU,CAEVC,SAAU,oBACVC,YAAa,qCACbC,UAAW,GACX+nC,cAAe,EAAAC,kBAAkBC,U,iHAKxB9nB,OAAQ,CAAF,C,KAAd,EAAAlgB,QAIQ6R,SAAU,CAAF,C,KAAhB,EAAA7R,W,+GEpCF,WAKA,GAJA,MAIA,Q,GAEA,OACA,M,uFCkBgC,gCAAuD,YAAc,kB,uBAAlC,6BAAoB,6C,yBAWvD,gCAAuE,YAAmB,kB,uBAA5C,6BAAyB,6C,mDAPnF,4BACI,+BACI,6BACJ,iBACA,4BACI,gCAA6C,sGACzC,wBACA,iCACJ,iBACJ,iBACJ,iB,iCALqD,mDAEX,sD,mDApB9C,kCACI,4BACI,8BACI,4BACJ,iBACA,4BACI,+BAAkD,gGAAkB,8FAEhE,wBACA,iCACJ,iBACJ,iBACJ,iBACA,8BAWA,6BACI,+BACI,8BACJ,iBACA,6BACI,iCAAsD,kGAClD,yBACA,iCACI,8BACJ,iBACA,iCACI,8BACJ,iBACJ,iBACJ,iBACJ,iBACA,6BACI,8BACI,iCAAwE,2FACpE,8BACJ,iBACJ,iBACJ,iBACJ,iB,mDAzC8D,8CAGrB,+CAIR,2DAgBiC,gDAaR,mDD/C1E,iBAwCI,WAAqBuW,EAA4B3V,EAAsCI,GAAlE,KAAAuV,UAA4B,KAAA3V,eAAsC,KAAAI,cAxBvF,KAAA0E,KAAe,KAKf,KAAAQ,YAAiD,GAKjD,KAAAC,UAAoB,KAKpB,KAAAisB,OAAiB,K,OAWjB,YAAA1vB,SAAA,sBACID,KAAK8T,QAAQS,oBAAoB,GAAOrK,MAAM,SAAAuB,GAK1C,IADA,IAAI+I,EAAa,GACRhR,EAAI,EAAGA,EAAIiI,EAAMxK,SAAUuC,EAE9B,EAAKjF,YAAYsE,iBAAiB4I,EAAMjI,GAAGqH,UAE7C2J,EAAWxQ,KAAKyH,EAAMjI,IAG1B,EAAKiI,MAAQ+I,KAEblK,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIpB,YAAAuL,SAAA,SAAU7S,GAAV,WAEiB,MAARA,GAAgBA,EAAKhC,OAAS,EAC/BjB,KAAK8T,QAAQiC,sBAAuB9S,GAAM,GAAQiH,MAAM,SAAAzG,GACpD,EAAKA,YAAcA,EACnB,EAAKC,UAAY,QACjB4G,OAAM,SAAEC,GACR,EAAKC,MAAOD,OAIhBvK,KAAKyD,YAAc,GACnBzD,KAAK0D,UAAY,OAKzB,YAAA8kC,SAAA,WAEwB,aAAfxoC,KAAK2vB,OACNwT,OAAOC,SAASC,KAAOhmB,IAAM,oCAAsCrd,KAAKiD,KAAO,kBAAoBjD,KAAK0D,UAEnF,SAAf1D,KAAK2vB,SACXwT,OAAOC,SAASC,KAAOhmB,IAAM,kCAAoCrd,KAAKiD,KAAO,kBAAoBjD,KAAK0D,YAIvG,YAAA8G,MAAP,SAAcD,GACNvK,KAAKmO,WAAa,EAAAsD,aAAaC,kBAAkBnH,EAAKvK,KAAK7B,e,iCApF1D9D,GAAmB,4G,iCAAnBA,EAAmB,82BChB5B,6BAeY,iC,MAAsB,8C,+RDLtC,GAMa,EAAAA,uB,+DAAAA,EAAmB,E,KAN/B,EAAA8C,U,MAAW,CAERC,SAAU,cACVC,YAAa,+BACbC,UAAW,Q,yMEhBf,W,OAIA,2B,OAKE,YAAAsoC,UAAA,SAAUC,EAAwB/mC,GACjC,IAAK+mC,IAAU/mC,EACR,OAAO+mC,EAGd,IAAIuR,EAAiC,GAKlC,OAJAp3C,KAAKq3C,2BAA2Bv4C,EAAQs4C,GAIjCvR,EAAM/mC,QAAO,SAAA2O,GAAQ,OAA8C,IAA9C2pC,EAAsB5qC,QAAQiB,EAAKxK,UAGnE,YAAAo0C,2BAAA,SAA2Bv4C,EAAyBs4C,GAApD,WACCt4C,EAAOuC,SAAQ,SAAA0mC,GACd,EAAK/6B,sBAAsB+6B,EAAGqP,OAIhC,YAAApqC,sBAAA,SAAsBrN,EAAqBy3C,GAA3C,WACCA,EAAsBpzC,KAAKrE,EAAKmE,eAEhCnE,EAAKgH,SAAStF,SAAQ,SAAA+B,GACrB,EAAK4J,sBAAsB5J,EAAOg0C,O,iCAxBzB1+C,I,kDAAAA,EAAiB,U,EAJ9B,GAIa,EAAAA,qB,+DAAAA,EAAiB,E,KAJ7B,EAAAotC,K,MAAK,CACJ3d,KAAM,gBACN4d,MAAM,M,2HCNR,W,OAEA,2B,OAKI,YAAAH,UAAA,SAAUvsB,GACN,OAAKA,EAIE,IAAInF,KAAKmF,GAAMT,UAHXS,G,iCAHNljB,I,oDAAAA,EAAmB,U,EAJhC,GAIa,EAAAA,uB,+DAAAA,EAAmB,E,KAJ/B,EAAA2vC,K,MAAK,CACF3d,KAAM,kBACN4d,MAAM,M,6HCJV,WACA,OACA,QAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,S,eAEMuR,EAAiB,CACnB,CACIC,KAAM,GACNC,UAAW,EAAAhgD,mBACXigD,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,cACNC,UAAW,EAAAhgD,mBACXigD,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,OACNC,UAAW,EAAA39C,kBACX49C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,kBACNC,UAAW,EAAA19C,2BACX29C,YAAa,CAAC,EAAAG,mBAElB,CACIL,KAAM,eACNC,UAAW,EAAAl9C,2BACXm9C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,iBACNC,UAAW,EAAA38C,uBACX48C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,WACNC,UAAW,EAAA18C,aACX28C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,8BACNC,UAAW,EAAAj9C,oBACXk9C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,wBACNC,UAAW,EAAA78C,wBACX88C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,iBACNC,UAAW,EAAAh+C,6BACXi+C,YAAa,CAAC,EAAAG,mBAElB,CACIL,KAAM,QACNC,UAAW,EAAAn8C,oBACXo8C,YAAa,CAAC,EAAAE,kBAElB,CACIJ,KAAM,0BACNC,UAAW,EAAAl8C,sCACXm8C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,8BACNC,UAAW,EAAAh8C,+BACXi8C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,mBACNC,UAAW,EAAA97C,yBACX+7C,YAAa,CAAC,EAAAC,YAErB,CACOH,KAAM,oDACNC,UAAW,EAAA97C,yBACX+7C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,gEACNC,UAAW,EAAA77C,gCACX87C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,sEACNC,UAAW,EAAA77C,gCACX87C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,gFACNC,UAAW,EAAA77C,gCACX87C,YAAa,CAAC,EAAAC,YAElB,CACIH,KAAM,oBACNC,UAAW,EAAA/7C,qBACXg8C,YAAa,CAAC,EAAAE,mBAItB,2B,wCAOatgD,I,gCAAAA,I,qCAJE,CACP,CAAEyiC,QAAS,EAAA+d,iBAAkBC,SAAU,EAAAC,uBAC1C,SAJQ,CAAC,EAAAxhD,aAAayhD,SAAUV,IACvB,EAAA/gD,gB,EAFd,GAOa,EAAAc,yB,gEAAAA,EAAqB,mCALpB,EAAAd,iB,+DAKDc,EAAqB,E,KAPjC,EAAA2E,S,MAAU,CACPC,QAAS,CAAC,EAAA1F,aAAayhD,SAAUV,IACjCW,QAAS,CAAC,EAAA1hD,cACV4F,UAAW,CACP,CAAE29B,QAAS,EAAA+d,iBAAkBC,SAAU,EAAAC,2B","file":"1.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { DatePipe } from '@angular/common';\n\nimport { LocalizedInputComponent } from './component/form-fields/localized-input/localized-input.component';\nimport { LocalizedTextComponent } from './component/form-fields/localized-text/localized-text.component';\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { CreateHierarchyTypeModalComponent } from './component/hierarchy/modals/create-hierarchy-type-modal.component';\nimport { AddChildToHierarchyModalComponent } from './component/hierarchy/modals/add-child-to-hierarchy-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './component/hierarchy/modals/create-geoobjtype-modal.component';\nimport { ManageAttributesModalComponent } from './component/hierarchy/geoobjecttype-management/manage-attributes-modal.component';\nimport { DefineAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/define-attribute-modal-content.component';\nimport { EditAttributeModalContentComponent } from './component/hierarchy/geoobjecttype-management/edit-attribute-modal-content.component';\nimport { ShapefileModalComponent } from './component/importer/modals/shapefile-modal.component';\nimport { AttributesPageComponent } from './component/importer/modals/attributes-page.component';\nimport { LocationPageComponent } from './component/importer/modals/location-page.component';\nimport { LocationProblemPageComponent } from './component/importer/modals/location-problem-page.component';\nimport { LocationProblemComponent } from './component/importer/modals/location-problem.component';\nimport { TermProblemPageComponent } from './component/importer/modals/term-problem-page.component';\nimport { TermProblemComponent } from './component/importer/modals/term-problem.component';\nimport { SpreadsheetModalComponent } from './component/importer/modals/spreadsheet-modal.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { TermOptionWidgetComponent } from './component/hierarchy/geoobjecttype-management/term-option-widget.component';\nimport { AttributeInputComponent } from './component/hierarchy/geoobjecttype-management/attribute-input.component';\nimport { EditTermOptionInputComponent } from './component/hierarchy/geoobjecttype-management/edit-term-option-input.component';\nimport { ManageTermOptionsComponent } from './component/hierarchy/geoobjecttype-management/manage-term-options.component';\nimport { GeoObjectTypeInputComponent } from './component/hierarchy/geoobjecttype-management/geoobjecttype-input.component';\nimport { ManageGeoObjectTypeModalComponent } from './component/hierarchy/modals/manage-geoobjecttype-modal.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { PublishModalComponent } from './component/master-list/publish-modal.component';\nimport { ExportFormatModalComponent } from './component/master-list/export-format-modal.component';\nimport { RequestTableComponent } from './component/crtable/request-table.component';\nimport { CreateUpdateGeoObjectDetailComponent } from './component/crtable/action-detail/create-update-geo-object/detail.component';\nimport { AddRemoveChildDetailComponent } from './component/crtable/action-detail/add-remove-child/detail.component';\nimport { SetParentDetailComponent } from './component/crtable/action-detail/set-parent/set-parent-detail.component';\nimport { GeoObjectSharedAttributeEditorComponent } from './component/geoobject-shared-attribute-editor/geoobject-shared-attribute-editor.component';\nimport { ManageVersionsComponent } from './component/geoobject-shared-attribute-editor/manage-versions.component';\nimport { ManageVersionsModalComponent } from './component/geoobject-shared-attribute-editor/manage-versions-modal.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { GeoObjectEditorComponent } from './component/geoobject-editor/geoobject-editor.component';\nimport { GeoObjectEditorMapComponent } from './component/geoobject-editor-map/geoobject-editor-map.component';\nimport { SimpleEditControl } from './component/geoobject-editor-map/simple-edit-control/simple-edit-control.component';\nimport { CascadingGeoSelector } from './component/cascading-geo-selector/cascading-geo-selector';\nimport { TreeGeoSelector } from './component/tree-geo-selector/tree-geo-selector';\nimport { ManageParentVersionsModalComponent } from './component/cascading-geo-selector/manage-parent-versions-modal.component';\nimport { ManageParentVersionsComponent } from './component/cascading-geo-selector/manage-parent-versions.component';\nimport { ActionDetailModalComponent } from './component/crtable/action-detail/action-detail-modal.component';\nimport { DataImporterComponent } from './component/importer/dataimporter.component';\nimport { DataExportComponent } from './component/data-export/data-export.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { PublishedMasterListHistoryComponent } from './component/master-list/published-master-list-history.component';\nimport { MasterListHistoryComponent } from './component/master-list/master-list-history.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { JobConflictModalComponent } from './component/scheduled-jobs/conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './component/scheduled-jobs/conflict-widgets/reupload-modal.component';\nimport { ParentReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/parent-reference-problem-widget.component';\nimport { TermReferenceProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/term-reference-problem-widget.component';\nimport { RowValidationProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/row-validation-problem-widget.component';\nimport { StepIndicatorComponent } from './component/scheduled-jobs/step-indicator.component';\nimport { ImportProblemWidgetComponent } from './component/scheduled-jobs/conflict-widgets/import-problem-widget.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\n\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigModalComponent } from './component/synchronization-config/synchronization-config-modal.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\n\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\nimport { ContextLayerModalComponent } from './component/location-manager/context-layer-modal.component';\nimport { LayerPanelComponent } from './component/location-manager/layer-panel.component';\nimport { FeaturePanelComponent } from './component/location-manager/feature-panel.component';\nimport { GeometryPanelComponent } from './component/location-manager/geometry-panel.component';\n\nimport { GeoObjectAttributeCodeValidator } from './factory/form-validation.factory';\n\nimport { GeoObjectTypePipe } from './pipe/geoobjecttype.pipe';\nimport { GeoObjectAttributeExcludesPipe } from './pipe/geoobject-attribute-excludes.pipe';\nimport { ToEpochDateTimePipe } from './pipe/to-epoch-date-time.pipe';\nimport { RegistryService } from './service/registry.service';\nimport { TaskService } from './service/task.service';\nimport { HierarchyService } from './service/hierarchy.service';\nimport { SynchronizationConfigService } from './service/synchronization-config.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\nimport { ChangeRequestService } from './service/change-request.service';\nimport { IOService } from './service/io.service';\nimport { MapService } from './service/map.service';\nimport { GeoObjectTypeManagementService } from './service/geoobjecttype-management.service'\n\nimport { RegistryRoutingModule } from './registry-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n\nimport '../rxjs-extensions';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\t//        ModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tTabsModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule,\n\t\tSharedModule,\n\t\tRegistryRoutingModule,\n\t\tAccordionModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tHierarchyComponent,\n\t\tRequestTableComponent,\n\t\tCreateUpdateGeoObjectDetailComponent,\n\t\tAddRemoveChildDetailComponent,\n\t\tSetParentDetailComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tShapefileModalComponent,\n\t\tAttributesPageComponent,\n\t\tLocationPageComponent,\n\t\tLocationProblemPageComponent,\n\t\tLocationProblemComponent,\n\t\tTermProblemPageComponent,\n\t\tTermProblemComponent,\n\t\tSpreadsheetModalComponent,\n\t\tGeoObjectTypePipe,\n\t\tGeoObjectAttributeCodeValidator,\n\t\tEditAttributeModalContentComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tLocalizedInputComponent,\n\t\tLocalizedTextComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsComponent,\n\t\tManageVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tGeoObjectAttributeExcludesPipe,\n\t\tToEpochDateTimePipe,\n\t\tGeoObjectEditorMapComponent,\n\t\tSimpleEditControl,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tCascadingGeoSelector,\n\t\tTreeGeoSelector,\n\t\tManageParentVersionsModalComponent,\n\t\tManageParentVersionsComponent,\n\t\tActionDetailModalComponent,\n\t\tHierarchyComponent,\n\t\tDataImporterComponent,\n\t\tDataExportComponent,\n\t\t// Master List screens\n\t\tMasterListManagerComponent,\n\t\tMasterListComponent,\n\t\tMasterListHistoryComponent,\n\t\tPublishedMasterListHistoryComponent,\n\t\tPublishModalComponent,\n\t\tMasterListViewComponent,\n\t\t// Scheduled jobs\n\t\tExportFormatModalComponent,\n\t\tScheduledJobsComponent,\n\t\tJobComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tParentReferenceProblemWidgetComponent,\n\t\tTermReferenceProblemWidgetComponent,\n\t\tRowValidationProblemWidgetComponent,\n\t\tStepIndicatorComponent,\n\t\tImportProblemWidgetComponent,\n\t\tTaskViewerComponent,\n\t\t// Synchronization Config\n\t\tSynchronizationConfigManagerComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tSynchronizationConfigComponent,\n\t\tSyncDetailsComponent,\n\t\t// Location manager\n\t\tLocationManagerComponent,\n\t\tDatasetLocationManagerComponent,\n\t\tContextLayerModalComponent,\n\t\tLayerPanelComponent,\n\t\tFeaturePanelComponent,\n\t\tGeometryPanelComponent\n\t],\n\tproviders: [\n\t\tMapService,\n\t\tHierarchyService,\n\t\tLocalizationManagerService,\n\t\tChangeRequestService,\n\t\tIOService,\n\t\tGeoObjectTypeManagementService,\n\t\tRegistryService,\n\t\tTaskService,\n\t\tDatePipe,\n\t\tToEpochDateTimePipe,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigService\n\t],\n\tentryComponents: [\n\t\tAddChildToHierarchyModalComponent,\n\t\tCreateGeoObjTypeModalComponent,\n\t\tManageAttributesModalComponent,\n\t\tDefineAttributeModalContentComponent,\n\t\tEditAttributeModalContentComponent,\n\t\tCreateHierarchyTypeModalComponent,\n\t\tShapefileModalComponent,\n\t\tSpreadsheetModalComponent,\n\t\tTermOptionWidgetComponent,\n\t\tAttributeInputComponent,\n\t\tEditTermOptionInputComponent,\n\t\tManageGeoObjectTypeModalComponent,\n\t\tGeoObjectTypeInputComponent,\n\t\tManageTermOptionsComponent,\n\t\tGeoObjectSharedAttributeEditorComponent,\n\t\tManageVersionsModalComponent,\n\t\tManageParentVersionsModalComponent,\n\t\tSubmitChangeRequestComponent,\n\t\tGeoObjectEditorComponent,\n\t\tPublishModalComponent,\n\t\tExportFormatModalComponent,\n\t\tDataPageComponent,\n\t\tChangeRequestPageComponent,\n\t\tActionDetailModalComponent,\n\t\tJobConflictModalComponent,\n\t\tReuploadModalComponent,\n\t\tStepIndicatorComponent,\n\t\tSynchronizationConfigModalComponent,\n\t\tContextLayerModalComponent\n\t]\n})\nexport class RegistryModule { }\n","import { ChangeRequestService } from './change-request.service';\nimport { GeoObjectTypeManagementService } from './geoobjecttype-management.service';\nimport { HierarchyService } from './hierarchy.service';\nimport { IOService } from './io.service';\nimport { LocalizationManagerService } from './localization-manager.service';\nimport { MapService } from './map.service';\nimport { RegistryService } from './registry.service';\nimport { SynchronizationConfigService } from './synchronization-config.service';\nimport { TaskService } from './task.service';\n\nexport const services: any[] = [\n\tChangeRequestService,\n\tGeoObjectTypeManagementService,\n\tHierarchyService,\n\tIOService,\n\tLocalizationManagerService,\n\tMapService,\n\tRegistryService,\n\tSynchronizationConfigService,\n\tTaskService\n];\n\nexport * from './change-request.service';\nexport * from './geoobjecttype-management.service';\nexport * from './hierarchy.service';\nexport * from './io.service';\nexport * from './localization-manager.service';\nexport * from './map.service';\nexport * from './registry.service';\nexport * from './synchronization-config.service';\nexport * from './task.service';","import { GeoObjectType } from './registry';\n\nexport class ImportSheet {\n\tname: string;\n\tattributes: {\n\t\tboolean: string[];\n\t\tdate: string[];\n\t\tnumeric: string[];\n\t\ttext: string[];\n\t}\n}\n\nexport class Location {\n\tlabel: string;\n\tcode: string;\n\ttarget: string;\n\tmatchStrategy: string;\r\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: string;\n}\n\nexport class TermProblem {\n\tlabel: string;\n\tparentCode: string;\n\tmdAttributeId: string;\n\tattributeCode: string;\n\tattributeLabel: string;\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class LocationProblem {\n\tlabel: string;\n\ttype: string;\n\ttypeLabel: string;\n\tparent: string;\n\tcontext: { label: string, type: string }[];\n\taction: any;\n\tresolved: boolean;\n}\n\nexport class Exclusion {\n\tcode: string;\n\tvalue: string;\n}\n\nexport class Synonym {\n\tlabel: string;\n\tsynonymId: string;\n\tvOid?: string;\n}\n\nexport class ImportConfiguration {\n\ttype: GeoObjectType;\n\tsheet: ImportSheet;\n\tdirectory: string;\n\tfilename: string;\n\thierarchy: string;\n\tpostalCode: boolean;\n\thasPostalCode: boolean;\n\tlocations: Location[];\n\tformatType: string;\n\tobjectType: string;\n\tlocationProblems: LocationProblem[];\n\ttermProblems: TermProblem[];\n\texclusions: Exclusion[];\n\thierarchies: { code: string, label: string }[];\n\tstartDate: string;\n\tendDate: string;\n\tisExternal: string;\n\texternalSystemId: string;\n\texternalIdAttributeTarget: string;\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-text',\n    templateUrl: './localized-text.component.html',\n    styleUrls: ['./localized-text.css'],\n} )\nexport class LocalizedTextComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n\t@Input() public inlinelayout: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","\n<div *ngFor=\"let localeValue of value.localeValues\">\n  <div [ngClass]=\"{'row' : inlinelayout, 'row-holder' : !inlinelayout}\" >\n    <div [ngClass]=\"{'col-md-12' : inlinelayout}\">\n      <div class=\"form-group\">\n        <div [ngClass]=\"{'label-holder' : !inlinelayout}\" >\n          <label>\n            <localize [key]=\"key\"></localize>\n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n        </div>\n        <div [ngClass]=\"{'holder' : !inlinelayout}\">\n          <span class=\"text\">\n            <textarea [(ngModel)]=\"localeValue.value\" [disabled]=\"disabled\" [name]=\"'description-' + localeValue.locale\"></textarea>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { debounceTime, distinctUntilChanged, filter, tap } from \"rxjs/operators\";\nimport { fromEvent } from 'rxjs';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ContextMenuService, ContextMenuComponent } from 'ngx-contextmenu';\nimport * as d3 from 'd3';\n\nimport { CreateHierarchyTypeModalComponent } from './modals/create-hierarchy-type-modal.component';\nimport { CreateGeoObjTypeModalComponent } from './modals/create-geoobjtype-modal.component';\nimport { ManageGeoObjectTypeModalComponent } from './modals/manage-geoobjecttype-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal'\n\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { Organization } from '@shared/model/core';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { SvgHierarchyType } from './d3/svg-hierarchy-type';\nimport { svgPoint, isPointWithin, calculateTextWidth, getBboxFromSelection } from './d3/svg-util';\nimport { SvgHierarchyNode } from './d3/svg-hierarchy-node';\n\nexport const TREE_SCALE_FACTOR_X: number = 1.8;\nexport const TREE_SCALE_FACTOR_Y: number = 1.8;\n\nexport const DEFAULT_NODE_FILL = '#e6e6e6';\nexport const DEFAULT_NODE_BANNER_COLOR = '#A29BAB';\nexport const INHERITED_NODE_FILL = '#d4d4d4';\nexport const INHERITED_NODE_BANNER_COLOR = '#a0a0a0';\nexport const RELATED_NODE_BANNER_COLOR = INHERITED_NODE_BANNER_COLOR;\n\nexport class Instance {\n  active: boolean;\n  label: string;\n}\n\nexport interface DropTarget {\n  dropSelector: string;\n  onDrag(dragEl: Element, dropEl: Element, event: any): void;\n  onDrop(dragEl: Element, event: any): void;\n  [others: string]: any;\n}\n\n@Component({\n\n  selector: 'hierarchies',\n  templateUrl: './hierarchy.component.html',\n  styleUrls: ['./hierarchy.css']\n})\nexport class HierarchyComponent implements OnInit {\n\n  userOrganization: string = null;\n\n  primarySvgHierarchy: SvgHierarchyType;\n  currentHierarchy: HierarchyType = null;\n\n  instance: Instance = new Instance();\n  hierarchies: HierarchyType[];\n  organizations: Organization[];\n  geoObjectTypes: GeoObjectType[] = [];\n\n  hierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n  typesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n\n  filter: string = '';\n  filteredHierarchiesByOrg: { org: Organization, hierarchies: HierarchyType[] }[] = [];\n  filteredTypesByOrg: { org: Organization, types: GeoObjectType[] }[] = [];\n  @ViewChild('searchInput', { static: true }) searchInput: ElementRef;\n\n  hierarchyTypeDeleteExclusions: string[] = ['AllowedIn', 'IsARelationship'];\n  geoObjectTypeDeleteExclusions: string[] = ['ROOT'];\n\n  _opened: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n  private bsModalRef: BsModalRef;\n\n    /*\n     * Template for tree node menu\n     */\n  @ViewChild('nodeMenu') public nodeMenuComponent: ContextMenuComponent;\n\n    /*\n     * Template for leaf menu\n     */\n  @ViewChild('leafMenu') public leafMenuComponent: ContextMenuComponent;\n\n    /* \n     * Currently clicked on id for delete confirmation modal \n     */\n  current: any;\n\n  isSRA: boolean = false;\n\n  hierarchyService: HierarchyService;\n\n  localizeService: LocalizationService;\n\n  options = {\n    //      allowDrag: (any) => node.isLeaf,\n    //      allowDrop: (element:Element, { parent, index }: {parent:TreeNode,index:number}) => {\n    // return true / false based on element, to.parent, to.index. e.g.\n    //          return parent.hasChildren;\n    //        },\n    displayField: \"label\",\n    actionMapping: {\n      mouse: {\n        click: (tree: any, node: any, $event: any) => {\n          this.treeNodeOnClick(node, $event);\n        },\n        contextMenu: (tree: any, node: any, $event: any) => {\n          this.handleOnMenu(node, $event);\n        }\n      }\n    },\n    mouse: {\n      //              drop: (tree: any, node: TreeNode, $event: any, {from, to}: {from:TreeNode, to:TreeNode}) => {\n      //                console.log('drag', from, to); // from === {name: 'first'}\n      //                // Add a node to `to.parent` at `to.index` based on the data in `from`\n      //                // Then call tree.update()\n      //              }\n    }\n  };\n\n\n\n  constructor(hierarchyService: HierarchyService, private modalService: BsModalService,\n    private contextMenuService: ContextMenuService,\n    localizeService: LocalizationService, private registryService: RegistryService, private authService: AuthService) {\n\n    this.isSRA = authService.isSRA();\n\n    this.hierarchyService = hierarchyService;\n    this.localizeService = localizeService;\n  }\n\n  ngOnInit(): void {\n    this.refreshAll(null);\n\n    fromEvent(this.searchInput.nativeElement, 'keyup').pipe(\n\n      // get value\n      filter(Boolean),\n      debounceTime(500),\n      distinctUntilChanged(),\n      tap(() => {\n        this.onFilterChange();\n      })\n      // subscription for response\n    ).subscribe();\n  }\n\n  localize(key: string): string {\n    return this.localizeService.decode(key);\n  }\n\n  private renderTree(): void {\n    if (this.currentHierarchy == null || this.currentHierarchy.rootGeoObjectTypes == null || this.currentHierarchy.rootGeoObjectTypes.length == 0) {\n      d3.select(\"#svg\").remove();\n      this.geoObjectTypes.forEach((got: GeoObjectType) => {\n        got.canDrag = true;\n      });\n      return;\n    }\n\n    d3.select(\".g-context-menu\").remove();\n    d3.select(\".hierarchy-inherit-button\").remove();\n    d3.select(\".g-hierarchy-got-connector\").remove();\n\n    let overflowDiv: any = d3.select(\"#overflow-div\").node();\n    let scrollLeft = overflowDiv.scrollLeft;\n    let scrollRight = overflowDiv.scrollRight;\n\n    let svg = d3.select(\"#svg\");\n\n    if (svg.node() == null) {\n      svg = d3.select(\"#svgHolder\").append(\"svg\");\n      svg.attr(\"id\", \"svg\");\n    }\n\n    this.primarySvgHierarchy = new SvgHierarchyType(this, svg, this.currentHierarchy, true, this.localizeService, this.modalService, this.authService);\n    this.primarySvgHierarchy.render();\n\n    this.calculateSvgViewBox();\n\n    let overflowDiv2: any = d3.select(\"#overflow-div\").node();\n    overflowDiv2.scrollLeft = scrollLeft;\n    overflowDiv2.scrollRight = scrollRight;\n\n    //this.registerSvgHandlers();\n\n    this.geoObjectTypes.forEach((got: GeoObjectType) => {\n      got.canDrag = this.calculateCanDrag(got);\n    });\n  }\n\n  calculateSvgViewBox(): void {\n    let svg: any = d3.select(\"#svg\");\n    let svgNode: any = svg.node();\n\n    let { x, y, width, height } = svgNode.getBBox();\n\n    const xPadding = 30;\n    const yPadding = 40;\n    svg.attr(\"viewBox\", (x - xPadding) + \" \" + (y - yPadding) + \" \" + (width + xPadding * 2) + \" \" + (height + yPadding * 2));\n\n    width = (width + xPadding * 2) * TREE_SCALE_FACTOR_X;\n    height = (height + yPadding * 2) * TREE_SCALE_FACTOR_Y;\n\n    d3.select(\"#svgHolder\").style(\"width\", width + \"px\");\n    //d3.select(\"#svgHolder\").style(\"height\", height + \"px\"); \n  }\n\n  calculateCanDrag(got: GeoObjectType): boolean {\n    let hierarchyComponent = this;\n\n    if (this.primarySvgHierarchy != null) {\n      // Check permissions against GOT and Hierarchy org\n      if (! ( this.authService.isSRA() || this.authService.isOrganizationRA(got.organizationCode)\n          || this.authService.isGeoObjectTypeRM(this.primarySvgHierarchy.hierarchyType.organizationCode, got.code)\n        ))\n      {\n        return false;\n      }\n    \n      // If the child is already on the graph, they cannot drag.\n      if (this.primarySvgHierarchy.getNodeByCode(got.code) != null) {\n        return false;\n      }\n\n      // If we are abstract, and one of our children is on the graph, they cannot drag.\n      if (got.isAbstract) {\n        let isChildOnGraph = false;\n\n        this.geoObjectTypes.forEach((child: GeoObjectType) => {\n          if (child.superTypeCode === got.code) {\n            if (hierarchyComponent.primarySvgHierarchy.getNodeByCode(child.code) != null) {\n              isChildOnGraph = true;\n            }\n          }\n        });\n\n        if (isChildOnGraph) {\n          return false;\n        }\n      }\n      // If we are a child of an abstract type, and our abstract type is on the graph, we cannot drag.\n      else if (got.superTypeCode != null) {\n        if (hierarchyComponent.primarySvgHierarchy.getNodeByCode(got.superTypeCode) != null) {\n          return false;\n        }\n      }\n    }\n    else {\n      // If there is no selected hierarchy, they cannot drag.\n      return false;\n    }\n\n    return true;\n  }\n\n  calculateRelatedHierarchies(got: GeoObjectType): string[] {\n    let relatedHiers = [];\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchyType = this.hierarchies[i];\n\n      if (hierarchyType.rootGeoObjectTypes != null && hierarchyType.rootGeoObjectTypes.length > 0) {\n        let d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]).descendants();\n\n        let found = d3Hierarchy.find((node) => {\n          return node.data.geoObjectType === got.code && node.data.inheritedHierarchyCode == null;\n        });\n\n        if (found) {\n          relatedHiers.push(hierarchyType.code);\n        }\n      }\n    }\n\n    return relatedHiers;\n  }\n\n  private registerDragHandlers(): any {\n    let that = this;\n\n    let dropTargets: DropTarget[] = [];\n\n    // Empty Hierarchy Drop Zone\n    dropTargets.push({\n      dropSelector: \".drop-box-container\", onDrag: function(dragEl: Element, dropEl: Element) {\n        if (this.dropEl != null) {\n          this.dropEl.style(\"border-color\", null);\n          this.dropEl = null;\n        }\n\n        if (dropEl != null) {\n          let emptyHierarchyDropZone = dropEl.closest(\".drop-box-container\");\n\n          if (emptyHierarchyDropZone != null) {\n            this.dropEl = d3.select(emptyHierarchyDropZone).style(\"border-color\", \"#6BA542\");\n          }\n        }\n      }, onDrop: function(dragEl: Element) {\n        if (this.dropEl != null) {\n          this.dropEl.style(\"border-color\", null);\n          that.addChild(that.currentHierarchy.code, \"ROOT\", d3.select(dragEl).attr(\"id\"));\n          this.dropEl = null;\n        }\n      }\n    });\n\n    // SVG GeoObjectType Drop Zone\n    dropTargets.push({\n      dropSelector: \".svg-got-body-rect\", onDrag: function(dragEl: Element, mouseTarget: Element, event: any) {\n        this.clearDropZones();\n\n        let lastDropEl = this.dropEl;\n\n        // translate page to SVG co-ordinate\n        let svg: any = d3.select(\"#svg\").node();\n\n        if (svg == null) {\n          return;\n        }\n        let svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        // Find out if we've dragged the GeoObjectType inside of a HierarchyNode. If we have, then\n        // we need to expand the HierarchyNode's BoundingBox to accomodate our new drop zones. \n        that.primarySvgHierarchy.getD3Tree().descendants().forEach((node: any) => {\n          if (node.data.geoObjectType !== \"GhostNode\" && isPointWithin(svgMousePoint, node.data.dropZoneBbox)) {\n            this.dropEl = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + node.data.geoObjectType + '\"]');\n            node.data.activeDropZones = true;\n\n            if (node.parent == null) {\n              node.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH * 4 };\n            }\n          }\n          else {\n            node.data.activeDropZones = false;\n\n            if (node.parent == null) {\n              node.data.dropZoneBbox = { x: node.x - SvgHierarchyType.gotRectW / 2, y: node.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n            }\n          }\n        });\n\n        if (this.dropEl == null || (lastDropEl != null && this.dropEl != null && lastDropEl.attr(\"data-gotCode\") != this.dropEl.attr(\"data-gotCode\"))) {\n          this.clearGhostNodes(true);\n        }\n\n        if (this.dropEl != null) {\n          let isDragGroup = d3.select(dragEl).classed(\"got-group-parent\");\n          const gotCode = this.dropEl.attr(\"data-gotCode\");\n          let dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n          let isDropGroup = that.findGeoObjectTypeByCode(gotCode).isAbstract;\n\n          this.dropEl.attr(\"stroke\", \"blue\");\n\n          const dropElX = parseInt(this.dropEl.attr(\"x\"));\n          const dropElY = parseInt(this.dropEl.attr(\"y\"));\n\n          // Add drop zones\n          const childW: number = SvgHierarchyType.gotRectW;\n          const childH: number = SvgHierarchyType.gotRectH;\n\n          let dzg = d3.select(\"#svg\").append(\"g\").classed(\"svg-dropZone-g\", true);\n\n          // Render Child Drop Zone\n          let dropTargetHasChildren = !(dropNode.children == null || dropNode.children.length == 0);\n          let isChildDZActive = !isDropGroup && (!isDragGroup || !dropTargetHasChildren);\n          if (isChildDZActive) {\n            this.childDzBacker = dzg.append(\"rect\").classed(\"svg-got-child-dz-backer\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"white\")\n\n            this.childDz = dzg.append(\"rect\").classed(\"svg-got-child-dz\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", \"1\")\n              .attr(\"stroke-dasharray\", \"5,5\");\n\n            let addChildLabel = dropTargetHasChildren ? that.localizeService.decode(\"hierarchy.content.intersectChild\") : that.localizeService.decode(\"hierarchy.content.addChild\");\n            this.childDzText = dzg.append(\"text\").classed(\"svg-got-child-dz-text\", true)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", 10)\n              .attr(\"fill\", \"black\")\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addChildLabel, 10) / 2)\n              .attr(\"y\", dropElY + SvgHierarchyType.gotRectH + 10 + childH / 2 + 2)\n              .text(addChildLabel);\n          }\n\n          // Render Parent Drop Zone\n          if (!isDragGroup) // Don't render it if we're a group\n          {\n            this.parentDzBacker = dzg.append(\"rect\").classed(\"svg-got-parent-dz-backer\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"white\")\n\n            this.parentDz = dzg.append(\"rect\").classed(\"svg-got-parent-dz\", true)\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - (childW / 2))\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH)\n              .attr(\"width\", childW)\n              .attr(\"height\", childH)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", \"1\")\n              .attr(\"stroke-dasharray\", \"5,5\");\n\n            d3.select(\".svg-got-parent-dz-text\").remove();\n            let addParentLabel = dropNode.parent == null ? that.localizeService.decode(\"hierarchy.content.addParent\") : that.localizeService.decode(\"hierarchy.content.intersectParent\");\n            this.parentDzText = dzg.append(\"text\").classed(\"svg-got-parent-dz-text\", true)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", 10)\n              .attr(\"fill\", \"black\")\n              .attr(\"x\", dropElX + (SvgHierarchyType.gotRectW / 2) - calculateTextWidth(addParentLabel, 10) / 2)\n              .attr(\"y\", dropElY - SvgHierarchyType.gotHeaderH - childH / 2 + 2)\n              .text(addParentLabel);\n          }\n\n          // Render Sibling Drop Zone\n          if (this.ghostCode != gotCode) {\n\n\n            if (this.ghostCode != null) {\n              this.clearGhostNodes(dropNode.parent == null);\n            }\n\n            if (dropNode.parent != null) {\n              let parentIndex = null;\n              for (let i = 0; i < dropNode.parent.data.children.length; ++i) {\n                let hn: any = dropNode.parent.data.children[i];\n\n                if (hn.geoObjectType === gotCode) {\n                  parentIndex = i + 1;\n                }\n              };\n\n              let addSiblingLabel = that.localizeService.decode(\"hierarchy.content.addChild\");\n              dropNode.parent.data.children.splice(parentIndex, 0, { ghostingCode: gotCode, geoObjectType: \"GhostNode\", label: addSiblingLabel, children: [] });\n\n              that.renderTree();\n              this.ghostCode = gotCode;\n            }\n          }\n\n          let siblingGhostBody = d3.select(\".svg-sibling-ghost-body-dz\");\n\n          if (!isDragGroup && isPointWithin(svgMousePoint, getBboxFromSelection(this.parentDz))) {\n            this.parentDz.attr(\"stroke\", \"blue\");\n            this.parentDzText.attr(\"fill\", \"blue\");\n            isChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n            isChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n            siblingGhostBody.attr(\"stroke\", \"black\");\n            this.activeDz = this.parentDz;\n          }\n          else if (isChildDZActive && isPointWithin(svgMousePoint, getBboxFromSelection(this.childDz))) {\n            !isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n            !isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n            this.childDz.attr(\"stroke\", \"blue\");\n            this.childDzText.attr(\"fill\", \"blue\");\n            siblingGhostBody.attr(\"stroke\", \"black\");\n            this.activeDz = this.childDz;\n          }\n          else if (siblingGhostBody.node() != null && isPointWithin(svgMousePoint, getBboxFromSelection(siblingGhostBody))) {\n            !isDragGroup && this.parentDz.attr(\"stroke\", \"black\");\n            !isDragGroup && this.parentDzText.attr(\"fill\", \"black\");\n            isChildDZActive && this.childDz.attr(\"stroke\", \"black\");\n            isChildDZActive && this.childDzText.attr(\"fill\", \"black\");\n            siblingGhostBody.attr(\"stroke\", \"blue\");\n            this.activeDz = \"sibling\";\n          }\n        }\n      }, onDrop: function(dragEl: Element) {\n        if (this.dropEl != null && this.activeDz != null) {\n          let dropGot = this.dropEl.attr(\"data-gotCode\");\n          let dropNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.geoObjectType === dropGot; });\n          let dragGot = d3.select(dragEl).attr(\"id\");\n\n          if (this.activeDz === this.childDz) {\n            if (dropNode.data.children.length == 0) {\n              that.addChild(that.currentHierarchy.code, dropGot, dragGot);\n            }\n            else {\n              let youngest = \"\";\n\n              for (let i = 0; i < dropNode.data.children.length; ++i) {\n                youngest = youngest + dropNode.data.children[i].geoObjectType;\n\n                if (i < dropNode.data.children.length - 1) {\n                  youngest = youngest + \",\";\n                }\n              }\n\n              that.insertBetweenTypes(that.currentHierarchy.code, dropGot, dragGot, youngest);\n            }\n          }\n          else if (this.activeDz === this.parentDz) {\n            if (dropNode.parent == null) {\n              that.insertBetweenTypes(that.currentHierarchy.code, \"ROOT\", dragGot, dropGot);\n            }\n            else {\n              that.insertBetweenTypes(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, dragGot, dropGot);\n            }\n          }\n          else if (this.activeDz === \"sibling\") {\n            that.addChild(that.currentHierarchy.code, dropNode.parent.data.geoObjectType, d3.select(dragEl).attr(\"id\"));\n          }\n        }\n        this.clearDropZones();\n        this.clearGhostNodes(true);\n      }, clearDropZones: function() {\n        if (this.dropEl != null) {\n          this.dropEl.attr(\"stroke\", null);\n        }\n\n        this.dropEl = null;\n        this.activeDz = null;\n\n        this.childDz = null;\n        this.parentDz = null;\n\n        d3.select(\".svg-dropZone-g\").remove();\n\n      }, clearGhostNodes: function(renderTree: boolean) {\n        if (this.ghostCode != null) {\n          let ghostNode = that.primarySvgHierarchy.getD3Tree().find((node) => { return node.data.ghostingCode === this.ghostCode; });\n\n          if (ghostNode != null) {\n            let parentIndex = null;\n            for (let i = 0; i < ghostNode.parent.data.children.length; ++i) {\n              let hn: any = ghostNode.parent.data.children[i];\n\n              if (hn.ghostingCode === this.ghostCode) {\n                parentIndex = i;\n              }\n            };\n\n            if (parentIndex != null) {\n              ghostNode.parent.data.children.splice(parentIndex, 1);\n              if (renderTree) {\n                that.renderTree();\n              }\n            }\n          }\n\n          this.ghostCode = null;\n        }\n      }\n    });\n\n    // GeoObjectTypes and Hierarchies\n    let deltaX: number, deltaY: number, width: number;\n    let sidebarDragHandler = d3.drag()\n      .on(\"start\", function(event: any) {\n        let canDrag = d3.select(this).attr(\"data-candrag\");\n        if (canDrag === \"false\") {\n          return;\n        }\n\n        let rect = this.getBoundingClientRect();\n        deltaX = rect.left - event.sourceEvent.pageX;\n        deltaY = rect.top - event.sourceEvent.pageY;\n        width = rect.width;\n      })\n      .on(\"drag\", function(event: any) {\n        let canDrag = d3.select(this).attr(\"data-candrag\");\n        if (canDrag === \"false\") {\n          return;\n        }\n\n        d3.select(\".g-context-menu\").remove();\n\n        let selThis = d3.select(this);\n\n        // Kind of a dumb hack, but if we hide our drag element for a sec, then we can check what's underneath it.\n        selThis.style(\"display\", \"none\");\n\n        let target = document.elementFromPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        selThis.style(\"display\", null);\n\n        for (let i = 0; i < dropTargets.length; ++i) {\n          dropTargets[i].onDrag(this, target, event);\n        }\n\n        // Move the GeoObjectType with the pointer when they move their mouse\n        selThis\n          .classed(\"dragging\", true)\n          .style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n          .style(\"top\", (event.sourceEvent.pageY + deltaY) + \"px\")\n          .style(\"width\", width + \"px\");\n\n        // If they are moving a GOT group then we have to move the children as well \n        if (selThis.classed(\"got-group-parent\")) {\n          let index = 1;\n          d3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n            let li: any = this;\n            let child = d3.select(li);\n\n            child\n              .classed(\"dragging\", true)\n              .style(\"left\", (event.sourceEvent.pageX + deltaX) + \"px\")\n              .style(\"top\", (event.sourceEvent.pageY + deltaY + (li.getBoundingClientRect().height + 2) * index) + \"px\")\n              .style(\"width\", width + \"px\");\n\n            index++;\n          });\n        }\n      }).on(\"end\", function(event: any) {\n        let selThis = d3.select(this)\n          .classed(\"dragging\", false)\n          .style(\"left\", null)\n          .style(\"top\", null)\n          .style(\"width\", null);\n\n        // If they are moving a GOT group then we have to reset the children as well \n        if (selThis.classed(\"got-group-parent\")) {\n          d3.selectAll('.got-group-child[data-superTypeCode=\"' + selThis.attr(\"id\") + '\"]').each(function() {\n            let child = d3.select(this);\n\n            child\n              .classed(\"dragging\", false)\n              .style(\"left\", null)\n              .style(\"top\", null)\n              .style(\"width\", null);\n          });\n        }\n\n        for (let i = 0; i < dropTargets.length; ++i) {\n          dropTargets[i].onDrop(this, event);\n        }\n      });\n\n    sidebarDragHandler(d3.selectAll(\".sidebar-section-content ul.list-group li.got-li-item\"));\n  }\n\n  private registerSvgHandlers(): void {\n    let hierarchyComponent = this;\n\n    // SVG Drag Handler\n    let deltaX: number, deltaY: number, width: number;\n    let startPoint: any;\n    let svgGot: SvgHierarchyNode;\n    let svgDragHandler = d3.drag()\n      .on(\"start\", function(event: any) {\n        let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n        // let select = d3.select(this);\n\n        svgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n\n\n        // d3.selectAll(\".svg-got-relatedhiers-button\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     return -1\n        //   }\n        //   else {\n        //     return 1\n        //   }\n        // });\n\n        //   d3.selectAll(\".svg-got-body-rect\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     return -1\n        //   }\n        //   else {\n        //     return 1\n        //   }\n        // });\n\n        // d3.selectAll(\".svg-got-header-rect\").sort(function (a: any, b: any) {\n        //   if (a.data.geoObjectType !== event.subject.data.geoObjectType) {\n        //     console.log(\"no --> \",a.data.geoObjectType)\n        //     return -1\n        //   }\n        //   else {\n        //     console.log(\"yes --> \",a.data.geoObjectType)\n        //     return 1\n        //   }\n        // });\n\n        startPoint = svgGot.getPos();\n\n        deltaX = startPoint.x - svgMousePoint.x;\n        deltaY = startPoint.y - svgMousePoint.y;\n      })\n      .on(\"drag\", function(event: any) {\n\n        d3.select(\".g-context-menu\").remove();\n\n        let svgMousePoint = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n        svgGot = hierarchyComponent.primarySvgHierarchy.getNodeByCode(d3.select(this).attr(\"data-gotCode\"));\n\n        svgGot.setPos(svgMousePoint.x + deltaX, svgMousePoint.y + deltaY, true);\n\n      }).on(\"end\", function(event: any) {\n\n        let bbox: string[] = d3.select(\"#svg\").attr(\"viewBox\").split(\" \");\n\n        svgGot.setPos(startPoint.x, startPoint.y, false);\n\n        // if (!isBboxPartiallyWithin(svgGot.getBbox(), { x: parseInt(bbox[0]), y: parseInt(bbox[1]), width: parseInt(bbox[2]), height: parseInt(bbox[3]) })) {\n\n        //   if (hierarchyComponent.isOrganizationRA(hierarchyComponent.currentHierarchy.organizationCode)) {\n        //     let obj = hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n        //     hierarchyComponent.bsModalRef = hierarchyComponent.modalService.show(ConfirmModalComponent, {\n        //       animated: true,\n        //       backdrop: true,\n        //       ignoreBackdropClick: true,\n        //     });\n\n        //     let message = hierarchyComponent.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n        //     message = message.replace(\"{label}\", obj.label.localizedValue);\n\n        //     hierarchyComponent.bsModalRef.content.message = message;\n        //     hierarchyComponent.bsModalRef.content.data = obj.code;\n\n        //     (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onConfirm.subscribe(data => {\n        //       let treeNode = svgGot.getTreeNode();\n        //       let parent = null;\n        //       if (treeNode.parent == null) {\n        //         parent = \"ROOT\";\n        //       }\n        //       else {\n        //         if (treeNode.parent.data.inheritedHierarchyCode != null) {\n        //           parent = \"ROOT\";\n        //         }\n        //         else {\n        //           parent = treeNode.parent.data.geoObjectType;\n        //         }\n        //       }\n\n        //       hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { svgGot.setPos(startPoint.x, startPoint.y, false); });\n        //     });\n\n        //     (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n        //       svgGot.setPos(startPoint.x, startPoint.y, false);\n        //     });\n        //   }\n        //   else {\n        //     svgGot.setPos(startPoint.x, startPoint.y, false);\n        //   }\n\n        // }\n        // else {\n        //   svgGot.setPos(startPoint.x, startPoint.y, false);\n        // }\n\n      });\n\n    svgDragHandler(d3.selectAll(\".svg-got-body-rect[data-inherited=false],.svg-got-label-text[data-inherited=false],.svg-got-header-rect[data-inherited=false]\"));\n  }\n\n  public findGeoObjectTypeByCode(code: string): GeoObjectType {\n    for (let i = 0; i < this.geoObjectTypes.length; ++i) {\n      let got: GeoObjectType = this.geoObjectTypes[i];\n\n      if (got.code === code) {\n        return got;\n      }\n    }\n  }\n\n  public findHierarchyByCode(code: string): HierarchyType {\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let ht: HierarchyType = this.hierarchies[i];\n\n      if (ht.code === code) {\n        return ht;\n      }\n    }\n  }\n  \n  public findOrganizationByCode(code: string): Organization {\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      if (org.code === code) {\n        return org;\n      }\n    }\n  }\n\n  private addChild(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): void {\n    this.hierarchyService.addChildToHierarchy(hierarchyCode, parentGeoObjectTypeCode, childGeoObjectTypeCode).then((ht: HierarchyType) => {\n      let got = this.findGeoObjectTypeByCode(childGeoObjectTypeCode);\n\n      let index = null;\n      for (let i = 0; i < got.relatedHierarchies.length; ++i) {\n        if (got.relatedHierarchies[i] === hierarchyCode) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index == null) {\n        got.relatedHierarchies.push(hierarchyCode);\n      }\n\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  private insertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): void {\n    this.hierarchyService.insertBetweenTypes(hierarchyCode, parentGeoObjectTypeCode, middleGeoObjectTypeCode, youngestGeoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  isRA(): boolean {\n    return this.authService.isRA();\n  }\n\n  isOrganizationRA(orgCode: string, dropZone: boolean = false): boolean {\n    return this.isSRA || this.authService.isOrganizationRA(orgCode);\n  }\n\n  getTypesByOrg(org: Organization): GeoObjectType[] {\n    let orgTypes: GeoObjectType[] = [];\n\n    for (let i = 0; i < this.geoObjectTypes.length; ++i) {\n      let geoObjectType: GeoObjectType = this.geoObjectTypes[i];\n\n      if (geoObjectType.organizationCode === org.code) {\n        orgTypes.push(geoObjectType);\n      }\n    }\n\n    return orgTypes;\n  }\n\n  getHierarchiesByOrg(org: Organization): HierarchyType[] {\n    let orgHierarchies: HierarchyType[] = [];\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchy: HierarchyType = this.hierarchies[i];\n\n      if (hierarchy.organizationCode === org.code) {\n        orgHierarchies.push(hierarchy);\n      }\n    }\n\n    return orgHierarchies;\n  }\n\n  public refreshAll(desiredHierarchy: HierarchyType) {\n\n    // Clear the types to then refresh\n    this.geoObjectTypes = [];\n\n    this.registryService.init().then(response => {\n      this.localizeService.setLocales(response.locales);\n\n      this.setGeoObjectTypes(response.types);\n\n      this.organizations = response.organizations;\n\n      this.organizations.forEach(org => {\n        if (this.isOrganizationRA(org.code)) {\n          this.userOrganization = org.code;\n        }\n      })\n\n      let pos = this.getGeoObjectTypePosition(\"ROOT\");\n      if (pos) {\n        this.geoObjectTypes.splice(pos, 1);\n      }\n\n      this.setHierarchies(response.hierarchies);\n\n      this.setNodesOnInit(desiredHierarchy);\n\n      this.updateViewDatastructures();\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public setGeoObjectTypes(types: GeoObjectType[]): void {\n\n    // Set group parent types\n    this.setAbstractTypes(types);\n\n    // Set GeoObjectTypes that aren't part of a group.\n    types.forEach(type => {\n      if (!type.isAbstract) {\n        if (!type.superTypeCode) {\n          this.geoObjectTypes.push(type);\n        }\n      }\n    });\n\n    // Sort aphabetically because all other types to add will be children in a group.\n    this.geoObjectTypes.sort((a, b) => {\n      if (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n      else if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n      else return 0;\n    });\n\n    // Add group children\n    types.forEach(type => {\n      if (!type.isAbstract) {\n        if (type.superTypeCode && type.superTypeCode.length > 0) {\n\n          for (let i = 0; i < this.geoObjectTypes.length; i++) {\n            let setType = this.geoObjectTypes[i];\n            if (type.superTypeCode === setType.code) {\n              this.geoObjectTypes.splice(i + 1, 0, type);\n            }\n          }\n\n        }\n      }\n    });\n\n  }\n\n  private setAbstractTypes(types: GeoObjectType[]): void {\n    types.forEach(type => {\n      if (type.isAbstract) {\n        this.geoObjectTypes.push(type);\n      }\n    });\n  }\n\n  public updateViewDatastructures(): void {\n    this.hierarchiesByOrg = [];\n    this.typesByOrg = [];\n\n    for (let i = 0; i < this.organizations.length; ++i) {\n      let org: Organization = this.organizations[i];\n\n      this.hierarchiesByOrg.push({ org: org, hierarchies: this.getHierarchiesByOrg(org) });\n      this.typesByOrg.push({ org: org, types: this.getTypesByOrg(org) });\n    }\n\n    this.geoObjectTypes.forEach((got: GeoObjectType) => {\n      got.canDrag = this.calculateCanDrag(got);\n      got.relatedHierarchies = this.calculateRelatedHierarchies(got);\n    });\n\n    this.onFilterChange();\n  }\n\n  public excludeHierarchyTypeDeletes(hierarchy: HierarchyType) {\n    return (this.hierarchyTypeDeleteExclusions.indexOf(hierarchy.code) !== -1);\n  }\n\n  public excludeGeoObjectTypeDeletes(geoObjectType: GeoObjectType) {\n    return (this.geoObjectTypeDeleteExclusions.indexOf(geoObjectType.code) !== -1);\n  }\n\n  private setNodesOnInit(desiredHierarchy: HierarchyType): void {\n\n    let index = -1;\n\n    if (desiredHierarchy != null) {\n      index = this.hierarchies.findIndex(h => h.code === desiredHierarchy.code);\n    }\n    else if (this.hierarchies.length > 0) {\n      index = 0;\n    }\n\n    if (index > -1) {\n      const hierarchy = this.hierarchies[index];\n\n      this.setCurrentHierarchy(hierarchy);\n\n      this.renderTree();\n    }\n  }\n\n  private getHierarchy(hierarchyId: string): HierarchyType {\n    let target: HierarchyType = null;\n    this.hierarchies.forEach(hierarchy => {\n      if (hierarchyId === hierarchy.code) {\n        target = hierarchy;\n      }\n    });\n\n    return target;\n  }\n\n  private setHierarchies(data: HierarchyType[]): void {\n    let hierarchies: HierarchyType[] = [];\n    data.forEach((hierarchyType, index) => {\n\n      if (hierarchyType.rootGeoObjectTypes.length > 0) {\n        hierarchyType.rootGeoObjectTypes.forEach(rootGeoObjectType => {\n          this.processHierarchyNodes(rootGeoObjectType);\n        })\n      }\n\n      hierarchies.push(hierarchyType);\n\n    });\n\n    this.hierarchies = hierarchies\n\n    this.hierarchies.sort((a, b) => {\n      if (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n      else if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n      else return 0;\n    });\n  }\n\n  private processHierarchyNodes(node: HierarchyNode) {\n    if (node != null) {\n      node.label = this.getHierarchyLabel(node.geoObjectType);\n\n      node.children.forEach(child => {\n        this.processHierarchyNodes(child);\n      })\n    }\n  }\n\n  private getHierarchyLabel(geoObjectTypeCode: string): string {\n    let label: string = null;\n    this.geoObjectTypes.forEach(function(gOT) {\n      if (gOT.code === geoObjectTypeCode) {\n        label = gOT.label.localizedValue;\n      }\n    });\n\n    return label;\n  }\n\n  public handleOnMenu(node: any, $event: any): void {\n    if (this.isOrganizationRA(this.currentHierarchy.organizationCode)) {\n      this.contextMenuService.show.next({\n        contextMenu: (node.data.childType !== null ? this.nodeMenuComponent : this.leafMenuComponent),\n        event: $event,\n        item: node,\n      });\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n    else {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n  }\n\n  public treeNodeOnClick(node: any, $event: any): void {\n\n    node.treeModel.setFocusedNode(node);\n\n    if (node.treeModel.isExpanded(node)) {\n      node.collapse();\n    }\n    else {\n      node.treeModel.expandAll();\n    }\n  }\n\n  public hierarchyOnClick(event: any, item: HierarchyType) {\n    this.setCurrentHierarchy(item);\n    this.renderTree();\n  }\n\n  public createHierarchy(): void {\n    this.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n\n    (<CreateHierarchyTypeModalComponent>this.bsModalRef.content).onHierarchytTypeCreate.subscribe(data => {\n\n      this.hierarchies.push(data);\n\n      this.hierarchies.sort((a: HierarchyType, b: HierarchyType) => {\n        var nameA = a.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.label.localizedValue.toUpperCase(); // ignore upper and lowercase\n\n        if (nameA < nameB) {\n          return -1; //nameA comes first\n        }\n\n        if (nameA > nameB) {\n          return 1; // nameB comes first\n        }\n\n        return 0;  // names must be equal\n      });\n\n      this.updateViewDatastructures();\n    });\n  }\n\n  public deleteHierarchyType(obj: HierarchyType): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n    this.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n    this.bsModalRef.content.data = obj.code;\n    this.bsModalRef.content.type = \"DANGER\";\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n    (<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n      this.removeHierarchyType(data);\n    });\n  }\n\n  public editHierarchyType(obj: HierarchyType, readOnly: boolean): void {\n\n    this.bsModalRef = this.modalService.show(CreateHierarchyTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n    this.bsModalRef.content.edit = true;\n    this.bsModalRef.content.readOnly = readOnly;\n    this.bsModalRef.content.hierarchyType = obj;\n    this.bsModalRef.content.onHierarchytTypeCreate.subscribe(data => {\n      let pos = this.getHierarchyTypePosition(data.code);\n\n      this.hierarchies[pos].label = data.label;\n      this.hierarchies[pos].description = data.description;\n      this.hierarchies[pos].progress = data.progress;\n      this.hierarchies[pos].acknowledgement = data.acknowledgement;\n      this.hierarchies[pos].disclaimer = data.disclaimer;\n      this.hierarchies[pos].useConstraints = data.useConstraints;\n      this.hierarchies[pos].accessConstraints = data.accessConstraints;\n      this.hierarchies[pos].contact = data.contact;\n      this.hierarchies[pos].phoneNumber = data.phoneNumber;\n      this.hierarchies[pos].email = data.email;\n\n      this.updateViewDatastructures();\n\n      if (this.currentHierarchy.code === data.code) {\n        this.setCurrentHierarchy(this.hierarchies[pos]);\n\n        this.renderTree();\n      }\n    });\n  }\n\n  setCurrentHierarchy(hierarchyType: HierarchyType): void {\n    this.currentHierarchy = hierarchyType;\n  }\n\n  isPrimaryHierarchy(hierarchy: HierarchyType): boolean {\n    // return hierarchy.isPrimary;\n    return hierarchy.code === this.currentHierarchy.code;\n  }\n\n  public removeHierarchyType(code: string): void {\n    this.hierarchyService.deleteHierarchyType(code).then(response => {\n\n      let pos = this.getHierarchyTypePosition(code);\n      this.hierarchies.splice(pos, 1);\n      this.updateViewDatastructures();\n\n      if (this.hierarchies.length > 0) {\n        this.setCurrentHierarchy(this.hierarchies[0]);\n      }\n      else {\n        this.currentHierarchy = null;\n      }\n\n      this.renderTree();\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public createGeoObjectType(groupSuperType: GeoObjectType, isAbstract: boolean, org: Organization): void {\n    this.bsModalRef = this.modalService.show(CreateGeoObjTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'upload-modal'\n    });\n    this.bsModalRef.content.init(org, this.geoObjectTypes, groupSuperType, isAbstract);\n\n    this.bsModalRef.content.onGeoObjTypeCreate.subscribe(data => {\n\n      data.relatedHierarchies = this.calculateRelatedHierarchies(data);\n\n      this.refreshAll(this.currentHierarchy);\n\n    });\n  }\n\n  public deleteGeoObjectType(obj: GeoObjectType): void {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n    this.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + obj.label.localizedValue + ']';\n    this.bsModalRef.content.data = obj.code;\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n    this.bsModalRef.content.type = ModalTypes.danger;\n\n    (<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n      this.removeGeoObjectType(data);\n    });\n  }\n\n  public removeGeoObjectType(code: string, errCallback: (err: HttpErrorResponse) => void = null): void {\n    this.registryService.deleteGeoObjectType(code).then(response => {\n\n      let pos = this.getGeoObjectTypePosition(code);\n      this.geoObjectTypes.splice(pos, 1);\n      \n      this.refreshAll(this.currentHierarchy);\n\n    }).catch((err: HttpErrorResponse) => {\n      if (errCallback != null) {\n        errCallback(err);\n      }\n      this.error(err);\n    });\n  }\n\n  public manageGeoObjectType(geoObjectType: GeoObjectType, readOnly: boolean): void {\n\n    this.bsModalRef = this.modalService.show(ManageGeoObjectTypeModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n      'class': 'manage-geoobjecttype-modal'\n    });\n\n    geoObjectType.attributes.sort((a, b) => {\n      if (a.label.localizedValue < b.label.localizedValue) return -1;\n      else if (a.label.localizedValue > b.label.localizedValue) return 1;\n      else return 0;\n    });\n    this.bsModalRef.content.geoObjectType = geoObjectType;\n    this.bsModalRef.content.readOnly = readOnly;\n\n    (<ManageGeoObjectTypeModalComponent>this.bsModalRef.content).onGeoObjectTypeSubmitted.subscribe(data => {\n\n      if (data.isAbstract) {\n        this.refreshAll(this.currentHierarchy);\n      }\n      else {\n        const position = this.getGeoObjectTypePosition(data.code);\n\n        if (position !== -1) {\n          this.geoObjectTypes[position] = data;\n        }\n\n        // Update all of the hierarchies for the new geo object type\n        this.updateViewDatastructures();\n\n        this.hierarchies.forEach((hierarchyType: HierarchyType) => {\n          this.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n        });\n\n        // Update the current hierarchy view\n        if (this.currentHierarchy != null) {\n          this.processHierarchyNodes(this.currentHierarchy.rootGeoObjectTypes[0]);\n        }\n\n        this.renderTree();\n      }\n    });\n  }\n\n  private getHierarchyTypePosition(code: string): number {\n    for (let i = 0; i < this.hierarchies.length; i++) {\n      let obj = this.hierarchies[i];\n      if (obj.code === code) {\n        return i;\n      }\n    }\n  }\n\n  private getGeoObjectTypePosition(code: string): number {\n    for (let i = 0; i < this.geoObjectTypes.length; i++) {\n      let obj = this.geoObjectTypes[i];\n      if (obj.code === code) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  public refreshPrimaryHierarchy(hierarchyType: HierarchyType) {\n    this.processHierarchyNodes(hierarchyType.rootGeoObjectTypes[0]);\n\n    for (let i = 0; i < this.hierarchies.length; ++i) {\n      let hierarchy = this.hierarchies[i];\n\n      if (hierarchy.code === hierarchyType.code) {\n        this.hierarchies[i] = hierarchyType;\n\n        this.setCurrentHierarchy(hierarchyType);\n      }\n    }\n\n    this.updateViewDatastructures();\n\n    this.renderTree();\n  }\n\n  public removeFromHierarchy(parentGotCode, gotCode, errCallback: (err: HttpErrorResponse) => void = null): void {\n    const that = this;\n\n    this.hierarchyService.removeFromHierarchy(this.currentHierarchy.code, parentGotCode, gotCode).then(hierarchyType => {\n\n      let got = that.findGeoObjectTypeByCode(gotCode);\n\n      let index = null;\n      for (let i = 0; i < got.relatedHierarchies.length; ++i) {\n        if (got.relatedHierarchies[i] === hierarchyType.code) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index != null) {\n        got.relatedHierarchies.splice(index, 1);\n      }\n\n      that.refreshPrimaryHierarchy(hierarchyType);\n\n    }).catch((err: HttpErrorResponse) => {\n      if (errCallback != null) {\n        errCallback(err);\n      }\n\n      this.error(err);\n    });\n  }\n\n  public isActive(item: HierarchyType) {\n    return this.currentHierarchy === item;\n  };\n\n  onFilterChange(): void {\n    const label = this.filter.toLowerCase();\n\n    this.filteredHierarchiesByOrg = [];\n    this.filteredTypesByOrg = [];\n\n    this.hierarchiesByOrg.forEach((item: { org: Organization, hierarchies: HierarchyType[] }) => {\n\n      const filtered = item.hierarchies.filter((hierarchy: HierarchyType) => {\n        const index = hierarchy.label.localizedValue.toLowerCase().indexOf(label);\n\n        return (index !== -1);\n      });\n\n      this.filteredHierarchiesByOrg.push({ org: item.org, hierarchies: filtered });\n    });\n\n    this.typesByOrg.forEach((item: { org: Organization, types: GeoObjectType[] }) => {\n\n      const filtered = item.types.filter((type: GeoObjectType) => {\n        const index = type.label.localizedValue.toLowerCase().indexOf(label);\n\n        return (index !== -1);\n      });\n\n      this.filteredTypesByOrg.push({ org: item.org, types: filtered });\n    });\n\n    setTimeout(() => { this.registerDragHandlers(); }, 500);\n  }\n\n  handleInheritHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string) {\n    this.hierarchyService.setInheritedHierarchy(hierarchyTypeCode, inheritedHierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  handleUninheritHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string) {\n    this.hierarchyService.removeInheritedHierarchy(hierarchyTypeCode, geoObjectTypeCode).then((ht: HierarchyType) => {\n      this.refreshPrimaryHierarchy(ht);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  public error(err: HttpErrorResponse): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"new-admin-design-main\" style=\"overflow-y:hidden;\">\n\t<cgr-header></cgr-header>\n\n\t<loading-bar></loading-bar>\n\n\t<div id=\"app-container\" class=\"container-fluid\">\n\n\t\t<!--   <h2> <localize key=\"hierarchy.management.title\"></localize> </h2> -->\n\t\t<div class=\"row\">\n\n\t\t\t<nav class=\"col-md-3 hierarchy-sidebar\">\n\n\t\t\t\t<div class=\"row\" style=\"padding: 5px 5px;\">\n\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" #searchInput\n\t\t\t\t\t\t\t[placeholder]=\"'hierarchy.sidebar.searchAll' | localize\" [(ngModel)]=\"filter\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<accordion [isAnimated]=\"true\" [closeOthers]=\"false\">\n\t\t\t\t\t<accordion-group [panelClass]=\"'hierarchy-sidebar-content'\" style=\"border-radius: 0;\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i style=\"margin-right:10px;\" class=\"fa fa-circle\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.geoObjectTypes\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let typeByOrg of filteredTypesByOrg;\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{typeByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || typeByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createGeoObjectType(null, false, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newGeoObjectType\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n                                        \n                                        <button (click)=\"createGeoObjectType(null, true, typeByOrg.org)\" type=\"button\" class=\"btn btn-primary\"\n                                            style=\"margin-bottom:20px;margin-left:10px;min-width:45%;\">\n                                            <localize key=\"hierarchies.add.group.button.label\"></localize>\n                                        </button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li class=\"list-group-item got-li-item\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-superTypeCode]=\"(type.superTypeCode && type.superTypeCode.length > 0) ? type.superTypeCode : null\"\n\t\t\t\t\t\t\t\t\t                  *ngFor=\"let type of typeByOrg.types\" [id]=\"type.code\"\n\t\t\t\t\t\t\t\t\t                  [attr.data-canDrag]=\"type.canDrag\"\n                                    [ngClass]=\"{'got-group-parent' : (type.isAbstract), 'got-group-child' : type.superTypeCode && type.superTypeCode.length > 0}\" >\n\t\t\t\t\t\t\t\t\t\t{{type.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n                                            \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"!excludeGeoObjectTypeDeletes(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteGeoObjectType(type)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\">\n                                            </i>\n                                                \n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\">\n                                            </i>\n                                            \n                                            <i *ngIf=\"(type.isAbstract)\" class=\"fa fa-plus clickable pull-right\"\n                                                (click)=\"createGeoObjectType(type, false, typeByOrg.org)\"\n                                                title=\"add\">\n                                            </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(type.organizationCode)\" style=\"position:absolute;right:10px;background:rgba(255,255,255,.7);top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"manageGeoObjectType(type, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t\t<accordion-group [isOpen]='true' class=\"sidebar-section\" style=\"border-radius: 0;\" [panelClass]=\"'hierarchy-sidebar-content'\">\n\t\t\t\t\t\t<div accordion-heading style=\"padding: 10px 15px;\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.hierarchies\"></localize>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sidebar-section-content\">\n\t\t\t\t\t\t\t<ul *ngFor=\"let hierarchyByOrg of filteredHierarchiesByOrg\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\t<div class=\"got-org-label-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<label>{{hierarchyByOrg.org.label.localizedValue}}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"isSRA || hierarchyByOrg.org.code === userOrganization\" style=\"text-align: center;padding: 10px 0;\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"createHierarchy()\" type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-bottom:20px;min-width:45%;\">\n\t\t\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.sidebar.newHierarchy\"></localize>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<li *ngFor=\"let hierarchy of hierarchyByOrg.hierarchies;\" [id]=\"hierarchy.code\"\n\t\t\t\t\t\t\t\t\t\tclass=\"list-group-item hier-li-item clickable\"\n\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'primary': (currentHierarchy != null && hierarchy.code === currentHierarchy.code), 'active': isActive(hierarchy)}\"\n\t\t\t\t\t\t\t\t\t\t(click)=\"hierarchyOnClick($event,hierarchy)\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-sitemap\"></i> {{hierarchy.label.localizedValue}}\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i *ngIf=\"!excludeHierarchyTypeDeletes(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-times delete-btn clickable pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"deleteHierarchyType(hierarchy)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.delete.helptext' | localize\"></i>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-pencil pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, false)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.edit.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!isOrganizationRA(hierarchy.organizationCode)\" style=\"position:absolute;right:10px;background:inherit;top:50%;transform:translateY(-50%);\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye pull-right clickable\"\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editHierarchyType(hierarchy, true)\"\n\t\t\t\t\t\t\t\t\t\t\t\t[title]=\"'button.view.helptext' | localize\"> </i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</accordion-group>\n\t\t\t\t</accordion>\n\t\t\t</nav>\n\n\t\t\t<div class=\"col-md-9 hierarchy-content\">\n\t\t\t\t<div id=\"overflow-div\">\n\n\t\t\t\t\t<div *ngIf=\"currentHierarchy != null && (currentHierarchy.rootGeoObjectTypes == null || currentHierarchy.rootGeoObjectTypes.length == 0)\">\n                      <div *ngIf=\"isOrganizationRA(currentHierarchy.organizationCode, true)\" id=\"emptyHierarchyDropzone\" class=\"drop-box-container\">\n\t\t\t\t\t\t<div class=\"hierarchy-drop-box\">\n\t\t\t\t\t\t\t<div class=\"inner-drop-box\">\n\t\t\t\t\t\t\t\t<p class=\"upload-text\">\n\t\t\t\t\t\t\t\t\t<localize key=\"hierarchy.content.dragGotToHierarchy\"></localize>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                      </div>\n                      <div *ngIf=\"!isOrganizationRA(currentHierarchy.organizationCode, true)\">\n                          <p class=\"upload-text\">\n                              <localize key=\"hierarchy.content.emptyHierarchy\"></localize>\n                          </p>\n                      </div>\n                    </div>\n\n\t\t\t\t\t<div id=\"svgHolder\">\n\t\t\t\t\t\t<!-- <svg id=\"graph\" style=\"width:1200px; height:750px\"></svg> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"NodeTooltip\" class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-form\">\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.geoObjectTypeOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"geoObjectTypeOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                      <label>\n                        <localize key=\"hierarchy.nodeTooltip.hierarchy\"></localize>\n                      </label>\n                    </div>\n                    <div class=\"holder\">\n                      <label id=\"hierarchyLabel\"></label>\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyCode\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyCodeLabel\"></label>\n                     </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                       <label>\n                         <localize key=\"hierarchy.nodeTooltip.hierarchyOrganization\"></localize>\n                       </label>\n                     </div>\n                     <div class=\"holder\">\n                       <label id=\"hierarchyOrganizationLabel\"></label>\n                     </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\t\t\t\t\t<!-- \n\t      <div class=\"col-md-4\">\n\t        <h3> \n\t            <localize key=\"hierarchy.current.management.panel.title\"></localize> \n\t            <span *ngIf=\"currentHierarchy\"> {{currentHierarchy.label.localizedValue}}</span>\n\t        </h3>\n\t        <hr>\n\t        <div *ngIf=\"nodes.length > 0\" class=\"tree\">\n\t          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n\t        </div>\n\t        <div *ngIf=\"currentHierarchy && nodes.length === 0\">\n\t          <div>\n\t            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"isRA()\" (click)=\"addChildAndRootToHierarchy()\"><localize key=\"hierarchy.current.management.panel.button.add\"></localize></button>\n\t          </div>\n\t        </div>\n\t      </div>\n\t      -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { ManageGeoObjectTypeModalState } from '@registry/model/registry';\r\n\r\n@Injectable()\r\nexport class GeoObjectTypeManagementService {\r\n\r\n\tmodalState: ManageGeoObjectTypeModalState;\r\n\tprivate modalStateChangedSource = new Subject<ManageGeoObjectTypeModalState>();\r\n\tmodalStepChange = this.modalStateChangedSource.asObservable();\r\n\r\n\tconstructor() { }\r\n\r\n\tpublic getModalState(): ManageGeoObjectTypeModalState {\r\n\t\treturn this.modalState;\r\n\t}\r\n\r\n\tpublic setModalState(state: ManageGeoObjectTypeModalState): void {\r\n\t\tthis.modalState = state;\r\n\r\n\t\tthis.modalStateChangedSource.next(this.modalState);\r\n\t}\r\n}\r\n","import { Component, OnInit, AfterViewInit, ElementRef, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { NgControl, Validators, FormBuilder } from '@angular/forms';\n\nimport { GeoObjectType, Attribute } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectAttributeCodeValidator } from '../../../factory/form-validation.factory';\n\n\n\n@Component({\n\tselector: 'attribute-input',\n\ttemplateUrl: './attribute-input.component.html',\n\tstyleUrls: ['./attribute-input.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms'))\n\t\t\t//   transition('show => none', animate('100ms'))\n\t\t])\n\t]\n})\nexport class AttributeInputComponent implements OnInit {\n\n\t@Input() disableCodeField: boolean = false;\n\t@Input() excludeDescription: boolean = false;\n\t@Input() isDecimal: boolean = false;\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute;\n\t@Output() attributeChange = new EventEmitter<Attribute>();\n\tmessage: string = null;\n\n\tstate: string = 'none';\n\n\tconstructor(private hierarchyService: HierarchyService, private cdr: ChangeDetectorRef) {\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnChanges() {\n\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\ttoggleIsUnique(): void {\n\t\tthis.attribute.unique = !this.attribute.unique;\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.attribute.code) {\n\n\t\t\t// if code has a space\n\t\t\tif (this.attribute.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.attribute.label.localeValues[0].value.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal) {\n\t\t\t\tconsole.log(this.attribute);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isDecimal && (this.attribute.precision == null || this.attribute.precision.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isDecimal && (this.attribute.scale == null || this.attribute.scale.toString() == '')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","<div >\n  <div class=\"row-holder\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.code\"></localize>\n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input autofocus type=\"text\" [disabled]=\"disableCodeField\" [(ngModel)]=\"attribute.code\" name=\"code\" required geoObjectAttributeCode>\n      </span>\n    </div>\n  </div>\n\n  <localized-input [(value)]=\"attribute.label\" key=\"data.property.label.label\"></localized-input>\n  <localized-text *ngIf=\"!excludeDescription\" [(value)]=\"attribute.description\" key=\"data.property.label.description\"></localized-text>\n\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.length\"></localize>        \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.precision\" name=\"precision\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n\n  <div class=\"row-holder\" *ngIf=\"isDecimal\">\n    <div class=\"label-holder\">\n      <label>\n        <localize key=\"data.property.label.decimal\"></localize>      \n      </label>\n    </div>\n    <div class=\"holder\">\n      <span class=\"text\">\n        <input type=\"text\" [(ngModel)]=\"attribute.scale\" name=\"scale\" OnlyNumber=\"true\" required>\n      </span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'publish-modal',\n\ttemplateUrl: './publish-modal.component.html',\n\tstyleUrls: []\n})\nexport class PublishModalComponent implements OnInit {\n\tcurrentDate : Date = new Date();\n\tmessage: string = null;\n\t\n\tmaster: any;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonMasterListChange: Subject<MasterList>;\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n    /*\n     * List of geo object types from the system\n     */\n\treadonly: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\tedit: boolean = false;\n\n\tisNew: boolean = false;\n\n\tconstructor(private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef, private authService: AuthService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.onMasterListChange = new Subject();\n\n\t\tif (!this.master || !this.readonly) {\n\t\t\tthis.iService.listGeoObjectTypes(true).then(types => {\n\n\t\t\t\tvar myOrgTypes = [];\n\t\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\t\tconst orgCode = types[i].orgCode;\n\t\t\t\t\tconst typeCode = types[i].superTypeCode != null ? types[i].superTypeCode : types[i].code;\n\n\t\t\t\t\tif (this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.types = myOrgTypes;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.master = {\n\t\t\t\toid: null,\n\t\t\t\ttypeCode: '',\n\t\t\t\tdisplayLabel: this.lService.create(),\n\t\t\t\tcode: '',\n\t\t\t\trepresentativityDate: null,\n\t\t\t\tpublishingStartDate: null,\n\t\t\t\tpublishDate: null,\n\t\t\t\tlistAbstract: '',\n\t\t\t\tprocess: '',\n\t\t\t\tprogress: '',\n\t\t\t\taccessConstraints: '',\n\t\t\t\tuseConstraints: '',\n\t\t\t\tacknowledgements: '',\n\t\t\t\tdisclaimer: '',\n\t\t\t\tcontactName: '',\n\t\t\t\torganization: '',\n\t\t\t\ttelephoneNumber: '',\n\t\t\t\temail: '',\n\t\t\t\thierarchies: [],\n\t\t\t\tsubtypeHierarchies: [],\n\t\t\t\tleaf: false,\n\t\t\t\tfrequency: 'ANNUAL',\n\t\t\t\tisMaster: null,\n\t\t\t\tvisibility: null\n\t\t\t};\n\t\t}\n\t}\n\n\tinit(org: MasterListByOrg): void {\n\t\tthis.master.organization = org.oid;\n\t}\n\n\tgetIsDisabled(event): boolean {\n\t\tlet elClasses = event.target.classList;\n\t\tfor (let i = 0; i < elClasses.length; i++) {\n\t\t\tlet c = elClasses[i];\n\t\t\tif (c === 'disabled') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tonChange(): void {\n\n\t\tif (this.master.typeCode != null && this.master.typeCode.length > 0) {\n\t\t\tthis.iService.getHierarchiesForType(this.master.typeCode, true).then(hierarchies => {\n\t\t\t\tthis.master.hierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.iService.getHierarchiesForSubtypes(this.master.typeCode, false).then(hierarchies => {\n\t\t\t\tthis.master.subtypeHierarchies = hierarchies;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.master.hierarchies = [];\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.createMasterList(this.master).then(response => {\n\n\t\t\tthis.onMasterListChange.next(response);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCancel(): void {\n\t\tthis.bsModalRef.hide()\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n        <h1 *ngIf=\"isNew\">\n            <localize key=\"type.publish.title\"></localize>\n        </h1>\n        <h1 *ngIf=\"!isNew\">\n            {{master.displayLabel.localizedValue}}\n            <localize key=\"type.publish.view.title\"></localize>\n        </h1>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            <div class=\"row-holder\" *ngFor=\"let localeValue of master.displayLabel.localeValues\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.label\"></localize> \n                    <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && !(readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <select id=\"typeCode\" name=\"typeCode\" class=\"select-area\" [(ngModel)]=\"master.typeCode\" (change)=\"onChange($event)\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\" *ngIf=\"types && (readonly || edit)\">\n                <div class=\"label-holder\">\n                    <label for=\"typeCode\"> <localize key=\"io.geoObjectType\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                  <input [(ngModel)]=\"master.typeLabel.localizedValue\" name=\"typeCode\" type=\"text\" class=\"form-control\" disabled />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.code\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.code\" name=\"code\" type=\"text\" class=\"form-control\" [disabled]=\"readonly || edit\" required />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.frequency\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"frequency\" [(ngModel)]=\"master.frequency\" [disabled]=\"readonly\" required #frequency=\"ngModel\">\n                        <option></option>\n                        <option value=\"ANNUAL\"><localize key=\"georegistry.frequency.annual\"></localize></option>\n                        <option value=\"BIANNUAL\"><localize key=\"georegistry.frequency.biannual\"></localize></option>\n                        <option value=\"QUARTER\"><localize key=\"georegistry.frequency.quarter\"></localize></option>\n                        <option value=\"MONTHLY\"><localize key=\"georegistry.frequency.monthly\"></localize></option>\n                    </select>                    \n                    <small *ngIf=\"(edit && frequency.dirty)\" class=\"form-text text-danger\"><localize key=\"masterlist.change.frequency\"></localize></small>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"data.property.label.publishingStartDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <date-field [(value)]=\"master.publishingStartDate\" [classNames]=\"['form-control']\" label=\"\" [inputName]=\"'publishingStartDate'\" [allowFutureDates]=\"false\" [disable]=\"readonly\"></date-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"masterlist.visibility\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select class=\"select-area\" name=\"visibility\" [(ngModel)]=\"master.visibility\" [disabled]=\"readonly\" required>\n                        <option></option>\n                        <option value=\"PUBLIC\"><localize key=\"masterlist.public\"></localize></option>                        \n                        <option value=\"PRIVATE\"><localize key=\"masterlist.private\"></localize></option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.ismaster\"></localize> </label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"row\">\n                        <div class=\"check-block\" style=\"margin: 10px;\">\n\n                            <div (click)=\"getIsDisabled($event) ? null : master.isMaster = !master.isMaster\" name=\"isMaster\" [ngClass]=\"{'chk-checked' : master.isMaster, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\">\n                                <span></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- RepresentativityDate adn publishDate are being removed from the form but not \n            the backend at this point because there's some discussion around the need for these\n            in the future.  - Justin Lewis Feb 27, 2020 -->\n            <!-- <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.representativityDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.representativityDate\" name=\"representativityDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.publishDate\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.publishDate\" name=\"publishDate\" type=\"date\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div> -->\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.listAbstract\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.listAbstract\" name=\"listAbstract\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.process\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.process\" name=\"process\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.progress\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.progress\" name=\"progress\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.accessConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.useConstraints\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.acknowledgements\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.acknowledgements\" name=\"acknowledgements\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.disclaimer\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <textarea [(ngModel)]=\"master.disclaimer\" name=\"disclaimer\" class=\"form-control\" [disabled]=\"readonly\"></textarea>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.contact\"></localize>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.contactName\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.contactName\" name=\"contactName\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.telephoneNumber\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.telephoneNumber\" name=\"telephoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label> <localize key=\"masterlist.email\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder\">\n                    <input [(ngModel)]=\"master.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readonly\" />\n                </div>\n            </div>\n\n            <div class=\"row-holder\" *ngIf=\"master.hierarchies.length > 0\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <localize key=\"masterlist.parents\"></localize>\n                </div>\n            </div>\n\n            <div *ngFor=\"let hierarchy of master.hierarchies\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> {{hierarchy.label}} </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let parent of hierarchy.parents\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : parent.selected = !parent.selected\" [ngClass]=\"{'chk-checked' : parent.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{parent.label}}</label>\n\n                                <!-- <input [(ngModel)]=\"parent.selected\" [name]=\"hierarchy.code + parent.code\" type=\"checkbox\" class=\"form-check\" [disabled]=\"readonly || edit\"/> -->\n                            </div>\n                            <!-- <div class=\"holder\">{{parent.label}}</div> -->\n                            <!-- </div> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"master.subtypeHierarchies.length > 0\">\n                <div class=\"row-holder\">\n                    <div class=\"label-holder\">\n                        <label> <localize key=\"masterlist.subtypeHierarchies\"></localize> </label>\n                    </div>\n                    <div class=\"holder\">\n                        <div class=\"row\" *ngFor=\"let hierarchy of master.subtypeHierarchies\">\n                            <!-- <div class=\"holder\"> -->\n\n                            <div class=\"check-block\" style=\"margin: 10px;\">\n\n                                <!-- To enable add: (click)=\"parent.selected = !parent.selected\" -->\n                                <div (click)=\"getIsDisabled($event) ? null : hierarchy.selected = !hierarchy.selected\" [ngClass]=\"{'chk-checked' : hierarchy.selected, 'disabled' : readonly || edit}\" style=\"margin: 0;\" class=\"jcf-unselectable chk-area\" name=\"unique\">\n                                    <span></span>\n                                </div>\n\n                                <label style=\"margin: 3px 10px;\">{{hierarchy.label}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\"></div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize [key]=\"readonly ? 'io.back' : 'io.cancel'\"></localize>\n                        </button>\n                        <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                            <localize key=\"io.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n\tstate\n} from '@angular/animations';\n\nimport { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\nimport { AuthService } from '@shared/service';\n\nimport { ManageVersionsModalComponent } from './manage-versions-modal.component';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, AttributeTerm, AttributeDecimal, Term, PRESENT } from '@registry/model/registry';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'geoobject-shared-attribute-editor',\n\ttemplateUrl: './geoobject-shared-attribute-editor.component.html',\n\tstyleUrls: ['./geoobject-shared-attribute-editor.css'],\n\tproviders: [DatePipe],\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]),\n\t\t\ttrigger('slide', [\n\t\t\t\tstate('left', style({ left: 0 })),\n      \t\t\tstate('right', style({ left: '100%' })),\n      \t\t\ttransition('* => *', animate(200))\n\t\t\t])\n\t]]\n})\n\n/**\n * This component is shared between:\n * - crtable (create-update-geo-object action detail)\n * - change-request (for submitting change requests)\n * - master list geoobject editing widget\n * \n * Be wary of changing this component for one usecase and breaking other usecases!\n */\nexport class GeoObjectSharedAttributeEditorComponent implements OnInit, OnChanges {\n\t\n\tisContributorOnly: boolean = false;\n\n\tprivate bsModalRef: BsModalRef;\n\t\n\t@Input() animate: boolean = false;\n\n    /*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\t@Input() preGeoObject: GeoObjectOverTime = null;\n\n\t/*\n \t* The state of the GeoObject being modified\n \t*/\n\t@Input() postGeoObject: GeoObjectOverTime = null;\n\n\n\tcalculatedPreObject: any = {};\n\n\tcalculatedPostObject: any = {};\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\t@Input() attributeExcludes: string[] = [];\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() isNew: boolean = false;\n\n\t@Input() isEditingGeometries = false;\n\n\t@Input() isGeometryInlined = false;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Output() onManageVersion = new EventEmitter<Attribute>();\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() customEvent: boolean = false;\n\n\tmodifiedTermOption: Term = null;\n\tcurrentTermOption: Term = null;\n\tisValid: boolean = true;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\"];\n\n\t@ViewChild(\"attributeForm\") attributeForm;\n\n\tconstructor(private modalService: BsModalService, private lService: LocalizationService, private authService: AuthService) {\n\t\tthis.isContributorOnly = this.authService.isContributerOnly()\n\t}\n\n\tngOnInit(): void {\n\t\t\n\t\tif (this.attributeExcludes != null) {\n\t\t\tthis.geoObjectAttributeExcludes.push.apply(this.geoObjectAttributeExcludes, this.attributeExcludes);\n\n\t\t\tif (!this.isGeometryInlined) {\n\t\t\t\tthis.geoObjectAttributeExcludes.push(\"geometry\");\n\t\t\t}\n\t\t}\n\n\t\tlet geomAttr = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeomAttr = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\t\tif (geomAttr == null) {\n\t\t\tlet geometry: Attribute = new Attribute(\"geometry\", \"geometry\", new LocalizedValue(\"Geometry\", null), new LocalizedValue(\"Geometry\", null), true, false, false, true);\n\t\t\tthis.geoObjectType.attributes.push(geometry);\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.attributeForm.statusChanges.subscribe(result => {\n\t\t\tthis.isValid = (result === \"VALID\" || result === \"DISABLED\");\n\n\t\t\tthis.valid.emit(this.isValid);\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\t\n\t\tif (changes['preGeoObject']) {\n\n\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\n\t\t\tif (this.postGeoObject == null) {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.preGeoObject)).attributes); // Object.assign is a shallow copy. We want a deep copy.\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.postGeoObject)).attributes); // We're about to heavily modify this object. We don't want to muck with the original copy they sent us.\n\t\t\t}\n\n\t\t\tthis.calculate();\n\t\t}\n\t\telse if (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\t\n\tsetBoolean(attribute, value): void {\n\t\tattribute.value = value\n\t}\n\n\tcalculate(): void {\n\t\tthis.calculatedPreObject = this.calculateCurrent(this.preGeoObject);\n\t\tthis.calculatedPostObject = this.calculateCurrent(this.postGeoObject);\n\t\t\n\t\tif (this.geometryEditor != null) {\n\t\t\tthis.geometryEditor.reload();\n\t\t}\n\t}\n\n\tcalculateCurrent(goot: GeoObjectOverTime): any {\n\t\tconst object = {};\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\tobject[attr.code] = null;\n\n\t\t\tif (attr.type === 'local') {\n\t\t\t\tobject[attr.code] =\n\t\t\t\t{\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: this.lService.create()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\tlet values = goot.attributes[attr.code].values;\n\n\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: JSON.parse(JSON.stringify(vot.value))\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value[0]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tobject[attr.code] = {\n\t\t\t\t\t\t\t\tstartDate: this.formatDate(vot.startDate),\n\t\t\t\t\t\t\t\tendDate: this.formatDate(vot.endDate),\n\t\t\t\t\t\t\t\tvalue: vot.value\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobject[attr.code] = goot.attributes[attr.code];\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.isChangeOverTime && object[attr.code] == null) {\n\t\t\t\tobject[attr.code] = {\n\t\t\t\t\tstartDate: null,\n\t\t\t\t\tendDate: null,\n\t\t\t\t\tvalue: \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n\thandleChangeCode(e: any): void {\n\t\tthis.postGeoObject.attributes.code = this.calculatedPostObject['code'];\n\t\t\n\t\tthis.onChange.emit(this.postGeoObject);\n\t}\n\n\tonManageAttributeVersions(attribute: Attribute): void {\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(attribute);\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ManageVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\t\n\t\t\tthis.bsModalRef.content.geoObjectOverTime = this.postGeoObject;\n\t\t\tthis.bsModalRef.content.geoObjectType = this.geoObjectType;\n\t\t\tthis.bsModalRef.content.isNewGeoObject = this.isNew;\n\t\t\tthis.bsModalRef.content.attribute = attribute;\n\t\t\tthis.bsModalRef.content.onAttributeVersionChange.subscribe(versionObj => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t\t//this.bsModalRef.content.readonly = !this.isContributorOnly;\n\t\t\tthis.bsModalRef.content.readonly = this.readOnly;\n\t\t}\n\t}\n\n\tonManageGeometryVersions(): void {\n\t\tlet geometry = null;\n\t\tfor (var i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tif (this.geoObjectType.attributes[i].code === 'geometry') {\n\t\t\t\tgeometry = this.geoObjectType.attributes[i];\n\t\t\t}\n\t\t}\n\n\t\tthis.onManageAttributeVersions(geometry);\n\t}\n\n\tisDifferentText(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value.trim() !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tisDifferentValue(attribute: Attribute): boolean {\n\t\tif (this.calculatedPostObject[attribute.code] == null && this.calculatedPreObject[attribute.code] != null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (this.calculatedPostObject[attribute.code].value && this.calculatedPostObject[attribute.code].value !== this.calculatedPreObject[attribute.code].value);\n\t}\n\n\tonSelectPropertyOption(event: any, option: any): void {\n\t\tthis.currentTermOption = JSON.parse(JSON.stringify(this.modifiedTermOption));\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn attrOpts;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisStatusChanged(post, pre) {\n\n\t\tif (pre != null && post == null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (pre == null || post == null || pre.length == 0 || post.length == 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar preCompare = pre;\n\t\tif (Array.isArray(pre)) {\n\t\t\tpreCompare = pre[0];\n\t\t}\n\n\t\tvar postCompare = post;\n\t\tif (Array.isArray(post)) {\n\t\t\tpostCompare = post[0];\n\t\t}\n\n\t\treturn preCompare !== postCompare;\n\t}\n\n\tgetTypeDefinition(key: string): string {\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === key) {\n\t\t\t\treturn attr.type;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn this.isValid;\n\t}\n\n\tpublic getGeoObject(): any {\n\t\treturn this.postGeoObject;\n\t}\n}\n","<form class=\"modal-form\" name=\"geobject-shared-attribute-editor\" #attributeForm=\"ngForm\">\n  <fieldset>\n    <!-- <div class=\"col-md-12\"> -->\n    <div *ngIf=\"preGeoObject\">\n      <div *ngIf=\"!this.isEditingGeometries\" class=\"row\">\n        <!-- <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"change.request.geoobject.update.form.label\"></localize>\n                        </label>\n                    </div> -->\n        <div class=\"col-md-12\">\n          <span class=\"text\"></span>\n          <ul class=\"list-group\">\n            <li class=\"list-group-item\" style=\"text-align:left;border:none;padding:0;\" *ngFor=\"let attr of geoObjectType.attributes | geoObjectAttributeExcludesFilter:geoObjectAttributeExcludes; let i = index\">\n\n              <div class=\"panel panel-default\">\n                <div class=\"panel-heading\">\n                  <h4 *ngIf=\"attr.code !== 'geometry'\" style=\"margin:0;\">\n                    <span *ngIf=\"attr.code === 'code'\"> \n                      <localize key=\"geoobject.code.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code === 'displayLabel'\"> \n                      <localize key=\"geoobject.displayLabel.alternate.label\"></localize>\n                    </span> \n                    <span *ngIf=\"attr.code !== 'code' && attr.code !== 'displayLabel'\"> {{attr.label.localizedValue}} </span> \n                    \n<!--                     <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\" style=\"color:#BABABA;font-style:italic;\">  -->\n<!--                       ( <p style=\"font-size:14px;display:inline-block;\"> -->\n<!--                           {{calculatedPostObject[attr.code].startDate}} -->\n<!--                         </p> -->\n<!--                       - -->\n<!--                       <p *ngIf=\"calculatedPostObject[attr.code].endDate !== 'Present'\" style=\"font-size:14px;display:inline-block;\"> -->\n<!--                         {{calculatedPostObject[attr.code].endDate}} -->\n<!--                       </p> -->\n<!--                       <p *ngIf=\"calculatedPostObject[attr.code].endDate === 'Present'\" style=\"font-size:14px;display:inline-block;\"> -->\n<!--                         <localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize> -->\n<!--                       </p> -->\n<!--                       ) -->\n<!--                     </span> -->\n                  </h4>\n\n                  <h4 *ngIf=\"attr.code === 'geometry'\">\n                    <localize key=\"shared.attributes.attribute.geometry.label\"></localize>\n                    <span *ngIf=\"attr.isChangeOverTime && calculatedPostObject[attr.code] != null && calculatedPostObject[attr.code].startDate != null\"> \n                      ({{calculatedPostObject[attr.code].startDate}} - {{calculatedPostObject[attr.code].endDate}}) \n                    </span>\n                  </h4>\n\n                </div>\n\n                <div class=\"panel-body\">\n\n                  <div *ngIf=\"attr.code === 'code'\">\n                    <input *ngIf=\"postGeoObject\" type=\"text\" [(ngModel)]=\"calculatedPostObject[attr.code]\" (change)=\"handleChangeCode($event)\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" [disabled]=\"!isNew\" required>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'character' && attr.code !== 'code'\">\n                    <div class=\"input-group\">\n                      <input *ngIf=\"postGeoObject\" [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"text\" [ngModel]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon\">\n                        <i class=\"fa fa-pencil clickable\" (click)=\"onManageAttributeVersions(attr)\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentText(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'local'\">\n                    <ul class=\"list-group\" *ngIf=\"calculatedPostObject[attr.code].value != null\">\n                      <li class=\"list-group-item\" *ngFor=\"let localeValue of calculatedPostObject[attr.code].value.localeValues; let i = index\">\n                        <div class=\"panel panel-default\">\n                          <div class=\"panel-heading\">\n                            <h5><convert-key-label [key]=\"localeValue.locale\"></convert-key-label></h5>\n                          </div>\n\n                          <div class=\"panel-body\">\n\n                            <div class=\"input-group\">\n                              <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" [required]=\"localeValue.locale === 'defaultLocale'\" type=\"text\" [ngModel]=\"localeValue.value\" [name]=\"'mod-' + attr.code + '-' + localeValue.locale\" > \n                              <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                              </span>\n                            </div>\n\n\n                            <p class=\"warning-text\" *ngIf=\"!isNew && calculatedPreObject[attr.code].value != null && localeValue.value != null && localeValue.value.trim() !== calculatedPreObject[attr.code].value.localeValues[i].value\">\n                              <localize key=\"change.request.changed.value.prefix\"></localize>\n                              {{calculatedPreObject[attr.code].value.localeValues[i].value}}\n                            </p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'date'\">\n\n                    <div class=\"input-group\">\n                      <input type=\"date\" [ngClass]=\"{'input-group-read-only': readOnly}\" [ngModel]=\"calculatedPostObject[attr.code].value | date:'yyyy-MM-dd'\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\" disabled> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value | date}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'boolean'\">\n                  \n\n                    <div class=\"input-group\" >\n                      <div [ngClass]=\"{'input-group-read-only': readOnly}\" class=\"radio-group\">\n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"calculatedPostObject[attr.code].value === true\" [value]=\"true\" id=\"mod-{{attr.code}}-true\" name=\"mod-{{attr.code}}-true\" disabled > \n                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                        </label> \n                        <label class=\"radio radio-inline\" style=\"margin:0;\"> \n                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"!calculatedPostObject[attr.code].value === false\" [value]=\"false\" id=\"mod-{{attr.code}}-false\" name=\"mod-{{attr.code}}-false\" disabled > \n                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                        </label> \n                      </div>\n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'float'\">\n\n                    <div class=\"input-group\">\n                      <input disabled [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'integer'\">\n                  \n                    <div class=\"input-group\">\n                      <input [ngClass]=\"{'input-group-read-only': readOnly}\" type=\"number\" [(ngModel)]=\"calculatedPostObject[attr.code].value\" disabled id=\"mod-{{attr.code}}\" name=\"mod-{{attr.code}}\"> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isDifferentValue(attr)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'term'\">\n\n                    <div class=\"input-group\">\n                      <select [ngClass]=\"{'input-group-read-only': readOnly}\" id=\"mod-{{attr.code}}\" name=\"mod-term-{{attr.code}}\" class=\"select-area\" style=\"float: none;\" disabled [(ngModel)]=\"calculatedPostObject[attr.code].value\">\n                        <option value=\"\"></option>\n                        <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attr.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                      </select> \n                      <span *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"input-group-addon clickable\" (click)=\"onManageAttributeVersions(attr)\"> \n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                      </span>\n                    </div>\n\n                    <p class=\"warning-text\" *ngIf=\"!isNew && isStatusChanged(calculatedPostObject[attr.code].value, calculatedPreObject[attr.code].value)\">\n                      <localize key=\"change.request.changed.value.prefix\"></localize>\n                      {{calculatedPreObject[attr.code].value}}\n                    </p>\n\n                  </div>\n\n                  <div *ngIf=\"attr.type === 'geometry' && this.isGeometryInlined\">\n<!--                     <geoobject-editor-map  -->\n<!--                       #geometryEditor  -->\n<!--                       [geometryType]=\"this.geoObjectType.geometryType\"  -->\n<!--                       [readOnly]=\"readOnly\" -->\n<!--                       [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\" -->\n<!--                       [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"  -->\n<!--                       [bboxCode]=\"this.preGeoObject.attributes.code\" -->\n<!--                       [bboxType]=\"this.geoObjectType.code\" -->\n<!--                       (onClickEdit)=\"this.onManageGeometryVersions()\"  -->\n<!--                       [bboxDate]=\"this.forDate.toISOString().split('T')[0]\">  -->\n<!--                     </geoobject-editor-map> -->\n\n                      <div class=\"button-holder text-left\" style=\"margin:0;\">\n                        <button type=\"submit\" style=\"width:100%;\" (click)=\"this.onManageGeometryVersions()\" class=\"btn btn-primary\" role=\"button\">\n                          <localize *ngIf=\"!readOnly\" key=\"modal.button.edit\"></localize>\n                          <localize *ngIf=\"readOnly\" key=\"modal.button.view\"></localize>\n                        </button>\n                      </div>\n                  </div>\n\n                  <!--                   <div *ngIf=\"attr.isChangeOverTime && !readOnly\" class=\"button-holder\" > -->\n                  <!--                     <button type=\"submit\" style=\"\" (click)=\"onManageAttributeVersions(attr)\" class=\"btn btn-primary\" role=\"button\"> -->\n                  <!--                       <localize key=\"changeovertime.manageVersions.button.label\"></localize> -->\n                  <!--                     </button> -->\n                  <!--                   </div> -->\n\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div *ngIf=\"this.isEditingGeometries && !this.isGeometryInlined\">\n          <geoobject-editor-map \n            #geometryEditor\n            [geometryType]=\"this.geoObjectType.geometryType\"\n            [readOnly]=\"readOnly\" \n            [preGeometry]=\"calculatedPreObject['geometry'] != null ? calculatedPreObject['geometry'].value : null\"\n            [postGeometry]=\"calculatedPostObject['geometry'] != null ? calculatedPostObject['geometry'].value : null\"\n            [bboxCode]=\"this.preGeoObject.attributes.code\"\n            [bboxType]=\"this.geoObjectType.code\"\n            (onClickEdit)=\"this.onManageGeometryVersions()\"\n            [bboxDate]=\"this.forDate.toISOString().split('T')[0]\"\n          > </geoobject-editor-map>\n      </div>\n    </div>\n    <!-- </div> -->\n  </fieldset>\n</form>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\n@Component( {\n    selector: 'localized-input',\n    templateUrl: './localized-input.component.html',\n    styleUrls: [],\n} )\nexport class LocalizedInputComponent {\n    @Input() public key: string = \"\";\n    @Input() public value: LocalizedValue;\n    @Input() public disabled: boolean = false;\n    @Output() public valueChange = new EventEmitter<LocalizedValue>();\n\n    constructor() { }\n}","<div class=\"row-holder\" *ngFor=\"let localeValue of value.localeValues\">\n  <div class=\"label-holder\">\n    <label>\n      <localize [key]=\"key\"></localize>\n      <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n    </label>\n  </div>\n  <div class=\"holder\">\n    <span class=\"text\">\n      <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [disabled]=\"disabled\" [required]=\"localeValue.locale === 'defaultLocale'\">\n    </span>\n  </div>\n</div>\n","export default class Utils {\n\t\n\t/**\n\t * \n\t * @param arr \n\t */\n\tstatic removeStatuses( arr: any[] ): any[] {\n\t      var newArray = [];\n\t      \n\t      for ( var i = 0; i < arr.length; ++i ) {\n\t        if (! (arr[i].code === \"CGR:Status-New\"\n\t             || arr[i].code === \"CGR:Status-Pending\"))\n\t        {\n\t          newArray.push(arr[i]);\n\t        }\n\t      }\n\t      \n\t      return newArray;\n\t}\n\t\n\n\t/**\n\t * \n\t * @param dateObj \n\t */\n\tstatic formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + ( month < 10 ? \"0\" : \"\" ) + month + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n\tstatic dateRangeOverlaps(a_start: number, a_end: number, b_start: number, b_end: number): boolean {\n\t\tif (a_start <= b_start && b_start <= a_end) return true; // b starts in a\n\t\tif (a_start <= b_end && b_end <= a_end) return true; // b ends in a\n\t\tif (b_start < a_start && a_end < b_end) return true; // a in b\n\t\treturn false;\n\t}\n\t\n\tstatic dateEndBeforeStart(start: number, end: number): boolean {\n\t\tif (end < start) return true; // end date is before start date\n\t\treturn false;\n\t}\n    \n\tstatic hasGap(a_end: number, b_start: number): boolean {\n\t\treturn (b_start - a_end) > (1000 * 60 * 60 * 24);\n\t}\n\t\n}","\nimport { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'simple-edit-control',\n\ttemplateUrl: './simple-edit-control.component.html',\n\tstyleUrls: ['./simple-edit-control.css']\n})\nexport class SimpleEditControl {\n\telRef: ElementRef\n\n\t@Output() editEmitter = new EventEmitter<void>();\n\n\t@Input() visible: boolean = true;\n\t@Input() editSessionEnabled: boolean = false;\n\t@Input() save: boolean = false;\n\n\tconstructor(elRef: ElementRef) {\n\t\tthis.elRef = elRef;\n\t}\n\n\tonAdd(map): any {\n\t\treturn this.elRef.nativeElement;\n\t}\n\n\tonRemove(map): void {\n\t\tthis.elRef.nativeElement.remove();\n\t}\n\n\tonClick(): void {\n\t\tthis.editEmitter.emit();\n\t}\n}\n","<div class=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\n  <button *ngIf=\"editSessionEnabled\" \n    class=\"fa\" \n    [ngClass]=\"{'fa-pencil-square-o':!save, 'fa-save':save}\" \n    style=\"color: black; font-size: 18px;\" \n    [title]=\"'changeovertime.manageVersions.button.label' | localize\" \n    (click)=\"this.onClick();\">\n  </button>\n  <div *ngIf=\"editSessionEnabled\" class=\"map-button-info-hint-wrapper\">\n    <div class=\"map-button-info-hint\">\n      <localize key=\"map.button.info.hint\"></localize>\n    </div>\n    <div class=\"map-button-pointer\"></div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\n\nimport { ChangeRequest, AbstractAction } from '@registry/model/crtable';\nimport { EventService } from '@shared/service';\nimport { GeoObject } from '@registry/model/registry';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ChangeRequestService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\t  getAllActions( requestId: string ): Promise<AbstractAction[]> {\n        let params: HttpParams = new HttpParams();\n\n        if ( requestId != null ) {\n            params = params.set( 'requestId', requestId );\n\t\t}\n\t\t\n//        this.eventService.start();\n\n        return this.http\n            .get<AbstractAction[]>( acp + '/changerequest/getAllActions', { params: params } )\n\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    applyAction( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyAction', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\tapplyActionStatusProperties( action: any ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/applyActionStatusProperties', JSON.stringify( { action: action } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n\t\n    lockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/lockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    unlockAction( actionId: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/changerequest/unlockAction', JSON.stringify( { actionId: actionId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getAllRequests(filter: string): Promise<ChangeRequest[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\n\t\tparams = params.set('filter', filter );\n\n        return this.http.get<ChangeRequest[]>( acp + '/changerequest/get-all-requests', { params: params } )\n            .toPromise();\n    }\n\n    getRequestDetails( requestId: string ): Promise<ChangeRequest> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'requestId', requestId );\n\n        this.eventService.start();\n\n        return this.http.get<ChangeRequest>( acp + '/changerequest/get-request-details', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tconfirmChangeRequest( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/confirm-change-request', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n\t}\n\t\n    execute( requestId: string ): Promise<ChangeRequest> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<ChangeRequest>( acp + '/changerequest/execute-actions', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    delete( requestId: string ): Promise<string> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<string>( acp + '/changerequest/delete', JSON.stringify( { requestId: requestId } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    rejectAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/reject-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    approveAllActions( requestId: string, actions:any ): Promise<AbstractAction[]> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http.post<AbstractAction[]>( acp + '/changerequest/approve-all-actions', JSON.stringify( { requestId: requestId, actions: actions } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    submitChangeRequest( actions: string ): Promise<GeoObject> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'actions', actions )\n\n        this.eventService.start();\n\n        return this.http.post<GeoObject>( acp + '/cgr/submitChangeRequest', {actions: actions}, { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n\tdeleteFile(actionId: string, fileId: string): Promise<ImportConfiguration> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<ImportConfiguration>(acp + '/changerequest/delete-file-action', JSON.stringify({ actionOid: actionId, vfOid: fileId }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { TreeEntity } from '@registry/model/registry';\nimport { EventService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HierarchyService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetHierarchyTypes(types: any): Promise<HierarchyType[]> {\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('types', JSON.stringify(types));\n\n\t\treturn this.http\n\t\t\t.get<HierarchyType[]>(acp + '/cgr/hierarchytype/get-all', { params: params })\n\t\t\t.toPromise();\n\t}\n\n\taddChildToHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/add', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tinsertBetweenTypes(hierarchyCode: string, parentGeoObjectTypeCode: string, middleGeoObjectTypeCode: string, youngestGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/insertBetweenTypes', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, middleGeoObjectTypeCode: middleGeoObjectTypeCode, youngestGeoObjectTypeCode: youngestGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveFromHierarchy(hierarchyCode: string, parentGeoObjectTypeCode: string, childGeoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/remove', JSON.stringify({ hierarchyCode: hierarchyCode, parentGeoObjectTypeCode: parentGeoObjectTypeCode, childGeoObjectTypeCode: childGeoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcreateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/create', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tupdateHierarchyType(htJSON: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/cgr/hierarchytype/update', JSON.stringify({ 'htJSON': htJSON }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tdeleteHierarchyType(code: string): Promise<TreeEntity> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<TreeEntity>(acp + '/cgr/hierarchytype/delete', { 'code': code }, { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise()\n\t}\n\n\tsetInheritedHierarchy(hierarchyTypeCode: string, inheritedHierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/setInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'inheritedHierarchyTypeCode': inheritedHierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremoveInheritedHierarchy(hierarchyTypeCode: string, geoObjectTypeCode: string): Promise<HierarchyType> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<HierarchyType>(acp + '/hierarchy/removeInherited', JSON.stringify({ 'hierarchyTypeCode': hierarchyTypeCode, 'geoObjectTypeCode': geoObjectTypeCode }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ImportConfiguration, Synonym, Location, Term } from '@registry/model/io';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: string;\r\n\r\n@Injectable()\r\nexport class IOService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\timportSpreadsheet(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcancelImport(configuration: ImportConfiguration): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/cancel-import', JSON.stringify({ configuration: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\timportShapefile(configuration: ImportConfiguration): Promise<ImportConfiguration> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<ImportConfiguration>(acp + '/etl/import', JSON.stringify({ json: configuration }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tlistGeoObjectTypes(includeAbstractTypes: boolean): Promise<{ label: string, code: string, orgCode: string, superTypeCode?: string }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('includeAbstractTypes', includeAbstractTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, orgCode: string }[]>(acp + '/cgr/geoobjecttype/list-types', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetTypeAncestors(code: string, hierarchyCode: string, includeInheritedTypes: boolean): Promise<Location[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\tparams = params.set('includeInheritedTypes', includeInheritedTypes.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Location[]>(acp + '/cgr/geoobjecttype/get-ancestors', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForType(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForSubtypes(code: string, includeTypes: boolean): Promise<{ label: string, code: string, parents: { label: string, code: string }[] }[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('includeTypes', includeTypes.toString());\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ label: string, code: string, parents: { label: string, code: string }[] }[]>(acp + '/cgr/geoobjecttype/get-subtype-hierarchies', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, hierarchy: string): Promise<any> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = parent;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectSynonym(entityId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/geo-synonym/createGeoEntitySynonym', JSON.stringify({ entityId: entityId, label: label }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectSynonym(synonymId: string, vOid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geo-synonym/deleteGeoEntitySynonym', JSON.stringify({ synonymId: synonymId, vOid: vOid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetTermSuggestions(mdAttributeId: string, text: string, limit: string): Promise<{ text: string, data: any }[]> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('mdAttributeId', mdAttributeId);\r\n\t\tparams = params.set('text', text);\r\n\t\tparams = params.set('limit', limit);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ text: string, data: any }[]>(acp + '/uploader/getClassifierSuggestions', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTermSynonym(classifierId: string, label: string): Promise<Synonym> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ classifierId: classifierId, label: label });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Synonym>(acp + '/uploader/createClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteTermSynonym(synonymId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet data = JSON.stringify({ synonymId: synonymId });\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/uploader/deleteClassifierSynonym', data, { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tcreateTerm(label: string, code: string, parentTermCode: string): Promise<Term> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = { parentTermCode: parentTermCode, termJSON: { label: label, code: code } };\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tremoveTerm(parentTermCode: string, termCode: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '@shared/service';\n\nimport { AllLocaleInfo } from '@registry/model/localization-manager';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\n    getNewLocaleInfo(): Promise<AllLocaleInfo> {\n        return this.http\n            .get<AllLocaleInfo>( acp + '/localization/getNewLocaleInformation' )\n            .toPromise();\n    }\n\n    installLocale( language: string, country: string, variant: string ): Promise<void> {\n        let params: HttpParams = new HttpParams();\n\n        if ( language != null ) {\n            params = params.set( 'language', language );\n        }\n\n        if ( country != null ) {\n            params = params.set( 'country', country );\n        }\n\n        if ( variant != null ) {\n            params = params.set( 'variant', variant );\n        }\n\n        return this.http\n            .get<void>( acp + '/localization/installLocale', { params: params } )\n            .toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\nimport * as mapboxgl from 'mapbox-gl';\r\n\r\nimport { LocationInformation } from '@registry/model/location-manager';\r\nimport { EventService } from '@shared/service';\r\nimport { GeoObject } from '@registry/model/registry';\n\r\ndeclare var acp: any;\r\n\r\n@Injectable()\r\nexport class MapService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) {\r\n\t\t(mapboxgl as any).accessToken = 'pk.eyJ1IjoidGVycmFmcmFtZSIsImEiOiJjanZxNWE5bWkwazYwNGFtb3loOGxsbjR1In0.ZNEwT-pBnGookEb-BF_jQQ';\r\n\t}\r\n\r\n\r\n\troots(typeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tif (typeCode != null) {\r\n\t\t\tparams = params.set('typeCode', typeCode);\r\n\t\t}\r\n\r\n\t\tif (hierarchyCode != null) {\r\n\t\t\tparams = params.set('hierarchyCode', hierarchyCode);\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<LocationInformation>(acp + '/registrylocation/roots', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n/*\r\n\tselect(code: string, typeCode: string, childTypeCode: string, hierarchyCode: string, date: string): Promise<LocationInformation> {\r\n    let params: HttpParams = new HttpParams();\r\n    params = params.set('code', code);\r\n    params = params.set('typeCode', typeCode);\r\n\r\n    if (date != null) {\r\n      params = params.set('date', date);\r\n    }\r\n\r\n    if (childTypeCode != null) {\r\n      params = params.set('childTypeCode', childTypeCode);\r\n    }\r\n\r\n    if (hierarchyCode != null) {\r\n      params = params.set('hierarchyCode', hierarchyCode);\r\n    }\r\n\r\n    this.eventService.start();\r\n\r\n    return this.http\r\n      .get<LocationInformation>(acp + '/registrylocation/select', { params: params })\r\n      .pipe(finalize(() => {\r\n        this.eventService.complete();\r\n      }))\r\n      .toPromise();\r\n  }\r\n\t*/\r\n\r\n\tsearch(text: string, date: string): Promise<{ type: string, features: GeoObject[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('text', text);\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ type: string, features: GeoObject[] }>(acp + '/registrylocation/search', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport {\n\tGeoObject, GeoObjectType, Attribute, Term, MasterList, MasterListVersion, ParentTreeNode,\r\n\tChildTreeNode, ValueOverTime, GeoObjectOverTime, HierarchyOverTime, ScheduledJob, PaginationPage, MasterListByOrg\n} from '@registry/model/registry';\r\n\r\nimport { HierarchyType } from '@registry/model/hierarchy';\r\nimport { Progress } from '@shared/model/progress';\r\n\r\nimport { Organization, OAuthServer } from '@shared/model/core';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class RegistryService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tinit(): Promise<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }> {\r\n\t\treturn this.http.get<{ types: GeoObjectType[], hierarchies: HierarchyType[], organizations: Organization[], locales: string[] }>(acp + '/cgr/init')\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\t// param types: array of GeoObjectType codes. If empty array then all GeoObjectType objects are returned.\r\n\tgetGeoObjectTypes(types: string[], hierarchies: string[]): Promise<GeoObjectType[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\r\n\t\tif (types != null) {\r\n\t\t\tparams = params.set('types', JSON.stringify(types));\r\n\t\t}\r\n\r\n\t\tif (hierarchies != null) {\r\n\t\t\tparams = params.set('hierarchies', JSON.stringify(hierarchies));\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectType[]>(acp + '/cgr/geoobjecttype/get-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetParentGeoObjects(childId: string, childTypeCode: string, parentTypes: any, recursive: boolean, date: string): Promise<ParentTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('childId', childId)\r\n\t\tparams = params.set('childTypeCode', childTypeCode)\r\n\t\tparams = params.set('parentTypes', JSON.stringify(parentTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams = params.set('date', date);\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ParentTreeNode>(acp + '/cgr/geoobject/get-parent-geoobjects', { params: params })\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetChildGeoObjects(parentId: string, parentTypeCode: string, childrenTypes: any, recursive: boolean): Promise<ChildTreeNode> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('parentId', parentId)\r\n\t\tparams = params.set('parentTypeCode', parentTypeCode)\r\n\t\tparams = params.set('childrenTypes', JSON.stringify(childrenTypes))\r\n\t\tparams = params.set('recursive', JSON.stringify(recursive));\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ChildTreeNode>(acp + '/cgr/geoobject/getchildren', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tnewGeoObjectInstance(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateGeoObjectType(gtJSON: string): Promise<GeoObjectType> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/create', JSON.stringify({ 'gtJSON': gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateGeoObjectType(gtJSON: GeoObjectType): Promise<GeoObjectType> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObjectType>(acp + '/cgr/geoobjecttype/update', JSON.stringify({ \"gtJSON\": gtJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteGeoObjectType(code: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/cgr/geoobjecttype/delete', JSON.stringify({ code: code }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\taddAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/addattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeType(geoObjTypeId: string, attribute: Attribute): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/updateattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeType': attribute }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeType(geoObjTypeId: string, attributeName: string): Promise<boolean> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<boolean>(acp + '/cgr/geoobjecttype/deleteattribute', JSON.stringify({ 'geoObjTypeId': geoObjTypeId, 'attributeName': attributeName }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\taddAttributeTermTypeOption(parentTermCode: string, term: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/addterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': term }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tupdateAttributeTermTypeOption(parentTermCode: string, termJSON: Term): Promise<Term> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Term>(acp + '/cgr/geoobjecttype/updateterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termJSON': termJSON }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteAttributeTermTypeOption(parentTermCode: string, termCode: string): Promise<Attribute> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Attribute>(acp + '/cgr/geoobjecttype/deleteterm', JSON.stringify({ 'parentTermCode': parentTermCode, 'termCode': termCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\t\r\n\tgetGeoObject(id: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('id', id)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBounds(code: string, typeCode: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectBoundsAtDate(code: string, typeCode: string, date: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\t\tparams = params.set('date', date);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/cgr/geoobject-time/get-bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectByCode(code: string, typeCode: string): Promise<GeoObject> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('code', code)\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObject>(acp + '/cgr/geoobject/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetHierarchiesForGeoObject(code: string, typeCode: string): Promise<HierarchyOverTime[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', code);\r\n\t\tparams = params.set('typeCode', typeCode);\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<HierarchyOverTime[]>(acp + '/cgr/geoobject/get-hierarchies-over-time', { params: params })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tgetGeoObjectSuggestions(text: string, type: string, parent: string, parentTypeCode: string, hierarchy: string, date: string): Promise<GeoObject> {\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\tif (parent != null && hierarchy != null) {\r\n\t\t\tparams.parent = parent;\r\n\t\t\tparams.hierarchy = hierarchy;\r\n\t\t}\r\n\t\t\r\n\t\tif (parentTypeCode != null) {\r\n\t\t  params.parentTypeCode = parentTypeCode;\r\n\t\t}\r\n\r\n\t\tif (date != null) {\r\n\t\t\tparams.date = date;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectSuggestionsTypeAhead(text: string, type: string): Promise<GeoObject> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\ttext: text,\r\n\t\t\ttype: type,\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<GeoObject>(acp + '/cgr/geoobject/suggestions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-active', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetCompletedScheduledJobs(pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/etl/get-completed', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetScheduledJob(historyId: string, pageSize: number, pageNumber: number, onlyUnresolved: boolean): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\t\tparams = params.set(\"onlyUnresolved\", onlyUnresolved.toString());\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-import-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetExportDetails(historyId: string, pageSize: number, pageNumber: number): Promise<ScheduledJob> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set(\"historyId\", historyId);\r\n\t\tparams = params.set(\"pageSize\", pageSize.toString());\r\n\t\tparams = params.set(\"pageNumber\", pageNumber.toString())\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ScheduledJob>(acp + '/etl/get-export-details', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tresolveScheduledJob(historyId: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/etl/import-resolve', JSON.stringify({ historyId: historyId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tsubmitValidationResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/validation-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsubmitErrorResolve(config: any): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/etl/error-resolve', JSON.stringify({ config: config }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterLists(): Promise<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], lists: { label: string, oid: string, createDate: string, lastUpdateDate: string }[] }>(acp + '/master-list/list-all', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListHistory(oid: string, versionType: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('versionType', versionType);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetAllMasterListVersions(): Promise<MasterList[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList[]>(acp + '/master-list/list-all-versions', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListVersion(oid: string): Promise<MasterListVersion> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterListVersion>(acp + '/master-list/version', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetLocales(): Promise<string[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<string[]>(acp + '/localization/get-locales', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetGeoObjectOverTime(geoObjectCode: string, geoObjectTypeCode: string): Promise<GeoObjectOverTime> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\t// let params: HttpParams = new HttpParams();\r\n\t\t// params = params.set( 'geoObjectCode', geoObjectCode );\r\n\t\t// params = params.set( 'geoObjectTypeCode', geoObjectTypeCode );\r\n\t\t// params = params.set( 'attributeName', attributeName );\r\n\r\n\t\t// return this.http\r\n\t\t//     .get<ValueOverTime[]>( acp + '/cgr/geoobject/getAttributeVersions', { params: params } )\r\n\t\t//     .toPromise();\r\n\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('code', geoObjectCode);\r\n\t\tparams = params.set('typeCode', geoObjectTypeCode);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<GeoObjectOverTime>(acp + '/cgr/geoobject-time/get-code', { params: params })\r\n\t\t\t.toPromise();\r\n\r\n\t}\r\n\r\n\tnewGeoObjectOverTime(typeCode: string): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/cgr/geoobject-time/newGeoObjectInstance', JSON.stringify({ 'typeCode': typeCode }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n\r\n\r\n\t// getAttributeVersions( geoObjectCode: string, geoObjectTypeCode: string, attributeName: string ): any[] {\r\n\t//     let test =[\r\n\t//         {\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":{\"localeValues\":[\r\n\t//             {\"locale\":\"defaultLocale\",\"value\":\"Anlong Veaeng\"}]}}\r\n\t//     ]\r\n\r\n\t//     // let test = [{\"startDate\":1546300800000,\"endDate\":95649033600000,\"value\":\"test\"}];\r\n\r\n\t//     return test;\r\n\t// }\r\n\r\n\r\n\tsetAttributeVersions(geoObjectCode: string, geoObjectTypeCode: string, attributeName: string, collection: ValueOverTime[]): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\tgeoObjectCode: geoObjectCode,\r\n\t\t\tgeoObjectTypeCode: geoObjectTypeCode,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tcollection: collection\r\n\r\n\t\t} as any;\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<Response>(acp + '/cgr/geoobject/setAttributeVersions', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterList(list: MasterList): Promise<MasterList> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterList>(acp + '/master-list/create', JSON.stringify({ list: list }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcreateMasterListVersion(oid: string, forDate: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/create-version', JSON.stringify({ oid: oid, forDate: forDate }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishMasterListVersions(oid: string): Promise<{ job: string }> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ job: string }>(acp + '/master-list/publish-versions', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdeleteMasterList(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tdeleteMasterListVersion(oid: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/master-list/remove-version', JSON.stringify({ oid: oid }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise()\r\n\t}\r\n\r\n\tpublishMasterList(oid: string): Observable<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\treturn this.http.post<MasterListVersion>(acp + '/master-list/publish', JSON.stringify({ oid: oid }), { headers: headers });\r\n\t}\r\n\r\n\tgetMasterList(oid: string): Promise<MasterList> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<MasterList>(acp + '/master-list/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n    /*\r\n     * Not really part of the RegistryService\r\n     */\r\n\tapplyGeoObjectEdit(parentTreeNode: HierarchyOverTime[], geoObject: GeoObjectOverTime, isNew: boolean, masterListId: string, notes: string): Promise<void> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\t\t\r\n\t\t// Custom attributes of Date type need to be encoded to date/time. The Date picker requires this format to be yyyy-mm-dd.\r\n\t\t// This conversion allows the date picker to work while ensuring the server recieves the correct format. \r\n\t\tfor(const prop in geoObject.attributes) { \r\n\t\t\tlet attr = geoObject.attributes[prop];\r\n \t\t\tif(attr.type === \"date\"){ \r\n\t\t\t\tattr.values.forEach( val => { \r\n\t\t\t\t\tval.value = new Date(val.value).getTime().toString();\r\n\t\t\t\t}) \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet params = { geoObject: geoObject, isNew: isNew, masterListId: masterListId };\r\n\r\n\t\tif (parentTreeNode != null) {\r\n\t\t\tparams['parentTreeNode'] = parentTreeNode;\r\n\t\t}\r\n\t\tif (notes != null) {\r\n\t\t\tparams['notes'] = notes;\r\n\t\t}\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<void>(acp + '/geoobject-editor/apply', JSON.stringify(params), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tdata(oid: string, pageNumber: number, pageSize: number, filter: { attribute: string, value: string }[], sort: { attribute: string, order: string }): Promise<any> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tsort: sort\r\n\t\t} as any;\r\n\r\n\t\tif (pageNumber != null) {\r\n\t\t\tparams.pageNumber = pageNumber;\r\n\t\t}\r\n\r\n\t\tif (pageSize != null) {\r\n\t\t\tparams.pageSize = pageSize;\r\n\t\t}\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/master-list/data', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tvalues(oid: string, value: string, attributeName: string, valueAttribute: string, filter: { attribute: string, value: string }[]): Promise<{ label: string, value: string }[]> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid,\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tvalueAttribute: valueAttribute\r\n\t\t} as any;\r\n\r\n\t\tif (filter.length > 0) {\r\n\t\t\tparams.filter = filter;\r\n\t\t}\r\n\r\n\t\tif (value != null && value.length > 0) {\r\n\t\t\tparams.value = value;\r\n\t\t}\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<{ label: string, value: string }[]>(acp + '/master-list/values', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tpublishShapefile(oid: string): Promise<MasterListVersion> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tlet params = {\r\n\t\t\toid: oid\r\n\t\t} as any;\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<MasterListVersion>(acp + '/master-list/generate-shapefile', JSON.stringify(params), { headers: headers })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tprogress(oid: string): Promise<Progress> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Progress>(acp + '/master-list/progress', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetMasterListsByOrg(): Promise<{ orgs: MasterListByOrg[] }> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<{ locales: string[], orgs: MasterListByOrg[] }>(acp + '/master-list/list-org', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetPublishMasterListJobs(oid: string, pageSize: number, pageNumber: number, sortAttr: string, isAscending: boolean): Promise<PaginationPage> {\r\n\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid);\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('pageNumber', pageNumber.toString());\r\n\t\tparams = params.set('sortAttr', sortAttr);\r\n\t\tparams = params.set('isAscending', isAscending.toString());\r\n\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/master-list/get-publish-jobs', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetDatasetBounds(oid: string): Promise<number[]> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\t\tparams = params.set('oid', oid)\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<number[]>(acp + '/master-list/bounds', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tgetOrganizations(): Promise<Organization[]> {\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<Organization[]>(acp + '/cgr/organizations/get-all')\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\r\n}\r\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { PageResult } from '@shared/model/core'\nimport { SynchronizationConfig, OrgSyncInfo, ExportScheduledJob } from '@registry/model/registry'\nimport { CustomAttributeConfig } from '@registry/model/sync'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SynchronizationConfigService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetPage(pageNumber: number, pageSize: number): Promise<PageResult<SynchronizationConfig>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<SynchronizationConfig>>(acp + '/synchronization-config/get-all', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tget(oid: string): Promise<SynchronizationConfig> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<SynchronizationConfig>(acp + '/synchronization-config/get', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tgetCustomAttrCfg(geoObjectTypeCode: string, externalId: string): Promise<CustomAttributeConfig[]> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalId', externalId);\n    params = params.set('geoObjectTypeCode', geoObjectTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-custom-attr', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\t\n\tgetConfigForES(externalSystemId: string, hierarchyTypeCode: string): Promise<any> {\n\n    let params: HttpParams = new HttpParams();\n    params = params.set('externalSystemId', externalSystemId);\n    params = params.set('hierarchyTypeCode', hierarchyTypeCode);\n\n    this.eventService.start();\n\n    return this.http\n      .get<CustomAttributeConfig[]>(acp + '/synchronization-config/get-config-for-es', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n\tapply(config: SynchronizationConfig): Promise<SynchronizationConfig> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<SynchronizationConfig>(acp + '/synchronization-config/apply', JSON.stringify({ config: config }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tedit(oid: string): Promise<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tlet params = {};\n\n\t\tif (oid != null) {\n\t\t\tparams = { oid: oid };\n\t\t}\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<{ config: SynchronizationConfig, orgs: OrgSyncInfo[] }>(acp + '/synchronization-config/edit', JSON.stringify(params), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremove(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tunlock(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/unlock', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\trun(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/synchronization-config/run', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetJobs(oid:string, pageNumber: number, pageSize: number): Promise<PageResult<ExportScheduledJob>> {\n\n\t\tlet params: HttpParams = new HttpParams();\n\t\tparams = params.set('oid', oid);\n\t\tparams = params.set('pageNumber', pageNumber.toString());\n\t\tparams = params.set('pageSize', pageSize.toString());\n\n//\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExportScheduledJob>>(acp + '/synchronization-config/get-jobs', { params: params })\n//\t\t\t.pipe(finalize(() => {\n//\t\t\t\tthis.eventService.complete();\n//\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\r\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\r\n///\r\n/// This file is part of Runway SDK(tm).\r\n///\r\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\r\n/// it under the terms of the GNU Lesser General Public License as\r\n/// published by the Free Software Foundation, either version 3 of the\r\n/// License, or (at your option) any later version.\r\n///\r\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\r\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\r\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n/// GNU Lesser General Public License for more details.\r\n///\r\n/// You should have received a copy of the GNU Lesser General Public\r\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\r\n///\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PaginationPage } from '@registry/model/registry';\r\nimport { EventService } from '@shared/service';\r\n\r\ndeclare var acp: any;\r\n\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\r\n\r\n\tgetMyTasks(pageNum: number, pageSize: number, whereStatus: string): Promise<PaginationPage> {\r\n\t\tlet params: HttpParams = new HttpParams();\r\n\r\n\t\tparams = params.set('orderBy', 'createDate');\r\n\t\tparams = params.set('pageNum', pageNum.toString());\r\n\t\tparams = params.set('pageSize', pageSize.toString());\r\n\t\tparams = params.set('whereStatus', whereStatus);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<PaginationPage>(acp + '/tasks/get', { params: params })\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tcompleteTask(taskId: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/complete', JSON.stringify({ 'id': taskId }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tsetTaskStatus(taskId: string, status: string): Promise<Response> {\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t});\r\n\r\n\t\tthis.eventService.start();\r\n\r\n\t\treturn this.http\r\n\t\t\t.post<any>(acp + '/tasks/setTaskStatus', JSON.stringify({ 'id': taskId, 'status': status }), { headers: headers })\r\n\t\t\t.pipe(finalize(() => {\r\n\t\t\t\tthis.eventService.complete();\r\n\t\t\t}))\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","import * as d3 from 'd3';\n\nexport function calculateTextWidth(text: string, fontSize: number): number {\n\tlet svg = d3.select(\"#svg\");\n\n\tlet textCalcGroup = svg.append(\"g\").classed(\"g-text-calc\", true);\n\n\tlet textEl = textCalcGroup.append(\"text\")\n\t\t.attr(\"x\", -5000)\n\t\t.attr(\"y\", -5000)\n\t\t.attr(\"font-size\", fontSize)\n\t\t.text(text);\n\n\tlet bbox = textEl.node().getBBox();\n\n\td3.select(\".g-text-calc\").remove();\n\n\treturn bbox.width + 2; // +2 is for padding. I caught this truncating just ever so slightly\n}\n\nexport function svgPoint(x: number, y: number) {\n\tlet svg: any = d3.select(\"#svg\").node();\n\tvar pt = svg.createSVGPoint();\n\n\tpt.x = x;\n\tpt.y = y;\n\n\treturn pt.matrixTransform(svg.getScreenCTM().inverse());\n}\n\nexport function isPointWithin(point: { x: number, y: number }, bbox: { x: number, y: number, width: number, height: number }) {\n\treturn point.y > bbox.y && point.y < (bbox.y + bbox.height) && point.x > bbox.x && point.x < (bbox.x + bbox.width);\n}\n\nexport function isBboxPartiallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t|| isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) || isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function isBboxTotallyWithin(bbox1: { x: number, y: number, width: number, height: number }, bbox2: { x: number, y: number, width: number, height: number }) {\n\treturn isPointWithin({ x: bbox1.x, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y + bbox1.height }, bbox2)\n\t\t&& isPointWithin({ x: bbox1.x + bbox1.width, y: bbox1.y }, bbox2) && isPointWithin({ x: bbox1.x, y: bbox1.y + bbox1.height }, bbox2);\n}\n\nexport function getBboxFromSelection(selection: any) {\n\treturn { x: parseInt(selection.attr(\"x\")), y: parseInt(selection.attr(\"y\")), width: parseInt(selection.attr(\"width\")), height: parseInt(selection.attr(\"height\")) };\n}\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\n@Component( {\n    selector: 'attributes-page',\n    templateUrl: './attributes-page.component.html',\n    styleUrls: []\n} )\nexport class AttributesPageComponent {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor() {\n    }\n\n    onNext(): void {\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.attributes.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.attributes.description\"></localize>\n    </p>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <!--\n    <h3 class=\"mb-3\">\n      <localize key=\"shapefile.modal.heading\"></localize>\n      {{configuration.sheet.name}}\n    </h3>\n    -->\n    <form class=\"modal-form\" #form=\"ngForm\">\n      \n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.hierarchy\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"configuration.hierarchy\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of configuration.hierarchies\" value={{hierarchy.code}}>{{hierarchy.label}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div class=\"form-group\" *ngFor=\"let attribute of configuration.type.attributes\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">{{attribute.label.localizedValue}}</label>\n          </div>\n          <div class=\"holder\">\n            <select [name]=\"attribute.code + (attribute.locale != null ? attribute.locale : '')\" class=\"select-area\"\n              [(ngModel)]=\"attribute.target\" [required]=\"attribute.required\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes[attribute.baseType]\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div *ngIf=\"configuration.hasPostalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.postalCode\"></localize>\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <div class=\"check-block\">\n              <div (click)=\"configuration.postalCode = !configuration.postalCode\"\n                [ngClass]=\"{'chk-checked' : configuration.postalCode}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\"\n                name=\"postalCode\">\n                <span></span>\n              </div>\n            </div>\n            <!-- <input type=\"checkbox\" class=\"form-check-input\" name=\"postalCode\" [(ngModel)]=\"configuration.postalCode\"> -->\n          </div>\n        </div>\n      </div>\n      \n      <div *ngIf=\"configuration.isExternal\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.modal.external\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"externalId\" class=\"select-area\"\n              [(ngModel)]=\"configuration.externalIdAttributeTarget\" [required]=\"true\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n        \n        <div *ngIf=\"configuration.externalSystem.type === 'RevealExternalSystem' && configuration.formatType === 'EXCEL'\" class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\"><localize key=\"io.import.revealGeometryAttribute\"></localize></label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"revealGeometryColumn\" class=\"select-area\"\n              [(ngModel)]=\"configuration.revealGeometryColumn\" [required]=\"false\">\n              <option></option>\n              <option *ngFor=\"let attr of configuration.sheet.attributes['text']\" value={{attr}}>{{attr}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <!--\n      <div *ngIf=\"!configuration.hasPostalCode || !configuration.postalCode\" class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label class=\"\">\n              <localize key=\"io.modal.parentLookupType\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <select name=\"parentLookupType\" class=\"select-area\" [(ngModel)]=\"configuration.parentLookupType\" required>\n              <option></option>\n              <option value=\"ALL\">\n                <localize key=\"io.modal.all\"></localize>\n              </option>\n              <option value=\"CODE\">\n                <localize key=\"io.modal.code\"></localize>\n              </option>\n              <option value=\"EXTERNAL\">\n                <localize key=\"io.modal.external\"></localize>\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      -->\n\n      <div class=\"form-group\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize *ngIf=\"!configuration.postalCode\" key=\"io.next\"></localize>\n                <localize *ngIf=\"configuration.postalCode\" key=\"io.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter, Directive } from '@angular/core';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-page',\n    templateUrl: './location-page.component.html',\n    styleUrls: []\n} )\nexport class LocationPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() configurationChange = new EventEmitter<ImportConfiguration>();\n    @Output() stateChange = new EventEmitter<string>();\n\n    constructor( private service: IOService ) { }\n\n    ngOnInit(): void {\n        this.service.getTypeAncestors( this.configuration.type.code, this.configuration.hierarchy, true ).then( locations => {\n            this.configuration.locations = locations;\n        } );\n    }\n\n    onNext(): void {\n        // Map the universals\n        this.configurationChange.emit( this.configuration );\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onBack(): void {\n        this.stateChange.emit( 'BACK' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<form class=\"modal-form\">\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.location.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.location.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <form #form=\"ngForm\">\n      \n      <div class=\"form-group\" *ngFor=\"let location of configuration.locations; let i = index;\">\n        <div class=\"row-holder\">\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\"><label> {{location.label}} </label></div>\n            <div class=\"panel-body\">\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.source\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select class=\"select-area\" [(ngModel)]=\"location.target\" [name]=\"i + '-location'\">\n                  <option value=\"\"></option>\n                  <option *ngFor=\"let attr of configuration.sheet.attributes.text\" [value]=\"attr\">{{attr}}</option>\n                </select>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"io.import.modal.parent.matchStrategy\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <select [name]=\"i + '-matchStrategy'\" class=\"select-area\" [(ngModel)]=\"location.matchStrategy\" [required]=\"location.target != null && location.target !== ''\">\n\t\t\t            <option></option>\n\t\t\t            <option value=\"ALL\"><localize key=\"io.modal.all\"></localize></option>\n\t\t\t            <option value=\"CODE\"><localize key=\"io.modal.code\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal\" value=\"EXTERNAL\"><localize key=\"io.modal.external\"></localize></option>\n\t\t\t            <option *ngIf=\"configuration.isExternal && configuration.externalSystem.type === 'DHIS2ExternalSystem'\" value=\"DHIS2_PATH\"><localize key=\"io.modal.dhis2path\"></localize></option>\n\t\t\t          </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <div class=\"row-holder\">\n          <div class=\"button-holder\">\n            <button type=\"submit\" (click)=\"onBack()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.back\"></localize>\n            </button>\n            <button type=\"btn\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                <localize key=\"io.cancel\"></localize>\n            </button>\n            <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"form.invalid\">\n                <localize key=\"io.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n    </form>\n  </div>\n</form>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n\n    selector: 'location-problem-page',\n    templateUrl: './location-problem-page.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n\n            if ( !this.configuration.locationProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    handleError( err: any ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.locationProblems.length; i++ ) {\n            const problem = this.configuration.locationProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNOREATLOCATION' ) {\n                const value = ( problem.parent != null ? problem.parent + \"-\" + problem.label : problem.label );\n                const exclusion = { code: '##PARENT##', value: value };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.locationProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.locationProblem.description\"></localize>\n    </p>\n  </div>\n  <div >\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.locationContext\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownLocation\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.locationProblems; let i = index;\">\n        <location-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></location-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\" style=\"margin-top: 20px;\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize *ngIf=\"configuration.termProblems != null\" key=\"io.next\"></localize>\n              <localize *ngIf=\"configuration.termProblems == null\" key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\n\n@Component( {\n\n    selector: 'term-problem-page',\n    templateUrl: './term-problem-page.component.html',\n    styleUrls: []\n} )\nexport class TermProblemPageComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Output() stateChange = new EventEmitter<string>();\n    message: string = null;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hasProblems(): boolean {\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n\n            if ( !this.configuration.termProblems[i].resolved ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    onNext(): void {\n        if ( this.configuration.exclusions == null ) {\n            this.configuration.exclusions = [];\n        }\n\n        for ( let i = 0; i < this.configuration.termProblems.length; i++ ) {\n            const problem = this.configuration.termProblems[i];\n\n            if ( problem.resolved && problem.action.name == 'IGNORE' ) {\n                const exclusion = { code: problem.attributeCode, value: problem.label };\n\n                this.configuration.exclusions.push( exclusion );\n            }\n        }\n\n        this.stateChange.emit( 'NEXT' );\n    }\n\n    onCancel(): void {\n        this.stateChange.emit( 'CANCEL' );\n    }\n}\n","<div>\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"io.termProblem.title\"></localize>\n    </h2>\n    <p class=\"lead\">\n      <localize key=\"io.termProblem.description\"></localize>\n    </p>\n  </div>\n  <div class=\"col-md-12 order-md-1\">\n    <div *ngIf=\"hasProblems()\" class=\"row\">\n      <div class=\"alert alert-danger\">\n        <localize key=\"dataUploader.existingProblems\"></localize>\n      </div>\n    </div>\n    <div *ngIf=\"message != null\" class=\"row\">\n      <div class=\"alert alert-danger\">{{message}}</div>\n    </div>\n    <form #form=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.categoryAttribute\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.unknownCategory\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-4\">\n          <label>\n            <localize key=\"dataUploader.synonymn\"></localize>\n          </label>\n        </div>\n        <div class=\"col-sm-2\">\n          <label>\n            <localize key=\"dataUploader.actions\"></localize>\n          </label>\n        </div>\n      </div>\n      <div *ngFor=\"let problem of configuration.termProblems; let i = index;\">\n        <term-problem [problem]=\"problem\" [configuration]=\"configuration\" [index]=\"i\" (onError)=\"handleError($event)\"></term-problem>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 text-right\">\n          <button type=\"button\" (click)=\"onCancel()\" class=\"btn\" role=\"button\">\n            <span>\n              <localize key=\"io.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" (click)=\"onNext()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"hasProblems()\">\n            <span>\n              <localize key=\"io.ok\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { \n\t\tComponent, \n\t\tOnInit, \n\t\tInput, \n\t\tOutput, \n\t\tChangeDetectorRef, \n\t\tEventEmitter,\n\t\tViewChildren, \n\t\tQueryList } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, AttributeTerm, PRESENT } from '@registry/model/registry';\n\nimport{ DateFieldComponent } from '../../../shared/component/form-fields/date-field/date-field.component';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\n\n@Component({\n\tselector: 'manage-versions',\n\ttemplateUrl: './manage-versions.component.html',\n\tstyleUrls: ['./manage-versions.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms',\n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsComponent implements OnInit {\n\t\n\t@ViewChildren('dateFieldComponents') dateFieldComponentsArray:QueryList<DateFieldComponent>;\n\t\n\tmessage: string = null;\n\n\tcurrentDate: Date = new Date();\n\n\tisValid: boolean = true;\n\t@Output() isValidChange = new EventEmitter<boolean>()\n\t\n\t@Input() readonly: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Input() attribute: Attribute\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\teditingGeometry: number = -1;\n\n\thasDuplicateDate: boolean = false;\n\n\tconflict: string;\n\thasConflict: boolean = false;\n\thasGap: boolean = false;\n\n\toriginalAttributeState: Attribute;\n\n\tconstructor(private service: RegistryService, private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (this.attribute.code === 'geometry' && this.geoObjectOverTime.attributes[this.attribute.code].values.length === 1) {\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.editingGeometry = 0;\n\t\t\t}, 0);\n\t\t}\n\t}\n\t\n\tgeometryChange(vAttribute, event): void {\n\t\tvAttribute.value = event;\n\t}\n\t\n\tcheckDateFieldValidity(): boolean {\n\t\tlet dateFields = this.dateFieldComponentsArray.toArray();\n\t\t\n\t\tfor(let i=0; i<dateFields.length; i++){\n\t\t\tlet field = dateFields[i];\n\t\t\tif(!field.valid){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tonDateChange(): any {\n\t\tthis.hasConflict = false;\n\t\tthis.hasGap = false;\n\n\t\tlet vAttributes = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\tthis.isValid = this.checkDateFieldValidity();\n\n\t\t// check ranges\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tconst h1 = vAttributes[j];\n\t\t\th1.conflictMessage = [];\n\n\t\t\tif (!(h1.startDate == null || h1.startDate === '') && !(h1.endDate == null || h1.endDate === '')) {\n\t\t\t\tlet s1: any = new Date(h1.startDate);\n\t\t\t\tlet e1: any = new Date(h1.endDate);\n\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\"message\": this.lService.decode(\"manage.versions.startdate.later.enddate.message\")\n\t\t\t\t\t});\n\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < vAttributes.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\tconst h2 = vAttributes[i];\n\t\t\t\t\t\tif (!(h2.startDate == null || h2.startDate === '') && !(h2.endDate == null || h2.endDate === '')) {\n\t\t\t\t\t\t\tlet s2: any = new Date(h2.startDate);\n\t\t\t\t\t\t\tlet e2: any = new Date(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\t\t\t\"message\":this.lService.decode(\"manage.versions.overlap.message\")\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sort(vAttributes);\n\n\t\t// check gaps\n\t\tlet current = null;\n\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tlet next = vAttributes[j];\n\n\t\t\tif (j > 0) {\n\t\t\t\tif (!(current.startDate == null || current.startDate === '') && !(current.endDate == null || current.endDate === '')) {\n\t\t\t\t\tlet e1: any = new Date(current.endDate);\n\n\t\t\t\t\tif (!(next.startDate == null || next.startDate === '') && !(next.endDate == null || next.endDate === '')) {\n\t\t\t\t\t\tlet s2: any = new Date(next.startDate);\n\n\t\t\t\t\t\tif (Utils.hasGap(e1.getTime(), s2.getTime())) {\n\t\t\t\t\t\t\tnext.conflictMessage.push({\n\t\t\t\t\t\t\t\t\"type\": \"WARNING\",\t\n\t\t\t\t\t\t\t\t\"message\":this.lService.decode(\"manage.versions.gap.message\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrent.conflictMessage.push({\n\t\t\t\t\t\t\t\t\"type\": \"WARNING\",\t\n\t\t\t\t\t\t\t\t\"message\":this.lService.decode(\"manage.versions.gap.message\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrent = next;\n\t\t}\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes[this.attribute.code].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tif (this.attribute.type === \"local\") {\n\t\t\t//   vot.value = {\"localizedValue\":null,\"localeValues\":[{\"locale\":\"defaultLocale\",\"value\":null},{\"locale\":\"km_KH\",\"value\":null}]};\n\t\t\tvot.value = this.lService.create();\n\t\t}\n\t\telse if (this.attribute.type === 'geometry') {\n\n\t\t\tif (votArr.length > 0) {\n\t\t\t\tif (this.editingGeometry != -1 && this.editingGeometry != null) {\n\t\t\t\t\tvot.value = votArr[this.editingGeometry].value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvot.value = votArr[0].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\t\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\t\t\tvot.value.type = \"Polygon\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\t\t\tvot.value.type = \"Point\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tvot.value.type = \"MultiPoint\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\t\t\tvot.value.type = \"Line\";\n\t\t\t\t}\n\t\t\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\t\t\tvot.value.type = \"MultiLine\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.attribute.type === 'term') {\n\t\t\tvar terms = this.getGeoObjectTypeTermAttributeOptions(this.attribute.code);\n\n\t\t\tif (terms && terms.length > 0) {\n\t\t\t\tvot.value = terms[0].code;\n\t\t\t}\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tif (this.attribute.code === 'geometry') {\n\t\t\tthis.editingGeometry = votArr.length - 1;\n\t\t}\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\teditGeometry(index: number) {\n\t\tthis.editingGeometry = index;\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tgetGeoObjectTypeTermAttributeOptions(termAttributeCode: string) {\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\tlet attr: any = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.type === \"term\" && attr.code === termAttributeCode) {\n\n\t\t\t\tattr = <AttributeTerm>attr;\n\t\t\t\tlet attrOpts = attr.rootTerm.children;\n\n\t\t\t\t// only remove status of the required status type\n\t\t\t\tif (attrOpts.length > 0) {\n\t\t\t\t\tif (attr.code === \"status\") {\n\t\t\t\t\t\treturn Utils.removeStatuses(attrOpts);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn attrOpts;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes[this.attribute.code];\n\n\t\tlet position = -1;\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tposition = i\n\t\t\t}\n\t\t}\n\n\t\tif (position > -1) {\n\t\t\tval.values.splice(position, 1);\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t}\n\n\tisChangeOverTime(attr: Attribute): boolean {\n\t\tlet isChangeOverTime = false;\n\n\t\tthis.geoObjectType.attributes.forEach(attribute => {\n\t\t\tif (this.attribute.code === attr.code) {\n\t\t\t\tisChangeOverTime = attr.isChangeOverTime\n\t\t\t}\n\t\t})\n\n\t\treturn isChangeOverTime;\n\t}\n\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n//\t\tthis.isValidChange.emit(this.isValid);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n            <h3>{{attribute.label.localizedValue}}</h3>\n\n            <div>\n              <div>\n                <ul class=\"list-group\">\n                  <!-- <li class=\"list-group-item\" style=\"text-align:left;\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\"> -->\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n\n                    <div *ngIf=\"attribute.type !== 'geometry'\">\n                    \n                      <table class=\"table table-striped\">\n                      \n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type === 'local'\" >\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                          \n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'ERROR', 'warning-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'WARNING'}\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\" *ngFor=\"let loc of vAttribute.value.localeValues; let idx = index;\">\n                                  <td colspan=\"2\">\n                                    <h5><convert-key-label [key]=\"loc.locale\"></convert-key-label></h5>\n                                    \n                                    <input type=\"text\" class=\"form-control\" [name]=\"'loc-val-' + i + '-' + idx\" [(ngModel)]=\"loc.value\" (ngModelChange)=\"loc.value = $event\" [required]=\"loc.locale === 'defaultLocale'\">\n                                    \n                                    <div class=\"form-input-validation-error-message-wrapper\">\n                                      <p *ngIf=\"loc.locale === 'defaultLocale' && !loc.value\" class=\"error-message\">\n                                        <localize key=\"manage.versions.value.required.message\"></localize>\n                                      </p>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                                \n                                    <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\"  ></date-field>\n                                    \n                                  </td>\n                                  <td>\n                                    <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                  \n                                      <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" \n                                          [required]=\"true\" [placement]=\"'bottom'\" ></date-field>\n                        \n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr *ngIf=\"vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0\">\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\" >\n                                    {{msg.message}}\n                                  </p>\n                                </tr>\n                              </table>\n                            </td>\n                            \n                            <td (click)=\"remove(vAttribute)\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\">\n                              <i class=\"fa fa-times\" ></i>\n                            </td>\n                          </tr>\n                        </tbody>\n\n\n                        <tbody class=\"attribute-element-wrapper\" *ngIf=\"attribute.type !== 'local'\">\n                          <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes[attribute.code].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n\n                          <tr @fadeInOut *ngFor=\"let vAttribute of geoObjectOverTime.attributes[attribute.code].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'ERROR', 'warning-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'WARNING'}\">\n                            <td>\n                              <table>\n                                <tr class=\"attribute-value-row\">\n                                  <td colspan=\"2\">\n                                    <div *ngIf=\"attribute.type === 'term'\">\n                                      <select id=\"mod-{{attribute.code}}\" [name]=\"'mod-term-' + i + '-' + attribute.code\" class=\"select-area\" [(ngModel)]=\"vAttribute.value\">\n                                          <option value=\"\"></option>\n                                          <option *ngFor=\"let option of getGeoObjectTypeTermAttributeOptions(attribute.code)\" [value]=\"option.code\">{{option.label.localizedValue}}</option>\n                                      </select>\n                                    </div>\n                                    <div *ngIf=\"attribute.type === 'character'\">\n                                      <input type=\"text\" class=\"form-control\" [name]=\"'char-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'date'\">\n                                      <date-field [(value)]=\"vAttribute.value\" label=\"\" [inputName]=\"'date-val-' + i\" [allowInfinity]=\"false\" [allowFutureDates]=\"true\" \n                                          [required]=\"true\" [placement]=\"'right'\" [(valid)]=\"isValid\" ></date-field>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'integer' || attribute.type === 'float'\">\n                                      <input type=\"number\" class=\"form-control\" [name]=\"'int-val-' + i\" [(ngModel)]=\"vAttribute.value\" (ngModelChange)=\"vAttribute.value = $event\" required>\n                                    </div>\n                                    \n                                    <div *ngIf=\"attribute.type === 'boolean'\">\n                                        <label class=\"radio radio-inline\" style=\"padding-left:0;\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === true\" [value]=\"true\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-true\" name=\"mod-{{i}}-true\"> \n                                          <span><localize key=\"change.request.boolean.option.true\"></localize></span>\n                                        </label> \n                                        <label class=\"radio radio-inline\"> \n                                          <input class=\"inline-radio-input\" type=\"radio\" [checked]=\"vAttribute.value === false\" [value]=\"false\" [(ngModel)]=\"vAttribute.value\" id=\"mod-{{i}}-false\" name=\"mod-{{i}}-false\"> \n                                          <span><localize key=\"change.request.boolean.option.false\"></localize></span>\n                                        </label>\n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr class=\"attribute-date-input-row\">\n                                  <td>\n                                    <h5>\n                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                    </h5>\n                            \n                                    <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\"  ></date-field>\n                                  </td>\n                                  <td>\n                                    <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                      \n                                      <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" \n                                          [required]=\"true\" [placement]=\"'bottom'\" ></date-field>\n                        \n                                    </div>\n                                  </td>\n                                </tr>\n                                <tr *ngIf=\"vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0\">\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\">\n                                    {{msg.message}}\n                                  </p>\n                                </tr>                                \n                              </table>\n                            </td>\n                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                              <i class=\"fa fa-times\"></i>\n                            </td>\n                          </tr>\n                        </tbody>\n                        \n                      </table>\n                    </div>\n\n                    <div *ngIf=\"attribute.type === 'geometry'\">\n                    \n                      <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\"><localize key=\"changeovertime.manageVersions.no.versions.message\"></localize> </p>\n                      \n                      <table class=\"table table-striped\">\n                        <thead style=\"font-size: 14px;\">\n                          <th style=\"width: 60%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.value\"></localize></th>\n                          <th style=\"width: 20%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize></th>\n                          <th style=\"width: 10%;\"><localize key=\"changeovertime.manageVersions.tableHeader.label.actions\"></localize></th>\n                        </thead>\n                        <tbody style=\"text-align: center;\">\n                          <tr @fadeInOut [ngClass]=\"{'active' : i === editingGeometry}\" *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\">\n                            <td style=\"vertical-align: middle;\">\n                              <button *ngIf=\"this.editingGeometry != i\" class=\"btn\" (click)=\"editGeometry(i)\" role=\"button\">\n                                <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                              </button> \n                              <geoobject-editor-map *ngIf=\"this.editingGeometry === i\" #geometryEditor [geometryType]=\"this.geoObjectType.geometryType\" \n                                  (geometryChange)=\"this.geometryChange(vAttribute, $event);\" [readOnly]=\"!geoObjectType.isGeometryEditable && readonly\" [postGeometry]=\"vAttribute.value\" \n                                  [bboxCode]=\"this.geoObjectOverTime.attributes.code\" [bboxType]=\"this.geoObjectType.code\" [bboxDate]=\"vAttribute.startDate\">\n                              </geoobject-editor-map>\n                            </td>\n                            <td style=\"vertical-align: middle;\">\n                              <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate-' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\" [disable]=\"readonly\" ></date-field>\n                            </td>\n                            <td style=\"vertical-align: middle;\">\n\n                              <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" \n                                  [required]=\"true\" [disable]=\"readonly\" [placement]=\"'bottom'\" ></date-field>\n                        \n                            </td>\n                            <td style=\"vertical-align: middle;\"><i class=\"fa fa-times delete-btn\" [ngClass]=\"{'clickable' : !readonly, 'disabled' : readonly}\" (click)=\"!readonly && remove(vAttribute)\"></i></td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                  </li>\n\n                  <li *ngIf=\"!readonly\" class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> \n                      <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"modal.button.close\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || !versionsform.valid || hasConflict\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, ViewChild, SimpleChanges, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { RegistryService, MapService} from '@registry/service';\n\nimport { Map, LngLatBounds, NavigationControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\ndeclare var acp: string;\n\n\n@Component({\n\tselector: 'geoobject-editor-map[geometryType]',\n\ttemplateUrl: './geoobject-editor-map.component.html',\n\tstyleUrls: ['./geoobject-editor-map.component.css']\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorMapComponent implements OnInit, OnDestroy {\n\n    /*\n     * Required. The GeometryType of the GeoJSON. Expected to be in uppercase (because that's how it is in the GeoObjectType for some reason)\n     */\n\t@Input() geometryType: string;\n\n    /*\n     * Optional. We will invoke this event with GeoJSON when the user makes an edit to the geometry.\n     */\n\t@Output() geometryChange = new EventEmitter<any>();\n\n    /*\n     * Optional. If specified, we will diff based on this GeoJSON geometry.\n     */\n\t@Input() preGeometry: any;\n\n    /*\n     * Optional. If we are read-only, this will be displayed as a layer. If we are not, it will be editable.\n     */\n\t@Input() postGeometry: any;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObject code.\n     */\n\t@Input() bboxCode: string;\n\n    /*\n     * Optional. If specified, we will fetch the bounding box from this GeoObjectType at the date.\n     */\n\t@Input() bboxType: string;\n\n\t@Input() bboxDate: string;\n\n    /*\n     * Optional. If set to true the edit controls will not be displayed. Defaults to false.\n     */\n\t@Input() readOnly: boolean = false;\n\n    /*\n     * Optional. If specified, we will display an edit button on the map, and when it is clicked we will emit this event.\n     */\n\t@Output() onClickEdit = new EventEmitter<void>();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl;\n\n\t@ViewChild(\"mapDiv\") mapDiv;\n\n\tmap: Map;\n\n\teditingControl: any;\n\n\tconstructor(private registryService: RegistryService, private mapService: MapService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\t\n\t}\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\n\t\t\tthis.mapDiv.nativeElement.id = Math.floor(Math.random() * (899999)) + 100000;\n\n\t\t\tthis.map = new Map({\n\t\t\t\tcontainer: this.mapDiv.nativeElement.id,\n\t\t\t\tstyle: 'mapbox://styles/mapbox/satellite-v9',\n\t\t\t\tzoom: 2,\n\t\t\t\tcenter: [110.880453, 10.897852]\n\t\t\t});\n\n\t\t\tthis.map.on('load', () => {\n\t\t\t\tthis.initMap();\n\t\t\t});\n\n\t\t\tthis.map.on('draw.create', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.delete', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\tthis.map.on('draw.update', () => {\n\t\t\t\tthis.onValidChange();\n\t\t\t});\n\t\t\t\n\t\t}, 0);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes['preGeometry'] || changes['postGeometry']) {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tpublic reload(): void {\n\t\tif (this.map != null) {\n\t\t\tthis.removeLayers();\n\t\t\tthis.addLayers();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tgetIsValid(): boolean {\n\t\tif (!this.readOnly) {\n\t\t\tlet isValid: boolean = false;\n\n\t\t\tif (this.editingControl != null) {\n\t\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\t\tif (featureCollection.features.length > 0) {\n\t\t\t\t\tisValid = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn isValid;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onValidChange(): void {\n\t\tthis.geometryChange.emit(this.saveDraw());\n\t}\n\n\tinitMap(): void {\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t\tthis.onValidChange();\n\t\t});\n\n\n\t\tthis.addLayers();\n\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.zoomToBbox();\n\t\t}\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl());\n\n\t\tif (!this.readOnly) {\n\t\t\tthis.enableEditing();\n\t\t}\n\t\telse {\n\t\t\tthis.addEditButton();\n\t\t}\n\n\t\tthis.onValidChange();\n\t}\n\n\taddEditButton(): void {\n\t\tthis.simpleEditControl.editEmitter.subscribe(versionObj => {\n\t\t\tthis.onClickEdit.emit();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tenableEditing(): void {\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (this.postGeometry != null) {\n\t\t\tthis.editingControl.add(this.postGeometry);\n\t\t}\n\t}\n\n\tremoveSource(prefix: string): void {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-polygon\");\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-point\");\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MultiLine\") {\n\t\t\tthis.map.removeLayer(sourceName + \"-line\");\n\t\t}\n\n\t\tthis.map.removeSource(sourceName);\n\t}\n\n\tremoveLayers(): void {\n\t\tif (this.map.getSource(\"pre-geoobject\")) {\n\t\t\tthis.removeSource(\"pre\");\n\t\t}\n\t\tif (this.map.getSource(\"post-geoobject\")) {\n\t\t\tthis.removeSource(\"post\");\n\t\t}\n\t}\n\n\taddLayers(): void {\n\t\tif (this.preGeometry != null && this.preGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.preGeometry, \"pre\", \"#EFA22E\")\n\t\t}\n\t\tif (this.readOnly && this.postGeometry != null && this.postGeometry !== \"\") {\n\t\t\tthis.renderGeometryAsLayer(this.postGeometry, \"post\", \"#800000\");\n\t\t}\n\t}\n\n\trenderGeometryAsLayer(geometry: any, prefix: string, color: string) {\n\t\tlet sourceName: string = prefix + \"-geoobject\";\n\t\t\n\t\tconsole.log(\"test\")\n\n\t\tthis.map.addSource(sourceName, {\n\t\t\ttype: 'geojson',\n\t\t\tdata: {\n\t\t\t\t\"type\": \"FeatureCollection\",\n\t\t\t\t\"features\": []\n\t\t\t}\n\t\t});\n\n\t\tif (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n\t\t\t// Polygon Layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-polygon\",\n\t\t\t\t\"type\": \"fill\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"fill-color\": color,\n\t\t\t\t\t\"fill-outline-color\": \"black\",\n\t\t\t\t\t\"fill-opacity\": 0.7,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-point\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 3,\n\t\t\t\t\t\"circle-color\": color,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": sourceName + \"-line\",\n\t\t\t\t\"source\": sourceName,\n\t\t\t\t\"type\": \"line\",\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"line-join\": \"round\",\n\t\t\t\t\t\"line-cap\": \"round\"\n\t\t\t\t},\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"line-color\": color,\n\t\t\t\t\t\"line-width\": 2\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t(<any>this.map.getSource(sourceName)).setData(geometry);\n\t}\n\n\tzoomToBbox(): void {\n\t\tif (this.bboxCode != null && this.bboxType != null) {\n\t\t\tif (this.bboxDate == null) {\n\t\t\t\tthis.registryService.getGeoObjectBounds(this.bboxCode, this.bboxType).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.registryService.getGeoObjectBoundsAtDate(this.bboxCode, this.bboxType, this.bboxDate).then(boundArr => {\n\t\t\t\t\tlet bounds = new LngLatBounds([boundArr[0], boundArr[1]], [boundArr[2], boundArr[3]]);\n\n\t\t\t\t\tthis.map.fitBounds(bounds, { padding: 50 });\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsaveDraw(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.postGeometry;\n\t\t}\n\n\t\treturn this.postGeometry;\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\t// TODO\n\t\tconsole.log(\"ERROR\", err);\n\t}\n\n\n}\n","<div #mapDiv class=\"map-view-port text-left\" style=\"height:400px;\"></div>\n\n<simple-edit-control [visible]=\"!readOnly\"  #simpleEditControl></simple-edit-control>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-parent-versions-modal',\n\ttemplateUrl: './manage-parent-versions-modal.component.html',\n\tstyleUrls: []\n})\nexport class ManageParentVersionsModalComponent implements OnInit {\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonVersionChange: Subject<HierarchyOverTime>;\n\n\thierarchy: HierarchyOverTime = null;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onVersionChange = new Subject();\n\t}\n\n\tinit(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t}\n\n\n\thandleVersionChange(hierarchy: HierarchyOverTime): void {\n\t\tif (hierarchy != null) {\n\t\t\tthis.onVersionChange.next(hierarchy);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-parent-versions *ngIf=\"hierarchy != null\" [hierarchy]=\"hierarchy\" (onChange)=\"handleVersionChange($event)\"></manage-parent-versions>\n</div>","import { \n\tComponent, \n\tOnInit, \n\tInput, \n\tOutput, \n\tEventEmitter, \n\tViewChildren, \n\tQueryList } from '@angular/core';\n\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { HierarchyOverTime, PRESENT, ValueOverTime } from '@registry/model/registry';\n\nimport{ DateFieldComponent } from '../../../shared/component/form-fields/date-field/date-field.component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService } from '@shared/service';\n\nimport * as moment from 'moment';\nimport Utils from '@registry/utility/Utils';\n\n@Component({\n\tselector: 'manage-parent-versions',\n\ttemplateUrl: './manage-parent-versions.component.html',\n\tstyleUrls: [],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageParentVersionsComponent implements OnInit {\n\t\n\t@ViewChildren('dateFieldComponents') dateFieldComponentsArray:QueryList<DateFieldComponent>;\n\t\n\tcurrentDate : Date =new Date();\n\t\n\tisValid: boolean = true;\n\n\toriginalHierarchy: HierarchyOverTime;\n\t@Input() hierarchy: HierarchyOverTime = null;\n\n\t@Output() onChange = new EventEmitter<HierarchyOverTime>();\n\n\thasDuplicateDate: boolean = false;\n\n\tloading: any = {};\n\n\tconstructor(private service: RegistryService, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.originalHierarchy = JSON.parse(JSON.stringify(this.hierarchy));\n\n\t\tthis.hierarchy.entries.forEach(entry => {\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\t\tif (entry.parents[current.code] == null) {\n\t\t\t\t\tentry.parents[current.code] = { text: '', geoObject: null };\n\t\t\t\t}\n\n\t\t\t\tentry.loading = {};\n\t\t\t}\n\t\t});\n\t}\n\n\tonAddNewVersion(): void {\n\n\t\tlet parents = {};\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparents[current.code] = {};\n\t\t}\n\n\t\tconst entry = {\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t\tparents: parents,\n\t\t\tloading: {}\n\t\t}\n\n\t\tthis.hierarchy.entries.push(entry);\n\t}\n\n\tremove(entry: any): void {\n\n\t\tfor (let i = 0; i < this.hierarchy.entries.length; i++) {\n\t\t\tlet vals = this.hierarchy.entries[i];\n\n\t\t\tif (vals.startDate === entry.startDate) {\n\t\t\t\tthis.hierarchy.entries.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.onDateChange();\t\t\n\t}\n\n\tgetTypeAheadObservable(date: string, type: any, entry: any, index: number): Observable<any> {\n\n\t\tlet geoObjectTypeCode = type.code;\n\n\t\tlet parentCode = null;\n\t\tlet parentTypeCode = null;\n\t\tlet hierarchyCode = null;\n\n\t\tif (index > 0) {\n\t\t\tlet pType = this.hierarchy.types[index - 1];\n\t\t\tconst parent = entry.parents[pType.code];\n\n\t\t\tif (parent.geoObject != null && parent.geoObject.properties.code != null) {\n\t\t\t\thierarchyCode = this.hierarchy.code;\n\t\t\t\tparentCode = parent.geoObject.properties.code;\n\t\t\t\tparentTypeCode = parent.geoObject.properties.type;\n\t\t\t}\n\t\t}\n\n\t\treturn Observable.create((observer: any) => {\n\t\t  if (parentCode == null)\n\t\t  {\n\t\t    let loopI = index;\n\t\t  \n\t\t    while (parentCode == null && loopI > 0)\n\t\t    {\n\t\t      loopI = loopI - 1;\n\t\t      \n\t\t      let parent = entry.parents[this.hierarchy.types[loopI].code];\n\t\t      \n\t\t      if (parent != null)\n\t\t      {\n\t\t        if (parent.geoObject != null && parent.geoObject.properties.code != null)\n\t\t        {\n              parentCode = parent.geoObject.properties.code;\n              hierarchyCode = this.hierarchy.code;\n              parentTypeCode = this.hierarchy.types[loopI].code;\n            }\n            else if (parent.goCode != null)\n            {\n              parentCode = parent.goCode;\n              hierarchyCode = this.hierarchy.code;\n              parentTypeCode = this.hierarchy.types[loopI].code;\n            }\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t\n\t\t\tthis.service.getGeoObjectSuggestions(entry.parents[type.code].text, geoObjectTypeCode, parentCode, parentTypeCode, hierarchyCode, date).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, type: any, entry: any, date: string): void {\n\t\t//        let ptn: ParentTreeNode = parent.ptn;\n\n    \tentry.parents[type.code].text = e.item.name + \" : \" + e.item.code;\n   \t\tentry.parents[type.code].goCode = e.item.code;\n\n\t\tlet parentTypes = [];\n\n\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\tlet current = this.hierarchy.types[i];\n\n\t\t\tparentTypes.push(current.code);\n\n\t\t\tif (current.code === type.code) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.service.getParentGeoObjects(e.item.uid, type.code, parentTypes, true, date).then(ancestors => {\n\n      \tdelete entry.parents[type.code].goCode;\n\t\t\tentry.parents[type.code].geoObject = ancestors.geoObject;\n\t\t\tentry.parents[type.code].text = ancestors.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestors.geoObject.properties.code;\n\n\t\t\tfor (let i = 0; i < this.hierarchy.types.length; i++) {\n\t\t\t\tlet current = this.hierarchy.types[i];\n\t\t\t\tlet ancestor = ancestors;\n\n\t\t\t\twhile (ancestor != null && ancestor.geoObject.properties.type != current.code) {\n\t\t\t\t\tif (ancestor.parents.length > 0) {\n\t\t\t\t\t\tancestor = ancestor.parents[0];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tancestor = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ancestor != null) {\n\t\t\t\t\tentry.parents[current.code].geoObject = ancestor.geoObject;\n\t\t\t\t\tentry.parents[current.code].text = ancestor.geoObject.properties.displayLabel.localizedValue + ' : ' + ancestor.geoObject.properties.code;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}\n\n\tonRemove(type: any, entry: any): void {\n\t\tentry.parents[type.code].text = '';\n\t\tdelete entry.parents[type.code].geoObject;\n\t\tdelete entry.parents[type.code].goCode;\n\t}\n\t\n\tcheckDateFieldValidity(): boolean {\n\t\tlet dateFields = this.dateFieldComponentsArray.toArray();\n\t\t\n\t\tfor(let i=0; i<dateFields.length; i++){\n\t\t\tlet field = dateFields[i];\n\t\t\tif(!field.valid){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tonDateChange(): any {\n\t\t\n\t\tthis.isValid = this.checkDateFieldValidity();\n\n\t\t// check ranges\n\t\tfor (let j = 0; j < this.hierarchy.entries.length; j++) {\n\t\t\tconst h1 = this.hierarchy.entries[j];\n\t\t\th1.conflictMessage = [];\n\n\t\t\tif (!(h1.startDate == null || h1.startDate === '') && !(h1.endDate == null || h1.endDate === '')) {\n\t\t\t\tlet s1: any = new Date(h1.startDate);\n\t\t\t\tlet e1: any = new Date(h1.endDate);\n\t\t\t\t\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\"message\": this.localizeService.decode(\"manage.versions.startdate.later.enddate.message\")\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.isValid = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < this.hierarchy.entries.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\tconst h2 = this.hierarchy.entries[i];\n\t\t\t\t\t\tif (!(h2.startDate == null || h2.startDate === '') && !(h2.endDate == null || h2.endDate === '')) {\n\t\t\t\t\t\t\tlet s2: any = new Date(h2.startDate);\n\t\t\t\t\t\t\tlet e2: any = new Date(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\t\t\t\"message\":this.localizeService.decode(\"manage.versions.overlap.message\")\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.isValid = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.sort(this.hierarchy);\n\t\t\n\t\t// check gaps\n\t\tlet current = null;\n\n\t\tfor (let j = 0; j < this.hierarchy.entries.length; j++) {\n\t\t\tlet next = this.hierarchy.entries[j];\n\n\t\t\tif (j > 0) {\n\t\t\t\tif (!(current.startDate == null || current.startDate === '') && !(current.endDate == null || current.endDate === '')) {\n\t\t\t\t\tlet e1: any = new Date(current.endDate);\n\n\t\t\t\t\tif (!(next.startDate == null || next.startDate === '') && !(next.endDate == null || next.endDate === '')) {\n\t\t\t\t\t\tlet s2: any = new Date(next.startDate);\n\n\t\t\t\t\t\tif (Utils.hasGap(e1.getTime(), s2.getTime())) {\n\t\t\t\t\t\t\tnext.conflictMessage.push({\n\t\t\t\t\t\t\t\t\"type\": \"WARNING\",\t\n\t\t\t\t\t\t\t\t\"message\":this.localizeService.decode(\"manage.versions.gap.message\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrent.conflictMessage.push({\n\t\t\t\t\t\t\t\t\"type\": \"WARNING\",\t\n\t\t\t\t\t\t\t\t\"message\":this.localizeService.decode(\"manage.versions.gap.message\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrent = next;\n\t\t}\t\t\n\t}\n\n\tformatDateString(dateObj: Date): string {\n\t\tconst day = dateObj.getUTCDate();\n\n\t\treturn dateObj.getUTCFullYear() + \"-\" + (dateObj.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n\t\tvar format = localeData.longDateFormat('L');\n\t\treturn moment().format(format);\n\t\t\n//\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\t\n\tsetInfinity(vAttribute, hierarchyOverTime: HierarchyOverTime): void {\n\t\t\n\t\tif(vAttribute.endDate === PRESENT){\n\t\t\tvAttribute.endDate = new Date();\n\t\t}\n\t\telse{\n\t\t\tvAttribute.endDate = PRESENT\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t}\n\t\n\tsort(hierarchyOverTime: HierarchyOverTime): void {\n\t\t\n\t\t// Sort the data by start date \n\t\thierarchyOverTime.entries.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\t\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.hierarchy);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalHierarchy);\n\t}\n}\n","<div>\n    <ng-template #customItemTemplate let-model=\"item\" let-index=\"index\">\n      <h5>{{model.name }} : {{ model.code }}</h5>\n    </ng-template>\n\n    <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\"><localize key=\"changeovertime.manageVersions.duplicateDate\"></localize></div>\n\n    <form #form=\"ngForm\" class=\"modal-form\" style=\"height: calc(100vh - 165px);display: contents;\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"attribute-version-wrapper\">\n                            <ul class=\"list-group\" *ngIf=\"hierarchy != null\">\n                                <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                                    <table class=\"table table-striped\">\n                                    \n                                        <tbody class=\"attribute-element-wrapper\">\n\n                                          <p class=\"message\" *ngIf=\"hierarchy.entries.length === 0\">\n                                            <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                                          </p>\n                  \n                                          <tr @fadeInOut *ngFor=\"let entry of hierarchy.entries; let i = index;\" [ngClass]=\"{'error-border': entry.conflictMessage && entry.conflictMessage.length > 0 && entry.conflictMessage[0].type === 'ERROR', 'warning-border': entry.conflictMessage && entry.conflictMessage.length > 0 && entry.conflictMessage[0].type === 'WARNING'}\">\n                                            <td>\n                                              <table>\n                                                <tr class=\"attribute-value-row\">\n                                                  <td colspan=\"2\">\n                                                     <div style=\"float:left;width:100%;\" *ngFor=\"let type of hierarchy.types; let j = index\"> \n                                                       {{type.label}}\n                                                       <div class=\"input-group\">\n                                                          <input  style=\"width:100%;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n                                                            [name]=\"type.code + '-' + i\"\n                                                            [disabled]=\"entry.startDate == null || entry.startDate === ''\"\n                                                            [(ngModel)]=\"entry.parents[type.code].text\" \n                                                            [typeaheadAsync]=\"true\"\n                                                            [typeahead]=\"getTypeAheadObservable(entry.startDate, type, entry, j)\"\n                                                            (typeaheadOnSelect)=\"typeaheadOnSelect($event, type, entry, entry.startDate)\" \n                                                            (typeaheadLoading)=\"entry.loading[type.code] = $event\"\n                                                            [ngClass]=\"{'inline-loading':entry.loading[type.code]}\"                                                                \n                                                            [typeaheadOptionsLimit]=\"7\"\n                                                            [typeaheadItemTemplate]=\"customItemTemplate\" \n                                                            [typeaheadMinLength]=\"0\"\n                                                            [typeaheadWaitMs]=\"300\">\n                                                          \n                                                            <span class=\"input-group-addon clickable addon-alert\" (click)=\"onRemove(type, entry)\"> \n                                                              <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                                            </span>\n                                                        </div>\n                                                     </div>\n                                                  </td>\n                                                </tr>\n                                                <tr class=\"attribute-date-input-row\">\n                                                  <td>\n                                                    <h5>\n                                                      <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                                    </h5> \n                                                  \n                                                    <date-field #dateFieldComponents style=\"width: 100%;\" [(value)]=\"entry.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\" ></date-field>\n                                                  </td>\n                                                  <td>\n                                                    <div class=\"version-edit-date-container\">\n                                                      <h5>\n                                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                                      </h5>\n                                                      \n                                                      <date-field #dateFieldComponents [(value)]=\"entry.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" [required]=\"true\" [placement]=\"'bottom'\"></date-field>\n                                                      \n                                                    </div>\n                                                  </td>\n                                                </tr>\n                                                <tr *ngIf=\"entry.conflictMessage && entry.conflictMessage.length > 0\">\n<!--                                                   <p class=\"error-message\"> -->\n<!--                                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                                   </p> -->\n                                                    <p *ngFor=\"let msg of entry.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\">\n                                                      {{msg.message}}\n                                                    </p>\n                                                </tr>                                                \n                                              </table>\n                                            </td>\n                                            <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(entry)\">\n                                              <i class=\"fa fa-times\"></i>\n                                            </td>\n                                          </tr>\n                                        </tbody>\n                                    </table>\n                                </li>\n\n                                <li class=\"list-group-item\" style=\"text-align: left;\">\n                                  <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"><localize key=\"changeovertime.manageVersions.newVersion\"></localize></i>\n                                </li>\n                            </ul>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"holder\" style=\"border: none; width: 100%;\">\n                    <div class=\"button-holder pull-right\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\" >\n                            <localize key=\"io.cancel\"></localize>\n                        </button> \n                        <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || form.invalid || hasDuplicateDate\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n</div>","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from '@circlon/angular-tree-component';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\n\n@Component({\n\n\tselector: 'tree-geo-selector',\n\ttemplateUrl: './tree-geo-selector.html',\n\tstyleUrls: ['./tree-geo-selector.css']\n})\nexport class TreeGeoSelector {\n\n\t@Input() hierarchy: HierarchyOverTime;\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() forDate: Date = null;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tnodes: any[] = [];\n\t\n\tactionMapping:IActionMapping = {\n\t  mouse: {\n\t    click: null,\n\t  }\n\t}\n\n\toptions: ITreeOptions = {\n\t\tdisplayField: 'name',\n\t\tisExpandedField: 'expanded',\n\t\tidField: 'code',\n\t\tactionMapping: this.actionMapping\n\t};\n\t\n\n\tconstructor() {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n    let time = null;\n    \n    if (this.forDate != null)\n    {\n\t\t  time = this.forDate.getTime();\n\t\t}\n\n\t\tlet nodes = [];\n\t\tlet current = null;\n\t\t\n\t\tthis.hierarchy.entries.forEach(pot => {\n\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\tif (time == null || time >= startDate && time <= endDate) {\n\t\t\t\tthis.hierarchy.types.forEach(type => {\n\t\t\t\t\tlet node: any = {\n\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\tlabel: type.label,\n\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\texpanded: false\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\tnode.name = pot.parents[type.code].text;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (time == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t  node.name = node.name + \" (\" + pot.startDate + \" -> \" + pot.endDate + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tnode.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (current == null) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcurrent.children.push(node);\n\t\t\t\t\t\tcurrent.expanded = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent = node;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tcurrent = null;\n\t\t});\n\n\t\tthis.nodes = nodes;\n\t}\n\n\tonEdit(): void {\n\t\tthis.onManageVersion.emit(this.hierarchy);\n\t}\n}\n","<div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h4 style=\"margin: 0;\">{{hierarchy.label}}</h4>\n    </div>\n    <div class=\"panel-body\">\n\n<!--       <div class=\"input-group\"> -->\n        <div *ngIf=\"nodes.length > 0\" class=\"tree\" >\n          <tree-root [nodes]=\"nodes\" [options]=\"options\"></tree-root>\n        </div>\n<!--         <span *ngIf=\"!readOnly\" class=\"input-group-addon\">  -->\n<!--           <i class=\"fa fa-pencil clickable\" (click)=\"onEdit()\" aria-hidden=\"true\"></i> -->\n<!--         </span> -->\n<!--       </div> -->\n      \n      <button class=\"btn btn-primary\" style=\"width:100%;margin-top:10px;\" *ngIf=\"!readOnly\" (click)=\"onEdit()\"><localize key=\"modal.button.edit\"></localize></button>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\nimport { GeoObjectType, GeoObjectOverTime } from '@registry/model/registry';\n\n@Component({\n\tselector: 'submit-change-request',\n\ttemplateUrl: './submit-change-request.component.html',\n\tstyleUrls: ['./submit-change-request.css']\n})\nexport class SubmitChangeRequestComponent implements OnInit {\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectTypes: GeoObjectType[] = [];\n\n\tgeoObjectId: string = \"\";\n\n\treason: string = \"\";\n\n\tdataSource: Observable<any>;\n\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\t@ViewChild(\"geometryEditor\") geometryEditor;\n\n\t/*\n\t * The current state of the GeoObject in the GeoRegistry\n\t */\n\tpreGeoObject: GeoObjectOverTime = null;\n\n\t/*\n\t * The state of the GeoObject after our Change Request has been approved \n\t */\n\tpostGeoObject: GeoObjectOverTime = null;\n\t\n\tshowGeoObjectDetails: boolean = false;\n\n\tisValid: boolean = false;\n\n\tloading: boolean = false;\n\n\tgeoObjectAttributeExcludes: string[] = [\"uid\", \"sequence\", \"type\", \"lastUpdateDate\", \"createDate\", \"status\"];\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService,\n\t\tprivate changeRequestService: ChangeRequestService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.dataSource = Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(this.geoObjectId, this.geoObjectType.code).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.registryService.getGeoObjectTypes([], null).then(types => {\n\n\t\t\tvar myOrgTypes = [];\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.organizationCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null && type.superTypeCode != '' ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isGeoObjectTypeRC(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.geoObjectTypes = myOrgTypes;\n\n\t\t\tthis.geoObjectTypes.sort((a, b) => {\n\t\t\t\tif (a.label.localizedValue.toLowerCase() < b.label.localizedValue.toLowerCase()) return -1;\n\t\t\t\telse if (a.label.localizedValue.toLowerCase() > b.label.localizedValue.toLowerCase()) return 1;\n\t\t\t\telse return 0;\n\t\t\t});\n\n\t\t\tlet pos = this.getGeoObjectTypePosition(\"ROOT\");\n\t\t\tif (pos) {\n\t\t\t\tthis.geoObjectTypes.splice(pos, 1);\n\t\t\t}\n\n\t\t\t// this.currentGeoObjectType = this.geoObjectTypes[1];\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\n\n\tprivate onValidChange(newValid: boolean) {\n\t\tif (this.preGeoObject == null) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.geometryEditor != null && !this.geometryEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.attributeEditor != null && !this.attributeEditor.getIsValid()) {\n\t\t\tthis.isValid = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isValid = true;\n\t}\n\n\tprivate getGeoObjectTypePosition(code: string): number {\n\t\tfor (let i = 0; i < this.geoObjectTypes.length; i++) {\n\t\t\tlet obj = this.geoObjectTypes[i];\n\t\t\tif (obj.code === code) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tchangeTypeaheadLoading(e: boolean): void {\n\t\tthis.loading = e;\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch): void {\n\t\tthis.registryService.getGeoObjectOverTime(e.item.code, this.geoObjectType.code).then(geoObject => {\n\t\t\tthis.preGeoObject = geoObject;\n\t\t\tthis.postGeoObject = JSON.parse(JSON.stringify(this.preGeoObject)); // Object.assign is a shallow copy. We want a deep copy.\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsubmit(): void {\n\n\t\tlet goSubmit: GeoObjectOverTime = this.attributeEditor.getGeoObject();\n\n\t\tif (this.geometryEditor != null) {\n\t\t\t//\t\t\tlet goGeometries: GeoObjectOverTime = this.geometryEditor.saveDraw();\n\t\t\t//            goSubmit.geometry = goGeometries.geometry;\n\t\t}\n\n\t\tlet actions = [{\n\t\t\t\"actionType\": \"geoobject/update\", // TODO: account for create\n\t\t\t\"apiVersion\": \"1.0-SNAPSHOT\", // TODO: make dynamic\n\t\t\t\"createActionDate\": new Date().getTime(),\n\t\t\t\"geoObject\": goSubmit,\n\t\t\t\"contributorNotes\": this.reason\n\t\t}]\n\n\t\tthis.changeRequestService.submitChangeRequest(JSON.stringify(actions))\n\t\t\t.then(geoObject => {\n\t\t\t\tthis.cancel();\n\n\t\t\t\tthis.bsModalRef = this.modalService.show(SuccessModalComponent, { backdrop: true });\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"change.request.success.message\");\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\tthis.isValid = false;\n\t}\n\n\tcancel(): void {\n\t\tthis.isValid = false;\n\t\tthis.preGeoObject = null;\n\t\tthis.postGeoObject = null;\n\t\tthis.geoObjectId = null;\n\t\tthis.geoObjectType = null;\n\t\tthis.reason = null;\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div style=\"margin-top:50px;margin-bottom:50px;background:#f7f7f7;width:100%;padding:10px;\">\n      <h3 style=\"margin-bottom: 20px;\"><localize key=\"change.request.search.for.geoobject.header\"></localize></h3>\n      <div class=\"row\">\n\n        <div class=\"col-md-3\">\n          <localize key=\"dropdown.select.geoobjecttype.option.label\"></localize>\n          <select id=\"geoObjectTypeSelect\" name=\"geoObjectTypeSelect\" class=\"select-area\" [(ngModel)]=\"geoObjectType\" required>\n            <option>  </option>\n            <option *ngFor=\"let got of geoObjectTypes\" [ngValue]=\"got\">{{got.label.localizedValue}}</option>\n          </select>\n        </div>\n        \n        <div class=\"col-md-5\">\n          <localize key=\"change.request.search.for.geoobject.search.label\"></localize>\n          <input type=\"text\" [ngClass]=\"{'inline-loading':loading}\" [(ngModel)]=\"geoObjectId\" [disabled]=\"!geoObjectType\" name=\"geoObjectId\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\n            [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" [placeholder]=\"('masterlist.search' | localize) + '...'\" class=\"form-control\" autocomplete=\"off\">\n        \n            <span *ngIf=\"preGeoObject\" class=\"pull-right\">\n            > <a (click)=\"showGeoObjectDetails = !showGeoObjectDetails\">\n                <localize *ngIf=\"!showGeoObjectDetails\" key=\"change.request.create.request.show.details.btn\"></localize>\n                <localize *ngIf=\"showGeoObjectDetails\" key=\"change.request.create.request.hide.details.btn\"></localize>\n              </a>\n            </span>\n            \n            <div *ngIf=\"showGeoObjectDetails\">\n              <geoobject-shared-attribute-editor \n              #attributeEditor (valid)=\"this.onValidChange($event)\" \n              [geoObjectType]=\"this.geoObjectType\" \n              [preGeoObject]=\"this.preGeoObject\" \n              [(postGeoObject)]=\"this.postGeoObject\" \n              [isGeometryInlined]=\"false\"\n              [readOnly]=\"true\"\n              [animate]=false>\n              </geoobject-shared-attribute-editor>\n           </div>\n        </div>\n        \n        <div *ngIf=\"preGeoObject\" class=\"col-md-4\">\n          <label></label>\n          <a [routerLink]=\"['/registry/location-manager', preGeoObject.attributes.uid, preGeoObject.attributes.type]\" \n                target=\"_blank\">\n            <button class=\"btn btn-primary\" style=\"width:100%;\"><localize key=\"change.request.open.geoobject.in.editor.link.btn\"></localize></button>\n          </a>\n        </div>\n\n      </div>\n      \n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DatePipe } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\nimport { GeoObjectType, GeoObjectOverTime, HierarchyOverTime, ParentTreeNode, ImportError, ValueOverTime } from '@registry/model/registry';\n\n\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\n\n@Component({\n\tselector: 'geoobject-editor',\n\ttemplateUrl: './geoobject-editor.component.html',\n\tstyleUrls: ['./geoobject-editor.component.css'],\n\tproviders: [DatePipe]\n})\n\n/**\n * This component is used in the master list when editing a row. In the future it will also be used by the navigator and has\n * potential to also be used in the submit change request and manage change requests.\n */\nexport class GeoObjectEditorComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tisValid: boolean = false;\n\n\tisGeometryEditable: boolean;\n\n\ttabIndex: number = 0;\n\n\tdataSource: Observable<any>;\n\n\tmasterListId: string;\n\tnotes: string;\n\n\tisNewGeoObject: boolean = false;\n\n\t@Input() onSuccessCallback: Function;\n\n\tsubmitFunction: Function = null;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n    /*\n     * GeoObject Property Editor\n     */\n\t@ViewChild(\"attributeEditor\") attributeEditor;\n\n\tarePropertiesValid: boolean = false;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tgoPropertiesPre: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tgoPropertiesPost: GeoObjectOverTime;\n\n\t//    /*\n\t//     * GeoObject Geometry Editor\n\t//     */\n\t//    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\t//\n\t//    areGeometriesValid: boolean = false;\n\n    /*\n     * GeoObject Cascading Parent Selector\n     */\n\t@ViewChild(\"parentSelector\") parentSelector;\n\n\tareParentsValid: boolean = true;\n\n\thierarchies: HierarchyOverTime[];\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tisEditingGeometries: boolean = false;\n\n    /*\n     * The final artifacts which will be submitted\n     */\n\tprivate goSubmit: GeoObjectOverTime;\n\n\tconstructor(private modalService: BsModalService, public bsModalRef: BsModalRef,\n\t\tprivate registryService: RegistryService, private localizeService: LocalizationService,\n\t\tauthService: AuthService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tfindVotWithStartDate(votArray: ValueOverTime[], startDate: string): any {\n\t\tfor (let i: number = 0; i < votArray.length; ++i) {\n\t\t\tif (votArray[i].startDate === startDate) {\n\t\t\t\treturn votArray[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tsetMasterListId(id: string) {\n\t\tthis.masterListId = id;\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tsetOnSuccessCallback(func: Function) {\n\t\tthis.onSuccessCallback = func;\n\t}\n\n\t// Configures the widget to be used in a \"New\" context, that is to say\n\t// that it will be used to create a new GeoObject.\n\tpublic configureAsNew(typeCode: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tthis.isNewGeoObject = true;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, retJson.geoObject.attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\n\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t});\n\t}\n\n\t// Configures the widget to be used to resolve an ImportError\n\tpublic configureFromImportError(importError: ImportError, historyId: string, dateStr: string, isGeometryEditable: boolean) {\n\t\tlet typeCode = importError.object.geoObject.attributes.type;\n\t\tthis.isNewGeoObject = importError.object.isNew;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchLocales();\n\n\t\tif (importError.object != null && importError.object.parents != null && importError.object.parents.length > 0) {\n\t\t\tthis.hierarchies = importError.object.parents;\n\t\t\tthis.areParentsValid = true;\n\t\t}\n\t\telse {\n\t\t\tthis.registryService.newGeoObjectOverTime(typeCode).then(retJson => {\n\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t});\n\t\t\tthis.areParentsValid = false;\n\t\t}\n\n\t\t// TODO : Maybe we should ask the server for the pre object, if it exists.\n\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, importError.object.geoObject.attributes);\n\n\t\tthis.submitFunction = () => {\n\t\t\tlet config = {\n\t\t\t\thistoryId: historyId,\n\t\t\t\timportErrorId: importError.id,\n\t\t\t\tresolution: 'APPLY_GEO_OBJECT',\n\t\t\t\tparentTreeNode: this.hierarchies,\n\t\t\t\tgeoObject: this.goSubmit,\n\t\t\t\tisNew: importError.object.isNew\n\t\t\t}\n\n\t\t\tthis.registryService.submitErrorResolve(config)\n\t\t\t\t.then(() => {\n\n\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t}\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// Configures the widget to be used in an \"Edit Existing\" context\n\tpublic configureAsExisting(code: string, typeCode: string, dateStr: string, isGeometryEditable: boolean): void {\n\t\tthis.isNewGeoObject = false;\n\t\tthis.dateStr = dateStr;\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t\tthis.isGeometryEditable = isGeometryEditable;\n\n\t\tthis.fetchGeoObject(code, typeCode);\n\t\tthis.fetchGeoObjectType(typeCode);\n\t\tthis.fetchHierarchies(code, typeCode);\n\t\tthis.fetchLocales();\n\t}\n\n\tprivate fetchGeoObject(code: string, typeCode: string) {\n\t\tthis.registryService.getGeoObjectOverTime(code, typeCode).then(geoObject => {\n\t\t\tthis.goPropertiesPre = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\tthis.goPropertiesPost = new GeoObjectOverTime(this.geoObjectType, JSON.parse(JSON.stringify(this.goPropertiesPre)).attributes);\n\t\t\t//this.goPropertiesPost = JSON.parse( JSON.stringify( this.goPropertiesPre ) );\n\n\t\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t\t//            this.areGeometriesValid = true;\n\t\t\tthis.arePropertiesValid = true;\n\t\t\tthis.isValid = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchLocales() {\n\t\tthis.registryService.getLocales().then(locales => {\n\t\t\tthis.localizeService.setLocales(locales);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tprivate fetchGeoObjectType(code: string) {\n\t\tthis.registryService.getGeoObjectTypes([code], null)\n\t\t\t.then(geoObjectType => {\n\t\t\t\tthis.geoObjectType = geoObjectType[0];\n\n\t\t\t\tif (this.goPropertiesPre != null) {\n\t\t\t\t\tthis.goPropertiesPre.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\t\t\t\tif (this.goPropertiesPost != null) {\n\t\t\t\t\tthis.goPropertiesPost.geoObjectType = this.geoObjectType;\n\t\t\t\t}\n\n\t\t\t\tif (!this.geoObjectType.isGeometryEditable) {\n\t\t\t\t\t//                    this.areGeometriesValid = true;\n\t\t\t\t}\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t//                this.error( err );\n\t\t\t});\n\t}\n\n\tprivate fetchHierarchies(code: string, typeTypeCode: string) {\n\t\tthis.registryService.getHierarchiesForGeoObject(code, typeTypeCode)\n\t\t\t.then((hierarchies: any) => {\n\t\t\t\tthis.hierarchies = hierarchies;\n\n\t\t\t\t//                this.parentTreeNode = CascadingGeoSelector.staticGetParents( this.hierarchies );\n\t\t\t\tthis.areParentsValid = true;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tgetTypeAheadObservable(text, typeCode) {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.registryService.getGeoObjectSuggestionsTypeAhead(text, typeCode).then(results => {\n\t\t\t\tobserver.next(results);\n\t\t\t});\n\t\t});\n\t}\n\n\ttypeaheadOnSelect(e: TypeaheadMatch, ptn: ParentTreeNode): void {\n\t\tthis.registryService.getGeoObjectByCode(e.item.code, ptn.geoObject.properties.type)\n\t\t\t.then(geoObject => {\n\n\t\t\t\tptn.geoObject = geoObject;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tprivate onValidChange() {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.arePropertiesValid = this.attributeEditor.getIsValid();\n\t\t}\n\t\t//        if ( this.geometryEditor != null ) {\n\t\t//            this.areGeometriesValid = this.geometryEditor.getIsValid();\n\t\t//        }\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.areParentsValid = this.parentSelector.getIsValid();\n\t\t}\n\n\t\t//        this.isValid = this.arePropertiesValid && this.areGeometriesValid && this.areParentsValid;\n\t\tthis.isValid = this.arePropertiesValid && this.areParentsValid;\n\t}\n\n\tchangePage(nextPage: number, force: boolean = false): void {\n\t\tif (nextPage === this.tabIndex && !force) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tthis.persistModelChanges();\n\n\t\tthis.tabIndex = nextPage;\n\n\t\tthis.onValidChange();\n\n\t\tif (nextPage === 2) {\n\t\t\tthis.isEditingGeometries = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isEditingGeometries = false;\n\t\t}\n\t}\n\n\tprivate persistModelChanges(): void {\n\t\tif (this.attributeEditor != null) {\n\t\t\tthis.goPropertiesPost = this.attributeEditor.getGeoObject();\n\t\t}\n\t\tif (this.parentSelector != null) {\n\t\t\tthis.hierarchies = this.parentSelector.getHierarchies();\n\t\t}\n\n\t\tthis.goSubmit = this.goPropertiesPost;\n\n\t\t//        if ( this.parentTreeNode != null ) {\n\t\t//            this.parentTreeNode.geoObject = this.goSubmit;\n\t\t//        }\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic submit(): void {\n\t\tif (this.isValid) {\n\t\t\tthis.bsModalRef.hide();\n\n\t\t\tthis.persistModelChanges();\n\n\t\t\tif (this.submitFunction == null) {\n\t\t\t\tthis.registryService.applyGeoObjectEdit(this.hierarchies, this.goSubmit, this.isNewGeoObject, this.masterListId, this.notes)\n\t\t\t\t\t.then(() => {\n\n\t\t\t\t\t\tif (this.onSuccessCallback != null) {\n\t\t\t\t\t\t\tthis.onSuccessCallback();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\t\tthis.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.submitFunction();\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"modal-body\">\n    \n    <form class=\"modal-form\" style=\"overflow: visible;\" #goForm=\"ngForm\">\n        <!-- <div class=\"row-holder\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n            \n                <div *ngIf=\"!areParentsValid\" class=\"alert alert-danger\" role=\"alert\">\n                  <localize key=\"geoobject.editor.modal.parents.must.be.assigned.message\"></localize>                \n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"btn-group geobject-editor-tab-holder\">\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 0}\" (click)=\"this.changePage(0);\">\n                        <localize key=\"geoobject.editor.tabZero\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 1, error: !areParentsValid}\" (click)=\"this.changePage(1);\">\n                        <localize key=\"geoobject.editor.tabOne\"></localize>\n                    </label>\n                    <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: this.tabIndex === 2, disabled: !isGeometryEditable}\" (click)=\"isGeometryEditable && this.changePage(2);\">\n                        <localize key=\"geoobject.editor.tabTwo\"></localize>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- Attributes tab -->\n        <geoobject-shared-attribute-editor \n            *ngIf=\"(this.tabIndex === 0 || this.tabIndex === 2) && this.geoObjectType && this.goPropertiesPre && this.goPropertiesPost\"\n            #attributeEditor \n            (valid)=\"this.onValidChange()\" \n            [geoObjectType]=\"this.geoObjectType\"\n            [preGeoObject]=\"this.goPropertiesPre\" \n            [postGeoObject]=\"this.goPropertiesPost\" \n            [forDate]=\"this.forDate\" \n            [isNew]=\"this.isNewGeoObject\"\n            [isEditingGeometries]=\"this.isEditingGeometries\">\n        </geoobject-shared-attribute-editor>\n\n\n        <!-- Parents tab -->\n        <div *ngIf=\"this.tabIndex === 1 && this.hierarchies != null\">\n          <cascading-geo-selector #parentSelector \n            [isValid]=\"this.isValid\" (valid)=\"this.onValidChange()\"\n            [forDate]=\"this.forDate\"             \n            [hierarchies]=\"this.hierarchies\">\n          </cascading-geo-selector>\n        </div>\n\n         <!-- Geometry tab -->\n         <!--\n         <div class=\"row-holder\">\n            <div class=\"label-holder\"></div>\n            <div class=\"holder\">\n              <geoobject-editor-map #geometryEditor *ngIf=\"this.tabIndex === 2\" [geometryType]=\"this.geoObjectType.geometryType\" [readOnly]=\"true\" [preGeometry]=\"this.goGeometries.getVotAtDate(this.forDate, 'geometry', this.geoObjectType, this.localizeService).value\" [bboxCode]=\"this.goGeometries.attributes.code\" [bboxType]=\"this.geoObjectType.code\"></geoobject-editor-map>\n            </div>\n        </div>\n        -->\n\n        <div *ngIf=\"!isMaintainer\" class=\"row-holder\" style=\"padding-top: 10px;\">\n            <div class=\"label-holder\"><label><localize key=\"change.request.action.detail.contributorNotes\"></localize></label></div>\n            <div class=\"holder text-left\">\n              <textarea style=\"width: 100%;border-radius: 8px;height: 70px; padding:5px;\" class=\"detail-value\" [(ngModel)]=\"notes\" name=\"notes\" required></textarea>\n              <div class=\"form-input-validation-error-message-wrapper\">\n                <p *ngIf=\"!notes\" class=\"error-message\">Notes are required.</p>\n              </div>\n            </div>\n        </div>\n\n         <div class=\"row-holder\" style=\"margin-bottom: 20px;\">\n            <div class=\"label-holder\"><label><localize key=\"changeOverTime.forDate\"></localize></label></div>\n            <div class=\"holder\">\n                <input style=\"width:100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <!-- <div class=\"label-holder\"></div> -->\n            <div class=\"col-md-12\">\n                <div class=\"button-holder text-left\">\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                        <localize key=\"modal.button.cancel\"></localize>\n                    </button>\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"goForm.invalid || !this.isValid\">\n                        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\nimport { Step, StepConfig } from '@registry/model/registry';\n\n\n@Component( { \n    selector: 'step-indicator',\n    templateUrl: './step-indicator.component.html',\n    styleUrls: ['./step-indicator.css']\n} )\nexport class StepIndicatorComponent {\n\n    @Input('steps')\n    set steps(value: StepConfig) {\n        this._stepConfig = value;\n    }\n\n    _stepConfig: StepConfig;\n    step: Step;\n\n\n    constructor( private localizeService: LocalizationService ) {\n\n        this._stepConfig = {\"steps\": []};\n    }\n\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n       \n    }\n}\n","<div class=\"step-indicator\">\n    <ul *ngIf=\"_stepConfig && _stepConfig.steps && _stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\"\n            *ngFor=\"let step of _stepConfig.steps\"\n            [ngClass]=\"{'complete':step.status === 'COMPLETE', 'stuck':step.status === 'STUCK', 'working': step.status === 'WORKING'}\">\n            {{step.label}}\n        </li>\n    </ul>\n</div>","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { ContextLayer, ContextLayerGroup, MasterList } from '@registry/model/registry';\nimport { ContextLayerModalComponent } from './context-layer-modal.component';\nimport { RegistryService } from '@registry/service';\n\n@Component({\n\tselector: 'layer-panel',\n\ttemplateUrl: './layer-panel.component.html',\n\tstyleUrls: ['./location-manager.css']\n})\nexport class LayerPanelComponent implements OnInit, OnChanges {\n\n\t@Input() filter: string[] = [];\n\t@Output() layerChange = new EventEmitter<ContextLayer>();\n\t@Output() baseLayerChange = new EventEmitter<any>();\n\n\tbaselayerIconHover = false;\n\n\tlists: MasterList[] = [];\n\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'baselayer.satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n//\t\t {\n//\t\t \tname: 'Streets',\n//\t\t \tlabel: 'baselayer.streets',\n//\t\t \tid: 'streets-v11',\n//\t\t \tsprite: 'mapbox://sprites/mapbox/streets-v11',\n//\t\t \turl: 'mapbox://styles/mapbox/streets-v11'\n//\t\t }\n\t];\n\n\tcontextLayerGroups: ContextLayerGroup[] = [];\n\n\tconstructor(private modalService: BsModalService, public service: RegistryService) {\n\t}\n\n\n\tngOnInit(): void {\n\n\t\tthis.service.getAllMasterListVersions().then(lists => {\n\t\t\tthis.lists = lists;\n\n\t\t\tthis.updateContextGroups();\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.filter.currentValue !== changes.filter.previousValue) {\n\t\t\tthis.updateContextGroups();\n\t\t}\n\t}\n\n\tupdateContextGroups(): void {\n\n\t\tthis.lists.forEach(list => {\n\n\t\t\tlet contextGroup = { oid: list.oid, displayLabel: list.displayLabel.localizedValue, contextLayers: [] };\n\t\t\t\n\t\t\tlist.versions.forEach(version => {\n\n\t\t\t\tconst index = this.filter.indexOf(version.oid);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tlet thisContextLayer = { oid: version.oid, displayLabel: version.forDate, active: false, enabled: false };\n\n\t\t\t\t\tcontextGroup.contextLayers.push(thisContextLayer);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (contextGroup.contextLayers.length > 0) {\n\t\t\t\tthis.contextLayerGroups.push(contextGroup);\n\t\t\t}\n\t\t});\n\n\t}\n\n\tgroupHasEnabledContextLayers(group: string): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif (cLayerGroup.oid === group) {\n\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\t\thasEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\thasEnabledContextLayers(): boolean {\n\t\tlet hasEnabled = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t\t\tif (cLayer.enabled) {\n\t\t\t\t\thasEnabled = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn hasEnabled;\n\t}\n\n\ttoggleContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = !layer.active;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\tremoveContextLayer(layer: ContextLayer): void {\n\t\tlayer.active = false;\n\t\tlayer.enabled = false;\n\n\t\tthis.layerChange.emit(layer);\n\t}\n\n\taddContextLayerModal(): void {\n\t\tlet bsModalRef = this.modalService.show(ContextLayerModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t\t'class': 'context-layer-modal'\n\t\t});\n\t\tbsModalRef.content.contextLayerGroups = this.contextLayerGroups;\n\n\t\t//\t\tbsModalRef.content.onSubmit.subscribe(() => {\n\t\t//\n\t\t//\t\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t//\t\t\t\tcLayerGroup.contextLayers.forEach(cLayer => {\n\t\t//\n\t\t//\t\t\t\t\tconsole.log(\"Emitting event\", cLayer);\n\t\t//\t\t\t\t\tthis.layerChange.emit(cLayer);\n\t\t//\t\t\t\t});\n\t\t//\t\t\t})\n\t\t//\n\t\t//\t\t});\n\t}\n\n\n\ttoggleBaseLayer(layer: any): void {\n\t\tthis.baseLayers.forEach(bl => {\n\t\t\tbl.active = false;\n\t\t})\n\t\t\n\t\tlayer.active = true;\n\n\t\tthis.baseLayerChange.emit(layer);\n\t}\n\n}\n","\n<div class=\"layer-toggle\" (mouseenter)=\"baselayerIconHover = true\" (mouseleave)=\"baselayerIconHover = false\">\n\n  <i class=\"fa fa-bars\" *ngIf=\"!baselayerIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n  <div [hidden]=\"!baselayerIconHover\">\n\n    <div style=\"margin-bottom: 10px;\">\n      <h4>\n        <localize key=\"explorer.base.layers.label\"></localize>\n      </h4>\n      <div class=\"row-form\" *ngFor=\"let baseLayer of baseLayers\">\n        <input class=\"layer-toggle-input\" type='radio' name='baselayers' [value]='baseLayer.id' [checked]=\"baseLayer.selected\" (change)=\"toggleBaseLayer(baseLayer)\">\n        <label class=\"layer-toggle-label\"><localize [key]=\"baseLayer.label\"></localize></label>\n      </div>\n    </div>\n    <div>\n      <div *ngIf=\"hasEnabledContextLayers()\">\n        <h4>\n          <localize key=\"explorer.context.layers.label\"></localize>\n        </h4>\n        <div class=\"list-group\">\n          <div *ngFor=\"let cLayerGroup of contextLayerGroups;\">\n            <div *ngIf=\"groupHasEnabledContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n              <label>{{ cLayerGroup.displayLabel }}</label>\n              <div class=\"list-group\">\n                <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                  <div class=\"list-group-item\" style=\"border: none;\" *ngIf=\"cLayer.enabled\">\n                    <input type=\"checkbox\" [checked]=\"cLayer.active\" (click)=\"toggleContextLayer(cLayer)\"> {{ cLayer.displayLabel }} <i class=\"fa fa-times delete-btn clickable\" aria-hidden=\"true\" (click)=\"removeContextLayer(cLayer)\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <button class=\"btn btn-primary\" (click)=\"addContextLayerModal()\">+ <localize key=\"explorer.add.context.layer.button.label\"></localize></button>\n    </div>\n\n  </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, GeoObjectOverTime, Attribute, HierarchyOverTime, ValueOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorModalComponent, ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\n@Component({\n\tselector: 'feature-panel',\n\ttemplateUrl: './feature-panel.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class FeaturePanelComponent implements OnInit {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY',\n\t\tGEOMETRY: 'GEOMETRY'\n\t}\n\n\t@Input() datasetId: string;\n\n\t@Input() type: GeoObjectType;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() readOnly: boolean = false;\n\n\t@Input() set code(value: string) {\n\t\tthis.updateCode(value);\n\t}\n\n\t_code: string = null;\n\n\t@Input() geometryChange: Subject<any>;\n\n\t@Output() geometryEdit = new EventEmitter<ValueOverTime>();\n\t@Output() featureChange = new EventEmitter<GeoObjectOverTime>();\n\t@Output() modeChange = new EventEmitter<boolean>();\n\t\n\tisValid: boolean = true;\n\n\tbsModalRef: BsModalRef;\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\t// The current state of the GeoObject in the GeoRegistry\n\tpreGeoObject: GeoObjectOverTime;\n\n\t// The state of the GeoObject after our edit has been applied\n\tpostGeoObject: GeoObjectOverTime;\n\n\tattribute: Attribute = null;\n\n\tisNew: boolean = false;\n\n\tisEdit: boolean = false;\n\n\thierarchies: HierarchyOverTime[];\n\n\thierarchy: HierarchyOverTime = null;\n\t\n\treason: string = \"\";\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private authService: AuthService) {\n\t}\n\n\tngOnInit(): void {\n\t  this.isMaintainer = this.authService.isAdmin() || this.authService.isGeoObjectTypeRM(this.type.organizationCode, this.type.code);\n\t\tthis.mode = 'ATTRIBUTES';\n\t\tthis.geometryChange.subscribe(v => {\n\t\t\tthis.updateGeometry(v);\n\t\t});\n\t}\n\t\n\tsetValid(valid: boolean): void {\n\t\tthis.isValid = valid;\n\t}\n\n\tupdateCode(code: string): void {\n\t\tthis._code = code;\n\t\tthis.postGeoObject = null;\n\t\tthis.preGeoObject = null;\n\t\tthis.hierarchies = null;\n\t\tthis.setEditMode(false);\n\n\t\tif (code != null && this.type != null) {\n\n\t\t\tif (code !== '__NEW__') {\n\t\t\t\tthis.isNew = false;\n\n\t\t\t\tthis.service.getGeoObjectOverTime(code, this.type.code).then(geoObject => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(geoObject)).attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t\tthis.service.getHierarchiesForGeoObject(code, this.type.code).then((hierarchies: HierarchyOverTime[]) => {\n\t\t\t\t\tthis.hierarchies = hierarchies;\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.isNew = true;\n\n\t\t\t\tthis.service.newGeoObjectOverTime(this.type.code).then(retJson => {\n\t\t\t\t\tthis.preGeoObject = new GeoObjectOverTime(this.type, retJson.geoObject.attributes);\n\t\t\t\t\tthis.postGeoObject = new GeoObjectOverTime(this.type, JSON.parse(JSON.stringify(this.preGeoObject)).attributes);\n\n\t\t\t\t\tthis.hierarchies = retJson.hierarchies;\n\t\t\t\t\tthis.setEditMode(true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\t\n\n\tonEditGeometryVersion(vot: ValueOverTime): void {\n\t\tthis.geometryEdit.emit(vot);\n\t}\n\n\tupdateGeometry(geometry: any): void {\n\t\t// Check if the geometry has been updated\n\t\tif (geometry != null && this.postGeoObject != null) {\n\n\t\t\tlet values = this.postGeoObject.attributes['geometry'].values;\n\t\t\tconst time = this.forDate.getTime();\n\n\t\t\tvalues.forEach(vot => {\n\n\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tvot.value = geometry;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tcalculateGeometry(goot: GeoObjectOverTime): any {\n\n\t\tconst time = this.forDate.getTime();\n\n\t\tlet values = goot.attributes['geometry'].values;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst vot = values[i];\n\n\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\treturn vot.value;\n\t\t\t}\n\t\t};\n\n\t\treturn null;\n\t}\n\n\tonCancel(): void {\n\n\t\tif (this._code === '__NEW__') {\n\t\t\tthis.updateCode(null);\n\t\t}\n\t\telse {\n\t\t\tthis.updateCode(this._code);\n\t\t}\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.applyGeoObjectEdit(this.hierarchies, this.postGeoObject, this.isNew, this.datasetId, this.reason).then(() => {\n\t\t\tthis.featureChange.emit(this.postGeoObject);\n\n\t\t\tthis.updateCode(this._code);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonManageAttributeVersion(attribute: Attribute): void {\n\t\tthis.attribute = attribute;\n\t\tthis.mode = this.MODE.VERSIONS;\n\t}\n\n\tonManageHiearchyVersion(hierarchy: HierarchyOverTime): void {\n\t\tthis.hierarchy = hierarchy;\n\t\tthis.mode = this.MODE.HIERARCHY;\n\t}\n\n\tonAttributeChange(postGeoObject: GeoObjectOverTime): void {\n\t\t\n\t\tthis.postGeoObject = postGeoObject;\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\n\t\tthis.geometryEdit.emit(null);\n\t}\n\n\tonHierarchyChange(hierarchy: HierarchyOverTime): void {\n\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\tif (index !== -1) {\n\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t}\n\n\t\tthis.mode = this.MODE.ATTRIBUTES;\n\t}\n\n\tonEditAttributes(): void {\n\t\tthis.setEditMode(!this.isEdit);\n\t}\n\n\tsetEditMode(value: boolean): void {\n\t\tthis.isEdit = value;\n\t\tthis.reason = null;\n\n\t\tthis.modeChange.emit(this.isEdit)\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <div *ngIf=\"mode == MODE.ATTRIBUTES && postGeoObject != null\">\n    <!-- Attributes tab -->\n    <geoobject-shared-attribute-editor \n      #attributeEditor \n      [geoObjectType]=\"type\" \n      [preGeoObject]=\"preGeoObject\" \n      [postGeoObject]=\"postGeoObject\" \n      [forDate]=\"this.forDate\" \n      [isNew]=\"isNew\" \n      [isEditingGeometries]=\"false\" \n      [customEvent]=\"true\"\n      (onManageVersion)=\"onManageAttributeVersion($event)\" \n      (onChange)=\"onAttributeChange($event)\" \n      [readOnly]=\"!isEdit\"\n      [animate]=true\n      (valid)=\"setValid($event)\"\n      > \n    </geoobject-shared-attribute-editor>\n    \n    <div *ngIf=\"isEdit\" class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <h4 style=\"margin:0;\">\n          <localize key=\"explorer.geometry.section\"></localize>\n        </h4>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"button-holder text-left\" style=\"margin:0;\">\n          <button type=\"submit\" style=\"width:100%;\" (click)=\"this.mode = this.MODE.GEOMETRY\" class=\"btn btn-primary\" role=\"button\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"hierarchies != null\">\n      <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"this.forDate\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEdit\" (onManageVersion)=\"onManageHiearchyVersion($event)\"> </tree-geo-selector>\n    </div>\n    \n    <div *ngIf=\"isEdit && !isMaintainer\" class=\"form-group\" style=\"z-index: 0;\">\n      <label> \n        <localize key=\"change.request.reason.label\"></localize>\n      </label>\n      <textarea rows=\"4\" cols=\"50\" [(ngModel)]=\"reason\" class=\"form-control\" name=\"reason-input\" required></textarea>\n    </div>\n\n    <div class=\"button-holder text-right\" style=\"margin-bottom: 20px;\">\n      <button *ngIf=\"!readOnly && !isEdit\" type=\"submit\" (click)=\"onEditAttributes()\" class=\"btn btn-primary\" style=\"width:100%;\" role=\"button\">\n        <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n      </button>\n      \n      <button *ngIf=\"isEdit\" type=\"button\" class=\"btn btn-default\" (click)=\"onCancel()\">\n        <localize key=\"modal.button.cancel\"></localize>\n      </button>\n      <button *ngIf=\"isEdit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || (!isMaintainer && (!reason || (reason && reason.trim().length === 0)))\">\n        <localize [key]=\"!isMaintainer ? 'change.request.page.title' : 'modal.button.submit'\"></localize>\n      </button>\n\n    </div>\n  </div>\n  <div *ngIf=\"mode == MODE.VERSIONS && attribute != null\">\n    <!-- Attributes tab -->\n    <manage-versions \n      [attribute]=\"attribute\"\n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\">\n    </manage-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.HIERARCHY && hierarchy != null\">\n    <!-- Attributes tab -->\n    <manage-parent-versions \n      [hierarchy]=\"hierarchy\"\n      (onChange)=\"onHierarchyChange($event)\">\n    </manage-parent-versions>\n  </div>\n  <div *ngIf=\"mode == MODE.GEOMETRY\">\n    <!-- Attributes tab -->\n    <geometry-panel \n      [geoObjectType]=\"type\"\n      [geoObjectOverTimeInput]=\"postGeoObject\"\n      [isNewGeoObject]=\"false\"\n      (onChange)=\"onAttributeChange($event)\"\n      (onEdit)=\"onEditGeometryVersion($event)\">\n    </geometry-panel>\n  </div>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { RegistryService, HierarchyService } from '@registry/service';\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\n\n@Component({\n\tselector: 'create-hierarchy-type-modal',\n\ttemplateUrl: './create-hierarchy-type-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateHierarchyTypeModalComponent implements OnInit {\n\n\thierarchyType: HierarchyType;\n\torganizations: any = [];\n\tmessage: string = null;\n\n\tedit: boolean = false; // if true, we are updating an existing. If false, we are creating new\n\n\treadOnly: boolean = false;\n\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onHierarchytTypeCreate: Subject<HierarchyType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, private hierarchyService: HierarchyService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onHierarchytTypeCreate = new Subject();\n\n\t\tthis.hierarchyType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"rootGeoObjectTypes\": [],\n\t\t\t\"organizationCode\": \"\"\n\t\t};\n\n\t\tthis.registryService.getOrganizations().then(orgs => {\n\n\t\t\t// Filter out organizations they're not RA's of, unless we're readOnly.\n\t\t\tif (!this.readOnly) {\n\t\t\t\tthis.organizations = [];\n\n\t\t\t\tfor (var i = 0; i < orgs.length; ++i) {\n\t\t\t\t\tif (this.auth.isOrganizationRA(orgs[i].code)) {\n\t\t\t\t\t\tthis.organizations.push(orgs[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.organizations = orgs;\n\t\t\t}\n\n\t\t\tif (!this.edit && this.organizations.length === 1) {\n\t\t\t\tthis.hierarchyType.organizationCode = this.organizations[0].code;\n\t\t\t\tthis.organizationLabel = this.organizations[0].label.localizedValue;\n\t\t\t}\n\t\t\telse if (this.edit || this.readOnly) {\n\t\t\t\tthis.organizationLabel = this.getOrganizationLabelFromCode(this.hierarchyType.organizationCode);\n\t\t\t}\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tgetOrganizationLabelFromCode(orgCode: string) {\n\t\tfor (var i = 0; i < this.organizations.length; ++i) {\n\t\t\tif (this.organizations[i].code === orgCode) {\n\t\t\t\treturn this.organizations[i].label.localizedValue;\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(\"Did not find org with code [\" + orgCode + \"]\");\n\t\treturn orgCode;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tif (this.readOnly) {\n\t\t\tthis.bsModalRef.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.edit) {\n\t\t\tconsole.log(this.hierarchyType);\t\t\t\n\t\t\t\n\t\t\tthis.hierarchyService.updateHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.hierarchyService.createHierarchyType(JSON.stringify(this.hierarchyType)).then(data => {\n\t\t\t\tthis.onHierarchytTypeCreate.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<form>\n\n  <div class=\"modal-body\">\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n      <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"heading text-center\">\n          <h1>\n            <localize key=\"hierarchy.management.create.hierarchy.title\"></localize> \n          </h1>\n        </div> \n        \n      <div class=\"form-group\">\n        <label for=\"codeInput\">\n          <localize key=\"data.property.label.code\"></localize>\n        </label>\n        <input [(ngModel)]=\"hierarchyType.code\" name=\"code\" type=\"input\" class=\"form-control\" id=\"codeInput\"\n          [disabled]=\"edit || readOnly\" required>\n      </div>\n      <div class=\"form-group\" *ngFor=\"let localeValue of hierarchyType.label.localeValues\">\n        <label for=\"labelInput\">\n          <localize key=\"data.property.label.label\"></localize> \n          <span  style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n        </label>\n        <input [disabled]=\"readOnly\" [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\"\n          required>\n      </div>\n      \n      <localized-text [(value)]=\"hierarchyType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\" [disabled]=\"readOnly\"></localized-text>\n\n      <div class=\"form-group\">\n        <label for=\"organization\">\n          <localize key=\"attribute.organization.label\"></localize>\n        </label>\n        <select *ngIf=\"!edit && organizations.length > 1\" [disabled]=\"edit || readOnly\" class=\"select-area\" name=\"organization\"\n          [(ngModel)]=\"hierarchyType.organizationCode\" required>\n          <option></option>\n          <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label.localizedValue}}</option>\n        </select>\n        <span *ngIf=\"!edit && organizations.length == 1\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n        <span *ngIf=\"edit\" class=\"text\"><input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.progress\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.progress\" name=\"progress\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.acknowledgement\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.acknowledgement\" name=\"acknowledgement\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.disclaimer\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.disclaimer\" name=\"disclaimer\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.accessConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.accessConstraints\" name=\"accessConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.useConstraints\"></localize></label>\n        <textarea [(ngModel)]=\"hierarchyType.useConstraints\" name=\"useConstraints\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\"></textarea>\n      </div>\n      \n      <hr/>\n      \n      <div class=\"form-group\">\n        <h4>\n          <localize key=\"masterlist.contact\"></localize>\n        </h4>\n      </div>\n      \n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.contact\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.contact\" name=\"contact\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.phoneNumber\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.phoneNumber\" name=\"phoneNumber\" type=\"text\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>\n\n      <div class=\"form-group\">\n        <label><localize key=\"data.property.label.email\"></localize></label>\n        <input [(ngModel)]=\"hierarchyType.email\" name=\"email\" type=\"email\" class=\"form-control\" [disabled]=\"readOnly\">\n      </div>      \n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readOnly\" type=\"submit\" [disabled]=\"hierarchyType.code.length < 1 || form.invalid\" class=\"btn btn-primary\"\n              (click)=\"handleOnSubmit()\" style=\"padding: 4px 18px;\">\n              <localize key=\"modal.button.ok\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { Organization } from '@shared/model/core';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\n@Component({\n\tselector: 'create-geoobjtype-modal',\n\ttemplateUrl: './create-geoobjtype-modal.component.html',\n\tstyleUrls: []\n})\nexport class CreateGeoObjTypeModalComponent implements OnInit {\n\n\tgeoObjectType: GeoObjectType;\n\torganization: Organization = null;\n\tmessage: string = null;\n\tparents: GeoObjectType[];\n\thierarchyType: HierarchyType;\n\torganizationLabel: string;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onGeoObjTypeCreate: Subject<GeoObjectType>;\n\n\tconstructor(private lService: LocalizationService, private auth: AuthService, private registryService: RegistryService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjTypeCreate = new Subject();\n\n\t\tthis.geoObjectType = {\n\t\t\t\"code\": \"\",\n\t\t\t\"label\": this.lService.create(),\n\t\t\t\"description\": this.lService.create(),\n\t\t\t\"geometryType\": \"MULTIPOINT\",\n\t\t\t\"isLeaf\": false,\n\t\t\t\"isGeometryEditable\": true,\n\t\t\t\"organizationCode\": \"\",\n\t\t\t\"attributes\": [],\n\t\t};\n\t}\n\n\tinit(organization: Organization, parents: GeoObjectType[], groupSuperType: GeoObjectType, isAbstract: boolean) {\n\n\t\tthis.geoObjectType.isAbstract = isAbstract ? isAbstract : false;\n\n\t\tif (groupSuperType) {\n\t\t\tthis.geoObjectType.superTypeCode = groupSuperType.code;\n\t\t\tthis.geoObjectType.geometryType = groupSuperType.geometryType;\n\t\t\tthis.geoObjectType.isPrivate = groupSuperType.isPrivate;\n\t\t}\n\n\t\t// Filter out parents that are not abstract\n\t\tthis.parents = parents.filter(parent => parent.isAbstract);\n\n\t\t// Filter out organizations they're not RA's of\n\t\tthis.organization = organization;\n\t\tthis.geoObjectType.organizationCode = this.organization.code;\n\t\tthis.organizationLabel = this.organization.label.localizedValue;\n\t}\n\n\thandleOnSubmit(): void {\n\t\tthis.message = null;\n\n\t\tthis.registryService.createGeoObjectType(JSON.stringify(this.geoObjectType)).then(data => {\n\t\t\tthis.onGeoObjTypeCreate.next(data);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\ttoggleIsLeaf(): void {\n\t\tthis.geoObjectType.isLeaf = !this.geoObjectType.isLeaf;\n\t}\n\n\ttoggleIsGeometryEditable(): void {\n\t\tthis.geoObjectType.isGeometryEditable = !this.geoObjectType.isGeometryEditable;\n\t}\n\n\ttoggleIsAbstract(): void {\n\t\tthis.geoObjectType.isAbstract = !this.geoObjectType.isAbstract;\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"form.valid && handleOnSubmit()\" class=\"modal-form\">\n\n  <div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize *ngIf=\"geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.group.title\"></localize> \n        <localize *ngIf=\"!geoObjectType.isAbstract\" key=\"hierarchy.management.create.geoobjecttype.title\"></localize> \n      </h1>\n    </div> \n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <div>\n            <label for=\"codeInput\">\n              <localize key=\"data.property.label.code\"></localize>\n            </label>\n            <input [(ngModel)]=\"geoObjectType.code\" name=\"code\" type=\"text\" class=\"form-control\" id=\"codeInput\"\n              required>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\" *ngFor=\"let localeValue of geoObjectType.label.localeValues\">\n          <label>\n            <localize key=\"data.property.label.label\"></localize> \n            <span style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span>\n          </label>\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\"\n            class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <localized-text [(value)]=\"geoObjectType.description\" key=\"data.property.label.description\" [inlinelayout]=\"true\"></localized-text>\n      </div>\n    </div>\n    \n    <div class=\"row\" *ngIf=\"!geoObjectType.superTypeCode\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <label style=\"display: block;\">\n            <localize key=\"attribute.group.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n        \n          <label style=\"display: block;\">\n            <localize key=\"geoObjectType.attr.visibility.label\"></localize> \n          </label>\n          <div class=\"check-block\">\n            <boolean-field [disable]=\"geoObjectType.superTypeCode != null\" [(value)]=\"geoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"geometryType\">\n            <localize key=\"data.property.label.geometryType\"></localize>\n          </label>\n          <select class=\"select-area\" name=\"geometryType\" [(ngModel)]=\"geoObjectType.geometryType\" required [disabled]=\"geoObjectType.superTypeCode != null && geoObjectType.superTypeCode != ''\">\n            <option></option>\n            <!-- <option value=\"POINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"LINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"POLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n            <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.multipoint\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.multiline\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.multipolygon\"></localize>\n            </option> -->\n             <option value=\"MULTIPOINT\">\n              <localize key=\"georegistry.geometry.point\"></localize>\n            </option>\n            <option value=\"MULTILINE\">\n              <localize key=\"georegistry.geometry.line\"></localize>\n            </option>\n            <option value=\"MULTIPOLYGON\">\n              <localize key=\"georegistry.geometry.polygon\"></localize>\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <!-- \n    <div class=\"form-group\">\n      <div >\n        <div class=\"check-block\" style=\"display:inline-block;\">\n         <div (click)=\"toggleIsLeaf()\" [ngClass]=\"{'chk-checked' : geoObjectType.isLeaf}\" style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n          <span></span>\n         </div>\n    \n         <label class=\"checkbox-label\" style=\"line-height: normal;\"> <localize key=\"hierarchy.management.option.label.isLeafNode\"></localize></label>\n        </div>\n       </div>\n    </div>\n -->\n\n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"margin-bottom: 15px;\">\n        <div class=\"form-group\">\n          <div class=\"check-block\">\n            <div (click)=\"toggleIsGeometryEditable()\" [ngClass]=\"{'chk-checked' : geoObjectType.isGeometryEditable}\"\n              style=\"margin:0;\" class=\"jcf-unselectable chk-area\">\n              <span></span>\n            </div>\n\n            <label class=\"checkbox-label\">\n              <localize key=\"hierarchy.management.option.label.isGeometryEditable\"></localize>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"organization\">\n            <localize key=\"attribute.organization.label\"></localize>\n          </label>\n          <span class=\"text\">\n            <input type=\"text\" name=\"organization\" [(ngModel)]=\"organizationLabel\" disabled required>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-primary\">\n            <localize key=\"modal.button.ok\"></localize>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyService, GeoObjectTypeManagementService } from '@registry/service';\n\n\n@Component({\n\tselector: 'manage-geoobjecttype-modal',\n\ttemplateUrl: './manage-geoobjecttype-modal.component.html',\n\tstyleUrls: ['./manage-geoobjecttype-modal.css']\n})\nexport class ManageGeoObjectTypeModalComponent implements OnInit {\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": \"\", \"termOption\": \"\" };\n\tmodalStateSubscription: Subscription;\n\tgeoObjectType: GeoObjectType;\n\tpublic onGeoObjectTypeSubmitted: Subject<GeoObjectType>;\n\treadOnly: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, geoObjectTypeManagementService: GeoObjectTypeManagementService) {\n\t\tthis.modalStateSubscription = geoObjectTypeManagementService.modalStepChange.subscribe(modalState => {\n\t\t\tthis.modalState = modalState;\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onGeoObjectTypeSubmitted = new Subject();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.modalStateSubscription.unsubscribe();\n\t}\n\n\tonModalStateChange(state: any): void {\n\t\tthis.modalState = state;\n\t}\n\n\tonGeoObjectTypeChange(data: any): void {\n\t\t// send persisted geoobjecttype to the parent calling component (hierarchy.component) so the \n\t\t// updated GeoObjectType can be reflected in the template\n\t\tthis.onGeoObjectTypeSubmitted.next(data);\n\t}\n\n\tupdate(): void {\n\n\t}\n\n\tclose(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","\n<form>\n\n  <modal-step-indicator></modal-step-indicator>\n\n  <geoobjecttype-input *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\" [readOnly]=\"readOnly\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\" [geoObjectType]=\"geoObjectType\" [setGeoObjectType]=\"geoObjectType\"></geoobjecttype-input>\n\n  <manage-attributes-modal *ngIf=\"modalState.state === 'MANAGE-ATTRIBUTES'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></manage-attributes-modal>\n\n  <define-attribute-modal-content *ngIf=\"modalState.state === 'DEFINE-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></define-attribute-modal-content>\n\n  <edit-attribute-modal-content *ngIf=\"modalState.state === 'EDIT-ATTRIBUTE'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" (geoObjectTypeChange)=\"onGeoObjectTypeChange($event)\"></edit-attribute-modal-content>\n\n  <manage-term-options *ngIf=\"modalState.state === 'MANAGE-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\"></manage-term-options>\n\n  <edit-term-option-input *ngIf=\"modalState.state === 'EDIT-TERM-OPTION'\" [geoObjectType]=\"geoObjectType\" [attribute]=\"modalState.attribute\" [termOption]=\"modalState.termOption\"></edit-term-option-input>\n\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { StepConfig } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component( {\n    selector: 'geoobjecttype-input',\n    templateUrl: './geoobjecttype-input.component.html',\n    styleUrls: ['./geoobjecttype-input.css']\n} )\nexport class GeoObjectTypeInputComponent implements OnInit {\n\n    @Input() readOnly: boolean = false;\n    @Input() geoObjectType: GeoObjectType;\n    @Output() geoObjectTypeChange:  EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n    editGeoObjectType: GeoObjectType;\n    \n    organizationLabel: string;\n    \n    @Input('setGeoObjectType') \n    set in(geoObjectType: GeoObjectType){\n        if(geoObjectType){\n          this.editGeoObjectType = JSON.parse(JSON.stringify(geoObjectType));\n        //   this.geoObjectType = geoObjectType;\n        }\n    }\n    message: string = null;\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\":\"\", \"termOption\":\"\"};\n\n    modalStepConfig: StepConfig = {\"steps\": [\n        {\"label\":this.localizationService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\":true, \"enabled\":true}\n    ]};\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, \n        private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, \n        private localizationService: LocalizationService, private registryService: RegistryService ) {\n    \n    }\n\n    ngOnInit(): void {\n\n        this.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n        this.geoObjectTypeManagementService.setModalState(this.modalState);\n        \n        this.fetchOrganizationLabel();\n    }\n\n    fetchOrganizationLabel(): void {\n        \n      this.registryService.getOrganizations().then(orgs => {\n      \n        for (var i = 0; i < orgs.length; ++i)\n        {\n          if (orgs[i].code === this.editGeoObjectType.organizationCode)\n          {\n            this.organizationLabel = orgs[i].label.localizedValue;\n          }\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n      });\n    }\n\n    manageAttributes(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageAttributes, \"attribute\":\"\", \"termOption\":\"\"})\n    }\n\n    onModalStateChange(state: ManageGeoObjectTypeModalState): void {\n        this.modalState = state;\n    }\n\n    update(): void {\n        this.registryService.updateGeoObjectType( this.editGeoObjectType ).then( geoObjectType => {\n\n            // emit the persisted geoobjecttype to the parent widget component (manage-geoobjecttype.component)\n            // so that the change can be updated in the template\n            this.geoObjectTypeChange.emit(geoObjectType);\n\n            this.close();\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // resetGeoObjectType(): void {\n    //     this.geoObjectType = this.geoObjectTypeOriginal;\n    // }\n\n    close(): void {\n        // this.resetGeoObjectType();\n        this.bsModalRef.hide();\n    }\n\n\n    isValid(): boolean {\n        // if(this.attribute.code && this.attribute.label) {\n\n        //     // if code has a space\n        //     if(this.attribute.code.indexOf(\" \") !== -1){\n        //         return false;\n        //     }\n\n        //     // If label is only spaces\n        //     if(this.attribute.label.replace(/\\s/g, '').length === 0) {\n        //         return false\n        //     }\n\n        //     return true;\n        // }\n        \n        // return false;\n\n        return true;\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","\n<div class=\"modal-body\" *ngIf=\"modalState.state === 'MANAGE-GEO-OBJECT-TYPE'\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"editGeoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading text-center\">\n            <h1>\n                <localize key=\"hierarchy.management.edit.geoobjecttype.title\"></localize>\n                : {{editGeoObjectType.label.localizedValue}}\n            </h1>\n        </div>\n        <fieldset>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.code\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"editGeoObjectType.code\" name=\"code\" disabled required>\n                    </span>\n                </div>\n            </div>\n            \n            <localized-input [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.label\" key=\"data.property.label.label\"></localized-input>\n            <localized-text [disabled]=\"readOnly\" [(value)]=\"editGeoObjectType.description\" key=\"data.property.label.description\"></localized-text>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"attribute.group.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"true\" [(value)]=\"geoObjectType.isAbstract\" [localizeLabelKey]=\"'attribute.isAbstract.label'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"geoObjectType.attr.visibility.label\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <boolean-field [disable]=\"geoObjectType.superTypeCode\" [(value)]=\"editGeoObjectType.isPrivate\" [localizeLabelKey]=\"'geoObjectType.attr.isPrivate'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\" *ngIf=\"!geoObjectType.isAbstract && geoObjectType.superTypeCode\">\n                <div class=\"label-holder\">\n                    <localize key=\"attribute.parentType.label\"></localize>\n                </div>\n                <div class=\"holder\">\n                    <span class=\"text\"> \n                        {{geoObjectType.superTypeCode}}\n                    </span>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"data.property.label.geometryType\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <select name=\"geometryType\" [(ngModel)]=\"editGeoObjectType.geometryType\" disabled>\n                        <option></option>\n                         <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <!-- <option value=\"POINT\"><localize key=\"georegistry.geometry.point\"></localize></option>\n                        <option value=\"LINE\"><localize key=\"georegistry.geometry.line\"></localize></option>\n                        <option value=\"POLYGON\"><localize key=\"georegistry.geometry.polygon\"></localize></option>\n                        <option value=\"MULTIPOINT\"><localize key=\"georegistry.geometry.multipoint\"></localize></option>\n                        <option value=\"MULTILINE\"><localize key=\"georegistry.geometry.multiline\"></localize></option>\n                        <option value=\"MULTIPOLYGON\"><localize key=\"georegistry.geometry.multipolygon\"></localize></option> -->\n                    </select>\n                </div>\n            </div>\n\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.option.label.geometryEditable\"></localize></label>\n                </div>\n                <div class=\"holder\">\n\n                    <boolean-field [disable]=\"readOnly\" [(value)]=\"editGeoObjectType.isGeometryEditable\" [localizeLabelKey]=\"'hierarchy.management.option.label.isGeometryEditable'\"></boolean-field>\n                </div>\n            </div>\n            \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"attribute.organization.label\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\"> <input type=\"text\" [(ngModel)]=\"organizationLabel\" name=\"organization\" disabled required></span>\n              </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                    <label><localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize></label>\n                </div>\n                <div class=\"holder\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <ul class=\"list-group list-group-flush\">\n                                <li *ngFor=\"let attr of editGeoObjectType.attributes\" class=\"list-group-item\">{{attr.label.localizedValue}}</li>\n                            </ul>\n\n                            <button [disabled]=\"readOnly || geoObjectType.superTypeCode\" type=\"button\" class=\"btn btn-primary full-width\" (click)=\"manageAttributes()\">\n                                <localize key=\"modal.button.manageAttributes\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.cancel\"></localize>\n                        </button>\n                        <button *ngIf=\"!readOnly\" type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"update()\">\n                            <localize key=\"modal.button.submit\"></localize>\n                        </button>\n                    </div>\n                </div>\n        </fieldset>\n    </form>\n</div>\n\n<!-- </form> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService, HierarchyService } from '@registry/service';\n\n@Component({\n\tselector: 'manage-attributes-modal',\n\ttemplateUrl: './manage-attributes-modal.component.html',\n\tstyleUrls: ['./manage-attributes-modal.css']\n})\nexport class ManageAttributesModalComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute = null;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": this.attribute, \"termOption\": \"\" };\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n\tpublic onDeleteAttribute: Subject<boolean>;\n\n\tconstructor(public bsModalRef: BsModalRef, public confirmBsModalRef: BsModalRef, private modalService: BsModalService, private localizeService: LocalizationService,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onDeleteAttribute = new Subject();\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.onDeleteAttribute.unsubscribe();\n\t}\n\n\tdefineAttributeModal(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\teditAttribute(attr: Attribute, e: any): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": attr, \"termOption\": \"\" })\n\t}\n\n\tremoveAttributeType(attr: Attribute, e: any): void {\n\n\t\tthis.confirmBsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.confirmBsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + attr.label.localizedValue + ']';\n\t\tthis.confirmBsModalRef.content.data = { 'attributeType': attr, 'geoObjectType': this.geoObjectType };\n\t\tthis.confirmBsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.confirmBsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.confirmBsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteAttributeType(data.geoObjectType.code, data.attributeType);\n\t\t});\n\t}\n\n\tdeleteAttributeType(geoObjectTypeCode: string, attr: Attribute): void {\n\n\t\tthis.registryService.deleteAttributeType(geoObjectTypeCode, attr.code).then(data => {\n\t\t\tthis.onDeleteAttribute.next(data);\n\n\t\t\tif (data) {\n\t\t\t\tthis.geoObjectType.attributes.splice(this.geoObjectType.attributes.indexOf(attr), 1);\n\t\t\t}\n\t\t\t\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageGeoObjectType, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #form=\"ngForm\" *ngIf=\"geoObjectType\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <div class=\"heading\">\n            <h1>\n                <localize key=\"hierarchy.management.manage.attributes.title\"></localize> {{geoObjectType.label.localizedValue}}</h1>\n        </div>\n        <fieldset>\n\n            <div>\n                <div class=\"label-holder\">\n                    <label>\n                        <localize key=\"hierarchy.management.manage.attributes.label.displayAttributes\"></localize>\n                    </label>\n                </div>\n                <div class=\"holder dataset-attr-holder\">\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <localize key=\"data.property.label.label\"></localize>\n                                    </th>\n                                    <th class=\"button-column-header\">\n                                        <localize key=\"data.property.label.actions\"></localize>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let attr of geoObjectType.attributes\">\n                                    <td>{{attr.label.localizedValue}}</td>\n                                    <td class=\"button-column\">\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\"\n                                            [title]=\"'modal.button.edit' | localize\"></a>\n                                        <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\"\n                                            [title]=\"'modal.button.remove' | localize\"></a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <!-- <table class=\"list-table table table-bordered table-striped\">\n                        <tbody>\n                        <tr *ngFor=\"let attr of geoObjectType.attributes\" class=\"fade-ngRepeat-item\">\n                            <td class=\"button-column\">\n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editAttribute(attr, $event)\" title=\"<localize key='modal.button.edit'></localize>\"></a>                             \n                            <a *ngIf=\"!attr.isDefault && attr.code !== 'keyName'\" class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeAttributeType(attr, $event)\" title=\"<localize key='modal.button.remove'></localize>\"></a>\n                            </td>                  \n                            <td class=\"submit-form\">\n                            <dl>\n                                <dd>\n                                <h4 class=\"disabled\" >{{attr.label}}</h4>\n                                </dd>\n                            </dl>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table> -->\n                </div>\n            </div>\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <i class=\"fa fa-plus clickable\" style=\"font-size:20px;margin:10px 0 10px 0;\" aria-hidden=\"true\" (click)=\"defineAttributeModal()\">\n                        <localize key=\"modal.button.add\"></localize>\n                    </i>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n\n</div>\n\n","import { Component, OnInit, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { GeoObjectType, Attribute, AttributeTerm, AttributeDecimal, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n@Component({\n\tselector: 'define-attribute-modal-content',\n\ttemplateUrl: './define-attribute-modal-content.component.html',\n\tstyleUrls: ['./define-attribute-modal-content.css']\n})\nexport class DefineAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tnewAttribute: Attribute = null;\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.create.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.defineAttribute, \"attribute\": \"\", \"termOption\": \"\" };\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.setAttribute(\"character\");\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit(): void {\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tthis.attributeInputComponent.animate();\n\t\t}\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.addAttributeType(this.geoObjectType.code, this.newAttribute).then(data => {\n\t\t\tthis.geoObjectType.attributes.push(data);\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tsetAttribute(type: string): void {\n\t\tif (type === 'term') {\n\t\t\tthis.newAttribute = new AttributeTerm(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse if (type === 'float') {\n\t\t\tthis.newAttribute = new AttributeDecimal(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t\telse {\n\t\t\tthis.newAttribute = new Attribute(\"\", type, this.localizeService.create(), this.localizeService.create(), false, false, false, true);\n\t\t}\n\t}\n\n\tisFormValid(): boolean {\n\n\t\tlet isAttrValid: boolean = false;\n\n\t\tif (this.attributeInputComponent) {\n\t\t\tisAttrValid = this.attributeInputComponent.isValid();\n\t\t}\n\n\t\tif (isAttrValid) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <!-- <error-message [message]=\"message\"></error-message> -->\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.define.attribute.title\"></localize>\n                    </h1>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\" style=\"margin-bottom: 20px;\">\n                        <div class=\"btn-group define-attribute-btns\">\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'character'}\" (click)=\"setAttribute('character')\">\n                                <localize key=\"data.type.label.text\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'integer'}\" (click)=\"setAttribute('integer')\">\n                                <localize key=\"data.type.label.integer\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'float'}\" (click)=\"setAttribute('float')\">\n                                <localize key=\"data.type.label.float\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'date'}\" (click)=\"setAttribute('date')\">\n                                <localize key=\"data.type.label.date\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'boolean'}\" (click)=\"setAttribute('boolean')\">\n                                <localize key=\"data.type.label.boolean\"></localize>\n                            </label>\n                            <label class=\"btn full-width-radio-button\" [ngClass]=\"{active: newAttribute.type === 'term'}\" (click)=\"setAttribute('term')\">\n                                <localize key=\"data.type.label.term\"></localize>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"false\" [excludeDescription]=\"false\" [isDecimal]=\"newAttribute.type === 'float' ? true : false\" [(attribute)]=\"newAttribute\"></attribute-input>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidatorFn, Validator, FormControl } from '@angular/forms';\n\n\n// validation function\nfunction validateGeoObjectAttributeCodeValidator() : ValidatorFn {\n  return (c: AbstractControl) => {\n    if(c.value){\n        let isValid = c.value.indexOf(\" \") === -1;\n        \n        if(isValid) {\n            return null;\n        } else {\n            return {\n                geoObjectAttributeCode: {\n                     valid: false\n                }\n            };\n        }\n    }\n\n  }\n}\n\n\n@Directive({\n  selector: '[geoObjectAttributeCode][ngModel]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: GeoObjectAttributeCodeValidator, multi: true }\n  ]\n})\nexport class GeoObjectAttributeCodeValidator implements Validator {\n  validator: ValidatorFn;\n  \n  constructor() {\n    this.validator = validateGeoObjectAttributeCodeValidator();\n  }\n  \n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n  \n}","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { GeoObjectType, Attribute, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\n\nimport { ErrorHandler } from '@shared/component';\nimport { StepConfig } from '@shared/model/modal';\n\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\nimport { AttributeInputComponent } from '../geoobjecttype-management/attribute-input.component';\n\n\n\n@Component({\n\tselector: 'edit-attribute-modal-content',\n\ttemplateUrl: './edit-attribute-modal-content.component.html',\n\tstyleUrls: ['./edit-attribute-modal-content.css']\n})\nexport class EditAttributeModalContentComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: Attribute = null;\n\t@Output() geoObjectTypeChange: EventEmitter<GeoObjectType> = new EventEmitter<GeoObjectType>();\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": true }\n\t\t]\n\t};\n\n\t@ViewChild(AttributeInputComponent) attributeInputComponent: AttributeInputComponent;\n\n\tconstructor(public bsModalRef: BsModalRef,\n\t\tprivate modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeType(this.geoObjectType.code, this.attribute).then(data => {\n\n\t\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; i++) {\n\t\t\t\tlet attr = this.geoObjectType.attributes[i];\n\t\t\t\tif (attr.code === data.code) {\n\t\t\t\t\tObject.assign(attr, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\n\t\t\tthis.geoObjectTypeChange.emit(this.geoObjectType);\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\tback(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageAttributes, \"attribute\": \"\", \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && handleOnSubmit()\">\n        <div class=\"\">\n            <div class=\"\">\n                <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n            \n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.attribute.title\"></localize>: {{attribute.label.localizedValue}}\n                    </h1>\n                    \n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'character'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.text\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'integer'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.integer\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'float'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.float\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'boolean'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.boolean\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'date'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.date\"></localize></h4>\n                    <h4 class=\"sub-title\" *ngIf=\"attribute.type === 'term'\"><localize key=\"hierarchy.management.edit.attribute.subtitle\"></localize>: <localize key=\"data.type.label.term\"></localize></h4>                    \n                </div>\n                \n                \n\n                <fieldset>\n\n                    <attribute-input [disableCodeField]=\"true\" [excludeDescription]=\"attribute.type === 'term' ? true : false\" [isDecimal]=\"attribute.type === 'float' ? true : false\" [(attribute)]=\"attribute\"></attribute-input>\n\n                    <!-- *ngIf=\"attribute.type === 'term' && isFormValid()\" -->\n                    <term-option-widget *ngIf=\"attribute.type === 'term' && isFormValid()\" [(attribute)]=\"attribute\" [geoObjectType]=\"geoObjectType\"></term-option-widget>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                        <!-- <div class=\"label-holder\"> \n                        </div> -->\n                        <!-- <div class=\"holder\"> -->\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!isFormValid()\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n    \n\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { GeoObjectType, AttributeTerm, GeoObjectTypeModalStates, ManageGeoObjectTypeModalState, Term} from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service/hierarchy.service';\nimport { GeoObjectTypeManagementService } from '@registry/service/geoobjecttype-management.service'\n\n@Component( {\n    selector: 'term-option-widget',\n    templateUrl: './term-option-widget.component.html',\n    styleUrls: ['./term-option-widget.css'],\n    animations: [\n        trigger('toggleInputs', [\n            state('none, void', \n                style({ 'opacity': 0})\n              ),\n              state('show', \n                style({ 'opacity': 1})\n              ),\n              transition('none => show', animate('300ms')),\n              transition('show => none', animate('100ms'))\n        ]),\n        trigger('openClose', \n            [\n            transition(\n                ':enter', [\n                style({ 'opacity': 0}),\n                animate('500ms', style({ 'opacity': 1}))\n                ]\n            ),\n            transition(\n                ':leave', [\n                style({ 'opacity': 1}),\n                animate('0ms', style({'opacity': 0})),\n                \n                ]\n            )]\n      )\n    ]\n} )\nexport class TermOptionWidgetComponent implements OnInit {\n\n    @Input() geoObjectType: GeoObjectType;\n    @Input() attribute: AttributeTerm = null;\n    @Output() attributeChange = new EventEmitter<AttributeTerm>();\n    message: string = null;\n    state: string = 'none';\n    modalState: ManageGeoObjectTypeModalState = {\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\":\"\"};\n\n    constructor( public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService ) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit() {\n        this.state = 'show';\n        this.cdr.detectChanges();\n    }\n\n    ngOnDestroy(){\n    \n    }\n\n    handleOnSubmit(): void {\n        \n    }\n\n    animate(): void {\n        this.state = \"none\";\n    }\n\n    onAnimationDone(event: AnimationEvent): void {\n        this.state = \"show\";\n    }\n\n    // isValid(): boolean {\n    //     if(this.termOption.code && this.termOption.code.length > 0 && this.termOption.label && this.termOption.label.length > 0){\n            \n    //         // If code has a space\n    //         if(this.termOption.code.indexOf(\" \") !== -1){\n    //             return false;\n    //         }\n\n    //         // If label is only spaces\n    //         if(this.termOption.label.replace(/\\s/g, '').length === 0) {\n    //             return false\n    //         }\n\n    //         return true;\n    //     }\n    //     else if(this.termOption.code && this.termOption.code.indexOf(\" \") !== -1){\n    //         return false;\n    //     }\n            \n    //     return false\n    // }\n\n    openAddTermOptionForm(): void {\n        this.geoObjectTypeManagementService.setModalState({\"state\":GeoObjectTypeModalStates.manageTermOption, \"attribute\":this.attribute, \"termOption\": \"\"})\n\n    }    \n}\n","<div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n\n    <div>\n        <div class=\"label-holder\">\n            <label>\n                <localize key=\"hierarchy.management.manage.attributes.label.displayTerms\"></localize>\n            </label>\n        </div>\n        <div class=\"holder\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <ul class=\"list-group list-group-flush\">\n                        <li *ngFor=\"let term of attribute.rootTerm.children\" class=\"list-group-item\">{{term.label.localizedValue}}</li>\n                    </ul>\n\n                    <button type=\"button\" class=\"btn btn-primary full-width\" (click)=\"openAddTermOptionForm()\">\n                        <localize key=\"modal.button.manageTermOptions\"></localize>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport {\n\ttrigger,\n\tstate,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig, ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\n\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\nimport { GeoObjectType, AttributeTerm, Term, GeoObjectTypeModalStates } from '@registry/model/registry';\n\n@Component({\n\tselector: 'manage-term-options',\n\ttemplateUrl: './manage-term-options.component.html',\n\tstyleUrls: ['./manage-term-options.css'],\n\tanimations: [\n\t\ttrigger('toggleInputs', [\n\t\t\tstate('none, void',\n\t\t\t\tstyle({ 'opacity': 0 })\n\t\t\t),\n\t\t\tstate('show',\n\t\t\t\tstyle({ 'opacity': 1 })\n\t\t\t),\n\t\t\ttransition('none => show', animate('300ms')),\n\t\t\ttransition('show => none', animate('100ms'))\n\t\t]),\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class ManageTermOptionsComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm;\n\t@Output() attributeChange = new EventEmitter<AttributeTerm>();\n\tmessage: string = null;\n\ttermOption: Term;\n\tstate: string = 'none';\n\tenableTermOptionForm = false;\n\tmodalStepConfig: StepConfig = {\r\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": true }\n\t\t]\r\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private cdr: ChangeDetectorRef, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private modalStepIndicatorService: ModalStepIndicatorService,\n\t\tprivate registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t\tthis.termOption = new Term(\"\", this.localizeService.create(), this.localizeService.create());\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.state = 'show';\n\t\tthis.cdr.detectChanges();\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\thandleOnSubmit(): void {\n\n\t}\n\n\tanimate(): void {\n\t\tthis.state = \"none\";\n\t}\n\n\tonAnimationDone(event: AnimationEvent): void {\n\t\tthis.state = \"show\";\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.termOption.code && this.termOption.code.length > 0) {\n\n\t\t\t// If code has a space\n\t\t\tif (this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If label is only spaces\n\t\t\tfor (let i = 0; i < this.termOption.label.localeValues.length; i++) {\n\t\t\t\tif (this.termOption.label.localeValues[i].value.replace(/\\s/g, '').length === 0) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.termOption.code && this.termOption.code.indexOf(\" \") !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false\n\t}\n\n\taddTermOption(): void {\n\n\t\tthis.registryService.addAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\n\t\t\tthis.attribute.rootTerm.children.push(data);\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t\tthis.enableTermOptionForm = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tdeleteTermOption(termOption: Term): void {\n\n\t\tthis.registryService.deleteAttributeTermTypeOption(this.attribute.rootTerm.code, termOption.code).then(data => {\n\n\t\t\tif (this.attribute.rootTerm.children.indexOf(termOption) !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children.splice(this.attribute.rootTerm.children.indexOf(termOption), 1);\n\t\t\t}\n\n\t\t\tthis.attributeChange.emit(this.attribute);\n\n\t\t\tthis.clearTermOption();\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tremoveTermOption(termOption: Term): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + '[' + termOption.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tthis.deleteTermOption(termOption);\n\t\t});\n\t}\n\n\teditTermOption(termOption: Term): void {\n\n\t\tconst state = {\n\t\t\t\"state\": GeoObjectTypeModalStates.editTermOption,\n\t\t\t\"attribute\": this.attribute,\n\t\t\t\"termOption\": JSON.parse(JSON.stringify(termOption))\n\t\t};\n\n\t\tthis.geoObjectTypeManagementService.setModalState(state);\n\t}\n\n\tclearTermOption(): void {\n\t\tthis.termOption.code = \"\";\n\t\tthis.termOption.label = this.localizeService.create();\n\t\tthis.termOption.description = this.localizeService.create();\n\t}\n\n\tcancelTermOption(): void {\n\t\tthis.clearTermOption();\n\t\tthis.enableTermOptionForm = false;\n\t}\n\n\topenAddTermOptionForm(): void {\n\t\tthis.enableTermOptionForm = true;\n\t}\n\n\tclose(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n\n    <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid\">\n        <fieldset>\n\n            <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n                \n            <div class=\"heading\">\n                <h1>\n                    <localize key=\"hierarchy.management.edit.term.options.title\">: {{attribute.label.localizedValue}}</localize>\n                </h1>\n            </div>\n            <div class=\"row-holder\" [@toggleInputs]=\"state\" (@toggleInputs.done)=\"onAnimationDone($event)\">\n                <div [@openClose]>\n                    <div class=\"label-holder\">\n                        <label>\n                            <localize key=\"term.option.input.label.existingTypes\"></localize>\n                        </label>\n                    </div>\n                    <div class=\"holder\">\n                        <span class=\"text\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>\n                                                <localize key=\"data.property.label.code\"></localize>\n                                            </th>\n                                            <th *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <localize key=\"data.property.label.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n                                            </th>\n                                            <th class=\"button-column-header\">\n                                                <localize key=\"data.property.label.actions\"></localize>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let option of attribute.rootTerm.children\">\n                                            <td>{{option.code}}</td>\n                                            <td *ngFor=\"let localeValue of option.label.localeValues\">{{localeValue.value}}</td>\n                                            <td class=\"button-column\">\n                                                <a class=\"fa fa-pencil ico-edit\" [routerLink]=\"\" (click)=\"editTermOption(option, $event)\"></a>\n                                                <a class=\"fa fa-trash-o ico-remove\" [routerLink]=\"\" (click)=\"removeTermOption(option, $event)\"></a>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <input type=\"text\" [(ngModel)]=\"termOption.code\" name=\"termOptionCode\" [required]=\"termOption.label ? true : null \">\n                                            </td>\n                                            <td *ngFor=\"let localeValue of termOption.label.localeValues\">\n                                                <input type=\"text\" [(ngModel)]=\"localeValue.value\" [name]=\"'termOptionLabel-' + localeValue.locale\" [required]=\"termOption.code ? true : null \">\n                                            </td>\n                                            <td class=\"button-column\">\n                                                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!isValid()\" (click)=\"addTermOption()\">\n                                                    <localize key=\"modal.button.add\"></localize>\n                                                </button>\n                                                <!-- <a class=\"fa fa-plus-square ico-edit\" [routerLink]=\"\" (click)=\"addTermOption()\"></a> -->\n                                                <!-- <a class=\"fa fa-trash ico-remove\" [routerLink]=\"\" (click)=\"cancelTermOption()\"></a> -->\n                                                <!-- <button type=\"button\" class=\"btn btn-default\" (click)=\"cancelTermOption()\">\n                                    <localize key=\"modal.button.cancel\"></localize> \n                                </button> -->\n\n                                            </td>\n                                        </tr>\n                                        <!-- <tr>\n                          <td></td>\n                          <td></td>\n                          <td class=\"button-column\"> \n                            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"enableTermOptionForm === false\" (click)=\"openAddTermOptionForm()\">\n                                <localize key=\"modal.button.add\"></localize>\n                            </button>\n                          </td>\n                        </tr> -->\n                                        <!-- <a class=\"fa fa-plus\" [routerLink]=\"\" (click)=\"openAddTermOptionForm()\"></a> -->\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row-holder\">\n                <div class=\"label-holder\">\n                </div>\n                <div class=\"holder\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">\n                            <localize key=\"modal.button.done\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition\n} from '@angular/animations'\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { StepConfig } from '@shared/model/modal';\nimport { LocalizationService, ModalStepIndicatorService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { GeoObjectType, AttributeTerm, Term, ManageGeoObjectTypeModalState, GeoObjectTypeModalStates } from '@registry/model/registry';\nimport { RegistryService, GeoObjectTypeManagementService } from '@registry/service';\n\n@Component({\n\tselector: 'edit-term-option-input',\n\ttemplateUrl: './edit-term-option-input.component.html',\n\tstyleUrls: [],\n\tanimations: [\n\t\ttrigger('openClose',\n\t\t\t[\n\t\t\t\ttransition(\n\t\t\t\t\t':enter', [\n\t\t\t\t\tstyle({ 'opacity': 0 }),\n\t\t\t\t\tanimate('500ms', style({ 'opacity': 1 }))\n\t\t\t\t]\n\t\t\t\t),\n\t\t\t\ttransition(\n\t\t\t\t\t':leave', [\n\t\t\t\t\tstyle({ 'opacity': 1 }),\n\t\t\t\t\tanimate('0ms', style({ 'opacity': 0 })),\n\n\t\t\t\t]\n\t\t\t\t)]\n\t\t)\n\t]\n})\nexport class EditTermOptionInputComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\t@Input() attribute: AttributeTerm = null;\n\t@Input() termOption: Term;\n\n\tmessage: string = null;\n\tmodalState: ManageGeoObjectTypeModalState = { \"state\": GeoObjectTypeModalStates.editAttribute, \"attribute\": this.attribute, \"termOption\": \"\" };\n\tmodalStepConfig: StepConfig = {\n\t\t\"steps\": [\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.geoobjecttype\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.attributes\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.attribute\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.manage.term.options\"), \"active\": true, \"enabled\": false },\n\t\t\t{ \"label\": this.localizeService.decode(\"modal.step.indicator.edit.term.option\"), \"active\": true, \"enabled\": true }\n\n\t\t]\n\t};\n\n\tconstructor(public bsModalRef: BsModalRef, private modalStepIndicatorService: ModalStepIndicatorService, private geoObjectTypeManagementService: GeoObjectTypeManagementService,\n\t\tprivate localizeService: LocalizationService, private registryService: RegistryService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.modalStepIndicatorService.setStepConfig(this.modalStepConfig);\n\t}\n\n\tngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\thandleOnSubmit(): void {\n\n\t\tthis.registryService.updateAttributeTermTypeOption(this.attribute.rootTerm.code, this.termOption).then(data => {\n\t\t\t// Update the term definition on the attribute\n\t\t\tconst index = this.attribute.rootTerm.children.findIndex(t => t.code === data.code);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.attribute.rootTerm.children[index] = data;\n\t\t\t}\n\n\t\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tisFormValid(): boolean {\n\t\t// let isAttrValid: boolean = this.attributeInputComponent.isValid();\n\n\t\t// if(isAttrValid){\n\t\t//     return true;\n\t\t// }\n\n\t\t// return false;\n\t\treturn true\n\t}\n\n\tcancel(): void {\n\t\tthis.geoObjectTypeManagementService.setModalState({ \"state\": GeoObjectTypeModalStates.manageTermOption, \"attribute\": this.attribute, \"termOption\": null })\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <form #tForm=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"!tForm.invalid && handleOnSubmit()\">\n    \n        <div class=\"\">\n            <div class=\"\">\n                <div class=\"heading\">\n                    <h1>\n                        <localize key=\"hierarchy.management.edit.term.option.title\"></localize>\n                    </h1>\n                </div>\n\n                <fieldset>\n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                            <label>\n                                <localize key=\"data.property.label.code\"></localize>\n                            </label>\n                        </div>\n                        <div class=\"holder\">\n                            <span class=\"text\">\n                                <input type=\"text\" [disabled]=\"true\" [(ngModel)]=\"termOption.code\" name=\"code\">\n                            </span>\n                        </div>\n                    </div>\n                    \n                    <localized-input [(value)]=\"termOption.label\" key=\"data.property.label.label\"></localized-input>\n                    \n                    <div class=\"row-holder\">\n                        <div class=\"label-holder\">\n                        </div>\n                        <div class=\"holder\">\n                            <div class=\"button-holder\">\n                                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\n                                    <localize key=\"modal.button.cancel\"></localize>\n                                </button>\n                                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"tForm.invalid\">\n                                    <localize key=\"modal.button.submit\"></localize>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </form>\n\n\n</div>\n","import * as d3 from 'd3';\n\nimport { HierarchyType } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\nimport { HierarchyComponent } from '../hierarchy.component';\nimport { SvgHierarchyNode } from './svg-hierarchy-node';\nimport { calculateTextWidth, svgPoint } from './svg-util';\nimport { INHERITED_NODE_BANNER_COLOR, DEFAULT_NODE_BANNER_COLOR, RELATED_NODE_BANNER_COLOR, DEFAULT_NODE_FILL, INHERITED_NODE_FILL } from '../hierarchy.component';\n\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\nimport { TREE_SCALE_FACTOR_X, TREE_SCALE_FACTOR_Y } from '../hierarchy.component'; \n\nexport class SvgHierarchyType {\n\n\tpublic static gotRectW: number = 150;\n\tpublic static gotRectH: number = 25;\n\tpublic static gotBodyFontSize: number = 8;\n\tpublic static gotOptionsButtonFontSize: number = 12;\n\n\tpublic static gotHeaderW: number = 150;\n\tpublic static gotHeaderH: number = 14;\n\tpublic static gotHeaderFontSize: number = 8;\n\t\n\tpublic static MOUSE_HOVER_EVENT_ENTER = \"mouseenter\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_MOVE = \"mousemove\";\n\t\n\tpublic static MOUSE_HOVER_EVENT_EXIT = \"mouseleave\";\n\t\n\thierarchyComponent: HierarchyComponent;\n\n\thierarchyType: HierarchyType;\n\n\tsvgEl: any;\n\n\td3Hierarchy: any;\n\n\td3Tree: any;\n\n\tisPrimary: boolean;\n\t\n\ttooltip: any;\n\n\tpublic constructor(hierarchyComponent: HierarchyComponent, svgEl: any, ht: HierarchyType, isPrimary: boolean, public localizationService: LocalizationService, public modalService: BsModalService, public authService: AuthService) {\n\t\tconst hierarchyType = ht;\n\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.hierarchyType = hierarchyType;\n\t\tthis.svgEl = svgEl;\n\n\t\tthis.d3Hierarchy = d3.hierarchy(hierarchyType.rootGeoObjectTypes[0]);\n\t\tthis.isPrimary = isPrimary;\n\n\t\tthis.d3Tree = d3.tree().nodeSize([ SvgHierarchyType.gotRectW*TREE_SCALE_FACTOR_X, (SvgHierarchyType.gotRectH + SvgHierarchyType.gotHeaderH)*TREE_SCALE_FACTOR_Y ]).separation((a, b) => 0.8)(this.d3Hierarchy);\n\t}\n\t\n\tpublic getD3Tree() {\n\t\treturn this.d3Tree;\n\t}\n\n\tpublic getCode(): string {\n\t\treturn this.hierarchyType.code\n\t}\n\n\tpublic getNodeByCode(gotCode: string): SvgHierarchyNode {\n\t\tlet treeNode = this.getD3Tree().find((node) => { return node.data.geoObjectType === gotCode; });\n\t\t\n\t\tif (treeNode == null)\n\t\t{\n\t\t  return null;\n\t\t}\n\t\t\n\t\treturn new SvgHierarchyNode(this.hierarchyComponent, this, this.hierarchyComponent.findGeoObjectTypeByCode(gotCode), treeNode, this.localizationService, this.modalService, this.authService);\n\t}\n\n\tpublic renderHierarchyHeader(hg: any, colHeaderLabel: string) {\n\t\tlet bbox = hg.node().getBBox();\n\n\t\tlet colHeader = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tlet headerg = hg.append(\"g\").classed(\"g-hierarchy-header\", true);\n\n\t\tconst headerFontSize: number = 10;\n\t\tconst iconWidth: number = 20;\n\t\tconst maxHierarchyLabelLength = 200;\n\t\t\n\t\tlet hierarchyLabelW: number = calculateTextWidth(this.hierarchyType.label.localizedValue, headerFontSize);\n\t\tlet hierarchyLabelH:number = headerFontSize*2;\n\t\tlet hierarchyLabelY:number = bbox.y + headerFontSize*1.6;\n\t\tif (hierarchyLabelW > maxHierarchyLabelLength)\n\t\t{\n\t\t  hierarchyLabelW = maxHierarchyLabelLength;\n\t\t  hierarchyLabelH = headerFontSize*3;\n\t\t  hierarchyLabelY = bbox.y + headerFontSize;\n\t\t}\n\n\t\tlet lineWidth = bbox.width;\n\t\tlet textWidth = hierarchyLabelW + iconWidth;\n\n\t\tif (textWidth > lineWidth) {\n\t\t\tlineWidth = textWidth;\n\t\t}\n\n\t\t// Hierarchy icon (font awesome)\n\t\theaderg.append(\"text\").classed(\"hierarchy-header-icon\", true)\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"font-size\", 12)\n\t\t\t.text('\\uf0e8');\n\n\t\t// Hierarchy display label\n\t\tcolHeader.append(\"foreignObject\").classed(\"hierarchy-header-label\", true)\n      .attr(\"font-size\", headerFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"x\", bbox.x + iconWidth)\n      .attr(\"y\", hierarchyLabelY)\n      .attr(\"width\", hierarchyLabelW)\n      .attr(\"height\", hierarchyLabelH)\n      .append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"text-align\", \"left\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"gray\")\n      //.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n      .style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n      .html((d: any) => this.hierarchyType.label.localizedValue)\n\n\t\t// Line underneath the header\n\t\theaderg.append(\"line\").classed(\"hierarchy-header-line\", true)\n\t\t\t.attr(\"x1\", bbox.x)\n\t\t\t.attr(\"y1\", bbox.y + headerFontSize)\n\t\t\t.attr(\"x2\", bbox.x + lineWidth)\n\t\t\t.attr(\"y2\", bbox.y + headerFontSize)\n\t\t\t.attr(\"stroke\", \"grey\")\n\t\t\t.attr(\"stroke-width\", .5);\n\n\t\tlet headerGBbox = headerg.node().getBBox();\n\t\theaderg.attr(\"transform\", \"translate(0 -\" + headerGBbox.height + \")\");\n\n\t\t// Col header label\n\t\tcolHeader.append(\"text\").classed(\"hierarchy-header-label\", true)\n\t\t\t.attr(\"font-size\", headerFontSize + 2)\n\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.attr(\"fill\", \"grey\")\n\t\t\t.attr(\"x\", bbox.x)\n\t\t\t.attr(\"y\", bbox.y)\n\t\t\t.text(colHeaderLabel);\n\t  \n\t\tcolHeader.attr(\"transform\", \"translate(0 -\" + headerGBbox.height * 2.5 + \")\");\n\n\t\treturn headerg;\n\t}\n\n\tgetRelatedHierarchies(gotCode: string): string[] {\n\t\tlet got: GeoObjectType = this.hierarchyComponent.findGeoObjectTypeByCode(gotCode);\n\n\t\tif (got.relatedHierarchies == null) {\n\t\t\tgot.relatedHierarchies = this.hierarchyComponent.calculateRelatedHierarchies(got);\n\t\t}\n\n    let relatedHiers: string[] = got.relatedHierarchies;\n\n\t\tlet index = null;\n\t\tfor (let i = 0; i < relatedHiers.length; ++i) {\n\t\t\tif (relatedHiers[i] === this.getCode()) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\n\t\tif (index != null) {\n\t\t\trelatedHiers.splice(index, 1);\n\t\t}\n\n\t\treturn relatedHiers;\n\t}\n\t\n\tprivate nodeMouseover(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 1);\n\t}\n\t\n\tprivate nodeMousemove(event: any, element: any, data:any)\n\t{\n    d3.select(\"#hierarchyLabel\").html(this.hierarchyType.label.localizedValue);\n    d3.select(\"#hierarchyCodeLabel\").html(this.hierarchyType.code);\n    \n    d3.select(\"#geoObjectTypeLabel\").html(data.data.label);\n    d3.select(\"#geoObjectTypeCodeLabel\").html(data.data.geoObjectType);\n    \n    d3.select(\"#hierarchyOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyType.organizationCode).label.localizedValue);\n    d3.select(\"#geoObjectTypeOrganizationLabel\").html(this.hierarchyComponent.findOrganizationByCode(this.hierarchyComponent.findGeoObjectTypeByCode(data.data.geoObjectType).organizationCode).label.localizedValue);\n    \n    let nodeTooltip: any = d3.select(\"#NodeTooltip\").node();\n    let nodeTooltipBbox: DOMRect = nodeTooltip.getBoundingClientRect();\n    \n    let pos = {x: event.pageX, y: event.pageY};\n    const yPointerOffset: number = 50;\n    const xPointerOffset: number = 0;\n    \n    // If overflow off bottom of page\n    if ((event.pageY + nodeTooltipBbox.height + yPointerOffset) > document.documentElement.scrollHeight)\n    {\n      // render above mouse pointer\n      pos.y = event.pageY - nodeTooltipBbox.height - yPointerOffset;\n    }\n    \n    // If overflow off right side of page\n    if ((event.pageX + nodeTooltipBbox.width + xPointerOffset) > document.documentElement.scrollWidth)\n    {\n      // render to the left of the mouse pointer\n      pos.x = event.pageX - nodeTooltipBbox.width - xPointerOffset;\n    }\n    \n    d3.select(\"#NodeTooltip\")\n      .style(\"left\", pos.x + \"px\")\n      .style(\"top\", pos.y + \"px\");\n\t}\n\t\n\tprivate nodeMouseleave(d: any, element: any, data:any)\n\t{\n\t  d3.select(\"#NodeTooltip\")\n      .style(\"opacity\", 0)\n      .style(\"left\", \"-10000px\")\n      .style(\"top\", \"-10000px\");\n\t}\n\n\tpublic render() {\n\t\tlet that = this;\n\t\tlet descends: any = this.d3Tree.descendants();\n\n\t\td3.select('.g-hierarchy[data-primary=\"false\"]').remove();\n\t\tif (this.isPrimary) {\n\t\t\td3.select('.g-hierarchy[data-primary=\"true\"]').remove();\n\t\t}\n\n\t\tlet hg = this.svgEl.insert(\"g\", \".g-hierarchy\").classed(\"g-hierarchy\", true).attr(\"data-code\", this.hierarchyType.code).attr(\"data-primary\", this.isPrimary);\n\t\thg.attr(\"font-family\", \"sans-serif\");\n\n\t\tlet gtree = hg.append(\"g\").classed(\"g-hierarchy-tree\", true).attr(\"data-code\", this.hierarchyType.code);\n\n\t\t// Edge\n\t\tgtree.append(\"g\").classed(\"g-got-edge\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(this.d3Tree.links())\n\t\t\t.join(\"path\")\n\t\t\t//.attr(\"d\", d3.linkVertical().x(function(d:any) { return d.x; }).y(function(d:any) { return d.y; })); // draws edges as curved lines\n\t\t\t.attr(\"d\", (d: any, i) => { // draws edges as square bracket lines\n\t\t\t\treturn \"M\" + d.source.x + \",\" + (d.source.y)\n\t\t\t\t\t+ \"V\" + ((d.source.y + d.target.y) / 2)\n\t\t\t\t\t+ \"H\" + d.target.x\n\t\t\t\t\t+ \"V\" + (d.target.y);\n\t\t\t});\n\n\t\t// Header on square which denotes which hierarchy it's a part of\n\t\tlet gHeader = gtree.append(\"g\").classed(\"g-got-header\", true);\n\t\tgHeader.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotHeaderW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotHeaderH)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) =>\n\t\t\t\td.data.inheritedHierarchyCode != null\n\t\t\t)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Write the name of the hierarchy on the header\n\t\tgHeader.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-header-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => \n\t\t\t    d.x - (SvgHierarchyType.gotHeaderW / 2)\n\t\t\t  )\n\t\t\t.attr(\"y\", (d: any) => d.y - SvgHierarchyType.gotRectH/2 - SvgHierarchyType.gotHeaderH + 4)\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-weight\", \"bold\")\n      .attr(\"font-size\", SvgHierarchyType.gotHeaderFontSize)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"width\", SvgHierarchyType.gotHeaderW)\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n\t\t\t.append(\"xhtml:p\")\n      .attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n      .attr(\"fill\", \"white\")\n      .attr(\"height\", SvgHierarchyType.gotHeaderH - 4)\n      .style(\"text-align\", \"center\")\n      .style(\"vertical-align\", \"middle\")\n      .style(\"display\", \"table-cell\")\n      .style(\"color\", \"white\")\n      .style(\"height\", (SvgHierarchyType.gotHeaderH - 4) + \"px\")\n      .style(\"width\", SvgHierarchyType.gotHeaderW + \"px\")\n      .html(function (d: any) {\n        let name = d.data.inheritedHierarchyCode != null ? that.hierarchyComponent.findHierarchyByCode(d.data.inheritedHierarchyCode).label.localizedValue : that.hierarchyType.label.localizedValue;\n        calculateTextWidth(name, SvgHierarchyType.gotHeaderFontSize) > (SvgHierarchyType.gotHeaderW - 5) ? name = name.substring(0,34) + \"...\" : true;\n        return name;\n       })\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// GeoObjectType Body Square \n\t\tgtree.append(\"g\").classed(\"g-got\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType !== \"GhostNode\"; })\n\t\t\t.classed(\"svg-got-body-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"fill\", (d: any) => d.data.inheritedHierarchyCode != null ? INHERITED_NODE_FILL : DEFAULT_NODE_FILL)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"rx\", 3)\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.each(function(d: any) {\n\t\t\t\tif (d.data.geoObjectType != \"GhostNode\") {\n\t\t\t\t\tif (d.data.activeDropZones) {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH * 2, width: SvgHierarchyType.gotRectW * 2 + 100, height: SvgHierarchyType.gotRectH * 4 };\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td.data.dropZoneBbox = { x: d.x - SvgHierarchyType.gotRectW / 2, y: d.y - SvgHierarchyType.gotRectH / 2, width: SvgHierarchyType.gotRectW, height: SvgHierarchyType.gotRectH };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\t// Arrows on Edges\n\t\tconst arrowRectD = { height: 7, width: 10 };\n\t\tlet gArrow = gtree.append(\"g\").classed(\"g-got-connector-arrow\", true);\n\t\tgArrow.selectAll(\"rect\").data(this.d3Tree.links()).join(\"rect\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", (d: any) => d.source.x - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", (d: any) => d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", (d: any) => this.isPrimary ? (d.source.data.inheritedHierarchyCode != null ? INHERITED_NODE_BANNER_COLOR : DEFAULT_NODE_BANNER_COLOR) : RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.selectAll(\"path\").data(this.d3Tree.links()).join(\"path\") // .filter(function(d:any){return d.data.geoObjectType !== \"GhostNode\";})\n\t\t\t.classed(\"got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", (d: any) => \"M\" + (d.source.x - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (d.source.x) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 - arrowRectD.height / 2 + (arrowRectD.height / 3))\n\t\t\t\t+ \"L\" + (d.source.x - arrowRectD.width / 2 + (arrowRectD.width / 3)) + \",\" + (d.source.y + SvgHierarchyType.gotRectH / 2 + arrowRectD.height / 2 - arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Ghost Drop Zone (Sibling) Backer\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-backer\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-backer-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"white\")\n\n\t\t// Ghost Drop Zone (Sibling) Body Rectangle\n\t\tgtree.append(\"g\").classed(\"g-sibling-ghost-body\", true)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(descends)\n\t\t\t.join(\"rect\")\n\t\t\t.filter(function(d: any) { return d.data.geoObjectType === \"GhostNode\"; })\n\t\t\t.classed(\"svg-sibling-ghost-body-dz\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2))\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2))\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#6BA542\")\n\t\t\t.attr(\"stroke-width\", \"1\")\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\n\t\t// GeoObjectType label\n\t\tgtree.append(\"g\").classed(\"g-got-codelabel\", true)\n\t\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t\t.attr(\"font-size\", SvgHierarchyType.gotBodyFontSize)\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 3)\n\t\t\t.selectAll(\"foreignObject\")\n\t\t\t.data(descends)\n\t\t\t.join(\"foreignObject\")\n\t\t\t.classed(\"svg-got-label-text\", true)\n\t\t\t.attr(\"x\", (d: any) => d.x - (SvgHierarchyType.gotRectW / 2) + 5)\n\t\t\t.attr(\"y\", (d: any) => d.y - (SvgHierarchyType.gotRectH / 2) + 2)\n\t\t\t.attr(\"width\", SvgHierarchyType.gotRectW - 32 + 5)\n\t\t\t.attr(\"height\", SvgHierarchyType.gotRectH - 4)\n\t\t\t// .filter(function(d: any) {\n\t\t\t// \treturn calculateTextWidth(d.data.label, 10) > SvgHierarchyType.gotRectW - 32 + 5;\n\t\t\t// })\n\t\t\t// .style(\"height\", SvgHierarchyType.gotRectH + 20 + \"px\")\n\t\t\t.attr(\"cursor\", (d: any) => this.isPrimary ? (d.data.inheritedHierarchyCode != null ? null : \"grab\") : null)\n\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t.attr(\"data-inherited\", (d: any) => d.data.inheritedHierarchyCode != null)\n\t\t\t.append(\"xhtml:p\")\n\t\t\t.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\")\n\t\t\t.attr(\"text-anchor\", \"start\")\n\t\t\t.attr(\"text-align\", \"left\")\n\t\t\t.style(\"vertical-align\", \"middle\")\n\t\t\t.style(\"display\", \"table-cell\")\n\t\t\t.style(\"width\", SvgHierarchyType.gotRectW - 32 + 5 + \"px\")\n\t\t\t.style(\"height\", SvgHierarchyType.gotRectH - 4 + \"px\")\n\t\t\t.html((d: any) => d.data.label)\n\t\t\t.on(SvgHierarchyType.MOUSE_HOVER_EVENT_ENTER, function(event: any, data: any) {that.nodeMouseover(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_MOVE, function(event: any, data: any) {that.nodeMousemove(event, this, data);})\n      .on(SvgHierarchyType.MOUSE_HOVER_EVENT_EXIT, function(event: any, data: any) {that.nodeMouseleave(event, this, data);});\n\n\t\tlet headerg;\n\t\tif (this.isPrimary) {\n\t\t\tgtree.append(\"g\").classed(\"g-got-relatedhiers-button\", true)\n\t\t\t\t.selectAll(\"text\")\n\t\t\t\t.data(descends)\n\t\t\t\t.join(\"text\")\n\t\t\t\t.filter(function(d: any) {\n\t\t\t\t\treturn (d.data.geoObjectType === \"GhostNode\" ? false : true) && d.data.inheritedHierarchyCode == null;\n\t\t\t\t})\n\t\t\t\t.classed(\"svg-got-relatedhiers-button\", true)\n\t\t\t\t.attr(\"data-gotCode\", (d: any) => d.data.geoObjectType)\n\t\t\t\t.attr(\"x\", (d: any) => d.x + (SvgHierarchyType.gotRectW / 2) - (SvgHierarchyType.gotOptionsButtonFontSize) - 3)\n\t\t\t\t.attr(\"y\", (d: any) => d.y + (SvgHierarchyType.gotOptionsButtonFontSize*0.8) - SvgHierarchyType.gotOptionsButtonFontSize/2)\n\t\t\t\t.style(\"font-family\", \"FontAwesome\")\n\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t.style(\"fill\", \"#767676\")\n\t\t\t\t.style(\"font-size\", SvgHierarchyType.gotOptionsButtonFontSize + \"px\")\n\t\t\t\t.text('\\uf013')\n\t\t\t\t.on('click', function(event, node) { that.getNodeByCode(node.data.geoObjectType).renderRelatedHierarchiesMenu(); });\n\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Selected Hierarchy\");\n\t\t}\n\t\telse {\n\t\t\theaderg = this.renderHierarchyHeader(hg, \"Related Hierarchy\");\n\t\t}\n\n\n\t\tlet paddingTop = (headerg.node().getBBox().height + 20);\n\t\t//gtree.attr(\"transform\", \"translate(0 \" + paddingTop + \")\");\n\t}\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\n\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'shapefile-modal',\n    templateUrl: './shapefile-modal.component.html',\n    styleUrls: []\n} )\nexport class ShapefileModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n    constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n        private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.message = null;\n\n        this.service.importShapefile( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n                this.bsModalRef.hide()\n\n                this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n                this.bsModalRef.content.cancelText = this.localizeService.decode( \"modal.button.close\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n            }\n        } ).catch(( response: HttpErrorResponse ) => {\n            this.error( response );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.message = null;\n\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\n\nimport { ImportConfiguration, LocationProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'location-problem',\n    templateUrl: './location-problem.component.html',\n    styleUrls: []\n} )\nexport class LocationProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: LocationProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    entityLabel: string;\n    entityId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.entityLabel, this.problem.type, this.problem.parent, this.configuration.hierarchy ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.entityLabel = null;\n        this.entityId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.entityId = e.item.id;\n        this.hasSynonym = ( this.entityId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createGeoObjectSynonym( this.entityId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    vOid: response.vOid, \n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    ignoreDataAtLocation(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNOREATLOCATION',\n            label: locationLabel,\n        };\n    }\n\n    undoAction(): void {\n        let locationLabel = this.problem.label;\n        let universal = this.problem.type;\n\n        if ( this.problem.resolved ) {\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNOREATLOCATION' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteGeoObjectSynonym( action.synonymId, action.vOid ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n\n                    this.entityLabel = null;\n                    this.hasSynonym = ( this.entityLabel != null );\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n\n        }\n    }\n}\n","<div class=\"row\" style=\"padding-bottom: 10px;\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">\n      <ol *ngIf=\"problem.context.length > 0\">\n        <li *ngFor=\"let context of problem.context\">{{context.label}} ({{context.type}})</li>\n      </ol>\n    </div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}} ({{problem.typeLabel}})</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"entityLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"name\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymFromLocationTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreDataAtLocation()\" [title]=\"'dataUploader.ignoreAtLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <a (click)=\"toggle()\"> <i class=\"fa fa-caret-right clickable\" aria-hidden=\"true\"></i> <i class=\"fa fa-caret-down\" style=\"display: none;\" aria-hidden=\"true\"></i> <localize key=\"dataUploader.resolvedSynonym\"></localize> [{{problem.action.label}}]\n        </a>\n        <span *ngIf=\"show\">\n          <ul>\n            <localize key=\"dataUploader.locatedWithin\"></localize>\n            <li *ngFor=\"let ancestor of problem.action.ancestors\">{{ancestor.label}}</li>\n          </ul>\n        </span>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNOREATLOCATION'\">\n        <localize key=\"dataUploader.resolvedIgnoreAtLocation\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedLocationTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nimport { ImportConfiguration, TermProblem } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n\n    selector: 'term-problem',\n    templateUrl: './term-problem.component.html',\n    styleUrls: []\n} )\nexport class TermProblemComponent implements OnInit {\n\n    @Input() configuration: ImportConfiguration;\n    @Input() problem: TermProblem;\n    @Input() index: number;\n    @Output() onError: EventEmitter<any> = new EventEmitter<any>();\n\n    //    show: boolean;\n    dataSource: Observable<any>;\n    hasSynonym: boolean;\n\n    termLabel: string;\n    termId: string;\n\n    constructor( private service: IOService ) {\n        this.dataSource = Observable.create(( observer: any ) => {\n            this.service.getTermSuggestions( this.problem.mdAttributeId, this.termLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    ngOnInit(): void {\n        this.termLabel = null;\n        this.termId = null;\n        this.hasSynonym = false;\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n        this.hasSynonym = ( this.termId != null );\n    }\n\n    createSynonym(): void {\n        if ( this.hasSynonym ) {\n            this.onError.emit( null );\n\n            this.service.createTermSynonym( this.termId, this.problem.label ).then( response => {\n                this.problem.resolved = true;\n                this.problem.action = {\n                    name: 'SYNONYM',\n                    synonymId: response.synonymId,\n                    label: response.label\n                };\n            } ).catch( e => {\n                this.onError.emit( e.error );\n            } );\n        }\n    }\n\n    createOption(): void {\n        this.onError.emit( null );\n        \n        this.service.createTerm( this.problem.label, uuid(), this.problem.parentCode).then( term => {\n            this.problem.resolved = true;\n            this.problem.action = {\n                name: 'OPTION',\n                term: term\n            };\n        } ).catch( e => {\n            this.onError.emit( e.error );\n        } );\n    }\n\n    ignoreValue(): void {\n        this.problem.resolved = true;\n\n        this.problem.action = {\n            name: 'IGNORE'\n        };\n    }\n\n    undoAction(): void {\n\n        if ( this.problem.resolved ) {\n\n            let action = this.problem.action;\n\n            if ( action.name == 'IGNORE' ) {\n                this.problem.resolved = false;\n                this.problem.action = null;\n            }\n            else if ( action.name == 'SYNONYM' ) {\n                this.onError.emit( null );\n\n                this.service.deleteTermSynonym( action.synonymId ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n            else if ( action.name == 'OPTION' ) {\n                this.onError.emit( null );\n\n                this.service.removeTerm(this.problem.parentCode, action.term.code ).then( response => {\n                    this.problem.resolved = false;\n                    this.problem.action = null;\n                } ).catch( e => {\n                    this.onError.emit( e.error );\n                } );\n            }\n        }\n    }\n}\n","<div class=\"row\">\n  <form #problemForm=\"ngForm\">\n    <div class=\"col-sm-4\">{{problem.attributeLabel}}</div>\n    <div class=\"col-sm-2 error-message\">{{problem.label}}</div>\n    <div *ngIf=\"!problem.resolved\">\n      <div class=\"col-sm-4\">\n        <input [name]=\"index + '-name'\" [(ngModel)]=\"termLabel\" [typeaheadAsync]=\"true\" [typeahead]=\"dataSource\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"7\" typeaheadOptionField=\"label\" class=\"form-control\">\n      </div>\n      <div class=\"col-sm-2\">\n        <i [ngClass]=\"{disabled: !hasSynonym}\" class=\"fa fa-2x fa-compress clickable\" (click)=\"createSynonym()\" [title]=\"'dataUploader.createSynonymCategoryTooltip' | localize\"></i>\n        <i class=\"fa fa-2x fa-plus clickable\" (click)=\"createOption()\" [title]=\"'dataUploader.createNewOptionTooltip' | localize\"></i>        \n        <i class=\"fa fa-2x fa-times-circle clickable\" (click)=\"ignoreValue()\" [title]=\"'dataUploader.ignoreCategoryTooltip' | localize\"></i>      \n      </div>\n    </div>\n    <div *ngIf=\"problem.resolved\">\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'OPTION'\">\n        <localize key=\"dataUploader.resolvedCategoryOption\"></localize>\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'SYNONYM'\">\n        <localize key=\"dataUploader.resolvedSynonym\"></localize>\n        [{{problem.action.label}}]\n      </div>\n      <div class=\"col-sm-4\" *ngIf=\"problem.action.name == 'IGNORE'\">\n        <localize key=\"dataUploader.resolvedIgnoreCategory\"></localize>\n        [{{problem.label}}]\n      </div>\n      <div class=\"col-sm-2\">\n        <i class=\"fa fa-2x fa-undo clickable\" (click)=\"undoAction()\" [title]=\"'dataUploader.undoFixedCategoryTooltip' | localize\"></i>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler, SuccessModalComponent, ConfirmModalComponent } from '@shared/component';\n\nimport { ImportConfiguration } from '@registry/model/io';\nimport { IOService } from '@registry/service';\n\n@Component( {\n    selector: 'spreadsheet-modal',\n    templateUrl: './spreadsheet-modal.component.html',\n    styleUrls: []\n} )\nexport class SpreadsheetModalComponent implements OnInit {\n\n    configuration: ImportConfiguration;\n    message: string = null;\n    state: string = 'MAP';\n\n  constructor( private service: IOService, public bsModalRef: BsModalRef, private modalService: BsModalService,\n    private localizeService: LocalizationService, private router: Router ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onStateChange( event: string ): void {\n        if ( event === 'BACK' ) {\n            this.handleBack();\n        }\n        else if ( event === 'NEXT' ) {\n            this.handleNext();\n        }\n        else if ( event === 'CANCEL' ) {\n            this.handleCancel();\n        }\n    }\n\n    handleBack(): void {\n        if ( this.state === 'LOCATION' ) {\n            this.state = 'MAP';\n        }\n    }\n\n    handleNext(): void {\n        if ( this.state === 'MAP' ) {\n            if ( !this.configuration.postalCode ) {\n                this.state = 'LOCATION';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'LOCATION' ) {\n            this.handleSubmit();\n        }\n        else if ( this.state === 'LOCATION-PROBLEM' ) {\n\n            if ( this.configuration.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n            }\n            else {\n                this.handleSubmit();\n            }\n        }\n        else if ( this.state === 'TERM-PROBLEM' ) {\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(): void {\n        this.service.importSpreadsheet( this.configuration ).then( config => {\n\n            if ( config.locationProblems != null ) {\n                this.state = 'LOCATION-PROBLEM';\n                this.configuration = config;\n            }\n            else if ( config.termProblems != null ) {\n                this.state = 'TERM-PROBLEM';\n                this.configuration = config;\n            }\n            else {\n              this.bsModalRef.hide()\n\n              this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n                    animated: true,\n                    backdrop: true,\n                    ignoreBackdropClick: true,\n                } );\n                this.bsModalRef.content.message = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.confirm.message\" );\n                this.bsModalRef.content.submitText = this.localizeService.decode( \"data.import.go.to.scheduled.jobs.button\" );\n\n                ( <ConfirmModalComponent>this.bsModalRef.content ).onConfirm.subscribe( data => {\n                    this.router.navigate(['/registry/scheduled-jobs']);\n                } );\n\n            }\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n\n    }\n\n    handleCancel(): void {\n        this.service.cancelImport( this.configuration ).then( response => {\n            this.bsModalRef.hide()\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div *ngIf=\"configuration != null && configuration\">\n    <div *ngIf=\"state === 'MAP'\">\n      <attributes-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></attributes-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION'\">\n      <location-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-page>\n    </div>\n    <div *ngIf=\"state === 'LOCATION-PROBLEM'\">\n      <location-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></location-problem-page>\n    </div>\n    <div *ngIf=\"state === 'TERM-PROBLEM'\">\n      <term-problem-page [(configuration)]=\"configuration\" (stateChange)=\"onStateChange($event)\"></term-problem-page>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-page',\n    templateUrl: './data-page.component.html',\n    styleUrls: ['./data-page.css']\n} )\nexport class DataPageComponent implements OnInit {\n\n\tcontent: string = \"SPREADSHEET\";\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n\t\tthis.isMaintainer ? this.renderContent(\"SPREADSHEET\") : this.renderContent(\"EXPORT\");\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\n\t\tif(content === \"SPREADSHEET\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"spreadsheet.title\");\n\t\t}\n\t\telse if(content === \"SHAPEFILE\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"shapefile.title\");\n\t\t}\n\t\telse if(content === \"EXPORT\"){\n\t\t\tthis.pageTitle = this.localizationService.decode(\"io.export.title\");\n\t\t}\n\t}\n\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <!-- <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"spreadsheet.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"spreadsheet.description\"></localize>\n            </p>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-1\"></div>\n\t\t\t<div class=\"col-md-10\" style=\"padding-top: 30px;\">\n\t\t\t\t\n\t\t\t\t<div class=\"heading\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{{pageTitle}}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SPREADSHEET'}\" (click)=\"renderContent('SPREADSHEET')\">\n                      <localize key=\"import-spreadsheet-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t\t<a style=\"margin-right:10px;font-size:20px;\" *ngIf=\"isMaintainer\" [routerLink]=\"\" [ngClass]=\"{'active': content === 'SHAPEFILE'}\" (click)=\"renderContent('SHAPEFILE')\">\n                      <localize key=\"import-shapefile-localization-manager.menu\"></localize>\n                    </a> \n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px;margin-top: 10px;\">\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SPREADSHEET'\" [format]=\"'EXCEL'\"></dataimporter>\n\t\t\t\t\t<dataimporter *ngIf=\"content === 'SHAPEFILE'\" [format]=\"'SHAPEFILE'\"></dataimporter>\n\t\t\t\t</div>\n\t\t\t\t\n            </div>\n            <div class=\"col-md-1\"></div>\n        </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent, SuccessModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService, EventService, ExternalSystemService } from '@shared/service';\nimport { ExternalSystem } from '@shared/model/core';\n\nimport { SpreadsheetModalComponent } from './modals/spreadsheet-modal.component';\nimport { ShapefileModalComponent } from './modals/shapefile-modal.component';\nimport { IOService } from '@registry/service';\nimport { ImportStrategy, PRESENT } from '@registry/model/registry';\n\ndeclare var acp: string;\n\n@Component({\n\n\tselector: 'dataimporter',\n\ttemplateUrl: './dataimporter.component.html',\n\tstyleUrls: ['./dataimporter.css']\n})\nexport class DataImporterComponent implements OnInit {\n\t\n\tcurrentDate : Date = new Date();\n\n\tshowImportConfig: boolean = false;\n\n    /*\n     * List of geo object types from the system\n     */\n\ttypes: { label: string, code: string }[]\n\n\timportStrategy: ImportStrategy;\n\timportStrategies: any[] = [\n\t\t{ \"strategy\": ImportStrategy.NEW_AND_UPDATE, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_AND_UPDATE\") },\n\t\t{ \"strategy\": ImportStrategy.NEW_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.NEW_ONLY\") },\n\t\t{ \"strategy\": ImportStrategy.UPDATE_ONLY, \"label\": this.localizationService.decode(\"etl.import.ImportStrategy.UPDATE_ONLY\") }\n\t]\n\n    /*\n     * Currently selected code\n     */\n\tcode: string = null;\n\n    /*\n     * Start date\n     */\n\tstartDate: Date = null;\n\n    /*\n     * End date\n     */\n\tendDate: Date | string = null;\n\n    /*\n     * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n    /*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\t@Input()\n\tformat: string; // Can be SHAPEFILE or EXCEL\n\n\tisExternal: boolean = false;\n\n\t/*\n\t * List of available external systems (filtered based on user's org)\n\t */\n\texternalSystems: ExternalSystem[];\n\n\t/*\n\t * currently selected external system.\n\t */\n\texternalSystemId: string;\n\n\tisLoading: boolean = true;\n\n\tcopyBlank: boolean = true;\n\n\tconstructor(private service: IOService,\n\t\tprivate eventService: EventService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate localizationService: LocalizationService,\n\t\tprivate authService: AuthService,\n\t\tprivate sysService: ExternalSystemService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.sysService.getExternalSystems(1, 100).then(paginatedSystems => {\n\n\t\t\tthis.externalSystems = paginatedSystems.resultSet;\n\n\t\t\tif (this.externalSystems.length === 0) {\n\t\t\t\tthis.isExternal = false;\n\t\t\t\tthis.showImportConfig = true; // Show the upload widget if there are no external systems registered\n\t\t\t}\n\n\t\t\tthis.isLoading = false;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.service.listGeoObjectTypes(false).then(types => {\n\n\t\t\tconst myOrgTypes = [];\n\n\t\t\tfor (var i = 0; i < types.length; ++i) {\n\t\t\t\tconst type = types[i];\n\t\t\t\tconst orgCode = type.orgCode;\n\t\t\t\tconst typeCode = type.superTypeCode != null ? type.superTypeCode : type.code;\n\n\t\t\t\tif (this.authService.isOrganizationRA(orgCode) || this.authService.isGeoObjectTypeRM(orgCode, typeCode)) {\n\t\t\t\t\tmyOrgTypes.push(types[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.types = myOrgTypes;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tvar getUrl = acp + '/excel/get-configuration';\n\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\tgetUrl = acp + '/shapefile/get-shapefile-configuration';\n\n\t\t\t//this.showImportConfig = true; // show the upload widget if shapefile because external system from shapefile isn't supported\n\t\t}\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('type', this.code);\n\t\t\tform.append('copyBlank', this.copyBlank);\n\n\t\t\tif (this.startDate != null) {\n\t\t\t\tform.append('startDate', this.startDate);\n\t\t\t}\n\t\t\tif (this.endDate != null) {\n\t\t\t\tform.append('endDate', this.endDate);\n\t\t\t}\n\t\t\tif (this.importStrategy) {\n\t\t\t\tform.append('strategy', this.importStrategy);\n\t\t\t}\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst configuration = JSON.parse(response);\n\n\t\t\tconfiguration.isExternal = this.isExternal;\n\n\t\t\tlet externalSystem: ExternalSystem = null;\n\t\t\tfor (let i = 0; i < this.externalSystems.length; ++i) {\n\t\t\t\tlet sys: ExternalSystem = this.externalSystems[i];\n\n\t\t\t\tif (sys.oid === this.externalSystemId) {\n\t\t\t\t\texternalSystem = sys;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfiguration.externalSystemId = this.externalSystemId;\n\t\t\tconfiguration.externalSystem = externalSystem;\n\n\t\t\tif (this.format === \"SHAPEFILE\") {\n\t\t\t\tthis.bsModalRef = this.modalService.show(ShapefileModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef = this.modalService.show(SpreadsheetModalComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.configuration = configuration;\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\n\tonClick(): void {\n\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetImportSource(event, type): void {\n\t\tif (type === \"EXTERNAL\") {\n\t\t\tthis.isExternal = true;\n\t\t}\n\t\telse {\n\t\t\tthis.isExternal = false;\n\t\t}\n\t}\n\n\tonNext(): void {\n\t\tthis.showImportConfig = true;\n\t}\n\n\tonBack(): void {\n\t\tthis.showImportConfig = false;\n\t}\n\t\n\tsetInfinity(endDate: any): void {\n\n\t\tif(endDate === PRESENT){\n\t\t\tthis.endDate = null;\n\t\t}\n\t\telse{\n\t\t\tthis.endDate = PRESENT;\n\t\t}\n\t}\n\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<div *ngIf=\"!isLoading && !showImportConfig && externalSystems.length > 0\">\n  <div>\n    <div class=\"row\">\n\n        <div class=\"col-xs-1\"></div>\n        <div class=\"col-xs-9 radio-btn-wrapper\">\n\n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"true\" [checked]=\"!isExternal\" (change)=\"setImportSource($event, 'FILE')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : !isExternal}\">\n                    <localize key=\"importer.import.from-file.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-file.description\"></localize>\n                </p>\n            </label>\n            \n            <label class=\"radio\">\n                <input type=\"checkbox\" [value]=\"false\" [checked]=\"isExternal\" (change)=\"setImportSource($event, 'EXTERNAL')\" name=\"import-source\">\n                <span [ngClass]=\"{'active' : isExternal}\">\n                    <localize key=\"importer.import.from-external.label\"></localize>\n                </span>\n                <p class=\"radio-label-description\">\n                    <localize key=\"importer.import.from-external.description\"></localize>\n                </p>\n            </label>\n\n            <div class=\"button-holder\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onNext()\">\n                    <localize key=\"io.next\"></localize>\n                </button>\n            </div>\n        </div>\n        <div class=\"col-xs-2\"></div>\n\t  </div>\n  </div>\n</div>\n\n<div *ngIf=\"!isLoading && isExternal !== null && showImportConfig\">\n    <div >\n        <form #form=\"ngForm\">\n            <div *ngIf=\"isExternal\" class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"externalSystem\">\n                    <localize key=\"io.import.externalSystems\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"externalSystem\" name=\"externalSystem\" class=\"select-area\" [(ngModel)]=\"externalSystemId\" required>\n                        <option *ngFor=\"let externalSystem of externalSystems\" value={{externalSystem.oid}}>{{externalSystem.label.localizedValue}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\" *ngIf=\"types\">\n                <label class=\"col-md-2 text-right\" for=\"code\"> <localize key=\"io.geoObjectType\"></localize></label>\n                <div class=\"col-md-8\">\n                    <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" required>\n                        <option></option>\n                        <option *ngFor=\"let type of types\" value={{type.code}}>{{type.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"strategy\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"spreadsheet.import.import.strategy\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"shapefile.import.import.strategy\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <select id=\"strategy\" name=\"strategy\" class=\"select-area\" [(ngModel)]=\"importStrategy\" required>\n                        <option *ngFor=\"let strategy of importStrategies\" value={{strategy.strategy}}>{{strategy.label}}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"startDate\"><localize key=\"io.startDate\"></localize></label>\n                <div class=\"col-md-8\">\n                  <date-field [(value)]=\"startDate\" label=\"\" [inputName]=\"'startDate'\" [allowFutureDates]=\"false\"></date-field>\n                </div>\n                \n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"endDate\"><localize key=\"io.endDate\"></localize></label>\n                <div class=\"col-md-8\">\n                  <date-field [(value)]=\"endDate\" label=\"\" [inputName]=\"'endDate'\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" [required]=\"true\" ></date-field>\n                </div>\n                                      \n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                \n                <label class=\"col-md-2 text-right\" for=\"copyBlank\">Copy blank values</label>\n                <div class=\"col-md-8\">\n                   <boolean-field [(value)]=\"copyBlank\" label=\"\"></boolean-field>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-md-2 text-right\" for=\"file\">\n                    <localize *ngIf=\"this.format === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n                    <localize *ngIf=\"this.format === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n                </label>\n                <div class=\"col-md-8\">\n                    <input *ngIf=\"this.format === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".xls, .xlsx\" required />\n                    <input *ngIf=\"this.format === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect\n                        [uploader]=\"uploader\" accept=\".zip\" required />\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n\n            <div class=\"form-group row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"button-holder col-md-8 text-right\">\n<!--                     <button type=\"submit\" class=\"btn btn-default\" (click)=\"onBack()\"> -->\n<!--                         <localize key=\"io.back\"></localize> -->\n<!--                     </button> -->\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onClick()\">\n                        <localize key=\"io.submit\"></localize>\n                    </button>\n                </div>\n                <div class=\"col-md-2\"></div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterListByOrg } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-manager',\n\ttemplateUrl: './master-list-manager.component.html',\n\tstyleUrls: ['./master-list-manager.css']\n})\nexport class MasterListManagerComponent implements OnInit {\n\tmessage: string = null;\n\torgs: MasterListByOrg[];\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\n\t\tthis.service.getMasterListsByOrg().then(response => {\n\t\t\tthis.orgs = response.orgs;\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonCreate(org: MasterListByOrg): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(org);\n\t\tthis.bsModalRef.content.isNew = true;\n\t\tthis.bsModalRef.content.onMasterListChange.subscribe((list: any) => {\n\t\t\tconst obj = {\n\t\t\t\tlabel: list.displayLabel.localizedValue,\n\t\t\t\toid: list.oid,\n\t\t\t\tcreateDate: list.createDate,\n\t\t\t\tlastUpdateDate: list.lastUpdateDate,\n\t\t\t\tisMaster: list.isMaster,\n\t\t\t\twrite: list.write,\n\t\t\t\tread: list.read,\n\t\t\t\tvisibility: list.visibility\n\t\t\t};\n\n\t\t\torg.lists.push(obj);\n\t\t});\n\t}\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-view/', code])\n\t}\n\n\tonEdit(pair: { label: string, oid: string, visibility: string }): void {\n\t\tthis.service.getMasterList(pair.oid).then(list => {\n\n\t\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.edit = true;\n\t\t\tthis.bsModalRef.content.readonly = !list.write;\n\t\t\tthis.bsModalRef.content.master = list;\n\t\t\tthis.bsModalRef.content.isNew = false;\n\n\t\t\tthis.bsModalRef.content.onMasterListChange.subscribe(ret => {\n\t\t\t\tpair.label = ret.displayLabel.localizedValue;\n\t\t\t\tpair.visibility = ret.visibility;\n\t\t\t});\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDelete(org: MasterListByOrg, list: { label: string, oid: string }): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + list.label + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = \"danger\";\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterList(list.oid).then(response => {\n\t\t\t\torg.lists = org.lists.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== list.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <div class=\"heading\">\n            <h2>\n                <localize key=\"masterlists.manager.organizations\"></localize>\n            </h2>\n        </div>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\" *ngFor=\"let org of orgs;\">\n            <div class=\"col-md-12 order-md-1\">\n                <div style=\"margin-top: 30px;\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <h3>{{org.label}}</h3>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"org.lists && org.lists.length === 0\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"py-5\">\n                            <p class=\"inline-message\"><localize key=\"masterlists.no.lists.in.org.message\"></localize></p>\n                        </div>\n                    </div>\n                </div>\n\n                <ul *ngIf=\"org.lists && org.lists.length > 0\" class=\"list-group\" style=\"border-bottom: 2px solid lightgrey; margin-top: 30px;\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th style=\"width: 70%;\"><localize key=\"masterlist.menu\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let list of org.lists; let i = index;\" class=\"clickable\">\n                                <td style=\"width: 70%; vertical-align: middle;\">\n                                  <a [routerLink]=\"'/registry/master-list-view/' + list.oid\" routerLinkActive=\"active\">\n                                    {{list.label}}\n                                    <span *ngIf=\"list.isMaster\"><localize key=\"masterlist.master\"></localize></span>\n                                    <span>\n                                      (\n                                      <localize *ngIf=\"list.visibility === 'PUBLIC'\" key=\"masterlist.public\"></localize>\n                                      <localize *ngIf=\"list.visibility === 'PRIVATE'\" key=\"masterlist.private\"></localize>\n                                      )\n                                    </span>                                    \n                                  </a>\n                                </td>\n                                <td style=\"width: 30%; text-align: right;\">\n                                    <button type=\"submit\" (click)=\"onView(list.oid)\" class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"modal.button.view\"></localize>\n                                    </button>\n                                    <button type=\"submit\" (click)=\"onEdit(list)\" class=\"btn btn-default\" role=\"button\">\n                                        <localize key=\"masterlist.button.metadata\"></localize>\n                                    </button>\n                                    <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(org, list)\" class=\"btn btn-danger\" role=\"button\">\n                                        <localize key=\"modal.button.delete\"></localize>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ul>\n                <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div *ngIf=\"org.write\">\n                            <button type=\"submit\" (click)=\"onCreate(org)\" class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"hierarchy.management.button.create\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n\n@Component( {\n    selector: 'export-format-modal',\n    templateUrl: './export-format-modal.component.html',\n    styleUrls: []\n} )\nexport class ExportFormatModalComponent {\n\n    format: string;\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onFormat = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onFormat.next( this.format );\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"heading text-center\">\n        <h1>\n            <localize key=\"export-modal.title\"></localize>\n        </h1>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <label>\n                        <localize key=\"export-modal.message\"></localize>\n                    </label>\n\n                    <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                        <option></option>\n                        <option value=\"EXCEL\">\n                            <localize key=\"io.spreadsheet\"></localize>\n                        </option>\n                        <option value=\"SHAPEFILE\">\n                            <localize key=\"io.shapefile\"></localize>\n                        </option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" [disabled]=\"format == null || format == ''\"\n                            class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n\tstate,\n\tgroup,\n\tquery,\n\tstagger\n} from '@angular/animations';\n\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ChangeRequest, AbstractAction, AddChildAction, SetParentAction, CreateGeoObjectAction, RemoveChildAction, UpdateGeoObjectAction } from '@registry/model/crtable';\nimport { GeoObjectOverTime } from '@registry/model/registry';\n\nimport { ChangeRequestService } from '@registry/service';\nimport { LocalizationService, AuthService, EventService, ExternalSystemService  } from '@shared/service';\nimport { ActionDetailModalComponent } from './action-detail/action-detail-modal.component'\n\nimport { ErrorHandler, ErrorModalComponent, ConfirmModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component({\n\n\tselector: 'request-table',\n\ttemplateUrl: './request-table.component.html',\n\tstyleUrls: ['./request-table.css'],\n\tencapsulation: ViewEncapsulation.None,\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('300ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('100ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]),\n\t\t\ttrigger('fadeIn', [\n\t\t\t\ttransition(':enter', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t])\n\t\t\t]),\n\t\t]\n\t]\n})\nexport class RequestTableComponent {\n\n\tobjectKeys = Object.keys;\n\n\tbsModalRef: BsModalRef;\n\n\trequests: ChangeRequest[] = [];\n\n\tactions: AbstractAction[] | SetParentAction[] | AddChildAction[] | CreateGeoObjectAction[] | RemoveChildAction[] | UpdateGeoObjectAction[];\n\n\tcolumns: any[] = [];\n\n\ttoggleId: string;\n\t\n\ttargetActionId: string\n\n\tfilterCriteria: string = 'ALL';\n\n\thasBaseDropZoneOver:boolean = false;\n\t\n\t/*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\t\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\tconstructor(private service: ChangeRequestService, private modalService: BsModalService, private authService: AuthService, private localizationService: LocalizationService,\n\t\t\t\tprivate eventService: EventService, private router: Router) {\n\n\t\tthis.columns = [\n\t\t\t{ name: localizationService.decode('change.request.user'), prop: 'createdBy', sortable: false },\n\t\t\t{ name: localizationService.decode('change.request.createDate'), prop: 'createDate', sortable: false, width: 195 },\n\t\t\t{ name: localizationService.decode('change.request.status'), prop: 'approvalStatus', sortable: false }\n\t\t];\n\n\t\tthis.refresh();\n\t}\n\t\n\tngOnInit(): void{\n\t\tvar getUrl = acp + '/changerequest/upload-file-action';\n\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: getUrl\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t\tform.append('actionOid', this.targetActionId);\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: any, status: number, headers: any) => {\n\t\t\t\n\t\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\t\tlet action = this.actions[i];\n\t\t\t\t\n\t\t\t\tif(action.oid === this.targetActionId){\n\t\t\t\t\t\n\t\t\t\t\taction.documents.push(JSON.parse(response));\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tconst error = JSON.parse(response)\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\t\n\tonUpload(action: AbstractAction): void {\n\t\tthis.targetActionId = action.oid;\n\t\t\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonDownloadFile(actionOid: string, fileOid: string): void {\n\t\twindow.location.href = acp + '/changerequest/download-file-action?actionOid=' + actionOid + '&' + 'vfOid=' + fileOid;\n\t}\n\t\n\tonDeleteFile(actionOid: string, fileOid: string): void {\n\t\tthis.service.deleteFile(actionOid, fileOid).then(response => {\n\t\t\t\n\t\t\tlet docPos = -1;\n\t\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\t\tlet action = this.actions[i];\n\t\t\t\tif(action.oid === actionOid){\n\t\t\t\t\t\n\t\t\t\t\tfor(let index=0; index<action.documents.length; index++){\n\t\t\t\t\t\tlet doc = action.documents[index];\n\t\t\t\t\t\tif(doc.oid === fileOid){\n\t\t\t\t\t\t\tdocPos = index;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(docPos > -1){\n\t\t\t\t\t\taction.documents.splice(docPos, 1)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\t}\n\t\n\tpublic fileOverBase(e:any):void {\n\t    this.hasBaseDropZoneOver = e;\n\t}\n\n\trefresh(): void {\n\n\t\tthis.service.getAllRequests(\"ALL\").then(requests => {\n\t\t\t\n\t\t\tthis.requests = requests;\n\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t}\n\n\n\tonSelect(selected: any): void {\n\n\t\t// this.request = selected.selected;\n\n\t\tthis.service.getAllActions(selected.selected[0].oid).then(actions => {\n\n\t\t\tthis.actions = actions;\n\t\t\t\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonExecute(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\t\n\t\t\tthis.service.execute(changeRequest.oid).then(request => {\n\t\t\t\tchangeRequest = request;\n\t\n\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\tthis.refresh();\n\t\t\t\t\n\t\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\t\tanimated: true,\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tignoreBackdropClick: true,\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tbsModalRef.content.submitText = this.localizationService.decode('change.requests.more.geoobject.updates.submit.btn');\n\t\t\t\tbsModalRef.content.cancelText = this.localizationService.decode('change.requests.more.geoobject.updates.cancel.btn');\n\t\t\t\tbsModalRef.content.message = this.localizationService.decode('change.requests.more.geoobject.updates.message');\n\t\t\t\t\n\t\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\t\t\n\t\t\t\t\tlet firstGeoObject = this.getFirstGeoObjectInActions();\n\t\t\t\t\t\n\t\t\t\t\tif(firstGeoObject){\n\t\t\t\t\t\tthis.router.navigate(['/registry/location-manager', firstGeoObject.attributes.uid, firstGeoObject.geoObjectType.code]);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tthis.router.navigate(['/registry/location-manager', firstGeoObject.attributes.uid, firstGeoObject.geoObjectType.code]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\n\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t}\n\t}\n\t\n\tgetFirstGeoObjectInActions(): GeoObjectOverTime {\n\t\tfor(let i=0; i<this.actions.length; i++){\n\t\t\tlet action = this.actions[i];\n\t\t\t\n\t\t\tif(action.hasOwnProperty(\"geoObjectJson\")){\n\t\t\t\treturn action[\"geoObjectJson\"];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\tonDelete(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\t\n\t\t\tbsModalRef.content.type = \"danger\";\n\t\t\tbsModalRef.content.submitText = this.localizationService.decode('change.request.delete.request.confirm.btn');\n\t\t\tbsModalRef.content.message = this.localizationService.decode('change.request.delete.request.message');\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.delete(changeRequest.oid).then(deletedRequestId => {\n\n\t\t\t\t\tlet pos = -1;\n\t\t\t\t\tfor(let i=0; i<this.requests.length; i++){\n\t\t\t\t\t\tlet req = this.requests[i];\n\t\t\t\t\t\tif(req.oid === deletedRequestId){\n\t\t\t\t\t\t\tpos = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(pos > -1){\n\t\t\t\t\t\tthis.requests.splice(pos, 1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tapplyActionStatusProperties(action: any): void {\n\t\t// var action = JSON.parse(JSON.stringify(this.action));\n\t\t// action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n\t\tthis.service.applyActionStatusProperties(action).then(response => {\n\t\t\taction.decisionMaker = (action.approvalStatus !== 'PENDING') ? this.authService.getUsername() : '';\n\t\t\t\n\t\t\t// this.crtable.refresh()\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonApproveAll(changeRequest: ChangeRequest): void {\n\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.approveAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\n\t\t}\n\t}\n\n\tonRejectAll(changeRequest: ChangeRequest): void {\n\t\tif (changeRequest != null) {\n\t\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t\tthis.service.rejectAllActions(changeRequest.oid, this.actions).then(actions => {\n\t\t\t\t\tthis.actions = actions;\n\n\t\t\t\t\t// TODO: Determine if there is a way to update an individual record\n\t\t\t\t\t// this.refresh();\n\t\t\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: any): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n\trequestTrackBy(index: number, request: ChangeRequest) {\n\t\treturn request.oid;\n\t}\n\n\ttoggle(event: any, oid: string): void {\n\n\t\tif (!event.target.parentElement.className.includes(\"btn\") && !event.target.className.includes(\"btn\")) {\n\t\t\tif (this.toggleId === oid) {\n\t\t\t\tthis.toggleId = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.toggleId = oid;\n\t\t\t\tthis.onSelect({ selected: [{ oid: oid }] });\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter(criteria: string): void {\n\n\t\tthis.service.getAllRequests(criteria).then(requests => {\n\t\t\tthis.requests = requests;\n\t\t}).catch((response: HttpErrorResponse) => {\n\t\t\tthis.error(response);\n\t\t})\n\n\t\tthis.filterCriteria = criteria;\n\t}\n\n\tsetActionStatus(action: AbstractAction, status: string): void {\n\t\tconst bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\t\n\t\t\n\n\t\tbsModalRef.content.onConfirm.subscribe(data => {\n\t\t\taction.approvalStatus = status;\n\n\t\t\tthis.applyActionStatusProperties(action);\n\t\t});\n\t}\n\n\tgetActiveDetailComponent(action: AbstractAction): any {\n\t\t// TODO: I know this scales poorly to lots of different action types but I'm not sure how to do it better\n\t\tif (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction')) {\n\t\t\t// return this.cuDetail;\n\t\t}\n\t\t//   if (this.arDetail != null && (this.action.actionType.endsWith('AddChildAction') || this.action.actionType.endsWith('RemoveChildAction')))\n\t\t//   {\n\t\t//     return this.arDetail;\n\t\t//   }\n\n\t\treturn action;\n\t}\n\n\tshowActionDetail(action: any, cr: any) {\n\n\t\tthis.bsModalRef = this.modalService.show(ActionDetailModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.curAction(action, !cr.permissions.includes(\"WRITE_DETAILS\"));\n\t}\n\tformatDate(date: string): string {\n\t\treturn this.localizationService.formatDateForDisplay(date);\n\t}\n\t\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n}\n","<!-- <div class=\"row text-center\">\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"change.request.title\"></localize>\n        </h2>\n    </div>\n</div> -->\n\n<!-- <div class=\"row text-center\">\n    <div class=\"col-md-12 text-left\" style=\"margin-top: 40px;\">\n        <h3>\n            <localize key=\"change.request.table.title\"></localize>\n        </h3>\n    </div>\n</div> -->\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"form-group button-row\">\n\n      <a [routerLink]=\"\" (click)=\"filter('ALL')\" [ngClass]=\"filterCriteria === 'ALL' ? 'cr-filter-link-active' : ''\" >\n        <localize key=\"change.request.all.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('PENDING')\" [ngClass]=\"filterCriteria === 'PENDING' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.pending.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('ACCEPTED')\" [ngClass]=\"filterCriteria === 'ACCEPTED' ? 'cr-filter-link-active' : ''\" style=\"margin-left: 5px;\">\n        <localize key=\"change.request.accepted.filter.link\"></localize>\n      </a>\n      <a [routerLink]=\"\" (click)=\"filter('REJECTED')\" [ngClass]=\"filterCriteria === 'REJECTED' ? 'cr-filter-link-active' : ''\"style=\"margin-left: 5px;\" >\n        <localize key=\"change.request.rejected.filter.link\"></localize>\n      </a>\n\n    </div>\n\n    <hr style=\"border-top:solid 3px #6BA542\" />\n\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n\n  <table class=\"table\">\n    <thead>\n      <tr style=\"height: 50px;color: grey;\">\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.contributor.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.id.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.date.contributed.label\"></localize> </th>\n        <th style=\"vertical-align: middle;\"> <localize key=\"change.request.status.label\"></localize> </th>\n        <!-- <th style=\"vertical-align: middle;\">Actions</th> -->\n        <th></th>\n      </tr>\n    </thead>\n        <tbody>\n      <ng-template ngFor let-req [ngForOf]=\"requests\" [ngForTrackBy]=\"requestTrackBy\">\n        <tr class=\"clickable\" [ngClass]=\"{'row-active':toggleId === req.oid}\" (click)=\"toggle($event, req.oid)\" style=\"height: 50px;\">\n          <td class=\"col-md-3\">\n            <h5><strong>{{req.createdBy}}</strong></h5>\n          </td>\n          <td class=\"col-md-4\">\n            <h5><strong>{{req.oid}}</strong></h5>\n          </td>\n          <td class=\"col-md-2\" style=\"vertical-align: middle; color:grey;\">\n             <span class=\"date-string-display\">\n                {{formatDate(req.createDate)}}\n             </span>\n          </td>\n          <td class=\"col-md-2\">\n            <h5 [ngClass]=\"{'status-pending':req.approvalStatus === 'PENDING', 'status-accepted':req.approvalStatus === 'ACCEPTED', 'status-rejected':req.approvalStatus === 'REJECTED'}\">\n               <strong>{{req.statusLabel}}</strong>\n            </h5>\n          </td>\n          <td class=\"col-md-1\" style=\"vertical-align:middle;text-align:right;padding-right:25px;\">\n            <i class=\"arrow arrow-right\" aria-hidden=\"true\"></i>\n          </td>\n        </tr>\n        \n        <!-- Action panel only shows when activated with click -->\n        <tr [@fadeInOut] *ngIf=\"toggleId === req.oid\" style=\"background-color:#f7f7f7;\">\n          <td colspan=\"5\" >\n\n            <div class=\"row\" style=\"margin:0;\">\n              <!-- <div class=\"col-md-1\"></div> -->\n              <div class=\"col-md-12\">\n\n                <div *ngFor=\"let action of actions\" class=\"action-card\" [ngClass]=\"{'status-pending-container':action.approvalStatus === 'PENDING', 'status-accepted-container':action.approvalStatus === 'ACCEPTED', 'status-rejected-container':action.approvalStatus === 'REJECTED'}\" style=\"margin-bottom:10px; background-color:white;\"> \n                  <div class=\"row\" style=\"margin:0; padding-top:5px; padding-bottom:5px;\">\n                    <div class=\"col-md-3\" style=\"border-right:2px grey solid; height:50px;\">\n                      <i class=\"fa fa-circle\" style=\"float:left; line-height: 50px;\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" aria-hidden=\"true\"></i>\n                      <h4 class=\"vertical-center\" style=\"margin:0; float:left; padding-left:20px;\">{{req.createdBy}}</h4>\n                    </div>\n                    <div class=\"col-md-5\" style=\"height: 50px;\">\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\" class=\"fa fa-refresh vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\" class=\"fa fa-plus vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\" class=\"fa fa-link vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n                      <i *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\" class=\"fa fa-chain-broken vertical-center\" style=\"float:left; line-height: 50px;\" aria-hidden=\"true\"></i>\n\n                      <ul class=\"vertical-center\" style=\"list-style-type:none; float:left; padding-left:20px;\">\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.UpdateGeoObjectAction'\">\n                          <localize key=\"change.request.table.update\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.CreateGeoObjectAction'\">\n                          <localize key=\"change.request.table.create\"\n                           [params]=\"{\n                             '{0}':action.geoObjectJson.attributes.displayLabel.values[0].value.localeValues[0].value,\n                             '{1}':action.geoObjectType.label.localizedValue\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.geoobject.SetParentAction'\">\n                          <localize key=\"change.request.table.setparent\" [params]=\"{'{0}':action.childCode}\"></localize>\n                        </li>        \n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.AddChildAction'\">\n                          <localize key=\"change.request.table.setchild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>\n                        <li *ngIf=\"action.actionType === 'net.geoprism.registry.action.tree.RemoveChildAction'\">\n                          <localize key=\"change.request.table.removechild\"\n                           [params]=\"{\n                             '{0}':action.childTypeCode,\n                             '{1}':action.parentTypeCode\n                            }\"></localize>\n                        </li>                                        \n                        <li>\n                          <localize key=\"change.request.table.on\"></localize>\n                          <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(action.createActionDate)}}\n                          </span>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-md-4\" style=\"height: 50px;text-align: center;\">\n                      <h4 *ngIf=\"req.approvalStatus !== 'PENDING'\" class=\"vertical-center\" [ngClass]=\"{'status-pending':action.approvalStatus === 'PENDING', 'status-accepted':action.approvalStatus === 'ACCEPTED', 'status-rejected':action.approvalStatus === 'REJECTED'}\" style=\"margin: 0;\">{{action.approvalStatus}}</h4>\n                      <span *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS')\">\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'ACCEPTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'ACCEPTED')\" class=\"btn btn-primary vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.accept.btn\"></localize>\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'REJECTED'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'REJECTED')\" class=\"btn btn-danger vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.reject.btn\"></localize>\n                        </button>\n                        <button type=\"submit\" [disabled]=\"action.approvalStatus === 'PENDING'\" *ngIf=\"req.approvalStatus === 'PENDING'\" (click)=\"setActionStatus(action, 'PENDING')\" class=\"btn btn-warning vertical-center\" style=\"width:30%;\" role=\"button\">\n                          <localize style=\"text-transform:uppercase;\" key=\"change.request.pending.btn\"></localize>\n                        </button>\n                      </span>\n                    </div>\n                  </div>\n\n                  <div class=\"row\" style=\"border-top: 1px grey solid;margin:0;padding: 10px 0;\">\n                    \n                    <div class=\"col-md-4\" >\n                      <div *ngIf=\"req.permissions.includes('READ_CONTRIBUTOR_NOTES')\" class=\"form-group\">\n                        <label for=\"contribNotesInput-{{req.oid}}\"> <localize key=\"change.request.contributor.notes.label\"></localize> </label>\n                        <textarea id=\"contribNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;\" [(ngModel)]=\"action.contributorNotes\" disabled></textarea>\n                      </div>  \n                      \n                      <button type=\"submit\" (click)=\"showActionDetail(action, req)\" class=\"btn btn-default pull-right\" style=\"margin:0;\" role=\"button\" [disabled]=\"!req.permissions.includes('READ_DETAILS')\" [title]=\"'change.request.details.btn.hover' | localize\">\n                        <localize style=\"text-transform:uppercase;\" key=\"change.request.action.details.label\"></localize>\n                      </button>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.email\"></localize>:\n                          </span>\n                          <label>{{req.email}}</label>\n                      </div>\n                      \n                      <div>\n                          <span style=\"font-style: italic;\">\n                            <localize key=\"change.request.action.detail.contributor.contact.phone\"></localize>:\n                          </span>\n                          <label>{{req.phoneNumber}}</label>\n                      </div>\n                      \n                      <a *ngIf=\"(req.approvalStatus === 'ACCEPTED' || req.approvalStatus === 'REJECTED') && action.actionType != 'net.geoprism.registry.action.geoobject.SetParentAction'\" class=\"pull-right\" target=\"_blank\" [routerLink]=\"['/registry/location-manager', action.geoObjectJson.attributes.uid, action.geoObjectType.code]\">\n                          <localize key=\"change.request.open.geoobject.in.editor.link.btn\"></localize>\n                      </a>\n                      \n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div *ngIf=\"req.permissions.includes('READ_MAINTAINER_NOTES')\" class=\"form-group\">\n                        <label for=\"maintainerNotesInput-{{req.oid}}\"> <localize key=\"change.request.maintainer.notes.label\"></localize> </label>\n                        <textarea id=\"maintainerNotesInput-{{req.oid}}\" class=\"form-control\" style=\"height:90px;max-width:100%;margin:0\" [(ngModel)]=\"action.maintainerNotes\" [disabled]=\"!req.permissions.includes('WRITE_MAINTAINER_NOTES')\"></textarea>\n                      </div>  \n                      \n                      <div *ngIf=\"req.permissions.includes('READ_MAINTAINER_NOTES')\" class=\"form-group\">\n                            <label for=\"additionalNotes-{{req.oid}}\"> <localize key=\"change.request.action.detail.additionalNotes\"></localize> </label>\n                            <input type=\"text\" id=\"additionalNotes-{{req.oid}}\" class=\"form-control\" style=\"width:100%;\" [(ngModel)]=\"action.additionalNotes\" [disabled]=\"!req.permissions.includes('WRITE_MAINTAINER_NOTES')\">\n                      </div>  \n                          \n                      <div *ngIf=\"action.approvalStatus !== 'PENDING' && action.decisionMaker !== ''\">\n                            <span style=\"font-style: italic;\">\n                                <localize *ngIf=\"action.approvalStatus !== 'REJECTED'\" key=\"change.request.status.approvedBy\"></localize>\n                                <localize *ngIf=\"action.approvalStatus === 'REJECTED'\" key=\"change.request.status.rejectedBy\"></localize>:\n                            </span>\n                            <label> {{action.decisionMaker}} </label>\n                       </div>\n                          \n                    </div>\n                    \n                    <div class=\"col-md-4\" >\n                      <div>\n                        <label><localize key=\"change.request.reference.documents.label\"></localize></label>\n                        <div *ngIf=\"action.documents.length > 0\" style=\"border:1px solid #ccc;border-radius: 4px;\">\n                          <ul style=\"padding:10px;margin:0;\">\n                              <li *ngFor=\"let doc of action.documents\" class=\"list-group-item\" style=\"padding:0;font-size:inherit;\">\n                                <a (click)=\"onDownloadFile(action.oid, doc.oid)\" >{{doc.fileName}}</a>\n                                <i (click)=\"onDeleteFile(action.oid, doc.oid)\" class=\"fa fa-times ico-remove\" style=\"margin-left:10px;\" aria-hidden=\"true\"></i>\n                              </li>\n                          </ul>\n                        </div>\n                        <p *ngIf=\"action.documents.length === 0\" style=\"color:grey;font-style:italic;\">\n                          <localize key=\"change.request.no.documents.label\"></localize>\n                        </p>\n                      \n                        <div *ngIf=\"req.permissions.includes('WRITE_DOCUMENTS')\" style=\"padding:10px 0;\">\n                            <!-- Limit file types with: accept=\".xls, .xlsx, .pdf, .doc\" -->\n                            <input class=\"ghost-input\" style=\"display:inline-block;padding:0;height:auto;border-radius:0;margin-top:10px;\" #myFile name=\"file\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" required />\n                            \n                            <button class=\"btn btn-primary pull-right\" style=\"margin:0;\" (click)=\"onUpload(action)\" [title]=\"'change.request.upload.document.btn.hover' | localize\">\n                              <localize key=\"change.request.reference.document.upload\"></localize>\n                            </button>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div> \n\n\n                <div *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS') || req.permissions.includes('DELETE')\" class=\"button-holder\">\n                  <span *ngIf=\"req.permissions.includes('WRITE_APPROVAL_STATUS')\">\n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onApproveAll(req)\" class=\"btn btn-primary\" role=\"button\" [title]=\"'change.request.accept.all.btn.hover' | localize\">\n                      <localize key=\"change.request.accept.all.btn\"></localize>\n                    </button>\n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onRejectAll(req)\" class=\"btn btn-danger\" role=\"button\" [title]=\"'change.request.reject.all.btn.hover' | localize\">\n                      <localize key=\"change.request.reject.all.btn\"></localize>\n                    </button>  \n                    <button [disabled]=\"req.approvalStatus !== 'PENDING'\" type=\"submit\" (click)=\"onExecute(req)\" class=\"btn btn-primary\" role=\"button\" [title]=\"'change.request.implement.decisions.btn.hover' | localize\">\n                      <localize key=\"change.request.accept.changes.btn\"></localize>\n                    </button>\n                  </span>\n                  \n                  <a [class.disabled]=\"!req.permissions.includes('DELETE')\" (click)=\"req.createdBy === getUsername() && onDelete(req)\" class=\"alert pull-right\" [title]=\"'change.request.delete.request.hover' | localize\" >\n                    <localize key=\"change.request.delete.request.btn\"></localize>\n                  </a>\n                  \n                </div>\n              </div>\n              <!-- <div class=\"col-md-1\"></div> -->\n            </div>\n\n          </td>\n        </tr> <!-- END Action panel -->\n        \n      </ng-template>\n    </tbody>\n  </table>\n  </div>   \n</div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nexport interface ActionDetailComponent {\n    endEdit(): void;\n}\n\n@Component( {\n    selector: 'action-detail-modal',\n    templateUrl: './action-detail-modal.component.html',\n    styleUrls: []\n} )\nexport class ActionDetailModalComponent {\n\n    action: any;\n    \n    readonly: boolean;\n\n    @ViewChild( \"cuDetail\" ) cuDetail: ActionDetailComponent;\n    @ViewChild( \"arDetail\" ) arDetail: ActionDetailComponent;\n    @ViewChild( \"spDetail\" ) spDetail: ActionDetailComponent;\n\n    @Input()\n    curAction( action: any, readonly: boolean ) {\n      this.action = action;\n      this.readonly = readonly\n    }\n\n    /*\n     * Called on confirm\n     */\n    public onFormat: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n    }\n\n    cancel(): void {\n        if ( this.cuDetail != null ) {\n            this.cuDetail.endEdit();\n        }\n\n        if ( this.arDetail != null ) {\n            this.arDetail.endEdit();\n        }\n\n        if ( this.spDetail != null ) {\n            this.spDetail.endEdit();\n        }\n\n        this.bsModalRef.hide();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n    }\n}\n","<div class=\"modal-body\" tabindex=\"-1\" role=\"dialog\">\n    <!-- <div class=\"heading\">\n        <h2>\n            <localize key=\"export-modal.title\"></localize>\n        </h2>\n\t</div> -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <crtable-detail-create-geo-object #cuDetail *ngIf=\"action && (action.actionType.endsWith('CreateGeoObjectAction') || action.actionType.endsWith('UpdateGeoObjectAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </crtable-detail-create-geo-object>\n            <crtable-detail-add-remove-child #arDetail *ngIf=\"action && (action.actionType.endsWith('AddChildAction') || action.actionType.endsWith('RemoveChildAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </crtable-detail-add-remove-child>\n            <set-parent-detail #spDetail *ngIf=\"action && (action.actionType.endsWith('SetParentAction'))\" [(action)]=\"action\" [readOnly]=\"readonly\"> </set-parent-detail>\n        </div>\n    </div>\n\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"button-holder text-right\">\n                <button type=\"button\" (click)=\"cancel();\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n                    <span> <localize key=\"modal.button.close\"></localize>\n                    </span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, GeoObjectOverTime } from '@registry/model/registry';\n\n\n@Component({\n\tselector: 'manage-versions-modal',\n\ttemplateUrl: './manage-versions-modal.component.html',\n\tstyleUrls: ['./manage-versions-modal.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('1000ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class ManageVersionsModalComponent implements OnInit {\n\t\n\t@Input() readonly: boolean;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonAttributeVersionChange: Subject<GeoObjectOverTime>;\n\n\tattribute: Attribute;\n\n\tgeoObjectType: GeoObjectType;\n\n\tgeoObjectOverTime: GeoObjectOverTime;\n\n\tisNewGeoObject: boolean = false;\n\n\tconstructor(public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onAttributeVersionChange = new Subject();\n\t}\n\n\tonVersionChange(geoObjectOverTime: GeoObjectOverTime): void {\n\t\t\n\t\tif (geoObjectOverTime != null) {\n\t\t\tthis.onAttributeVersionChange.next(geoObjectOverTime);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n}\n","<div class=\"modal-body\">\n\n    <div class=\"text-center\">\n        <h2 *ngIf=\"!readonly\">\n            <localize key=\"changeovertime.manageVersions.widget.title\"></localize>\n        </h2>\n    </div>\n    \n    <manage-versions\n      *ngIf=\"attribute != null\"\n      [attribute]=\"attribute\"\n      [geoObjectType]=\"geoObjectType\"\n      [geoObjectOverTimeInput]=\"geoObjectOverTime\"\n      [isNewGeoObject]=\"isNewGeoObject\"\n      (onChange)=\"onVersionChange($event)\"\n      [readonly]=\"readonly\"\n    ></manage-versions>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'geoObjectAttributeExcludesFilter',\n    pure: true\n})\nexport class GeoObjectAttributeExcludesPipe implements PipeTransform {\n    transform(items: any[], filter: string[]): any {\n        if (!items || !filter) {\n            return items;\n        }\n       \n        return items.filter(item => filter.indexOf(item.code) === -1)\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { LocalizationService, AuthService } from '@shared/service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'change-request-page',\n    templateUrl: './change-request-page.component.html',\n    styleUrls: ['./change-request-page.css']\n} )\nexport class ChangeRequestPageComponent implements OnInit {\n\n\tpageTitle: string;\n\tbsModalRef: BsModalRef;\n\tisAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n\tisContributorOnly: boolean;\n    \n    constructor( private localizationService: LocalizationService, private modalService: BsModalService, private service: AuthService ) {\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\t\tthis.isContributorOnly = service.isContributerOnly();\n\t}\n\n    ngOnInit(): void {\n\t}\n\t\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div id=\"app-container\" class=\"container-fluid\" style=\"height: 100%;\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div>\n          <div class=\"heading\">\n            <h2>{{pageTitle}}</h2>\n          </div>\n\n          <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n\n            <request-table></request-table>\n\n            <submit-change-request *ngIf=\"isContributorOnly\"></submit-change-request>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, EventEmitter, Output, ViewChild, SimpleChanges } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ManageParentVersionsModalComponent } from './manage-parent-versions-modal.component';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n@Component({\n\n\tselector: 'cascading-geo-selector',\n\ttemplateUrl: './cascading-geo-selector.html',\n})\nexport class CascadingGeoSelector {\n\n\t@Input() hierarchies: HierarchyOverTime[];\n\n\t@Output() valid = new EventEmitter<boolean>();\n\n\t@Input() isValid: boolean = true;\n\t@Input() readOnly: boolean = false;\n\n\t@ViewChild(\"mainForm\") mainForm;\n\n\t@Input() forDate: Date = new Date();\n\n\t@Input() customEvent: boolean = false;\n\n\t@Output() onManageVersion = new EventEmitter<HierarchyOverTime>();\n\n\tdateStr: string;\n\n\tcHierarchies: any[] = [];\n\n\tparentMap: any = {};\n\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private modalService: BsModalService, private registryService: RegistryService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tconst day = this.forDate.getUTCDate();\n\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (this.forDate.getUTCMonth() + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\n\t\t// Truncate any hours/minutes/etc which may be part of the date\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\n\t\tthis.calculate();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes['forDate']) {\n\t\t\tthis.calculate();\n\t\t}\n\t}\n\n\tcalculate(): any {\n\t\tconst time = this.forDate.getTime();\n\n\t\tthis.isValid = true;\n\n\t\tthis.cHierarchies = [];\n\t\tthis.hierarchies.forEach(hierarchy => {\n\t\t\tconst object = {};\n\t\t\tobject['label'] = hierarchy.label;\n\t\t\tobject['code'] = hierarchy.code;\n\n\t\t\tthis.isValid = this.isValid && (this.hierarchies.length > 0);\n\n\t\t\thierarchy.entries.forEach(pot => {\n\t\t\t\tconst startDate = Date.parse(pot.startDate);\n\t\t\t\tconst endDate = Date.parse(pot.endDate);\n\n\t\t\t\tif (time >= startDate && time <= endDate) {\n\t\t\t\t\tlet parents = [];\n\n\t\t\t\t\thierarchy.types.forEach(type => {\n\t\t\t\t\t\tlet parent: any = {\n\t\t\t\t\t\t\tcode: type.code,\n\t\t\t\t\t\t\tlabel: type.label\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (pot.parents[type.code] != null) {\n\t\t\t\t\t\t\tparent.text = pot.parents[type.code].text;\n\t\t\t\t\t\t\tparent.geoObject = pot.parents[type.code].geoObject;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparents.push(parent);\n\t\t\t\t\t});\n\n\t\t\t\t\tobject['parents'] = parents;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.cHierarchies.push(object);\n\n\t\t});\n\n\t\tthis.valid.emit();\n\t}\n\n\tpublic getIsValid(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getHierarchies(): any {\n\t\treturn this.hierarchies;\n\t}\n\n\tonManageVersions(code: string): void {\n\t\tconst hierarchy = this.hierarchies.find(h => h.code === code);\n\n\t\tif (this.customEvent) {\n\t\t\tthis.onManageVersion.emit(hierarchy);\n\t\t}\n\t\telse {\n\n\t\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tthis.bsModalRef.content.init(hierarchy);\n\t\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\t\tthis.calculate();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","\n<form style=\"overflow:visible;\" class=\"modal-form\" name=\"cascading-geo-selector\" #mainForm=\"ngForm\">\n  <fieldset>\n    <div>\n      <div class=\"row-holder\" style=\"overflow:visible;\" *ngFor=\"let hierarchy of this.cHierarchies\">\n        <div class=\"label-holder\">\n          <label>\n            {{hierarchy.label}}\n          </label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"container\" style=\"width:100%;\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" style=\"float:left;width:150px;\" *ngFor=\"let parent of hierarchy.parents; let i = index\">\n                {{parent.label}}\n\n                <input style=\"width:150px;\" type=\"text\" class=\"form-control\" disabled\n                  [value]=\"parent.geoObject.properties.displayLabel.localizedValue + ' : ' + parent.geoObject.properties.code\" [name]=\"hierarchy.code + '-' + parent.code + '-input'\">\n                  \n              </div>\n              \n            </div>\n\n            <div class=\"row\" *ngIf=\"!readOnly\">\n              <div class=\"col-sm-12\">\n                  <div class=\"button-holder\" style=\"padding: 20px 0 20px 0;text-align: left;\">\n                      <button type=\"submit\" style=\"\" (click)=\"onManageVersions(hierarchy.code)\" class=\"btn btn-primary\" role=\"button\">\n                          <localize key=\"changeovertime.manageVersions.button.label\"></localize>\n                      </button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { MasterListVersion } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { ExportFormatModalComponent } from './export-format-modal.component';\nimport { GeoObjectEditorComponent } from '../geoobject-editor/geoobject-editor.component';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService, AuthService, ProgressService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'master-list',\n\ttemplateUrl: './master-list.component.html',\n\tstyleUrls: []\n})\nexport class MasterListComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterListVersion = null;\n\tp: number = 1;\n\tcurrent: string = '';\n\tfilter: { attribute: string, value: string, label: string }[] = [];\n\tselected: string[] = [];\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 100,\n\t\tresults: []\n\t};\n\tsort = { attribute: 'code', order: 'ASC' };\n\tisPublished: boolean = true;\n\tisRefreshing: boolean = false;\n\tisWritable: boolean = false;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tpublic searchPlaceholder = \"\";\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\n\tconstructor(public service: RegistryService, private pService: ProgressService, private route: ActivatedRoute,\n\t\tprivate modalService: BsModalService, private localizeService: LocalizationService, private authService: AuthService) {\n\n\t\tthis.searchPlaceholder = localizeService.decode(\"masterlist.search\");\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\t\tthis.isPublished = (this.route.snapshot.paramMap.get('published') == \"true\");\n\n\t\tthis.service.getMasterListVersion(oid).then(version => {\n\t\t\tthis.list = version;\n\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\tattribute.isCollapsed = true;\n\t\t\t});\n\t\t\tconst orgCode = this.list.orgCode;\n\t\t\tconst typeCode = this.list.superTypeCode != null ? this.list.superTypeCode : this.list.typeCode;\n\n\t\t\tthis.isWritable = this.authService.isGeoObjectTypeRC(orgCode, typeCode);\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/progress/' + oid);\n\t\tthis.notifier.subscribe(message => {\n\t\t\tthis.handleProgressChange(message.content)\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\n\tonPageChange(pageNumber: number): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.data(this.list.oid, pageNumber, this.page.pageSize, this.filter, this.sort).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t//    onSearch(): void {\n\t//        this.filter = this.current;\n\t//\n\t//        this.onPageChange( 1 );\n\t//    }\n\n\tonSort(attribute: { name: string, label: string }): void {\n\t\tif (this.sort.attribute === attribute.name) {\n\t\t\tthis.sort.order = (this.sort.order === 'ASC' ? 'DESC' : 'ASC');\n\t\t}\n\t\telse {\n\t\t\tthis.sort = { attribute: attribute.name, order: 'ASC' };\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tattr.search = null;\n\t\t});\n\n\t\tthis.filter = [];\n\t\tthis.selected = [];\n\n\t\tthis.onPageChange(1);\n\t}\n\n\ttoggleFilter(attribute: any): void {\n\t\tattribute.isCollapsed = !attribute.isCollapsed;\n\t}\n\n\tgetValues(attribute: any): void {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tthis.message = null;\n\n\t\t\t// Get the valid values\n\t\t\tthis.service.values(this.list.oid, attribute.search, attribute.name, attribute.base, this.filter).then(options => {\n\t\t\t\toptions.unshift({ label: '[' + this.localizeService.decode(\"masterlist.nofilter\") + ']', value: null });\n\n\t\t\t\tobserver.next(options);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\thandleProgressChange(progress: any): void {\n\n\t\tthis.isRefreshing = (progress.current < progress.total);\n\n\t\tthis.pService.progress(progress);\n\t}\n\n\thandleDateChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && (attribute.value.start !== '' || attribute.value.end !== '')) {\n\n\t\t\tlet label = '[' + attribute.label + '] : [';\n\n\t\t\tif (attribute.value.start != null) {\n\t\t\t\tlabel += attribute.value.start;\n\t\t\t}\n\n\t\t\tif (attribute.value.start != null && attribute.value.end != null) {\n\t\t\t\tlabel += ' - ';\n\t\t\t}\n\n\t\t\tif (attribute.value.end != null) {\n\t\t\t\tlabel += attribute.value.end;\n\t\t\t}\n\n\t\t\tlabel += ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleInputChange(attribute: any): void {\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tif (attribute.value != null && attribute.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: attribute.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\thandleListChange(e: TypeaheadMatch, attribute: any): void {\n\t\tattribute.value = e.item;\n\t\tattribute.isCollapsed = true;\n\n\t\t// Remove the current attribute filter if it exists\n\t\tthis.filter = this.filter.filter(f => f.attribute !== attribute.base);\n\t\tthis.selected = this.selected.filter(s => s !== attribute.base);\n\n\t\tthis.list.attributes.forEach(attr => {\n\t\t\tif (attr.base === attribute.base) {\n\t\t\t\tattr.search = '';\n\t\t\t}\n\t\t});\n\n\t\tif (attribute.value.value != null && attribute.value.value !== '') {\n\t\t\tconst label = '[' + attribute.label + '] : ' + '[' + attribute.value.label + ']';\n\n\t\t\tthis.filter.push({ attribute: attribute.base, value: e.item.value, label: label });\n\t\t\tthis.selected.push(attribute.base);\n\t\t\tattribute.search = e.item.label;\n\t\t}\n\t\telse {\n\t\t\tattribute.search = '';\n\t\t}\n\n\t\tthis.onPageChange(1);\n\t}\n\n\tisFilterable(attribute: any): boolean {\n\t\treturn attribute.type !== 'none' && (attribute.dependency.length === 0 || this.selected.indexOf(attribute.base) !== -1 || this.selected.filter(value => attribute.dependency.includes(value)).length > 0);\n\t}\n\n\tonEdit(data): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\teditModal.content.configureAsExisting(data.code, this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterList(this.list.oid).toPromise()\n\t\t\t.then(list => {\n\t\t\t\tthis.list = list;\n\t\t\t\tthis.list.attributes.forEach(attribute => {\n\t\t\t\t\tattribute.isCollapsed = true;\n\t\t\t\t});\n\n\t\t\t\t// Refresh the resultSet\n\t\t\t\tthis.onPageChange(1);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\tonNewGeoObject(): void {\n\t\tlet editModal = this.modalService.show(GeoObjectEditorComponent, { backdrop: true, ignoreBackdropClick: true });\n\t\t//editModal.content.fetchGeoObject( data.code, this.list.typeCode );\n\t\teditModal.content.configureAsNew(this.list.typeCode, this.list.forDate, this.list.isGeometryEditable);\n\t\teditModal.content.setMasterListId(this.list.oid);\n\t\teditModal.content.setOnSuccessCallback(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t});\n\t}\n\n\tonExport(): void {\n\t\tthis.bsModalRef = this.modalService.show(ExportFormatModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.onFormat.subscribe(format => {\n\t\t\tif (format == 'SHAPEFILE') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-shapefile?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t\telse if (format == 'EXCEL') {\n\t\t\t\twindow.location.href = acp + '/master-list/export-spreadsheet?oid=' + this.list.oid + \"&filter=\" + encodeURIComponent(JSON.stringify(this.filter));\n\t\t\t}\n\t\t});\n\t}\n\n\tchangeTypeaheadLoading(attribute: any, loading: boolean): void {\n\t\tattribute.loading = loading;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n    <!-- <progress-bar></progress-bar> -->\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\">\n            <div *ngIf=\"list\" class=\"col-md-12\">\n                <h2>\n                    <!-- <localize key=\"masterlist.title\"></localize> -->\n                    {{list.displayLabel}}\n                </h2>\n            </div>\n        </div>\n        <div *ngIf=\"list\" class=\"row form-group\">\n\n            <div class=\"col-md-12\">\n                <h4>\n                    <localize key=\"masterlist.publishDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.publishDate)}}\n                      </span>\n                </h4>\n                \n                <h4>\n                    <localize key=\"masterlist.forDate\"></localize>\n                    : <span class=\"date-string-display\">\n                          {{formatDate(list.forDate)}}\n                      </span>\n                </h4>\n            </div>\n        </div>\n<!--         <div class=\"row\"> -->\n<!--             <div *ngIf=\"list\" class=\"col-md-12\"> -->\n<!--               <a [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, (!isWritable || list.isAbstract), list.forDate]\" routerLinkActive=\"active\"> -->\n<!--                 <localize key=\"masterlist.gotoMap\"></localize> -->\n<!--               </a> -->\n                \n<!--             </div> -->\n<!--         </div> -->\n\n\n        <div *ngIf=\"filter.length > 0\" class=\"row form-group\">\n            <div class=\"col-md-12 table-responsive\" style=\"\">\n                <localize key=\"masterlist.filters\"></localize>\n                <ol>\n                    <li *ngFor=\"let f of filter\">{{f.label}}</li>\n                </ol>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            \n                <div class=\"button-holder pull-right\">\n            \n                    <span class=\"clickable\" (click)=\"clearFilters()\" style=\"padding: 10px;\">\n                        <span class=\"fa-stack fa-md\">\n                            <i class=\"fa fa-filter fa-stack-2x\" style=\"font-size: 25px;\"></i>\n                            <i class=\"fa fa-times-circle fa-stack-1x\" style=\"font-size: 13px;top: 4px;left: 6px;\"></i>\n                        </span>\n                        <localize key=\"masterlist.clearFilters\"></localize>\n                    </span>\n                    \n                    <span *ngIf=\"!isPublished\" class=\"clickable\" (click)=\"onPublish()\" style=\"padding: 10px;\">\n                        <i [ngClass]=\"{'fa fa-refresh clickable':true, 'fa-spin':isRefreshing}\" style=\"font-size: 24px;vertical-align: middle;padding-right: 5px;\" aria-hidden=\"true\"></i>\n                        <localize key=\"masterlist.publish\"></localize>\n                    </span>\n\n\n                        <button *ngIf=\"isWritable && !list.isAbstract\" type=\"submit\"\n                           [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, '__NEW__', (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"\n                         class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"masterlist.newGeoObject\"></localize>\n                        </button>\n                        <button type=\"submit\" (click)=\"onExport()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize *ngIf=\"filter.length === 0\" key=\"io.export.allrows\"></localize>\n                            <localize *ngIf=\"filter.length > 0\" key=\"io.export.filteredrows\"></localize>\n                        </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div *ngIf=\"list\" class=\"col-md-12 table-responsive\" style=\"\">\n                <table class=\"list-table table table-bordered table-striped\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 3%\" class=\"label-column\"><localize key=\"masterlist.view.column\"></localize></th>\n                            <th *ngFor=\"let attribute of list.attributes\" class=\"label-column\">\n\n                                <div style=\"display: table-cell; padding-right: 10px; vertical-align: middle;\" *ngIf=\"isFilterable(attribute)\">\n                                    <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\"> \n\t\t\t\t\t\t\t\t\t\t<i style=\"font-size: 20px;\" class=\"fa fa-filter\" [title]=\"'button.filter.helptext' | localize\"></i>\n                                    </a>\n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; word-break: keep-all; word-wrap: normal;\">{{attribute.label}} </a> \n\t\t\t\t\t\t\t\t<a (click)=\"onSort(attribute)\" style=\"display: table-cell; vertical-align: middle; padding-left: 5px;\"> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'ASC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-down\" style=\"font-size: inherit;\"></i> \n\t\t\t\t\t\t\t\t\t<i *ngIf=\"sort.order === 'DESC' && sort.attribute === attribute.name\" class=\"fa fa-arrow-up\" style=\"font-size: inherit;\"></i>\n                            \t</a>\n\n                                <div *ngIf=\"isFilterable(attribute)\">\n                                    <!-- <a class=\"\" (click)=\"toggleFilter(attribute)\" [attr.aria-expanded]=\"!attribute.isCollapsed\" aria-controls=\"collapseBasic\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-filter\"></i>\n\t\t\t\t\t\t\t\t</a> -->\n                                    <div id=\"collapseBasic\" [collapse]=\"attribute.isCollapsed\">\n                                        <input *ngIf=\"attribute.type === 'input'\" [name]=\"attribute.name\" [(ngModel)]=\"attribute.value\" (keyup.enter)=\"handleInputChange(attribute)\" type=\"text\" class=\"form-control search-input\" />\n                                        <div *ngIf=\"attribute.type === 'date'\">\n                                            <input [name]=\"attribute.name + 'Start'\" [(ngModel)]=\"attribute.value.start\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" /> <input [name]=\"attribute.name + 'End'\" [(ngModel)]=\"attribute.value.end\" (change)=\"handleDateChange(attribute)\" type=\"date\" class=\"form-control search-input\" />\n                                        </div>\n                                        <input *ngIf=\"attribute.type === 'list'\" \n                                          type=\"text\" \n                                          [placeholder]=\"('masterlist.search' | localize) + '...'\" \n                                          [name]=\"attribute.name\"\n                                          [(ngModel)]=\"attribute.search\"\n                                          [typeaheadAsync]=\"true\"\n                                          [typeahead]=\"getValues(attribute)\"\n                                          (typeaheadOnSelect)=\"handleListChange($event, attribute)\"\n                                          [typeaheadOptionsLimit]=\"100\"\n                                          [typeaheadMinLength]=\"0\"\n                                          [typeaheadWaitMs]=\"300\"\n                                          [ngClass]=\"{'inline-loading':attribute.loading}\"    \n                                          (typeaheadLoading)=\"changeTypeaheadLoading(attribute, $event)\"                                      \n                                          typeaheadOptionField=\"label\"\n                                          class=\"form-control\" autocomplete=\"off\">\n\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\">\n                            <td style=\"width: 3%; text-align: center;\" class=\"label-column\">\n                              <a class=\"fa\" [ngClass]=\"isWritable ? 'fa fa-pencil' : 'fa fa-eye'\" [routerLink]=\"['/registry/dataset-location-manager', list.oid, list.typeCode, !isWritable, list.forDate, result.code, (!isWritable || list.isAbstract)]\" routerLinkActive=\"active\"></a>\n                            </td>\n                            <td *ngFor=\"let attribute of list.attributes\" class=\"label-column\">{{ result[attribute.name] }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!-- <div class=\"row form-group\">\n            <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        </div> -->\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <pagination-controls style=\"position: absolute;\" (pageChange)=\"onPageChange($event)\"></pagination-controls>\n            </div>\n        </div>\n    </div>\n    <!-- </div> -->\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { PublishModalComponent } from './publish-modal.component';\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { RegistryService } from '@registry/service';\nimport { AuthService, LocalizationService } from '@shared/service';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'published-master-list-history',\n\ttemplateUrl: './published-master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class PublishedMasterListHistoryComponent implements OnInit, OnDestroy {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tpage: any = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresults: []\n\t};\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tisAdmin: boolean;\n\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, public authService: AuthService, private localizeService: LocalizationService) {\n\n\t\tthis.isAdmin = authService.isAdmin();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'PUBLISH_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.notifier.complete();\n\t}\n\n\t//isGeoObjectTypeRM(type: string): boolean {\n\t//\treturn this.authService.isGeoObjectTypeRM(type);\n\t//}\n\n\tonDeleteMasterListVersion(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.updateList();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdateList(): void {\n\t\t// update the list of versions. \n\t\tthis.service.getMasterListHistory(this.oid, \"PUBLISHED\").then(list => {\n\t\t\tthis.list = list;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.publishMasterListVersions(this.list.oid).then((data: { job: string }) => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.list != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getPublishMasterListJobs(this.list.oid, this.page.pageSize, pageNumber, \"createDate\", true).then(response => {\n\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t\tthis.updateList();\n\t\t}\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, true])\n\t}\n\n\tonPublishShapefile(version: MasterListVersion): void {\n\n\t\tthis.service.publishShapefile(version.oid).then(() => {\n\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonDownloadShapefile(version: MasterListVersion): void {\n\t\twindow.location.href = acp + '/master-list/download-shapefile?oid=' + version.oid;\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n     <div *ngIf=\"list && ((list.write))\" style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" \n                    [title]=\"'masterList.publish.help.text' | localize\">\n                        <localize key=\"masterlist.publish.versions\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\" style=\"border-bottom: solid lightgrey 3px;\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.publishDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onPublishShapefile(version)\" class=\"btn btn-default\" role=\"button\">\n                                    <localize key=\"masterlist.publish-shapefile\"></localize>\n                                </button>                                \n                                <button *ngIf=\"version.shapefile\" type=\"submit\" (click)=\"onDownloadShapefile(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"masterlist.download\"></localize>\n                                </button>   \n                                <button *ngIf=\"list && (list.write)\" type=\"submit\" (click)=\"onDeleteMasterListVersion( version )\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>  \n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.publishDate)}}\n                          </span>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12 order-md-1\">\n            <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                    <table class=\"table table-striped\">\n                        <thead>\n                            <tr style=\"height: 56px;\">\n                                <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let job of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <td style=\"vertical-align: middle;\">\n                                    <div class=\"wrapper\">\n                                        <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                        <p style=\"padding-left: 60px;\">\n                                            <span style=\"display: block;\"> {{job.createDate}} </span>\n                                            <span style=\"display: block;\"> {{job.author}} </span>\n                                            <span style=\"display: block;\"> {{job.type}} </span>\n                                            <span style=\"display: block;\"> {{job.status}} </span>\n                                            <span *ngIf=\"job.exception\" style=\"display: block;\"> {{job.exception.message}} </span>\n                                        </p>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                    </div>\n                </div>\n            </ul>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MasterList, MasterListVersion } from '@registry/model/registry';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { PublishModalComponent } from './publish-modal.component';\n\nimport { RegistryService } from '@registry/service';\nimport { LocalizationService, AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'master-list-history',\n\ttemplateUrl: './master-list-history.component.html',\n\tstyleUrls: []\n})\nexport class MasterListHistoryComponent implements OnInit {\n\tmessage: string = null;\n\tlist: MasterList = null;\n\tforDate: string = '';\n\tisForDateValid: boolean = true;\n\n\t@Input() oid: string;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: RegistryService, private router: Router, private modalService: BsModalService, private localizeService: LocalizationService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.getMasterListHistory(this.oid, \"EXPLORATORY\").then(list => {\n\t\t\tthis.list = list;\n\t\t});\n\t}\n\n\tonPublish(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.createMasterListVersion(this.list.oid, this.forDate).then(version => {\n\t\t\tthis.list.versions.push(version);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonViewMetadata(): void {\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\n\tonView(version: MasterListVersion): void {\n\t\tthis.router.navigate(['/registry/master-list/', version.oid, false])\n\t}\n\n\tonDelete(version: MasterListVersion): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + version.forDate + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.service.deleteMasterListVersion(version.oid).then(response => {\n\t\t\t\tthis.list.versions = this.list.versions.filter((value, index, arr) => {\n\t\t\t\t\treturn value.oid !== version.oid;\n\t\t\t\t});\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div>\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div *ngIf=\"list && list.exploratory\" style=\"margin-bottom: 10px;\" class=\"row\">\n\n        <div class=\"col-md-12\">\n            <form #myForm=\"ngForm\" style=\"margin-left: 10px;\">\n                <div class=\"form-group\">\n                    <label for=\"forDate\" style=\"display: block; margin-bottom: 0;\"><localize key=\"masterlist.publishingFor\"></localize></label> \n\n                    <date-field [(value)]=\"forDate\" [(valid)]=\"isForDateValid\" label=\"\" style=\"display:inline-grid;\" [inputName]=\"'forDate'\" \n                        [allowFutureDates]=\"false\" [required]=\"true\" [placement]=\"'right'\"></date-field>\n\n                    <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onPublish()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid || !isForDateValid\">\n                        <localize key=\"masterlist.publishNewVersion\"></localize>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row form-group\">\n        <div *ngIf=\"list\" class=\"col-md-12 table-responsive\">\n            <table class=\"list-table table\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 50%\" class=\"label-column\"><localize key=\"masterlist.actions\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.forDate\"></localize></th>\n                        <th style=\"width: 15%\" class=\"label-column\"><localize key=\"masterlist.generatedDate\"></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- <tr *ngFor=\"let result of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"fade-ngRepeat-item\"> -->\n                    <tr *ngFor=\"let version of list.versions\">\n                        <td style=\"width: 70%\">\n                            <div class=\"button-holder\">\n                                <button type=\"submit\" (click)=\"onView(version)\" class=\"btn btn-primary\" role=\"button\">\n                                    <localize key=\"modal.button.view\"></localize>\n                                </button>\n                                <button *ngIf=\"list.write\" type=\"submit\" (click)=\"onDelete(version)\" class=\"btn btn-danger\" role=\"button\">\n                                    <localize key=\"modal.button.delete\"></localize>\n                                </button>\n                            </div>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.forDate)}}\n                          </span>\n                        </td>\n                        <td style=\"width: 15%\" class=\"label-column\">\n                          <span class=\"date-string-display\">\n                              {{formatDate(version.createDate)}}\n                          </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { MasterList } from '@registry/model/registry';\nimport { RegistryService } from '@registry/service';\nimport { PublishModalComponent } from './publish-modal.component';\n\n@Component({\n\n\tselector: 'master-list-view',\n\ttemplateUrl: './master-list-view.component.html',\n\tstyleUrls: ['./master-list-view.component.css']\n})\nexport class MasterListViewComponent implements OnInit {\n\n\tcontent: string = \"\";\n\tlist: MasterList = null;\n\n\t/*\n\t * Reference to the modal current showing\n     */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute) {\n\t}\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tif (oid != null) {\n\t\t\tthis.content = \"PUB\";\n\t\t}\n\n\t\tthis.service.getMasterList(oid).then(list => {\n\t\t\tthis.list = list;\n\n\t\t\tif (list.read) {\n\t\t\t\tthis.content = \"EXP\";\n\t\t\t}\n\t\t});\n\t}\n\n\tonViewMetadata(event: any): void {\n\t\tevent.preventDefault();\n\n\t\tthis.bsModalRef = this.modalService.show(PublishModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.readonly = true;\n\t\tthis.bsModalRef.content.master = this.list;\n\t\tthis.bsModalRef.content.isNew = false;\n\t}\n\n\trenderContent(content: string): void {\n\t\tthis.content = content;\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h3>{{list.displayLabel.localizedValue}}</h3>\n                    </div>\n                </div>\n                <div *ngIf=\"list\" class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h5>\n                            <b> <a href=\"#\" (click)=\"onViewMetadata($event)\"><localize key=\"masterlist.view\"></localize> </a></b>\n                        </h5>\n                    </div>\n                </div>\n                \n                <div>\n                    <a *ngIf=\"list && list.read\" style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'EXP'}\" (click)=\"renderContent('EXP')\"><localize key=\"lists.exploratory.link.label\"></localize></a>\n                    <a style=\"margin-right: 10px; font-size: 20px;\" [ngClass]=\"{'active': content === 'PUB'}\" (click)=\"renderContent('PUB')\"><localize key=\"lists.published.link.label\"></localize></a>\n                </div>\n\n                <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n                    <published-master-list-history *ngIf=\"list && content === 'PUB'\" [oid]=\"list.oid\"></published-master-list-history>\n                    <master-list-history *ngIf=\"list && content === 'EXP'\" [oid]=\"list.oid\"></master-list-history>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { interval } from 'rxjs';\n\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob, ScheduledJobOverview, PaginationPage } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\n@Component({\n\tselector: 'scheduled-jobs',\n\ttemplateUrl: './scheduled-jobs.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class ScheduledJobsComponent implements OnInit {\n\tmessage: string = null;\n\n\tactiveJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompleteJobsPage: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tisViewAllOpen: boolean = false;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService, private router: Router,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.onActiveJobsPageChange(1);\n\n\t\tthis.pollingData = interval(1000).subscribe(() => {\n\t\t\tthis.activeTimeCounter++\n\t\t\tthis.completeTimeCounter++\n\n\t\t\tif (this.isViewAllOpen) {\n\t\t\t\tif (this.activeTimeCounter >= 4) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t\tif (this.completeTimeCounter >= 7) {\n\t\t\t\t\tthis.onCompleteJobsPageChange(this.completeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.completeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.activeTimeCounter >= 2) {\n\t\t\t\t\tthis.onActiveJobsPageChange(this.activeJobsPage.pageNumber);\n\n\t\t\t\t\tthis.activeTimeCounter = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.pollingData.unsubscribe();\n\t}\n\n\tformatJobStatus(job: ScheduledJobOverview) {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.localizeService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PaginationPage): void {\n\n\t\tpage.results.forEach(job => {\n\n\t\t\tlet stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{ \"label\": this.localizeService.decode(\"scheduler.step.fileImport\"), \"status\": \"COMPLETE\" },\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.staging\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.validation\"),\n\t\t\t\t\t\t\"status\": job.stage === \"VALIDATE\" || job.stage === \"VALIDATION_RESOLVE\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"VALIDATE\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.localizeService.decode(\"scheduler.step.databaseImport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"IMPORT\" || job.stage === \"IMPORT_RESOLVE\" || job.stage === \"RESUME_IMPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tjob = job as ScheduledJobOverview;\n\t\t\tjob.stepConfig = stepConfig;\n\t\t});\n\n\t}\n\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"NEW\", \"VALIDATE\", \"VALIDATION_RESOLVE\", \"IMPORT\", \"IMPORT_RESOLVE\", \"RESUME_IMPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\tonViewAllCompleteJobs(): void {\n\t\tthis.onCompleteJobsPageChange(1);\n\n\t\tthis.isViewAllOpen = true;\n\t}\n\n\n\tonView(code: string): void {\n\t\tthis.router.navigate(['/registry/master-list-history/', code])\n\t}\n\n\tonActiveJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJobs(this.activeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.activeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.activeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonCompleteJobsPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getCompletedScheduledJobs(this.completeJobsPage.pageSize, pageNumber, \"createDate\", false).then(response => {\n\n\t\t\tthis.completeJobsPage = response;\n\t\t\tthis.formatStepConfig(this.completeJobsPage);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\tonCancelScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(job.configuration).then(response => {\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string, job: ScheduledJob): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\tthis.bsModalRef.hide()\n\n\t\t\t\tfor (let i = 0; i < this.activeJobsPage.results.length; ++i) {\n\t\t\t\t\tlet activeJob = this.activeJobsPage.results[i];\n\n\t\t\t\t\tif (activeJob.jobId === job.jobId) {\n\t\t\t\t\t\tthis.activeJobsPage.results.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onViewAllCompleteJobs();\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"py-5\">\n            <h2>\n                <localize key=\"scheduledjobs.title\"></localize>\n            </h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n                <ul class=\"list-group\">\n                    <div class=\"solid-table-wrapper\">\n                        <table class=\"table table-striped\"> \n                            <thead > \n                                <tr style=\"height: 56px;\"> \n                                    <th style=\"vertical-align: middle;\">\n                                        <localize key=\"scheduledjobs.jobs.table.header\"></localize>                                      \n                                    </th> \n                                </tr> \n                            </thead> \n                            <tbody> \n                                <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                                <tr *ngFor=\"let job of activeJobsPage.results | paginate: { id: 'activeJobs', itemsPerPage: activeJobsPage.pageSize, currentPage: activeJobsPage.pageNumber, totalItems: activeJobsPage.count }\" >\n                                    <td style=\"vertical-align: middle;\">\n                                        <div class=\"wrapper\">\n                                            <i style=\"position: absolute;font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            <p style=\"padding-left: 60px;\">\n                                                <span style=\"display: block;\">\n                                                    {{job.fileName}}\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    <span class=\"date-string-display\">\n                                                        {{formatDate(job.createDate)}}\n                                                    </span>\n                                                </span>\n                                                <span style=\"display: block;\">\n                                                    {{formatJobStatus(job)}}\n                                                </span>\n                                            </p>\n\n                                            <step-indicator [steps]=\"job.stepConfig\"></step-indicator>\n\n                                        </div>\n                                    </td> \n                                    <td *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;vertical-align: middle;\">  \n\n                                        <div class=\"button-holder\" style=\"float: right;\">\n                                            <a [routerLink]=\"'/registry/job/' + job.historyId\" routerLinkActive=\"active\">\n                                                <button class=\"btn btn-primary\" role=\"button\">\n                                                    <localize *ngIf=\"job.stage === 'IMPORT_RESOLVE' || job.stage === 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.fix.problems.button\"></localize>\n                                                    <localize *ngIf=\"job.stage != 'IMPORT_RESOLVE' && job.stage != 'VALIDATION_RESOLVE'\" key=\"scheduledjobs.detail.button\"></localize>\n                                                </button>\n                                            </a>\n                                            <button *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\" type=\"button\" (click)=\"onCancelScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n                                                <localize key=\"etl.import.cancel.openModal\"></localize>\n                                            </button>\n                                            <button *ngIf=\"job.stage === 'IMPORT_RESOLVE'\" type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId, job)\" class=\"btn btn-danger\" role=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n\t\t\t\t\t\t\t\t\t\t\t\t                    </button>\n                                        </div>\n                                    </td> \n                                </tr> \n\n                            </tbody> \n                        </table>\n                        <div *ngIf=\"activeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                            <pagination-controls id=\"activeJobs\" (pageChange)=\"onActiveJobsPageChange($event)\"></pagination-controls>\n                        </div>\n                    </div>\n\n                    <div class=\"solid-table-wrapper\">\n\t                    <table class=\"table table-striped\"> \n\t                      <thead> \n\t                        <tr> \n\t                          <th style=\"width:40%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.completedjobs.table.header\"></localize>                                      \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n\t                            <localize style=\"line-height: 40px;\" key=\"scheduledjobs.status\"></localize>                   \n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importedRecords\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importStartDate\"></localize>                   \n                            </th>\n                            <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"width:15%;border-bottom: none;\">\n                              <localize style=\"line-height: 40px;\" key=\"scheduledjobs.importEndDate\"></localize>                   \n                            </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length < 1\" style=\"border-bottom: none; width:15%\">\n\t                            <button type=\"submit\" (click)=\"onViewAllCompleteJobs()\" class=\"btn btn-default pull-right\" role=\"button\">\n\t                              <localize key=\"scheduledjobs.view.completed.jobs.button\"></localize>\n\t                            </button>\n\t                          </th>\n\t                          <th *ngIf=\"completeJobsPage.results.length > 0\" style=\"border-bottom: none; width:0%\">\n                            </th>\n\t                        </tr> \n\t                      </thead> \n\t                      <tbody> \n\t                      <!-- <tr *ngFor=\"let job of completedJobs; let i = index;\">  -->\n\t                      <tr *ngFor=\"let job of completeJobsPage.results | paginate: { id: 'completeJobs', itemsPerPage: completeJobsPage.pageSize, currentPage: completeJobsPage.pageNumber, totalItems: completeJobsPage.count }\" >\n\t                        <td style=\"width:40%; vertical-align: middle;\">\n\t                          <div class=\"wrapper\">\n                              <i class=\"fa fa-file\" style=\"position: absolute;\" aria-hidden=\"true\"></i>\n                              <p style=\"padding-left: 30px;margin: 0;\">{{job.fileName}}</p>\n\t                          </div>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n\t                          <p style=\"padding-left: 0px;margin: 0;\">{{formatJobStatus(job)}}</p>\n\t                        </td>\n\t                        <td style=\"width:15%; vertical-align: middle;\">\n                            <p style=\"padding-left: 0px;margin: 0;\">{{job.importedRecords}}</p>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                              <span class=\"date-string-display\">\n                                {{formatDate(job.createDate)}}\n                              </span>\n                          </td>\n                          <td style=\"width:15%; vertical-align: middle;\">\n                            <span class=\"date-string-display\">\n                                {{formatDate(job.lastUpdateDate)}}\n                            </span>\n                          </td>\n\t                        <td *ngIf=\"isAdmin || isMaintainer\" style=\"width:15%;text-align: right;vertical-align: middle;\">                                \n\t                           <!-- \n\t                           <button type=\"submit\" (click)=\"onView(job.historyId)\" class=\"btn btn-primary\" role=\"button\"><localize key=\"scheduledjobs.detail.button\"></localize></button>\n\t                           -->\n\t                           <!-- <button type=\"submit\" (click)=\"onDelete(job)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"modal.button.delete\"></localize></button> -->\n\t                        </td>\n\t                       </tr> \n\t                      </tbody> \n\t                    </table>\n\t\n\t                    <div *ngIf=\"completeJobsPage.results.length > 0\" class=\"solid-table-footer\">\n                        <pagination-controls id=\"completeJobs\" (pageChange)=\"onCompleteJobsPageChange($event)\"></pagination-controls>\n\t                    </div>\n                    </div>\n                </ul>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { JobConflictModalComponent } from './conflict-widgets/job-conflict-modal.component';\nimport { ReuploadModalComponent } from './conflict-widgets/reupload-modal.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'job',\n\ttemplateUrl: './job.component.html',\n\tstyleUrls: ['./scheduled-jobs.css']\n})\nexport class JobComponent implements OnInit {\n\tmessage: string = null;\n\tjob: ScheduledJob;\n\tallSelected: boolean = false;\n\thistoryId: string = \"\";\n\n\tpage: any = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\ttimeCounter: number = 0;\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\n\tisPolling: boolean = false;\n\thasRowValidationProblem: boolean = false;\n\n\tnotifier: WebSocketSubject<{ type: string, message: string }>;\n\n\tconstructor(public service: RegistryService, private modalService: BsModalService,\n\t\tprivate router: Router, private route: ActivatedRoute,\n\t\tprivate localizeService: LocalizationService, authService: AuthService, public ioService: IOService) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.historyId = this.route.snapshot.params[\"oid\"];\n\n\t\tthis.onPageChange(1);\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'IMPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t}\n\n\tformatAffectedRows(rows: string) {\n\t\treturn rows.replace(/,/g, \", \");\n\t}\n\n\tformatValidationResolve(obj: any) {\n\t\treturn JSON.stringify(obj);\n\t}\n\n\tonProblemResolved(problem: any): void {\n\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\tlet pageConflict = this.page.results[i];\n\n\t\t\tif (pageConflict.id === problem.id) {\n\t\t\t\tthis.page.results.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFriendlyProblemType(probType: string): string {\n\n\t\tif (probType === \"net.geoprism.registry.io.ParentCodeException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.PostalCodeLocationException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.postal.code.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.AmbiguousParentException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.multi.parent.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.io.InvalidGeometryException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.invalid.geom.lookup\");\n\t\t}\n\n\t\tif (probType === \"net.geoprism.registry.DataNotFoundException\") {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.datanotfound\");\n\t\t}\n\n\t\tif (\n\t\t\tprobType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n\t\t\t|| probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.permission\");\n\t\t}\n\n\t\t// if(probType === \"net.geoprism.registry.io.TermValueException\"){\n\t\t//   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n\t\t// }\n\n\t\tif (\n\t\t\tprobType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n\t\t\t|| probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n\t\t) {\n\t\t\treturn this.localizeService.decode(\"scheduledjobs.job.problem.type.duplicate.data.lookup\");\n\t\t}\n\n\t\treturn probType;\n\t}\n\n\n\tonEdit(problem: any): void {\n\t\t// this.router.navigate( ['/registry/master-list-history/', code] )\n\n\t\tthis.bsModalRef = this.modalService.show(JobConflictModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.problem = problem;\n\t\tthis.bsModalRef.content.job = this.job;\n\t\tthis.bsModalRef.content.onConflictAction.subscribe(data => {\n\t\t\tif (data.action === 'RESOLVED') {\n\t\t\t\tthis.onProblemResolved(data.data);\n\t\t\t}\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: any): void {\n\n\t\tthis.message = null;\n\n\t\tthis.service.getScheduledJob(this.historyId, this.page.pageSize, pageNumber, true).then(response => {\n\n\t\t\tthis.job = response;\n\n\t\t\tif (this.job.stage === 'IMPORT_RESOLVE') {\n\t\t\t\tthis.page = this.job.importErrors;\n\t\t\t}\n\t\t\telse if (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.page = this.job.problems;\n\n\t\t\t\tfor (let i = 0; i < this.page.results.length; ++i) {\n\t\t\t\t\tlet problem = this.page.results[i];\n\n\t\t\t\t\tif (problem.type === 'RowValidationProblem') {\n\t\t\t\t\t\tthis.hasRowValidationProblem = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tonViewAllActiveJobs(): void {\n\n\t}\n\n\tonViewAllCompleteJobs(): void {\n\n\t}\n\n\ttoggleAll(): void {\n\t\tthis.allSelected = !this.allSelected;\n\n\t\tthis.job.importErrors.results.forEach(row => {\n\t\t\trow.selected = this.allSelected;\n\t\t})\n\t}\n\n\tonReuploadAndResume(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ReuploadModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.job = this.job;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t});\n\t}\n\n\tonResolveScheduledJob(historyId: string): void {\n\t\tif (this.page.results.length == 0) {\n\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs']);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\n\t\t\tif (this.job.stage === 'VALIDATION_RESOLVE') {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.validationDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.validationButton\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.resume.modal.importDescription\");\n\t\t\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.resume.modal.importButton\");\n\t\t\t}\n\n\t\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\t\tthis.service.resolveScheduledJob(historyId).then(response => {\n\n\t\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\n\t\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\t\tthis.error(err);\n\t\t\t\t});\n\n\t\t\t});\n\t\t}\n\t}\n\n\tonCancelScheduledJob(historyId: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"etl.import.cancel.modal.description\");\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"etl.import.cancel.modal.button\");\n\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\n\t\t\tthis.ioService.cancelImport(this.job.configuration).then(response => {\n\t\t\t\t//this.bsModalRef.hide()\n\t\t\t\tthis.router.navigate(['/registry/scheduled-jobs'])\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                                <strong>{{job.fileName}}</strong>\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              <span class=\"date-string-display\">\n                                    {{formatDate(job.createDate)}}\n                              </span>\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.importedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.importedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n                <div class=\"col-md-5 order-md-1\">\n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'VALIDATION_RESOLVE'\" style=\"display:block; margin: 10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.validation.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.reimport.button\"></localize>\n                    </button>\n                  </div>\n                  \n                  <div *ngIf=\"page.results.length == 0 && job && job.stage === 'IMPORT_RESOLVE'\" style=\"display:block; margin:10px;text-align: right;\">\n                    <span style=\"display:block; margin-bottom:10px;\">\n                      <localize key=\"scheduledjobs.import.problems.complete.msg\"></localize>\n                    </span>\n                    <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                      <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                    </button>\n                  </div>\n      \n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && !hasRowValidationProblem\" class=\"button-holder\" style=\"display:block; margin:10px;text-align: right;\">\n                      <button type=\"submit\" (click)=\"onResolveScheduledJob(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <localize *ngIf=\"job && job.stage === 'VALIDATION_RESOLVE'\" key=\"etl.import.resume.openModal\"></localize>\n                        <span *ngIf=\"job && job.stage === 'IMPORT_RESOLVE'\">\n                          <localize key=\"scheduledjobs.complete.import.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <div *ngIf=\"hasRowValidationProblem\"class=\"button-holder\" style=\"display:block; margin:10px;\">\n                    <button type=\"submit\" (click)=\"onReuploadAndResume(job.historyId)\" class=\"btn btn-primary\" role=\"button\">\n                        <span>\n                          <localize key=\"scheduledjobs.reupload.resume.button\"></localize>\n                        </span>\n                      </button>\n                  </div>\n                  \n                  <!--\n                  <div *ngIf=\"page && page.results != null && page.results.length > 0 && job.stage === 'VALIDATION_RESOLVE'\" class=\"button-holder\" style=\"display:block; margin:10px;\">\n                      <button type=\"button\" (click)=\"onCancelScheduledJob(job.historyId)\" class=\"btn btn-danger\" role=\"button\"><localize key=\"etl.import.cancel.openModal\"></localize></button>\n                  </div>\n                  -->\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr>\n\t                                <!-- <th class=\"label-column\">\n\t                                  <div class=\"check-block\">\n\t                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n\t                                     <span></span>\n\t                                   </div>\n\t                                  </div>\n\t                                </th> -->\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"scheduledjobs.import.table.problem.type.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n\t                                    \n\t                                </th>\n                                </tr>\n                            </thead>\n                            <thead *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n                              <tr>\n                                <!-- <th class=\"label-column\">\n                                  <div class=\"check-block\">\n                                   <div (click)=\"toggleAll()\" [ngClass]=\"{'chk-checked' : allSelected}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n                                     <span></span>\n                                   </div>\n                                  </div>\n                                </th> -->\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.problem.type.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.label.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  <localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize>\n                                </th>\n                                <th class=\"label-column\">\n                                  \n                                </th>\n                              </tr>\n                            </thead>\n\n                            <tbody *ngIf=\"job.stage === 'IMPORT_RESOLVE'\">\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                <!-- <tr *ngFor=\"let row of job.errors.page; let i = index;\"> -->\n                                    <!-- <td class=\"label-column\">\n                                      <boolean-field [(value)]=\"row.selected\"></boolean-field>\n                                    </td> -->\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{getFriendlyProblemType(row.exception.type)}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.exception.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                    <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n                                        <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                            <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n\n                            <tbody *ngIf=\"job.stage === 'VALIDATION_RESOLVE'\">\n\t                            <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n\t                             <!-- <td class=\"label-column\">\n\t                               <boolean-field [(value)]=\"row.selected\"></boolean-field>\n\t                             </td> -->\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n\t                               <p>{{row.type}}</p> \n\t                             </td>\n\t                             <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p *ngIf=\"row.type === 'RowValidationProblem'\">{{row.exception.message}}</p>\n                                 <p *ngIf=\"row.type === 'ParentReferenceProblem' || row.type === 'TermReferenceProblem'\">{{row.label}}</p>\n                               </td>\n                               <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                 <p>{{formatAffectedRows(row.affectedRows)}}</p>\n                               </td>\n\t                             <td class=\"label-column\" *ngIf=\"isAdmin || isMaintainer\" style=\"text-align: right;\">\n\t                              <button type=\"submit\" (click)=\"onEdit(row)\" class=\"btn btn-link\" role=\"button\">\n                                    <localize key=\"scheduledjobs.fix.problem.button\"></localize>\n\t                              </button>\n\t                             </td>\n\t                            </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ScheduledJobOverview } from '@registry/model/registry';\n\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'job-conflict-modal',\n    templateUrl: './job-conflict-modal.component.html',\n    styleUrls: []\n} )\nexport class JobConflictModalComponent implements OnInit {\n    message: string = null;\n    problem: any;\n    job: ScheduledJobOverview;\n    \n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, private lService: LocalizationService, public bsModalRef: BsModalRef ) {\n      this.onConflictAction = new Subject();\n    }\n\n    ngOnInit(): void {\n      \n    }\n    \n    onProblemResolvedListener(problem: any): void {\n      this.onConflictAction.next({action:\"RESOLVED\", data: problem});\n    }\n\n    onCancel(): void {\n        this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"modal-body\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"text-center\">\n        <h2>\n            <localize key=\"scheduledjobs.problemdetail.modal.title\"></localize>\n        </h2>\n    </div>\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n    <form #form=\"ngForm\" class=\"modal-form\">\n\n        <fieldset>\n            \n            <div *ngIf=\"problem && job && job.stage === 'IMPORT_RESOLVE'\">\n                <import-problem-widget (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\"></import-problem-widget>\n            </div>\n            <div *ngIf=\"problem && job && job.stage === 'VALIDATION_RESOLVE'\">\n              <parent-reference-problem-widget *ngIf=\"problem.type === 'ParentReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></parent-reference-problem-widget>\n              <term-reference-problem-widget *ngIf=\"problem.type === 'TermReferenceProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></term-reference-problem-widget>\n              <row-validation-problem-widget *ngIf=\"problem.type === 'RowValidationProblem'\" (onProblemResolved)=\"onProblemResolvedListener($event, problem)\" [problem]=\"problem\" [job]=\"job\" ></row-validation-problem-widget>\n            </div>\n            \n            <div class=\"row-holder\">\n                <!-- <div class=\"label-holder\"></div> -->\n                <div class=\"\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n                            <localize key=\"io.back\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        </fieldset>\n    </form>\n    <!-- </div> -->\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { GeoObjectType, MasterList, ScheduledJob, ImportError } from '@registry/model/registry';\n\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'import-problem-widget',\n    templateUrl: './import-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ImportProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: ImportError;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n    }\n\n    onEditGeoObject(): void {\n        let editModal = this.modalService.show( GeoObjectEditorComponent, {\n            backdrop: true,\n            ignoreBackdropClick: true\n        } );\n\n        editModal.content.configureFromImportError(this.problem, this.job.historyId, this.job.configuration.startDate, true);\n        editModal.content.setMasterListId( null );\n        editModal.content.setOnSuccessCallback(() => {\n\n          this.onProblemResolved.emit(this.problem);\n          this.bsModalRef.hide()\n            \n        } );\n    }\n\n    getFriendlyProblemType(probType: string): string {\n\n        if(probType === \"net.geoprism.registry.io.ParentCodeException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.PostalCodeLocationException\"){\n            return this.lService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.AmbiguousParentException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.multi.parent.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.io.InvalidGeometryException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.invalid.geom.lookup\" );\n        }\n\n        if(probType === \"net.geoprism.registry.DataNotFoundException\"){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.datanotfound\" );\n        }\n        \n        if(\n            probType === \"net.geoprism.registry.roles.CreateGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.WriteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.DeleteGeoObjectPermissionException\"\n            || probType === \"net.geoprism.registry.roles.ReadGeoObjectPermissionException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.permission\" );\n        }\n\n        // if(probType === \"net.geoprism.registry.io.TermValueException\"){\n        //   return this.localizeService.decode( \"scheduledjobs.job.problem.type.postal.code.lookup\" );\n        // }\n        if(\n          probType === \"com.runwaysdk.dataaccess.DuplicateDataException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectException\"\n          || probType === \"net.geoprism.registry.DuplicateGeoObjectCodeException\"\n          ){\n          return this.lService.decode( \"scheduledjobs.job.problem.type.duplicate.data.lookup\" );\n        }\n\n        return probType;\n    }\n\n    onSubmit(): void {\n\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide();\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>:\n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row equal\" style=\"display: flex;display: -webkit-flex;flex-wrap: wrap;\">\n                <div class=\"col-md-6\" style=\"padding-right: 5px;\">\n                    <div style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;\">\n                        <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{getFriendlyProblemType(problem.exception.type)}}</p>\n\n                        <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                        <p style=\"font-style: italic;\">{{problem.exception.message}}</p>\n\n                        <!-- <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                        <p>TODO: how to address the issue.</p> -->\n                    </div>\n                </div>\n                <div class=\"col-md-6\" style=\"padding-left: 5px;\">\n                    <div *ngIf=\"problem.object != null && problem.object.geoObject != null\" style=\"background: white;border-radius: 10px;padding: 10px;height: 100%;text-align: center;\">\n                        <button style=\"width: 90%;\" type=\"submit\" (click)=\"onEditGeoObject()\" class=\"btn btn-primary\" role=\"button\">\n                            <localize key=\"scheduledjobs.editGeoObject\"></localize>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport { RegistryService, IOService } from '@registry/service';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'parent-reference-problem-widget',\n    templateUrl: './parent-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class ParentReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.parentProblem.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p>\n                      <localize key=\"etl.parentProblem.toResolve\"></localize>\n                    </p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"etl.problem.parent.context\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <div *ngIf=\"problem.context.length > 0\" style=\"margin-top:10px;\">\n\t\t                    <ol *ngFor=\"let con of problem.context\">\n\t\t\t\t\t\t\t\t          <li>{{con.label}} ({{con.type}})</li>\n\t\t\t\t\t\t\t\t        </ol>\n\t\t\t\t\t\t\t        </div>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.parent.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"parentSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem.typeCode, problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"name\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.parent.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"problem.parent == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\n@Component( {\n    selector: 'term-reference-problem-widget',\n    templateUrl: './term-reference-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class TermReferenceProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    termId: string = null;\n    searchLabel: string;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( conflict: any ): Observable<any> {\n        return Observable.create(( observer: any ) => {\n            this.iService.getTermSuggestions( conflict.mdAttributeId, this.searchLabel, '20' ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n    \n    typeaheadOnSelect( e: TypeaheadMatch ): void {\n        this.termId = e.item.value;\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        classifierId: this.termId,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div *ngIf=\"problem\" class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">\n                      <localize key=\"etl.problem.termReference.message\"></localize>\n                    </p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.termReference.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.attributeLabel\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{problem.attributeLabel}}</span>\n                    </div>\n                  </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.termReference.label\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.label}}</span>\n\t                  </div>\n\t                </div>\n\t                <div class=\"row-holder\" style=\"overflow:visible;\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.synonym\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <input  style=\"width:150px;\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\n\t                      name=\"termSearch\"\n\t                      [(ngModel)]=\"searchLabel\"\n\t                      [typeaheadAsync]=\"true\"\n\t                      [typeahead]=\"getTypeAheadObservable(problem)\"\n\t                      (typeaheadOnSelect)=\"typeaheadOnSelect($event, problem)\"\n\t                      [typeaheadOptionsLimit]=\"7\"\n\t                      typeaheadOptionField=\"label\"\n\t                      [typeaheadMinLength]=\"0\"\n\t                      [typeaheadWaitMs]=\"300\">\n                    </div>\n                  </div>\n                  <div class=\"row-holder\">\n                    <div class=\"label-holder\" style=\"width:100px;\">\n                      <label>\n                        <span class=\"text\"><localize key=\"etl.problem.termReference.actions\"></localize></span>\n                      </label>\n                    </div>\n                    <div class=\"holder\" style=\"width:300px;\">\n                      <button type=\"submit\" [disabled]=\"termId == null\" (click)=\"onCreateSynonym()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.createSynonym\"></localize>\n                      </button>\n                      <button type=\"submit\" (click)=\"onIgnore()\" class=\"btn btn-primary\" role=\"button\">\n                        <localize key=\"etl.problem.reference.ignore\"></localize>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\n\nimport { GeoObjectType, MasterList, ScheduledJob } from '@registry/model/registry';\nimport { RegistryService, IOService } from '@registry/service';\nimport { GeoObjectEditorComponent } from '../../geoobject-editor/geoobject-editor.component';\nimport Utils from '../../../utility/Utils'\n\nimport { ErrorHandler } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'row-validation-problem-widget',\n    templateUrl: './row-validation-problem-widget.component.html',\n    styleUrls: []\n} )\nexport class RowValidationProblemWidgetComponent implements OnInit {\n    message: string = null;\n    @Input() problem: any;\n    @Input() job: ScheduledJob;\n    @Output() public onProblemResolved = new EventEmitter<any>();\n    \n    searchLabel: string;\n\n    /*\n     * Observable subject for submission.  Called when an update is successful \n     */\n    // onConflictAction: Subject<any>;\n\n    readonly: boolean = false;\n    edit: boolean = false;\n\n\n    constructor( private service: RegistryService, private iService: IOService, \n        private lService: LocalizationService, public bsModalRef: BsModalRef, private modalService: BsModalService\n        ) { }\n\n    ngOnInit(): void {\n\n        // this.onConflictAction = new Subject();\n        \n        // this.searchLabel = this.problem.label;\n        \n        this.problem.parent = null;\n        this.searchLabel = \"\";\n\n    }\n    \n    getString(conflict: any): string {\n      return JSON.stringify(conflict);\n    }\n\n    getValidationProblemDisplayLabel(conflict: any): string {\n      return conflict.type;\n    }\n    \n    getTypeAheadObservable( typeCode: string, conflict: any ): Observable<any> {\n\n        let parentCode = null;\n        let hierarchyCode = this.job.configuration.hierarchy;\n\n        return Observable.create(( observer: any ) => {\n            this.service.getGeoObjectSuggestions( this.searchLabel, typeCode, parentCode, null, hierarchyCode, this.job.startDate ).then( results => {\n                observer.next( results );\n            } );\n        } );\n    }\n\n    typeaheadOnSelect( e: TypeaheadMatch, conflict: any ): void {\n\n        this.service.getParentGeoObjects( e.item.uid, conflict.typeCode, [], false, this.job.startDate ).then( ancestors => {\n\n            conflict.parent = ancestors.geoObject;\n            this.searchLabel = ancestors.geoObject.properties.displayLabel.localizedValue;\n\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n    \n    onIgnore(): void {\n      let cfg = {\n        resolution: \"IGNORE\",\n        validationProblemId: this.problem.id\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n    \n    formatAffectedRows(rows: string)\n    {\n      return rows.replace(/,/g, \", \");\n    }\n    \n    onCreateSynonym(): void {\n      let cfg = {\n        validationProblemId: this.problem.id,\n        resolution: \"SYNONYM\",\n        code: this.problem.parent.properties.code,\n        typeCode: this.problem.parent.properties.type,\n        label: this.problem.label\n      };\n    \n      this.service.submitValidationResolve( cfg ).then( response => {\n        \n        this.onProblemResolved.emit(this.problem);\n        \n        this.bsModalRef.hide()\n        \n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error(err);\n      } );\n    }\n\n    onCancel(): void {\n      this.bsModalRef.hide()\n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n\n    <!-- <div class=\"col-md-12 order-md-1\"> -->\n\n    <!-- <div class=\"row\">\n\n        <h2>\n            Review: {{job.fileName}} problem\n        </h2>\n    </div> -->\n    <div *ngIf=\"problem && job\" class=\"row\" style=\"background: #F4F4F4;\n                                        border-radius: 10px;\n                                        margin-bottom: 20px;\n                                        margin-top: 20px;\n                                        padding: 10px;\">\n        <div class=\"col-md-6\">\n            <div class=\"wrapper\">\n\n                <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                <p style=\"padding-left: 60px;\">\n                    <span style=\"display: block;\">\n                        <strong>{{job.fileName}}</strong>\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.uploaded.by.label\"></localize>: {{job.author}}\n                    </span>\n                    <span style=\"display: block;\">\n                        <localize key=\"importproblem.started.date.label\"></localize>: \n                        <span class=\"date-string-display\" style=\"margin-left:5px;\">\n                              {{formatDate(job.createDate)}}\n                        </span>\n                    </span>\n                </p>\n\n            </div>\n        </div>\n        <div class=\"col-md-6\"></div>\n    </div>\n\n    <div class=\"row\" style=\"background: #F4F4F4;\n                            border-radius: 10px;\n                            margin-bottom: 20px;\n                            margin-top: 20px;\n                            padding: 10px;\">\n        <div class=\"col-md-12\">\n\n            <div class=\"row\">\n                <div class=\"col-md-6\" style=\"background: white;border-radius: 10px; width: 41%; margin-right:7px;\">\n                    <h4><strong><localize key=\"etl.problem.header.problem\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\">{{getValidationProblemDisplayLabel(problem)}}</p>\n\n                    <h4><strong><localize key=\"etl.problem.header.message\"></localize></strong></h4>\n                    <p style=\"font-style: italic;\"><localize key=\"etl.problem.rowValidation.message\"></localize></p>\n\n                    <h4><strong><localize key=\"etl.problem.header.toResolve\"></localize></strong></h4>\n                    <p><localize key=\"etl.problem.rowValidation.toResolve\"></localize></p>\n                </div>\n                <div class=\"com-md-6\" style=\"background: white; border-radius: 10px; width:41%; float:left; height:250px;\">\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t\t                  <label>\n\t\t                    <span class=\"text\"><localize key=\"scheduledjobs.validation.table.affected.rows.header\"></localize></span>\n\t\t                  </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n                      <span class=\"text\" style=\"margin-top:10px;\">{{formatAffectedRows(problem.affectedRows)}}</span>\n                    </div>\n\t                </div>\n\t                <div class=\"row-holder\">\n\t                  <div class=\"label-holder\" style=\"width:100px;\">\n\t                    <label>\n\t                      <span class=\"text\"><localize key=\"etl.problem.rowValidation.message\"></localize></span>\n\t                    </label>\n\t                  </div>\n\t                  <div class=\"holder\" style=\"width:300px;\">\n\t                    <span class=\"text\" style=\"margin-top:10px;\">{{problem.exception.message}}</span>\n\t                  </div>\n\t                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ModalTypes } from '@shared/model/modal';\nimport { LocalizationService, EventService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { ScheduledJob } from '@registry/model/registry';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'reupload-modal',\n    templateUrl: './reupload-modal.component.html',\n    styleUrls: []\n} )\nexport class ReuploadModalComponent {\n  @Input() title: string = this.localizeService.decode(\"reuploadmodal.title\");\n\n  @Input() message: string = this.localizeService.decode(\"reuploadmodal.message\");\n  \n  @Input() data: any;\n  \n  @Input() submitText: string = this.localizeService.decode(\"reuploadmodal.import\");\n  \n  @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n  \n  @Input() type: ModalTypes = ModalTypes.warning;\n  \n  @Input() job: ScheduledJob;\n  \n  @ViewChild( 'myFile' )\n  fileRef: ElementRef;\n  \n  /*\n   * File uploader\n   */\n  uploader: FileUploader;\n  \n  errorMessage: string;\n  \n  /*\n   * Called on confirm\n   */\n  public onConfirm: Subject<any>;\n  \n  constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService, private eventService: EventService ) { }\n  \n  ngOnInit(): void {\n    this.onConfirm = new Subject();\n    \n    let options: FileUploaderOptions = {\n      queueLimit: 1,\n      removeAfterUpload: true,\n      url: acp + '/etl/reimport'\n    };\n    \n    this.uploader = new FileUploader( options );\n    this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n        form.append( 'json', JSON.stringify(this.job.configuration) );\n    };\n    this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n        this.eventService.start();\n    };\n    this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n        this.fileRef.nativeElement.value = \"\";\n        this.eventService.complete();\n    };\n    this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.onConfirm.next( this.data );\n      this.bsModalRef.hide();\n    };\n    this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n      this.error( JSON.parse( response ) );\n    }\n  }\n  \n  toString(data: any): string\n  {\n    return JSON.stringify(data);\n  }\n  \n  confirm(): void {\n    if ( this.uploader.queue != null && this.uploader.queue.length > 0 ) {\n      this.uploader.uploadAll();\n    }\n    else {\n      this.error( { message: this.localizeService.decode( 'io.missing.file' ), error: {} } );\n    }\n  }\n  \n  public error( err: any ): void {\n    this.errorMessage = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div class=\"modal-body\">\n\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">{{errorMessage}}</div>\n\n  <div class=\"heading\">\n    <h3>{{title}}</h3>\n  </div>\n\n  <div>{{message}}</div>\n\n  <form *ngIf=\"job\" style=\"margin-top: 30px;\" #form=\"ngForm\">\n    <div class=\"form-group row\">\n      <label class=\"col-md-3 text-right\" for=\"file\">\n        <localize *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" key=\"io.shapefile\"></localize>\n        <localize *ngIf=\"job.configuration.formatType === 'EXCEL'\" key=\"io.spreadsheet\"></localize>\n      </label>\n      <div class=\"col-md-9\">\n        <input *ngIf=\"job.configuration.formatType === 'SHAPEFILE'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".zip\" required />\n        <input *ngIf=\"job.configuration.formatType === 'EXCEL'\" class=\"ghost-input\" #myFile name=\"file\" type=\"file\"\n          ng2FileSelect [uploader]=\"uploader\" accept=\".xlsx,.zip\" required />\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\"\n          style=\"padding: 4px 18px;\">\n          <span>{{cancelText}}</span>\n        </button>\n        <button type=\"button\" (click)=\"confirm()\"\n          [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n          aria-disabled=\"false\" style=\"padding: 4px 18px;\">\n          <span>{{submitText}}</span>\n        </button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { TaskService } from '@registry/service';\nimport { GeoObjectType, PaginationPage } from '@registry/model/registry';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'task-viewer',\n\ttemplateUrl: './task-viewer.component.html',\n\tstyleUrls: ['./task-viewer.component.css'],\n\tproviders: [DatePipe]\n})\n\nexport class TaskViewerComponent implements OnInit {\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\tinProgressTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tcompletedTasks: PaginationPage = {\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10,\n\t\tresults: []\n\t};\n\n\tisViewAllOpen: boolean = false;\n\n\tactiveTimeCounter: number = 0;\n\tcompleteTimeCounter: number = 0;\n\n\tpollingData: any;\n\n\tconstructor(private taskService: TaskService, private localizeService: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.onInProgressTasksPageChange(1);\n\t}\n\n\tupper(str: string): string {\n\t\tif (str != null) {\n\t\t\treturn str.toUpperCase();\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tonInProgressTasksPageChange(pageNumber: any): void {\n\t\tthis.taskService.getMyTasks(pageNumber, this.inProgressTasks.pageSize, 'UNRESOLVED').then(page => {\n\t\t\tthis.inProgressTasks = page;\n\t\t});\n\t}\n\n\tonCompletedTasksPageChange(pageNumber: any): void {\n\n\t\tthis.taskService.getMyTasks(pageNumber, this.completedTasks.pageSize, 'RESOLVED').then(page => {\n\t\t\tthis.completedTasks = page;\n\t\t});\n\t}\n\n\tonCompleteTask(task: any): void {\n\t\t// this.isViewAllOpen = true;\n\n\t\tthis.taskService.completeTask(task.id).then(() => {\n\n\t\t\tconst index = this.inProgressTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.inProgressTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.push(task);\n\t\t\t// this.onCompletedTasksPageChange(1);\n\t\t});\n\t}\n\n\tonMoveTaskToInProgress(task: any): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.taskService.setTaskStatus(task.id, 'UNRESOLVED').then(() => {\n\n\t\t\tconst index = this.completedTasks.results.findIndex(t => t.id === task.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\t}\n\n\t\t\tthis.completedTasks.results.splice(index, 1);\n\t\t\tthis.inProgressTasks.results.push(task);\n\t\t});\n\t}\n\n\tonViewAllCompletedTasks(): void {\n\t\tthis.isViewAllOpen = true;\n\n\t\tthis.onCompletedTasksPageChange(1);\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.localizeService.formatDateForDisplay(date);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n    <message></message>\n\n    <h2>\n      <localize key=\"tasks.openTasksTitle\"></localize>\n    </h2>\n    <hr>\n  \n\t\t<div class=\"row\" *ngIf=\"inProgressTasks.results.length > 0\">\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\">\n\t        <div *ngFor=\"let task of inProgressTasks.results | paginate: { id: 'inProgressTasks', itemsPerPage: inProgressTasks.pageSize, currentPage: inProgressTasks.pageNumber, totalItems: inProgressTasks.count }\" class=\"panel panel-default\">\n\t          <div class=\"panel-heading\">\n\t            <h4>{{upper(task.title)}}</h4>\n\t          </div>\n\t          \n\t          <div class=\"panel-body\">\n\t            <div class=\"row\">\n\t             <div class=\"col-md-9\">\n\t              <label><localize key=\"tasks.taskMessage\"></localize></label>\n\t              <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n\t              <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                  <span class=\"date-string-display\">\n                      {{formatDate(task.createDate)}}\n                  </span>\n\t             </div>\n\t             <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" checked id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                \n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" (click)=\"onCompleteTask(task)\" type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n\t             </div>\n\t            </div>\n\t          </div>\n\t        </div>\n\t        <div *ngIf=\"inProgressTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"inProgressTasks\" (pageChange)=\"onInProgressTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n      </div>\n\t\t</div>\n\t\t\n\t\t\n\t\t<div class=\"row\">\n\t\t<h2 class=\"col-md-9\">\n      <localize key=\"tasks.completedTasksTitle\"></localize>\n    </h2>\n    <button class=\"col-md-3\" style=\"margin-top:20px;\" type=\"submit\" (click)=\"onViewAllCompletedTasks()\" class=\"btn btn-default pull-right\" role=\"button\">\n      <localize key=\"tasks.viewCompletedTasksButton\"></localize>\n    </button>\n    </div>\n    <hr>\n  \n    <div class=\"row\" >\n      <div class=\"col-md-12\">\n        <div class=\"content-wrapper\" *ngIf=\"isViewAllOpen && completedTasks.results.length > 0\">\n          <div *ngFor=\"let task of completedTasks.results | paginate: { id: 'completedTasks', itemsPerPage: completedTasks.pageSize, currentPage: completedTasks.pageNumber, totalItems: completedTasks.count }\" class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h4>{{upper(task.title)}}</h4>\n            </div>\n            \n            <div class=\"panel-body\">\n              <div class=\"row\">\n               <div class=\"col-md-9\">\n                <label><localize key=\"tasks.taskMessage\"></localize></label>\n                <p style=\"margin-bottom:20px;\">{{task.msg}}</p>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.createDateLabel\"></localize></label>\n                <span class=\"date-string-display\" style=\"margin-right:30px;\">\n                   {{formatDate(task.createDate)}}\n                </span>\n                <label style=\"margin-right:20px;\"><localize key=\"tasks.completeDateLabel\"></localize></label>\n                <span class=\"date-string-display\" >\n                   {{formatDate(task.completedDate)}}\n                </span>\n               </div>\n               <div class=\"col-md-3\" style=\"min-height: 90px; display: flex; align-items: center;\">\n\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"height:auto;\" type=\"radio\" (click)=\"onMoveTaskToInProgress(task)\" id=\"{{task.id}}-inProgress\" name=\"{{task.id}}-inProgress\" value=\"true\">\n                  <span><localize key=\"tasks.open\"></localize></span>\n                </label>\n                <label class=\"radio-inline radio\">\n                  <input class=\"inline-radio-input\" style=\"margin-left:15px;height:auto;\" checked type=\"radio\" id=\"{{task.id}}-completed\" name=\"{{task.id}}-completed\" value=\"false\">\n                  <span><localize key=\"tasks.complete\"></localize></span>\n                </label>\n               </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"completedTasks.results.length > 0\" class=\"solid-table-footer\">\n            <pagination-controls id=\"completedTasks\" (pageChange)=\"onCompletedTasksPageChange($event)\"></pagination-controls>\n          </div>\n        </div>\n        <div class=\"content-wrapper\" *ngIf=\"completedTasks.results.length === 0 && isViewAllOpen\">\n          <p style=\"font-style:italic;color:grey;\"><localize key=\"tasks.no.completed.tasks.message\"></localize></p>\n        </div>\n      </div>\n    </div>\n\n\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\n\nimport { SynchronizationConfig } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { SynchronizationConfigModalComponent } from './synchronization-config-modal.component';\n\n@Component({\n\tselector: 'synchronization-config-manager',\n\ttemplateUrl: './synchronization-config-manager.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigManagerComponent implements OnInit {\n\tmessage: string = null;\n\n\tpage: PageResult<SynchronizationConfig> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 20\n\t};\n\n    /*\n     * Reference to the modal current showing\n    */\n\tbsModalRef: BsModalRef;\n\n\tconstructor(public service: SynchronizationConfigService, private lService: LocalizationService, private router: Router, private modalService: BsModalService) { }\n\n\tngOnInit(): void {\n\t\tthis.onPageChange(1);\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tthis.service.getPage(pageNumber, this.page.pageSize).then(page => {\n\t\t\tthis.page = page;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcreate(): void {\n\t\tthis.service.edit(null).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(null, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonEdit(config: SynchronizationConfig): void {\n\n\t\tthis.service.edit(config.oid).then(response => {\n\n\t\t\tlet bsModalRef = this.modalService.show(SynchronizationConfigModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(response.config, response.orgs)\n\t\t\tbsModalRef.content.onSuccess.subscribe(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonRemove(config: SynchronizationConfig): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.lService.decode(\"confirm.modal.verify.delete\") + ' [' + config.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.submitText = this.lService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(() => {\n\t\t\tthis.service.remove(config.oid).then(() => {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tonView(config: SynchronizationConfig): void {\n\t\tthis.router.navigate(['/registry/synchronization-config/', config.oid])\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div class=\"heading\">\n      <h2>\n        <localize key=\"synchronization.config.manager\"></localize>\n      </h2>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12 order-md-1\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th style=\"width: 70%;\"><localize key=\"synchronization.config.label\"></localize></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let config of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\" class=\"clickable\">\n              <td style=\"width: 70%; vertical-align: middle;\">\n                <a [routerLink]=\"'/registry/synchronization-config/' + config.oid\" routerLinkActive=\"active\"> {{config.label.localizedValue}} </a>\n              </td>\n              <td style=\"width: 30%; text-align: right;\">\n                <button type=\"submit\" (click)=\"onView(config)\" class=\"btn btn-primary\" role=\"button\">\n                  <localize key=\"modal.button.view\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onEdit(config)\" class=\"btn btn-default\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.edit\"></localize>\n                </button>\n                <button type=\"submit\" (click)=\"onRemove(config)\" class=\"btn btn-danger\" role=\"button\" style=\"margin-left: 5px;\">\n                  <localize key=\"modal.button.delete\"></localize>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n\n        <div style=\"margin-top: 30px; margin-bottom: 30px;\" class=\"row\">\n          <div class=\"col-md-6\">\n            <button type=\"submit\" (click)=\"create()\" class=\"btn btn-primary\" role=\"button\">\n              <localize key=\"hierarchy.management.button.create\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { LocalizationService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { SynchronizationConfig, OrgSyncInfo, GeoObjectType } from '@registry/model/registry';\nimport { SynchronizationConfigService, RegistryService } from '@registry/service';\nimport { CustomAttributeConfig } from '@registry/model/sync';\n\nexport interface LevelRow {\n\tisAttributeEditor: boolean;\n\n\tlevel?: any;\n\tlevelNum?: number;\n\thasAttributes?: boolean;\n\n\tattrCfg?: GOTAttributeConfig;\n}\nexport interface GOTAttributeConfig {\n\tgeoObjectTypeCode?: string;\n\tattrs: CustomAttributeConfig[];\n}\n\n@Component({\n\tselector: 'synchronization-config-modal',\n\ttemplateUrl: './synchronization-config-modal.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigModalComponent implements OnInit {\n\tmessage: string = null;\n\n\t@ViewChild('form') form;\n\n\tconfig: SynchronizationConfig = {\n\t\torganization: null,\n\t\tsystem: null,\n\t\thierarchy: null,\n\t\tlabel: this.lService.create(),\n\t\tconfiguration: {}\n\t};\n\n\torganizations: OrgSyncInfo[] = [];\n\n\tcOrg: OrgSyncInfo = null;\n\tcSystem: { label: string, oid: string, type: string } = null;\n\n\ttypes: GeoObjectType[] = [];\n\n\tlevelRows: LevelRow[] = [];\n\t\n\torgUnitGroups: any[] = [];\n\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\tonSuccess: Subject<SynchronizationConfig>;\n\n\n\tconstructor(private service: SynchronizationConfigService, private registryService: RegistryService, private lService: LocalizationService, private bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tinit(config: SynchronizationConfig, organizations: OrgSyncInfo[]): void {\n\n\t\tthis.organizations = organizations;\n\n\t\tif (config != null) {\n\t\t\tthis.config = config;\n\n\t\t\tlet oIndex = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\t\tif (oIndex !== -1) {\n\t\t\t\tthis.cOrg = this.organizations[oIndex];\n\t\t\t}\n\n\t\t\tlet sIndex = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\t\tif (sIndex !== -1) {\n\t\t\t\tthis.cSystem = this.cOrg.systems[sIndex];\n\t\t\t}\n\n\t\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t\t// Get the types\t\n\t\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t\t//\tthis.types = types;\n\t\t\t\t//});\n\t\t\t\t\n\t\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n          this.types = esConfig.types;\n          this.orgUnitGroups = esConfig.orgUnitGroups;\n        }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n        });\n\n\t\t\t}\n\n\t\t\tthis.levelRows = [];\n\t\t\tfor (var i = 0; i < this.config.configuration.levels.length; ++i) {\n\t\t\t\tvar level = this.config.configuration.levels[i];\n\n\t\t\t\tvar levelRow: LevelRow = { level: level, levelNum: i, isAttributeEditor: false };\n\n\t\t\t\tif (level.attributes != null && Object.keys(level.attributes).length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\t\t\t\t}\n\n\t\t\t\tthis.levelRows.push(levelRow);\n\t\t\t}\n\t\t}\n\t}\n\n\tonOrganizationSelected(): void {\n\t\tlet index = this.organizations.findIndex(org => org.code === this.config.organization);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cOrg = this.organizations[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cOrg = null;\n\t\t\tthis.cSystem = null;\n\t\t}\n\t}\n\n\tonChangeExternalSystem(): void {\n\t\tlet index = this.cOrg.systems.findIndex(system => system.oid === this.config.system);\n\n\t\tif (index !== -1) {\n\t\t\tthis.cSystem = this.cOrg.systems[index];\n\t\t}\n\t\telse {\n\t\t\tthis.cSystem = null;\n\t\t}\n\n\n\t\tif (this.cSystem != null && this.cSystem.type === 'DHIS2ExternalSystem') {\n\t\t\t// Get the types\t\n\t\t\t//this.registryService.getGeoObjectTypes(null, [this.config.hierarchy]).then(types => {\n\t\t\t//\tthis.types = types;\n\t\t\t//});\n\t\t\t\n\t\t\tthis.service.getConfigForES(this.config.system, this.config.hierarchy).then(esConfig => {\n        this.types = esConfig.types;\n        this.orgUnitGroups = esConfig.orgUnitGroups;\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n\n\t\t\tif (this.config.configuration['levels'] == null) {\n\t\t\t\tvar lvl = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tgeoObjectType: null,\n\t\t\t\t\tlevel: 0\n\t\t\t\t};\n\t\t\t\tthis.config.configuration['levels'] = [lvl];\n\t\t\t\tthis.levelRows.push({ level: lvl, levelNum: 0, isAttributeEditor: false });\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tthis.types = [];\n\t\t}\n\t}\n\n\taddLevel(): void {\n\t\tvar lvl = {\n\t\t\ttype: null,\n\t\t\tgeoObjectType: null,\n\t\t\tlevel: this.config.configuration.levels.length\n\t\t};\n\t\tvar len = this.config.configuration['levels'].push(lvl);\n\t\tthis.levelRows.push({ level: lvl, levelNum: len - 1, isAttributeEditor: false });\n\t}\n\n\tremoveLevel(levelNum: number, levelRowIndex: number): void {\n\t\tif (levelNum < this.config.configuration['levels'].length) {\n\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\tif (editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex, 1);\n\n\t\t\tvar newLevelNum = 0;\n\t\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[i];\n\n\t\t\t\tlevelRow.levelNum = newLevelNum;\n\n\t\t\t\tif (!levelRow.isAttributeEditor) {\n\t\t\t\t\tnewLevelNum = newLevelNum + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.config.configuration['levels'].splice(levelNum, 1);\n\t\t}\n\t}\n\n\tgetEditorIndex(): number {\n\t\tfor (var i = 0; i < this.levelRows.length; ++i) {\n\t\t\tvar levelRow = this.levelRows[i];\n\n\t\t\tif (levelRow.isAttributeEditor) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tconfigureAttributes(levelRow: any): void {\n\t\tvar editorIndex = this.getEditorIndex();\n\n\t\tif (editorIndex != -1) {\n\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\tif (editorIndex == levelRow.levelNum + 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.onSelectGeoObjectType(levelRow.level.geoObjectType, levelRow.levelNum, false);\n\t}\n\n\tgetTermOptions(attr: CustomAttributeConfig, dhis2Id: string) {\n\t\tfor (var i = 0; i < attr.dhis2Attrs.length; ++i) {\n\t\t\tvar dhis2Attr = attr.dhis2Attrs[i];\n\n\t\t\tif (dhis2Attr.dhis2Id === dhis2Id) {\n\t\t\t\treturn dhis2Attr.options;\n\t\t\t}\n\t\t}\n\t}\n\n\tonChangeAttrMapping(attr: any, newValue: string, levelRow: LevelRow) {\n\t\tif (newValue == null || newValue === \"\") {\n\t\t\tif (attr.terms != null) {\n\t\t\t\tattr.terms = {};\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var j = 0; j < levelRow.attrCfg.attrs.length; j++) {\n\t\t\tif (levelRow.attrCfg.attrs[j].name === attr.name) {\n\t\t\t\tvar attrCfgAttr: any = levelRow.attrCfg.attrs[j];\n\n\t\t\t\tif (attrCfgAttr.terms != null) {\n\t\t\t\t\tattr.terms = {};\n\n\t\t\t\t\tfor (var i = 0; i < attrCfgAttr.terms.length; ++i) {\n\t\t\t\t\t\tvar term = attrCfgAttr.terms[i];\n\n\t\t\t\t\t\tattr.terms[term.code] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tonSelectGeoObjectType(geoObjectTypeCode: string, levelRowIndex: number, isDifferentGot: boolean = true) {\n\t\tif (geoObjectTypeCode === \"\" || geoObjectTypeCode == null) {\n\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\n\t\t\tlevelRow.hasAttributes = false;\n\t\t\tlevelRow.attrCfg = null;\n\t\t\tlevelRow.level.attributes = {};\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex === levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar attrCfg = this.levelRows[levelRowIndex].attrCfg;\n\t\tif (attrCfg != null && attrCfg.geoObjectTypeCode === geoObjectTypeCode) {\n\t\t\t// Resume an editing session on attributes that we fetched previously\n\n\t\t\tvar editorIndex = this.getEditorIndex();\n\n\t\t\tif (editorIndex != -1 && editorIndex !== levelRowIndex + 1) {\n\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: attrCfg });\n\t\t}\n\t\telse {\n\t\t\tthis.service.getCustomAttrCfg(geoObjectTypeCode, this.config.system).then((attrs: CustomAttributeConfig[]) => {\n\t\t\t\tvar editorIndex = this.getEditorIndex();\n\t\t\t\tvar levelRow: LevelRow = this.levelRows[levelRowIndex];\n\t\t\t\tvar level = levelRow.level;\n\n\t\t\t\tif (isDifferentGot) {\n\t\t\t\t\tlevel.attributes = {};\n\t\t\t\t}\n\n\t\t\t\tlevelRow.attrCfg = { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs };\n\n\t\t\t\tif (editorIndex != -1 && (editorIndex === levelRowIndex + 1 || attrs.length > 0)) {\n\t\t\t\t\tthis.levelRows.splice(editorIndex, 1);\n\n\t\t\t\t\tif (editorIndex < levelRowIndex) {\n\t\t\t\t\t\tlevelRowIndex = levelRowIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attrs.length > 0) {\n\t\t\t\t\tlevelRow.hasAttributes = true;\n\n\t\t\t\t\tfor (var i = 0; i < attrs.length; ++i) {\n\t\t\t\t\t\tvar attr = attrs[i];\n\n\t\t\t\t\t\tif (isDifferentGot || level.attributes[attr.name] == null) {\n\t\t\t\t\t\t\tlevel.attributes[attr.name] = {\n\t\t\t\t\t\t\t\tname: attr.name,\n\t\t\t\t\t\t\t\texternalId: null,\n\t\t\t\t\t\t\t\tisOrgUnitGroup: false\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (attr.terms != null && attr.terms.length > 0) {\n\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms = {};\n\n\t\t\t\t\t\t\t\tfor (var j = 0; j < attr.terms.length; ++j) {\n\t\t\t\t\t\t\t\t\tvar term = attr.terms[j];\n\n\t\t\t\t\t\t\t\t\tlevel.attributes[attr.name].terms[term.code] = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//else if (level.attributes[attr.name] != null)\n\t\t\t\t\t\t//{\n\t\t\t\t\t\t//  level.attributes[attr.name].isOrgUnitGroup = level.attributes[attr.name].isOrgUnitGroup || attr.isOrgUnitGroup || false;\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.levelRows.splice(levelRowIndex + 1, 0, { isAttributeEditor: true, attrCfg: { geoObjectTypeCode: geoObjectTypeCode, attrs: attrs } });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlevelRow.hasAttributes = false;\n\t\t\t\t}\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tonChangeTargetType(attr: any): void {\n\t  attr.externalId = null;\n\t  \n\t  for (const key in attr.terms) {\n      if (attr.terms.hasOwnProperty(key)) {\n        attr.terms[key] = null;\n      }\n    }\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.apply(this.config).then(cfg => {\n\n\t\t\tthis.onSuccess.next(cfg);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcancel(): void {\n\n\t\tif (this.config.oid != null) {\n\t\t\tthis.service.unlock(this.config.oid).then(() => {\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"modal-body\">\n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n  <div class=\"text-center\">\n    <h2>\n      <localize key=\"synchronization.config.title\"></localize>\n    </h2>\n  </div>\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n\n    <fieldset>\n      <div class=\"row-holder\" *ngFor=\"let localeValue of config.label.localeValues\">\n        <div class=\"label-holder\">\n          <label> <localize key=\"synchronization.config.label\"></localize> (<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)\n          </label>\n        </div>\n        <div class=\"holder\">\n          <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"text\" class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\" />\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.organization\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.organization\" name=\"organization\" (change)='onOrganizationSelected()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n      <div *ngIf=\"cOrg != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.hierarchy\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.hierarchy\" name=\"hierarchy\" [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let hierarchy of cOrg.hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"config.hierarchy != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.system\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"config.system\" name=\"system\" (change)='onChangeExternalSystem()' [disabled]=\"config.oid != null\" required>\n              <option></option>\n              <option *ngFor=\"let system of cOrg.systems\" [value]=\"system.oid\">{{system.label}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"row-holder\" *ngIf=\"cSystem != null && cSystem.type === 'DHIS2ExternalSystem'\">\n\n        <div class=\"label-holder\">\n          <label><localize key=\"synchronization.config.units\"></localize></label>\n        </div>\n        <div class=\"holder\">\n          <div class=\"list-table-wrapper\">\n            <table id=\"manage-systems-table\" class=\"list-table table table-bordered\">\n              <thead>\n                <tr>\n                  <th style=\"width:3%\">\n                    <localize key=\"settings.external.synchronization.level.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                  </th>\n                  <th style=\"width:25%\">\n                    <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                  </th>\n                  <th style=\"width:17%\">\n                    <localize key=\"synchronization.config.orgUnitGroup\"></localize>\n                  </th>\n                  <th style=\"width:25%; text-align: center;\">\n                    <localize key=\"settings.external.synchronization.actions.label\"></localize>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let levelRow of levelRows; let i = index;\" [style.background-color]=\"levelRow.isAttributeEditor === false ? '#F7F7F7' : ''\">\n                  <td style=\"width:3%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <label style=\"padding: 10px 0; margin: 0;\"><localize key=\"sync.level.label\"></localize> {{levelRow.levelNum + 1}}</label>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.geoObjectType\" (change)=\"onSelectGeoObjectType(levelRow.level.geoObjectType, i)\" [name]=\"'geoObjectType' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label.localizedValue}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.type\" [name]=\"'type' + levelRow.levelNum\" required>\n                      <option></option>\n                      <option value=\"ORG_UNITS\"><localize key=\"synchronization.config.units\"></localize></option>\n                      <option value=\"RELATIONSHIPS\"><localize key=\"synchronization.config.relationships\"></localize></option>\n                      <option value=\"ALL\"><localize key=\"synchronization.config.all\"></localize></option>\n                    </select>\n                  </td>\n                  <td style=\"width:17%\" *ngIf=\"levelRow.isAttributeEditor === false && orgUnitGroups.length > 0\">\n                    <select type=\"text\" [(ngModel)]=\"levelRow.level.orgUnitGroupId\" [name]=\"'group' + levelRow.levelNum\">\n                      <option></option>\n                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n                    </select>\n                  </td>\n                  <td style=\"width:25%\" *ngIf=\"levelRow.isAttributeEditor === false\">\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <a style=\"padding: 10px;\" (click)=\"removeLevel(levelRow.levelNum, i)\" [title]=\"'button.delete.helptext' | localize\">\n\t\t\t\t\t\t\t\t\t      <icon class=\"fa fa-trash-o ico-remove\"></icon>\n\t\t\t\t\t\t\t\t\t      <label style=\"cursor:pointer; margin-left:9px;\"><localize key=\"sync.level.delete\"></localize></label>\n\t\t\t\t\t\t\t\t\t    </a> \n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n                      <a *ngIf=\"levelRow.hasAttributes\" style=\"padding: 10px;\" (click)=\"configureAttributes(levelRow)\" [title]=\"'sync.attr.configureAttributes.helptext' | localize\">\n                        <icon class=\"fa fa-edit\"></icon>\n                        <label style=\"cursor:pointer; margin-left:3px;\"><localize key=\"sync.attr.configureAttributes\"></localize></label>\n                      </a> \n                    </div>\n\t\t\t\t\t\t\t\t\t</td>\n                  <td colspan=\"4\" *ngIf=\"levelRow.isAttributeEditor === true\">\n                    <h4>Attributes</h4>\n\t                  <table class=\"table\">\n\t                    <thead>\n\t                      <tr>\n\t                        <th></th>\n\t                      </tr>\n\t                    </thead>\n\t                    <tbody>\n\t                      <tr *ngFor=\"let attr of levelRow.attrCfg.attrs\">\n\t                        <td class=\"row-holder\">\n\t                          <table class=\"row\" style=\"width:80%; margin-left:80px; margin-top:15px; margin-bottom: 10px;\">\n\t                            <thead>\n\t                              <tr>\n\t                                <th style=\"width:25%\">\n\t                                  <label><localize key=\"sync.attr.sourceAttribute\"></localize></label>\n\t                                </th>\n\t                                <th style=\"width:25%\">\n                                    <label><localize key=\"sync.attr.type\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label *ngIf=\"attr.type === 'term'\"><localize key=\"sync.attr.targetTypeHeader\"></localize></label>\n                                  </th>\n                                  <th style=\"width:25%\">\n                                    <label>\n                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.targetAttribute\"></localize>\n                                    </label>\n                                  </th>\n\t                              </tr>\n\t                            </thead>\n\t                            <tbody>\n\t                              <tr>\n\t                                <td><label style=\"color:#999;\">{{attr.label}}</label></td>\n\t                                <td>\n\t                                  <label style=\"color:#999;\">{{attr.typeLabel}}</label>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type === 'term'\" style=\"margin-right:20px;\">\n\t                                  <select style=\"width:95%\" *ngIf=\"attr.type === 'term'\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" (change)=\"onChangeTargetType(levelRows[i-1].level.attributes[attr.name])\" [name]=\"'isOrgUnitGroup' + i + attr.name\">\n                                      <option [ngValue]=\"false\"><localize key=\"sync.attr.targetTypeOptionSet\"></localize></option>\n                                      <option [ngValue]=\"true\"><localize key=\"sync.attr.targetTypeOrgUnitGroup\"></localize></option>\n                                    </select>\n\t                                </td>\n\t                                <td *ngIf=\"attr.type !== 'term'\" style=\"float:right; margin-right:20px;\">\n\t                                  <label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label>\n\t                                </td>\n\t                                <td>\n\t                                  <select *ngIf=\"attr.dhis2Attrs.length > 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].externalId\" [ngModelOptions]=\"{standalone: true}\" (change)=\"onChangeAttrMapping(levelRows[i-1].level.attributes[attr.name], levelRows[i-1].level.attributes[attr.name].externalId, levelRow)\">\n\t                                    <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                    <option [value]=\"dhis2Attr.dhis2Id\" *ngFor=\"let dhis2Attr of attr.dhis2Attrs\">\n\t                                      {{dhis2Attr.name}}\n\t                                    </option>\n\t                                  </select>\n\t                                  <label *ngIf=\"attr.dhis2Attrs.length == 0 && !levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" style=\"color:#999;\"><localize key=\"sync.noValid\"></localize></label>\n\t                                </td>\n\t                              </tr>\n\t                            </tbody>\n\t                          </table>\n\t                          <div *ngIf=\"(levelRows[i-1].level.attributes[attr.name].externalId != null && levelRows[i-1].level.attributes[attr.name].externalId.length > 0) || levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\">\n\t\t                          <table *ngFor=\"let term of attr.terms\" class=\"row\" style=\"width:80%; margin-left:80px;\">\n\t                              <thead>\n\t                                <tr>\n\t                                  <th style=\"width:25%\">\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label><localize key=\"sync.attr.term.cgrTerm\"></localize></label>\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <!-- To -->\n\t                                  </th>\n\t                                  <th style=\"width:25%\">\n\t                                    <label>\n\t                                      <localize *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.dhis2Option\"></localize>\n\t                                      <localize *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" key=\"sync.attr.term.targetOrgUnitGroup\"></localize>\n\t                                    </label>\n\t                                  </th>\n\t                                </tr>\n\t                              </thead>\n\t                              <tbody>\n\t                                <tr>\n\t                                  <td></td>\n\t                                  <td><label style=\"color:#999;\">{{term.label}}</label></td>\n\t                                  <td style=\"float:right; margin-right:20px;\"><label style=\"color:#999;\"><localize key=\"sync.attr.to\"></localize></label></td>\n\t                                  <td>\n\t                                    <select *ngIf=\"!levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t                                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t                                      <option *ngFor=\"let option of getTermOptions(attr, levelRows[i-1].level.attributes[attr.name].externalId)\" [value]=\"option.code\">\n\t                                        {{option.name}}\n\t                                      </option>\n\t                                    </select>\n\t                                    <select *ngIf=\"levelRows[i-1].level.attributes[attr.name].isOrgUnitGroup\" type=\"text\" [(ngModel)]=\"levelRows[i-1].level.attributes[attr.name].terms[term.code]\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t\t\t\t                      <option [ngValue]=\"null\"><localize key=\"sync.notMapped\"></localize></option>\n\t\t\t\t\t\t\t\t\t                      <option *ngFor=\"let group of orgUnitGroups\" [value]=\"group.id\">{{group.name}}</option>\n\t\t\t\t\t\t\t\t\t                    </select>\n\t                                  </td>\n\t                                </tr>\n\t                              </tbody>\n\t                            </table>\n                            </div>\n\t                        </td>\n\t                      </tr>\n\t                    </tbody>\n\t                  </table>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"button-column\">\n                    <a class=\"fa fa-plus\" (click)=\"addLevel()\"></a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          \n          </div>\n      </div>\n\n\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\"></div>\n        <div class=\"holder\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n  <!-- </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\n\nimport { PageResult } from '@shared/model/core'\nimport { LocalizationService } from '@shared/service';\n\nimport { SynchronizationConfig, ExportScheduledJob } from '@registry/model/registry';\nimport { SynchronizationConfigService } from '@registry/service';\nimport { ErrorHandler } from '@shared/component/error-handler/error-handler';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'synchronization-config',\n\ttemplateUrl: './synchronization-config.component.html',\n\tstyleUrls: []\n})\nexport class SynchronizationConfigComponent implements OnInit {\n\tmessage: string = null;\n\n\tconfig: SynchronizationConfig = null;\n\n\tpage: PageResult<ExportScheduledJob> = {\n\t\tpageSize: 10,\n\t\tpageNumber: 1,\n\t\tcount: 1,\n\t\tresultSet: []\n\t};\n\n\tnotifier: WebSocketSubject<{ type: string, content: any }>;\n\n\tconstructor(private service: SynchronizationConfigService, private lService: LocalizationService, private route: ActivatedRoute) { }\n\n\tngOnInit(): void {\n\t\tconst oid = this.route.snapshot.paramMap.get('oid');\n\n\t\tthis.service.get(oid).then(config => {\n\t\t\tthis.config = config;\n\t\t\tthis.onPageChange(1);\n\t\t});\n\n\t\tlet baseUrl = \"wss://\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '') + acp;\n\n\t\tthis.notifier = webSocket(baseUrl + '/websocket/notify');\n\t\tthis.notifier.subscribe(message => {\n\t\t\tif (message.type === 'DATA_EXPORT_JOB_CHANGE') {\n\t\t\t\tthis.onPageChange(this.page.pageNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\n\t\tif (this.notifier != null) {\n\t\t\tthis.notifier.complete();\n\t\t}\n\t}\n\n\tonRun(): void {\n\t\tthis.message = null;\n\n\t\tthis.service.run(this.config.oid).then(() => {\n\t\t\t// Refresh the page\n\t\t\tthis.onPageChange(this.page.pageNumber);\n\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tif (this.config != null) {\n\n\t\t\tthis.message = null;\n\n\t\t\tthis.service.getJobs(this.config.oid, pageNumber, this.page.pageSize).then(response => {\n\n\t\t\t\tthis.formatStepConfig(response);\n\t\t\t\tthis.page = response;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tformatJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"FEEDBACK\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FEEDBACK\");\n\t\t}\n\t\telse if (job.status === \"RUNNING\" || job.status === \"NEW\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t\telse if (job.status === \"QUEUED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.QUEUED\");\n\t\t}\n\t\telse if (job.status === \"SUCCESS\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.SUCCESS\");\n\t\t}\n\t\telse if (job.status === \"CANCELED\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.CANCELED\");\n\t\t}\n\t\telse if (job.status === \"FAILURE\") {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.FAILURE\");\n\t\t}\n\t\telse {\n\t\t\treturn this.lService.decode(\"etl.JobStatus.RUNNING\");\n\t\t}\n\t}\n\n\tformatStepConfig(page: PageResult<ExportScheduledJob>): void {\n\n\t\tpage.resultSet.forEach((job: ExportScheduledJob) => {\n\n\t\t\tjob.stepConfig = {\n\t\t\t\t\"steps\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Queued\"),\n\t\t\t\t\t\t\"status\": job.stage === \"NEW\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"NEW\")\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.Connecting\"),\n\t\t\t\t\t\t\"status\": job.stage === \"CONNECTING\" || job.stage === \"CONNECTION_FAILED\" ? this.getJobStatus(job) : this.getCompletedStatus(job.stage, \"CONNECTION_FAILED\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": this.lService.decode(\"synchronization.step.DatabaseExport\"),\n\t\t\t\t\t\t\"status\": job.stage === \"EXPORT\" || job.stage === \"EXPORT_RESOLVE\" || job.stage === \"RESUME_EXPORT\" ? this.getJobStatus(job) : \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCompletedStatus(jobStage: string, targetStage: string): string {\n\t\tlet order = [\"CONNECTING\", \"CONNECTION_FAILED\", \"EXPORT\", \"EXPORT_RESOLVE\", \"RESUME_EXPORT\"];\n\n\t\tlet jobPos = order.indexOf(jobStage);\n\t\tlet targetPos = order.indexOf(targetStage);\n\n\t\tif (targetPos < jobPos) {\n\t\t\treturn \"COMPLETE\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetJobStatus(job: ExportScheduledJob): string {\n\t\tif (job.status === \"QUEUED\" || job.status === \"RUNNING\") {\n\t\t\treturn \"WORKING\"\n\t\t}\n\t\telse if (job.status === \"FEEDBACK\" || job.status === \"FAILURE\") {\n\t\t\treturn \"STUCK\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}\n","<div class=\"new-admin-design-main\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n  <div class=\"container-fluid\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"row\">\n      <div *ngIf=\"config != null\" class=\"col-md-12\">\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h3>{{config.label.localizedValue}}</h3>\n          </div>\n        </div>\n\n        <div class=\"inner-col-content-wrapper\" style=\"padding-top: 30px; margin-top: 10px;\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <label style=\"vertical-align: middle;\">CGR</label> \n              <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" style=\"font-size: 23px;padding: 0 7px;vertical-align: middle; color: #bdbdbd;margin-bottom: 4px;\"></i> \n              <label style=\"vertical-align: middle;\">{{config.systemLabel}}</label>\n            </div>\n            <div class=\"col-md-4\">\n              <form #myForm=\"ngForm\">\n                <div class=\"form-group text-right\" style=\"margin: 0;\">\n                  <button type=\"submit\" style=\"margin-left: 15px;\" (click)=\"onRun()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"myForm.invalid\" [title]=\"'synchronization.config.run' | localize\">\n                    <localize key=\"synchronization.config.run\"></localize>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div class=\"row\" *ngIf=\"config != null && config.type === 'DHIS2ExternalSystem'\">\n            <div class=\"col-md-12\">\n\n                <h4>\n                    <localize key=\"synchronization.config.units\"></localize>\n                </h4>\n                <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <localize key=\"settings.external.synchronization.level.label\"></localize>\n                        </th>\n                        <th>\n                          <localize key=\"settings.external.synchronization.geoobjecttype.label\"></localize>\n                        </th>\n                        <th style=\"text-align: right;\">\n                          <localize key=\"settings.external.synchronization.dhis2.synch.type.label\"></localize>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let level of this.config.configuration['levels']; let i = index;\" >\n                        <td style=\"vertical-align: middle;\">\n                          <localize key=\"settings.external.synchronization.level.label\"></localize> {{i + 1}}\n                        </td>\n                        <td style=\"\">\n                          {{level.geoObjectType}}\n                        </td>\n                        <td style=\"text-align: right;\">\n                          <localize *ngIf=\"level.type === 'ORG_UNITS'\" key=\"synchronization.config.units\"></localize>\n                          <localize *ngIf=\"level.type === 'RELATIONSHIPS'\" key=\"synchronization.config.relationships\"></localize>\n                          <localize *ngIf=\"level.type === 'ALL'\" key=\"synchronization.config.all\"></localize>\n                        </td>\n                      </tr>\n                    </tbody>\n                </table>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col-md-12 order-md-1\">\n              <ul class=\"list-group\">\n                <div class=\"solid-table-wrapper\">\n                  <table class=\"table table-striped\">\n                    <thead>\n                      <tr style=\"height: 56px;\">\n                        <th style=\"vertical-align: middle;\"><localize key=\"masterlist.jobs\"></localize></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <!-- <tr *ngFor=\"let job of jobs; let i = index;\">  -->\n                      <tr *ngFor=\"let job of page.resultSet | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                        <td style=\"vertical-align: middle;\">\n                          <div class=\"wrapper\">\n                            <i style=\"position: absolute; font-size: 40px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                            <p style=\"padding-left: 60px;\">\n                              <span style=\"display: block;\"> {{job.fileName}} </span>\n                              <span style=\"display: block;\"> {{job.createDate}} </span>\n                              <span style=\"display: block;\"> {{formatJobStatus(job)}} </span>\n                              <span *ngIf=\"job.exception != null && job.exception.type != 'java.lang.RuntimeException'\" style=\"display: block;\">\n                                {{job.exception.message}}\n                              </span>\n                            </p>\n\n                            <step-indicator *ngIf=\"job.status !== 'SUCCESS' && job.status !== 'FAILURE' && job.status !== 'CANCELED'\" [steps]=\"job.stepConfig\"></step-indicator>\n\n                          </div>\n                        </td>\n                        <td style=\"text-align: right; vertical-align: middle;\">\n                          <div class=\"button-holder\" style=\"float: right;\">\n                            <a *ngIf=\"job.status === 'FAILURE'\" [routerLink]=\"'/registry/sync/details/' + job.historyId\" routerLinkActive=\"active\">\n                              <button class=\"btn btn-primary\" role=\"button\">\n                                <localize key=\"scheduledjobs.detail.button\"></localize>\n                              </button>\n                            </a>\n                           </div>\n                         </td>\n                      </tr>\n\n                    </tbody>\n                  </table>\n                  <div *ngIf=\"page.resultSet.length > 0\" class=\"solid-table-footer\">\n                    <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\n\nimport { RegistryService, IOService } from '@registry/service';\nimport { ScheduledJob } from '@registry/model/registry';\n\n@Component({\n  selector: 'job',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.css']\n})\nexport class SyncDetailsComponent implements OnInit {\n  message: string = null;\n  job: ScheduledJob;\n  historyId: string = \"\";\n\n  page: any = {\n    count: 0,\n    pageNumber: 1,\n    pageSize: 10,\n    results: []\n  };\n\n  isAdmin: boolean;\n  isMaintainer: boolean;\n  isContributor: boolean;\n\n  constructor(public service: RegistryService, private route: ActivatedRoute, authService: AuthService, public ioService: IOService) {\n    this.isAdmin = authService.isAdmin();\n    this.isMaintainer = this.isAdmin || authService.isMaintainer();\n    this.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n  }\n\n  ngOnInit(): void {\n\n    this.historyId = this.route.snapshot.params[\"oid\"];\n\n    this.onPageChange(1);\n\n  }\n\n  ngOnDestroy() {\n  }\n\n  formatAffectedRows(rows: string) {\n    return rows.replace(/,/g, \", \");\n  }\n\n  formatValidationResolve(obj: any) {\n    return JSON.stringify(obj);\n  }\n\n  onPageChange(pageNumber: any): void {\n\n    this.message = null;\n\n    this.service.getExportDetails(this.historyId, this.page.pageSize, pageNumber).then(response => {\n\n      this.job = response;\n      \n      this.page = this.job.exportErrors;\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n  error(err: HttpErrorResponse): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    <loading-bar></loading-bar>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n            <div class=\"py-5\">\n                <h2>\n                    <localize key=\"scheduledjobs.details.title\"></localize>\n                </h2>\n            </div>\n            <div *ngIf=\"job\" class=\"row\" style=\"background: #F4F4F4;\n                                border-radius: 15px;\n                                margin-bottom: 20px;\n                                margin-top: 20px;\n                                padding: 10px;\">\n                <div class=\"col-md-4 order-md-1\">\n                    <div class=\"wrapper\">\n\n                        <i style=\"position: absolute;font-size: 55px;\" class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <p style=\"padding-left: 60px;\">\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.uploaded.by.label\"></localize>\n                              {{job.author}}\n                            </span>\n                            <span style=\"display: block;\">\n                              <localize key=\"scheduledjobs.job.started.label\"></localize>\n                              {{job.createDate}}\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n                <div class=\"col-md-3 order-md-1\">\n                    <div>\n\n                        <h5><b>{{job.exportedRecords}} \n                          <localize key=\"scheduledjobs.job.imported.out.of.label\"></localize> \n                          {{job.workTotal}} \n                          <localize key=\"scheduledjobs.job.imported.total.label\"></localize>\n                        </b></h5>\n                        <h5>{{job.workTotal - job.exportedRecords}} <localize key=\"scheduledjobs.job.remaining.label\"></localize></h5>\n\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"page && page.results.length > 0\" class=\"row\">\n                <div class=\"col-md-12 order-md-1\" *ngIf=\"job\">\n                    \n                    <ul class=\"list-group\">\n            \n                        <table class=\"list-table table table-bordered table-striped\">\n                            <thead>\n                                <tr>\n\t                                <th class=\"label-column\">\n\t                                    <localize key=\"geoObject.label\"></localize>&nbsp;<localize key=\"geoObjectType.attr.code\"></localize>\n\t                                </th>\n\t                                <th class=\"label-column\">\n                                      <localize key=\"scheduledjobs.import.table.message.header\"></localize>\n                                  </th>\n\t                                <th class=\"label-column\">\n                                    <localize key=\"scheduledjobs.import.table.row.number.header\"></localize>\n                                  </th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr *ngFor=\"let row of page.results | paginate: { itemsPerPage: page.pageSize, currentPage: page.pageNumber, totalItems: page.count }\">\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.code}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.message}}</p>\n                                    </td>\n                                    <td class=\"label-column\" style=\"vertical-align: middle;\">\n                                      <p>{{row.rowNum}}</p>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"solid-table-footer\">\n                            <div *ngIf=\"page.results.length > 0\" class=\"solid-table-footer\">\n                                <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Map, LngLatBoundsLike, NavigationControl, MapboxEvent, AttributionControl, IControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AllGeoJSON } from '@turf/helpers'\nimport bbox from '@turf/bbox';\n\nimport { Subject } from 'rxjs';\n\nimport { GeoObject, ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { ModalState } from '@registry/model/location-manager';\n\nimport { MapService, RegistryService } from '@registry/service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n  selector: 'location-manager',\n  templateUrl: './location-manager.component.html',\n  styleUrls: ['./location-manager.css']\n})\nexport class LocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  MODE: ModalState = {\n    SEARCH: 0,\n    VIEW: 1,\n  }\n\n  urlSubscriber: any;\n\n  editSessionEnabled: boolean = false;\n\n  bsModalRef: BsModalRef;\n\n    /* \n     * Root nodes of the tree\n     */\n  data: GeoObject[] = [];\n\n    /* \n     *  Search Text\n     */\n  text: string = '';\n\n    /* \n     *  MODE\n     */\n  mode: number = this.MODE.SEARCH;\n\n    /*\n     * Date of data for explorer\n     */\n  dateStr: string = null;\n\n  forDate: Date = new Date();\n\n\n    /* \n     * Currently selected geo object\n     */\n  current: GeoObject;\n\n    /* \n     * Currently selected geo object type\n     */\n  type: GeoObjectType;\n\n    /* \n     * Flag denoting if an object is currently being editted\n     */\n  isEdit: boolean = false;\n\n    /* \n     * mapbox-gl map\n     */\n  map: Map;\n\n    /* \n     * Flag denoting the draw control is active\n     */\n  active: boolean = false;\n\n  vectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n  baseLayers: any[] = [\n    {\n      name: 'Satellite',\n      label: 'Satellite',\n      id: 'satellite-v9',\n      sprite: 'mapbox://sprites/mapbox/satellite-v9',\n      url: 'mapbox://mapbox.satellite',\n      selected: true\n    },\n    // {\n    //   name: 'Streets',\n    //   label: 'Streets',\n    //   id: 'streets-v9',\n    //   sprite: 'mapbox://sprites/mapbox/basic-v9',\n    //   url: 'mapbox://mapbox.basic-v9'\n    // }\n  ];\n\n  hoverFeatureId: string;\n\n  preventSingleClick: boolean = false;\n\n  /* \n     * Timer for determining double click vs single click\n     */\n  timer: any;\n\n  /* \n     * debounced subject for map extent change events\n     */\n  subject: Subject<MapboxEvent<MouseEvent | TouchEvent | WheelEvent>>;\n\n\n  // \n  // Editing of geomemtries\n  //\n  geometryChange: Subject<any> = new Subject();\n\n  vot: ValueOverTime = null;\n\n  @ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\n  editingControl: any;\n\n\n  constructor(private modalService: BsModalService, private mapService: MapService, public service: RegistryService, private route: ActivatedRoute) {\n  \n  }\n\n  ngOnInit(): void {\n\tthis.urlSubscriber = this.route.params.subscribe(params => {\n       let geoObjectUid = params['geoobjectuid'];\n\t   let geoObjectTypeCode = params['geoobjecttypecode'];\n\n\t\tif(geoObjectUid && geoObjectTypeCode){\n\t\t\tthis.service.getGeoObject(geoObjectUid, geoObjectTypeCode).then(geoObj => {\n\t\t\t\tthis.setData([geoObj]);\n\t\t\t\tthis.select(geoObj, null);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t});\n  }\n\n  ngOnDestroy(): void {\n    this.map.remove();\n\tthis.urlSubscriber.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n\n    const layer = this.baseLayers[0];\n\n    this.map = new Map({\n      container: 'map',\n      style: {\n        \"version\": 8,\n        \"name\": layer.name,\n        \"metadata\": {\n          \"mapbox:autocomposite\": true\n        },\n        \"sources\": {\n          \"mapbox\": {\n            \"type\": \"raster\",\n            \"url\": layer.url,\n            \"tileSize\": 256\n          }\n        },\n        \"sprite\": layer.sprite,\n        \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n        \"layers\": [\n          {\n            \"id\": layer.id,\n            \"type\": 'raster',\n            \"source\": 'mapbox',\n            // \"source-layer\": \"mapbox_satellite_full\"\n          }\n        ]\n      },\n      zoom: 2,\n      attributionControl: false,\n      center: [-78.880453, 42.897852]\n    });\n\n    this.map.on('load', () => {\n      this.initMap();\n    });\n\n    this.map.addControl(this.simpleEditControl);\n  }\n\n  changeMode(mode: number): void {\n    this.mode = mode;\n\n    if (this.mode === this.MODE.SEARCH) {\n      this.isEdit = false;\n    }\n\n    this.clearGeometryEditing();\n\n    this.vot = null;\n  }\n\n  onModeChange(value: boolean): void {\n    this.isEdit = value;\n  }\n\n  handleDateChange(): void {\n    this.forDate = new Date(Date.parse(this.dateStr));\n  }\n\n  initMap(): void {\n\n    this.map.on('style.load', () => {\n      this.addLayers();\n    });\n\n    this.addLayers();\n\n    // Add zoom and rotation controls to the map.\n    this.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n    this.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n    this.map.on('click', 'children-points', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n\n    this.map.on('click', 'children-polygon', (event: any) => {\n      this.handleMapClickEvent(event);\n    });\n\n\tthis.map.on('draw.selectionchange', (e: any) => {\n\t\t\tif(e.features.length > 0 || e.points.length > 0) {\n\t\t\t\tthis.editSessionEnabled = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.editSessionEnabled = false;\n\t\t\t}\n\t});\n\t\n\t// Set map data on page load with URL params (single Geo-Object)\n\tif(this.data){\n\t\tlet fc = {\"type\":\"FeatureCollection\", \"features\":this.data};\n\t\t(<any>this.map.getSource('children')).setData(fc);\n\t\t\n\t\tthis.zoomToFeature(this.data[0], null);\n\t}\n  }\n\n  handleMapClickEvent(event: any): void {\n    if (!this.isEdit && event.features != null && event.features.length > 0) {\n      const feature = event.features[0];\n\n      if (feature.properties.code != null && (this.current == null || this.current.properties.code !== feature.properties.code)) {\n        this.select(feature, null);\n      }\n    }\n  }\n\n\n\n  addLayers(): void {\n\n    const source = 'children';\n\n    this.map.addSource(source, {\n      type: 'geojson',\n      data: {\n        \"type\": \"FeatureCollection\",\n        \"features\": []\n      }\n    });\n\n    // Polygon layer\n    this.map.addLayer({\n      'id': source + '-polygon',\n      'type': 'fill',\n      'source': source,\n      'layout': {},\n      'paint': {\n        'fill-color': DEFAULT_COLOR,\n        'fill-opacity': 0.8,\n        'fill-outline-color': 'black'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      ]\n    });\n\n    // Point layer\n    this.map.addLayer({\n      \"id\": source + \"-points\",\n      \"type\": \"circle\",\n      \"source\": source,\n      \"paint\": {\n        \"circle-radius\": 10,\n        \"circle-color\": DEFAULT_COLOR,\n        \"circle-stroke-width\": 2,\n        \"circle-stroke-color\": '#FFFFFF'\n      },\n      filter: ['all',\n        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      ]\n    });\n\n    //    // Selected layers\n    //    this.map.addLayer({\n    //      \"id\": source + \"-points-selected\",\n    //      \"type\": \"circle\",\n    //      \"source\": source,\n    //      \"paint\": {\n    //        \"circle-radius\": 10,\n    //        \"circle-color\": DEFAULT_COLOR,\n    //        \"circle-stroke-width\": 2,\n    //        \"circle-stroke-color\": '#FFFFFF'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n    //      ]\n    //    });\n    //\n    //    this.map.addLayer({\n    //      'id': source + '-polygon-selected',\n    //      'type': 'fill',\n    //      'source': source,\n    //      'layout': {},\n    //      'paint': {\n    //        'fill-color': DEFAULT_COLOR,\n    //        'fill-opacity': 0.8,\n    //        'fill-outline-color': 'black'\n    //      },\n    //      filter: ['all',\n    //        [\"==\", ['get', 'code'], this.current != null ? this.current.properties.code : ''],\n    //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n    //      ]\n    //    });\n\n    // Label layer\n    this.map.addLayer({\n      \"id\": source + \"-label\",\n      \"source\": source,\n      \"type\": \"symbol\",\n      \"paint\": {\n        \"text-color\": \"black\",\n        \"text-halo-color\": \"#fff\",\n        \"text-halo-width\": 2\n      },\n      \"layout\": {\n        \"text-field\": ['get', 'localizedValue', ['get', 'displayLabel']],\n        \"text-font\": [\"NotoSansRegular\"],\n        \"text-offset\": [0, 0.6],\n        \"text-anchor\": \"top\",\n        \"text-size\": 12,\n      }\n    });\n\n    this.vectorLayers.forEach(cLayer => {\n      this.addVectorLayer(cLayer);\n    });\n  }\n\n  handleBasemapStyle(layer: any): void {\n    // this.map.setStyle('mapbox://styles/mapbox/' + layer.id);\n\n    this.baseLayers.forEach(baseLayer => {\n      baseLayer.selected = false;\n    });\n\n    layer.selected = true;\n\n    this.map.setStyle({\n      \"version\": 8,\n      \"name\": layer.name,\n      \"metadata\": {\n        \"mapbox:autocomposite\": true\n      },\n      \"sources\": {\n        \"mapbox\": {\n          \"type\": \"raster\",\n          \"url\": layer.url,\n          \"tileSize\": 256\n        },\n      },\n      \"sprite\": layer.sprite,\n      \"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n      \"layers\": [\n        {\n          \"id\": layer.id,\n          \"type\": 'raster',\n          \"source\": 'mapbox',\n          // \"source-layer\": \"mapbox_satellite_full\"\n        }\n      ]\n    });\n  }\n\n  search(): void {\n    this.mapService.search(this.text, this.dateStr).then(data => {\n      (<any>this.map.getSource('children')).setData(data);\n\n\n      this.setData(data.features);\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\n  }\n\n\n  zoomToFeature(node: GeoObject, event: MouseEvent): void {\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.preventSingleClick = false;\n    const delay = 200;\n\n    this.timer = setTimeout(() => {\n      if (!this.preventSingleClick) {\n        if (node && node.geometry != null) {\n          const bounds = bbox(node as AllGeoJSON) as LngLatBoundsLike;\n          \n          let padding = 50;\n          let maxZoom = 20;\n          \n          // Zoom level was requested to be reduced when displaying point types as per #420\n          if (node.geometry.type === \"Point\" || node.geometry.type === \"MultiPoint\")\n          {\n            padding = 100;\n            maxZoom = 12;\n          }\n\n          this.map.fitBounds(bounds, { padding: padding, animate:true, maxZoom: maxZoom });\n        }\n      }\n    }, delay);\n  }\n\n  select(node: GeoObject, event: MouseEvent): void {\n\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    this.service.getGeoObjectTypes([node.properties.type], null).then(types => {\n      this.type = types[0];\n      this.current = node;\n      this.mode = this.MODE.VIEW;\n\n      //      const code = this.current.properties.code;\n      //\n      //      // Update the filter properties\n      //      this.map.setFilter('children-points-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n      //      ]);\n      //\n      //      this.map.setFilter('children-polygon-selected', ['all',\n      //        [\"==\", ['get', 'code'], code != null ? code : ''],\n      //        [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n      //      ]);\n\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n  }\n\n  setData(data: GeoObject[]): void {\n    this.data = data;\n  }\n\n  onContextLayerChange(layer: ContextLayer): void {\n\n    if (layer.active) {\n      this.addVectorLayer(layer.oid);\n    }\n    else {\n      this.removeVectorLayer(layer.oid);\n    }\n\n  }\n\n  removeVectorLayer(source: string): void {\n\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index !== -1) {\n      this.map.removeLayer(source + \"-points\");\n      this.map.removeLayer(source + \"-polygon\");\n      this.map.removeLayer(source + \"-label\");\n      this.map.removeSource(source);\n\n      this.vectorLayers.splice(index, 1);\n    }\n\n  }\n\n  addVectorLayer(source: string): void {\n    const index = this.vectorLayers.indexOf(source);\n\n    if (index === -1) {\n      const prevLayer = 'children-polygon';\n\n      var protocol = window.location.protocol;\n      var host = window.location.host;\n\n      this.map.addSource(source, {\n        type: 'vector',\n        tiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n      });\n\n      // Point layer\n      this.map.addLayer({\n        \"id\": source + \"-points\",\n        \"type\": \"circle\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"paint\": {\n          \"circle-radius\": 10,\n          \"circle-color\": SELECTED_COLOR,\n          \"circle-stroke-width\": 2,\n          \"circle-stroke-color\": '#FFFFFF'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n        ]\n      }, prevLayer);\n\n      // Polygon layer\n      this.map.addLayer({\n        'id': source + '-polygon',\n        'type': 'fill',\n        'source': source,\n        \"source-layer\": 'context',\n        'layout': {},\n        'paint': {\n          'fill-color': SELECTED_COLOR,\n          'fill-opacity': 0.8,\n          'fill-outline-color': 'black'\n        },\n        filter: ['all',\n          [\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n        ]\n      }, prevLayer);\n\n\n      // Label layer\n      this.map.addLayer({\n        \"id\": source + \"-label\",\n        \"source\": source,\n        \"source-layer\": 'context',\n        \"type\": \"symbol\",\n        \"paint\": {\n          \"text-color\": \"black\",\n          \"text-halo-color\": \"#fff\",\n          \"text-halo-width\": 2\n        },\n        \"layout\": {\n          \"text-field\": [\"case\",\n            [\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n            [\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n            [\"string\", [\"get\", \"displayLabel\"]]\n          ],\n          \"text-font\": [\"NotoSansRegular\"],\n          \"text-offset\": [0, 0.6],\n          \"text-anchor\": \"top\",\n          \"text-size\": 12,\n        }\n      }, prevLayer);\n\n\n      this.vectorLayers.push(source);\n    }\n  }\n\n\n  //\n  // Editing of features\n  //\n  clearGeometryEditing(): void {\n    if (this.editingControl != null) {\n      this.editingControl.deleteAll();\n      this.map.removeControl(this.editingControl);\n    }\n\n    this.editingControl = null;\n\tthis.map.addControl(this.simpleEditControl);\n\t\n\tthis.editSessionEnabled = false;\n  }\n\n\n  onGeometryEdit(vot: ValueOverTime): void {\n\n    this.clearGeometryEditing();\n\n    this.vot = vot;\n\n    this.addEditLayers(vot);\n  }\n\n  addEditLayers(vot: ValueOverTime): void {\n    if (vot != null) {\n      //      this.renderGeometryAsLayer(this.calculatedPreObject.geometry.value, \"pre\", \"#EFA22E\");\n\n      this.enableEditing(vot);\n    }\n  }\n\n  enableEditing(vot: ValueOverTime): void {\n    if (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: false,\n          polygon: true,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: true,\n          line_string: false,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    else if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n      this.editingControl = new MapboxDraw({\n        controls: {\n          point: false,\n          line_string: true,\n          polygon: false,\n          trash: true,\n          combine_features: false,\n          uncombine_features: false\n        }\n      });\n    }\n    this.map.addControl(this.editingControl);\n\n    if (vot.value != null) {\n      this.editingControl.add(vot.value);\n    }\n  }\n\n  onMapSave(): void {\n    const geometry = this.getDrawGeometry();\n\n    this.editingControl.deleteAll();\n    this.map.removeControl(this.editingControl);\n    //    this.geometryChange.next(geometry);\n\n    this.vot.value = geometry;\n    this.vot = null;\n\n    this.editingControl = null;\n\n\tthis.editSessionEnabled = false;\n  }\n\n  getDrawGeometry(): any {\n    if (this.editingControl != null) {\n      let featureCollection: any = this.editingControl.getAll();\n\n      if (featureCollection.features.length > 0) {\n\n        // The first Feature is our GeoObject.\n\n        // Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n        if (this.type.geometryType === \"MULTIPOLYGON\") {\n          let polygons = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPolygon') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                polygons.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              polygons.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: polygons,\n            type: 'MultiPolygon'\n          };\n        }\n        else if (this.type.geometryType === \"MULTIPOINT\") {\n          let points = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiPoint') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                points.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              points.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: points,\n            type: 'MultiPoint'\n          };\n        }\n        else if (this.type.geometryType === \"MULTILINE\") {\n          let lines = [];\n\n          for (let i = 0; i < featureCollection.features.length; i++) {\n            let feature = featureCollection.features[i];\n\n            if (feature.geometry.type === 'MultiLineString') {\n              for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                lines.push(feature.geometry.coordinates[j]);\n              }\n            }\n            else {\n              lines.push(feature.geometry.coordinates);\n            }\n          }\n\n          return {\n            coordinates: lines,\n            type: 'MultiLineString'\n          };\n        }\n        else {\n          return featureCollection.features[0].geometry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  error(err: HttpErrorResponse): void {\n    this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n  }\n\n}\n","<div class=\"\">\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div id=\"navigator-left-sidebar\" class=\"col-md-5 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n  \n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <input style=\"width: 100%;\" type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" [disabled]=\"mode !== MODE.SEARCH\"/>\n                  </div>\n                </div>\n              </div>\n  \n              <!-- Search bar -->\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"location-management-widget-section\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"search()\" [(ngModel)]=\"text\" name=\"text\" [disabled]=\"mode !== MODE.SEARCH\">\n                      <span class=\"input-group-btn\">\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"search()\" [disabled]=\"mode !== MODE.SEARCH\">\n                          <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span> \n<!--                           <localize key=\"explorer.search.button.message\"></localize> -->\n                        </button>\n                      </span>\n                    </div>\n                    <div *ngIf=\"mode === MODE.VIEW && current != null\" style=\"padding: 20px 0;\">\n                      <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>              \n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <div class=\"row\"  *ngIf=\"mode === MODE.SEARCH\">\n            <div class=\"col-md-12\">\n              <div id=\"hierarchy-tree-container\" class=\"location-management-widget-section location-management-list-container\">\n                    <div class=\"list-group\">\n  \n                      <div *ngFor=\"let node of data; let i = index\" class=\"list-group-item\">\n                        <!-- Single column card -->\n                        <div class=\"card card-default\" (click)=\"select(node, $event)\">\n                          <div class=\"card-body\">\n                            <i class=\"fa fa-map-marker clickable\" style=\"float:right;font-size:25px;\" aria-hidden=\"true\" (click)=\"zoomToFeature(node, $event)\" [title]=\"'explorer.zoom.label' | localize\"></i>\n                            <h4 class=\"clickable\" style=\"word-break: break-all;\" title=\"View Geo-Object details\">{{node.properties.code}} - {{node.properties.displayLabel.localizedValue}}</h4>\n                          </div>\n                        </div>\n                      </div>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>    \n        <div *ngIf=\"mode === MODE.VIEW && current != null\" class=\"row\">\n          <div class=\"col-md-12\">\n<!--             <div style=\"padding: 20px 0;\"> -->\n<!--               <i class=\"fa fa-arrow-left clickable\" aria-hidden=\"true\" (click)=\"changeMode(this.MODE.SEARCH)\"><localize key=\"explorer.back.to.results\"></localize></i>               -->\n<!--             </div> -->\n            <feature-panel\n              [type]=\"type\"\n              [code]=\"current.properties.code\"              \n              [forDate]=\"forDate\"\n              [readOnly]=\"!current.properties.writable\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"search()\"\n              (modeChange)=\"onModeChange($event)\"              \n            ></feature-panel>\n          </div>\n        </div>            \n      </div>\n\n      <div class=\"col-md-7\" id=\"site-explorer-map\">\n        <div class=\"row\">\n          \n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\"></layer-panel>\n          </article>\n\n          <div id=\"map\" class=\"map-view-port\"></div>\n          <simple-edit-control [visible]=\"editingControl != null\" [editSessionEnabled]=\"editSessionEnabled\" [save]=\"true\" (editEmitter)=\"onMapSave()\" #simpleEditControl></simple-edit-control>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { MasterList, ContextLayer, ContextLayerGroup } from '@registry/model/registry';\n\n\n@Component( {\n    selector: 'context-layer-modal',\n    templateUrl: './context-layer-modal.component.html',\n    styleUrls: ['./location-manager.css']\n} )\nexport class ContextLayerModalComponent {\n\n    contextLayerGroups: ContextLayerGroup[];\n\n\n    /*\n     * Called on confirm\n     */\n    public onSubmit: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onSubmit = new Subject();\n    }\n\n    groupHasContextLayers(group:string): boolean {\n\t\tlet hasCLayers = false;\n\t\tthis.contextLayerGroups.forEach(cLayerGroup => {\n\t\t\tif(cLayerGroup.oid === group && cLayerGroup.contextLayers.length > 0){\n\t\t\t\thasCLayers = true;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn hasCLayers;\n\t}\n\n    confirm(): void {\n        this.onSubmit.next( this.contextLayerGroups );\n        this.bsModalRef.hide();\n    }\n\n}\n","<div class=\"modal-body\">\n    <div class=\"heading\">\n        <h2>\n            <localize key=\"explorer.add.context.layers.modal.title\"></localize>\n        </h2>\n    </div>\n\n    <form class=\"modal-form\" name=\"export-form\">\n        <fieldset>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"list-group\">\n                        <div *ngFor=\"let cLayerGroup of contextLayerGroups;\" >\n                            <div *ngIf=\"groupHasContextLayers(cLayerGroup.oid)\" class=\"list-group-item\" style=\"border: none;\">\n                                <h4>{{ cLayerGroup.displayLabel }}</h4>\n                                <div class=\"list-group\">\n                                    <div *ngFor=\"let cLayer of cLayerGroup.contextLayers\">\n                                        <input type=\"checkbox\" [checked]=\"cLayer.enabled\" (change)=\"cLayer.enabled = !cLayer.enabled\" style=\"margin-left: 10px;\"> {{ cLayer.displayLabel }}\n                                        \n                                        <!-- <boolean-field [(value)]=\"cLayer.enabled\" [label]=\"cLayer.displayLabel\"></boolean-field> -->\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"button-holder\">\n                        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\"\n                            aria-disabled=\"false\">\n                            <span>\n                                <localize key=\"modal.button.cancel\"></localize>\n                            </span>\n                        </button>\n                        <button type=\"button\" (click)=\"confirm()\" class=\"btn btn-primary\" role=\"button\">\n                            <span>\n                                <localize key=\"modal.button.submit\"></localize>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n","import { \n\tComponent, \n\tOnInit, \n\tInput, \n\tOutput, \n\tChangeDetectorRef, \n\tEventEmitter, \n\tViewChildren, \n\tQueryList } from '@angular/core';\nimport {\n\ttrigger,\n\tstyle,\n\tanimate,\n\ttransition,\n} from '@angular/animations';\n\nimport { GeoObjectType, Attribute, ValueOverTime, GeoObjectOverTime, PRESENT } from '@registry/model/registry';\n\nimport{ DateFieldComponent } from '../../../shared/component/form-fields/date-field/date-field.component';\n\nimport { LocalizationService } from '@shared/service';\n\nimport Utils from '../../utility/Utils';\n\nimport * as moment from 'moment';\n\n\n@Component({\n\tselector: 'geometry-panel',\n\ttemplateUrl: './geometry-panel.component.html',\n\tstyleUrls: ['./geometry-panel.css'],\n\thost: { '[@fadeInOut]': 'true' },\n\tanimations: [\n\t\t[\n\t\t\ttrigger('fadeInOut', [\n\t\t\t\ttransition('void => *', [\n\t\t\t\t\tstyle({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t}),\n\t\t\t\t\tanimate('500ms')\n\t\t\t\t]),\n\t\t\t\ttransition(':leave',\n\t\t\t\t\tanimate('500ms', \n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t])\n\t\t]]\n})\nexport class GeometryPanelComponent implements OnInit {\n\t\n\t@ViewChildren('dateFieldComponents') dateFieldComponentsArray:QueryList<DateFieldComponent>;\n\t\n\tcurrentDate : Date = new Date();\n\t\n\tisValid: boolean = true;\n\t\n\tisVersionForHighlight: number;\n\t\n\tmessage: string = null;\n\n\treadonly: boolean = false;\n\t\n\thasConflict: boolean = false;\n\n    /*\n     * Observable subject for MasterList changes.  Called when an update is successful \n     */\n\t@Output() onChange = new EventEmitter<GeoObjectOverTime>()\n\n\t@Output() onEdit = new EventEmitter<ValueOverTime>()\n\n\t@Input() geoObjectType: GeoObjectType;\n\n\toriginalGeoObjectOverTime: GeoObjectOverTime;\n\tgeoObjectOverTime: GeoObjectOverTime;\n\t\n\t@Input() set geoObjectOverTimeInput(value: GeoObjectOverTime) {\n\t\tthis.originalGeoObjectOverTime = JSON.parse(JSON.stringify(value));\n\t\tthis.geoObjectOverTime = value;\n\t}\n\n\t@Input() isNewGeoObject: boolean = false;\n\n\tgoGeometries: GeoObjectOverTime;\n\n\tnewVersion: ValueOverTime;\n\n\thasDuplicateDate: boolean = false;\n\n\tconstructor(private lService: LocalizationService, public changeDetectorRef: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t}\n\n\tcheckDateFieldValidity(): boolean {\n\t\tlet dateFields = this.dateFieldComponentsArray.toArray();\n\t\t\n\t\tfor(let i=0; i<dateFields.length; i++){\n\t\t\tlet field = dateFields[i];\n\t\t\tif(!field.valid){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\tonDateChange(): any {\n\t\tthis.hasConflict = false;\n\t\t\n\t\tthis.isValid = this.checkDateFieldValidity();\n\t\n\t\tlet vAttributes = this.geoObjectOverTime.attributes['geometry'].values;\n\n\n\t\t// check ranges\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tconst h1 = vAttributes[j];\n\t\t\th1.conflictMessage = [];\n\n\t\t\tif (!(h1.startDate == null || h1.startDate === '') && !(h1.endDate == null || h1.endDate === '')) {\n\t\t\t\tlet s1: any = new Date(h1.startDate);\n\t\t\t\tlet e1: any = new Date(h1.endDate);\n\t\t\t\t\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflict = true;\t\t\n\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\"message\": this.lService.decode(\"manage.versions.startdate.later.enddate.message\")\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t\t\n\t\t\t\t\tthis.isValid = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < vAttributes.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\tconst h2 = vAttributes[i];\n\t\t\t\t\t\tif (!(h2.startDate == null || h2.startDate === '') && !(h2.endDate == null || h2.endDate === '')) {\n\t\t\t\t\t\t\tlet s2: any = new Date(h2.startDate);\n\t\t\t\t\t\t\tlet e2: any = new Date(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\t\t\t\"message\":this.lService.decode(\"manage.versions.overlap.message\")\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.hasConflict = true;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.isValid = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.sort(vAttributes);\n\t\t\n\t\t// check gaps\n\t\tlet current = null;\n\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tlet next = vAttributes[j];\n\n\t\t\tif (j > 0) {\n\t\t\t\tif (!(current.startDate == null || current.startDate === '') && !(current.endDate == null || current.endDate === '')) {\n\t\t\t\t\tlet e1: any = new Date(current.endDate);\n\n\t\t\t\t\tif (!(next.startDate == null || next.startDate === '') && !(next.endDate == null || next.endDate === '')) {\n\t\t\t\t\t\tlet s2: any = new Date(next.startDate);\n\n\t\t\t\t\t\tif (Utils.hasGap(e1.getTime(), s2.getTime())) {\n\t\t\t\t\t\t\tnext.conflictMessage.push({\n\t\t\t\t\t\t\t\t\"type\": \"WARNING\",\t\n\t\t\t\t\t\t\t\t\"message\":this.lService.decode(\"manage.versions.gap.message\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrent.conflictMessage.push({\n\t\t\t\t\t\t\t\t\"type\": \"WARNING\",\t\n\t\t\t\t\t\t\t\t\"message\":this.lService.decode(\"manage.versions.gap.message\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrent = next;\n\t\t}\n\t}\n\n\tedit(vot: ValueOverTime, isVersionForHighlight: number): void {\n\t\tthis.onEdit.emit(vot);\n\t\t\n\t\tthis.isVersionForHighlight = isVersionForHighlight;\n\t}\n\n\tonAddNewVersion(): void {\n\t\tlet votArr: ValueOverTime[] = this.geoObjectOverTime.attributes['geometry'].values;\n\n\t\tlet vot: ValueOverTime = new ValueOverTime();\n\t\tvot.startDate = null;  // Utils.formatDateString(new Date());\n\t\tvot.endDate = null;  // Utils.formatDateString(new Date());\n\n\t\tvot.value = { \"type\": this.geoObjectType.geometryType, \"coordinates\": [] };\n\n\t\tif (this.geoObjectType.geometryType === \"MULTIPOLYGON\") {\n\t\t\tvot.value.type = \"MultiPolygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POLYGON\") {\n\t\t\tvot.value.type = \"Polygon\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"POINT\") {\n\t\t\tvot.value.type = \"Point\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTIPOINT\") {\n\t\t\tvot.value.type = \"MultiPoint\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"LINE\") {\n\t\t\tvot.value.type = \"Line\";\n\t\t}\n\t\telse if (this.geoObjectType.geometryType === \"MULTILINE\") {\n\t\t\tvot.value.type = \"MultiLine\";\n\t\t}\n\n\t\tvotArr.push(vot);\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tgetVersionData(attribute: Attribute) {\n\t\tlet versions: ValueOverTime[] = [];\n\n\t\tthis.geoObjectOverTime.attributes[attribute.code].values.forEach(vAttribute => {\n\t\t\tvAttribute.value.localeValues.forEach(val => {\n\t\t\t\tversions.push(val);\n\t\t\t})\n\t\t})\n\t\treturn versions;\n\t}\n\n\tgetDefaultLocaleVal(locale: any): string {\n\t\tlet defVal = null;\n\n\t\tlocale.localeValues.forEach(locVal => {\n\t\t\tif (locVal.locale === 'defaultLocale') {\n\t\t\t\tdefVal = locVal.value;\n\t\t\t}\n\n\t\t})\n\n\t\treturn defVal;\n\t}\n\n\tsetDateAttribute(vot: ValueOverTime, val: string): void {\n\t\tvot.value = new Date(val).getTime().toString()\n\t}\n\n\tremove(version: any): void {\n\n\t\tlet val = this.geoObjectOverTime.attributes['geometry'];\n\n\t\tlet position = -1;\n\t\tfor (let i = 0; i < val.values.length; i++) {\n\t\t\tlet vals = val.values[i];\n\n\n\t\t\tif (vals.startDate === version.startDate) {\n\t\t\t\tposition = i\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(position > -1){\n\t\t\tval.values.splice(position, 1);\n\t\t}\n\t\t\n\t}\n\t\n\tformatDate(date: string) {\n\t\tlet localeData = moment.localeData(date);\n  \t\tvar format = localeData.longDateFormat('L');\n  \t\treturn moment().format(format);\n\t}\n\t\n\tsetInfinity(vAttribute, attributes): void {\n\t\t\n\t\tif(vAttribute.endDate === PRESENT){\n\t\t\tvAttribute.endDate = new Date();\n\t\t}\n\t\telse{\n\t\t\tvAttribute.endDate = PRESENT\n\t\t}\n\t\t\n\t\tthis.onDateChange();\n\t\t\n\t}\n\t\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\n\tonSubmit(): void {\n\t\tthis.onChange.emit(this.geoObjectOverTime);\n\t}\n\n\tonCancel(): void {\n\t\tthis.onChange.emit(this.originalGeoObjectOverTime);\n\t}\n}\n","<div>\n  <div *ngIf=\"hasDuplicateDate\" class=\"alert alert-danger\" role=\"alert\">\n    <localize key=\"changeovertime.manageVersions.duplicateDate\"></localize>\n  </div>\n\n  <!-- <div class=\"col-md-12 order-md-1\"> -->\n  <form #versionsform=\"ngForm\" class=\"modal-form\">\n\n    <fieldset>\n      <div class=\"row\">\n\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"col-md-12\">\n          <div class=\"attribute-version-wrapper\" *ngIf=\"geoObjectOverTime\">\n\n                <ul class=\"list-group\">\n                  <li class=\"list-group-item\" style=\"text-align:left;padding:0;\">\n                    <table class=\"table table-striped\">\n\n                      <tbody class=\"attribute-element-wrapper\">\n                        <p class=\"message\" *ngIf=\"geoObjectOverTime.attributes['geometry'].values.length === 0\">\n                          <localize key=\"changeovertime.manageVersions.no.versions.message\"></localize>\n                        </p>\n\n                        <tr *ngFor=\"let vAttribute of geoObjectOverTime.attributes['geometry'].values; let i = index;\" [ngClass]=\"{'error-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'ERROR', 'warning-border': vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0 && vAttribute.conflictMessage[0].type === 'WARNING'}\">\n                          <td [ngClass]=\"{'active' : i === isVersionForHighlight}\">\n                            <table>\n                              <tr class=\"attribute-value-row\" *ngIf=\"geoObjectType.isGeometryEditable\">\n                                <td colspan=\"2\">\n                                  <button class=\"btn btn-primary\" (click)=\"edit(vAttribute, i)\" role=\"button\">\n                                    <localize key=\"changeovertime.manageVersions.geometry.edit\"></localize>\n                                  </button>\n                                </td>\n                              </tr>\n                              <tr class=\"attribute-date-input-row\">\n                                <td>\n                                  <h5>\n                                    <localize key=\"changeovertime.manageVersions.tableHeader.label.startDate\"></localize>\n                                  </h5> \n                                  \n                                  <date-field #dateFieldComponents [(value)]=\"vAttribute.startDate\" label=\"\" [inputName]=\"'startDate_' + i\" (change)=\"onDateChange()\" [allowFutureDates]=\"false\" [required]=\"true\" ></date-field>\n                                  \n                                </td>\n                                <td>\n                                  <div class=\"version-edit-date-container\">\n                                      <h5>\n                                        <localize key=\"changeovertime.manageVersions.tableHeader.label.endDate\"></localize>\n                                      </h5>\n                                      \n                                      <date-field #dateFieldComponents [(value)]=\"vAttribute.endDate\" label=\"\" [inputName]=\"'endDate_' + i\" (change)=\"onDateChange()\" [allowInfinity]=\"true\" [allowFutureDates]=\"true\" [required]=\"true\" [placement]=\"'bottom'\"></date-field>\n                                      \n                                    </div>\n                                </td>\n                              </tr>\n                              <tr *ngIf=\"vAttribute.conflictMessage && vAttribute.conflictMessage.length > 0\">\n<!--                                   <p class=\"error-message\"> -->\n<!--                                     <localize key=\"manage.versions.overlap.message\"></localize> -->\n<!--                                   </p> -->\n                                  <p *ngFor=\"let msg of vAttribute.conflictMessage\" [ngClass]=\"{'error-message': msg.type === 'ERROR', 'warning-message': msg.type === 'WARNING'}\">\n                                    {{msg.message}}\n                                  </p>\n                              </tr>    \n                            </table>\n                          </td>\n                          <td style=\"vertical-align: middle;\" class=\"manage-version-button clickable\" [title]=\"'changeovertime.manageVersions.remove.version' | localize\" (click)=\"remove(vAttribute)\">\n                            <i class=\"fa fa-times\"></i>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </li>\n\n                  <li class=\"list-group-item\" style=\"text-align: left;\">\n                    <i class=\"fa fa-plus clickable\" (click)=\"onAddNewVersion()\"> <localize key=\"changeovertime.manageVersions.newVersion\"></localize>\n                    </i>\n                  </li>\n                </ul>\n              </div>\n        </div>\n\n      </div>\n\n      <div class=\"row-holder\">\n        <!-- <div class=\"label-holder\"></div> -->\n        <div class=\"holder\" style=\"border: none; width: 100%;\">\n          <div class=\"button-holder pull-right\">\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onCancel()\" class=\"btn btn-default\" role=\"button\">\n              <localize key=\"io.cancel\"></localize>\n            </button>\n            <button *ngIf=\"!readonly\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\" role=\"button\" [disabled]=\"!isValid || !versionsform.valid\">\n              <localize key=\"modal.button.submit\"></localize>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Map, NavigationControl, AttributionControl, LngLatBounds, IControl } from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\n\nimport { ContextLayer, GeoObjectType, ValueOverTime } from '@registry/model/registry';\nimport { MapService, RegistryService } from '@registry/service';\nimport { AuthService } from '@shared/service';\nimport { ErrorHandler } from '@shared/component';\nimport { Subject } from 'rxjs';\n\nimport { LocalizationService } from '@shared/service';\n\ndeclare var acp: string;\n\nconst DEFAULT_COLOR = \"#80cdc1\";\nconst SELECTED_COLOR = \"#800000\";\n\n@Component({\n\tselector: 'dataset-location-manager',\n\ttemplateUrl: './dataset-location-manager.component.html',\n\tstyleUrls: ['./dataset-location-manager.css']\n})\nexport class DatasetLocationManagerComponent implements OnInit, AfterViewInit, OnDestroy {\n\tMODE = {\n\t\tVERSIONS: 'VERSIONS',\n\t\tATTRIBUTES: 'ATTRIBUTES',\n\t\tHIERARCHY: 'HIERARCHY'\n\t}\n\t\n\teditSessionEnabled: boolean = false;\n\n\ttoolsIconHover: boolean = false;\n\n\tdatasetId: string;\n\n\ttypeCode: string;\n\n\treadOnly: boolean = false;\n\n\teditOnly: boolean = false;\n\n\tisEdit: boolean = false;\n\n\tdate: string;\n\n\tcode: string;\n\n\ttype: GeoObjectType;\n\n\tbsModalRef: BsModalRef;\n\n    /* \n     * mapbox-gl map\n     */\n\tmap: Map;\n\n\tvectorLayers: string[] = [];\n\n    /* \n     * List of base layers\n     */\n\tbaseLayers: any[] = [\n\t\t{\n\t\t\tname: 'Satellite',\n\t\t\tlabel: 'Satellite',\n\t\t\tid: 'satellite-v9',\n\t\t\tsprite: 'mapbox://sprites/mapbox/satellite-v9',\n\t\t\turl: 'mapbox://mapbox.satellite',\n\t\t\tselected: true\n\t\t},\n//\t\t {\n//\t\t \tname: 'Streets',\n//\t\t \tlabel: 'Streets',\n//\t\t \tid: 'streets-v11',\n//\t\t \tsprite: 'mapbox://sprites/mapbox/basic-v11',\n//\t\t \turl: 'mapbox://styles/mapbox/streets-v11'\n//\t\t }\n\t];\n\n\n\tmode: string = null;\n\n\tisMaintainer: boolean;\n\n\tforDate: Date = new Date();\n\n\t@ViewChild(\"simpleEditControl\") simpleEditControl: IControl;\n\teditingControl: any;\n\n\tgeometryChange: Subject<any> = new Subject();\n\n\tvot: ValueOverTime;\n\n\tconstructor(private mapService: MapService, public service: RegistryService, private modalService: BsModalService, private route: ActivatedRoute, \n\t\tauthService: AuthService, private lService: LocalizationService) {\n\t\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.datasetId = this.route.snapshot.params[\"datasetId\"];\n\t\tthis.typeCode = this.route.snapshot.params[\"typeCode\"];\n\t\tthis.date = this.route.snapshot.params[\"date\"];\n\t\tthis.readOnly = this.route.snapshot.params[\"readOnly\"] === 'true';\n\t\tthis.editOnly = this.route.snapshot.params[\"editOnly\"] === 'true';\n\n\t\tif (this.route.snapshot.params[\"code\"] != null) {\n\t\t\tthis.code = this.route.snapshot.params[\"code\"];\n\t\t}\n\n\t\tthis.forDate = new Date(Date.parse(this.date));\n\n\t\tthis.service.getGeoObjectTypes([this.typeCode], null).then(types => {\n\t\t\tthis.type = types[0];\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.map.remove();\n\t}\n\n\tngAfterViewInit() {\n\n\t\tconst layer = this.baseLayers[0];\n\n\t\tthis.map = new Map({\n\t\t\tcontainer: 'dataset-map',\n\t\t\tstyle: {\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox-satellite\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n//\t\t\t\t\t{\n//\t\t\t\t\t\t\"id\": layer.id,\n//\t\t\t\t\t\t\"type\": 'raster',\n//\t\t\t\t\t\t\"source\": 'mapbox-satellite',\n//\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tzoom: 2,\n\t\t\tattributionControl: false,\n\t\t\tcenter: [-78.880453, 42.897852]\n\t\t});\n\n\t\tthis.map.on('load', () => {\n\t\t\tthis.initMap();\n\t\t});\n\n\t\tthis.map.addControl(this.simpleEditControl);\n\t}\n\n\tonModeChange(value: boolean): void {\n\t\tthis.isEdit = value;\n\t}\n\n\tinitMap(): void {\n\t  if (this.code !== '__NEW__')\n\t  {\n  \t\tthis.service.getGeoObjectBoundsAtDate(this.code, this.typeCode, this.date).then(bounds => {\n\t\n\t\t\tif(bounds){\n\t  \t\t\tlet llb = new LngLatBounds([bounds[0], bounds[1]], [bounds[2], bounds[3]]);\n\t  \n\t  \t\t\tlet padding = 50;\n\t  \t\t\tlet maxZoom = 20;\n\t  \n\t  \t\t\t// Zoom level was requested to be reduced when displaying point types as per #420\n\t  \t\t\tif (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t  \t\t\t\tpadding = 100;\n\t  \t\t\t\tmaxZoom = 12;\n\t  \t\t\t}\n\t  \n\t  \t\t\tthis.map.fitBounds(llb, { padding: padding, animate: false, maxZoom: maxZoom });\n\t\t\t}\n  \t\t});\n\t\t}\n\n\n\t\tthis.map.on('style.load', () => {\n\t\t\tthis.addLayers();\n\t\t});\n\n\t\tthis.addLayers();\n\n\t\t// Add zoom and rotation controls to the map.\n\t\tthis.map.addControl(new NavigationControl({ 'visualizePitch': true }));\n\t\tthis.map.addControl(new AttributionControl({ compact: true }), 'bottom-right');\n\n\t\tthis.map.on('click', this.datasetId + '-points', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\t\tthis.map.on('click', this.datasetId + '-polygon', (event: any) => {\n\t\t\tthis.handleMapClickEvent(event);\n\t\t});\n\n\n\t\tthis.map.on('draw.selectionchange', (e: any) => {\n\t\t\tif(e.features.length > 0 || e.points.length > 0) {\n\t\t\t\tthis.editSessionEnabled = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.editSessionEnabled = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\taddLayers(): void {\n\t\t\t\n\t\tthis.map.addLayer({\n\t\t\t\"type\": \"raster\",\n\t\t\t\"id\": 'satellite-map',\n\t\t\t\"source\": \"mapbox-satellite\"\n\t\t});\n\t\t\t\n\t\tthis.vectorLayers.forEach(vLayer => {\n\t\t\tthis.addVectorLayer(vLayer);\n\t\t});\n\t}\n\n\thandleBasemapStyle(layer: any): void {\n\n\t\tif(layer.id === \"streets-v11\"){\n\t\t\tthis.map.setStyle(layer.url);\n\t\t}\n\t\telse if(layer.id === \"satellite-v9\"){\n\t\t\tthis.map.setStyle({\n\t\t\t\t\"version\": 8,\n\t\t\t\t\"name\": layer.name,\n\t\t\t\t\"metadata\": {\n\t\t\t\t\t\"mapbox:autocomposite\": true\n\t\t\t\t},\n\t\t\t\t\"sources\": {\n\t\t\t\t\t\"mapbox-satellite\": {\n\t\t\t\t\t\t\"type\": \"raster\",\n\t\t\t\t\t\t\"url\": layer.url,\n\t\t\t\t\t\t\"tileSize\": 256\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"sprite\": layer.sprite,\n\t\t\t\t\"glyphs\": window.location.protocol + '//' + window.location.host + acp + '/glyphs/{fontstack}/{range}.pbf',\n\t\t\t\t\"layers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": layer.id,\n\t\t\t\t\t\t\"type\": 'raster',\n\t\t\t\t\t\t\"source\": 'mapbox-satellite',\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}\n\n\tonContextLayerChange(layer: ContextLayer): void {\n\n\t\tif (layer.active) {\n\t\t\tthis.addVectorLayer(layer.oid);\n\t\t}\n\t\telse {\n\t\t\tthis.removeVectorLayer(layer.oid);\n\t\t}\n\n\t}\n\n\tremoveVectorLayer(source: string): void {\n\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index !== -1) {\n\t\t\tthis.map.removeLayer(source + \"-points\");\n\t\t\tthis.map.removeLayer(source + \"-polygon\");\n\t\t\tthis.map.removeLayer(source + \"-points-selected\");\n\t\t\tthis.map.removeLayer(source + \"-polygon-selected\");\n\t\t\tthis.map.removeLayer(source + \"-label\");\n\t\t\tthis.map.removeSource(source);\n\n\t\t\tthis.vectorLayers.splice(index, 1);\n\t\t}\n\n\t}\n\n\taddVectorLayer(source: string): void {\n\t\tconst index = this.vectorLayers.indexOf(source);\n\n\t\tif (index === -1) {\n\t\t\tconst prevLayer = (source !== this.datasetId) ? this.datasetId + '-points' : null;\n\n\t\t\tvar protocol = window.location.protocol;\n\t\t\tvar host = window.location.host;\n\n\t\t\tthis.map.addSource(source, {\n\t\t\t\ttype: 'vector',\n\t\t\t\ttiles: [protocol + '//' + host + acp + '/master-list/tile?x={x}&y={y}&z={z}&config=' + encodeURIComponent(JSON.stringify({ oid: source }))]\n\t\t\t});\n\n\t\t\t// Point layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-points\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\"circle-color\": DEFAULT_COLOR,\n\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Polygon layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t'id': source + '-polygon',\n\t\t\t\t'type': 'fill',\n\t\t\t\t'source': source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t'layout': {},\n\t\t\t\t'paint': {\n\t\t\t\t\t'fill-color': DEFAULT_COLOR,\n\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t},\n\t\t\t\tfilter: ['all',\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]\n\t\t\t}, prevLayer);\n\n\t\t\t// Selected object layers\n\t\t\tif (source === this.datasetId) {\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t\"id\": source + \"-points-selected\",\n\t\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\t\"source\": source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t\"paint\": {\n\t\t\t\t\t\t\"circle-radius\": 10,\n\t\t\t\t\t\t\"circle-color\": SELECTED_COLOR,\n\t\t\t\t\t\t\"circle-stroke-width\": 2,\n\t\t\t\t\t\t\"circle-stroke-color\": '#FFFFFF'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\n\t\t\t\tthis.map.addLayer({\n\t\t\t\t\t'id': source + '-polygon-selected',\n\t\t\t\t\t'type': 'fill',\n\t\t\t\t\t'source': source,\n\t\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\t'layout': {},\n\t\t\t\t\t'paint': {\n\t\t\t\t\t\t'fill-color': SELECTED_COLOR,\n\t\t\t\t\t\t'fill-opacity': 0.8,\n\t\t\t\t\t\t'fill-outline-color': 'black'\n\t\t\t\t\t},\n\t\t\t\t\tfilter: ['all',\n\t\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t\t]\n\t\t\t\t}, prevLayer);\n\t\t\t}\n\n\t\t\t// Label layer\n\t\t\tthis.map.addLayer({\n\t\t\t\t\"id\": source + \"-label\",\n\t\t\t\t\"source\": source,\n\t\t\t\t\"source-layer\": 'context',\n\t\t\t\t\"type\": \"symbol\",\n\t\t\t\t\"paint\": {\n\t\t\t\t\t\"text-color\": \"black\",\n\t\t\t\t\t\"text-halo-color\": \"#fff\",\n\t\t\t\t\t\"text-halo-width\": 2\n\t\t\t\t},\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"text-field\": [\"case\",\n\t\t\t\t\t\t[\"has\", \"displayLabel_\" + navigator.language.toLowerCase()],\n\t\t\t\t\t\t[\"coalesce\", [\"string\", [\"get\", \"displayLabel_\" + navigator.language.toLowerCase()]], [\"string\", [\"get\", \"displayLabel\"]]],\n\t\t\t\t\t\t[\"string\", [\"get\", \"displayLabel\"]]\n\t\t\t\t\t],\n\t\t\t\t\t\"text-font\": [\"NotoSansRegular\"],\n\t\t\t\t\t\"text-offset\": [0, 0.6],\n\t\t\t\t\t\"text-anchor\": \"top\",\n\t\t\t\t\t\"text-size\": 12,\n\t\t\t\t}\n\t\t\t}, prevLayer);\n\n\n\t\t\tthis.vectorLayers.push(source);\n\t\t}\n\t}\n\n\n\t/*\n\t * EDIT FUNCTIONALITY\n\t */\n\n\tclearGeometryEditing(): void {\n\t\tif (this.editingControl != null) {\n\t\t\tthis.editingControl.deleteAll();\n\t\t\tthis.map.removeControl(this.editingControl);\n\t\t}\n\n\t\tthis.editingControl = null;\n\t\t\n\t\tthis.editSessionEnabled = false;\n\t}\n\n\tonFeatureChange(): void {\n\t\t// Refresh the layer\n\t\tthis.removeVectorLayer(this.datasetId);\n\t\tthis.addVectorLayer(this.datasetId);\n\t}\n\n\thandleMapClickEvent(event: any): void {\n\t\tif (!this.isEdit && event.features != null && event.features.length > 0) {\n\t\t\tconst feature = event.features[0];\n\n\t\t\tif (feature.properties.code != null && this.code !== feature.properties.code) {\n\t\t\t\tthis.code = feature.properties.code;\n\n\t\t\t\t// Update the filter properties\n\t\t\t\tthis.map.setFilter(this.datasetId + '-points-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Point\", \"MultiPont\"], true, false]\n\t\t\t\t]);\n\n\t\t\t\tthis.map.setFilter(this.datasetId + '-polygon-selected', ['all',\n\t\t\t\t\t[\"==\", ['get', 'code'], this.code != null ? this.code : ''],\n\t\t\t\t\t[\"match\", [\"geometry-type\"], [\"Polygon\", \"MultiPolygon\"], true, false]\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n\n\tonMapSave(): void {\n\t\tconst geometry = this.getDrawGeometry();\n\n\t\tthis.editingControl.deleteAll();\n\t\tthis.map.removeControl(this.editingControl);\n\t\tthis.geometryChange.next(geometry);\n\n\t\tthis.vot.value = geometry;\n//\t\tthis.vot = null;\n\n\t\tthis.editingControl = null;\n\t\t\n\t\tthis.editSessionEnabled = false;\n\t}\n\n\tonGeometryEdit(vot: ValueOverTime): void {\n\t\tthis.clearGeometryEditing();\n\n\t\tthis.vot = vot;\n\n\t\tthis.addEditLayers(vot);\n\t}\n\n\t//\tonMapEdit(): void {\n\t//\t\t// Enable editing\n\t//\t\tif (this.editingControl == null) {\n\t//\t\t\tthis.addEditLayers();\n\t//\t\t}\n\t//\t}\n\n\taddEditLayers(vot: ValueOverTime): void {\n\t\tif (vot != null) {\n\t\t\tthis.enableEditing(vot);\n\t\t}\n\t}\n\n\tenableEditing(vot: ValueOverTime): void {\n\t\tif (this.type.geometryType === \"MULTIPOLYGON\" || this.type.geometryType === \"POLYGON\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: true,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"POINT\" || this.type.geometryType === \"MULTIPOINT\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: true,\n\t\t\t\t\tline_string: false,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.type.geometryType === \"LINE\" || this.type.geometryType === \"MULTILINE\") {\n\t\t\tthis.editingControl = new MapboxDraw({\n\t\t\t\tcontrols: {\n\t\t\t\t\tpoint: false,\n\t\t\t\t\tline_string: true,\n\t\t\t\t\tpolygon: false,\n\t\t\t\t\ttrash: true,\n\t\t\t\t\tcombine_features: false,\n\t\t\t\t\tuncombine_features: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.map.addControl(this.editingControl);\n\n\t\tif (vot.value != null) {\n\t\t\tthis.editingControl.add(vot.value);\n\t\t}\n\t}\n\n\n\tgetDrawGeometry(): any {\n\t\tif (this.editingControl != null) {\n\t\t\tlet featureCollection: any = this.editingControl.getAll();\n\n\t\t\tif (featureCollection.features.length > 0) {\n\n\t\t\t\t// The first Feature is our GeoObject.\n\n\t\t\t\t// Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n\t\t\t\tif (this.type.geometryType === \"MULTIPOLYGON\") {\n\t\t\t\t\tlet polygons = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPolygon') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpolygons.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: polygons,\n\t\t\t\t\t\ttype: 'MultiPolygon'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTIPOINT\") {\n\t\t\t\t\tlet points = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiPoint') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpoints.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: points,\n\t\t\t\t\t\ttype: 'MultiPoint'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (this.type.geometryType === \"MULTILINE\") {\n\t\t\t\t\tlet lines = [];\n\n\t\t\t\t\tfor (let i = 0; i < featureCollection.features.length; i++) {\n\t\t\t\t\t\tlet feature = featureCollection.features[i];\n\n\t\t\t\t\t\tif (feature.geometry.type === 'MultiLineString') {\n\t\t\t\t\t\t\tfor (let j = 0; j < feature.geometry.coordinates.length; j++) {\n\t\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlines.push(feature.geometry.coordinates);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcoordinates: lines,\n\t\t\t\t\t\ttype: 'MultiLineString'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn featureCollection.features[0].geometry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tonNewGeoObject(): void {\n\t\tthis.code = '__NEW__';\n\t}\n\t\n\tformatDate(date: string): string {\n\t\treturn this.lService.formatDateForDisplay(date);\n\t}\n\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <cgr-header></cgr-header>\n  <loading-bar></loading-bar>\n\n\n  <div id=\"app-container\" class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div *ngIf=\"type != null && code != null\" id=\"navigator-left-sidebar\" class=\"col-md-5 lw-inner-col\" style=\"height: calc(100vh - 145px);overflow-y: auto;\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            \n            <div id=\"attributes-header\">\n              <h3 *ngIf=\"type\">{{type.label.localizedValue}}</h3>\n              <h4><localize key=\"cgr.validity.valid.on.label\"></localize>: {{formatDate(forDate)}}</h4>\n            </div>\n            \n            <feature-panel\n              [type]=\"type\"\n              [code]=\"code\"              \n              [forDate]=\"forDate\"\n              [datasetId]=\"datasetId\"\n              [readOnly]=\"readOnly\"\n              [geometryChange]=\"geometryChange\"\n              (geometryEdit)=\"onGeometryEdit($event)\"\n              (featureChange)=\"onFeatureChange($event)\"              \n              (modeChange)=\"onModeChange($event)\"\n            ></feature-panel>\n          </div>\n        </div>\n      </div>\n\n      <div [ngClass]=\"{'col-md-7':code != null, 'col-md-12':code == null}\" id=\"site-explorer-map\">\n        <div class=\"row\">\n\n          <article class=\"base-layer-panel\">\n            <layer-panel (layerChange)=\"onContextLayerChange($event)\" (baseLayerChange)=\"handleBasemapStyle($event)\" [filter]=\"[datasetId]\"></layer-panel>\n            \n            <div *ngIf=\"!editOnly\" class=\"layer-toggle\" style=\"margin-top:10px;\" (mouseenter)=\"toolsIconHover = true\" (mouseleave)=\"toolsIconHover = false\">\n             \n              <i class=\"fa fa-plus-square\" *ngIf=\"!toolsIconHover\" style=\"vertical-align: middle; font-size: 18px; color: black;\"></i>\n              <div *ngIf=\"toolsIconHover\" style=\"margin-top:10px;\">\n            \n                <span (click)=\"onNewGeoObject()\" role=\"button\">\n                  <button class=\"btn btn-primary\">\n                    <localize key=\"masterlist.newGeoObject\"></localize>              \n                  </button>\n                </span>\n              </div>\n            \n            </div>\n          </article>\n\n          <div id=\"dataset-map\" class=\"map-view-port\"></div>     \n          <simple-edit-control [visible]=\"editingControl != null\" [editSessionEnabled]=\"editSessionEnabled\" [save]=\"true\" (editEmitter)=\"onMapSave()\"  #simpleEditControl></simple-edit-control>\n          \n<!--           <span *ngIf=\"!readOnly\" (click)=\"onNewGeoObject()\" style=\"position: absolute; bottom: 70px; right: 10px\" role=\"button\"> -->\n<!--             <button class=\"btn btn-primary\"> -->\n<!--               <localize key=\"masterlist.newGeoObject\"></localize>               -->\n<!--             </button> -->\n<!--           </span> -->\n               \n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import * as d3 from 'd3';\nimport { svgPoint } from './svg-util';\n\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyType } from '@registry/model/hierarchy';\n\nimport { SvgHierarchyType } from './svg-hierarchy-type';\nimport { calculateTextWidth } from './svg-util';\nimport { HierarchyComponent, RELATED_NODE_BANNER_COLOR } from '../hierarchy.component';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler, ConfirmModalComponent, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService } from '@shared/service';\n\nexport class SvgHierarchyNode {\n\n\tprivate hierarchyComponent: HierarchyComponent;\n\n\tprivate svgHierarchyType: SvgHierarchyType;\n\n\tprivate geoObjectType: GeoObjectType;\n\n\tprivate treeNode: any;\n\n\t/*\n     * Reference to the modal current showing\n    */\n\tprivate bsModalRef: BsModalRef;\n\n\tconstructor(hierarchyComponent: HierarchyComponent, svgHierarchyType: SvgHierarchyType, geoObjectType: GeoObjectType, treeNode: any,\n\t\tpublic localizeService: LocalizationService, public modalService: BsModalService, public authService: AuthService) {\n\t\tthis.hierarchyComponent = hierarchyComponent;\n\t\tthis.svgHierarchyType = svgHierarchyType;\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.treeNode = treeNode;\n\t}\n\n\tgetCode(): string {\n\t\treturn this.geoObjectType.code;\n\t}\n\n\tsetPos(x: number, y: number, dragging: boolean) {\n\t\tlet bbox = this.getBbox();\n\n\t\t// Move the GeoObjectType with the pointer when they move their mouse\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-header-rect[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x)\n\t\t\t.attr(\"y\", y - SvgHierarchyType.gotRectH / 2 + 2);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-label-text[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + 5)\n\t\t\t.attr(\"y\", y + 1);\n\n\t\td3.select('.g-hierarchy[data-primary=true] .svg-got-relatedhiers-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t.classed(\"dragging\", dragging)\n\t\t\t.attr(\"x\", x + bbox.width - 20)\n\t\t\t.attr(\"y\", y + 17);\n\n\n\t\t// Move inherit and uninherit buttons with the node they're moving\n\n\t\tlet inheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (inheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 60);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet inheritBbox = inheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-inherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - inheritBbox.x) + \" \" + (heritY - inheritBbox.y) + \")\");\n\t\t}\n\n\t\tlet uninheritNode: any = d3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]').node();\n\t\tif (uninheritNode != null) {\n\t\t\tconst heritX = (x + bbox.width - 71);\n\t\t\tconst heritY = (y + bbox.height - 24);\n\t\t\tlet uninheritBbox = uninheritNode.getBBox();\n\t\t\td3.select('.g-hierarchy[data-primary=true] .hierarchy-uninherit-button[data-gotCode=\"' + this.getCode() + '\"]')\n\t\t\t\t.classed(\"dragging\", dragging)\n\t\t\t\t.attr(\"transform\", \"translate(\" + (heritX - uninheritBbox.x) + \" \" + (heritY - uninheritBbox.y) + \")\");\n\t\t}\n\t}\n\n\tgetPos() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) };\n\t}\n\n\tgetBbox() {\n\t\tlet select = d3.select('.g-hierarchy[data-primary=true] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\n\t\treturn { x: parseInt(select.attr(\"x\")), y: parseInt(select.attr(\"y\")) - 3, width: parseInt(select.attr(\"width\")), height: parseInt(select.attr(\"height\")) + 3 };\n\t}\n\n\tgetTreeNode() {\n\t\treturn this.treeNode;\n\t}\n\t\n\thideRelatedHierarchy(): string {\n\t  let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n    if (existingSecondary.node() != null) {\n      existingSecondary.remove();\n      this.hierarchyComponent.calculateSvgViewBox();\n      \n      let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n      return existingSecondaryCode;\n    }\n\t}\n\n\trenderRelatedHierarchiesMenu() {\n\t\tlet that = this;\n\t\tlet existingMenu = d3.select(\".g-context-menu\");\n\n\t\tif (existingMenu.node() == null) {\n\t\t\t//let parent = d3.select('g.g-hierarchy-tree[data-code=\"' + this.svgHierarchyType.hierarchyType.code + '\"]');\n\t\t\tlet parent = d3.select('#svg');\n\n\t\t\tlet contextMenuGroup = parent.append(\"g\").classed(\"g-context-menu\", true);\n\n\t\t\tlet relatedHierarchies = this.svgHierarchyType.getRelatedHierarchies(this.getCode());\n\t\t\t\n\t\t\tconst hasActionsPermissions = this.authService.isSRA() || this.authService.isOrganizationRA(this.geoObjectType.organizationCode)\n          || this.authService.isGeoObjectTypeRM(this.svgHierarchyType.hierarchyType.organizationCode, this.geoObjectType.code)\n\n\t\t\tlet bbox = this.getBbox();\n\t\t\tlet x = bbox.x + bbox.width - 5;\n\t\t\tlet y = bbox.y + bbox.height / 2 - 8;\n\t\t\tconst height = 20;\n\t\t\tconst fontSize = 8;\n\t\t\tconst widthPadding = 10;\n\t\t\tconst borderColor = \"#aaaaaa\";\n\t\t\tconst dividerColor = \"#e4e4e4\";\n\t\t\tconst fontFamily = \"sans-serif\";\n\t\t\tconst titleFontSize = 9;\n\t\t\t\n\t\t\tconst titleLabel = this.hierarchyComponent.localize(\"hierarchy.content.relatedHierarchies\");\n\t\t\tconst actionsTitle = this.hierarchyComponent.localize(\"hierarchy.content.actionsTitle\");\n\t\t\tconst removeFromHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.removeFromHierarchy\");\n\t\t\tconst noRelatedHierLabel = this.hierarchyComponent.localize(\"hierarchy.content.noRelatedHierarchies\");\n\t\t\tconst hideRelatedHierarchyLabel = this.hierarchyComponent.localize(\"hierarchy.content.hideRelatedHierarchy\");\n\t\t\tconst uninheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.uninherit\");\n\t\t\tconst inheritLabel = this.hierarchyComponent.localize(\"hierarchy.content.inherit\");\n\t\t\t\n      let isSecondaryHierarchyRendered = (d3.select('.g-hierarchy[data-primary=\"false\"]').node() != null);\n      \n      let numActions = hasActionsPermissions ? (isSecondaryHierarchyRendered ? 2 : 1) : 0;\n\n\t\t\t// Calculate the width of our title\n\t\t\tlet width = calculateTextWidth(titleLabel, titleFontSize);\n\t\t\t\n\t\t\t// Calculate with of remove text\n\t\t\tlet removeWidth = calculateTextWidth(removeFromHierarchyLabel, fontSize);\n\t\t\twidth = removeWidth > width ? removeWidth : width;\n\t\t\t\n\t\t\tif (isSecondaryHierarchyRendered)\n\t\t\t{\n  \t\t\t// Calculate width of \"hide related hierarchy\" label\n        let hideRelatedWidth = calculateTextWidth(hideRelatedHierarchyLabel, fontSize);\n        width = hideRelatedWidth > width ? hideRelatedWidth : width;\n      }\n      \n      if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n        let uninheritWidth = calculateTextWidth(uninheritLabel, fontSize);\n        width = uninheritWidth > width ? uninheritWidth : width;\n        numActions++;\n      }\n      else\n      {\n        let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n        if (existingSecondary.node() != null) {\n          let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n          let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n          \n          let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService, this.authService);\n          let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n          \n          if (this.treeNode.parent == null && relatedGotHasParents)\n          {\n            let inheritWidth = calculateTextWidth(inheritLabel, fontSize);\n            width = inheritWidth > width ? inheritWidth : width;\n            numActions++;\n          }\n        }\n      }\n      \n\t\t\t\n\t\t\t// Calculate the width of our context menu, which is based on how long the text inside it will be.\n\t\t\t// We don't know how long text is until we render it. So we'll need to loop over all the text and\n\t\t\t// render and destroy all of it.\n\t\t\tif (relatedHierarchies.length > 0)\n\t\t\t{\n  \t\t\trelatedHierarchies.forEach((relatedHierarchyCode: string) => {\n  \t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n  \n  \t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n  \t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n  \t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n  \t\t\t\t}\n  \n  \t\t\t\tlet textWidth = calculateTextWidth(relatedHierarchyLabel, fontSize);\n  \n  \t\t\t\tif (textWidth > width) {\n  \t\t\t\t\twidth = textWidth;\n  \t\t\t\t}\n  \t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t  let noHierLabelWidth = calculateTextWidth(noRelatedHierLabel, fontSize);\n\t\t\t  width = noHierLabelWidth > width ? noHierLabelWidth : width;\n\t\t\t}\n\n\t\t\twidth = width + widthPadding;\n\n\t\t\tlet heightAdditions: number = relatedHierarchies.length > 0 ? (numActions + 2) : (numActions + 3);\n\n\t\t\t// Background rectangle with border\n\t\t\tcontextMenuGroup.append(\"rect\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-background\", true)\n\t\t\t\t.attr(\"x\", x)\n\t\t\t\t.attr(\"y\", y)\n\t\t\t\t.attr(\"rx\", 5)\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height * (relatedHierarchies.length + heightAdditions))\n\t\t\t\t.attr(\"fill\", \"white\")\n\t\t\t\t.attr(\"stroke-width\", .5)\n\t\t\t\t.attr(\"stroke\", borderColor);\n\n\t\t\t// Related Hierarchies Title\n\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n\t\t\t\t.attr(\"font-size\", titleFontSize)\n\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t.attr(\"font-weight\", \"bold\")\n\t\t\t\t.text(titleLabel);\n\n\t\t\ty = y + height;\n\n\t\t\t// Dividing line at the bottom\n\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t.attr(\"x1\", x)\n\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t.attr(\"x2\", x + width)\n\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t.attr(\"stroke\", borderColor)\n\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t\n\t\t\tif (relatedHierarchies.length > 0) {\n\t\t\t\t// Loop over all related hierarchies and draw them as list items\n\t\t\t\tfor (let i = 0; i < relatedHierarchies.length; ++i) {\n\t\t\t\t\tlet relatedHierarchyCode = relatedHierarchies[i];\n\t\t\t\t\tlet relatedHierarchy = this.hierarchyComponent.findHierarchyByCode(relatedHierarchyCode);\n\n\t\t\t\t\tlet relatedHierarchyLabel = relatedHierarchy.label.localizedValue;\n\t\t\t\t\tif (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode === relatedHierarchy.code) {\n\t\t\t\t\t\trelatedHierarchyLabel = relatedHierarchyLabel + \" (\" + this.hierarchyComponent.localize(\"hierarchy.content.inherited\") + \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text that says the hierarchy's display label\n\t\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t\t.text(relatedHierarchyLabel)\n\t\t\t\t\t\t.style(\"cursor\", \"pointer\")\n\t\t\t\t\t\t.on('click', function(event, node) { that.renderSecondaryHierarchy(relatedHierarchy); });\n\n\t\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\t\tif (i < relatedHierarchies.length) {\n\t\t\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t\t\t.attr(\"data-hierCode\", relatedHierarchyCode)\n\t\t\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t\t\t.attr(\"stroke-width\", .5);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// Text that says \"No related Hierarchies\"\n\t\t\t\tcontextMenuGroup.append(\"text\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-text\", true)\n\t\t\t\t\t.attr(\"x\", x + widthPadding / 2)\n\t\t\t\t\t.attr(\"y\", y + (height / 2) + (fontSize / 2))\n\t\t\t\t\t.attr(\"font-size\", fontSize)\n\t\t\t\t\t.attr(\"font-family\", fontFamily)\n\t\t\t\t\t.text(noRelatedHierLabel)\n\n\t\t\t\ty = y + height;\n\n\t\t\t\t\t// Dividing line at the bottom\n\t\t\t\tcontextMenuGroup.append(\"line\")\n\t\t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n\t\t\t\t\t.attr(\"x1\", x + 5)\n\t\t\t\t\t.attr(\"y1\", y)\n\t\t\t\t\t.attr(\"x2\", x + width - 5)\n\t\t\t\t\t.attr(\"y2\", y)\n\t\t\t\t\t.attr(\"stroke\", dividerColor)\n\t\t\t\t\t.attr(\"stroke-width\", .5);\n\n\t\t\t}\n\n      // Actions Section\n      if (hasActionsPermissions)\n      {\n  \t\t\t// Actions Title\n  \t\t\tcontextMenuGroup.append(\"text\")\n  \t\t\t\t.classed(\"contextmenu-relatedhiers-title\", true)\n  \t\t\t\t.attr(\"x\", x + widthPadding / 2)\n  \t\t\t\t.attr(\"y\", y + (height / 2) + (titleFontSize / 2))\n  \t\t\t\t.attr(\"font-size\", titleFontSize)\n  \t\t\t\t.attr(\"font-family\", fontFamily)\n  \t\t\t\t.attr(\"font-weight\", \"bold\")\n  \t\t\t\t.text(actionsTitle);\n  \n  \t\t\ty = y + height;\n  \n  \t\t\t// Dividing line at the bottom\n  \t\t\tcontextMenuGroup.append(\"line\")\n  \t\t\t\t.classed(\"contextmenu-relatedhiers-divider\", true)\n  \t\t\t\t.attr(\"x1\", x)\n  \t\t\t\t.attr(\"y1\", y)\n  \t\t\t\t.attr(\"x2\", x + width)\n  \t\t\t\t.attr(\"y2\", y)\n  \t\t\t\t.attr(\"stroke\", borderColor)\n  \t\t\t\t.attr(\"stroke-width\", .5);\n  \n        // \"Remove from hierarchy\" button\n        contextMenuGroup.append(\"text\")\n        .classed(\"contextmenu-relatedhiers-text\", true)\n        .attr(\"data-remove\", \"REPLACE---gotCode\")\n        .attr(\"x\", x + widthPadding / 2)\n        .attr(\"y\", y + (height / 2) + (fontSize / 2))\n        .attr(\"font-size\", fontSize) \n        .attr(\"font-family\", fontFamily)\n        .text(removeFromHierarchyLabel)\n        .style(\"cursor\", \"pointer\")\n        .on('click', function (event, node) { that.removeGotFromHierarchy(); });\n      \n        y = y + height;\n  \t\t  \n  \t\t  // Inherit / Uninherit buttons\n  \t\t  if (this.treeNode.parent != null && this.treeNode.parent.data.inheritedHierarchyCode != null && this.treeNode.parent.data.inheritedHierarchyCode != \"\") {\n          contextMenuGroup.append(\"line\")\n            .classed(\"contextmenu-relatedhiers-divider\", true)\n            .attr(\"x1\", x)\n            .attr(\"y1\", y)\n            .attr(\"x2\", x + width)\n            .attr(\"y2\", y)\n            .attr(\"stroke\", borderColor)\n            .attr(\"stroke-width\", .5);\n          \n          contextMenuGroup.append(\"text\")\n            .classed(\"contextmenu-relatedhiers-text\", true)\n            .attr(\"x\", x + widthPadding / 2)\n            .attr(\"y\", y + (height / 2) + (fontSize / 2))\n            .attr(\"font-size\", fontSize)\n            .attr(\"font-family\", fontFamily)\n            .text(uninheritLabel)\n            .style(\"cursor\", \"pointer\")\n            .on('click', function (event, node) { that.onClickUninheritHierarchy(); });\n  \n          y = y + height;\n        }\n        else\n        {\n          let existingSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]');\n          if (existingSecondary.node() != null) {\n            let existingSecondaryCode = existingSecondary.attr(\"data-code\");\n            let secondaryHierarchy = this.hierarchyComponent.findHierarchyByCode(existingSecondaryCode);\n            \n            let svgSecondaryHierarchy = new SvgHierarchyType(this.hierarchyComponent, d3.select(\"#svg\"), secondaryHierarchy, true, this.localizeService, this.modalService, this.authService);\n            let relatedGotHasParents = svgSecondaryHierarchy.getNodeByCode(this.getCode()).getTreeNode().parent != null;\n            \n            if (this.treeNode.parent == null && relatedGotHasParents)\n            {\n              contextMenuGroup.append(\"line\")\n                .classed(\"contextmenu-relatedhiers-divider\", true)\n                .attr(\"x1\", x)\n                .attr(\"y1\", y)\n                .attr(\"x2\", x + width)\n                .attr(\"y2\", y)\n                .attr(\"stroke\", borderColor)\n                .attr(\"stroke-width\", .5);\n            \n              contextMenuGroup.append(\"text\")\n                .classed(\"contextmenu-relatedhiers-text\", true)\n                .attr(\"x\", x + widthPadding / 2)\n                .attr(\"y\", y + (height / 2) + (fontSize / 2))\n                .attr(\"font-size\", fontSize)\n                .attr(\"font-family\", fontFamily)\n                .text(inheritLabel)\n                .style(\"cursor\", \"pointer\")\n                .on('click', function (event, node) { that.onClickInheritHierarchy(secondaryHierarchy); });\n      \n              y = y + height;\n            }\n          }\n        }\n      }\n\t\t\t\n      if (isSecondaryHierarchyRendered) {\n  \t\t  contextMenuGroup.append(\"line\")\n          .classed(\"contextmenu-relatedhiers-divider\", true)\n          .attr(\"x1\", x)\n          .attr(\"y1\", y)\n          .attr(\"x2\", x + width)\n          .attr(\"y2\", y)\n          .attr(\"stroke\", borderColor)\n          .attr(\"stroke-width\", .5);\n  \t\t  \n  \t\t  contextMenuGroup.append(\"text\")\n          .classed(\"contextmenu-relatedhiers-text\", true)\n          .attr(\"x\", x + widthPadding / 2)\n          .attr(\"y\", y + (height / 2) + (fontSize / 2))\n          .attr(\"font-size\", fontSize) \n          .attr(\"font-family\", fontFamily)\n          .text(hideRelatedHierarchyLabel)\n          .style(\"cursor\", \"pointer\")\n          .on('click', function (event, node) {\n            that.hideRelatedHierarchy();\n            \n            let existingMenu = d3.select(\".g-context-menu\");\n            if (existingMenu.node() != null) {\n              existingMenu.remove();\n            }\n            \n            d3.select(\".g-hierarchy-got-connector\").remove();\n          });\n      }\n      \n\t\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t\t}\n\t\telse {\n\t\t\texistingMenu.remove();\n\t\t}\n\t}\n\n\tremoveGotFromHierarchy(){\n\t\t\n\t\tlet svgGot = this.hierarchyComponent.primarySvgHierarchy.getNodeByCode(this.geoObjectType.code);\n\n\t\tlet startPoint: any = svgGot.getPos();\n\t\t// let svgMousePoint: any = svgPoint(event.sourceEvent.pageX, event.sourceEvent.pageY);\n\n\n\t\t// let deltaX: number = startPoint.x - svgMousePoint.x;\n\t\t// let deltaY: number = startPoint.y - svgMousePoint.y;\n\n\t\tlet obj = this.hierarchyComponent.findGeoObjectTypeByCode(svgGot.getCode());\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tlet message = this.localizeService.decode(\"confirm.modal.verify.remove.hierarchy\");\n\t\tmessage = message.replace(\"{label}\", obj.label.localizedValue);\n\n\t\tthis.bsModalRef.content.message = message;\n\t\tthis.bsModalRef.content.data = obj.code;\n\n\t\t(<ConfirmModalComponent>this.bsModalRef.content).onConfirm.subscribe(data => {\n\t\t\tlet treeNode = svgGot.getTreeNode();\n\t\t\tlet parent = null;\n\t\t\tif (treeNode.parent == null) {\n\t\t\t\tparent = \"ROOT\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (treeNode.parent.data.inheritedHierarchyCode != null) {\n\t\t\t\t\tparent = \"ROOT\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparent = treeNode.parent.data.geoObjectType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hierarchyComponent.removeFromHierarchy(parent, svgGot.getCode(), (err: any) => { console.log(err) });\n\t\t});\n\n\t\t// (<ConfirmModalComponent>hierarchyComponent.bsModalRef.content).onCancel.subscribe(data => {\n\t\t// \tsvgGot.setPos(startPoint.x, startPoint.y, false);\n\t\t// });\n\t}\n\n\trenderSecondaryHierarchy(relatedHierarchy: HierarchyType) {\n\t\td3.select(\".g-context-menu\").remove();\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\n\t\tlet that = this;\n\t\tlet myBbox = this.getBbox();\n\t\tlet svg = d3.select(\"#svg\");\n\n\t\t// Remove any secondary hierarchy that may already be rendered\n\t\tif (this.hideRelatedHierarchy() === relatedHierarchy.code)\n\t\t{\n\t\t  return;\n\t\t}\n\t\t\n\t\t// Get the bounding box for our primary hierarchy\n\t\tlet primaryHierBbox = (d3.select(\".g-hierarchy[data-primary=true]\").node() as any).getBBox();\n\n\t\t// Render the secondary hierarchy\n\t\tlet svgHt: SvgHierarchyType = new SvgHierarchyType(this.hierarchyComponent, svg, relatedHierarchy, false, this.localizeService, this.modalService, this.authService);\n\t\tsvgHt.render();\n\t\tlet gSecondary = d3.select('.g-hierarchy[data-primary=\"false\"]')\n\n\t\t// Translate the secondary hierarchy to the right of the primary hierarchy\n\t\tlet gHierarchy: any = d3.select('.g-hierarchy[data-primary=\"false\"]').node();\n\t\tlet bbox = gHierarchy.getBBox();\n\t\tlet paddingLeft: number = primaryHierBbox.width + 40 + (primaryHierBbox.x - bbox.x);\n\t\tgSecondary.attr(\"transform\", \"translate(\" + paddingLeft + \" 0)\");\n\n\t\t// Draw dotted line between the shared node in the hierarchies\n\t\tlet secondaryGot = d3.select('.g-hierarchy[data-primary=false] .svg-got-body-rect[data-gotCode=\"' + this.getCode() + '\"]');\n\t\tlet secondaryGotBbox = { x: parseInt(secondaryGot.attr(\"x\")), y: parseInt(secondaryGot.attr(\"y\")) - 3, width: parseInt(secondaryGot.attr(\"width\")), height: parseInt(secondaryGot.attr(\"height\")) + 3 };\n\t\tsecondaryGotBbox.x = secondaryGotBbox.x + paddingLeft; // Apply transformation\n\t\td3.select(\".g-hierarchy-got-connector\").remove();\n\t\tlet gConnector = d3.select(\"#svg\").append(\"g\").classed(\"g-hierarchy-got-connector\", true);\n\t\tgConnector.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t.attr(\"stroke-dasharray\", \"5,5\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\n\t\t\t\t  \"d\",\n\t\t\t\t  \"M\" + (myBbox.x + myBbox.width) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"H\" + (((secondaryGotBbox.x) - (myBbox.x + myBbox.width)) / 2 + myBbox.x + myBbox.width)\n\t\t\t\t+ \"V\" + (secondaryGotBbox.y + secondaryGotBbox.height / 2)\n\t\t\t\t+ \"H\" + secondaryGotBbox.x\n\t\t\t);\n\n\t\t// Draw arrow for dotted line\n\t\tconst arrowRectD = { height: 10, width: 7 };\n\t\tlet gArrow = gConnector.append(\"g\").classed(\"g-hierarchy-got-connector-arrow\", true);\n\t\tgArrow.append(\"rect\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-rect\", true)\n\t\t\t.attr(\"x\", myBbox.x + myBbox.width - arrowRectD.width / 2)\n\t\t\t.attr(\"y\", myBbox.y + myBbox.height / 2 - arrowRectD.height / 2)\n\t\t\t.attr(\"width\", arrowRectD.width)\n\t\t\t.attr(\"height\", arrowRectD.height)\n\t\t\t.attr(\"fill\", RELATED_NODE_BANNER_COLOR);\n\t\tgArrow.append(\"path\")\n\t\t\t.classed(\"hierarchy-got-connector-arrow-path\", true)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", \n\t\t\t\t\"M\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + ((arrowRectD.height * 2) / 3))\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width + arrowRectD.width / 2 - ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2)\n\t\t\t\t+ \"L\" + (myBbox.x + myBbox.width - arrowRectD.width / 2 + ((arrowRectD.width * 2) / 3)) + \",\" + (myBbox.y + myBbox.height / 2 - arrowRectD.height / 2 + arrowRectD.height / 3)\n\t\t\t);\n\n\t\t// Recalculate the viewbox (should probably be the last thing that happens)\n\t\tthis.hierarchyComponent.calculateSvgViewBox();\n\t}\n\n\tonClickInheritHierarchy(hierarchy: HierarchyType) {\n\t\tthis.hierarchyComponent.handleInheritHierarchy(this.svgHierarchyType.getCode(), hierarchy.code, this.getCode());\n\t}\n\n\tonClickUninheritHierarchy() {\n\t\tthis.hierarchyComponent.handleUninheritHierarchy(this.svgHierarchyType.getCode(), this.getCode());\n\t}\n\n}\n\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { TreeNode } from '@circlon/angular-tree-component';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler } from '@shared/component';\nimport { HierarchyType, HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\nimport { HierarchyService } from '@registry/service';\n\n\n@Component( {\n    selector: 'add-child-to-hierarchy-modal',\n    templateUrl: './add-child-to-hierarchy-modal.component.html',\n    styleUrls: []\n} )\nexport class AddChildToHierarchyModalComponent implements OnInit {\n\n\t /*\n     * parent id of the node being created\n     */\n    public parent: TreeNode;\n\n    public hierarchyType: HierarchyType;\n\n    public nodes: HierarchyNode[];\n\n    public allGeoObjectTypes: GeoObjectType[];\n\n    public selectedGeoObjectType: GeoObjectType;\n\n    private selectUndefinedOptionValue: any;\n\n\tprivate toRoot: boolean = false;\n\n    message: string = null;\n\n    /*\n     * Observable subject for TreeNode changes.  Called when create is successful \n     */\n    public onNodeChange: Subject<HierarchyType>;\n\n    constructor( private hierarchyService: HierarchyService, public bsModalRef: BsModalRef ) {\n    }\n\n    ngOnInit(): void {\n        this.onNodeChange = new Subject();\n    }\n    \n    onSelect(value: string): void {\n    \tthis.allGeoObjectTypes.forEach(gObj => {\n    \t\tif(gObj.code === value){\n    \t\t\tthis.selectedGeoObjectType = gObj;\n    \t\t}\n    \t})\n    }\n    \n    handleOnSubmit(): void {\n        this.message = null;\n        \n        let parent = (this.toRoot) ? \"ROOT\" : this.parent.data.geoObjectType;\n        this.hierarchyService.addChildToHierarchy( this.hierarchyType.code, parent, this.selectedGeoObjectType.code ).then( data => {\n            this.onNodeChange.next( data );\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n        \n    }\n\n    error( err: HttpErrorResponse ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<form class=\"modal-form\">\n\n  <div *ngIf=\"parent != null\" class=\"modal-body\">\n\n    <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"hierarchy.management.button.addRelationship\"></localize>\n      </h1>\n    </div>\n    <fieldset>\n\n      <div class=\"form-group\">\n\n        <select *ngIf=\"allGeoObjectTypes\" (change)=\"onSelect($event.target.value)\">\n          <option disabled hidden [value]=\"selectUndefinedOptionValue\">-- <localize\n              key=\"hierarchy.management.create.child.option.label.selectType\"></localize> --</option>\n          <!-- to filter out all geoobjecttypes that are already in hierarchies use this pip in the iterator > | geoobjecttype:nodes -->\n          <option></option>\n          <option *ngFor=\"let geoObjType of allGeoObjectTypes\" value={{geoObjType.code}}>\n            {{geoObjType.label.localizedValue}}\n          </option>\n        </select>\n\n      </div>\n\n      <div class=\"button-holder\">\n        <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.cancel\"></localize>\n          </span>\n        </button>\n        <button type=\"submit\" (click)=\"handleOnSubmit()\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n          <span>\n            <localize key=\"modal.button.ok\"></localize>\n          </span>\n        </button>\n      </div>\n    </fieldset>\n  </div>\n</form>\n","import { Input, Component, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { GeoObjectOverTime, GeoObjectType } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-create-geo-object',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./crtable-detail-create-geo-object.css'],\n    encapsulation: ViewEncapsulation.None\n} )\n//export class CreateUpdateGeoObjectDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\nexport class CreateUpdateGeoObjectDetailComponent implements ActionDetailComponent {\n\t\n\tisMaintainer: boolean = false;\n\n    @Input() action: any;\n\n    preGeoObject: GeoObjectOverTime = null;\n\n    postGeoObject: GeoObjectOverTime = null;\n\n    geoObjectType: GeoObjectType = null;\n\n    @Input() readOnly: boolean;\n    \n    isEditing: boolean = false;\n\n    @ViewChild( \"attributeEditor\" ) attributeEditor;\n\n    @ViewChild( \"geometryEditor\" ) geometryEditor;\n\n    bsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    dateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n    forDate: Date = null;\n\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, \n\t\t\t\tprivate registryService: RegistryService, private authService: AuthService ) {\n\t\t\t\t\t\n\t\tthis.isMaintainer = authService.isAdmin() || authService.isMaintainer();\n\n        this.forDate = new Date();\n\n        const day = this.forDate.getUTCDate();\n        this.dateStr = this.forDate.getUTCFullYear() + \"-\" + ( this.forDate.getUTCMonth() + 1 ) + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n    ngOnInit(): void {\n\n        this.postGeoObject = this.action.geoObjectJson;\n        this.geoObjectType = this.action.geoObjectType;\n\n        if ( this.isNew() ) {\n            this.preGeoObject = this.postGeoObject;\n        }\n\n        this.onSelect( this.action );\n    }\n\n    isNew(): boolean {\n        return ( this.action.actionType === \"net.geoprism.registry.action.geoobject.CreateGeoObjectAction\" );\n    }\n\n    handleDateChange(): void {\n        this.forDate = new Date( Date.parse( this.dateStr ) );\n    }\n\n    applyAction() {\n        //var action = JSON.parse( JSON.stringify( this.action ) );\n        let action = this.action;\n        \n        action.geoObjectJson = this.attributeEditor.getGeoObject();\n\n        if ( this.geometryEditor != null ) {\n            action.geoObjectJson.geometry = this.geometryEditor.saveDraw().geometry;\n        }\n\n        this.changeRequestService.applyAction( action ).then( response => {\n            this.endEdit();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    onSelect( action: AbstractAction ) {\n\n        // There are multiple ways we could show a diff of an object.\n        //\n        // This line will show a diff only when a person is typing so as to show the\n        // change they are creating.\n        //\n        // The method below (getGeoObjectByCode) will compare what is in the database\n        // at that time with the change request. This will only track state compared to\n        // what is currently in the database which isn't necessarily the original change.\n        //\n        // A third option which is NOT implemented yet would store the state of a geoobject\n        // (original and target) with the change request so as to manage state at time of\n        // the change request submission.\n        //\n        // Display diff when a user is changing a value\n        // this.preGeoObject = JSON.parse(JSON.stringify(this.postGeoObject));\n\n        // Display diff of what's in the database\n        if (\n            this.action.actionType === \"net.geoprism.registry.action.geoobject.UpdateGeoObjectAction\"\n            //    && typeof this.postGeoObject.properties.createDate !== 'undefined'\n        ) {\n            this.registryService.getGeoObjectOverTime( this.postGeoObject.attributes.code, this.geoObjectType.code ).then( geoObject => {\n                this.preGeoObject = geoObject;\n\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    //@HostListener( 'window:beforeunload' )\n    //canDeactivate(): Observable<boolean> | boolean {\n    //    if ( this.isEditing ) {\n    //        //event.preventDefault();\n    //        //event.returnValue = 'Are you sure?';\n    //        //return 'Are you sure?';\n//\n     //       return false;\n     //   }\n//\n    //    return true;\n    //}\n\n    //afterDeactivate( isDeactivating: boolean ) {\n    //    if ( isDeactivating && this.isEditing ) {\n    //        this.unlockActionSync();\n    //    }\n    //}\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.isEditing = true;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( true );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.isEditing = false;\n            if ( this.geometryEditor != null ) {\n                this.geometryEditor.enableEditing( false );\n            }\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n\n    <div class=\"heading text-center\">\n        <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n\t  </div>\n    \n    <div class=\"detail-content\">\n      <h4>\n        <localize key=\"io.geoObjectType\"></localize>: {{action.geoObjectType.code}}\n      </h4>\n    \n      <div style=\"margin: 20px 0;\">\n        <span style=\"margin-right:10px;\"><localize key=\"changeOverTime.forDate\"></localize></span>\n        <input type=\"date\" [(ngModel)]=\"dateStr\" (change)=\"handleDateChange()\" name=\"dateStr\" />\n      </div>    \n    \n\n        <geoobject-shared-attribute-editor \n          #attributeEditor\n          *ngIf=\"preGeoObject\"\n          [readOnly]=\"!isEditing\"  \n          [geoObjectType]=\"geoObjectType\"\n          [postGeoObject]=\"postGeoObject\"\n          [preGeoObject]=\"preGeoObject\"\n          [forDate]=\"forDate\"\n          [isGeometryInlined]=\"true\">\n        </geoobject-shared-attribute-editor>\n\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" [disabled]=\"!isEditing\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Input, Component, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\nimport { AddChildAction } from '@registry/model/crtable';\nimport { ChangeRequestService } from '@registry/service';\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\nimport { ActionDetailComponent } from '../action-detail-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component( {\n\n    selector: 'crtable-detail-add-remove-child',\n    templateUrl: './detail.component.html',\n    styleUrls: []\n} )\nexport class AddRemoveChildDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\n\n    @Input() action: AddChildAction;\n\n    original: AddChildAction;\n\n    @Input() readOnly: boolean;\n    \n    isEditing: boolean = false;\n\n    private bsModalRef: BsModalRef;\n\n    constructor( private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private authService: AuthService ) {\n\n    }\n\n    ngOnInit(): void {\n        this.original = Object.assign( {}, this.action );\n    }\n\n    applyAction() {\n        this.changeRequestService.applyAction( this.action ).then( response => {\n            this.original = Object.assign( {}, this.action );\n\n            this.unlockAction();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n    @HostListener( 'window:beforeunload' )\n    canDeactivate(): Observable<boolean> | boolean {\n        if ( this.isEditing ) {\n            //event.preventDefault();\n            //event.returnValue = 'Are you sure?';\n            //return 'Are you sure?';\n\n            return false;\n        }\n\n        return true;\n    }\n\n    afterDeactivate( isDeactivating: boolean ) {\n        if ( isDeactivating && this.isEditing ) {\n            this.unlockActionSync();\n        }\n    }\n\n    startEdit(): void {\n        this.lockAction();\n    }\n\n    public endEdit(): void {\n        this.unlockAction();\n    }\n\n    lockAction() {\n        this.changeRequestService.lockAction( this.action.oid ).then( response => {\n            this.isEditing = true;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    unlockAction() {\n        this.changeRequestService.unlockAction( this.action.oid ).then( response => {\n            this.isEditing = false;\n\n            this.action = this.original;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    // https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n    unlockActionSync() {\n        $.ajax( {\n            url: acp + '/changerequest/unlockAction',\n            method: \"POST\",\n            data: { actionId: this.action.oid },\n            success: function( a ) {\n\n            },\n            async: false\n        } );\n    }\n\n    onSelect( action: AddChildAction ) {\n        this.action = action;\n    }\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childId\" [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.childTypeCode\" [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.parentid.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentId\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.childtype.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.parentTypeCode\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\"><localize key=\"action.detail.hierarchycode.input\"></localize> : </label>\n        <input class=\"detail-value\" type=\"text\" [(ngModel)]=\"action.hierarchyTypeCode\"  [disabled]=\"isEditing\">\n\n        <label class=\"detail-label\">\n            <localize key=\"change.request.status\"></localize> :\n        </label>\n        <select style=\"float:none;\" [ngClass]=\"{'status-rejected': action.approvalStatus === 'REJECTED', 'status-accepted': action.approvalStatus === 'ACCEPTED', 'status-pending': action.approvalStatus === 'PENDING'}\" [(ngModel)]=action.approvalStatus   [disabled]=\"isEditing\">\n            <option value=\"REJECTED\">\n                <localize key=\"change.request.status.rejected\"></localize>\n            </option>\n            <option value=\"ACCEPTED\">\n                <localize key=\"change.request.status.accepted\"></localize>\n            </option>\n            <option value=\"PENDING\">\n                <localize key=\"change.request.status.pending\"></localize>\n            </option>\n        </select>\n\n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\"  disabled></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n        \n    </div>\n</div>","import { GeoObjectOverTime, HierarchyOverTime } from './registry';\n\nexport class ChangeRequest {\n\toid: string;\n\tcreatedBy: string;\n\tcreateDate: Date;\n\tapprovalStatus: string;\n\tstatusLabel?: string;\t\n\ttotal: number;\n\tpending: number;\n\tdocuments: Document[];\n\tphoneNumber?: string;\n\temail?: string;\n\tpermissions?: string[];\n}\n\nexport class Document {\n\tfileName: string;\n\toid: string;\n}\n\nexport class AbstractAction {\n\tapprovalStatus: string;\n\tcreateActionDate: Date;\n\tlabel: string;\n\toid: string;\n\tactionType: string;\n\tactionLabel: string;\n\tdecisionMaker?: string;\n\tdocuments: Document[];\n}\n\nexport class UpdateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class CreateGeoObjectAction extends AbstractAction {\n\tgeoObjectJson: GeoObjectOverTime;\n}\n\nexport class AddChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyTypeCode: string;\n\tcontributorNotes: string;\n\tmaintainerNotes: string;\n\tcreatedBy: string;\n}\n\nexport class RemoveChildAction extends AbstractAction {\n\tchildId: string;\n\tchildTypeCode: string;\n\tparentId: string;\n\tparentTypeCode: string;\n\thierarchyCode: string;\n}\n\nexport class GovernanceStatus {\n\tkey: string;\n\tlabel: string;\n}\n\nexport class PageEvent {\n\ttype: string;\n\tdata: any;\n}\n\nexport class SetParentAction extends AbstractAction {\n\tchildCode: string;\n\tchildTypeCode: string;\n\tjson: HierarchyOverTime[];\n}\n\n","import { Input, Component, ViewEncapsulation, HostListener } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { HierarchyOverTime } from '@registry/model/registry';\nimport { AbstractAction } from '@registry/model/crtable';\n\nimport { RegistryService, ChangeRequestService } from '@registry/service';\n\nimport { ComponentCanDeactivate, AuthService } from \"@shared/service\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ActionDetailComponent } from '../action-detail-modal.component';\nimport { ManageParentVersionsModalComponent } from '@registry/component/cascading-geo-selector/manage-parent-versions-modal.component';\n\ndeclare var acp: any;\ndeclare var $: any;\n\n@Component({\n\n\tselector: 'set-parent-detail',\n\ttemplateUrl: './set-parent-detail.component.html',\n\tstyleUrls: [],\n\tencapsulation: ViewEncapsulation.None\n})\n// export class SetParentDetailComponent implements ComponentCanDeactivate, ActionDetailComponent {\nexport class SetParentDetailComponent implements ActionDetailComponent {\n\n\t@Input() action: any;\n\n\thierarchies: HierarchyOverTime[] = [];\n\t\n\t@Input() readOnly: boolean;\n\t\n\tisEditing: boolean = false;\n\n\tbsModalRef: BsModalRef;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tdateStr: string = null;\n\n    /*\n     * Date in which the modal is shown for\n     */\n\tforDate: Date = null;\n\n\tconstructor(private router: Router, private changeRequestService: ChangeRequestService, private modalService: BsModalService, private authService: AuthService) {\n\t\tthis.forDate = new Date();\n\n\t\tconst day = this.forDate.getUTCDate();\n\t\tconst month = this.forDate.getUTCMonth();\n\t\tthis.dateStr = this.forDate.getUTCFullYear() + \"-\" + (month < 10 ? \"0\" : \"\") + (month + 1) + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n\t}\n\n\tngOnInit(): void {\n\n\t\tthis.hierarchies = this.action.json;\n\n\t\tthis.onSelect(this.action);\n\t}\n\n\tapplyAction() {\n\t\tvar action = JSON.parse(JSON.stringify(this.action));\n\n\t\tthis.changeRequestService.applyAction(action).then(response => {\n\t\t\tthis.endEdit();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\thandleDateChange(): void {\n\t\tthis.forDate = new Date(Date.parse(this.dateStr));\n\t}\n\n\tonSelect(action: AbstractAction) {\n\n\t}\n\n\tonManageVersions(hierarchy: HierarchyOverTime): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ManageParentVersionsModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.init(hierarchy);\n\t\tthis.bsModalRef.content.onVersionChange.subscribe(hierarchy => {\n\t\t\tconst index = this.hierarchies.findIndex(h => h.code === hierarchy.code);\n\t\t\t\n\t\t\tif(index !== -1) {\n\t\t\t\tthis.hierarchies[index] = hierarchy;\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t// Big thanks to https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n\t//@HostListener('window:beforeunload')\n\t//canDeactivate(): Observable<boolean> | boolean {\n\t//\tif (this.isEditing) {\n\t//\t\t//event.preventDefault();\n\t//\t\t//event.returnValue = 'Are you sure?';\n\t//\t\t//return 'Are you sure?';\n\n\t//\t\treturn false;\n\t//\t}\n\n\t//\treturn true;\n\t//}\n\n\t//afterDeactivate(isDeactivating: boolean) {\n\t//\tif (isDeactivating && this.isEditing) {\n\t//\t\tthis.unlockActionSync();\n\t//\t}\n\t//}\n\n\tstartEdit(): void {\n\t\tthis.lockAction();\n\t}\n\n\tpublic endEdit(): void {\n\t\tthis.unlockAction();\n\t}\n\n\tlockAction() {\n\t\tthis.changeRequestService.lockAction(this.action.oid).then(response => {\n\t\t\tthis.isEditing = true;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tunlockAction() {\n\t\tthis.changeRequestService.unlockAction(this.action.oid).then(response => {\n\t\t\tthis.isEditing = false;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/questions/4945932/window-onbeforeunload-ajax-request-in-chrome\n\tunlockActionSync() {\n\t\t$.ajax({\n\t\t\turl: acp + '/changerequest/unlockAction',\n\t\t\tmethod: \"POST\",\n\t\t\tdata: { actionId: this.action.oid },\n\t\t\tsuccess: function(a) {\n\n\t\t\t},\n\t\t\tasync: false\n\t\t});\n\t}\n\n\tgetUsername(): string {\n\t\treturn this.authService.getUsername();\n\t}\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div class=\"crtable-detail-container\">\n    <div class=\"heading text-center\">\n      <h1 class=\"action-detail-header\">{{action.actionLabel}}</h1>\n    </div>\n    \n    <div class=\"detail-content\">\n        <tree-geo-selector *ngFor=\"let hierarchy of hierarchies\" [forDate]=\"null\" [hierarchy]=\"hierarchy\" [readOnly]=\"!isEditing\" (onManageVersion)=\"onManageVersions($event)\"> </tree-geo-selector>\n            \n        <div>\n            <label class=\"detail-label\">\n                <localize key=\"change.request.action.detail.contributorNotes\"></localize> :\n            </label>\n            <textarea style=\"width: 100%;border-radius: 8px;height: 70px;\" class=\"detail-value\" [(ngModel)]=\"action.contributorNotes\" [disabled]=\"readOnly || !isEditing\"></textarea>\n        </div>\n\n        <div class=\"button-holder text-right\" style=\"margin:40px 0 20px 0;\">\n          <button *ngIf=\"!readOnly && !isEditing\" (click)=\"startEdit()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.edit\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"endEdit()\" class=\"btn btn-default detail-reject\">\n            <localize key=\"modal.button.cancel\"></localize>\n          </button>\n          <button *ngIf=\"!readOnly && isEditing\" (click)=\"applyAction()\" class=\"btn btn-primary detail-accept\">\n            <localize key=\"modal.button.submit\"></localize>\n          </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { IOService } from '@registry/service';\nimport { AuthService } from '@shared/service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'data-export',\n    templateUrl: './data-export.component.html',\n    styleUrls: []\n} )\nexport class DataExportComponent implements OnInit {\n\n    /*\n     * List of geo object types from the system\n     */\n    types: { label: string, code: string }[]\n\n    /*\n     * Currently selected code\n     */\n    code: string = null;\n\n    /*\n     * List of the hierarchies this type is part of\n     */\n    hierarchies: { label: string, code: string }[] = [];\n\n    /*\n     * Currently selected hierarchy\n     */\n    hierarchy: string = null;\n\n    /*\n     * Currently selected format\n     */\n    format: string = null;\n\n\n    /*\n     * Reference to the modal current showing\n     */\n    bsModalRef: BsModalRef;\n\n\n    constructor( private service: IOService, private modalService: BsModalService, private authService: AuthService ) { }\n\n    ngOnInit(): void {\n        this.service.listGeoObjectTypes( true ).then( types => {\n        \n            //this.types = types;\n            \n            var myOrgTypes = [];\n            for (var i = 0; i < types.length; ++i)\n            {\n              if (this.authService.isOrganizationRA(types[i].orgCode))\n              {\n                myOrgTypes.push(types[i]);\n              }\n            }\n            this.types = myOrgTypes;\n\n        } ).catch(( err: HttpErrorResponse) => {\n            this.error( err );\n        } );\n    }\n\n    onChange( code: string ): void {\n\n        if ( code != null && code.length > 0 ) {\n            this.service.getHierarchiesForType( code, false ).then( hierarchies => {\n                this.hierarchies = hierarchies;\n                this.hierarchy = null;\n            } ).catch(( err: HttpErrorResponse) => {\n                this.error( err );\n            } );\n        }\n        else {\n            this.hierarchies = [];\n            this.hierarchy = null;\n        }\n\n    }\n\n    onExport(): void {\n\n        if ( this.format == 'SHAPEFILE' ) {\n            window.location.href = acp + '/shapefile/export-shapefile?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n        else if ( this.format == 'EXCEL' ) {\n            window.location.href = acp + '/excel/export-spreadsheet?type=' + this.code + '&hierarchyType=' + this.hierarchy;\n        }\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n}\n","<!-- <div class=\"new-admin-design-main\"> -->\n    <!-- <cgr-header></cgr-header> -->\n    <loading-bar></loading-bar>\n\n    <!-- <div id=\"app-container\" class=\"container\">\n        <div class=\"heading text-center\">\n            <h2>\n                <localize key=\"io.export.title\"></localize>\n            </h2>\n            <p class=\"lead\">\n                <localize key=\"io.export.description\"></localize>\n            </p>\n        </div> -->\n\n        <!-- <div class=\"row\">\n            <div class=\"col-md-2\"></div>\n            <div class=\"col-md-8\" *ngIf=\"types\"> -->\n                <form #form=\"ngForm\" *ngIf=\"types\">\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"code\">\n                            <localize key=\"io.geoObjectType\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"code\" name=\"code\" class=\"select-area\" [(ngModel)]=\"code\" (change)=\"onChange($event.target.value)\"\n                                required>\n                                <option></option>\n                                <option *ngFor=\"let type of types\" [value]=\"type.code\">{{type.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\" *ngIf=\"hierarchies.length > 0\">\n                        <label class=\"col-sm-3 text-right\">\n                            <localize key=\"io.modal.hierarchy\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select name=\"hierarchy\" class=\"select-area\" [(ngModel)]=\"hierarchy\" required>\n                                <option></option>\n                                <option *ngFor=\"let hierarchy of hierarchies\" [value]=\"hierarchy.code\">{{hierarchy.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-3 text-right\" for=\"format\">\n                            <localize key=\"io.format\"></localize>\n                        </label>\n                        <div class=\"col-md-9\">\n                            <select id=\"format\" name=\"format\" class=\"select-area\" [(ngModel)]=\"format\" required>\n                                <option></option>\n                                <option value=\"EXCEL\">\n                                    <localize key=\"io.spreadsheet\"></localize>\n                                </option>\n                                <option value=\"SHAPEFILE\">\n                                    <localize key=\"io.shapefile\"></localize>\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-12 text-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid\" (click)=\"onExport()\">\n                                <localize key=\"io.export\"></localize>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            <!-- </div>\n            <div class=\"col-md-2\"></div> -->\n        <!-- </div>\n    </div>\n</div> -->\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HierarchyNode } from '@registry/model/hierarchy';\nimport { GeoObjectType } from '@registry/model/registry';\n\n@Pipe({\n  name: 'geoobjecttype',\n  pure: false\n})\nexport class GeoObjectTypePipe implements PipeTransform {\n  transform(items: GeoObjectType[], filter: HierarchyNode[]): any {\n\t  if (!items || !filter) {\n          return items;\n      }\n\t  \n\t  let unassignedGeoObjTypes:string[] = [];\n      this.buildUnassignedGeoObjTypes(filter, unassignedGeoObjTypes)\n      \n      // filter items array, items which match and return true will be\n      // kept, false will be filtered out\n      return items.filter(item => unassignedGeoObjTypes.indexOf(item.code) === -1);\n  }\n  \n  buildUnassignedGeoObjTypes(filter: HierarchyNode[], unassignedGeoObjTypes: string[]): void{\n\t  filter.forEach(f => {\n\t\t  this.processHierarchyNodes(f, unassignedGeoObjTypes);\n\t  })\n  }\n  \n  processHierarchyNodes(node: HierarchyNode, unassignedGeoObjTypes: string[]){\n\t  unassignedGeoObjTypes.push(node.geoObjectType)\n\t  \n\t  node.children.forEach(child => {\n\t\t  this.processHierarchyNodes(child, unassignedGeoObjTypes);\n\t  })\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toEpochDateTime',\n    pure: true\n})\nexport class ToEpochDateTimePipe implements PipeTransform {\n    transform(date: string): any {\n        if (!date ) {\n            return date;\n        }\n       \n        return new Date(date).getTime();\n    }\n}","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HierarchyComponent } from './component/hierarchy/hierarchy.component';\nimport { SubmitChangeRequestComponent } from './component/submit-change-request/submit-change-request.component';\nimport { MasterListManagerComponent } from './component/master-list/master-list-manager.component';\nimport { MasterListComponent } from './component/master-list/master-list.component';\nimport { MasterListViewComponent } from './component/master-list/master-list-view.component';\nimport { DataPageComponent } from './component/data-page/data-page.component';\nimport { ChangeRequestPageComponent } from './component/change-request-page/change-request-page.component';\nimport { ScheduledJobsComponent } from './component/scheduled-jobs/scheduled-jobs.component';\nimport { JobComponent } from './component/scheduled-jobs/job.component';\nimport { TaskViewerComponent } from './component/task-viewer/task-viewer.component';\nimport { SynchronizationConfigManagerComponent } from './component/synchronization-config/synchronization-config-manager.component';\nimport { SynchronizationConfigComponent } from './component/synchronization-config/synchronization-config.component';\nimport { SyncDetailsComponent } from './component/synchronization-config/details.component';\nimport { LocationManagerComponent } from './component/location-manager/location-manager.component';\nimport { DatasetLocationManagerComponent } from './component/location-manager/dataset-location-manager.component';\n\nimport { MaintainerGuard, ContributerGuard, AuthGuard } from '../shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'hierarchies',\n        component: HierarchyComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'data',\n        component: DataPageComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'change-requests',\n        component: ChangeRequestPageComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'master-lists',\n        component: MasterListManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'scheduled-jobs',\n        component: ScheduledJobsComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'job/:oid',\n        component: JobComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'master-list/:oid/:published',\n        component: MasterListComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'master-list-view/:oid',\n        component: MasterListViewComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'change-request',\n        component: SubmitChangeRequestComponent,\n        canActivate: [ContributerGuard]\n    },\n    {\n        path: 'tasks',\n        component: TaskViewerComponent,\n        canActivate: [MaintainerGuard]\n    },\n    {\n        path: 'synchronization-configs',\n        component: SynchronizationConfigManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'synchronization-config/:oid',\n        component: SynchronizationConfigComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'location-manager',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n\t{\n        path: 'location-manager/:geoobjectuid/:geoobjecttypecode',\n        component: LocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'dataset-location-manager/:datasetId/:typeCode/:readOnly/:date/:code/:editOnly',\n        component: DatasetLocationManagerComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'sync/details/:oid',\n        component: SyncDetailsComponent,\n        canActivate: [MaintainerGuard]\n    },\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class RegistryRoutingModule { }"],"sourceRoot":""}