{"version":3,"sources":["webpack:///./src/app/shared/component/index.ts","webpack:///./src/app/shared/service/event.service.ts","webpack:///./src/app/shared/service/localization.service.ts","webpack:///./src/app/shared/component/header/header.component.ts","webpack:///./src/app/shared/component/header/header.component.html","webpack:///./src/app/shared/service/guard.service.ts","webpack:///./src/app/shared/component/profile/profile.component.ts","webpack:///./src/app/shared/component/profile/profile.component.html","webpack:///./src/app/shared/service/date.service.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.html","webpack:///./src/app/shared/service/external-system.service.ts","webpack:///./src/app/shared/service/modal-step-indicator.service.ts","webpack:///./src/app/shared/service/organization.service.ts","webpack:///./src/app/shared/service/pending-changes-guard.ts","webpack:///./src/app/shared/service/profile.service.ts","webpack:///./src/app/shared/service/progress.service.ts","webpack:///./src/app/shared/service/session.service.ts","webpack:///./src/app/shared/component/message/error-message.component.ts","webpack:///./src/app/shared/component/message/error-message.component.html","webpack:///./src/app/shared/service/index.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.html","webpack:///./src/app/shared/component/modals/error-modal.component.ts","webpack:///./src/app/shared/component/modals/error-modal.component.html","webpack:///./src/app/shared/component/modals/success-modal.component.ts","webpack:///./src/app/shared/component/modals/success-modal.component.html","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.ts","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.html","webpack:///./src/app/registry/model/registry.ts","webpack:///./src/app/shared/model/core.ts","webpack:///./src/app/shared/component/error-handler/error-handler.ts","webpack:///./src/app/shared/directive/must-match.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/component/localize/convert-key-label.component.ts","webpack:///./src/app/shared/component/localize/convert-key-label.component.html","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.ts","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.html","webpack:///./src/app/shared/model/modal.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.html","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/shared/directive/number-only.directive.ts","webpack:///./src/app/shared/model/profile.ts","webpack:///./src/app/shared/pipe/phone.pipe.ts","webpack:///./src/app/shared/component/localize/localize.component.ts","webpack:///./src/app/shared/component/localize/localize.component.html","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.html","webpack:///./src/app/shared/component/message/message.component.ts","webpack:///./src/app/shared/component/message/message.component.html","webpack:///./src/app/shared/service/auth.service.ts","webpack:///./src/app/shared/pipe/localize.pipe.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.html"],"names":["components","ErrorHandler","CgrHeaderComponent","LoadingBarComponent","LocalizeComponent","ErrorMessageComponent","MessageComponent","ConfirmModalComponent","ErrorModalComponent","ModalStepIndicatorComponent","SuccessModalComponent","PasswordStrengthBarComponent","ProfileComponent","ProgressBarComponent","listeners","registerListener","listener","this","push","deregisterListener","indexOfItem","indexOf","splice","start","complete","EventService","Injectable","locales","parser","Globalize","numberParser","formatter","numberFormatter","registry","locale","getLocales","getLocale","setLocales","addLocale","create","value","localizedValue","localeValues","forEach","parseNumber","length","formatNumber","number","Number","localize","bundle","key","com","runwaysdk","Localize","get","decode","index","lastIndexOf","temp","slice","LocalizationService","modalService","profileService","service","localizationService","loggedIn","context","acp","isAdmin","isMaintainer","isContributor","isContributer","filter","shouldShowMenuItem","item","hasExactRole","RegistryRoleType","SRA","RA","RM","RC","logout","window","location","href","getUsername","setLocale","then","reload","account","profile","bsModalRef","show","backdrop","class","content","Component","selector","templateUrl","styleUrls","Input","router","canActivate","route","state","navigate","AdminGuard","MaintainerGuard","ContributerGuard","isLoggedIn","AuthGuard","authService","_profile","oid","username","password","firstName","lastName","email","changePassword","roles","getRoles","getRolesForUser","onSubmit","apply","hide","onChangePassword","getRolesArray","onRoleIdsUpdate","event","console","log","cancel","unlock","styles","overlapMessage","gapMessage","getPresentDate","Date","formatDateForDisplay","date","PRESENT","getDateString","split","getDateFromDateString","year","getFullYear","month","getMonth","dt","getDate","checkRanges","vAttributes","hasConflict","attr","conflictMessage","j","h1","startDate","endDate","s1","e1","dateEndBeforeStart","i","h2","s2","e2","dateRangeOverlaps","getTime","sort","current","next","hasGap","votArr","a","b","DateService","modalStepIndicatorService","stepSubscription","modalStepChange","subscribe","stepConfig","ngOnInit","ngOnDestroy","unsubscribe","http","eventService","getExternalSystems","pageNumber","pageSize","params","HttpParams","set","toString","pipe","finalize","toPromise","getExternalSystem","applyExternalSystem","system","headers","HttpHeaders","post","JSON","stringify","getSystemCapabilities","removeExternalSystem","ExternalSystemService","modalStepChangedSource","Subject","asObservable","getStepConfig","setStepConfig","config","getStep","step","setStep","ModalStepIndicatorService","getOrganizations","updateOrganization","json","newOrganization","removeOrganization","code","OrganizationService","canDeactivate","component","confirmRet","confirm","afterDeactivate","PendingChangesGuard","userOID","ProfileService","progress","ProgressService","login","user","setUser","response","SessionService","localizeService","message","services","AuthService","submitText","cancelText","type","ModalTypes","warning","onConfirm","onCancel","data","showIndicator","prog","total","description","TreeEntity","label","children","addChild","term","Term","GeoObject","attributes","GeoObjectType","Task","geoObjectType","getVotAtDate","attrCode","lService","retVot","time","isChangeOverTime","values","vot","parse","Array","isArray","GeoObjectOverTime","ValueOverTime","isDefault","required","unique","Attribute","isChange","rootTerm","termOptions","setRootTerm","AttributeTerm","precision","scale","AttributeDecimal","GeoObjectTypeModalStates","TreeNode","ChildTreeNode","ParentTreeNode","ManageGeoObjectTypeModalState","PaginationPage","AbstractScheduledJob","ScheduledJob","ScheduledJobOverview","ImportError","ServerException","ServerExceptionAttribute","ImportErrorObject","StepConfig","Step","MasterList","MasterListVersion","HierarchyOverTime","ImportStrategy","MasterListByOrg","SynchronizationConfig","OrgSyncInfo","ExportScheduledJob","ContextLayer","ContextLayerGroup","LocaleValue","Organization","ExternalSystem","OAuthServer","PageResult","LocalizedValue","buildFromRoleName","roleName","RegistryRole","roleSplit","orgCode","roleSuffix","gotCode","AC","RoleBuilder","geoObjectTypeCode","getMessageFromError","err","unspecified","msg","error","localizedMessage","includes","showErrorAsDialog","HttpErrorResponse","status","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","setErrors","validate","MustMatchDirective","provide","NG_VALIDATORS","useExisting","multi","Directive","providers","forRoot","ngModule","SharedModule","CookieService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","ModalModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","CollapseModule","NgxPaginationModule","BsDatepickerModule","ConvertKeyLabel","BooleanFieldComponent","DateFieldComponent","OnlyNumber","LocalizePipe","PhonePipe","NgModule","imports","declarations","exports","entryComponents","text","bsDatepickerConfig","changeDetectorRef","dateService","allowFutureDates","allowInfinity","inputName","idGenerator","classNames","customStyles","localizeLabelKey","disable","placement","valueChange","EventEmitter","change","today","returnFocusToInput","valueIsPresent","valid","validChange","dateInputFormat","setValue","isNaN","parseInt","_value","getUTCFullYear","getUTCMonth","getUTCDate","getValue","S4","Math","random","substring","isEqual","date1","date2","toggleInfinity","emit","toggle","setTimeout","newValue","formattedDate","BsDatepickerDirective","datepicker","ViewChild","static","Output","removeStatuses","arr","newArray","formatDateString","dateObj","day","a_start","a_end","b_start","b_end","end","el","onKeyDown","e","keyCode","ctrlKey","shiftKey","preventDefault","HostListener","Profile","transform","args","country","phone","Pipe","name","Object","keys","replace","onError","onMessage","userName","roleDisplayLabels","version","installedLocales","cookie","check","cookieData","cookieDataJSON","buildFromCookieJson","buildRolesFromCookie","replaceAll","role","removeUser","isSRA","isRA","isRM","isRC","isContributerOnly","roleType","isOrganizationRA","isGeoObjectTypeRM","isGeoObjectTypeOrSuperRM","got","organizationCode","superTypeCode","isGeoObjectTypeRC","isRCOnly","getMyOrganizations","orgCodes","__getRoleFromRoleName","nameArr","getRoleDisplayLabelsArray","getRoleDisplayLabels","str","displayLabel","getVersion","colors","measureStrength","pass","score","letters","variations","digits","test","lower","upper","nonWords","variationCount","trunc","getColor","idx","col","ngOnChanges","changes","currentValue","setBarColors","c","count","_n","passwordToCheck"],"mappings":"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A,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,qBAEF,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,yBAEF,yBACE,YACF,kB,uCADE,kF,yBA5BJ,yBACE,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAGF,kB,uBA7BO,+DAGA,+DAGA,+DAIA,8DAGA,8DAGA,8DAIA,kFAGA,kFAGA,mF,0GA7PrB,0BACE,yBAEA,+BAA+E,kIAC7E,+BACE,4BACE,yBACE,4BACF,iBACF,iBAEA,4BACE,4BACE,6BACE,6BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,8GAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,iHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,mHAAnB,iBACF,iBACF,iBACF,iBAGF,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,mCAAmB,0GAAnB,iBACF,iBACA,gCAGF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,+GAAnB,iBACF,iBACF,iBACF,iBAGF,6BACE,0BACE,8BACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBA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","file":"0.chunk.js","sourcesContent":["import { ErrorHandler } from './error-handler/error-handler';\nimport { CgrHeaderComponent } from './header/header.component';\nimport { LoadingBarComponent } from './loading-bar/loading-bar.component';\nimport { LocalizeComponent } from './localize/localize.component';\nimport { ErrorMessageComponent } from './message/error-message.component';\nimport { MessageComponent } from './message/message.component';\nimport { ConfirmModalComponent } from './modals/confirm-modal.component';\nimport { ErrorModalComponent } from './modals/error-modal.component';\nimport { ModalStepIndicatorComponent } from './modals/modal-step-indicator.component';\nimport { SuccessModalComponent } from './modals/success-modal.component';\nimport { PasswordStrengthBarComponent } from './password-strength-bar/password-strength-bar.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\n\nexport const components: any[] = [\n\tErrorHandler,\n\tCgrHeaderComponent,\n\tLoadingBarComponent,\n\tLocalizeComponent,\n\tErrorMessageComponent,\n\tMessageComponent,\n\tConfirmModalComponent,\n\tErrorModalComponent,\n\tModalStepIndicatorComponent,\n\tSuccessModalComponent,\n\tPasswordStrengthBarComponent,\n\tProfileComponent,\n\tProgressBarComponent\n];\n\nexport * from './error-handler/error-handler';\nexport * from './header/header.component';\nexport * from './loading-bar/loading-bar.component';\nexport * from './localize/localize.component';\nexport * from './message/error-message.component';\nexport * from './message/message.component';\nexport * from './modals/confirm-modal.component';\nexport * from './modals/error-modal.component';\nexport * from './modals/modal-step-indicator.component';\nexport * from './modals/success-modal.component';\nexport * from './password-strength-bar/password-strength-bar.component';\nexport * from './profile/profile.component';\nexport * from './progress-bar/progress-bar.component';\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ndeclare var acp;\n\nexport interface IEventListener {\n    start(): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class EventService {\n    private listeners: IEventListener[] = [];\n\n    public registerListener( listener: IEventListener ): void {\n        this.listeners.push( listener );\n    }\n\n    public deregisterListener( listener: IEventListener ): boolean {\n        let indexOfItem = this.listeners.indexOf( listener );\n\n        if ( indexOfItem === -1 ) {\n            return false;\n        }\n\n        this.listeners.splice( indexOfItem, 1 );\n\n        return true;\n    }\n\n    public start(): void {\n        for ( const listener of this.listeners ) {\n            listener.start();\n        }\n    }\n\n    public complete(): void {\n        for ( const listener of this.listeners ) {\n            listener.complete();\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\ndeclare var Globalize: any;\ndeclare var com: any\ndeclare var registry: any\n\n@Injectable()\nexport class LocalizationService {\n\n\tlocales: string[] = ['defaultLocale'];\n\tlocale: string;\n\n\tprivate parser: any = Globalize.numberParser();\n\tprivate formatter: any = Globalize.numberFormatter();\n\n\tconstructor() {\n\t\tthis.locales = registry.locales;\n\t\tthis.locale = registry.locale;\n\t}\n\n\tgetLocales(): string[] {\n\t\treturn this.locales;\n\t}\n\n\tgetLocale(): string {\n\t\treturn this.locale;\n\t}\n\n\tsetLocales(locales: string[]): void {\n\t\t// The installed locales are now read from the global registry value on load\n\t\t//\t\tthis.locales = locales;\n\t}\n\n\taddLocale(locale: string): void {\n\n\t\tif (this.locales.indexOf(locale) === -1) {\n\t\t\tthis.locales.push(locale);\n\t\t}\n\t}\n\n\tcreate(): LocalizedValue {\n\t\tconst value = { localizedValue: '', localeValues: [] } as LocalizedValue;\n\n\t\tthis.locales.forEach(locale => {\n\t\t\tvalue.localeValues.push({ locale: locale, value: '' });\n\t\t});\n\n\t\treturn value;\n\t}\n\n\tpublic parseNumber(value: string): number {\n\t\tif (value != null && value.length > 0) {\n\t\t\t//convert data from view format to model format\n\t\t\tvar number = this.parser(value);\n\n\t\t\treturn number;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic formatNumber(value: any): string {\n\t\tif (value != null) {\n\t\t\tvar number = value;\n\n\t\t\tif (typeof number === 'string') {\n\t\t\t\tif (number.length > 0 && Number(number)) {\n\t\t\t\t\tnumber = Number(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//convert data from model format to view format\n\t\t\treturn this.formatter(number);\n\t\t}\n\n\t\treturn null;\n\t}\n\t\n\n\tpublic localize(bundle: string, key: string): string {\n\t\treturn com.runwaysdk.Localize.localize(bundle, key);\n\t}\n\n\tpublic get(key: string): string {\n\t\treturn com.runwaysdk.Localize.get(key);\n\t}\n\n\tpublic decode(key: string): string {\n\t\tlet index = key.lastIndexOf('.');\n\n\t\tif (index !== -1) {\n\n\t\t\tlet temp = [key.slice(0, index), key.slice(index + 1)]\n\n\t\t\treturn this.localize(temp[0], temp[1]);\n\t\t}\n\t\telse {\n\t\t\treturn this.get(key);\n\t\t}\n\t}\n}\n","import { Component, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ProfileComponent } from '../profile/profile.component';\n\nimport { AuthService, ProfileService, LocalizationService } from '@shared/service';\n\nimport { RegistryRoleType } from '@shared/model/core';\n\ndeclare var acp: string;\ndeclare var registry: any\n\n@Component({\n\n\tselector: 'cgr-header',\n\ttemplateUrl: './header.component.html',\n\tstyleUrls: []\n})\nexport class CgrHeaderComponent {\n\tcontext: string;\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\tbsModalRef: BsModalRef;\n\n\tlocales: string[]\n\tlocale: string\n\n\t@Input() loggedIn: boolean = true;\n\n\tconstructor(\n\t\tprivate modalService: BsModalService,\n\t\tprivate profileService: ProfileService,\n\t\tprivate service: AuthService,\n\t\tlocalizationService: LocalizationService\n\t) {\n\t\tthis.context = acp;\n\t\tthis.isAdmin = service.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n\t\tthis.locales = localizationService.getLocales().filter(locale => locale !== 'defaultLocale');\n\t\tthis.locale = localizationService.getLocale();\n\t\t\n\t\tif(this.locales.indexOf(this.locale) === -1) {\n\t\t\tthis.locale = '';\n\t\t}\n\t}\n\n\tshouldShowMenuItem(item: string): boolean {\n\t\tif (item === \"HIERARCHIES\") {\n\t\t\treturn true;\n\t\t}\n\t\telse if (item === \"LISTS\") {\n\t\t\t//return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC) || this.service.hasExactRole(RegistryRoleType.AC);\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.service.hasExactRole(RegistryRoleType.SRA)) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (item === \"IMPORT\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n\t\t}\n\t\telse if (item === \"SCHEDULED-JOBS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n\t\t}\n\t\telse if (item === \"NAVIGATOR\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n\t\t}\n\t\telse if (item === \"CHANGE-REQUESTS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n\t\t}\n\t\telse if (item === \"TASKS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n\t\t}\n\t\telse if (item === \"CONFIGS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA);\n\t\t}\n\t\telse if (item === \"SETTINGS\") {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tlogout(): void {\n\n\t\twindow.location.href = acp + '/session/logout';\n\n\t\t//        this.sessionService.logout().then( response => {\n\t\t//            this.router.navigate( ['/login'] );\n\t\t//        } );\n\t}\n\n\tgetUsername() {\n\t\tlet name: string = this.service.getUsername();\n\n\t\treturn name;\n\t}\n\n\tsetLocale() {\n\t\tthis.profileService.setLocale(this.locale).then(() => {\n\t\t\t// Refresh the page\t\t\t\n\t\t\twindow.location.reload();\n\t\t});\n\t}\n\n\taccount(): void {\n\t\tthis.profileService.get().then(profile => {\n\t\t\tthis.bsModalRef = this.modalService.show(ProfileComponent, { backdrop: 'static', class: 'gray modal-lg' });\n\t\t\tthis.bsModalRef.content.profile = profile;\n\t\t});\n\t}\n\n}\n","<!-- HEADER AND NAVBAR -->\n<header>\n  <nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><localize key=\"cgr.standard.title\"></localize></a>\n      </div>\n       <ul *ngIf=\"loggedIn\" class=\"nav navbar-nav navbar-right\"> \n         <li>\n            \n           <a (click)=\"account()\" class=\"navbar-username\">\n           <!-- <div>Logged in as</div> -->\n             <div>{{getUsername()}}</div>\n           </a>                      \n         </li>\n         <li dropdown> \n             <!-- <localize key=\"hierarchy-management.menu\"></localize> -->\n           <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n             <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n           </a>     \n\n           \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <!-- GeoRegistry specific links -->\n                <li *ngIf=\"shouldShowMenuItem('HIERARCHIES')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/hierarchies\" routerLinkActive=\"active\"><localize key=\"hierarchies.menu\"></localize></a></li> \n                <li *ngIf=\"shouldShowMenuItem('LISTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/master-lists\" routerLinkActive=\"active\"><localize key=\"masterlist.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('IMPORT')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/data\" routerLinkActive=\"active\"><localize key=\"header.data.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('SCHEDULED-JOBS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/scheduled-jobs\" routerLinkActive=\"active\"><localize key=\"scheduledjobs.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('NAVIGATOR')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/location-manager\"><localize key=navigator.menu></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('CHANGE-REQUESTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/change-requests\" routerLinkActive=\"active\"><localize key=\"header.changerequest.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('TASKS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/tasks\" routerLinkActive=\"active\"><localize key=\"header.tasks\"></localize></a></li>\n                <!-- <li *ngIf=\"shouldShowMenuItem('CONFIGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/synchronization-configs\" routerLinkActive=\"active\"><localize key=\"synchronization.config.manager\"></localize></a></li> -->\n                \n                <hr>\n                <li *ngIf=\"shouldShowMenuItem('SETTINGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/settings\" routerLinkActive=\"active\"><localize key=\"settings.menu\"></localize> </a></li>\n                \n                <div *ngIf=\"locales.length > 0\" style=\"padding: 0 20px;\">\n                  <hr>\n<!--                     <span><localize key=\"userDashboards.setLocale\"></localize></span> -->\n\n                    <label class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"default\" [value]=\"''\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span><localize key=\"localization.default.label\"></localize></span>\n                    </label>\n                    <label *ngFor=\"let l of locales\" class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"{{l}}\" [value]=\"l\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span>{{l}}</span>\n                    </label>\n                </div>\n                \n                <!-- <hr *ngIf=\"isAdmin\">\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/localization-manager\" routerLinkActive=\"active\"><localize key=\"localization-manager.menu\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\">\n                    <a class=\"user-command-link\" routerLink=\"/admin/accounts\"><localize key=\"accounts.link\"></localize></a>\n                </li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li> -->\n  \n                <hr>\n                <li role=\"menuitem\"><a class=\"user-command-link\" (click)=\"logout()\"><localize key=\"userDashboards.logout\"></localize></a></li>\n            \n              </ul>\n         </li> \n         \n        \n       </ul>\n       \n       \n    </div>\n  </nav>\n</header>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { AuthService} from './auth.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class MaintainerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class ContributerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()  || this.service.isContributer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isLoggedIn()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/login' ]);\n    \n    return false;\n  }\n}\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, Input} from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Profile } from '@shared/model/profile';\nimport { AuthService, ProfileService } from '@shared/service';\nimport { Role } from '../../../admin/model/account';\n\n\n@Component({  \n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class ProfileComponent {\n  public _profile:Profile = {\n    oid: '',\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    changePassword:false\n  };\n  \n  @Input('profile')\n  set profile(value: Profile) {\n    this._profile = value;\n    this.getRoles();\n  }\n  roles: Role[] = [];\n  \n  constructor(private service:ProfileService, public bsModalRef: BsModalRef, private authService: AuthService) {}\n  \n\n  getRoles(): void {\n    this.service.getRolesForUser(this._profile.oid).then(roles => {\n      this.roles = roles;\n    });\n  }\n  \n  onSubmit():void {\n    if(!this._profile.changePassword) {\n      delete this._profile.password;\n    }\n\t  \n    this.service.apply(this._profile).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }\n\n  onChangePassword(): void {\n    this._profile.changePassword = !this._profile.changePassword;\n  }\n  \n  // getRoles():string {\n  //   return this.authService.getRoleDisplayLabels();\n  // }\n\n  getRolesArray(): any {\n    return this.authService.getRoles();\n  }\n\n  onRoleIdsUpdate(event: any): void {\n    console.log(event)\n  }\n  \n  cancel():void {\n    this.service.unlock(this._profile.oid).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }  \n}\n","<div *ngIf=\"_profile\">\n  <message></message>\n\n  <form #form=\"ngForm\" class=\"modal-form\" style=\"background: none;border: none;\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n    <fieldset>\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"profile.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.firstname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.firstName\" name=\"firstname\" required>\n          </span>\n        </div>\n      </div>\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.lastname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.lastName\" name=\"lastname\" required>\n          </span>\n        </div>\n      </div>\n      \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>            \n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.phonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.phoneNumber\" name=\"phoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.email\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.email\" name=\"email\" required #aemail=\"ngModel\" email>\n          </span>\n          <div *ngIf=\"aemail.errors?.email\" style=\"float:none;\" class=\"inline-error-message\">\n            <localize key=\"account.email.validation\"></localize>\n          </div>\n        </div>\n      </div>\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n            \n\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"account.info.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.username\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.username\" name=\"username\" required>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"_profile.externalSystemOid != null && _profile.externalSystemOid !== ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.oauth\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <label>\n            <localize key=\"account.profile.isOauth\"></localize>\n          </label>\n        </div>\n      </div>\n      \n      <div *ngIf=\"_profile.externalSystemOid == null || _profile.externalSystemOid === ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n        </div>\n        <div class=\"holder\">\n          <!-- <boolean-field [(value)]=\"profile.changePassword\"></boolean-field> -->\n          <div style=\"text-align: left;\">\n            <input type=\"button\" *ngIf=\"!_profile.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n              (click)=\"onChangePassword()\" />\n            <input type=\"button\" *ngIf=\"_profile.changePassword\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\"\n              (click)=\"onChangePassword()\" />\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"_profile.changePassword\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" [(ngModel)]=\"_profile.password\" name=\"password\" #password=\"ngModel\" required\n                minlength=\"5\" maxlength=\"50\">\n              <password-strength-bar [passwordToCheck]=\"_profile.password\">\n              </password-strength-bar>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.certainPassword\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" />\n            </span>\n            <div *ngIf=\"certainPassword.errors?.mustMatch\" style=\"float:none;\" class=\"inline-error-message\">\n              <localize key=\"account.certainPassword.validation\"></localize>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"com.runwaysdk.ui.userstable.UsersTable.adminRoles\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n\n          <table class=\"table\">\n            <thead>\n              <tr>\n                  <th><localize key=\"profile.roles.role.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.organization.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.geoobjecttype.table.heading\"></localize></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let role of roles\">\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.geoObjectTypeLabel.localizedValue}}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- <ul>\n            <li *ngFor=\"let role of getRolesArray()\">{{role}}</li>\n          </ul> -->\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\"\n              [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { LocalizationService } from './localization.service';\n\nimport Utils from '../../registry/utility/Utils';\n\nimport { PRESENT, ValueOverTime } from '@registry/model/registry';\n\nimport * as moment from 'moment';\n\ndeclare var Globalize: any;\ndeclare var com: any\ndeclare var registry: any\n\n\n@Injectable()\nexport class DateService {\n\toverlapMessage = { \n\t\t\"type\": \"ERROR\",\t\n\t\t\"message\":this.localizationService.decode(\"manage.versions.overlap.message\")\n\t}\n\t\n\tgapMessage = {\n\t\t\"type\": \"WARNING\",\t\n\t\t\"message\":this.localizationService.decode(\"manage.versions.gap.message\")\n\t}\n\n\tconstructor(private localizationService: LocalizationService) {}\n\n\t// Get infinity date (called 'present' in the UI)\n\tpublic getPresentDate(): Date {\n\t\t// NOTE: Month is 0 indexed so 11 = December\n\t\tlet dt =  new Date(5000, 11, 31, 0, 0, 0);\n\t\t\n\t\treturn dt;\n\t}\n\t\n\tpublic formatDateForDisplay(date: string | Date): string {\n\t\tif(!date){\n\t\t\treturn \"\";\n\t\t}\n\t\t\n\t\t\n\t\tif (date === PRESENT) {\n\t\t\treturn this.localizationService.localize(\"changeovertime\", \"present\");\n\t\t}\n\t\t\n\t\tif(date instanceof Date){\n\t\t\treturn this.getDateString(date);\n\t\t}\n\t\telse{\n\t\t\treturn date.split('T')[0];\n\t\t}\n\t}\n\t\n\t// @param value as yyyy-mm-dd\n\tgetDateFromDateString(value: string){\n\t\treturn new Date(+value.split(\"-\")[0], +value.split(\"-\")[1]-1, +value.split(\"-\")[2]);\n\t}\n\t\n\tgetDateString(date:Date): string {\n\t\tif(date instanceof Date){\n\t\t\tlet year = date.getFullYear();\n\t\t\tlet month:number|string = date.getMonth()+1;\n\t\t\tlet dt:number|string = date.getDate();\n\t\t\t\n\t\t\tif (dt < 10) {\n\t\t\t  dt = '0' + dt;\n\t\t\t}\n\t\t\tif (month < 10) {\n\t\t\t  month = '0' + month;\n\t\t\t}\n\t\t\t\n\t\t\treturn year + \"-\" + month + \"-\" + dt;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\tcheckRanges(vAttributes: any[]): boolean {\n\t\t\n\t\tlet hasConflict = false;\n\t\t\n\t\t// clear all messages\n\t\tvAttributes.forEach(attr => {\n\t\t\tattr.conflictMessage = [];\n\t\t})\n\t\t\n\t\t// Check for overlaps\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tconst h1 = vAttributes[j];\n\n\t\t\tif (h1.startDate && h1.endDate) {\n\t\t\t\tlet s1: any = this.getDateFromDateString(h1.startDate);\n\t\t\t\tlet e1: any = this.getDateFromDateString(h1.endDate);\n\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\"message\": this.localizationService.decode(\"manage.versions.startdate.later.enddate.message\")\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\thasConflict = true;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < vAttributes.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst h2 = vAttributes[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If all dates set\n\t\t\t\t\t\tif (h2.startDate && h2.endDate) {\n\t\t\t\t\t\t\tlet s2: Date = this.getDateFromDateString(h2.startDate);\n\t\t\t\t\t\t\tlet e2: Date = this.getDateFromDateString(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(s2.getTime() === e2.getTime()){\n\t\t\t\t\t\t\t\t\th2.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\thasConflict = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If 1st end date and current start date\n\t\t\t\t\t\telse if( (i === j-1 || i === j+1) && e1 && h2.startDate){\n\t\t\t\t\t\t\tlet s2: Date = this.getDateFromDateString(h2.startDate);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(s2.getTime() <= e1){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\th1.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\th2.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\thasConflict = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.sort(vAttributes);\n\t\t\n\t\t// Check for gaps\n\t\tlet current = null;\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tlet next = vAttributes[j];\n\n\t\t\tif (j > 0) {\n\t\t\t\tif (current.endDate && next.startDate) {\n\t\t\t\t\tlet e1: any = new Date(current.endDate);\n\t\t\t\t\tlet s2: any = new Date(next.startDate);\n\n\t\t\t\t\tif (Utils.hasGap(e1.getTime(), s2.getTime())) {\n\t\t\t\t\t\tnext.conflictMessage.push(this.gapMessage);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcurrent.conflictMessage.push(this.gapMessage);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent = next;\n\t\t}\n\t\t\n\t\treturn hasConflict;\n\t}\n\t\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\n}\n","import { Component } from '@angular/core';\nimport { ModalStepIndicatorService } from '@shared/service';\n\nimport { Step, StepConfig } from '@shared/model/modal';\nimport { Subscription } from 'rxjs';\n\n\n@Component( { \n    selector: 'modal-step-indicator',\n    templateUrl: './modal-step-indicator.component.html',\n    styleUrls: ['./modal-step-indicator.css']\n} )\nexport class ModalStepIndicatorComponent {\n\n    stepConfig: StepConfig;\n    step: Step;\n    stepSubscription: Subscription;\n\n    constructor( private modalStepIndicatorService: ModalStepIndicatorService ) { \n        this.stepSubscription = modalStepIndicatorService.modalStepChange.subscribe( stepConfig => {\n            this.stepConfig = stepConfig;\n        })\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n        this.stepSubscription.unsubscribe();\n    }\n}\n","<div class=\"step-indicator\" >\n    <ul *ngIf=\"stepConfig && stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\" [ngClass]=\"{'active':step.active, 'enabled':step.enabled}\" *ngFor=\"let step of stepConfig.steps\">{{step.label}}</li>\n    </ul>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { ExternalSystem, PageResult } from '@shared/model/core'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ExternalSystemService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetExternalSystems(pageNumber: number, pageSize:number): Promise<PageResult<ExternalSystem>> {\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'pageNumber', pageNumber.toString() );\n        params = params.set( 'pageSize', pageSize.toString() );\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExternalSystem>>(acp + '/external-system/get-all', {params:params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetExternalSystem(oid:string): Promise<ExternalSystem> {\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'oid', oid );\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<ExternalSystem>(acp + '/external-system/get', {params:params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tapplyExternalSystem(system: ExternalSystem): Promise<ExternalSystem> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<ExternalSystem>(acp + '/external-system/apply', JSON.stringify({ system: system }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tgetSystemCapabilities(system: ExternalSystem): Promise<{oauth:boolean}> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<{oauth:boolean}>(acp + '/external-system/system-capabilities', JSON.stringify({ system: system }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\t\n\tremoveExternalSystem(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/external-system/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\t\n\n}\n","import { Injectable } from '@angular/core';\n// import { Subject } from 'rxjs'\nimport { Subject } from 'rxjs';\n\n\nimport { Step, StepConfig } from '@shared/model/modal';\n\n\ndeclare var acp: string;\n\n@Injectable()\nexport class ModalStepIndicatorService {\n\n    stepConfig: StepConfig;\n    step: Step;\n    private modalStepChangedSource = new Subject<StepConfig>();\n    modalStepChange = this.modalStepChangedSource.asObservable();\n\n\n    constructor(  ) { }\n\n    public getStepConfig(): StepConfig {\n        return this.stepConfig;\n    }\n\n    public setStepConfig(config: StepConfig): void {\n        this.stepConfig = config;\n        \n        this.modalStepChangedSource.next(this.stepConfig);\n    }\n\n    getStep(): Step {\n        return this.step;\n    }\n\n    setStep(step: Step): void {\n        this.step = step;\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { Organization, PageResult } from '@shared/model/core';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class OrganizationService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetOrganizations(): Promise<Organization[]> {\n\n    this.eventService.start();\n\n    return this.http\n      .get<Organization[]>(acp + '/cgr/organizations/get-all')\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  updateOrganization(json: any): Promise<Organization> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<Organization>(acp + '/cgr/orgainization/update', JSON.stringify({ json: json }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  newOrganization(json: any): Promise<any> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<any>(acp + '/cgr/orgainization/create', JSON.stringify({ json: json }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  removeOrganization(code: any): Promise<void> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<any>(acp + '/cgr/orgainization/delete', JSON.stringify({ code: code }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n}\n","import { CanDeactivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n// Thanks to : https://stackoverflow.com/a/41187919/219843\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n  afterDeactivate: (arg:boolean) => void;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    if (!component.canDeactivate())\n    {\n      // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\n      // when navigating away from your angular app, the browser will show a generic warning message\n      // see http://stackoverflow.com/a/42207299/7307355\n      var confirmRet = confirm('WARNING: You have unsaved changes. Press Cancel to go back and save these changes, or OK to lose these changes.');\n      \n      component.afterDeactivate(confirmRet);\n      \n      return confirmRet;\n    }\n    \n    return true;\n  }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\n\nimport { Profile } from '@shared/model/profile';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ProfileService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tget(): Promise<Profile> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Profile>(acp + '/registryaccount/get', { headers: headers })\n\t\t\t.toPromise();\n\t}\n\n\n\tapply(profile: Profile): Promise<Profile> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Profile>(acp + '/registryaccount/apply', JSON.stringify({ account: profile }), { headers: headers })\n\t\t\t.toPromise();\n\t}\n\n\tunlock(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/registryaccount/unlock', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.toPromise()\n\t}\n\n\tsetLocale(locale: string): Promise<any> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/localization/set-locale', JSON.stringify({ locale: locale }), { headers: headers })\n\t\t\t.toPromise();\n\t}\n\n\tgetRolesForUser(userOID: string): Promise<any> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\n\t\treturn this.http\n\t\t\t.post<Profile>(acp + '/registryaccount/getRolesForUser', { userOID: userOID }, { headers: headers })\n\t\t\t.toPromise();\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\nimport { Progress } from '@shared/model/progress';\n\nexport interface IProgressListener {\n  start(): void;\n  progress(progress:Progress):void;  \n  complete(): void;\n}\n\n@Injectable()\nexport class ProgressService {\n  private listeners: IProgressListener[] = [];\n  \n  public constructor() {}\n  \n  public registerListener(listener: IProgressListener): void {\n   this.listeners.push(listener);\n  }\n  \n  public deregisterListener(listener: IProgressListener): boolean {\n    let indexOfItem = this.listeners.indexOf(listener);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this.listeners.splice(indexOfItem, 1);\n\n    return true;\n  }\n  \n  public start(): void {\n    for (const listener of this.listeners) {\n      listener.start();\n    }\n  }\n  \n  public progress(progress:Progress):void {\n    for (const listener of this.listeners) {\n      listener.progress(progress);\n    }\t  \n  }  \n  \n  public complete(): void {\n    for (const listener of this.listeners) {\n      listener.complete();\n    }\n  }  \n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from './event.service';\n\nimport { AuthService } from './auth.service';\nimport { User } from '@shared/model/user';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SessionService {\n\n    constructor( private service: EventService, private http: HttpClient, private authService: AuthService ) { }\n\n    login( username: string, password: string ): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n        return this.http\n            .post<User>( acp + '/session/login', JSON.stringify( { username: username, password: password } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.service.complete();\n\t\t\t}))\n            .toPromise()\n            .then(( user: User ) => {\n                this.authService.setUser( user );\n\n                return user;\n            } )\n    }\n    \n    logout(): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n\n        return this.http\n            .post<void>( acp + '/session/logout', { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.service.complete();\n\t\t\t}))\n            .toPromise()\n            .then(( response: any ) => {\n                this.authService.setUser( null );\n\n                return response;\n            } )\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'error-message',\n    templateUrl: './error-message.component.html',\n    styleUrls: ['./error-message.css']\n} )\nexport class ErrorMessageComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( private localizeService: LocalizationService ) { }\n}\n","<div *ngIf=\"message != null\" class=\"error-container\">\n    <div class=\"\">\n        <strong class=\"error-title\">\n            <localize key=\"error.title\"></localize>\n        </strong>\n    </div>\n    <div class=\"\">\n        <div>\n            <p class=\"error-message\">{{message}}</p>\n        </div>\n    </div>\n</div>","import { AuthService } from './auth.service';\nimport { EventService } from './event.service';\nimport { ExternalSystemService } from './external-system.service';\nimport { AdminGuard, AuthGuard, ContributerGuard, MaintainerGuard } from './guard.service';\nimport { LocalizationService } from './localization.service';\nimport { ModalStepIndicatorService } from './modal-step-indicator.service';\nimport { OrganizationService } from './organization.service';\nimport { PendingChangesGuard } from './pending-changes-guard';\nimport { ProfileService } from './profile.service';\nimport { ProgressService } from './progress.service';\nimport { SessionService } from './session.service';\n\nexport const services: any[] = [\n\tAuthService,\n\tEventService,\n\tExternalSystemService,\n\tAdminGuard,\n\tAuthGuard,\n\tContributerGuard,\n\tMaintainerGuard,\n\tLocalizationService,\n\tModalStepIndicatorService,\n\tOrganizationService,\n\tPendingChangesGuard,\n\tProfileService,\n\tProgressService,\n\tSessionService\n];\n\nexport * from './auth.service';\nexport * from './event.service';\nexport * from './external-system.service';\nexport * from './guard.service';\nexport * from './localization.service';\nexport * from './modal-step-indicator.service';\nexport * from './organization.service';\nexport * from './pending-changes-guard';\nexport * from './profile.service';\nexport * from './progress.service';\nexport * from './session.service';\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\n\n@Component( {\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./modal.css']\n} )\nexport class ConfirmModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    @Input() data: any;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.submit\");\n\n    @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n    \n    /*\n     * Called on cancel\n     */\n    public onCancel: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n        this.onCancel = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next( this.data );\n    }\n    \n    cancel(): void {\n        this.bsModalRef.hide();\n        this.onCancel.next( this.data );\n    }\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>{{cancelText}}</span>\n          </button>\n          <button type=\"button\" (click)=\"confirm()\"\n            [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n            aria-disabled=\"false\">\n            <span>{{submitText}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'error-modal',\n    templateUrl: './error-modal.component.html',\n    styleUrls: ['./error-modal.css']\n} )\nexport class ErrorModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'success-modal',\n\ttemplateUrl: './success-modal.component.html',\n\tstyleUrls: ['./success-modal.css']\n})\nexport class SuccessModalComponent implements OnInit {\n    /*\n     * Message\n     */\n\t@Input() message: string;\n\n\tconstructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.message = this.message ? this.message : this.localizeService.decode(\"success.modal.default.message\");\n\t}\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Progress } from '@shared/model/progress';\nimport { ProgressService, IProgressListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styles: [\n    '.progress-overlay { background-color: #CCCCCC; position: absolute; display: block;opacity: 0.8;z-index: 99999 !important;}',\n    '.progress-div { width: 100%; margin-left: 0; padding-left: 25%; padding-right: 25%; margin-top: 30% }'\n  ]\n})\nexport class ProgressBarComponent implements OnInit, IProgressListener {\n  public showIndicator: boolean = true;\n\n  public prog:Progress = {\n    current:0,\n    total:1,\n    description:\"Initializing\"\n  };\n\n  constructor(private service: ProgressService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.prog = {\n      current:0,\n      total:1,\n      description:\"Initializing\"\n    };\n    \n    this.showIndicator = true;\n  }\n  \n  progress(progress:Progress):void {\n    this.prog = progress;\n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","<div *ngIf=\"showIndicator\" class=\"progress-overlay\" style=\"height: 100%; width: 100%;\">\n  <div class=\"progress-div\">\n    <progressbar class=\"progress-striped active\" [max]=\"prog.total\" [value]=\"prog.current\"><i>{{prog.description}}</i></progressbar>\n  </div>\n</div>\n","import { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\nimport { ImportConfiguration } from './io';\n\nexport const PRESENT: string = '5000-12-31'\n\nexport class TreeEntity {\n\tid: string;\n\tname: string;\n\thasChildren: boolean;\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\n\tconstructor(code: string, label: LocalizedValue, description: LocalizedValue) {\n\t\tthis.code = code;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t}\n\tchildren: Term[] = [];\n\n\taddChild(term: Term) {\n\t\tthis.children.push(term);\n\t}\n}\n\nexport class GeoObject {\n\ttype: string;\n\tgeometry: any;\n\tproperties: {\n\t\tuid: string,\n\t\tcode: string,\n\t\tdisplayLabel: LocalizedValue,\n\t\ttype: string,\n\t\tstatus: string[],\n\t\tsequence: string\n\t\tcreateDate: string,\n\t\tlastUpdateDate: string,\n\t\twritable?: boolean\n\t};\n}\n\nexport class GeoObjectType {\n\tcode: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tgeometryType?: string;\n\tisLeaf: boolean;\n\tisGeometryEditable: boolean;\n\torganizationCode: string;\n\tattributes: Array<Attribute | AttributeTerm | AttributeDecimal> = [];\n\trelatedHierarchies?: string[];\n\tsuperTypeCode?: string;\n\tisAbstract?: boolean;\n\tisPrivate?: boolean;\n\tcanDrag?: boolean;\n\tpermissions?: string[];\n}\n\nexport class Task {\n\tid: string;\n\ttemplateKey: string;\n\tmsg: string;\n\ttitle: string;\n\tstatus: string;\n\tcreateDate: number;\n\tcompletedDate: number;\n}\n\nexport class GeoObjectOverTime {\n\n\tgeoObjectType: GeoObjectType;\n\n\tattributes: any;\n\n\tpublic constructor(geoObjectType: GeoObjectType, attributes: any) {\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.attributes = attributes;\n\t}\n\n\tpublic getVotAtDate(date: Date, attrCode: string, lService: LocalizationService) {\n\t\tlet retVot = { startDate: date, endDate: null, value: null };\n\n\t\tconst time = date.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === attrCode) {\n\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\tretVot.value = lService.create();\n\t\t\t\t}\n\n\t\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\t\tlet values = this.attributes[attr.code].values;\n\n\t\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\t\tretVot.value = JSON.parse(JSON.stringify(vot.value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\t\tretVot.value = vot.value[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tretVot.value = vot.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tretVot.value = this.attributes[attr.code];\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn retVot;\n\t}\n}\n\nexport class ValueOverTime {\n\tstartDate: string;\n\tendDate: string;\n\tvalue: any;\n\tremovable?: boolean;\n}\n\nexport class Attribute {\n\tcode: string;\n\ttype: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tisDefault: boolean;\n\trequired: boolean;\n\tunique: boolean;\n\tisChangeOverTime?: boolean;\n\tprecision?: number;\n\tscale?: number;\n\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChangeOverTime: boolean) {\n\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t\tthis.isDefault = isDefault;\n\t\tthis.required = false; // Hardcoded to false because this functionality is disabled until later evaluation.\n\t\tthis.unique = unique;\n\t\tthis.isChangeOverTime = isChangeOverTime;\n\t}\n\n}\n\nexport class AttributeTerm extends Attribute {\n\t//descendants: Attribute[];\n\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n\t\tsuper(code, type, label, description, isDefault, required, unique, isChange);\n\t}\n\n\trootTerm: Term = new Term(null, null, null);\n\n\ttermOptions: Term[] = [];\n\n\tsetRootTerm(term: Term) {\n\t\tthis.rootTerm = term;\n\t}\n}\n\nexport class AttributeDecimal extends Attribute {\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n\t\tsuper(code, type, label, description, isDefault, required, unique, isChange);\n\n\t\tthis.precision = 32;\n\t\tthis.scale = 8;\n\t}\n}\n\nexport enum GeoObjectTypeModalStates {\n\t\"manageAttributes\" = \"MANAGE-ATTRIBUTES\",\n\t\"editAttribute\" = \"EDIT-ATTRIBUTE\",\n\t\"defineAttribute\" = \"DEFINE-ATTRIBUTE\",\n\t\"manageTermOption\" = \"MANAGE-TERM-OPTION\",\n\t\"editTermOption\" = \"EDIT-TERM-OPTION\",\n\t\"manageGeoObjectType\" = \"MANAGE-GEO-OBJECT-TYPE\"\n}\n\nexport class TreeNode {\n\tgeoObject: GeoObject;\n\thierarchyType: string;\n}\n\nexport class ChildTreeNode extends TreeNode {\n\tchildren: ChildTreeNode[];\n}\n\nexport class ParentTreeNode extends TreeNode {\n\tparents: ParentTreeNode[];\n}\n\nexport class ManageGeoObjectTypeModalState {\n\tstate: string;\n\tattribute: any;\n\ttermOption: any;\n}\n\nexport class PaginationPage {\n\tpageNumber: number;\n\tcount: number;\n\tpageSize: number;\n\tresults: any[];\n}\n\nexport class AbstractScheduledJob {\n\tjobId: string;\n\thistoryId: string;\n\tstage: string;\n\tstatus: string;\n\tauthor: string;\n\tcreateDate: string;\n\tlastUpdateDate: string;\n\tworkProgress: number;\n\tworkTotal: number;\n\tstartDate: string;\n\tendDate: string;\n}\n\nexport class ScheduledJob extends AbstractScheduledJob {\n\timportedRecords: number;\n\texportedRecords: number;\n\tconfiguration: ImportConfiguration;\n\timportErrors: PaginationPage;\n\texportErrors: PaginationPage;\n\tproblems: PaginationPage;\n\tfileName: string;\n}\n\nexport class ScheduledJobOverview extends ScheduledJob {\n\tstepConfig: StepConfig;\n}\n\n// export class ScheduledJobDetail extends ScheduledJob {\n//     // failedRowCount: number;\n//     importErrors: PaginationPage\n// }\n\nexport class ImportError {\n\texception: ServerException;\n\tobject: ImportErrorObject;\n\tobjectType: string;\n\tid: string;\n\tresolution: string;\n\tselected?: boolean;\n}\n\nexport class ServerException {\n\tattributes: ServerExceptionAttribute[];\n\ttype: string;\n\tmessage: string;\n}\n\nexport class ServerExceptionAttribute {\n\tvalue: string;\n\tkey: string;\n}\n\nexport class ImportErrorObject {\n\tgeoObject: GeoObjectOverTime;\n\tparents: HierarchyOverTime[];\n\tisNew: boolean;\n}\n\nexport class StepConfig {\n\tsteps: Step[];\n}\n\nexport class Step {\n\tlabel: string;\n\tcomplete?: boolean;\n\tenabled?: boolean;\n\tstatus?: string;\n}\n\nexport class MasterList {\n\toid: string;\n\ttypeCode: string;\n\ttypeLabel?: LocalizedValue;\n\tdisplayLabel: LocalizedValue;\n\tcode: string;\n\trepresentativityDate: Date;\n\tpublishingStartDate?: Date;\n\tpublishDate: Date;\n\tlistAbstract: string;\n\tprocess: string;\n\tprogress: string;\n\taccessConstraints: string;\n\tuseConstraints: string;\n\tacknowledgements: string;\n\tdisclaimer: string;\n\tcontactName: string;\n\torganization: string;\n\ttelephoneNumber: string;\n\temail: string;\n\thierarchies: { label: string, code: string, parents: { label: string, code: string }[] }[];\n\tleaf: boolean;\n\tfrequency: string;\n\tisMaster: boolean;\n\tvisibility: string;\n\twrite?: boolean;\n\tread?: boolean;\n\texploratory?: boolean;\n\tversions?: MasterListVersion[];\n}\n\nexport class MasterListVersion {\n\tdisplayLabel: string;\n\toid: string;\n\ttypeCode: string;\n\torgCode: string;\n\tmasterlist: string;\n\tforDate: string;\n\tcreateDate: string;\n\tpublishDate: string;\n\tattributes: any[];\n\tisGeometryEditable: boolean;\n\tlocales?: string[];\n\tshapefile?: boolean;\n\tisAbstract?: boolean;\n\tsuperTypeCode?: string;\n}\n\nexport class HierarchyOverTime {\n\tcode: string;\n\tlabel: string;\n\ttypes: {\n\t\tcode: string;\n\t\tlabel: string;\n\t}[];\n\tentries: {\n\t\tstartDate: string;\n\t\tendDate: string;\n\t\tparents: { [k: string]: { text: string; geoObject: GeoObject } };\n\t\tloading?: any;\n\t\tconflictType?: string;\n\t\tconflictMessage?: any[];\n\t}[];\n}\n\nexport enum ImportStrategy {\n\t\"NEW_AND_UPDATE\" = \"NEW_AND_UPDATE\",\n\t\"NEW_ONLY\" = \"NEW_ONLY\",\n\t\"UPDATE_ONLY\" = \"UPDATE_ONLY\"\n}\n\nexport class MasterListByOrg {\n\toid: string;\n\tlabel: string;\n\twrite: boolean;\n\tlists: {\n\t\tlabel: string,\n\t\toid: string,\n\t\tcreateDate: string,\n\t\tlastUpdateDate: string,\n\t\tisMaster: boolean,\n\t\twrite: boolean,\n\t\tread: boolean,\n\t\tvisibility: string\n\t}[];\n}\n\nexport class SynchronizationConfig {\n\toid?: string;\n\ttype?: string;\n\tsystemLabel?: string;\n\torganization: string;\n\tsystem: string;\n\thierarchy: string;\n\tlabel: LocalizedValue;\n\tconfiguration: any;\n}\n\nexport class OrgSyncInfo {\n\tlabel: string;\n\tcode: string;\n\thierarchies: { label: string, code: string }[];\n\tsystems: { label: string, oid: string, type: string }[];\n};\n\nexport class ExportScheduledJob extends AbstractScheduledJob {\n\tstepConfig?: StepConfig;\n}\n\nexport class ContextLayer {\n\toid: string;\n\tdisplayLabel: string;\n\tactive: boolean;\n\tenabled: boolean;\n}\n\nexport class ContextLayerGroup {\n\toid: string;\n\tdisplayLabel: string;\n\tcontextLayers: ContextLayer[];\n}\n","export interface MessageContainer {\n\tsetMessage(message: string);\n}\n\nexport class LocaleValue {\n\tlocale: string;\n\tvalue: string;\n\n\tconstructor(locale: string, value: string) {\n\t\tthis.locale = locale;\n\t\tthis.value = value;\n\t}\n}\n\nexport class Organization {\n\tcode: string;\n\tlabel: any;\n\tcontactInfo: any;\n}\n\nexport class ExternalSystem {\n\toid?: string;\n\tid: string;\n\ttype: string;\n\torganization: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tusername?: string;\n\tpassword?: string;\n\turl?: string;\n\tversion?: string;\n\toAuthServer?: OAuthServer;\n}\n\nexport class OAuthServer {\n  keyName?: string;\n  label?: LocalizedValue;\n  url?: string;\n  authorizationLocation: string;\n  tokenLocation: string;\n  profileLocation: string;\n  clientId: string;\n  secretKey: string;\n  serverType: string;\n}\n\nexport class PageResult<T> {\n\tcount: number;\n\tpageNumber: number;\n\tpageSize: number;\n\tresultSet: T[];\n\texternalSystems?: ExternalSystem[];\n}\n\nexport class LocalizedValue {\n\tlocalizedValue: string;\n\tlocaleValues: LocaleValue[];\n\n\tconstructor(localizedValue: string, localeValues: LocaleValue[]) {\n\t\tthis.localizedValue = localizedValue;\n\t\tthis.localeValues = localeValues;\n\t}\n}\n\nexport class RoleBuilder {\n\tstatic buildFromRoleName(roleName: string): RegistryRole {\n\t\tif (roleName === \"cgr.SRA\") {\n\t\t\treturn new RegistryRole(RegistryRoleType.SRA, \"\", \"\", \"cgr.SRA\");\n\t\t}\n\n\t\tlet roleSplit = roleName.split(\".\");\n\n\t\tlet orgCode: string = roleSplit[2];\n\n\t\tif (roleSplit.length === 4) {\n\t\t\treturn new RegistryRole(RegistryRoleType.RA, orgCode, \"\", roleName);\n\t\t}\n\t\telse if (roleSplit.length === 5) {\n\t\t\tlet roleSuffix: string = roleSplit[4];\n\n\t\t\tlet gotCode: string = roleSplit[3];\n\n\t\t\tif (roleSuffix === \"RM\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.RM, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t\telse if (roleSuffix === \"RC\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.RC, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t\telse if (roleSuffix === \"AC\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.AC, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport class RegistryRole {\n\ttype: RegistryRoleType;\n\torgCode: string;\n\tgeoObjectTypeCode: string;\n\troleName: string;\n\tdisplayLabel: string;\n\n\tconstructor(type: RegistryRoleType, orgCode: string, geoObjectTypeCode: string, roleName: string) {\n\t\tthis.type = type;\n\t\tthis.orgCode = orgCode;\n\t\tthis.geoObjectTypeCode = geoObjectTypeCode;\n\t\tthis.roleName = roleName;\n\t}\n}\n\nexport enum RegistryRoleType {\n\tSRA,\n\tRA,\n\tRM,\n\tRC,\n\tAC\n}\n","\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ErrorModalComponent } from '@shared/component';\n\nexport class ErrorHandler {\n    static getMessageFromError(err: any): string {\n    \n      var unspecified = \"An unspecified error has occurred.  Please try your operation again.  If the problem continues, alert your technical support staff.\";\n    \n      if (err == null)\n      {\n        return unspecified;\n      }\n      else\n      {\n        console.log(\"An error has occurred: \", err);\n      }\n      \n      let msg = null;\n      \n      if (err.error != null && (typeof err.error === 'object'))\n      {\n        msg = err.error.localizedMessage || err.error.message;\n      }\n      \n      if (msg == null)\n      {\n        msg = err.message || err.msg || err.localizedMessage;\n      }\n      \n      if (msg != null && msg.includes(\"##tferrormsg##\"))\n      {\n        var split = msg.split(\"##tferrormsg##\");\n        return split[2];\n      }\n      \n      if (msg == null)\n      {\n        msg = unspecified;\n      }\n      \n      return msg;\n    }\n    \n    static showErrorAsDialog(err: any, modalService: BsModalService): BsModalRef {\n      \n      if (err instanceof HttpErrorResponse && err.status == 401)\n      {\n        return null;\n      }\n      \n      let bsModalRef = modalService.show(ErrorModalComponent, { backdrop: true, class:\"error-white-space-pre\" });\n      \n      bsModalRef.content.message = ErrorHandler.getMessageFromError(err);\n      \n      return bsModalRef;\n      \n    }\n}\n","import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n\treturn (formGroup: FormGroup) => {\n\t\tconst control = formGroup.controls[controlName];\n\t\tconst matchingControl = formGroup.controls[matchingControlName];\n\n\t\t// return null if controls haven't initialised yet\n\t\tif (!control || !matchingControl) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// return null if another validator has already found an error on the matchingControl\n\t\tif (matchingControl.errors && !matchingControl.errors.mustMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// set error on matchingControl if validation fails\n\t\tif (control.value !== matchingControl.value) {\n\t\t\tmatchingControl.setErrors({ mustMatch: true });\n\t\t} else {\n\t\t\tmatchingControl.setErrors(null);\n\t\t}\n\t}\n}\n\n@Directive({\n\tselector: '[mustMatch]',\n\tproviders: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\n})\nexport class MustMatchDirective implements Validator {\n\t@Input('mustMatch') mustMatch: string[] = [];\n\n\tvalidate(formGroup: FormGroup): ValidationErrors {\n\t\treturn MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\n\t}\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { ErrorModalComponent } from './component/modals/error-modal.component';\nimport { SuccessModalComponent } from './component/modals/success-modal.component';\nimport { ConfirmModalComponent } from './component/modals/confirm-modal.component';\nimport { ErrorMessageComponent } from './component/message/error-message.component';\nimport { MessageComponent } from './component/message/message.component';\nimport { BooleanFieldComponent } from './component/form-fields/boolean-field/boolean-field.component';\nimport { DateFieldComponent } from './component/form-fields/date-field/date-field.component';\nimport { LoadingBarComponent } from './component/loading-bar/loading-bar.component';\nimport { PasswordStrengthBarComponent } from './component/password-strength-bar/password-strength-bar.component';\n\nimport { AdminGuard, MaintainerGuard, ContributerGuard, AuthGuard } from './service/guard.service';\nimport { PendingChangesGuard } from './service/pending-changes-guard';\n\nimport { AuthService } from './service/auth.service';\nimport { ProfileService } from './service/profile.service';\nimport { OrganizationService } from './service/organization.service';\nimport { ExternalSystemService } from './service/external-system.service';\nimport { LocalizationService } from './service/localization.service';\nimport { ProgressService } from './service/progress.service';\nimport { EventService } from './service/event.service';\nimport { ModalStepIndicatorService } from './service/modal-step-indicator.service';\nimport { SessionService } from './service/session.service';\nimport { DateService } from './service/date.service';\n\nimport { LocalizePipe } from './pipe/localize.pipe';\nimport { PhonePipe } from './pipe/phone.pipe';\n\nimport { OnlyNumber } from './directive/number-only.directive';\nimport { MustMatchDirective } from './directive/must-match.directive';\n\nimport { CgrHeaderComponent } from './component/header/header.component';\nimport { ProgressBarComponent } from './component/progress-bar/progress-bar.component';\nimport { LocalizeComponent } from './component/localize/localize.component';\nimport { ConvertKeyLabel } from './component/localize/convert-key-label.component';\nimport { ModalStepIndicatorComponent } from './component/modals/modal-step-indicator.component';\nimport { ProfileComponent } from './component/profile/profile.component';\n\nimport '../rxjs-extensions';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\tModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule,\n\t\tBsDatepickerModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tLocalizeComponent,\n\t\tConvertKeyLabel,\n\t\tBooleanFieldComponent,\n\t\tDateFieldComponent,\n\t\tLoadingBarComponent,\n\t\tErrorMessageComponent,\n\t\tMessageComponent,\n\t\tConfirmModalComponent,\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tOnlyNumber,\n\t\tMustMatchDirective,\n\t\tProgressBarComponent,\n\t\tModalStepIndicatorComponent,\n\t\tCgrHeaderComponent,\n\t\tProfileComponent,\n\t\tLocalizePipe,\n\t\tPhonePipe\n\t],\n\texports: [\n\t\tLocalizeComponent,\n\t\tConvertKeyLabel,\n\t\tBooleanFieldComponent,\n\t\tDateFieldComponent,\n\t\tLoadingBarComponent,\n\t\tErrorMessageComponent,\n\t\tMessageComponent,\n\t\tConfirmModalComponent,\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tOnlyNumber,\n\t\tMustMatchDirective,\n\t\tProgressBarComponent,\n\t\tModalStepIndicatorComponent,\n\t\tCgrHeaderComponent,\n\t\tProfileComponent,\n\t\tLocalizePipe,\n\t\tPhonePipe,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule\n\t],\n\tentryComponents: [\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tConfirmModalComponent,\n\t\tModalStepIndicatorComponent,\n\t\tErrorMessageComponent,\n\t\tLoadingBarComponent,\n\t\tProfileComponent\n\t]\n})\nexport class SharedModule {\n\tstatic forRoot(): ModuleWithProviders<SharedModule> {\n\t\treturn {\n\t\t\tngModule: SharedModule,\n\t\t\tproviders: [\n\t\t\t\tCookieService,\n\t\t\t\tAuthService,\n\t\t\t\tSessionService,\n\t\t\t\tProfileService,\n\t\t\t\tOrganizationService,\n\t\t\t\tExternalSystemService,\n\t\t\t\tLocalizationService,\n\t\t\t\tDateService,\n\t\t\t\tModalStepIndicatorService,\n\t\t\t\tEventService,\n\t\t\t\tProgressService,\n\t\t\t\tAdminGuard,\n\t\t\t\tMaintainerGuard,\n\t\t\t\tContributerGuard,\n\t\t\t\tAuthGuard,\n\t\t\t\tPendingChangesGuard\n\t\t\t]\n\t\t};\n\t}\n}\n","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n  \n  selector: 'convert-key-label',\n  templateUrl: './convert-key-label.component.html',\n  styleUrls: []\n})\nexport class ConvertKeyLabel implements OnInit {\n  @Input() key: string;\n  text: string;\n    \n  constructor(private service: LocalizationService) { }\n\n  ngOnInit(): void {\n\tif(this.key === \"defaultLocale\"){\n\t\tthis.text = this.service.decode(\"localization.defaultLocal\");\n\t}\n\telse{\n\t\tthis.text = this.key;\n\t}\n  }\n}\n","{{text}}","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\nimport { DateService } from '@shared/service/date.service';\n\nimport { BsDatepickerConfig, BsDatepickerDirective } from 'ngx-bootstrap/datepicker';\n\nimport { PRESENT } from '@registry/model/registry';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'date-field',\n\ttemplateUrl: './date-field.component.html',\n\tstyleUrls: ['./date-field.css'],\n})\n\nexport class DateFieldComponent {\n\t@ViewChild(BsDatepickerDirective, { static: false }) datepicker: BsDatepickerDirective;\n\n\t@Input() allowFutureDates: boolean = true;\n\t@Input() allowInfinity: boolean = false;\n\t@Input() inputName: string = this.idGenerator();\n\t@Input() classNames: string = \"\";\n\t@Input() customStyles: string = \"\";\n\t@Input() localizeLabelKey: string = \"\"; // localization key used to localize in the component template\n\t@Input() label: string = \"\"; // raw string input\n\t@Input() disable: boolean = false;\n\t@Input() required: boolean = false;\n\t@Input() placement: string = \"bottom\";\n\n\t_value:Date;\n\t@Input() set value(value) {\n\t\n\t\tif(value){\n\t\t\tthis.setValue(value ? value : null);\n\t\t}\n\t}\n\t@Output() public valueChange = new EventEmitter<string>();\n\n\t/* You can pass a function in with (change)='function()' */\n\t@Output() public change = new EventEmitter<any>();\n\n\ttoday: Date = new Date();\n\tmessage: string;\n\treturnFocusToInput: boolean = false;\n\tvalueIsPresent: boolean = false;\n\t\n\t@Input() valid: boolean = true;\n\t@Output() public validChange = new EventEmitter<boolean>();\n\n\tconstructor(private localizationService: LocalizationService, private bsDatepickerConfig: BsDatepickerConfig, private changeDetectorRef: ChangeDetectorRef, private dateService: DateService) {\n\t\tthis.bsDatepickerConfig.dateInputFormat = 'YYYY-MM-DD';\n\t}\n\n\n\tprivate setValue(value:string | number):void {\n\t\t// @ts-ignore\n\t\tif( ! isNaN(value) ){\n\t\t\t// @ts-ignore\n\t\t\tvalue = parseInt(value);\n\t\t}\n\t\t\n\t\tif(value && typeof value == 'string'){\n\t\t\tlet date = new Date(+value.split(\"-\")[0], +value.split(\"-\")[1]-1, +value.split(\"-\")[2]);\n\n\t\t\tif (value === PRESENT) {\n\t\t\t\tthis.valueIsPresent = true;\n\t\t\t}\n\t\t\t\n\t\t\tthis._value = date;\n\t\t}\n\t\t// Custom attributes of date type come through as UTC time\n\t\telse if(value && typeof value == 'number'){\n\t\t\tthis._value = new Date(new Date(value).getUTCFullYear(), new Date(value).getUTCMonth(), new Date(value).getUTCDate());\n\t\t}\n\t\telse{\n\t\t\tthis._value = null;\n\t\t}\n\t}\n\t\n\tpublic getValue():Date {\n\t\treturn this._value;\n\t}\n\t\n\tidGenerator() {\n\t\tvar S4 = function() {\n\t\t\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n\t\t};\n\t\treturn (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n\t}\n\t\n\tisEqual(date1:Date, date2:Date):boolean {\n\t\tlet equal = false;\n\t\t\n\t\tif(date1 && date2){\n\t\t\t\n//\t\t\tif(date1.toISOString().substr(0, 10) === PRESENT && date2.toISOString().substr(0, 10) === PRESENT){\n\t\t\tif(date1.getTime() === date2.getTime()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn equal;\n\t}\n\n\ttoggleInfinity(): void {\n\n\t\tlet date = this.getValue();\n\t\t\n\t\tif(date && this.isEqual(date, this.dateService.getPresentDate())) {\n\t\t\tthis.setValue(null); // clear the date picker\n\t\t\tthis.valueChange.emit(null); \n\t\t\tthis.valueIsPresent = false;\n\t\t}\n\t\telse {\n\t\t\tthis.setValue(PRESENT);\n\t\t\tthis.valueChange.emit(this.dateService.getDateString(this.getValue()));\n\t\t\tthis.valueIsPresent = true;\n\t\t}\n\t\t\n\t\tthis.change.emit();\n\t}\n\t\n\ttoggle(event: Date): void {\n\n\t\tsetTimeout(() => {\n\t\t\t\n\t\t\tlet newValue:Date;\n\t\t\t\n\t\t\t// event can be null if manually clearing the input\n\t\t\tif(event){\n\t\t\t\n\t\t\t\tnewValue = event;\n\t\n\t\t\t\tthis.valid = true;\n\t\t\t\tthis.message = \"\";\n\t\n\t\t\t\tif (!this.allowFutureDates && newValue > this.today) {\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"date.inpu.data.in.future.error.message\");\n\t\t\t\t}\n\t\t\t\telse if (!(newValue instanceof Date)) {\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"date.inpu.data.invalid.error.message\");\n\t\t\t\t}\n\t\t\t\telse if (newValue instanceof Date && isNaN(newValue.getTime())){\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"date.inpu.data.invalid.error.message\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// date required\n\t\t\t\tif(this.required){\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"manage.versions.date.required.message\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif(this.valid) {\n\t\t\t\t\n\t\t\t\t// Must adhere to the ISO 8601 format\n\t\t\t\tlet formattedDate = this.dateService.getDateString(newValue);\n\n\t\t\t\tif (formattedDate === PRESENT) {\n\t\t\t\t\tthis.valueIsPresent = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.valueIsPresent = false;\n\t\t\t\t}\n\n\t\t\t\tthis.valueChange.emit(formattedDate);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// hack to avoid ngx-datepicker from putting \"invalid date\" in the input\n\t\t\t\tthis.setValue(null);\n\t\t\t\t\n\t\t\t\tthis.valueChange.emit(null);\n\t\t\t}\n\t\t\t\n\t\t\tthis.change.emit();\n\t\t\tthis.validChange.emit(this.valid);\n\n\t\t}, 0)\n\t}\n}","\n<label for=\"{{inputName}}\" *ngIf=\"label.length > 0\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n<label for=\"{{inputName}}\" *ngIf=\"localizeLabelKey.length > 0\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n\n<!-- <input id=\"date-input\" [class]=\"classNames\" name=\"{{inputName}}\" [(ngModel)]=\"value\" (change)=\"toggle($event)\" type=\"date\" max=\"{{today|date:'yyyy-MM-dd'}}\" [disabled]=\"disable\" [required]=\"required\"/> -->\n\n<div [hidden]=\"valueIsPresent\">\n  <span class=\"wrapper\">\n      <input [class]=\"classNames ? classNames + ' ' + 'date-input-element' : 'date-input-element'\" \n           [style]=\"customStyles ? customStyles : ''\"\n           name=\"{{inputName}}\"\n           type=\"text\"\n           placeholder=\"YYYY-MM-DD\"\n           [bsValue]=\"_value\"\n           [value]=\"_value | date: 'yyyy-MM-dd'\"\n           (bsValueChange)=\"toggle($event)\"\n           [bsConfig]=\"{\n              dateInputFormat: 'YYYY-MM-DD', \n              containerClass: 'theme-default', \n              returnFocusToInput: returnFocusToInput,\n              adaptivePosition: true\n              }\"\n           [outsideClick]=\"true\"\n           placement=\"{{placement}}\"\n           [maxDate]=\"allowFutureDates ? null : today\"\n           [isDisabled]=\"disable\"\n           [disabled]=\"disable\"\n           bsDatepicker\n           #dp=\"bsDatepicker\"\n           >\n  </span>\n  \n  <div class=\"form-input-validation-error-message-wrapper\">\n    <p *ngIf=\"message\" class=\"error-message\">{{message}}</p>\n  </div>\n</div>\n\n<p [hidden]=\"!valueIsPresent\" style=\"font-size:14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n\n<div *ngIf=\"allowInfinity\" class=\"text-right\" style=\"padding: 10px 0;\">\n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"valueIsPresent\" (click)=\"toggleInfinity()\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></button> \n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"!valueIsPresent\" (click)=\"toggleInfinity()\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></button>\n</div>\n\n","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    active: boolean;\n    enabled: boolean;\n}","import {Component, Input, Output, EventEmitter} from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({    \n  selector: 'boolean-field',\n  templateUrl: './boolean-field.component.html',\n  styleUrls: ['./boolean-field.css']\n})\nexport class BooleanFieldComponent {\n\n  @Input() value:boolean = false;\n  @Output() public valueChange = new EventEmitter<boolean>();\n\n  @Input() localizeLabelKey:string = \"\"; // localization key used to localize in the component template\n  @Input() label:string = \"\"; // raw string input\n\n  @Input() disable:boolean = false;\n\n  /* You can pass a function in with (change)='function()' */\n  @Output() public change = new EventEmitter<any>();\n\n  constructor(){}\n  \n  toggle():void {\n    if(!this.disable){\n      this.value = !this.value;\n      \n      this.valueChange.emit(this.value);\n      this.change.emit(this.value);\n    }\n  }\n}","<div class=\"check-block\">\n  <div (click)=\"toggle()\" [ngClass]=\"{'chk-checked' : value, 'disabled': disable}\" ng-style=\"chkstyle\" class=\"chk-area\">\n    <span></span>\n  </div>\n  \n  <label *ngIf=\"label.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n  <label *ngIf=\"localizeLabelKey.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n</div>","export default class Utils {\n\t\n\t/**\n\t * \n\t * @param arr \n\t */\n\tstatic removeStatuses( arr: any[] ): any[] {\n\t      var newArray = [];\n\t      \n\t      for ( var i = 0; i < arr.length; ++i ) {\n\t        if (! (arr[i].code === \"CGR:Status-New\"\n\t             || arr[i].code === \"CGR:Status-Pending\"))\n\t        {\n\t          newArray.push(arr[i]);\n\t        }\n\t      }\n\t      \n\t      return newArray;\n\t}\n\t\n\n\t/**\n\t * \n\t * @param dateObj \n\t */\n\tstatic formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + ( month < 10 ? \"0\" : \"\" ) + month + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n\tstatic dateRangeOverlaps(a_start: number, a_end: number, b_start: number, b_end: number): boolean {\n\t\tif (a_start <= b_start && b_start <= a_end) return true; // b starts in a\n\t\tif (a_start <= b_end && b_end <= a_end) return true; // b ends in a\n\t\tif (b_start < a_start && a_end < b_end) return true; // a in b\n\t\treturn false;\n\t}\n\t\n\tstatic dateEndBeforeStart(start: number, end: number): boolean {\n\t\tif (end < start) return true; // end date is before start date\n\t\treturn false;\n\t}\n    \n\tstatic hasGap(a_end: number, b_start: number): boolean {\n\t\treturn (b_start - a_end) > (1000 * 60 * 60 * 24);\n\t}\n\t\n}","\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[OnlyNumber]'\n})\nexport class OnlyNumber {\n\n  constructor(private el: ElementRef) { }\n\n  @Input() OnlyNumber: boolean;\n \n  @HostListener('keydown', ['$event']) onKeyDown(event:any) {\n    let e = <KeyboardEvent> event;\n    if (this.OnlyNumber) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (e.keyCode == 65 && e.ctrlKey === true) ||\n        // Allow: Ctrl+C\n        (e.keyCode == 67 && e.ctrlKey === true) ||\n        // Allow: Ctrl+X\n        (e.keyCode == 88 && e.ctrlKey === true) ||\n        // Allow: home, end, left, right\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n          // let it happen, don't do anything\n          return;\n        }\n        // Ensure that it is a number and stop the keypress\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n            e.preventDefault();\n        }\n      }\n  }\n}\n\n\n","import { Role } from \"../../admin/model/account\";\n\n///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nexport class Profile {\n\toid: string;\n\tusername: string;\n\tpassword: string;\n\tfirstName: string;\n\tlastName: string;\n\temail: string;\n\tchangePassword?: boolean;\n\tphoneNumber?: string;\n\taltFirstName?: string;\n\taltLastName?: string;\n\taltPhoneNumber?: string;\n\tposition?: string;\n\tdepartment?: string;\n  externalSystemOid?: string;\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatNumber, ParsedNumber } from 'libphonenumber-js';\n\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(value: ParsedNumber, args?: string): any {\n    if (!value) {\n      return value;\n    }\n\n    return formatNumber({ country: 'US', phone: value.toString() }, 'International');\n  }\n\n}\n","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\n\tselector: 'localize',\n\ttemplateUrl: './localize.component.html',\n\tstyleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n\t@Input() key: string;\n\t@Input() params: { [key: string]: string } = null;\n\n\ttext: string;\n\n\tconstructor(private service: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.text = this.service.decode(this.key);\n\n\t\tif (this.params != null) {\n\t\t\tconst keys = Object.keys(this.params);\n\n\t\t\tkeys.forEach((key) => {\n\t\t\t\tif (this.params[key] != null) {\n\t\t\t\t\tthis.text = this.text.replace(key, this.params[key]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n","<span [innerHtml]=\"text\"></span>","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'loading-bar',\n  templateUrl: './loading-bar.component.html',\n  styleUrls: ['./loading-bar.css']\n})\nexport class LoadingBarComponent implements OnInit, IEventListener {\n  showIndicator: boolean = false;\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.showIndicator = true;    \n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","<div *ngIf=\"showIndicator\" class=\"standby-overlay\">\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'message',\n  templateUrl: './message.component.html',\n  styles: [\n    '.error-container { text-align: center; border-width: 1px; border-color: #8c0000; border-style: solid; color: #8c0000; font-size: 17px; background: white;}',\n    '.message-container { text-align: center; border-width: 1px; border-color: #106828; border-style: solid; margin-left: 10%; margin-right: 10%; color: #106828; }'\n  ]\n})\nexport class MessageComponent implements OnInit, IEventListener {\n\t\n  error: any = null;\n  \n  message: string = \"\";\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.error = null;\n  }\n  \n  complete(): void {\n  }  \n  \n  onError(error: any): void {\n    this.error = error;\n  }\n  \n  onMessage(msg: string): void {\n    this.message = msg;\n  }\n}\n","\n<div>\n  <div *ngIf=\"message\" class=\"message-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.messagesLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"message\">{{message}}</p>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"error\" class=\"error-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.errorsLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"error-message\" *ngIf=\"error.localizedMessage\">{{error.localizedMessage}}</p>\n        <p class=\"error-message\" *ngIf=\"!error.localizedMessage\"><localize key='error.generic'></localize></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from '@shared/model/user';\nimport { RoleBuilder, RegistryRole, RegistryRoleType } from '@shared/model/core';\n\n@Injectable()\nexport class AuthService {\n\n\tprivate user: User = {\n\t\tloggedIn: false,\n\t\tuserName: '',\n\t\troles: [],\n\t\troleDisplayLabels: [],\n\t\tversion: \"0\",\n\t\tinstalledLocales: []\n\t};\n\n\tconstructor(private service: CookieService) {\n\t\tlet cookie = service.get('user');\n\n\t\tif (this.service.check(\"user\") && cookie != null && cookie.length > 0) {\n\t\t\tlet cookieData: string = this.service.get(\"user\")\n\t\t\tlet cookieDataJSON: any = JSON.parse(cookieData);\n\n\t\t\tthis.buildFromCookieJson(cookieDataJSON);\n\t\t}\n\t}\n\n\tbuildFromCookieJson(cookieDataJSON: any) {\n\t\tthis.user.userName = cookieDataJSON.userName;\n\t\tthis.buildRolesFromCookie(cookieDataJSON);\n\t\tthis.user.loggedIn = cookieDataJSON.loggedIn;\n\t\tthis.user.roleDisplayLabels = cookieDataJSON.roleDisplayLabels;\n\t\tthis.user.version = cookieDataJSON.version.replaceAll(\"+\", \" \");\n\t\tthis.user.installedLocales = cookieDataJSON.installedLocales;\n\t}\n\n\tbuildRolesFromCookie(cookieDataJSON: any) {\n\t\tthis.user.roles = [];\n\t\tlet roles: string[] = cookieDataJSON.roles;\n\n\t\tfor (let i = 0; i < roles.length; ++i) {\n\t\t\tlet role: RegistryRole = RoleBuilder.buildFromRoleName(roles[i]);\n\n\t\t\tif (role != null) {\n\t\t\t\tthis.user.roles.push(role);\n\t\t\t}\n\t\t}\n\t}\n\n\tisLoggedIn(): boolean {\n\t\treturn this.user.loggedIn;\n\t}\n\n\tsetUser(cookieDataJSON: any): void {\n\t\tthis.buildFromCookieJson(cookieDataJSON);\n\t}\n\n\tremoveUser(): void {\n\t\tthis.user = {\n\t\t\tloggedIn: false,\n\t\t\tuserName: '',\n\t\t\troles: [],\n\t\t\troleDisplayLabels: [],\n\t\t\tversion: \"0\",\n\t\t\tinstalledLocales: []\n\t\t};\n\t}\n\n\t// Legacy Accessors:\n\tisAdmin(): boolean {\n\t\treturn this.isSRA() || this.isRA();\n\t}\n\n\tisMaintainer(): boolean {\n\t\treturn this.isSRA() || this.isRM();\n\t}\n\n\tisContributer(): boolean {\n\t\treturn this.isSRA() || this.isRC(false);\n\t}\n\t\n\tisContributerOnly(): boolean {\n\t\treturn this.isRC(true);\n\t}\n\n\t// Used to exactly identify a role. I.e. if we say we need RC, SRA doesn't count.\n\thasExactRole(roleType: RegistryRoleType) {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === roleType) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisSRA(): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.SRA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisRA(): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryAdministrator') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryAdministrator\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisRM(): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RM) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryMaintainer') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryMaintainer\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisOrganizationRA(orgCode: string): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.orgCode === orgCode && role.type === RegistryRoleType.RA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false; // this.isSRA();\n\t}\n\n\tisGeoObjectTypeRM(orgCode: string, gotCode: string): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RM && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.isOrganizationRA(orgCode);\n\t}\n\t\n\tisGeoObjectTypeOrSuperRM(got: any): boolean {\n\t  if (this.isGeoObjectTypeRM(got.organizationCode, got.code))\n\t  {\n\t    return true;\n\t  }\n\t  else if (got.superTypeCode != null)\n\t  {\n\t    return this.isGeoObjectTypeRM(got.organizationCode, got.superTypeCode);\n\t  }\n\t}\n\n\tisGeoObjectTypeRC(orgCode: string, gotCode: string): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RC && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.isGeoObjectTypeRM(orgCode, gotCode);\n\t}\n\n\tisRC(isRCOnly: boolean): boolean {\n\t\tif (this.isSRA() && !isRCOnly) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RC) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryContributor') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryContributor\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\t// Returns all organization codes that the current user participates in.\n\t// If the user is an SRA then this method will return an empty string array.\n\tgetMyOrganizations(): string[] {\n\t\tlet orgCodes: string[] = [];\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.SRA || role.type === RegistryRoleType.RC || role.type === RegistryRoleType.RM || role.type === RegistryRoleType.RA) {\n\t\t\t\torgCodes.push(role.orgCode);\n\t\t\t}\n\t\t}\n\n\t\treturn orgCodes;\n\t}\n\n\t__getRoleFromRoleName(roleName: string): string {\n\t\tlet nameArr = roleName.split(\".\");\n\n\t\treturn nameArr[nameArr.length - 1];\n\t}\n\n\tgetUsername(): string {\n\t\treturn this.user.userName;\n\t}\n\n\tgetRoles(): any {\n\t\treturn this.user.roles;\n\t}\n\n\tgetRoleDisplayLabelsArray(): any {\n\t\treturn this.user.roleDisplayLabels;\n\t}\n\n\tgetRoleDisplayLabels(): string {\n\t\tlet str = \"\";\n\t\tfor (let i = 0; i < this.user.roleDisplayLabels.length; ++i) {\n\t\t\tlet displayLabel = this.user.roleDisplayLabels[i];\n\n\t\t\tif (displayLabel === \"Administrator\") {\n\t\t\t\tcontinue;\n\t\t\t\t// It's OK to hardcode to a display label here because the end user can't change it anyway.\n\t\t\t\t// Is it ideal? No. But sometimes it's better to get software out quicker than to spend forever\n\t\t\t\t// on something that nobody will ever see.\n\t\t\t}\n\n\t\t\tstr = str + displayLabel;\n\n\t\t\tif (i < this.user.roleDisplayLabels.length - 1) {\n\t\t\t\tstr = str + \",\";\n\t\t\t}\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tgetVersion(): string {\n\t\treturn this.user.version;\n\t}\n\n\tgetLocales(): any[] {\n\t\treturn this.user.installedLocales;\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\n@Pipe({name: 'localize'})\nexport class LocalizePipe implements PipeTransform {\n  constructor(private service: LocalizationService) { }\n\t\n  transform(value: string): string {\n    return this.service.decode(value);\n  }\n}\n\n","\nimport { Component, OnChanges, Input, SimpleChange } from '@angular/core';\n\n@Component({\n\tselector: 'password-strength-bar',\n\ttemplateUrl: './password-strength-bar.component.html',\n\tstyleUrls: ['./password-strength-bar.component.css']\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n\n\t@Input() passwordToCheck: string;\n\tbar0: string;\n\tbar1: string;\n\tbar2: string;\n\tbar3: string;\n\tbar4: string;\n\n\tprivate colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n\tprivate static measureStrength(pass: string) {\n\t\tlet score = 0;\n\t\t// award every unique letter until 5 repetitions  \n\t\tlet letters = {};\n\t\tfor (let i = 0; i < pass.length; i++) {\n\t\t\tletters[pass[i]] = (letters[pass[i]] || 0) + 1;\n\t\t\tscore += 5.0 / letters[pass[i]];\n\t\t}\n\t\t// bonus points for mixing it up  \n\t\tlet variations = {\n\t\t\tdigits: /\\d/.test(pass),\n\t\t\tlower: /[a-z]/.test(pass),\n\t\t\tupper: /[A-Z]/.test(pass),\n\t\t\tnonWords: /\\W/.test(pass),\n\t\t};\n\n\t\tlet variationCount = 0;\n\t\tfor (let check in variations) {\n\t\t\tvariationCount += (variations[check]) ? 1 : 0;\n\t\t}\n\t\tscore += (variationCount - 1) * 10;\n\t\treturn Math.trunc(score);\n\t}\n\n\tprivate getColor(score: number) {\n\t\tlet idx = 0;\n\t\tif (score > 90) {\n\t\t\tidx = 4;\n\t\t} else if (score > 70) {\n\t\t\tidx = 3;\n\t\t} else if (score >= 40) {\n\t\t\tidx = 2;\n\t\t} else if (score >= 20) {\n\t\t\tidx = 1;\n\t\t}\n\t\treturn {\n\t\t\tidx: idx + 1,\n\t\t\tcol: this.colors[idx]\n\t\t};\n\t}\n\n\tngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n\t\tvar password = changes['passwordToCheck'].currentValue;\n\t\tthis.setBarColors(5, '#DDD');\n\t\tif (password) {\n\t\t\tlet c = this.getColor(PasswordStrengthBarComponent.measureStrength(password));\n\t\t\tthis.setBarColors(c.idx, c.col);\n\t\t}\n\t}\n\tprivate setBarColors(count, col) {\n\t\tfor (let _n = 0; _n < count; _n++) {\n\t\t\tthis['bar' + _n] = col;\n\t\t}\n\t}\n\n}  \n","<div style=\"margin: 11px;\" id=\"strength\" #strength>\n    <ul id=\"strengthBar\">\n        <li class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>\n    </ul>\n</div>\n"],"sourceRoot":""}