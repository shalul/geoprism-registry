{"version":3,"sources":["webpack:///./src/app/admin/service/account.service.ts","webpack:///./src/app/admin/service/settings.service.ts","webpack:///./src/app/admin/service/system-logo.service.ts","webpack:///./src/app/admin/component/logo/system-logos.component.ts","webpack:///./src/app/admin/component/logo/system-logo.component.ts","webpack:///./src/app/admin/component/email/email.component.ts","webpack:///./src/app/admin/model/account.ts","webpack:///./src/app/admin/component/account/account.component.ts","webpack:///./src/app/admin/component/account/account-invite.component.ts","webpack:///./src/app/admin/service/email.service.ts","webpack:///./src/app/admin/component/account/accounts.component.ts","webpack:///./src/app/admin/component/settings.component.ts","webpack:///./src/app/admin/service/localization-manager.service.ts","webpack:///./src/app/admin/component/account/role-management.component.html","webpack:///./src/app/admin/component/account/role-management.component.ts","webpack:///./src/app/admin/component/account/account-invite-complete.component.ts","webpack:///./src/app/admin/component/logo/system-logos.component.html","webpack:///./src/app/admin/component/organization/organization-modal.component.ts","webpack:///./src/app/admin/component/localization-manager/new-locale-modal.component.ts","webpack:///./src/app/admin/model/localization-manager.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/component/logo/system-logo.component.html","webpack:///./src/app/admin/component/email/email.component.html","webpack:///./src/app/admin/component/account/accounts.component.html","webpack:///./src/app/shared/pipe/phone.pipe.ts","webpack:///./src/app/admin/component/settings.component.html","webpack:///./src/app/admin/model/settings.ts","webpack:///./src/app/admin/component/account/account.component.html","webpack:///./src/app/admin/component/account/account-invite.component.html","webpack:///./src/app/admin/component/account/account-invite-complete.component.html","webpack:///./src/app/admin/component/organization/organization-modal.component.html","webpack:///./src/app/admin/component/localization-manager/new-locale-modal.component.html","webpack:///./src/app/admin/admin-routing.module.ts"],"names":["http","eventService","page","p","params","HttpParams","set","toString","this","start","get","acp","finally","complete","toPromise","edit","oid","headers","HttpHeaders","post","JSON","stringify","newInstance","organizationCodes","newUserInstance","newInvite","remove","apply","user","roleNames","account","unlock","inviteUser","invite","roleIds","inviteComplete","token","getRolesForUser","userOID","AccountService","getOrganizations","updateOrganization","json","newOrganization","removeOrganization","code","SettingsService","getIcons","SystemLogoService","router","service","modalService","localizeService","changeDetectorRef","message","random","context","ngOnInit","onClickRemove","icon","bsModalRef","show","ConfirmModalComponent","animated","backdrop","ignoreBackdropClick","content","decode","submitText","onConfirm","subscribe","data","then","resp","icons","catch","err","error","SystemLogoComponent","onSuccess","forEach","ico","Math","detectChanges","response","custom","localizedMessage","SystemLogosComponent","route","dropActive","Subject","options","autoUpload","queueLimit","removeAfterUpload","url","uploader","FileUploader","onBeforeUploadItem","fileItem","onCompleteItem","item","status","onSuccessItem","next","hide","onErrorItem","onBuildItemForm","form","append","ngAfterViewInit","that","onAfterAddingFile","uploadElRef","nativeElement","value","reader","FileReader","onload","e","file","result","readAsDataURL","_file","fileOver","cancel","onSubmit","uploadAll","clear","clearQueue","location","email","server","username","password","port","from","to","getInstance","EmailComponent","UserInvite","User","Group","Account","Role","FormattedRoles","FormattedOrganization","FormattedGeoObjectTypeRoleGroup","PageResult","onEdit","onRoleIdsUpdate","event","onChangePassword","changePassword","length","AccountComponent","settingsService","roles","AccountInviteComponent","setting","EmailService","res","resultSet","count","pageNumber","pageSize","updatedUserIndex","map","indexOf","onPageChange","ErrorModalComponent","AccountsComponent","authService","brandingService","organizations","settings","isConfigured","isAdmin","isMaintainer","isContributor","isContributer","installedLocales","getLocales","orgs","getCGRVersion","getVersion","exportLocalization","window","href","onEditOrganization","org","OrganizationModalComponent","organization","isNewOrganization","push","onRemoveOrganization","name","type","ModalTypes","danger","i","splice","newLocalization","NewLocaleModalComponent","configureEmail","inviteUsers","SettingsComponent","getNewLocaleInfo","installLocale","language","country","variant","LocalizationManagerService","EventEmitter","_roleIds","isSRA","_roles","formatRoles","onChangeRole","formattedObj","role","orgCode","ORGANIZATIONS","orgGroup","ORGANIZATIONLABEL","orgLabel","localizedValue","RA","addToGeoObjectTypeGroup","geoObjectTypeGroup","geoObjectTypeLabel","assigned","ENABLEDROLE","GEOOBJECTTYPEROLES","newObj","SRA","sortRoles","gotrole","GEOOBJECTTYPEROLESGROUP","sort","a","b","console","log","RegistryRoleType","exists","rg","GEOOBJECTTYPELABEL","onToggleOrgRA","onToggleSRA","newRoleIds","emit","removeRoleId","id","pos","showData","RoleManagementComponent","sub","AccountInviteCompleteComponent","lService","label","create","contactInfo","localizationManagerService","allLocaleInfo","AllLocaleInfo","allLocaleInfoIN","submit","LocaleInfo","Locale","AdminModule","transform","args","formatNumber","phone","PhonePipe","Settings","Organization","Localization","Brand","Email","title","AuthGuard","AdminRoutingModule"],"mappings":"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","file":"2.chunk.js","sourcesContent":["///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/finally';\n\nimport { EventService } from '../../shared/service/event.service'\nimport { MessageContainer } from '../../shared/model/core';\n\nimport { Account, User, PageResult, UserInvite } from '../model/account';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class AccountService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    page( p: number ): Promise<PageResult> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'number', p.toString() );\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult>( acp + '/account/page', { params: params } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    edit( oid: string ): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/registryaccount/edit', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    newInstance(organizationCodes: string): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/registryaccount/newInstance', JSON.stringify( {\"organizationCodes\": organizationCodes} ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    newUserInstance(): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<User>( acp + '/registryaccount/newUserInstance', JSON.stringify( {} ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    newInvite(): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/registryaccount/newInvite', JSON.stringify( {} ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    remove( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/account/remove', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    apply( user: User, roleNames: string[] ): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<User>( acp + '/registryaccount/apply', JSON.stringify( { account: user, roleNames: roleNames } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    unlock( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/account/unlock', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    inviteUser( invite: UserInvite, roleIds: string[] ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n//        console.log( \"Submitting to inviteUser : \", JSON.stringify( { invite: invite, roleIds: roleIds } ) );\n\n        return this.http\n            .post<void>( acp + '/registryaccount/inviteUser', JSON.stringify( { invite: invite, roleIds: roleIds } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    inviteComplete( user: User, token: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/registryaccount/inviteComplete', JSON.stringify( { user: user, token: token } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    getRolesForUser( userOID: string ): Promise<any> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'userOID', userOID );\n\n        this.eventService.start();\n\n        return this.http\n            .get<any>( acp + '/cgr/account/get-roles-for-user', { params: params } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/finally';\n\nimport { EventService } from '../../shared/service/event.service'\nimport { MessageContainer } from '../../shared/model/core';\n\nimport { Account, User, PageResult, UserInvite } from '../model/account';\nimport { Settings, Organization } from '../model/settings'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SettingsService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    getOrganizations(): Promise<Organization[]> {\n\n        this.eventService.start();\n    \n        return this.http\n            .get<Organization[]>(acp + '/cgr/organizations/get-all')\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    updateOrganization( json: any ): Promise<Organization> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Organization>( acp + '/cgr/orgainization/update', JSON.stringify( { json: json } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    newOrganization(json: any ): Promise<any> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>( acp + '/cgr/orgainization/create', JSON.stringify( { json: json } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    removeOrganization(code: any ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>( acp + '/cgr/orgainization/delete', JSON.stringify( { code: code } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service'\n\nimport { SystemLogo } from '../model/system-logo';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SystemLogoService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    getIcons(): Promise<{ icons: SystemLogo[] }> {\n        this.eventService.start();\n\n        return this.http\n            .get<{ icons: SystemLogo[] }>( acp + '/logo/getAll' )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    remove( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/logo/remove', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ConfirmModalComponent } from '../../../shared/component/modals/confirm-modal.component';\nimport { LocalizationService } from '../../../shared/service/localization.service';\n\nimport { SystemLogoComponent } from './system-logo.component'\n\nimport { SystemLogo } from '../../model/system-logo';\nimport { SystemLogoService } from '../../service/system-logo.service';\n\ndeclare let acp: string;\n\n@Component({\n  \n  selector: 'system-logos',\n  templateUrl: './system-logos.component.html',\n  styleUrls: []\n})\nexport class SystemLogosComponent implements OnInit {\n  public icons: SystemLogo[];\n  context: string;\n  bsModalRef: BsModalRef;\n  message: string = null;\n  random = 0;\n\n  constructor(\n    private router: Router,\n    private service: SystemLogoService,\n    private modalService: BsModalService,\n    private localizeService: LocalizationService,\n    private changeDetectorRef: ChangeDetectorRef\n    ) {\n\n    this.context = acp as string;\n  }\n\n  ngOnInit(): void {\n    this.getIcons();\n  }\n\n  onClickRemove(icon) : void {\n    this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n        animated: true,\n        backdrop: true,\n        ignoreBackdropClick: true,\n    } );\n    this.bsModalRef.content.message = this.localizeService.decode( \"system.image.removeContent\" );\n    this.bsModalRef.content.submitText = this.localizeService.decode( \"modal.button.delete\" );\n\n    this.bsModalRef.content.onConfirm.subscribe( data => {\n      this.remove(icon);\n    } );\n  }\n\n  getIcons(): void {\n    this.service.getIcons().then(resp => {\n\n      this.icons = resp.icons;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n\n  edit(icon: SystemLogo): void {\n    // this.router.navigate(['/admin/logo', icon.oid]);\n\n    let bsModalRef = this.modalService.show( SystemLogoComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n\n        bsModalRef.content.icon = icon;\n\n        bsModalRef.content.onSuccess.subscribe( data => {\n\n          this.icons.forEach(ico => {\n\n            // Setting a random number at the end of the url is a hack to change \n            // the image url to force Angular to rerender the image.\n            this.random = Math.random();\n\n            ico.oid = ico.oid\n          })\n\n          this.changeDetectorRef.detectChanges();\n        })\n  }\n\n  remove(icon: SystemLogo): void {\n    this.service.remove(icon.oid).then(response => {\n      icon.custom = false;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n\n  error( err: HttpErrorResponse ): void {\n    // Handle error\n    if ( err !== null ) {\n      this.message = ( err.error.localizedMessage || err.error.message || err.message );\n    }\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, Inject, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { Subject } from 'rxjs/Subject';\n\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload/ng2-file-upload';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { EventService } from '../../../shared/service/event.service';\nimport { SystemLogoService } from '../../service/system-logo.service';\nimport { SystemLogo } from '../../model/system-logo';\n\ndeclare var acp: any;\n\n@Component( {\n\n    selector: 'system-logo',\n    templateUrl: './system-logo.component.html',\n    styles: []\n} )\nexport class SystemLogoComponent implements OnInit {\n    message: string = null;\n    icon: SystemLogo;\n\n    public uploader: FileUploader;\n    public dropActive: boolean = false;\n\n    file: any;\n    context: string;\n\n    @ViewChild( 'uploadEl' )\n    private uploadElRef: ElementRef;\n\n    public onSuccess: Subject<any>;\n\n\n    constructor( private route: ActivatedRoute,\n        private eventService: EventService,\n        public bsModalRef: BsModalRef )\n        {\n            this.context = acp as string;\n        }\n\n    ngOnInit(): void {\n\n        this.onSuccess = new Subject();\n\n        let options: FileUploaderOptions = {\n            autoUpload: false,\n            queueLimit: 1,\n            removeAfterUpload: true,\n            url: acp + '/logo/apply'\n        };\n\n        this.uploader = new FileUploader( options );\n\n        this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n            this.eventService.start();\n        };\n        this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n            this.eventService.complete();\n        };\n        this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.onSuccess.next( item );\n            this.bsModalRef.hide();\n        };\n        this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.error( response );\n        };\n        this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n            form.append( 'oid', this.icon.oid );\n        };\n    }\n\n    ngAfterViewInit() {\n        let that = this;\n\n        this.uploader.onAfterAddingFile = ( item => {\n            this.uploadElRef.nativeElement.value = '';\n\n            let reader = new FileReader();\n            reader.onload = function( e: any ) {\n                that.file = reader.result;\n            };\n            reader.readAsDataURL( item._file );\n        } );\n    }\n\n    fileOver( e: any ): void {\n        this.dropActive = e;\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n    }\n\n    onSubmit(): void {\n        if( this.file == null ) {\n            this.bsModalRef.hide();\n        }\n        else {\n            this.uploader.uploadAll();\n        }\n    }\n\n    clear(): void {\n        this.file = null;\n\n        this.uploader.clearQueue()\n    }\n\n    error( err: string ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = err;\n        }\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subject } from 'rxjs/Subject';\n\n\nimport { Email } from '../../model/email';\nimport { EmailService } from '../../service/email.service';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n\n@Component({\n\n  selector: 'email',\n  templateUrl: './email.component.html',\n  styleUrls: []\n})\nexport class EmailComponent implements OnInit {\n  message: string = null;\n  public email: Email = {\n    oid: '',\n    server: '',\n    username: '',\n    password: '',\n    port: 0,\n    from: '',\n    to: '',\n  };\n\n  public onSuccess: Subject<any>;\n\n  constructor(\n    private service: EmailService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    public bsModalRef: BsModalRef) {\n  }\n\n  ngOnInit(): void {\n    this.service.getInstance().then(email => {\n      this.email = email;\n    });\n\n    this.onSuccess = new Subject();\n  }\n\n  cancel(): void {\n    this.bsModalRef.hide();\n  }\n\n  onSubmit(): void {\n    this.service.apply(this.email)\n      .then(email => {\n        this.onSuccess.next(true);\n        this.bsModalRef.hide();\n      })\n      .catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n  }\n\n  error(err: HttpErrorResponse): void {\n    // Handle error\n    if (err !== null) {\n      this.message = (err.error.localizedMessage || err.error.message || err.message);\n    }\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nexport class UserInvite {\n  email: string;\n  roles: any;\n}\n\nexport class User {\n  oid: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phoneNumber: string;\n  inactive: boolean;\n  newInstance: boolean;\n  roles: string[];\n}\n\n// export class Role {\n//   roleId:string;\n//   displayLabel:string;\n//   assigned:boolean;\n// }\n\nexport class Group {\n  name:string;\n  assigned:string;\n  roles:Role[];\n}\n\nexport class Account {\n  user:User;\n  roles: any;\n  changePassword:boolean;\n}\n\nexport class Role {\n  type:string;\n  name:string;\n  label:any;\n  orgCode:string;\n  orgLabel:any;\n  geoObjectTypeCode:string;\n  geoObjectTypeLabel: any;\n  assigned: boolean;\n}\n\nexport class FormattedRoles {\n  SRA: Role;\n  ORGANIZATIONS: FormattedOrganization[];\n}\n\nexport class FormattedOrganization {\n  ORGANIZATIONLABEL: any;\n  RA: Role;\n  GEOOBJECTTYPEROLES: FormattedGeoObjectTypeRoleGroup[];\n}\n\nexport class FormattedGeoObjectTypeRoleGroup {\n  ENABLEDROLE: string;\n  GEOOBJECTTYPELABEL: any;\n  GEOOBJECTTYPEROLESGROUP: Role[];\n}\n\nexport class PageResult {\n  count: number;\n  pageNumber: number;\n  pageSize: number;\n  resultSet: User[];\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Location } from '@angular/common';\nimport 'rxjs/add/operator/switchMap';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { Subject } from 'rxjs/Subject';\n\nimport { RoleManagementComponent } from './role-management.component';\n\nimport { Account, User, Role } from '../../model/account';\nimport { AccountService } from '../../service/account.service';\nimport { LocalizationService } from '../../../shared/service/localization.service';\nimport { Localization } from '../../model/settings';\n\n@Component( {\n    selector: 'account',\n    templateUrl: './account.component.html',\n    styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}'],\n    styleUrls: ['./account.css']\n} )\nexport class AccountComponent implements OnInit {\n\n    message: string = null;\n    account: Account;\n    roles: Role[];\n    roleIds: string[] = [];\n\n    @Input()\n    set oid( oid: string ) {\n        if ( oid === 'NEW' ) {\n            this.service.newInstance(\"\").then( data => {\n                this.account = data;\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n        else if ( oid ) {\n            this.service.edit( oid ).then( data => {\n                this.account = data;\n\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n    }\n\n    public onEdit: Subject<User>;\n\n    constructor(\n        private service: AccountService,\n        private location: Location,\n        public bsModalRef: BsModalRef,\n        private localizeService: LocalizationService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.onEdit = new Subject();\n    }\n\n    onRoleIdsUpdate(event): void {\n        this.roleIds = event;\n    }\n\n\n    cancel(): void {\n        if ( this.account.user.newInstance === true ) {\n            this.bsModalRef.hide();\n        }\n        else {\n            this.service.unlock( this.account.user.oid ).then( response => {\n                this.bsModalRef.hide();\n            } );\n        }\n    }\n\n    onChangePassword(): void {\n        this.account.changePassword = !this.account.changePassword;\n    }\n\n    onSubmit(): void {\n\n        if ( !this.account.changePassword && !this.account.user.newInstance ) {\n            delete this.account.user.password;\n        }\n\n        if (this.roleIds.length > 0) {\n            this.service.apply(this.account.user, this.roleIds).then(data => {\n                this.onEdit.next(data);\n                this.bsModalRef.hide();\n            }).catch((err: HttpErrorResponse) => {\n                this.error(err);\n            });\n        }\n        else{\n            this.message = this.localizeService.decode(\"account.role.management.roles.required.message\");\n        }\n    }\n\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { Account, UserInvite } from '../../model/account';\nimport { Organization } from '../../model/settings';\n\nimport { SettingsService } from '../../service/settings.service'\nimport { AccountService } from '../../service/account.service';\nimport { AccountComponent } from './account.component';\n\n\n@Component( {\n    selector: 'account-invite',\n    templateUrl: './account-invite.component.html',\n    styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n} )\nexport class AccountInviteComponent implements OnInit {\n    invite: UserInvite;\n    message: string = null;\n    roleIds: string[] = [];\n    organization: Organization;\n    organizations: Organization[];\n\n    constructor(\n        private service: AccountService,\n        private route: ActivatedRoute,\n        private location: Location,\n        public bsModalRef: BsModalRef,\n        public settingsService: SettingsService ) {\n    }\n\n    ngOnInit(): void {\n      this.invite = new UserInvite();\n  \n      this.service.newInvite().then(( account: Account ) => {\n        this.invite.roles = account.roles;\n      } ).catch(( err: HttpErrorResponse ) => {\n        this.error( err );\n      } );\n  \n      // this.settingsService.getOrganizations().then(orgs => {\n      //     this.organizations = orgs\n      // }).catch((err: HttpErrorResponse) => {\n      //     this.error(err);\n      // });\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n    }\n    \n    onRoleIdsUpdate(event): void {\n      this.roleIds = event;\n    }\n\n    onSubmit(): void {\n        this.service.inviteUser( this.invite, this.roleIds ).then( response => {\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n    }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service'\n\nimport { Email } from '../model/email';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class EmailService {\n  \n  constructor(private http: HttpClient, private eventService: EventService) {\n  }\n  \n  getInstance(): Promise<Email> {\n    \n    this.eventService.start();\n    \n    return this.http\n      .get<Email>(acp + '/email/getInstance')\n      .finally(() => {\n        this.eventService.complete();\n      } )\n      .toPromise();\n  }  \n  \n  apply(email:Email): Promise<Email> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    \n    this.eventService.start();\n  \n    return this.http\n      .post<Email>(acp + '/email/apply', JSON.stringify({setting:email}), {headers: headers})\n      .finally(() => {\n        this.eventService.complete();\n      } )\n      .toPromise();\n  }  \n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ConfirmModalComponent } from '../../../shared/component/modals/confirm-modal.component';\nimport { ErrorModalComponent } from '../../../shared/component/modals/error-modal.component';\nimport { LocalizationService } from '../../../shared/service/localization.service';\n\nimport { User, PageResult, Account } from '../../model/account';\nimport { AccountService } from '../../service/account.service';\nimport { AccountComponent } from './account.component';\nimport { AccountInviteComponent } from './account-invite.component';\n\ndeclare let acp: string;\n\n@Component( {\n    selector: 'accounts',\n    templateUrl: './accounts.component.html',\n    styleUrls: ['./accounts.css']\n} )\nexport class AccountsComponent implements OnInit {\n    res: PageResult = {\n        resultSet: [],\n        count: 0,\n        pageNumber: 1,\n        pageSize: 10\n    };\n    bsModalRef: BsModalRef;\n    message: string = null;\n\n    constructor(\n        private router: Router,\n        private service: AccountService,\n        private modalService: BsModalService,\n        private localizeService: LocalizationService\n    ) { }\n\n    ngOnInit(): void {\n        this.service.page( 1 ).then( res => {\n            this.res = res;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n\n    edit( user: User ): void {\n        // this.router.navigate(['/admin/account', user.oid]);\n\n        this.bsModalRef = this.modalService.show( AccountComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n        this.bsModalRef.content.oid = user.oid;\n\n        let that = this;\n        ( <AccountComponent>this.bsModalRef.content ).onEdit.subscribe( data => {\n            let updatedUserIndex = that.res.resultSet.map(\n                function( e ) { return e.oid; }\n            ).indexOf( data.oid );\n\n            if ( updatedUserIndex !== -1 ) {\n                that.res.resultSet[updatedUserIndex] = data;\n            }\n        } );\n    }\n\n    newInstance(): void {\n        // this.router.navigate(['/admin/account', 'NEW']);\n\n        this.bsModalRef = this.modalService.show( AccountComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n        this.bsModalRef.content.oid = 'NEW';\n\n        let that = this;\n        this.bsModalRef.content.onEdit.subscribe( data => {\n            this.onPageChange( this.res.pageNumber );\n        } );\n\n    }\n\n    onPageChange( pageNumber: number ): void {\n        this.service.page( pageNumber ).then( res => {\n            this.res = res;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            // TODO: add error modal\n            this.bsModalRef = this.modalService.show( ErrorModalComponent, { backdrop: true } );\n            this.bsModalRef.content.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ConfirmModalComponent } from '../../shared/component/modals/confirm-modal.component';\nimport { ErrorModalComponent } from '../../shared/component/modals/error-modal.component';\nimport { LocalizationService } from '../../shared/service/localization.service';\n\nimport { User, PageResult, Account } from '../model/account';\nimport { AccountService } from '../service/account.service';\nimport { AccountComponent } from './account/account.component';\nimport { AccountInviteComponent } from './account/account-invite.component';\nimport { EmailComponent } from './email/email.component'\nimport { OrganizationModalComponent } from './organization/organization-modal.component'\nimport { NewLocaleModalComponent } from './localization-manager/new-locale-modal.component';\n\nimport { SettingsService } from '../service/settings.service';\nimport { Settings, Organization } from '../model/settings';\nimport { LocaleInfo, AllLocaleInfo, Locale } from '../model/localization-manager';\n\nimport { SystemLogo } from '../model/system-logo';\nimport { SystemLogoService } from '../service/system-logo.service';\nimport { AuthService } from '../../shared/service/auth.service';\nimport { ModalTypes } from '../../shared/model/modal';\n\n\ndeclare let acp: string;\n\n@Component( {\n    selector: 'settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.css']\n} )\nexport class SettingsComponent implements OnInit {\n    bsModalRef: BsModalRef;\n    message: string = null;\n    organizations: Organization[] = [];\n    installedLocales: Locale[]; // TODO: this should be from the localizaiton-manager model\n    isAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    settings: Settings = {email: {isConfigured: false}}\n\n    constructor(\n        private router: Router,\n        private modalService: BsModalService,\n        private localizeService: LocalizationService,\n        private settingsService:  SettingsService,\n        private authService: AuthService,\n        private brandingService: SystemLogoService\n    ) {\n        this.isAdmin = authService.isAdmin();\n        this.isMaintainer = this.isAdmin || authService.isMaintainer();\n        this.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n     }\n\n    ngOnInit(): void {\n\n        // this.registryService.getLocales().then( locales => {\n        //     this.localizeService.setLocales( locales );\n        // } ).catch(( err: HttpErrorResponse ) => {\n        //     this.error( err );\n        // } );\n\n        this.installedLocales = this.getLocales();\n\n        this.settingsService.getOrganizations().then(orgs => {\n            this.organizations = orgs\n        }).catch((err: HttpErrorResponse) => {\n            this.error(err);\n        });\n\n    }\n\n\n    public getCGRVersion(): string {\n        return this.authService.getVersion();\n    }\n\n    public getLocales(): Locale[] {\n        return this.authService.getLocales();\n    }\n\n    exportLocalization() {\n        //this.localizationManagerService.exportLocalization();\n        window.location.href = acp + \"/localization/exportSpreadsheet\";\n    }\n\n    public onEditOrganization(org: Organization): void {\n        let bsModalRef = this.modalService.show( OrganizationModalComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n\n        bsModalRef.content.organization = org;\n        bsModalRef.content.isNewOrganization = false;\n\n        bsModalRef.content.onSuccess.subscribe( data => {\n            this.organizations.push(data);\n        })\n    }\n\n    public onRemoveOrganization(code: string, name: string): void {\n\n        this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + name + ']';\n        this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n        this.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n            // this.settingsService.removeOrganization(code);\n            \n            this.settingsService.removeOrganization(code).then(response => {\n\t\t\t\tfor(let i = this.organizations.length - 1; i >= 0; i--) {\n                    if(this.organizations[i].code === code){\n                        this.organizations.splice(i, 1);\n                    }\n                }\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n            });\n            \n        });\n    }\n\n    public newOrganization(): void {\n        let bsModalRef = this.modalService.show( OrganizationModalComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n\n        bsModalRef.content.isNewOrganization = true;\n\n         bsModalRef.content.onSuccess.subscribe( data => {\n            this.organizations.push(data);\n         })\n    }\n\n    \n    public newLocalization(): void {\n\n        let bsModalRef = this.modalService.show( NewLocaleModalComponent, { \n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true\n        } );\n\n        bsModalRef.content.onSuccess.subscribe( data => {\n            this.installedLocales.push(data);\n        })\n    }\n\n    public configureEmail(): void {\n        this.bsModalRef = this.modalService.show( EmailComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n\n         this.bsModalRef.content.onSuccess.subscribe( data => {\n            this.settings.email.isConfigured = data\n         })\n    }\n\n    inviteUsers(): void {\n        // this.router.navigate(['/admin/invite']);\t  \n\n        this.bsModalRef = this.modalService.show( AccountInviteComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n\n        this.bsModalRef.content.organization = null;\n    }\n\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            // TODO: add error modal\n            this.bsModalRef = this.modalService.show( ErrorModalComponent, { backdrop: true } );\n            this.bsModalRef.content.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service';\n\nimport { AllLocaleInfo } from '../model/localization-manager';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n\n    getNewLocaleInfo(): Promise<AllLocaleInfo> {\n        return this.http\n            .get<AllLocaleInfo>( acp + '/localization/getNewLocaleInformation' )\n            .toPromise();\n    }\n\n    installLocale( language: string, country: string, variant: string ): Promise<void> {\n        let params: HttpParams = new HttpParams();\n\n        if ( language != null ) {\n            params = params.set( 'language', language );\n        }\n\n        if ( country != null ) {\n            params = params.set( 'country', country );\n        }\n\n        if ( variant != null ) {\n            params = params.set( 'variant', variant );\n        }\n\n        return this.http\n            .get<void>( acp + '/localization/installLocale', { params: params } )\n            .toPromise();\n    }\n\n}\n","<div>\n\n  <message></message>\n\n  <loading-bar></loading-bar>\n  <form>\n    <fieldset>\n      \n      <div *ngIf=\"_roles\">\n\n        <!-- SRA -->\n        <div *ngIf=\"_roles.SRA\" class=\"row\" style=\"padding: 20px;\">\n          <div class=\"col-sm-12\">\n            <boolean-field [(value)]=\"_roles.SRA.assigned\" (change)=\"onToggleSRA($event, _roles.SRA)\"\n              [label]=\"_roles.SRA.label.localizedValue\" [disable]=\"!isSRA\"></boolean-field>\n          </div>\n        </div>\n\n        <div *ngFor=\"let org of _roles.ORGANIZATIONS\" class=\"row-holder\">\n\n          <div class=\"heading\">\n            <h4>{{org.ORGANIZATIONLABEL}}</h4>\n          </div>\n\n\n          <!-- Organization administrator -->\n          <div *ngIf=\"org.RA\" class=\"row\" style=\"padding: 20px;\">\n            <div class=\"col-sm-12\">\n              <boolean-field [(value)]=\"org.RA.assigned\" (change)=\"onToggleOrgRA($event, org)\"\n                [label]=\"org.RA.label.localizedValue\" [disable]=\"_roles.SRA.assigned\"></boolean-field>\n            </div>\n          </div>\n\n          <!-- Organization GeoObjectTypes -->\n          <div class=\"row\">\n            <div class=\"col-sm-12 org-container\" style=\"padding-left:50px;padding-right:50px;\">\n\n              <fieldset [disabled]=\"(org.RA && org.RA.assigned) || _roles.SRA.assigned\">\n                <div *ngFor=\"let roleGroup of org.GEOOBJECTTYPEROLES; let i = index\">\n              \n                  <div class=\"heading\">\n                    <h4>{{roleGroup.GEOOBJECTTYPELABEL}}</h4>\n                  </div>\n              \n                  <label class=\"radio\" *ngFor=\"let role of roleGroup.GEOOBJECTTYPEROLESGROUP\">\n                    <input type=\"radio\" [value]=\"role.name\" (change)=\"onChangeRole()\" [(ngModel)]=\"roleGroup.ENABLEDROLE\"\n                      [name]=\"role.orgCode + role.geoObjectTypeCode\" >\n                    <span style=\"font-weight: 400;\">{{role.label.localizedValue}}</span>\n                  </label>\n              \n                </div>\n              </fieldset>\n\n            </div>\n          </div>\n\n        </div> <!-- End organizations row -->\n\n      </div>\n\n    </fieldset>\n  </form>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Location } from '@angular/common';\nimport 'rxjs/add/operator/switchMap';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { Subject } from 'rxjs/Subject';\n\nimport { AccountService } from '../../service/account.service';\nimport { AuthService } from '../../../shared/service/auth.service';\n\nimport { Account, User, Role, FormattedRoles, FormattedOrganization, FormattedGeoObjectTypeRoleGroup } from '../../model/account';\nimport { Organization } from '../../model/settings';\nimport { RegistryRoleType } from '../../../shared/model/core';\n\n@Component( {\n    selector: 'role-management',\n    templateUrl: './role-management.component.html',\n    styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}'],\n    styleUrls: ['./role-management.css']\n} )\nexport class RoleManagementComponent implements OnInit {\n\n    message: string = null;\n    isAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    isSRA: boolean;\n\n    _roles: FormattedRoles;\n\n    @Input('roles')\n    set roles(data: any){\n        if(data){\n            this._roles = this.formatRoles(data);\n            this.onChangeRole();\n        }\n    }\n\n    @Output() onRoleIdsUpdate = new EventEmitter();\n\n    _roleIds: string[] = [];\n    @Input() newInstance: boolean = true;\n\n\n    constructor(\n        public bsModalRef: BsModalRef, private authService: AuthService\n    ) {\n\n        this.isSRA = authService.isSRA();\n        this.isAdmin = authService.isAdmin();\n        this.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    formatRoles(roles: Role[]): any {\n\n        let formattedObj: FormattedRoles = { \"SRA\":null, \"ORGANIZATIONS\":[] };\n\n        roles.forEach(role => {\n            \n            // If orgCode exists this is NOT an SRA\n            if(role.orgCode){\n\n                let addedToGroup = false;\n\n                formattedObj.ORGANIZATIONS.forEach(orgGroup => {\n\n                    if (orgGroup.ORGANIZATIONLABEL === role.orgLabel.localizedValue) {\n\n                        if (role.type === \"RA\") {\n                            orgGroup.RA = role;\n                        }\n                        else {\n\n                            let added = this.addToGeoObjectTypeGroup(orgGroup, role);\n\n                            if (!added) {\n                                let geoObjectTypeGroup: FormattedGeoObjectTypeRoleGroup = { \"GEOOBJECTTYPEROLESGROUP\": [role], \"ENABLEDROLE\": \"\", \"GEOOBJECTTYPELABEL\": role.geoObjectTypeLabel.localizedValue };\n                                \n                                if(role.assigned){\n                                    geoObjectTypeGroup.ENABLEDROLE = role.name\n                                }\n                                \n                                orgGroup.GEOOBJECTTYPEROLES.push(geoObjectTypeGroup);\n                            }\n                        }\n\n                        addedToGroup = true;\n                    }\n\n                });\n\n\n                // The organization hasn't been created yet\n                if(!addedToGroup){\n\n                    let newObj: FormattedOrganization = { \"ORGANIZATIONLABEL\" : null, \"RA\" : null, \"GEOOBJECTTYPEROLES\" : [] };\n\n                    if(role.type === \"RA\"){\n                        newObj.ORGANIZATIONLABEL = role.orgLabel.localizedValue;\n                        newObj.RA = role;\n                    }\n                    else{\n                        newObj.ORGANIZATIONLABEL = role.orgLabel.localizedValue;\n\n                        let geoObjectTypeGroup: FormattedGeoObjectTypeRoleGroup = { \"GEOOBJECTTYPEROLESGROUP\": [role], \"ENABLEDROLE\": \"\", \"GEOOBJECTTYPELABEL\": role.geoObjectTypeLabel.localizedValue };\n\n                        if (role.assigned) {\n                            geoObjectTypeGroup.ENABLEDROLE = role.name\n                        }\n\n                        newObj.GEOOBJECTTYPEROLES.push(geoObjectTypeGroup);\n                    }\n\n                    formattedObj.ORGANIZATIONS.push(newObj)\n                }\n            }\n            else if(role.type === \"SRA\"){\n                formattedObj.SRA = role;\n            }\n        })\n\n        this.sortRoles(formattedObj);\n\n        return formattedObj;\n    }\n\n    sortRoles(roles: FormattedRoles): void {\n        roles.ORGANIZATIONS.forEach(org => {\n            org.GEOOBJECTTYPEROLES.forEach(gotrole => {\n                gotrole.GEOOBJECTTYPEROLESGROUP.sort((a, b) => {\n                    console.log(RegistryRoleType[a.type])\n                    if (RegistryRoleType[a.type] < RegistryRoleType[b.type]) return -1;\n                    if (RegistryRoleType[a.type] > RegistryRoleType[b.type]) return 1;\n                    return 0;\n                });\n            })\n        });\n\n\n    }\n\n    addToGeoObjectTypeGroup(organization: FormattedOrganization, role: Role): boolean {\n        let exists = false;\n        organization.GEOOBJECTTYPEROLES.forEach(rg => {\n            if (rg.GEOOBJECTTYPELABEL === role.geoObjectTypeLabel.localizedValue) {\n\n                if (role.assigned) {\n                    rg.ENABLEDROLE = role.name\n                }\n\n                rg.GEOOBJECTTYPEROLESGROUP.push(role);\n\n                exists = true;\n            }\n        });\n\n        return exists;\n    }\n\n    onToggleOrgRA(event: any, organization: FormattedOrganization): void {\n\n        organization.RA.assigned = event;\n\n        // Disable all GeoObjectType radio buttons in this organization\n        if(organization.RA.assigned){\n            organization.GEOOBJECTTYPEROLES.forEach(rg => {\n                rg.ENABLEDROLE = \"\";\n            });\n        }\n\n        this.onChangeRole();\n    }\n\n    onToggleSRA(event: any, role: Role): void {\n\n      this._roles.ORGANIZATIONS.forEach(org => {\n            org.GEOOBJECTTYPEROLES.forEach(rg => {\n                rg.ENABLEDROLE = \"\";\n            });\n      })\n\n      this.onChangeRole();\n    }\n\n    onChangeRole(): void {\n\n        let newRoleIds: string[] = [];\n\n        this._roles.ORGANIZATIONS.forEach(orgGroup => {\n\n            if (orgGroup.RA && orgGroup.RA.assigned) {\n                newRoleIds.push(orgGroup.RA.name);\n            }\n            // If organization RA is enabled we don't add GeoObjectType level roles\n            else {\n                orgGroup.GEOOBJECTTYPEROLES.forEach(rg => {\n                    if (rg.ENABLEDROLE && rg.ENABLEDROLE.length > 0) {\n                        // add GeoObjectType level role selected\n                        newRoleIds.push(rg.ENABLEDROLE);\n                    }\n                });\n            }\n        });\n        \n        if (this._roles.SRA.assigned)\n        {\n          newRoleIds.push(this._roles.SRA.name);\n        }\n\n        this._roleIds = newRoleIds;\n        this.onRoleIdsUpdate.emit(this._roleIds);\n    }\n\n    removeRoleId(id: string): void {\n\n        let pos = this._roleIds.indexOf(id);\n        if(pos !== -1){\n            this._roleIds.splice(pos, 1);\n        }\n\n        this.onRoleIdsUpdate.emit(JSON.stringify(this._roleIds));\n    }\n\n    showData(){\n        console.log(this._roles)\n    }\n\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { User, PageResult, Account } from '../../model/account';\nimport { AccountService } from '../../service/account.service';\n\ndeclare let acp: string;\n\n@Component({\n  selector: 'account-invite-complete',\n  templateUrl: './account-invite-complete.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteCompleteComponent implements OnInit {\n  user:User;\n  private sub: any;\n  token: string;\n  message: string = null;\n  \n  constructor(\n    private service:AccountService,\n    private route:ActivatedRoute,\n    private location:Location) {\n  }\n\n  ngOnInit(): void {\n    this.service.newUserInstance().then((user:User) => {\n      this.user = user;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n    \n    this.sub = this.route.params.subscribe(params => {\n       this.token = params['token'];\n    });\n  }\n  \n  cancel(): void {\n    window.location.href = acp;\n  } \n  \n  onSubmit(): void {\n    this.service.inviteComplete(this.user, this.token).then(response => {\n      window.location.href = acp;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }  \n  \n  error( err: HttpErrorResponse ): void {\n    // Handle error\n    if ( err !== null ) {\n      this.message = ( err.error.localizedMessage || err.error.message || err.message );\n    }\n  }\n}","<div>\n\n\n  <!-- <message ></message> -->\n  \n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n  \n  <div class=\"list-table-wrapper\">\n    <table id=\"manage-icons-table\" class=\"list-table table table-bordered table-striped\">        \n      <thead>\n        <tr>\n          <th></th>\n          <th class=\"label-column\"><localize key='system.image.label'></localize></th>\n          <th class=\"label-column\"><localize key='system.image.preview'></localize></th>\n        </tr>\n      </thead>    \n      <tbody>\n        <tr *ngFor=\"let icon of icons\" class=\"fade-ngRepeat-item\">\n          <td class=\"button-column\">\n            <span>\n              <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(icon)\" [title]=\"'system.image.editTooltip' | localize\"></a>\n              <a *ngIf=\"icon.custom\" class=\"fa fa-trash-o ico-remove\" [title]=\"'system.image.removeTooltip' | localize\"\n                 (click)=\"onClickRemove(icon, $event)\"></a>\n            </span>\n          </td>\n          <td class=\"label-column\">{{ icon.label }}</td>\n          <td class=\"icon-thumbnail-column\">\n            <img style=\"width:42px;height:42px;\" class=\"thumb\" [src]=\"context + '/logo/view?oid=' + icon.oid + '&random=' + random\" alt=\"Icon\">\n          </td>\n        </tr>      \n      </tbody>    \n    </table>\n  </div>\n  \n  <div *ngIf=\"icons === null\" ><localize key='dataset.loadingData'></localize></div>\n\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Location } from '@angular/common';\nimport 'rxjs/add/operator/switchMap';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { Subject } from 'rxjs/Subject';\n\nimport { Account, User } from '../../model/account';\nimport { Organization } from '../../model/settings';\nimport { SettingsService } from '../../service/settings.service';\nimport { LocalizationService } from '../../../shared/service/localization.service';\n\n@Component( {\n    selector: 'organization-modal',\n    templateUrl: './organization-modal.component.html',\n    styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n} )\nexport class OrganizationModalComponent implements OnInit {\n\n    message: string = null;\n    organization: Organization = {code: \"\", label: this.lService.create(), contactInfo: this.lService.create()};\n    isNewOrganization: boolean = true;\n\n    public onSuccess: Subject<Organization>;\n\n    constructor(\n        private service: SettingsService,\n        public bsModalRef: BsModalRef,\n        private lService: LocalizationService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.onSuccess = new Subject();\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n    }\n\n    onSubmit(): void {\n        if(this.isNewOrganization){\n            this.service.newOrganization( this.organization ).then( data => {\n                this.onSuccess.next( data );\n                this.bsModalRef.hide();\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n        else {\n            this.service.updateOrganization( this.organization ).then( data => {\n                this.onSuccess.next( data );\n                this.bsModalRef.hide();\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n    }\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n\n}","import { Component, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { LocalizationManagerService } from '../../service/localization-manager.service';\nimport { EventService } from '../../../shared/service/event.service';\nimport { AllLocaleInfo } from '../../model/localization-manager';\nimport { ErrorModalComponent } from '../../../shared/component/modals/error-modal.component';\n\n@Component({\n  selector: 'new-locale-modal',\n  templateUrl: './new-locale-modal.component.html',\n  styleUrls: []\n})\nexport class NewLocaleModalComponent {\n\n  allLocaleInfo: AllLocaleInfo;\n  language: string;\n  country: string;\n  variant: string;\n\n  public onSuccess: Subject<any>;\n\n  constructor(public bsModalRef: BsModalRef,\n    private localizationManagerService: LocalizationManagerService,\n    private eventService: EventService,\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit(): void {\n    this.allLocaleInfo = new AllLocaleInfo();\n\n    this.localizationManagerService.getNewLocaleInfo()\n      .then(allLocaleInfoIN => {\n        this.allLocaleInfo = allLocaleInfoIN;\n        this.eventService.complete();\n      }).catch((err: HttpErrorResponse) => {\n        console.log(err);\n\n        this.bsModalRef.hide();\n        this.eventService.complete();\n        this.error(err);\n      });\n\n    this.onSuccess = new Subject();\n  }\n\n  submit(): void {\n    this.eventService.start();\n\n    this.localizationManagerService.installLocale(this.language, this.country, this.variant)\n      .then(() => {\n        this.onSuccess.next(this.language);\n        this.eventService.complete();\n        this.bsModalRef.hide();\n      }).catch((err: HttpErrorResponse) => {\n        console.log(err);\n\n        this.bsModalRef.hide();\n        this.eventService.complete();\n        this.error(err);\n      });\n  }\n\n  cancel(): void {\n    this.bsModalRef.hide();\n\n\n  }\n\n  public error(err: HttpErrorResponse): void {\n    // Handle error\n    if (err !== null) {\n      let bsModalRef = this.modalService.show(ErrorModalComponent, { backdrop: true });\n      bsModalRef.content.message = (err.error.localizedMessage || err.error.message || err.message);\n    }\n  }\n}\n","export class LocaleInfo {\n  key: string;\n  label: string;\n}\n\nexport class AllLocaleInfo {\n  countries: LocaleInfo[];\n  languages: LocaleInfo[];\n}\n\nexport class Locale {\n  language: string;\n  country: string\n  name: string;\n  variant: string;\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { CustomFormsModule } from 'ng2-validation'\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal'\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PasswordStrengthBarModule } from 'ng2-password-strength-bar';\n\nimport { SystemLogoService } from './service/system-logo.service';\nimport { EmailService } from './service/email.service';\nimport { AccountService } from './service/account.service';\nimport { SettingsService } from './service/settings.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\n\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { RoleManagementComponent } from './component/account/role-management.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\nimport { SettingsComponent } from './component/settings.component';\nimport { OrganizationModalComponent } from './component/organization/organization-modal.component';\nimport { NewLocaleModalComponent } from './component/localization-manager/new-locale-modal.component'\n\n\nimport { AdminRoutingModule } from './admin-routing.module';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport '../rxjs-extensions';\n\n@NgModule( {\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        NgxPaginationModule,\n        PasswordStrengthBarModule,\n        CustomFormsModule,\n        SharedModule,\n        AdminRoutingModule\n    ],\n    declarations: [\n        // Global components\n        SystemLogoComponent,\n        SystemLogosComponent,\n        AccountsComponent,\n        AccountInviteCompleteComponent,\n        AccountInviteComponent,\n        AccountComponent,\n        SystemLogoComponent,\n        SystemLogosComponent,\n        EmailComponent,\n        SettingsComponent,\n        OrganizationModalComponent,\n        NewLocaleModalComponent,\n        RoleManagementComponent\n    ],\n    exports: [\n        SystemLogoComponent,\n        SystemLogosComponent\n    ],\n    providers: [\n        SystemLogoService,\n        EmailService,\n        AccountService,\n        SettingsService,\n        LocalizationManagerService\n    ],\n    entryComponents: [\n        AccountInviteComponent,\n        AccountComponent,\n        OrganizationModalComponent,\n        NewLocaleModalComponent,\n        RoleManagementComponent\n    ]\n} )\nexport class AdminModule { }\n","<div>\n\n  <message ></message>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <fieldset>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>          \n            <div class=\"holder\">\n              <span class=\"text\">\n\n                <div>\n                  <!-- For display only when editing an icon-->\n                  <img *ngIf=\"!file && icon\" style=\"max-width:300px;max-height:300px;\" [src]=\"context + '/logo/view?oid=' + icon.oid\" class=\"thumb\">\n                      \n                  <!-- Actual uploaded file preview -->\n                  <img *ngIf=\"file\" style=\"max-width:300px;max-height:300px;\" [src]=\"file\" class=\"thumb\">\n                </div>                        \n              \n                <div class=\"drop-box-container\" ng2FileDrop [ngClass]=\"{'drop-active': dropActive}\" (fileOver)=\"fileOver($event)\" [uploader]=\"uploader\" (click)=fileInput.click()>\n                  <div class=\"drop-box\">\n                    <div class=\"inner-drop-box\">\n                      <i class=\"fa fa-cloud-upload\">\n                        <p class=\"upload-text\"><localize key=\"system.image.uploadText\"></localize></p>\n                      </i>\n                    </div>\n                  </div>\n                  <input type=\"file\" #uploadEl ng2FileSelect #fileInput [uploader]=\"uploader\" id=\"uploader-input\" style=\"display:none\" />\n                </div>\n                \n              </span>\n            </div>\n          </div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'category.icon.ok' | localize\" class=\"btn btn-primary\" (disabled)=\"form.invalid\" />                \n              </div>\n            </div>\n          </div>\n        </fieldset>  \n  </form>\n\n</div>","\n<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n  \n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <!-- <div class=\"modal-dialog\"> -->\n      <!-- <div class=\"modal-content\"> -->\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        <div class=\"heading\">\n          <h1><localize key=\"email.modal.heading\"></localize></h1>\n        </div>      \n        <fieldset>            \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.server\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.server\" name=\"server\" required #server=\"ngModel\">\n              </span>\n              <div *ngIf=\"server.errors?.url\" class=\"inline-error-message\">\n                <localize key=\"email.server.validation\"></localize>\n              </div>                            \n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.password\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"password\" [(ngModel)]=\"email.password\" name=\"password\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.port\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"number\" [(ngModel)]=\"email.port\" name=\"port\" required #port=\"ngModel\" number>\n              </span>\n              <div *ngIf=\"port.errors?.number\" class=\"inline-error-message\">\n                <localize key=\"email.port.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.from\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.from\" name=\"from\" required #from=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"from.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.from.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.to\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.to\" name=\"to\"  #to=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"to.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.to.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <message></message>\n        <!-- <loading-bar></loading-bar> -->\n\n        <h2>\n            <localize key=\"accounts.title\"></localize>\n        </h2>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        \n        <div class=\"list-table-wrapper\">\n            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th class=\"label-column\"><localize key='account.username'></localize></th>\n                        <th class=\"label-column\"><localize key='account.firstname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.lastname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.phonenumber'></localize></th>\n                        <th class=\"label-column\"><localize key='account.email'></localize></th>\n                        <!-- <th class=\"label-column\"><localize key='account.roles'></localize></th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let account of res.resultSet | paginate: { itemsPerPage: res.pageSize, currentPage: res.pageNumber, totalItems: res.count }\" class=\"fade-ngRepeat-item\" [ngClass]=\"{'inactive': account.inactive}\">\n                        <td class=\"button-column\"><a class=\"fa fa-pencil ico-edit\" (click)=\"edit(account, $event)\" [title]=\"'account.editTooltip' | localize\"></a> \n                        <td class=\"label-column username-col\">{{ account.username }}</td>\n                        <td class=\"label-column firstname-col\">{{ account.firstName }}</td>\n                        <td class=\"label-column lastname-col\">{{ account.lastName }}</td>\n                        <td class=\"label-column phone-col\">{{ account.phoneNumber | phone }}</td>\n                        <td class=\"label-column email-col\">{{ account.email }}</td>\n                        <!-- <td class=\"label-column role-col\">{{ account.roles }}</td> -->\n                    </tr>\n                    <tr>\n                        <td class=\"button-column\"><a class=\"fa fa-plus\" (click)=\"newInstance()\" [title]=\"'account.newTooltip' | localize\"></a></td>\n                    </tr>\n\n                </tbody>\n            </table>\n        </div>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatNumber, ParsedNumber } from 'libphonenumber-js';\n\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(value: ParsedNumber, args?: string): any {\n    if (!value) {\n      return value;\n    }\n\n    return formatNumber({ country: 'US', phone: value.toString() }, 'International');\n  }\n\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n\n    <div id=\"app-container\" class=\"container\">\n\n        <message></message>\n        <!-- <loading-bar></loading-bar> -->\n\n        <h2>\n            <localize key=\"settings.title\"></localize>\n        </h2>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div> \n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.information.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <h4><localize key=\"settings.version.label\"></localize> {{getCGRVersion()}}</h4>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isAdmin\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.organizations.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-organizations-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.code.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.name.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.contact.header\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let org of organizations\">\n                                        <td class=\"button-column\">\n                                            <a class=\"fa fa-pencil ico-edit\" (click)=\"onEditOrganization(org)\"  [title]=\"'account.editTooltip' | localize\"></a> \n                                            <a class=\"fa fa-trash-o ico-remove\" (click)=\"onRemoveOrganization(org.code, org.code)\" [title]=\"'account.removeTooltip' | localize\" ></a>\n                                        </td>\n                                        <td class=\"label-column\">{{org.code}}</td>\n                                        <td class=\"label-column\">{{org.label.localizedValue}}</td>\n                                        <td class=\"label-column\">{{org.contactInfo.localizedValue}}</td>\n\n                                        \n                                    </tr>\n                                    <tr>\n                                        <td class=\"button-column\">\n                                            <a class=\"fa fa-plus\" (click)=\"newOrganization()\" [title]=\"'account.newTooltip' | localize\"></a>\n                                        </td>\n                                    </tr>\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div *ngIf=\"isAdmin\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.accounts.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <a [routerLink]=\"'/admin/accounts/'\" routerLinkActive=\"active\">\n                                    <button class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"settings.manage.accounts.button\"></localize>\n                                    </button>\n                                </a>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <input class=\"btn btn-primary\" style=\"margin-top:10px;\" type=\"submit\" value=\"Invite User\" (click)=\"inviteUsers()\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isAdmin\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.localization.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th>\n                                            <localize key=\"settings.manage.lang.table.language.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.lang.table.country.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.lang.table.variant.header\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let loc of installedLocales\">\n                                        <td class=\"label-column\">{{loc.language}}</td>\n                                        <td class=\"label-column\">{{loc.country}}</td>\n                                        <td class=\"label-column\">{{loc.variant}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"button-column\"><a class=\"fa fa-plus\" (click)=\"newLocalization()\" [title]=\"'account.newTooltip' | localize\"></a></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                        <input class=\"btn btn-primary\" type=\"submit\" (click)=\"exportLocalization()\" value=\"Export localization\">\n                    \n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isAdmin\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.branding.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <system-logos></system-logos>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isAdmin\" class=\"row\" style=\"margin-bottom: 30px;\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.email.heading\"></localize></h3>\n                     \n                    <div class=\"content-wrapper\">\n                        <input class=\"btn btn-primary\" type=\"submit\" (click)=\"configureEmail()\" value=\"Configure\">\n\n                        <i *ngIf=\"settings.email.isConfigured\" class=\"fa fa-check\" aria-hidden=\"true\">Configured</i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nexport class Settings {\n  email: Email;\n}\n\nexport class Organization {\n  code: string;\n  label: any;\n  contactInfo: any;\n}\n\nexport class Localization {\n  language: string;\n  country: string;\n  variant: string;\n}\n\nexport class Brand {\n  label: string;\n  url: string;\n}\n\nexport class Email {\n  isConfigured: boolean;\n}","<div>\n  <!-- <header></header> -->\n\n  <message></message>\n\n  <loading-bar></loading-bar>\n\n  <div class=\"modal-header\" style=\"text-align: center; border-bottom:none;\">\n    <h2 class=\"modal-title\">\n      Account\n    </h2>\n  </div>\n\n  <form *ngIf=\"account\" #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n    <!-- <div *ngIf=\"account\" class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n    <fieldset>\n\n      <div class=\"modal-body\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"heading\">\n          <h4 class=\"modal-title\">\n            <localize key=\"account.user.heading\"></localize>\n          </h4>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.firstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"account.user.firstName\" name=\"firstname\" required>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.lastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"account.user.lastName\" name=\"lastname\" required>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.phonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"account.user.phoneNumber\" name=\"phoneNumber\">\n            </span>\n            <!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n            <!--                 <localize key=\"account.phone.validation\"></localize> -->\n            <!--               </div>                                           -->\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.email\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"account.user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n            </span>\n            <div *ngIf=\"aemail.errors?.email && account.user.email && account.user.email.length > 0\"\n              class=\"inline-error-message\">\n              <localize key=\"account.email.validation\"></localize>\n            </div>\n          </div>\n        </div>\n\n\n        <!-- <div class=\"heading\">\n          <h4>\n            <localize key=\"account.info.heading\"></localize>\n          </h4>\n        </div> -->\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.username\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [disabled]=\"!account.user.newInstance && account.user.username === 'admin'\" [(ngModel)]=\"account.user.username\" name=\"username\" required>\n            </span>\n          </div>\n        </div>\n\n\n        <div *ngIf=\"!account.user.newInstance\" class=\"heading\">\n          <h4>\n            <localize key=\"account.user.password\"></localize>\n          </h4>\n        </div>\n        <div *ngIf=\"!account.user.newInstance\" class=\"row-holder\">\n          <div class=\"button-holder\" style=\"text-align: left;\">\n            <input type=\"button\" *ngIf=\"!account.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n              (click)=\"onChangePassword()\" />\n            <input type=\"button\" *ngIf=\"account.changePassword\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\"\n              (click)=\"onChangePassword()\" />\n          </div>\n        </div>\n        <div *ngIf=\"account.changePassword || account.user.newInstance\">\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label>\n                <localize key=\"account.password\"></localize>\n              </label>\n            </div>\n            <div class=\"holder\">\n              <span class=\"text\">\n                <input type=\"password\" [(ngModel)]=\"account.user.password\" name=\"password\" #password=\"ngModel\" required\n                  minlength=\"5\" maxlength=\"50\">\n                <ng2-password-strength-bar [passwordToCheck]=\"account.user.password\">\n                </ng2-password-strength-bar>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label>\n                <localize key=\"account.certainPassword\"></localize>\n              </label>\n            </div>\n            <div class=\"holder\">\n              <span class=\"text\">\n                <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [equalTo]=\"password\" />\n              </span>\n              <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                <localize key=\"account.certainPassword.validation\"></localize>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"heading\">\n          <h4>\n            <localize key=\"account.user.status\"></localize>\n          </h4>\n        </div>\n        <div *ngIf=\"!(!account.user.newInstance && account.user.username === 'admin')\">\n          <div class=\"row-holder\">\n            <label class=\"radio radio-inline\">\n              <input class=\"inline-radio-input\" type=\"radio\" name=\"userActive\" [value]=\"false\"\n                [(ngModel)]=\"account.user.inactive\">\n              <span><localize key=\"account.user.status.active\"></localize></span>\n            </label>\n            <label class=\"radio radio-inline\">\n              <input class=\"inline-radio-input\" type=\"radio\" name=\"userActive\" [value]=\"true\"\n                [(ngModel)]=\"account.user.inactive\">\n              <span><localize key=\"account.user.status.inactive\"></localize></span>\n            </label>\n          </div>\n        </div>\n\n        <role-management *ngIf=\"account.roles\" [newInstance]=\"account.user.newInstance\" [roles]=\"account.roles\" (onRoleIdsUpdate)=\"onRoleIdsUpdate($event)\"></role-management>\n\n       </div> <!-- End modal-body -->\n\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>","<div>\n  <!-- <header></header> -->\n  \n  <message></message>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;overflow-y: auto;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n      <!-- <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n        <fieldset>            \n          <div class=\"heading\">\n            <h3>Invite a User</h3>\n          </div>      \n          <hr>        \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.email\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"invite.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"aemail.errors?.email && invite.email && invite.email.length > 0\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>   \n          \n          <role-management *ngIf=\"invite.roles\" [newInstance]=\"true\" [roles]=\"invite.roles\" (onRoleIdsUpdate)=\"onRoleIdsUpdate($event)\"></role-management>\n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid && roleIds.length > 0)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>\n","<div class=\"new-admin-design-main\">\n  <cgr-header [loggedIn]=false></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n\t  <message></message>\n\t  <loading-bar></loading-bar>\n\t  \n\t  <h2><localize key=\"account.invite.createTitle\"></localize></h2>\n\t\n\t  <form *ngIf=\"user != null\" #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n\t    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n\t      <!--  <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n\t        <fieldset>            \n\t          <div class=\"heading\">\n\t            <h3><localize key=\"account.user.heading\"></localize></h3>\n\t          </div>      \n\t          <hr>        \n\t          \n\t          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\t          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.firstname\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\" required>\n\t              </span>\n\t            </div>\n\t          </div>          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.lastname\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\" required>\n\t              </span>\n\t            </div>\n\t          </div>  \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.phonenumber\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.phoneNumber\" name=\"phoneNumber\" >\n\t              </span>\n\t<!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n\t<!--                 <localize key=\"account.phone.validation\"></localize> -->\n\t<!--               </div>                                           -->\n\t            </div>\n\t          </div>           \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.email\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n\t              </span>\n\t              <div *ngIf=\"aemail.errors?.email && user.email && user.email.length > 0\" class=\"inline-error-message\">\n\t                <localize key=\"account.email.validation\"></localize>\n\t              </div>                                          \n\t            </div>\n\t          </div>          \n\t          <div class=\"heading\">\n\t            <h3><localize key=\"account.info.heading\"></localize></h3>\n\t          </div>      \n\t          <hr>          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.username\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [disabled]=\"!user.newInstance && user.username === 'admin'\" [(ngModel)]=\"user.username\" name=\"username\" required>\n\t              </span>\n\t            </div>\n\t          </div>\n\t          <div>\n\t            <div class=\"row-holder\">\n\t              <div class=\"label-holder\">\n\t                <label><localize key=\"account.password\"></localize></label>\n\t              </div>          \n\t              <div class=\"holder\" >\n\t                <span class=\"text\">\n\t                  <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n\t                  <ng2-password-strength-bar\n\t                    [passwordToCheck]=\"user.password\">\n\t                  </ng2-password-strength-bar>                              \n\t                </span>\n\t              </div>\n\t            </div>  \n\t            <div class=\"row-holder\">\n\t              <div class=\"label-holder\">\n\t                <label><localize key=\"account.certainPassword\"></localize></label>\n\t              </div>          \n\t              <div class=\"holder\" >\n\t                <span class=\"text\">\n\t                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n\t                </span>\n\t                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n\t                  <localize key=\"account.certainPassword.validation\"></localize>\n\t                </div>                                                       \n\t              </div>\n\t            </div>  \n\t          </div>\n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t            </div>                    \n\t            <div class=\"holder\">\n\t              <div class=\"button-holder\">\n\t                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n\t                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n\t              </div>\n\t            </div>\n\t          </div>\n\t        </fieldset>\n\t      <!-- </div> -->\n\t    <!-- </div> -->\n\t  </form>\n  </div>\n</div>\n","<div>\n  <!-- <header></header> -->\n  \n  <message></message>\n\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n      <!-- <div *ngIf=\"account\" class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n        <fieldset>            \n          <div class=\"heading\">\n            <h3><localize key=\"organization.heading\"></localize></h3>\n          </div>      \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.code\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"organization.code\" name=\"code\" [disabled]=\"!isNewOrganization\" required>\n              </span>\n            </div>\n          </div>     \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.name\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n\n                <div class=\"form-group\" *ngFor=\"let localeValue of organization.label.localeValues\">\n                  <label> {{localeValue.locale}}</label>\n                  <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\" required>\n                </div>\n                <!-- <input type=\"text\" [(ngModel)]=\"organization.label\" name=\"name\" required> -->\n              </span>\n            </div>\n          </div>  \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.contact\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <div class=\"form-group\" *ngFor=\"let localeValue of organization.contactInfo.localeValues\">\n                  <label> {{localeValue.locale}}</label>\n                  <input  [(ngModel)]=\"localeValue.value\" [name]=\"'contact-' + localeValue.locale\" type=\"input\" class=\"form-control\">\n                </div>\n                <!-- <input type=\"text\" [(ngModel)]=\"organization.contactInfo\" name=\"contact\" required> -->\n              </span>\n            </div>\n          </div>  \n\n          <!-- <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              {{organization.label.localizedValue}} Registry Administrator\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"organization.code\" name=\"code\" [disabled]=\"!isNewOrganization\" required>\n              </span>\n            </div>\n          </div>   -->\n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>\n","<form #form=\"ngForm\" class=\"modal-form\" name=\"new-locale-form\" (ngSubmit)=\"form.valid && submit()\">\n  <div class=\"modal-body\">\n  <fieldset>\n    <div class=\"heading\">\n      <h3>\n        <localize key=\"new-locale.title\"></localize>\n      </h3>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <label>\n          <localize key=\"new-locale.language\"></localize>\n        </label>\n        <select [(ngModel)]=\"language\" name=\"new-locale-language\">\n          <option *ngFor=\"let lang of allLocaleInfo.languages\" [ngValue]=\"lang.key\">{{lang.label}}</option>\n        </select>\n      </div>\n    </div>\n\n    <div>\n      <label>\n        <localize key=\"new-locale.country\"></localize>\n      </label>\n      <select [(ngModel)]=\"country\" name=\"new-locale-country\">\n        <option *ngFor=\"let count of allLocaleInfo.countries\" [ngValue]=\"count.key\">{{count.label}}</option>\n      </select>\n    </div>\n\n    <div>\n      <label>\n        <localize key=\"new-locale.variant\"></localize>\n      </label>\n      <input type=\"text\" [(ngModel)]=\"variant\" name=\"new-locale-variant\" />\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.submit\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n  </div>\n</form>","import { NgModule, Injectable, Inject } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from '../shared/service/guard.service';\nimport { PendingChangesGuard } from \"../shared/service/pending-changes-guard\";\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { SettingsComponent } from './component/settings.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'logos',\n        canActivate: [AuthGuard],\n        component: SystemLogosComponent,\n        data: { title: 'System_Configuration' }\n    },\n    {\n        path: 'logo/:oid',\n        canActivate: [AuthGuard],\n        component: SystemLogoComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: 'email',\n        canActivate: [AuthGuard],\n        component: EmailComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },   \n    {\n        path: 'settings',\n        canActivate: [AuthGuard],\n        component: SettingsComponent,\n        data: { title: 'settings.title' }\n    }, \n    {\n        path: 'accounts',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'account/:oid',\n        component: AccountComponent,\n        //   resolve: {\n        //     account: AccountResolver\n        //   },        \n        canActivate: [AuthGuard],\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite',\n        component: AccountInviteComponent,\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite-complete/:token',\n        component: AccountInviteCompleteComponent,\n        data: { title: 'account.title' }\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class AdminRoutingModule { }\n"],"sourceRoot":""}