{"version":3,"sources":["webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/service/account.service.ts","webpack:///./src/app/admin/component/account/account-invite.component.ts","webpack:///./src/app/admin/component/account/account-invite.component.html","webpack:///./src/app/admin/service/system-logo.service.ts","webpack:///./src/app/admin/service/email.service.ts","webpack:///./src/app/admin/service/settings.service.ts","webpack:///./src/app/admin/service/localization-manager.service.ts","webpack:///./src/app/admin/component/account/account.component.ts","webpack:///./src/app/admin/component/account/account.component.html","webpack:///./src/app/admin/component/account/role-management.component.ts","webpack:///./src/app/admin/component/account/role-management.component.html","webpack:///./src/app/admin/component/logo/system-logo.component.ts","webpack:///./src/app/admin/component/logo/system-logo.component.html","webpack:///./src/app/admin/component/logo/system-logos.component.ts","webpack:///./src/app/admin/component/logo/system-logos.component.html","webpack:///./src/app/admin/component/email/email.component.ts","webpack:///./src/app/admin/component/email/email.component.html","webpack:///./src/app/admin/component/account/accounts.component.ts","webpack:///./src/app/admin/component/account/accounts.component.html","webpack:///./src/app/admin/component/account/account-invite-complete.component.ts","webpack:///./src/app/admin/component/account/account-invite-complete.component.html","webpack:///./src/app/admin/component/settings.component.ts","webpack:///./src/app/admin/component/settings.component.html","webpack:///./src/app/admin/component/organization/organization-modal.component.ts","webpack:///./src/app/admin/component/organization/organization-modal.component.html","webpack:///./src/app/admin/component/external-system/external-system-modal.component.ts","webpack:///./src/app/admin/component/external-system/external-system-modal.component.html","webpack:///./src/app/admin/component/localization-manager/new-locale-modal.component.ts","webpack:///./src/app/admin/component/localization-manager/new-locale-modal.component.html","webpack:///./src/app/admin/component/localization-manager/import-localization-modal.component.ts","webpack:///./src/app/admin/component/localization-manager/import-localization-modal.component.html","webpack:///./src/app/admin/model/account.ts","webpack:///./src/app/admin/model/localization-manager.ts","webpack:///./src/app/admin/admin-routing.module.ts"],"names":["AdminModule","SystemLogoService","EmailService","AccountService","SettingsService","LocalizationManagerService","CommonModule","FormsModule","ReactiveFormsModule","FileUploadModule","NgxPaginationModule","SharedModule","AdminRoutingModule","SystemLogoComponent","SystemLogosComponent","AccountsComponent","AccountInviteCompleteComponent","AccountInviteComponent","AccountComponent","EmailComponent","SettingsComponent","OrganizationModalComponent","NewLocaleModalComponent","RoleManagementComponent","ExternalSystemModalComponent","ImportLocalizationModalComponent","NgModule","imports","declarations","exports","providers","entryComponents","http","eventService","page","p","params","HttpParams","set","toString","this","start","get","acp","pipe","finalize","complete","toPromise","getSRAs","edit","oid","headers","HttpHeaders","post","JSON","stringify","newInstance","organizationCodes","newUserInstance","newInvite","remove","apply","user","roleNames","account","unlock","inviteUser","invite","roleIds","inviteComplete","token","getRolesForUser","userOID","Injectable","service","authService","bsModalRef","settingsService","message","ngOnInit","UserInvite","orgCodes","getMyOrganizations","then","roles","catch","err","error","cancel","hide","onRoleIdsUpdate","onSubmit","ErrorHandler","getMessageFromError","Component","selector","templateUrl","styles","getIcons","getInstance","email","setting","getNewLocaleInfo","installLocale","language","country","variant","installFile","formData","localizeService","externalSystems","isAppliedAsOauth","editingOauth","systemHasOauth","isSRA","isRA","data","externalSystemOid","forEach","system","oAuthServer","onEdit","Subject","event","toggleEditingOauth","password","response","onChangePassword","changePassword","length","next","decode","styleUrls","Input","setExternalSystems","EventEmitter","_roleIds","isAdmin","isMaintainer","isContributor","isContributer","_roles","formatRoles","onChangeRole","setActiveOrganization","orgCode","isAssigned","orgHasAssignedRole","ORGANIZATIONS","org","CODE","GEOOBJECTTYPEROLES","got","console","log","GEOOBJECTTYPELABEL","ENABLEDROLE","_activeOrganization","formattedObj","role","orgGroup","ORGANIZATIONLABEL","orgLabel","localizedValue","type","RA","assigned","_raAssigned","addToGeoObjectTypeGroup","geoObjectTypeGroup","geoObjectTypeLabel","name","push","newObj","SRA","sortRoles","gotrole","GEOOBJECTTYPEROLESGROUP","sort","a","b","RegistryRoleType","organization","exists","rg","onToggleOrgRA","onToggleSRA","setGroupRole","group","target","newRoleIds","emit","removeRoleId","id","pos","indexOf","splice","showData","Output","route","dropActive","context","onSuccess","options","autoUpload","queueLimit","removeAfterUpload","url","uploader","FileUploader","onBeforeUploadItem","fileItem","onCompleteItem","item","status","onSuccessItem","onErrorItem","onBuildItemForm","form","append","icon","ngAfterViewInit","that","onAfterAddingFile","uploadElRef","nativeElement","value","reader","FileReader","onload","e","file","result","readAsDataURL","_file","fileOver","uploadAll","clear","clearQueue","ViewChild","router","modalService","changeDetectorRef","random","onClickRemove","show","ConfirmModalComponent","animated","backdrop","ignoreBackdropClick","content","submitText","onConfirm","subscribe","resp","filtered","icons","filter","el","ico","Math","detectChanges","custom","server","username","port","from","to","res","resultSet","count","pageNumber","pageSize","index","findIndex","u","onPageChange","inviteUsers","showErrorAsDialog","sub","ngOnDestroy","unsubscribe","window","location","href","externalSystemService","orgService","accountService","organizations","settings","isConfigured","sRAs","systems","installedLocales","getLocales","getOrganizations","orgs","onSRAPageChange","onSystemPageChange","getCGRVersion","getVersion","exportLocalization","importLocalization","onEditOrganization","isNewOrganization","x","code","onRemoveOrganization","ModalTypes","danger","removeOrganization","i","newOrganization","newLocalization","locale","addLocale","configureEmail","getExternalSystems","newSystem","init","onEditSystem","getExternalSystem","onRemoveSystem","label","removeExternalSystem","lService","create","contactInfo","updateOrganization","systemService","editPassword","isNew","description","version","oauthSupported","o","isOrganizationRA","enableOAuth","endsWith","getSystemCapabilities","capabilities","oauth","authorizationLocation","tokenLocation","profileLocation","clientId","secretKey","serverType","removeOauth","downloadDhis2Plugin","applyExternalSystem","localizationManagerService","allLocaleInfo","AllLocaleInfo","allLocaleInfoIN","submit","localizationService","fileRef","parse","localizedMessage","replaceAll","queue","User","Group","Account","Role","FormattedRoles","FormattedOrganization","FormattedGeoObjectTypeRoleGroup","LocaleInfo","Locale","routes","path","canActivate","AuthGuard","component","title","provide","LocationStrategy","useClass","HashLocationStrategy","RouterModule","forChild"],"mappings":"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C,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,qHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,oHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,oHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,uHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,mCAAyC,8GAAzC,iBACF,iBACA,gCAGF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,iHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,mHAAxC,iBACF,iBACF,iBACF,iBAGA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAoH,iHAApH,iBACF,iBACF,iBACF,iBAEA,gCA6BA,gCAkDA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,iCAYF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,8BACE,4CACF,iBACF,iBACF,iBAEA,8BACI,8BACE,8BACE,gCAAmF,yF,wBAAnF,iBACA,2B,wBACF,iBACF,iBACJ,iBAEF,iBAEF,iBAGF,iB,uEA/Q8F,kDAIlF,oDAqBwC,gEAYA,+DAYA,mEAYA,kEAYA,kEAYA,qEAYC,4DAErC,8HAaoC,+DAYA,iEAcA,uGAA2E,mCAKnH,4GA6BmB,oDAyDf,sGAuBc,oDAQK,2EACA,2EAAqC,sBDjP1E,iBA+DC,WACSC,EACAC,EACDC,EACCiC,GAHA,KAAAnC,UACA,KAAAC,cACD,KAAAC,aACC,KAAAiC,kBA3DT,KAAA/B,QAAkB,KAGlB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","file":"2.chunk.js","sourcesContent":["///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { SystemLogoService } from './service/system-logo.service';\nimport { EmailService } from './service/email.service';\nimport { AccountService } from './service/account.service';\nimport { SettingsService } from './service/settings.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\n\n\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { RoleManagementComponent } from './component/account/role-management.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\nimport { SettingsComponent } from './component/settings.component';\nimport { OrganizationModalComponent } from './component/organization/organization-modal.component';\nimport { NewLocaleModalComponent } from './component/localization-manager/new-locale-modal.component'\nimport { ImportLocalizationModalComponent } from './component/localization-manager/import-localization-modal.component';\nimport { ExternalSystemModalComponent } from './component/external-system/external-system-modal.component';\n\n\nimport { AdminRoutingModule } from './admin-routing.module';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport '../rxjs-extensions';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\tNgxPaginationModule,\n\t\tSharedModule,\n\t\tAdminRoutingModule\n\t],\n\tdeclarations: [\n\t\t// Global components\n\t\tSystemLogoComponent,\n\t\tSystemLogosComponent,\n\t\tAccountsComponent,\n\t\tAccountInviteCompleteComponent,\n\t\tAccountInviteComponent,\n\t\tAccountComponent,\n\t\tSystemLogoComponent,\n\t\tSystemLogosComponent,\n\t\tEmailComponent,\n\t\tSettingsComponent,\n\t\tOrganizationModalComponent,\n\t\tNewLocaleModalComponent,\n\t\tRoleManagementComponent,\n\t\tExternalSystemModalComponent,\n\t\tImportLocalizationModalComponent\n\t],\n\texports: [\n\t\tSystemLogoComponent,\n\t\tSystemLogosComponent\n\t],\n\tproviders: [\n\t\tSystemLogoService,\n\t\tEmailService,\n\t\tAccountService,\n\t\tSettingsService,\n\t\tLocalizationManagerService\n\t],\n\tentryComponents: [\n\t\tAccountInviteComponent,\n\t\tAccountComponent,\n\t\tOrganizationModalComponent,\n\t\tNewLocaleModalComponent,\n\t\tRoleManagementComponent,\n\t\tExternalSystemModalComponent,\n\t\tImportLocalizationModalComponent\n\t]\n})\n\nexport class AdminModule { }\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { Account, User, UserInvite } from '@admin/model/account';\n\nimport { PageResult } from '@shared/model/core'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class AccountService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    page( p: number ): Promise<PageResult<User>> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'number', p.toString() );\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult<User>>( acp + '/registryaccount/page', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getSRAs( p: number ): Promise<PageResult<User>> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'number', p.toString() );\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult<User>>( acp + '/registryaccount/get-sras', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    edit( oid: string ): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/registryaccount/edit', JSON.stringify( { oid: oid } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    newInstance(organizationCodes: string[]): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/registryaccount/newInstance', JSON.stringify( {\"organizationCodes\": organizationCodes} ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    newUserInstance(): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<User>( acp + '/registryaccount/newUserInstance', JSON.stringify( {} ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    newInvite(organizationCodes: string[]): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/registryaccount/newInvite', JSON.stringify( {\"organizationCodes\": organizationCodes} ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    remove( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/registryaccount/remove', JSON.stringify( { oid: oid } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    apply( user: User, roleNames: string[] ): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/registryaccount/apply', JSON.stringify( { account: user, roleNames: roleNames } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    unlock( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/registryaccount/unlock', JSON.stringify( { oid: oid } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    inviteUser( invite: UserInvite, roleIds: string[] ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n//        console.log( \"Submitting to inviteUser : \", JSON.stringify( { invite: invite, roleIds: roleIds } ) );\n\n        return this.http\n            .post<void>( acp + '/registryaccount/inviteUser', JSON.stringify( { invite: invite, roleIds: roleIds } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    inviteComplete( user: User, token: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/registryaccount/inviteComplete', JSON.stringify( { user: user, token: token } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getRolesForUser( userOID: string ): Promise<any> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'userOID', userOID );\n\n        this.eventService.start();\n\n        return this.http\n            .get<any>( acp + '/cgr/account/get-roles-for-user', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler } from '@shared/component';\nimport { Account, UserInvite } from '@admin/model/account';\nimport { Organization } from '@shared/model/core';\n\nimport { SettingsService } from '@admin/service/settings.service'\nimport { AccountService } from '@admin/service/account.service';\nimport { AuthService } from '@shared/service';\n\n\n@Component({\n\tselector: 'account-invite',\n\ttemplateUrl: './account-invite.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteComponent implements OnInit {\n\tinvite: UserInvite;\n\tmessage: string = null;\n\troleIds: string[] = [];\n\torganization: Organization;\n\torganizations: Organization[];\n\n\tconstructor(\n\t\tprivate service: AccountService,\n\t\tprivate authService: AuthService,\n\t\tpublic bsModalRef: BsModalRef,\n\t\tpublic settingsService: SettingsService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.invite = new UserInvite();\n\t\tlet orgCodes = this.authService.getMyOrganizations();\n\n\t\tthis.service.newInvite(orgCodes).then((account: Account) => {\n\t\t\tthis.invite.roles = account.roles;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\t// this.settingsService.getOrganizations().then(orgs => {\n\t\t//     this.organizations = orgs\n\t\t// }).catch((err: HttpErrorResponse) => {\n\t\t//     this.error(err);\n\t\t// });\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tonRoleIdsUpdate(roleIds: string[]): void {\n\t\tthis.roleIds = roleIds;\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.inviteUser(this.invite, this.roleIds).then(() => {\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}","<div class=\"modal-body\">\n  \n  <message></message>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n        <fieldset>            \n          <div class=\"heading text-center\">\n            <h1><localize key=\"account.invite.user.header\"></localize></h1>\n          </div>      \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label><localize key=\"account.email\"></localize></label>\n              <input type=\"text\" [(ngModel)]=\"invite.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              <div *ngIf=\"aemail.errors?.email && invite.email && invite.email.length > 0\" style=\"float:none;\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>   \n          \n          <div style=\"margin-top:30px;\">\n            <role-management *ngIf=\"invite.roles\" [newInstance]=\"true\" [roles]=\"invite.roles\" (onRoleIdsUpdate)=\"onRoleIdsUpdate($event)\"></role-management>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'io.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'io.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid && roleIds.length > 0)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { SystemLogo } from '@admin/model/system-logo';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SystemLogoService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetIcons(): Promise<{ icons: SystemLogo[] }> {\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<{ icons: SystemLogo[] }>(acp + '/logo/getAll')\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremove(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/logo/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { Email } from '@admin/model/email';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class EmailService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) {\n\t}\n\n\tgetInstance(): Promise<Email> {\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http.get<Email>(acp + '/email/getInstance')\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tapply(email: Email): Promise<Email> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<Email>(acp + '/email/apply', JSON.stringify({ setting: email }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SettingsService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { AllLocaleInfo } from '@admin/model/localization-manager';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\n\tgetNewLocaleInfo(): Promise<AllLocaleInfo> {\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<AllLocaleInfo>(acp + '/localization/getNewLocaleInformation')\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tinstallLocale(language: string, country: string, variant: string): Promise<{ locale: string }> {\n\t\tlet params: HttpParams = new HttpParams();\n\n\t\tif (language != null) {\n\t\t\tparams = params.set('language', language);\n\t\t}\n\n\t\tif (country != null) {\n\t\t\tparams = params.set('country', country);\n\t\t}\n\n\t\tif (variant != null) {\n\t\t\tparams = params.set('variant', variant);\n\t\t}\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<{ locale: string }>(acp + '/localization/installLocale', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tinstallFile(formData: FormData): Promise<void> {\n\t\tlet headers = new HttpHeaders();\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http.post<void>(acp + \"/localization/importSpreadsheet\", formData, { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n\nimport { Account, User, Role } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ExternalSystem } from '@shared/model/core';\n\nimport { ErrorHandler } from '@shared/component';\n\n@Component({\n\tselector: 'account',\n\ttemplateUrl: './account.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}'],\n\tstyleUrls: ['./account.css']\n})\nexport class AccountComponent implements OnInit {\n\n\tmessage: string = null;\n\taccount: Account;\n\troles: Role[];\n\troleIds: string[] = [];\n\texternalSystems: ExternalSystem[] = [];\n\n\tisSRA: boolean;\n\tisRA: boolean;\n\n\tisAppliedAsOauth: boolean = false;\n\teditingOauth: boolean = false;\n\tsystemHasOauth: boolean = false;\n\n\t@Input()\n\tset oid(oid: string) {\n\t\tif (oid === 'NEW') {\n\n\t\t\tlet orgCodes = [];\n\t\t\tif (this.isRA) {\n\t\t\t\torgCodes = this.authService.getMyOrganizations();\n\t\t\t}\n\n\t\t\tthis.service.newInstance(orgCodes).then(data => {\n\t\t\t\tthis.account = data;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse if (oid) {\n\t\t\tthis.service.edit(oid).then(data => {\n\n\t\t\t\tthis.account = data;\n\n\t\t\t\tthis.editingOauth = (this.account.user.externalSystemOid != null && this.account.user.externalSystemOid !== \"\");\n\t\t\t\tthis.isAppliedAsOauth = this.editingOauth;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\t@Input()\n\tset setExternalSystems(externalSystems: ExternalSystem[]) {\n\t\tthis.externalSystems = externalSystems;\n\n\t\tthis.externalSystems.forEach(system => {\n\t\t\tif (system.oAuthServer != null) {\n\t\t\t\tthis.systemHasOauth = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic onEdit: Subject<Account>;\n\n\tconstructor(\n\t\tprivate service: AccountService,\n\t\tprivate authService: AuthService,\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate localizeService: LocalizationService\n\t) {\n\t\tthis.isSRA = authService.isSRA();\n\t\tthis.isRA = authService.isRA();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onEdit = new Subject();\n\t}\n\n\tonRoleIdsUpdate(event): void {\n\t\tthis.roleIds = event;\n\t}\n\n\ttoggleEditingOauth(): void {\n\t\tif (this.editingOauth == false) {\n\t\t\tthis.editingOauth = true;\n\t\t\tdelete this.account.user.password;\n\t\t\tthis.account.user.externalSystemOid = this.externalSystems[0].oid\n\t\t}\n\t\telse {\n\t\t\tthis.editingOauth = false;\n\t\t\tdelete this.account.user.externalSystemOid;\n\t\t}\n\t}\n\n\tcancel(): void {\n\t\tif (this.account.user.newInstance === true) {\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t\telse {\n\t\t\tthis.service.unlock(this.account.user.oid).then(response => {\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t});\n\t\t}\n\t}\n\n\tonChangePassword(): void {\n\t\tthis.account.changePassword = !this.account.changePassword;\n\t}\n\n\tonSubmit(): void {\n\n\t\tif (!this.account.changePassword && !this.account.user.newInstance) {\n\t\t\tdelete this.account.user.password;\n\t\t}\n\n\t\tif (this.roleIds.length > 0) {\n\t\t\tthis.service.apply(this.account.user, this.roleIds).then(data => {\n\t\t\t\tthis.onEdit.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.message = this.localizeService.decode(\"account.role.management.roles.required.message\");\n\t\t}\n\t}\n\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}","<div>\n  <!-- <header></header> -->\n\n  <message></message>\n\n  <loading-bar></loading-bar>\n\n  <div class=\"heading text-center\">\n    <h1>\n      <localize key=\"account.header\"></localize>\n    </h1>\n  </div>\n\n  <form *ngIf=\"account\" #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n    <fieldset>\n\n      <div class=\"modal-body\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n<!--         <div class=\"row-holder\"> -->\n<!--           <div class=\"label-holder\"> -->\n<!--             <label></label> -->\n<!--           </div> -->\n<!--           <div class=\"holder\"> -->\n<!--             <h4 class=\"modal-title\"> -->\n<!--               <localize key=\"account.user.heading\"></localize> -->\n<!--             </h4> -->\n<!--           </div> -->\n<!--         </div> -->\n          \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.firstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.firstName\" name=\"firstname\" required>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.lastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.lastName\" name=\"lastname\" required>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.phonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.phoneNumber\" name=\"phoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.email\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"email\" class=\"form-control\" [(ngModel)]=\"account.user.email\" name=\"email\" required #aemail=\"ngModel\" required email>\n            </span>\n            <div *ngIf=\"aemail.errors?.email && account.user.email && account.user.email.length > 0\" style=\"float:none;\" class=\"inline-error-message\">\n              <localize key=\"account.email.validation\"></localize>\n            </div>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.username\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [disabled]=\"!account.user.newInstance && account.user.username === 'admin'\" [(ngModel)]=\"account.user.username\" name=\"username\" required>\n            </span>\n          </div>\n        </div>\n\n        <div *ngIf=\"!account.changePassword && externalSystems.length > 0 && systemHasOauth\" class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.oauthTitle\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div *ngIf=\"!account.changePassword && externalSystems.length > 0 && systemHasOauth\">\n              <div style=\"text-align: left;\">\n                <input [disabled]=\"editingOauth\" type=\"button\" [value]=\"'account.user.enableOauth' | localize\" class=\"btn btn-primary\" (click)=\"toggleEditingOauth()\" />\n                <input *ngIf=\"editingOauth\" type=\"button\" [value]=\"'account.user.disableOauth' | localize\" class=\"btn btn-default\" (click)=\"toggleEditingOauth()\" />\n              </div>\n              <div *ngIf=\"editingOauth\" style=\"margin-top: 10px;\">\n                <label>\n                  <localize key=\"account.user.oauthExternalSystem\"></localize>\n                </label>\n              </div>\n              <div *ngIf=\"editingOauth\" >\n                <select style=\"float:none;\" [(ngModel)]=\"account.user.externalSystemOid\" name=externalSystemOid [disabled]=\"externalSystems.length == 1\">\n                  <option *ngFor=\"let system of externalSystems\" [value]=\"system.oid\">\n                    {{system.label.localizedValue}}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n          \n        \n        <div class=\"row-holder\" *ngIf=\"!editingOauth\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div *ngIf=\"!editingOauth && (!account.user.newInstance && !this.isAppliedAsOauth)\">\n              <div style=\"text-align: left;\">\n                <input type=\"button\" [disabled]=\"account.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n                  (click)=\"onChangePassword()\" />\n                  <input type=\"button\" *ngIf=\"account.changePassword\" [value]=\"'io.cancel' | localize\" class=\"btn btn-default\"\n                  (click)=\"onChangePassword()\" />\n              </div>\n            </div>\n            \n            <div *ngIf=\"!editingOauth && (account.changePassword || account.user.newInstance || this.isAppliedAsOauth)\" style=\"margin-top: 10px;\">\n              <div class=\"\">\n                <div class=\"\">\n                  <label>\n                    <localize key=\"account.new.password\"></localize>\n                  </label>\n                </div>\n                <div class=\"\">\n                  <span class=\"text\">\n                    <input type=\"password\" [(ngModel)]=\"account.user.password\" name=\"password\" #password=\"ngModel\" required\n                      minlength=\"5\" maxlength=\"50\">\n                    <password-strength-bar [passwordToCheck]=\"account.user.password\"></password-strength-bar>\n                  </span>\n                </div>\n              </div>\n              <div class=\"\">\n                <div class=\"\">\n                  <label>\n                    <localize key=\"account.certainPassword\"></localize>\n                  </label>\n                </div>\n                <div class=\"\">\n                  <span class=\"text\">\n                    <input type=\"password\" [ngModel]=\"certainPassword\" name=\"certainPassword\" #certainPassword=\"ngModel\" required />\n                  </span>\n                  <div *ngIf=\"certainPassword.errors?.mustMatch\" style=\"float:none;\" class=\"inline-error-message\">\n                    <localize key=\"account.certainPassword.validation\"></localize>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.status\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div *ngIf=\"!(!account.user.newInstance && account.user.username === 'admin')\">\n              <div>\n                <label class=\"radio\">\n                  <input type=\"radio\" name=\"userActive\" [value]=\"false\" [(ngModel)]=\"account.user.inactive\">\n                  <span><localize key=\"account.user.status.active\"></localize></span>\n                </label>\n                <label class=\"radio\">\n                  <input type=\"radio\" name=\"userActive\" [value]=\"true\" [(ngModel)]=\"account.user.inactive\">\n                  <span><localize key=\"account.user.status.inactive\"></localize></span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.roles.section.label\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div style=\"margin-top:5px;\">\n              <role-management *ngIf=\"account.roles\" [newInstance]=\"account.user.newInstance\" [roles]=\"account.roles\" (onRoleIdsUpdate)=\"onRoleIdsUpdate($event)\"></role-management>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n        </div>\n\n      </div> <!-- End modal-body -->\n\n    </fieldset>\n    <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AuthService } from '@shared/service';\n\nimport { Role, FormattedRoles, FormattedOrganization, FormattedGeoObjectTypeRoleGroup } from '@admin/model/account';\nimport { RegistryRoleType } from '@shared/model/core';\n\n@Component({\n\tselector: 'role-management',\n\ttemplateUrl: './role-management.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}'],\n\tstyleUrls: ['./role-management.css']\n})\nexport class RoleManagementComponent {\n\n\tmessage: string = null;\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\tisSRA: boolean;\n\t_raAssigned: boolean;\n\t_activeOrganization: string;\n\n\t_roles: FormattedRoles;\n\n\t@Input('roles')\n\tset roles(data: any) {\n\t\tif (data) {\n\t\t\tthis._roles = this.formatRoles(data);\n\t\t\tthis.onChangeRole();\n\t\t}\n\t}\n\n\t@Output() onRoleIdsUpdate = new EventEmitter();\n\n\t_roleIds: string[] = [];\n\t@Input() newInstance: boolean = true;\n\n\n\tconstructor(public bsModalRef: BsModalRef, private authService: AuthService) {\n\t\tthis.isSRA = authService.isSRA();\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\t\n\tsetActiveOrganization(orgCode: string, isAssigned): void {\n\t\t\n\t\tlet orgHasAssignedRole: boolean = false;\n\t\tthis._roles.ORGANIZATIONS.forEach(org => {\n\t\t\tif(org.CODE === orgCode){\n\t\t\t\torg.GEOOBJECTTYPEROLES.forEach(got => {\n\t\t\t\t\tconsole.log(got.GEOOBJECTTYPELABEL, got.ENABLEDROLE)\n\t\t\t\t\t\n\t\t\t\t\tif(got.ENABLEDROLE){\n\t\t\t\t\t\torgHasAssignedRole = true;\n\t\t\t\t\t\tthis._activeOrganization = orgCode;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tif(!orgHasAssignedRole){\n\t\t\t\tthis._activeOrganization = null;\n\t\t\t}\n\t\t})\n\t}\n\n\tformatRoles(roles: Role[]): any {\n\n\t\tlet formattedObj: FormattedRoles = { \"SRA\": null, \"ORGANIZATIONS\": [] };\n\n\t\troles.forEach(role => {\n\n\t\t\t// If orgCode exists this is NOT an SRA\n\t\t\tif (role.orgCode) {\n\n\t\t\t\tlet addedToGroup = false;\n\n\t\t\t\tformattedObj.ORGANIZATIONS.forEach(orgGroup => {\n\n\t\t\t\t\tif (orgGroup.ORGANIZATIONLABEL === role.orgLabel.localizedValue) {\n\n\t\t\t\t\t\tif (role.type === \"RA\") {\n\t\t\t\t\t\t\torgGroup.RA = role;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(orgGroup.RA.assigned){\n\t\t\t\t\t\t\t\tthis._activeOrganization = orgGroup.CODE\n\t\t\t\t\t\t\t\tthis._raAssigned = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tlet added = this.addToGeoObjectTypeGroup(orgGroup, role);\n\n\t\t\t\t\t\t\tif (!added) {\n\t\t\t\t\t\t\t\tlet geoObjectTypeGroup: FormattedGeoObjectTypeRoleGroup = { \"GEOOBJECTTYPEROLESGROUP\": [role], \"ENABLEDROLE\": \"\", \"GEOOBJECTTYPELABEL\": role.geoObjectTypeLabel.localizedValue };\n\n\t\t\t\t\t\t\t\tif (role.assigned) {\n\t\t\t\t\t\t\t\t\tgeoObjectTypeGroup.ENABLEDROLE = role.name\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tthis._activeOrganization = orgGroup.CODE;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\torgGroup.GEOOBJECTTYPEROLES.push(geoObjectTypeGroup);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddedToGroup = true;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\n\t\t\t\t// The organization hasn't been created yet\n\t\t\t\tif (!addedToGroup) {\n\n\t\t\t\t\tlet newObj: FormattedOrganization = { \"ORGANIZATIONLABEL\": null, \"RA\": null, \"GEOOBJECTTYPEROLES\": [], \"CODE\": null };\n\n\t\t\t\t\tif (role.type === \"RA\") {\n\t\t\t\t\t\tnewObj.ORGANIZATIONLABEL = role.orgLabel.localizedValue;\n\t\t\t\t\t\tnewObj.RA = role;\n\t\t\t\t\t\tnewObj.CODE = role.orgCode;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewObj.ORGANIZATIONLABEL = role.orgLabel.localizedValue;\n\n\t\t\t\t\t\tlet geoObjectTypeGroup: FormattedGeoObjectTypeRoleGroup = { \"GEOOBJECTTYPEROLESGROUP\": [role], \"ENABLEDROLE\": \"\", \"GEOOBJECTTYPELABEL\": role.geoObjectTypeLabel.localizedValue };\n\n\t\t\t\t\t\tif (role.assigned) {\n\t\t\t\t\t\t\tgeoObjectTypeGroup.ENABLEDROLE = role.name\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnewObj.GEOOBJECTTYPEROLES.push(geoObjectTypeGroup);\n\t\t\t\t\t}\n\n\t\t\t\t\tformattedObj.ORGANIZATIONS.push(newObj)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (role.type === \"SRA\") {\n\t\t\t\tformattedObj.SRA = role;\n\t\t\t}\n\t\t})\n\n\t\tthis.sortRoles(formattedObj);\n\n\t\treturn formattedObj;\n\t}\n\n\tsortRoles(roles: FormattedRoles): void {\n\t\troles.ORGANIZATIONS.forEach(org => {\n\t\t\torg.GEOOBJECTTYPEROLES.forEach(gotrole => {\n\t\t\t\tgotrole.GEOOBJECTTYPEROLESGROUP.sort((a, b) => {\n\t\t\t\t\tif (RegistryRoleType[a.type] < RegistryRoleType[b.type]) return -1;\n\t\t\t\t\tif (RegistryRoleType[a.type] > RegistryRoleType[b.type]) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t})\n\t\t});\n\t}\n\n\taddToGeoObjectTypeGroup(organization: FormattedOrganization, role: Role): boolean {\n\t\tlet exists = false;\n\t\torganization.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\tif (rg.GEOOBJECTTYPELABEL === role.geoObjectTypeLabel.localizedValue) {\n\n\t\t\t\tif (role.assigned) {\n\t\t\t\t\trg.ENABLEDROLE = role.name\n\t\t\t\t}\n\n\t\t\t\trg.GEOOBJECTTYPEROLESGROUP.push(role);\n\n\t\t\t\texists = true;\n\t\t\t}\n\t\t});\n\n\t\treturn exists;\n\t}\n\n\tonToggleOrgRA(event: any, organization: FormattedOrganization): void {\n\n\t\torganization.RA.assigned = event;\n\t\tthis._raAssigned = event;\n\t\tthis.setActiveOrganization(organization.CODE, event);\n\t\t\n\t\t// Disable all GeoObjectType radio buttons in this organization\n\t\tif (organization.RA.assigned) {\n\t\t\torganization.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\t\trg.ENABLEDROLE = \"\";\n\t\t\t});\n\t\t}\n\n\t\tthis.onChangeRole();\n\t}\n\n\tonToggleSRA(event: any): void {\n\n\t\tthis._roles.ORGANIZATIONS.forEach(org => {\n\t\t\torg.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\t\trg.ENABLEDROLE = \"\";\n\t\t\t});\n\t\t\t\n\t\t\t// Disable RA for each organization\n\t\t\torg.RA.assigned = false;\n\t\t});\n\t\t\n\t\tif(event){\n\t\t\tthis._raAssigned = false;\n\t\t\tthis.setActiveOrganization(null, false);\n\t\t}\n\n\t\tthis.onChangeRole();\n\t}\n\n\tsetGroupRole(event: any, group: FormattedGeoObjectTypeRoleGroup, role: Role, organization: FormattedOrganization): void {\n\t\t\n\t\tif(!role) {\n\t\t\tgroup.ENABLEDROLE = \"\";\n\t\t\tthis.setActiveOrganization(organization.CODE, false);\n\t\t}\n\t\telse {\n\t\t\tgroup.ENABLEDROLE = (event.target.checked) ? role.name : \"\";\n\t\t\tthis.setActiveOrganization(organization.CODE, true);\n\t\t}\n\n\t\tthis.onChangeRole();\n\t}\n\n\tonChangeRole(): void {\n\n\t\tlet newRoleIds: string[] = [];\n\n\t\tthis._roles.ORGANIZATIONS.forEach(orgGroup => {\n\n\t\t\tif (orgGroup.RA && orgGroup.RA.assigned) {\n\t\t\t\tnewRoleIds.push(orgGroup.RA.name);\n\t\t\t}\n\t\t\t// If organization RA is enabled we don't add GeoObjectType level roles\n\t\t\telse {\n\t\t\t\torgGroup.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\t\t\tif (rg.ENABLEDROLE && rg.ENABLEDROLE.length > 0) {\n\t\t\t\t\t\t// add GeoObjectType level role selected\n\t\t\t\t\t\tnewRoleIds.push(rg.ENABLEDROLE);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (this._roles.SRA && this._roles.SRA.assigned) {\n\t\t\tnewRoleIds.push(this._roles.SRA.name);\n\t\t}\n\n\t\tthis._roleIds = newRoleIds;\n\t\tthis.onRoleIdsUpdate.emit(this._roleIds);\n\t}\n\n\tremoveRoleId(id: string): void {\n\n\t\tlet pos = this._roleIds.indexOf(id);\n\t\tif (pos !== -1) {\n\t\t\tthis._roleIds.splice(pos, 1);\n\t\t}\n\n\t\tthis.onRoleIdsUpdate.emit(JSON.stringify(this._roleIds));\n\t}\n\n\tshowData() {\n\t\tconsole.log(this._roles)\n\t}\n}","<div>\n\n  <message></message>\n\n  <loading-bar></loading-bar>\n  <form>\n    <fieldset>\n      \n      <div *ngIf=\"_roles\">\n\n        <!-- SRA -->\n        <div *ngIf=\"_roles.SRA\" class=\"row\">\n          <div class=\"col-sm-12\">\n            <boolean-field [(value)]=\"_roles.SRA.assigned\" (change)=\"onToggleSRA($event)\"\n              [label]=\"_roles.SRA.label.localizedValue\" [disable]=\"!isSRA\"></boolean-field>\n          </div>\n        </div>\n\n        <div *ngFor=\"let org of _roles.ORGANIZATIONS\" class=\"row-holder\">\n\n          <div class=\"heading\">\n            <h4>{{org.ORGANIZATIONLABEL}}</h4>\n          </div>\n\n\n          <!-- Organization administrator -->\n          <div *ngIf=\"org.RA && isSRA\" class=\"row\">\n            <div class=\"col-sm-12\">\n              <boolean-field [(value)]=\"org.RA.assigned\" (change)=\"onToggleOrgRA($event, org)\"\n                [label]=\"org.RA.label.localizedValue\" [disable]=\"(_roles.SRA && _roles.SRA.assigned) || (_raAssigned && !org.RA.assigned) || (_activeOrganization && _activeOrganization !== org.CODE)\"></boolean-field>\n            </div>\n          </div>\n\n          <!-- Organization GeoObjectTypes -->\n          <div class=\"row\">\n            <div class=\"col-sm-12 org-container\" style=\"padding-left:50px;padding-right:50px;\">\n\n              <fieldset [disabled]=\"(org.RA && org.RA.assigned) || (_roles.SRA && _roles.SRA.assigned) || _raAssigned || (_activeOrganization && _activeOrganization !== org.CODE)\">\n                <div *ngFor=\"let roleGroup of org.GEOOBJECTTYPEROLES; let i = index\">\n              \n                  <div class=\"heading\">\n                    <h4>{{roleGroup.GEOOBJECTTYPELABEL}}</h4>\n                  </div>\n              \n                  <label class=\"radio\" [ngClass]=\"{'disabled' : (org.RA && org.RA.assigned) || (_roles.SRA && _roles.SRA.assigned) || _raAssigned || (_activeOrganization && _activeOrganization !== org.CODE) }\" *ngFor=\"let role of roleGroup.GEOOBJECTTYPEROLESGROUP\">\n                    <input type=\"checkbox\" [value]=\"role.name\" [checked]=\"roleGroup.ENABLEDROLE === role.name\" (change)=\"setGroupRole($event, roleGroup, role, org)\" \n                      [name]=\"role.orgCode + role.geoObjectTypeCode\" >\n                    <span style=\"font-weight: 400;\">{{role.label.localizedValue}}</span>\n                  </label>\n\n                  <label class=\"radio\" [ngClass]=\"{'disabled' : (org.RA && org.RA.assigned) || (_roles.SRA && _roles.SRA.assigned) || _raAssigned || (_activeOrganization && _activeOrganization !== org.CODE)}\">\n                    <input type=\"checkbox\" [value]=\"\" [checked]=\"roleGroup.ENABLEDROLE === ''\" (change)=\"setGroupRole($event, roleGroup, null, org)\" \n                      [name]=\"roleGroup + '_none'\"  >\n                    <span style=\"font-weight: 400;\"><localize key=\"accounts.none\"></localize></span>\n                  </label>\n              \n                </div>\n              </fieldset>\n\n            </div>\n          </div>\n\n        </div> <!-- End organizations row -->\n\n      </div>\n\n    </fieldset>\n  </form>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, Inject, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ErrorHandler } from '@shared/component';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { Observable } from 'rxjs';\n\n\nimport { EventService } from '@shared/service';\nimport { SystemLogoService } from '@admin/service/system-logo.service';\nimport { SystemLogo } from '@admin/model/system-logo';\n\ndeclare var acp: any;\n\n@Component( {\n\n    selector: 'system-logo',\n    templateUrl: './system-logo.component.html',\n    styles: []\n} )\nexport class SystemLogoComponent implements OnInit {\n    message: string = null;\n    icon: SystemLogo;\n\n    public uploader: FileUploader;\n    public dropActive: boolean = false;\n\n    file: any;\n    context: string;\n\n    @ViewChild( 'uploadEl' )\n    private uploadElRef: ElementRef;\n\n    public onSuccess: Subject<any>;\n\n\n    constructor( private route: ActivatedRoute,\n        private eventService: EventService,\n        public bsModalRef: BsModalRef )\n        {\n            this.context = acp as string;\n        }\n\n    ngOnInit(): void {\n\n        this.onSuccess = new Subject();\n\n        let options: FileUploaderOptions = {\n            autoUpload: false,\n            queueLimit: 1,\n            removeAfterUpload: true,\n            url: acp + '/logo/apply'\n        };\n\n        this.uploader = new FileUploader( options );\n\n        this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n            this.eventService.start();\n        };\n        this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n            this.eventService.complete();\n        };\n        this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.onSuccess.next( item );\n            this.bsModalRef.hide();\n        };\n        this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.error( response );\n        };\n        this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n            form.append( 'oid', this.icon.oid );\n        };\n    }\n\n    ngAfterViewInit() {\n        let that = this;\n\n        this.uploader.onAfterAddingFile = ( item => {\n            this.uploadElRef.nativeElement.value = '';\n\n            let reader = new FileReader();\n            reader.onload = function( e: any ) {\n                that.file = reader.result;\n            };\n            reader.readAsDataURL( item._file );\n        } );\n    }\n\n    fileOver( e: any ): void {\n        this.dropActive = e;\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n    }\n\n    onSubmit(): void {\n        if( this.file == null ) {\n            this.bsModalRef.hide();\n        }\n        else {\n            this.uploader.uploadAll();\n        }\n    }\n\n    clear(): void {\n        this.file = null;\n\n        this.uploader.clearQueue()\n    }\n\n    error( err: any ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<div class=\"modal-body\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n    \n      <message></message>\n      <loading-bar></loading-bar>\n\n      <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <fieldset>\n          <div>\n            <!-- For display only when editing an icon-->\n            <img *ngIf=\"!file && icon\" style=\"max-width: 300px; max-height: 300px;\" [src]=\"context + '/logo/view?oid=' + icon.oid\" class=\"thumb\">\n\n            <!-- Actual uploaded file preview -->\n            <img *ngIf=\"file\" style=\"max-width: 300px; max-height: 300px;\" [src]=\"file\" class=\"thumb\">\n          </div>\n\n          <div class=\"drop-box-container\" ng2FileDrop [ngClass]=\"{'drop-active': dropActive}\" (fileOver)=\"fileOver($event)\" [uploader]=\"uploader\" (click)=fileInput.click()>\n            <div class=\"drop-box\">\n              <div class=\"inner-drop-box\">\n                <i class=\"fa fa-cloud-upload\">\n                  <p class=\"upload-text\">\n                    <localize key=\"system.image.uploadText\"></localize>\n                  </p>\n                </i>\n              </div>\n            </div>\n            <input type=\"file\" #uploadEl ng2FileSelect #fileInput [uploader]=\"uploader\" id=\"uploader-input\" style=\"display: none\" />\n          </div>\n          \n          <div class=\"row\">\n\t\t\t\t    <div class=\"col-md-12\">\n\t\t\t\t      <div class=\"button-holder text-right\" style=\"margin-top: 20px;\">\n\t\t\t\t        <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" /> <input type=\"submit\" [value]=\"'category.icon.ok' | localize\" class=\"btn btn-primary\" (disabled)=\"form.invalid\" />\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n        </fieldset>\n      </form>\n    </div>\n  </div>\n  \n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\nimport { SystemLogoComponent } from './system-logo.component'\n\nimport { SystemLogo } from '@admin/model/system-logo';\nimport { SystemLogoService } from '@admin/service/system-logo.service';\n\nimport { ErrorHandler } from '@shared/component';\n\ndeclare let acp: string;\n\n@Component({\n  \n  selector: 'system-logos',\n  templateUrl: './system-logos.component.html',\n  styleUrls: []\n})\nexport class SystemLogosComponent implements OnInit {\n  public icons: SystemLogo[];\n  context: string;\n  bsModalRef: BsModalRef;\n  message: string = null;\n  random = 0;\n\n  constructor(\n    private router: Router,\n    private service: SystemLogoService,\n    private modalService: BsModalService,\n    private localizeService: LocalizationService,\n    private changeDetectorRef: ChangeDetectorRef\n    ) {\n\n    this.context = acp as string;\n  }\n\n  ngOnInit(): void {\n    this.getIcons();\n  }\n\n  onClickRemove(icon) : void {\n    this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n        animated: true,\n        backdrop: true,\n        ignoreBackdropClick: true,\n    } );\n    this.bsModalRef.content.message = this.localizeService.decode( \"system.image.removeContent\" );\n    this.bsModalRef.content.submitText = this.localizeService.decode( \"modal.button.delete\" );\n\n    this.bsModalRef.content.onConfirm.subscribe( data => {\n      this.remove(icon);\n    } );\n  }\n\n  getIcons(): void {\n    this.service.getIcons().then(resp => {\n      var filtered = resp.icons.filter(function(el) { return el.oid != \"banner\"; }); \n      this.icons = filtered;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n\n  edit(icon: SystemLogo): void {\n    // this.router.navigate(['/admin/logo', icon.oid]);\n\n    let bsModalRef = this.modalService.show( SystemLogoComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n\n        bsModalRef.content.icon = icon;\n\n        bsModalRef.content.onSuccess.subscribe( data => {\n\n          this.icons.forEach(ico => {\n\n            // Setting a random number at the end of the url is a hack to change \n            // the image url to force Angular to rerender the image.\n            this.random = Math.random();\n\n            ico.oid = ico.oid\n          })\n\n          this.changeDetectorRef.detectChanges();\n        })\n  }\n\n  remove(icon: SystemLogo): void {\n    this.service.remove(icon.oid).then(response => {\n      icon.custom = false;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n\n  error( err: HttpErrorResponse ): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div>\n\n\n  <!-- <message ></message> -->\n  \n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n  \n  <div class=\"list-table-wrapper\">\n    <table id=\"manage-icons-table\" class=\"list-table table table-bordered table-striped\">        \n      <thead>\n        <tr>\n          <th></th>\n          <th class=\"label-column\"><localize key='system.image.label'></localize></th>\n          <th class=\"label-column\"><localize key='system.image.preview'></localize></th>\n        </tr>\n      </thead>    \n      <tbody>\n        <tr *ngFor=\"let icon of icons\" class=\"fade-ngRepeat-item\">\n          <td class=\"button-column\">\n            <span>\n              <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(icon)\" [title]=\"'system.image.editTooltip' | localize\"></a>\n              <a *ngIf=\"icon.custom\" class=\"fa fa-trash-o ico-remove\" [title]=\"'system.image.removeTooltip' | localize\"\n                 (click)=\"onClickRemove(icon)\"></a>\n            </span>\n          </td>\n          <td class=\"label-column\">{{ icon.label }}</td>\n          <td class=\"icon-thumbnail-column\">\n            <img style=\"width:42px;height:42px;\" class=\"thumb\" [src]=\"context + '/logo/view?oid=' + icon.oid + '&random=' + random\" alt=\"Icon\">\n          </td>\n        </tr>      \n      </tbody>    \n    </table>\n  </div>\n  \n  <div *ngIf=\"icons === null\" ><localize key='dataset.loadingData'></localize></div>\n\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { ErrorHandler } from '@shared/component';\nimport { Email } from '@admin/model/email';\nimport { EmailService } from '@admin/service/email.service';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\n@Component({\n\n\tselector: 'email',\n\ttemplateUrl: './email.component.html',\n\tstyleUrls: []\n})\nexport class EmailComponent implements OnInit {\n\tmessage: string = null;\n\tpublic email: Email = {\n\t\toid: '',\n\t\tserver: '',\n\t\tusername: '',\n\t\tpassword: '',\n\t\tport: 0,\n\t\tfrom: '',\n\t\tto: '',\n\t};\n\n\tpublic onSuccess: Subject<any>;\n\n\tconstructor(private service: EmailService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.service.getInstance().then(email => {\n\t\t\tthis.email = email;\n\t\t});\n\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.apply(this.email)\n\t\t\t.then(() => {\n\t\t\t\tthis.onSuccess.next(true);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t})\n\t\t\t.catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}\n","\n<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n  \n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <!-- <div class=\"modal-dialog\"> -->\n      <!-- <div class=\"modal-content\"> -->\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        <div class=\"heading text-center\">\n          <h1><localize key=\"email.modal.heading\"></localize></h1>\n        </div>      \n        <fieldset>            \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.server\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.server\" name=\"server\" required #server=\"ngModel\">\n              </span>\n              <div *ngIf=\"server.errors?.url\" class=\"inline-error-message\">\n                <localize key=\"email.server.validation\"></localize>\n              </div>                            \n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.password\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"password\" [(ngModel)]=\"email.password\" name=\"password\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.port\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"number\" [(ngModel)]=\"email.port\" name=\"port\" required #port=\"ngModel\" number>\n              </span>\n              <div *ngIf=\"port.errors?.number\" class=\"inline-error-message\">\n                <localize key=\"email.port.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.from\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.from\" name=\"from\" required #from=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"from.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.from.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.to\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.to\" name=\"to\"  #to=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"to.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.to.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { PageResult } from '@shared/model/core';\n\nimport { User, Account } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\nimport { AccountComponent } from './account.component';\nimport { AccountInviteComponent } from '../account/account-invite.component';\nimport { AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'accounts',\n\ttemplateUrl: './accounts.component.html',\n\tstyleUrls: ['./accounts.css']\n})\nexport class AccountsComponent implements OnInit {\n\tres: PageResult<User> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10\n\t};\n\tbsModalRef: BsModalRef;\n\tmessage: string = null;\n\tisRA: boolean = false;\n\n\tconstructor(private service: AccountService, private modalService: BsModalService, authService: AuthService) {\n\t\tthis.isRA = authService.isRA();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.page(1).then(res => {\n\t\t\tthis.res = res;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\tedit(user: User): void {\n\t\t// this.router.navigate(['/admin/account', user.oid]);\n\n\t\tthis.bsModalRef = this.modalService.show(AccountComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.oid = user.oid;\n\t\tthis.bsModalRef.content.setExternalSystems = this.res.externalSystems;\n\n\t\tlet that = this;\n\t\tthis.bsModalRef.content.onEdit.subscribe((data: Account) => {\n\n\t\t\tlet index = that.res.resultSet.findIndex(u => u.oid === data.user.oid);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthat.res.resultSet[index] = data.user;\n\t\t\t}\n\t\t});\n\t}\n\n\tnewInstance(): void {\n\t\t// this.router.navigate(['/admin/account', 'NEW']);\n\n\t\tthis.bsModalRef = this.modalService.show(AccountComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.oid = 'NEW';\n\t\tthis.bsModalRef.content.setExternalSystems = this.res.externalSystems;\n\n\t\tthis.bsModalRef.content.onEdit.subscribe(data => {\n\t\t\tthis.onPageChange(this.res.pageNumber);\n\t\t});\n\n\t}\n\n\tinviteUsers(): void {\n\t\t// this.router.navigate(['/admin/invite']);\t  \n\n\t\tthis.bsModalRef = this.modalService.show(AccountInviteComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.organization = null;\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tthis.service.page(pageNumber).then(res => {\n\t\t\tthis.res = res;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <message></message>\n        <!-- <loading-bar></loading-bar> -->\n\n        <h2>\n            <localize key=\"accounts.title\"></localize>\n        </h2>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\" *ngIf=\"isRA\">\n            <div class=\"col-md-12 text-right\">\n                <input class=\"btn btn-primary\" style=\"margin-top: 10px;\" type=\"submit\" [value]=\"'accounts.inviteUser' | localize\" (click)=\"inviteUsers()\">\n            </div>\n        </div>\n\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        \n        <div class=\"list-table-wrapper\">\n            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th *ngIf=\"isRA\"></th>\n                        <th class=\"label-column\"><localize key='account.username'></localize></th>\n                        <th class=\"label-column\"><localize key='account.firstname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.lastname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.phonenumber'></localize></th>\n                        <th class=\"label-column\"><localize key='account.email'></localize></th>\n                        <th class=\"label-column\"><localize key='account.status'></localize></th>\n                        <!-- <th class=\"label-column\"><localize key='account.roles'></localize></th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let account of res.resultSet | paginate: { itemsPerPage: res.pageSize, currentPage: res.pageNumber, totalItems: res.count }\" class=\"fade-ngRepeat-item\" [ngClass]=\"{'inactive': account.inactive}\">\n                        <td *ngIf=\"isRA\" class=\"button-column\">\n                          <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(account)\" [title]=\"'account.editTooltip' | localize\"></a>\n                        </td>\n                        <td class=\"label-column username-col\">{{ account.username }}</td>\n                        <td class=\"label-column firstname-col\">{{ account.firstName }}</td>\n                        <td class=\"label-column lastname-col\">{{ account.lastName }}</td>\n                        <td class=\"label-column phone-col\">{{ account.phoneNumber }}</td>\n                        <td class=\"label-column email-col\">{{ account.email }}</td>\n                        <td class=\"label-column email-col\">\n                          <localize *ngIf=\"account.inactive\" key='account.status.inactive'></localize>\n                          <localize *ngIf=\"!account.inactive\" key='account.status.active'></localize>\n                        </td>\n                        <!-- <td class=\"label-column role-col\">{{ account.roles }}</td> -->\n                    </tr>\n                    <tr *ngIf=\"isRA\">\n                        <td class=\"button-column\"><a class=\"fa fa-plus\" (click)=\"newInstance()\" [title]=\"'account.newTooltip' | localize\"></a></td>\n                    </tr>\n\n                </tbody>\n            </table>\n        </div>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n    </div>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Subscription } from 'rxjs';\n\nimport { User } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\n\nimport { ErrorHandler } from '@shared/component';\n\ndeclare let acp: string;\n\n@Component({\n\tselector: 'account-invite-complete',\n\ttemplateUrl: './account-invite-complete.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteCompleteComponent implements OnInit, OnDestroy {\n\tuser: User;\n\tsub: Subscription;\n\ttoken: string;\n\tmessage: string = null;\n\n\tconstructor(\n\t\tprivate service: AccountService,\n\t\tprivate route: ActivatedRoute) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.newUserInstance().then((user: User) => {\n\t\t\tthis.user = user;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.sub = this.route.params.subscribe(params => {\n\t\t\tthis.token = params['token'];\n\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.sub.unsubscribe();\n\t}\n\n\tcancel(): void {\n\t\twindow.location.href = acp;\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.inviteComplete(this.user, this.token).then(response => {\n\t\t\twindow.location.href = acp;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}","<div class=\"new-admin-design-main\">\n  <cgr-header [loggedIn]=false></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n\t  <message></message>\n\t  <loading-bar></loading-bar>\n\t  \n\t  <h2><localize key=\"account.invite.createTitle\"></localize></h2>\n\t\n\t  <form *ngIf=\"user != null\" #form=\"ngForm\" style=\"padding-bottom: 20px;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n\t    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n\t      <!--  <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n\t        <fieldset>            \n\t          <div class=\"heading\">\n\t            <h3><localize key=\"account.user.heading\"></localize></h3>\n\t          </div>      \n\t          <hr>        \n\t          \n\t          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\t          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.firstname\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\" required>\n\t              </span>\n\t            </div>\n\t          </div>          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.lastname\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\" required>\n\t              </span>\n\t            </div>\n\t          </div>  \n            \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>\n            \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.phonenumber\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.phoneNumber\" name=\"phoneNumber\" >\n\t              </span>\n\t<!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n\t<!--                 <localize key=\"account.phone.validation\"></localize> -->\n\t<!--               </div>                                           -->\n\t            </div>\n\t          </div>  \n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n            \n                     \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.email\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n\t              </span>\n\t              <div *ngIf=\"aemail.errors?.email && user.email && user.email.length > 0\" style=\"float:none;\" class=\"inline-error-message\">\n\t                <localize key=\"account.email.validation\"></localize>\n\t              </div>                                          \n\t            </div>\n\t          </div>          \n            \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n            \n            \n\t          <div class=\"heading\">\n\t            <h3><localize key=\"account.info.heading\"></localize></h3>\n\t          </div>      \n\t          <hr>          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.username\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [disabled]=\"!user.newInstance && user.username === 'admin'\" [(ngModel)]=\"user.username\" name=\"username\" required>\n\t              </span>\n\t            </div>\n\t          </div>\n\t          <div>\n\t            <div class=\"row-holder\">\n\t              <div class=\"label-holder\">\n\t                <label><localize key=\"account.password\"></localize></label>\n\t              </div>          \n\t              <div class=\"holder\" >\n\t                <span class=\"text\">\n\t                  <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                      <password-strength-bar [passwordToCheck]=\"user.password\"></password-strength-bar>\n\t                </span>\n\t              </div>\n\t            </div>  \n\t            <div class=\"row-holder\">\n\t              <div class=\"label-holder\">\n\t                <label><localize key=\"account.certainPassword\"></localize></label>\n\t              </div>          \n\t              <div class=\"holder\" >\n\t                <span class=\"text\">\n\t                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n\t                </span>\n\t                <div *ngIf=\"certainPassword.errors?.equalTo\" style=\"float: none;\" class=\"inline-error-message\">\n\t                  <localize key=\"account.certainPassword.validation\"></localize>\n\t                </div>                                                       \n\t              </div>\n\t            </div>  \n\t          </div>\n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t            </div>                    \n\t            <div class=\"holder\">\n\t              <div class=\"button-holder\">\n\t                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n\t                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n\t              </div>\n\t            </div>\n\t          </div>\n\t        </fieldset>\n\t      <!-- </div> -->\n\t    <!-- </div> -->\n\t  </form>\n  </div>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AccountInviteComponent } from './account/account-invite.component';\nimport { EmailComponent } from './email/email.component'\nimport { OrganizationModalComponent } from './organization/organization-modal.component'\nimport { ExternalSystemModalComponent } from './external-system/external-system-modal.component'\nimport { NewLocaleModalComponent } from './localization-manager/new-locale-modal.component';\nimport { ImportLocalizationModalComponent } from './localization-manager/import-localization-modal.component';\n\nimport { Settings } from '@admin/model/settings';\nimport { Locale } from '@admin/model/localization-manager';\nimport { User } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\n\nimport { PageResult, Organization, ExternalSystem } from '@shared/model/core';\nimport { ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService, ExternalSystemService, OrganizationService } from '@shared/service';\n\ndeclare let acp: string;\n\n@Component({\n\tselector: 'settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.css']\n})\nexport class SettingsComponent implements OnInit {\n\tbsModalRef: BsModalRef;\n\tmessage: string = null;\n\torganizations: Organization[] = [];\n\tinstalledLocales: Locale[]; // TODO: this should be from the localizaiton-manager model\n\tisAdmin: boolean;\n\tisSRA: boolean;\n\tisRA: boolean;\n\tsettings: Settings = { email: { isConfigured: false } }\n\n\tsRAs: PageResult<User> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10\n\t};\n\n\tsystems: PageResult<ExternalSystem> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10\n\t};\n\n\tconstructor(\n\t\tprivate modalService: BsModalService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate authService: AuthService,\n\t\tprivate externalSystemService: ExternalSystemService,\n\t\tprivate orgService: OrganizationService,\n\t\tprivate accountService: AccountService\n\t) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isSRA = authService.isSRA();\n\t\tthis.isRA = authService.isRA();\n\t}\n\n\tngOnInit(): void {\n\n\t\t// this.registryService.getLocales().then( locales => {\n\t\t//     this.localizeService.setLocales( locales );\n\t\t// } ).catch(( err: HttpErrorResponse ) => {\n\t\t//     this.error( err );\n\t\t// } );\n\n\t\tthis.installedLocales = this.getLocales();\n\n\t\tthis.orgService.getOrganizations().then(orgs => {\n\t\t\tthis.organizations = orgs\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.onSRAPageChange(1);\n\t\tthis.onSystemPageChange(1);\n\t}\n\n\n\tpublic getCGRVersion(): string {\n\t\treturn this.authService.getVersion();\n\t}\n\n\tpublic getLocales(): Locale[] {\n\t\treturn this.authService.getLocales();\n\t}\n\n\texportLocalization() {\n\t\t//this.localizationManagerService.exportLocalization();\n\t\twindow.location.href = acp + \"/localization/exportSpreadsheet\";\n\t}\n\n\tpublic importLocalization(): void {\n\t\tthis.modalService.show(ImportLocalizationModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t}\n\n\n\tpublic onEditOrganization(org: Organization): void {\n\t\tlet bsModalRef = this.modalService.show(OrganizationModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tbsModalRef.content.organization = org;\n\t\tbsModalRef.content.isNewOrganization = false;\n\n\t\tbsModalRef.content.onSuccess.subscribe(data => {\n\t\t\t//\t\t\tthis.organizations.push(data);\n\t\t\tconst index = this.organizations.findIndex(x => x.code === data.code);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.organizations[index] = data;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.organizations.push(data);\n\t\t\t}\n\n\t\t})\n\t}\n\n\tpublic onRemoveOrganization(code: string, name: string): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + name + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t// this.orgService.removeOrganization(code);\n\n\t\t\tthis.orgService.removeOrganization(code).then(response => {\n\t\t\t\tfor (let i = this.organizations.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (this.organizations[i].code === code) {\n\t\t\t\t\t\tthis.organizations.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\tpublic newOrganization(): void {\n\t\tlet bsModalRef = this.modalService.show(OrganizationModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tbsModalRef.content.isNewOrganization = true;\n\n\t\tbsModalRef.content.onSuccess.subscribe(data => {\n\t\t\tthis.organizations.push(data);\n\t\t})\n\t}\n\n\tpublic newLocalization(): void {\n\n\t\tlet bsModalRef = this.modalService.show(NewLocaleModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true\n\t\t});\n\n\t\tbsModalRef.content.onSuccess.subscribe((locale: string) => {\n\t\t\tthis.localizeService.addLocale(locale);\n\t\t})\n\t}\n\n\tpublic configureEmail(): void {\n\t\tthis.bsModalRef = this.modalService.show(EmailComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.onSuccess.subscribe(data => {\n\t\t\tthis.settings.email.isConfigured = data\n\t\t})\n\t}\n\n\tinviteUsers(): void {\n\t\t// this.router.navigate(['/admin/invite']);\t  \n\n\t\tthis.bsModalRef = this.modalService.show(AccountInviteComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.organization = null;\n\t}\n\n\tonSRAPageChange(pageNumber: number): void {\n\t\tthis.accountService.getSRAs(pageNumber).then(sRAs => {\n\t\t\tthis.sRAs = sRAs\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\t/* EXTERNAL SYSTEM LOGIC */\n\n\tonSystemPageChange(pageNumber: number): void {\n\t\tthis.externalSystemService.getExternalSystems(pageNumber, this.systems.pageSize).then(systems => {\n\t\t\tthis.systems = systems;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tnewSystem(): void {\n\t\tlet bsModalRef = this.modalService.show(ExternalSystemModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tbsModalRef.content.init(this.organizations);\n\t\tbsModalRef.content.onSuccess.subscribe(data => {\n\t\t\tthis.onSystemPageChange(this.systems.pageNumber);\n\t\t})\n\t}\n\n\tonEditSystem(system: ExternalSystem): void {\n\n\t\tthis.externalSystemService.getExternalSystem(system.oid).then(system => {\n\n\t\t\tlet bsModalRef = this.modalService.show(ExternalSystemModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(this.organizations, system);\n\t\t\tbsModalRef.content.onSuccess.subscribe(data => {\n\t\t\t\tthis.onSystemPageChange(this.systems.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonRemoveSystem(system: ExternalSystem): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + system.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.externalSystemService.removeExternalSystem(system.oid).then(response => {\n\t\t\t\tthis.onSystemPageChange(this.systems.pageNumber);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\t/* ERROR HANDLING LOGIC */\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n\n    <div id=\"app-container\" class=\"container\">\n\n        <message></message>\n        <!-- <loading-bar></loading-bar> -->\n\n        <h2>\n            <localize key=\"settings.title\"></localize>\n        </h2>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div style=\"padding-bottom: 30px;\"> \n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.information.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <h4><localize key=\"settings.version.label\"></localize> {{getCGRVersion()}}</h4>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.administrators.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-systems-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"label-column\"><localize key='account.username'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.firstname'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.lastname'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.phonenumber'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.email'></localize></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let account of sRAs.resultSet | paginate: { itemsPerPage: sRAs.pageSize, currentPage: sRAs.pageNumber, totalItems: sRAs.count }\" class=\"fade-ngRepeat-item\">\n                                        <td class=\"label-column username-col\">{{ account.username }}</td>\n                                        <td class=\"label-column firstname-col\">{{ account.firstName }}</td>\n                                        <td class=\"label-column lastname-col\">{{ account.lastName }}</td>\n                                        <td class=\"label-column phone-col\">{{ account.phoneNumber }}</td>\n                                        <td class=\"label-column email-col\">{{ account.email }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <pagination-controls (pageChange)=\"onSRAPageChange($event)\"></pagination-controls>\n                            \n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            \n\n            <div *ngIf=\"isAdmin\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.organizations.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-organizations-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th *ngIf=\"isSRA\"></th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.code.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.name.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.contact.header\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let org of organizations\">\n                                        <td *ngIf=\"isSRA\" class=\"button-column\">\n                                            <a class=\"fa fa-pencil ico-edit\" (click)=\"onEditOrganization(org)\"  [title]=\"'account.editTooltip' | localize\"></a> \n                                            <a class=\"fa fa-trash-o ico-remove\" (click)=\"onRemoveOrganization(org.code, org.code)\" [title]=\"'account.removeTooltip' | localize\" ></a>\n                                        </td>\n                                        <td class=\"label-column\">{{org.code}}</td>\n                                        <td class=\"label-column\">{{org.label.localizedValue}}</td>\n                                        <td class=\"label-column\">{{org.contactInfo.localizedValue}}</td>\n                                    </tr>\n                                    <tr *ngIf=\"isSRA\">\n                                        <td class=\"button-column\">\n                                            <a class=\"fa fa-plus\" (click)=\"newOrganization()\" [title]=\"'account.newTooltip' | localize\"></a>\n                                        </td>\n                                    </tr>\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.accounts.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <a [routerLink]=\"'/admin/accounts/'\" routerLinkActive=\"active\">\n                                    <button class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"settings.manage.accounts.button\"></localize>\n                                    </button>\n                                </a>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\" *ngIf=\"isSRA || isRA\">\n                                <input class=\"btn btn-primary\" style=\"margin-top:10px;\" type=\"submit\" [value]=\"'accounts.inviteUser' | localize\" (click)=\"inviteUsers()\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isSRA\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.localization.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.lang.table.country.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.lang.table.variant.header\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let loc of installedLocales\">\n                                        <td class=\"label-column\">{{loc.language}}</td>\n                                        <td class=\"label-column\">{{loc.country}}</td>\n                                        <td class=\"label-column\">{{loc.variant}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"button-column\"><a class=\"fa fa-plus\" (click)=\"newLocalization()\" [title]=\"'account.newTooltip' | localize\"></a></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        \n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                               <input class=\"btn btn-primary\" type=\"submit\" (click)=\"exportLocalization()\" [value]=\"'localization-manager.exportButton' | localize\">\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                               <input class=\"btn btn-primary\" style=\"margin-top:10px;\" type=\"submit\" (click)=\"importLocalization()\" [value]=\"'localization-manager.importButton' | localize\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isSRA\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.branding.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <system-logos></system-logos>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isSRA\" class=\"row\" style=\"margin-bottom: 30px;\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.email.heading\"></localize></h3>\n                     \n                    <div class=\"content-wrapper\">\n                        <input class=\"btn btn-primary\" type=\"submit\" (click)=\"configureEmail()\" [value]=\"'settings.email.configure' | localize\">\n\n                        <i *ngIf=\"settings.email.isConfigured\" class=\"fa fa-check\" aria-hidden=\"true\"><localize key=\"settings.email.configured\"></localize></i>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"isRA && organizations.length > 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.external.system.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-systems-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>\n                                            <localize key=\"external.system.type\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"external.system.label\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"external.system.description\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let system of systems.resultSet | paginate: { itemsPerPage: systems.pageSize, currentPage: systems.pageNumber, totalItems: systems.count }\">\n                                        <td class=\"button-column\">\n                                          <a class=\"fa fa-pencil ico-edit\" (click)=\"onEditSystem(system)\"  [title]=\"'account.editTooltip' | localize\"></a> \n                                          <a class=\"fa fa-trash-o ico-remove\" (click)=\"onRemoveSystem(system)\" [title]=\"'account.removeTooltip' | localize\" ></a>\n                                        </td>\n                                        <td class=\"label-column\">\n                                          <localize *ngIf=\"system.type === 'DHIS2ExternalSystem'\" key=\"external.system.dhis2\"></localize>\n                                          <localize *ngIf=\"system.type === 'RevealExternalSystem'\" key=\"external.system.reveal\"></localize>                                        \n                                        </td>\n                                        <td class=\"label-column\">{{system.label.localizedValue}}</td>\n                                        <td class=\"label-column\">{{system.description.localizedValue}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"button-column\">\n                                            <a class=\"fa fa-plus\" (click)=\"newSystem()\" [title]=\"'account.newTooltip' | localize\"></a>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <pagination-controls (pageChange)=\"onSystemPageChange($event)\"></pagination-controls>\n                            \n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div *ngIf=\"isRA && organizations.length > 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3>\n                        <localize key=\"settings.external.synchronization.heading\"></localize>\n                    </h3>\n            \n                    <div class=\"content-wrapper\">\n            \n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <a [routerLink]=\"'/registry/synchronization-configs'\" routerLinkActive=\"active\">\n                                    <button class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"settings.external.synchronization.button\"></localize>\n                                    </button>\n                                </a>\n                            </div>\n                        </div>\n            \n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ErrorHandler } from '@shared/component';\nimport { Organization } from '@shared/model/core';\n\nimport { LocalizationService, OrganizationService } from '@shared/service';\n\n@Component({\n\tselector: 'organization-modal',\n\ttemplateUrl: './organization-modal.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class OrganizationModalComponent implements OnInit {\n\n\tmessage: string = null;\n\torganization: Organization = { code: \"\", label: this.lService.create(), contactInfo: this.lService.create() };\n\tisNewOrganization: boolean = true;\n\n\tpublic onSuccess: Subject<Organization>;\n\n\tconstructor(private orgService: OrganizationService, public bsModalRef: BsModalRef, private lService: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.isNewOrganization) {\n\t\t\tthis.orgService.newOrganization(this.organization).then(data => {\n\t\t\t\tthis.onSuccess.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.orgService.updateOrganization(this.organization).then(data => {\n\t\t\t\tthis.onSuccess.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}","<div>\n  \n  <message></message>\n\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n        <fieldset>            \n          <div class=\"heading text-center\">\n            <h1><localize key=\"organization.heading\"></localize></h1>\n          </div>      \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.code\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n                <input type=\"text\" [(ngModel)]=\"organization.code\" name=\"code\" [disabled]=\"!isNewOrganization\" required>\n            </div>\n          </div>     \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.name\"></localize></label>\n            </div>          \n            <div class=\"holder\" style=\"padding-top:10px;\">\n                <div class=\"form-group\" *ngFor=\"let localeValue of organization.label.localeValues\">\n                  <label> <convert-key-label [key]=\"localeValue.locale\"></convert-key-label></label>\n                  <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\" required>\n                </div>\n            </div>\n          </div>  \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.contact\"></localize></label>\n            </div>          \n            <div class=\"holder\" style=\"padding-top:10px;\">\n                <div class=\"form-group\" *ngFor=\"let localeValue of organization.contactInfo.localeValues\">\n                  <label> <convert-key-label [key]=\"localeValue.locale\"></convert-key-label></label>\n                  <input  [(ngModel)]=\"localeValue.value\" [name]=\"'contact-' + localeValue.locale\" type=\"input\" class=\"form-control\">\n                </div>\n            </div>\n          </div>  \n\n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\nimport { ExternalSystem, Organization, OAuthServer } from '@shared/model/core';\n\nimport { LocalizationService, AuthService, ExternalSystemService } from '@shared/service';\n\nimport { ErrorHandler } from '@shared/component';\n\ndeclare var acp: any;\n\n@Component({\n\tselector: 'external-system-modal',\n\ttemplateUrl: './external-system-modal.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class ExternalSystemModalComponent implements OnInit {\n\n  context: string;\n\n\tmessage: string = null;\n\t\n\teditPassword: boolean = false;\n\t\n\tisNew: boolean = false;\n\n\tsystem: ExternalSystem = {\n\t\tid: \"\",\n\t\ttype: 'DHIS2ExternalSystem',\n\t\torganization: \"\",\n\t\tlabel: this.lService.create(),\n\t\tdescription: this.lService.create(),\n\t\tversion: \"2.31\",\n\t\toAuthServer: null\n\t};\n\n\torganizations: Organization[] = [];\n\t\n\toauthSupported: boolean = true;\n\n\n\tpublic onSuccess: Subject<ExternalSystem>;\n\n\tconstructor(private systemService: ExternalSystemService, private authService: AuthService, public bsModalRef: BsModalRef, private lService: LocalizationService) {\n\t  this.context = acp as string;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tinit(organizations: Organization[], system: ExternalSystem): void {\n\t\tthis.organizations = organizations.filter(o => {\n\t\t\treturn this.authService.isOrganizationRA(o.code);\n\t\t});\n\n\t\tif (system != null) {\n\t\t\tthis.system = system;\n\t\t\tthis.isNew = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t  this.isNew = true;\n\t\t  this.editPassword = true;\n\t\t}\n\t}\n\t\n\tenableOAuth(): void {\n\t  if (!this.system.url.endsWith(\"/\"))\n\t  {\n\t    this.system.url = this.system.url + \"/\";\n\t  }\n\t  \n\t  this.oauthSupported = true;\n\t  this.message = null;\n\t  \n\t  this.systemService.getSystemCapabilities(this.system).then(capabilities => {\n      if (capabilities.oauth)\n      {\n        this.system.oAuthServer = {\n          authorizationLocation: this.system.url + \"uaa/oauth/authorize\",\n          tokenLocation: this.system.url + \"uaa/oauth/token\",\n          profileLocation: this.system.url + \"api/me\",\n          clientId: \"georegistry\",\n          secretKey: \"\",\n          serverType: \"DHIS2\"\n        };\n      }\n      else\n      {\n        this.oauthSupported = false;\n      }\n    }).catch((err: HttpErrorResponse) => {\n      this.error(err);\n    });\n\t}\n\t\n\tremoveOauth(): void {\n\t  delete this.system.oAuthServer;\n\t}\n\n  downloadDhis2Plugin(): void {\n    window.location.href = this.context + \"/external-system/download-dhis2-plugin\";\n  }\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tonSubmit(): void {\n\t\tthis.systemService.applyExternalSystem(this.system).then(data => {\n\t\t\tthis.onSuccess.next(data);\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}","<div>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n        <fieldset>\n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n               \n          <div class=\"heading text-center\">\n            <h1><localize key=\"external.system.heading\"></localize></h1>\n          </div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.type\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"select\">\n                <select type=\"text\" [(ngModel)]=\"system.type\" name=\"type\" [disabled]=\"system.oid != null\" required>\n                  <option></option>\n                  <option value=\"DHIS2ExternalSystem\"><localize key=\"external.system.dhis2\"></localize></option>\n                  <option value=\"RevealExternalSystem\"><localize key=\"external.system.reveal\"></localize></option>\n                </select>\n              </span>\n            </div>\n          </div>     \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.organization\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"select\">\n                <select type=\"text\" [(ngModel)]=\"system.organization\" name=\"organization\" [disabled]=\"system.oid != null\" required>\n                  <option></option>\n                  <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label.localizedValue}}</option>\n                </select>\n              </span>\n            </div>\n          </div>     \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.id\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.id\" name=\"id\" [disabled]=\"system.oid != null\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.label\"></localize></label>\n            </div>\n            <div class=\"holder\" >\n              <span class=\"text\">\n\n                <div class=\"form-group\" *ngFor=\"let localeValue of system.label.localeValues\">\n                  <label><convert-key-label [key]=\"localeValue.locale\"></convert-key-label></label>\n                  <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\">\n                </div>\n              </span>\n            </div>\n            \n            \n<!--             <div class=\"form-group\" *ngFor=\"let localeValue of hierarchyType.label.localeValues\"> -->\n<!--               <label for=\"labelInput\"> -->\n<!--                 <localize key=\"data.property.label.label\"></localize>  -->\n<!--                 <span  style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span> -->\n<!--               </label> -->\n<!--               <input [disabled]=\"readOnly\" [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\" -->\n<!--                 required> -->\n<!--             </div> -->\n            \n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.description\"></localize></label>\n            </div>\n            <div class=\"holder\" >\n              <span class=\"text\">\n                <div class=\"form-group\" *ngFor=\"let localeValue of system.description.localeValues\">\n                  <label> <convert-key-label [key]=\"localeValue.locale\"></convert-key-label></label>\n                  <input  [(ngModel)]=\"localeValue.value\" [name]=\"'contact-' + localeValue.locale\" type=\"input\" class=\"form-control\">\n                </div>\n                <!-- <input type=\"text\" [(ngModel)]=\"external.system.contactInfo\" name=\"contact\" required> -->\n              </span>\n            </div>\n          </div>  \n          \n          <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          \n          <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.password\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n\t            <div>\n\t              <input *ngIf=\"!editPassword\" type=\"button\" [value]=\"'external.system.editPassword' | localize\" class=\"btn btn-primary\" (click)=\"editPassword = !editPassword\" />\n\t              <input *ngIf=\"editPassword && !isNew\" style=\"margin-bottom:5px;\" type=\"button\" [value]=\"'external.system.editPasswordCancel' | localize\" class=\"btn btn-default\" (click)=\"editPassword = !editPassword\" />\n\t            </div>\n              <span *ngIf=\"editPassword\" class=\"text\">\n                <input type=\"password\" [(ngModel)]=\"system.password\" name=\"password\" required>\n              </span>\n            </div>\n          </div>\n          \n          <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"external.system.url\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.url\" name=\"url\" required>\n              </span>\n            </div>\n          </div>\n          \n<!--           <div class=\"row-holder\"> -->\n<!-- \t        <div  class=\"label-holder\"> -->\n<!--               <label><localize key=\"external.system.oauthHeader\"></localize></label> -->\n<!--           <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"heading\"> -->\n<!--             <h3><localize key=\"external.system.oauthHeader\"></localize></h3> -->\n<!--           </div> -->\n          <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n\t        <div  class=\"label-holder\">\n              <label><localize key=\"external.system.oauthHeader\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <input *ngIf=\"system.oAuthServer == null && system.type === 'DHIS2ExternalSystem'\" type=\"button\" [value]=\"'external.system.enableOauth' | localize\" class=\"btn btn-primary\" [disabled]=\"system.url == null\" (click)=\"enableOAuth()\" />\n              <hr *ngIf=\"system.oAuthServer != null && system.type === 'DHIS2ExternalSystem'\" style=\"border-color:lightgrey;\">\n            </div>\n          </div>\n          <div *ngIf=\"!oauthSupported\">\n            <div class=\"alert alert-danger\" role=\"alert\"><localize key=\"external.system.oauthNotSupported\"></localize></div>\n          </div>\n          <div *ngIf=\"system.oAuthServer != null && system.type === 'DHIS2ExternalSystem'\">\n            <!--\n\t          <div class=\"holder\">\n\t            <div>\n\t              <input type=\"button\" value=\"Push to DHIS2\" [disabled]=\"system.url == null || system.username == null || system.password == null\" class=\"btn btn-default\" (click)=\"downloadDhis2Plugin()\" />              \n\t            </div>\n\t          </div>\n\t          -->\n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize key=\"external.system.oauth.clientId\"></localize></label>\n\t            </div>\n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.clientId\" name=\"clientId\" required>\n\t              </span>\n\t            </div>\n\t          </div>\n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize key=\"external.system.oauth.secretKey\"></localize></label>\n\t            </div>\n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.secretKey\" name=\"secretKey\" required>\n\t              </span>\n\t            </div>\n\t          </div>\n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize key=\"external.system.oauth.profileLocation\"></localize></label>\n\t            </div>\n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.profileLocation\" name=\"profileLocation\"  required>\n\t              </span>\n\t            </div>\n\t          </div>\n\t          <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize key=\"external.system.oauth.tokenLocation\"></localize></label>\n              </div>\n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"text\" [(ngModel)]=\"system.oAuthServer.tokenLocation\" name=\"tokenLocation\"  required>\n                </span>\n              </div>\n            </div>\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize key=\"external.system.oauth.authorizationLocation\"></localize></label>\n              </div>\n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"text\" [(ngModel)]=\"system.oAuthServer.authorizationLocation\" name=\"authorizationLocation\"  required>\n                </span>\n              </div>\n            </div>\n            \n            <div class=\"row-holder\">\n              <div  class=\"label-holder\">\n\t            </div> \n\t            <div class=\"holder\" >\n\t              <input type=\"button\" [value]=\"'external.system.oauth.removeOauth' | localize\" class=\"btn btn-danger\" (click)=\"removeOauth()\" />\n\t            </div>\n            </div>\n\t      </div>\n\n          <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n            <div  class=\"label-holder\">\n              <label><localize key=\"external.system.oauth.downloadDhis2PluginHeader\"></localize></label>\n            </div> \n            <div class=\"holder\" >\n              <input type=\"button\" [value]=\"'external.system.oauth.downloadDhis2Plugin' | localize\" class=\"btn btn-primary\" (click)=\"downloadDhis2Plugin()\" />\n            </div>\n          </div>\n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n  </form>\n</div>\n","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { LocalizationManagerService } from '@admin/service/localization-manager.service';\nimport { AllLocaleInfo } from '@admin/model/localization-manager';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n@Component({\n\tselector: 'new-locale-modal',\n\ttemplateUrl: './new-locale-modal.component.html',\n\tstyleUrls: []\n})\nexport class NewLocaleModalComponent {\n\n\tallLocaleInfo: AllLocaleInfo;\n\tlanguage: string;\n\tcountry: string;\n\tvariant: string;\n\n\tpublic onSuccess: Subject<string>;\n\n\tconstructor(public bsModalRef: BsModalRef, private localizationManagerService: LocalizationManagerService, private modalService: BsModalService) { }\n\n\tngOnInit(): void {\n\t\tthis.allLocaleInfo = new AllLocaleInfo();\n\n\t\tthis.localizationManagerService.getNewLocaleInfo().then(allLocaleInfoIN => {\n\t\t\tthis.allLocaleInfo = allLocaleInfoIN;\n\t\t}).catch((err: HttpErrorResponse) => {\n\n\t\t\tthis.bsModalRef.hide();\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tsubmit(): void {\n\n\t\tthis.localizationManagerService.installLocale(this.language, this.country, this.variant).then((response: { locale: string }) => {\n\t\t\tthis.onSuccess.next(response.locale);\n\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.bsModalRef.hide();\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}\n","<div>\n  <loading-bar></loading-bar>\n\n<form #form=\"ngForm\" class=\"modal-form\" name=\"new-locale-form\" (ngSubmit)=\"form.valid && submit()\">\n  <div class=\"modal-body\">\n  <fieldset>\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"new-locale.title\"></localize>\n      </h1>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <label>\n          <localize key=\"new-locale.language\"></localize>\n        </label>\n        <select [(ngModel)]=\"language\" name=\"new-locale-language\">\n          <option *ngFor=\"let lang of allLocaleInfo.languages\" [ngValue]=\"lang.key\">{{lang.label}}</option>\n        </select>\n      </div>\n    </div>\n\n    <div>\n      <label>\n        <localize key=\"new-locale.country\"></localize>\n      </label>\n      <select [(ngModel)]=\"country\" name=\"new-locale-country\">\n        <option *ngFor=\"let count of allLocaleInfo.countries\" [ngValue]=\"count.key\">{{count.label}}</option>\n      </select>\n    </div>\n\n<!--     <div> -->\n<!--       <label> -->\n<!--         <localize key=\"new-locale.variant\"></localize> -->\n<!--       </label> -->\n<!--       <input type=\"text\" [(ngModel)]=\"variant\" name=\"new-locale-variant\" /> -->\n<!--     </div> -->\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.submit\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n  </div>\n</form>\n\n</div>\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\nimport { LocalizationService, EventService } from '@shared/service';\n\ndeclare var acp: any;\n\n\n@Component({\n\tselector: 'import-localization-modal',\n\ttemplateUrl: './import-localization-modal.component.html',\n\tstyleUrls: []\n})\nexport class ImportLocalizationModalComponent {\n\n\t@ViewChild('myFile')\n\tfileRef: ElementRef;\n\n\n    /*\n     * File uploader\n     */\n\tuploader: FileUploader;\n\n\n\tconstructor(public bsModalRef: BsModalRef, private localizationService: LocalizationService, private eventService: EventService, private modalService: BsModalService) { }\n\n\tngOnInit(): void {\n\t\tlet options: FileUploaderOptions = {\n\t\t\tqueueLimit: 1,\n\t\t\tremoveAfterUpload: true,\n\t\t\turl: acp + \"/localization/importSpreadsheet\"\n\t\t};\n\n\t\tthis.uploader = new FileUploader(options);\n\n\t\tthis.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n\t\t};\n\t\tthis.uploader.onBeforeUploadItem = (fileItem: any) => {\n\t\t\tthis.eventService.start();\n\t\t};\n\t\tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\t\t\tthis.fileRef.nativeElement.value = \"\";\n\t\t\tthis.eventService.complete();\n\t\t};\n\t\tthis.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tthis.bsModalRef.hide();\n\t\t};\n\t\tthis.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n\t\t\tlet error = JSON.parse(response)\n\t\t\t\n\t\t\tlet newline = \"\\n\";\n\t\t\t\n      \t\terror.localizedMessage = error.localizedMessage.replaceAll(\"\\\\n\", newline);\n\n\t\t\tthis.error({ error: error });\n\t\t}\n\t}\n\n\tsubmit(): void {\n\n\t\tif (this.uploader.queue != null && this.uploader.queue.length > 0) {\n\t\t\tthis.uploader.uploadAll();\n\t\t}\n\t\telse {\n\t\t\tthis.error({\n\t\t\t\tmessage: this.localizationService.decode('io.missing.file'),\n\t\t\t\terror: {},\n\t\t\t});\n\t\t}\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic error(err: any): void {\n\t\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n\n}\n","<div>\n  <loading-bar></loading-bar>\n\n<form #form=\"ngForm\" class=\"modal-form\" name=\"new-locale-form\" (ngSubmit)=\"form.valid && submit()\">\n  <div class=\"modal-body\">\n  <fieldset>\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"localization-manager.importButton\"></localize>\n      </h1>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n          <input class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" accept=\".xls, .xlsx\" required />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.submit\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n  </div>\n</form>\n\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nexport class UserInvite {\n  email: string;\n  roles: any;\n}\n\nexport class User {\n  oid: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phoneNumber: string;\n  inactive: boolean;\n  newInstance: boolean;\n  roles: string[];\n  altFirstName?: string;\n  altLastName?: string;\n  altPhoneNumber?: string;\n  position?: string;\n  department?: string;\n  externalSystemOid?: string;\n}\n\nexport class Group {\n  name:string;\n  assigned:string;\n  roles:Role[];\n}\n\nexport class Account {\n  user:User;\n  roles: any;\n  changePassword:boolean;\n}\n\nexport class Role {\n  type:string;\n  name:string;\n  label:any;\n  orgCode:string;\n  orgLabel:any;\n  geoObjectTypeCode:string;\n  geoObjectTypeLabel: any;\n  assigned: boolean;\n}\n\nexport class FormattedRoles {\n  SRA: Role;\n  ORGANIZATIONS: FormattedOrganization[];\n}\n\nexport class FormattedOrganization {\n  ORGANIZATIONLABEL: any;\n  RA: Role;\n  GEOOBJECTTYPEROLES: FormattedGeoObjectTypeRoleGroup[];\n  CODE: string;\n}\n\nexport class FormattedGeoObjectTypeRoleGroup {\n  ENABLEDROLE: string;\n  GEOOBJECTTYPELABEL: any;\n  GEOOBJECTTYPEROLESGROUP: Role[];\n}\n","export class LocaleInfo {\n  key: string;\n  label: string;\n}\n\nexport class AllLocaleInfo {\n  countries: LocaleInfo[];\n  languages: LocaleInfo[];\n}\n\nexport class Locale {\n  language: string;\n  country: string\n  name: string;\n  variant: string;\n}","import { NgModule, Injectable, Inject } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from '../shared/service/guard.service';\nimport { PendingChangesGuard } from \"../shared/service/pending-changes-guard\";\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { SettingsComponent } from './component/settings.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'logos',\n        canActivate: [AuthGuard],\n        component: SystemLogosComponent,\n        data: { title: 'System_Configuration' }\n    },\n    {\n        path: 'logo/:oid',\n        canActivate: [AuthGuard],\n        component: SystemLogoComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: 'email',\n        canActivate: [AuthGuard],\n        component: EmailComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },   \n    {\n        path: 'settings',\n        canActivate: [AuthGuard],\n        component: SettingsComponent,\n        data: { title: 'settings.title' }\n    }, \n    {\n        path: 'accounts',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'account/:oid',\n        component: AccountComponent,\n        //   resolve: {\n        //     account: AccountResolver\n        //   },        \n        canActivate: [AuthGuard],\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite',\n        component: AccountInviteComponent,\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite-complete/:token',\n        component: AccountInviteCompleteComponent,\n        data: { title: 'account.title' }\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class AdminRoutingModule { }\n"],"sourceRoot":""}