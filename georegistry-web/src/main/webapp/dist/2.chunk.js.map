{"version":3,"sources":["webpack:///./src/app/admin/service/account.service.ts","webpack:///./src/app/admin/service/settings.service.ts","webpack:///./src/app/admin/service/localization-manager.service.ts","webpack:///./src/app/admin/component/account/account-invite.component.ts","webpack:///./src/app/admin/component/account/account-invite.component.html","webpack:///./src/app/admin/service/system-logo.service.ts","webpack:///./src/app/admin/service/email.service.ts","webpack:///./src/app/admin/component/account/account.component.ts","webpack:///./src/app/admin/component/account/account.component.html","webpack:///./src/app/admin/component/account/role-management.component.ts","webpack:///./src/app/admin/component/account/role-management.component.html","webpack:///./src/app/admin/component/logo/system-logo.component.ts","webpack:///./src/app/admin/component/logo/system-logo.component.html","webpack:///./src/app/admin/component/logo/system-logos.component.ts","webpack:///./src/app/admin/component/logo/system-logos.component.html","webpack:///./src/app/admin/component/email/email.component.ts","webpack:///./src/app/admin/component/email/email.component.html","webpack:///./src/app/admin/component/account/accounts.component.ts","webpack:///./src/app/admin/component/account/accounts.component.html","webpack:///./src/app/admin/component/account/account-invite-complete.component.ts","webpack:///./src/app/admin/component/account/account-invite-complete.component.html","webpack:///./src/app/admin/component/settings.component.ts","webpack:///./src/app/admin/component/settings.component.html","webpack:///./src/app/admin/component/organization/organization-modal.component.ts","webpack:///./src/app/admin/component/organization/organization-modal.component.html","webpack:///./src/app/admin/component/external-system/external-system-modal.component.ts","webpack:///./src/app/admin/component/external-system/external-system-modal.component.html","webpack:///./src/app/admin/component/localization-manager/locale-modal.component.ts","webpack:///./src/app/admin/component/localization-manager/locale-modal.component.html","webpack:///./src/app/admin/component/localization-manager/import-localization-modal.component.ts","webpack:///./src/app/admin/component/localization-manager/import-localization-modal.component.html","webpack:///./src/app/admin/component/localization-manager/localization-feedback-modal.component.ts","webpack:///./src/app/admin/component/localization-manager/localization-feedback-modal.component.html","webpack:///./src/app/admin/model/account.ts","webpack:///./src/app/admin/model/localization-manager.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.module.ts"],"names":["http","eventService","page","pageNumber","pageSize","params","HttpParams","set","toString","this","start","get","registry","contextPath","pipe","finalize","complete","toPromise","getSRAs","edit","oid","headers","HttpHeaders","post","JSON","stringify","newInstance","organizationCodes","newUserInstance","newInvite","remove","apply","user","roleNames","account","unlock","inviteUser","invite","roleIds","inviteComplete","token","getRolesForUser","userOID","AccountService","Injectable","SettingsInitView","getInitView","SettingsService","getNewLocaleInfo","editLocale","locale","installLocale","uninstallLocale","installFile","formData","LocalizationManagerService","service","authService","bsModalRef","settingsService","message","ngOnInit","UserInvite","orgCodes","getMyOrganizations","then","roles","catch","err","error","cancel","hide","onRoleIdsUpdate","onSubmit","ErrorHandler","getMessageFromError","AccountInviteComponent","Component","selector","templateUrl","styles","getIcons","SystemLogoService","getInstance","email","setting","EmailService","localizeService","externalSystems","isAppliedAsOauth","editingOauth","systemHasOauth","isSRA","isRA","data","externalSystemOid","forEach","system","oAuthServer","onEdit","Subject","event","toggleEditingOauth","password","response","onChangePassword","changePassword","length","next","decode","AccountComponent","styleUrls","Input","setExternalSystems","EventEmitter","_roleIds","isAdmin","isMaintainer","isContributor","isContributer","_roles","formatRoles","onChangeRole","setActiveOrganization","orgCode","isAssigned","orgHasAssignedRole","ORGANIZATIONS","org","CODE","GEOOBJECTTYPEROLES","got","ENABLEDROLE","_activeOrganization","formattedObj","role","orgGroup","ORGANIZATIONLABEL","orgLabel","localizedValue","type","RA","assigned","_raAssigned","addToGeoObjectTypeGroup","geoObjectTypeGroup","geoObjectTypeLabel","name","push","newObj","SRA","sortRoles","gotrole","GEOOBJECTTYPEROLESGROUP","sort","a","b","RegistryRoleType","organization","exists","rg","GEOOBJECTTYPELABEL","onToggleOrgRA","onToggleSRA","setGroupRole","group","target","newRoleIds","emit","removeRoleId","id","pos","indexOf","splice","showData","RoleManagementComponent","Output","route","dropActive","context","onSuccess","options","autoUpload","queueLimit","removeAfterUpload","url","uploader","FileUploader","onBeforeUploadItem","fileItem","onCompleteItem","item","status","onSuccessItem","onErrorItem","onBuildItemForm","form","append","icon","ngAfterViewInit","that","onAfterAddingFile","uploadElRef","nativeElement","value","reader","FileReader","onload","e","file","result","readAsDataURL","_file","fileOver","uploadAll","clear","clearQueue","SystemLogoComponent","ViewChild","router","modalService","changeDetectorRef","random","onClickRemove","show","ConfirmModalComponent","animated","backdrop","ignoreBackdropClick","content","submitText","onConfirm","subscribe","resp","filtered","icons","filter","el","ico","Math","detectChanges","custom","SystemLogosComponent","server","username","port","from","to","EmailComponent","res","resultSet","count","index","findIndex","u","onPageChange","inviteUsers","showErrorAsDialog","AccountsComponent","sub","ngOnDestroy","unsubscribe","window","location","href","AccountInviteCompleteComponent","externalSystemService","orgService","accountService","localizationManagerService","organizations","settings","isConfigured","sRAs","systems","view","sras","installedLocales","locales","getCGRVersion","getVersion","getLocales","exportLocalization","importLocalization","ImportLocalizationModalComponent","newOrganization","OrganizationModalComponent","isNewOrganization","onEditOrganization","x","code","onRemoveOrganization","ModalTypes","danger","removeOrganization","i","onEditLocale","NewLocaleModalComponent","isNew","tag","addLocale","onRemoveLocale","label","removeLocale","removeIndex","len","newLocalization","configureEmail","onSRAPageChange","onSystemPageChange","getExternalSystems","newSystem","ExternalSystemModalComponent","init","onEditSystem","getExternalSystem","onRemoveSystem","removeExternalSystem","SettingsComponent","lService","create","contactInfo","updateOrganization","systemService","connectMessage","editPassword","description","version","oauthEnabled","capabilities","o","isOrganizationRA","enableOAuth","endsWith","authorizationLocation","tokenLocation","profileLocation","clientId","secretKey","serverType","getSystemCapabilities","oauth","dhis2UrlKeyListener","key","dhis2FocusOut","removeOauth","isOauthSupported","downloadDhis2Plugin","applyExternalSystem","document","querySelector","scroll","top","left","behavior","LocaleView","allLocaleInfo","AllLocaleInfo","allLocaleInfoIN","submit","localizationService","fileRef","parse","HttpErrorResponse","errMsg","localizedMessage","replaceAll","LocalizationFeedbackModalComponent","class","queue","User","Group","Account","Role","FormattedRoles","FormattedOrganization","FormattedGeoObjectTypeRoleGroup","LocaleInfo","Locale","routes","path","canActivate","AuthGuard","component","title","AdminRoutingModule","provide","LocationStrategy","useClass","HashLocationStrategy","RouterModule","forChild","NgModule","imports","exports","providers","AdminModule","CommonModule","FormsModule","ReactiveFormsModule","FileUploadModule","NgxPaginationModule","SharedModule","declarations","entryComponents"],"mappings":"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,6BACE,6BACF,kB,mDA3BN,6BACE,6BACE,6BACE,4BACE,6BACF,iBACF,iBACA,6BACE,8BACE,kCAAuB,kHAAvB,iBAEA,0CACF,iBACF,iBACF,iBACA,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,8BACF,iBACA,gCAGF,iBACF,iBACF,iB,qDArB+B,+DAEA,uEAYA,yCAEnB,4E,yBAzChB,4BACE,4BACE,4BACE,6BACF,iBACF,iBACA,6BACE,+BASA,gCA+BF,iBACF,kB,8BAzCU,sGASA,iI,mDAyCN,0BACE,0BACE,+BACE,+BAAsD,kHAAtD,iBACA,2BAAM,6BAAsD,iBAC9D,iBACA,+BACE,+BAAqD,kHAArD,iBACA,2BAAM,6BAAwD,iBAChE,iBACF,iBACF,iB,iCAR4C,wCAAe,mCAIf,wCAAc,oC,mDAgBxD,yCAAwG,+GAA4C,iB,iCAA7G,uDAAwC,0B,0GA5P3F,+BAAwD,kIACtD,+BAEE,4BACE,8BAaA,4BACE,4BACE,4BACE,4BACF,iBACF,iBACA,6BACE,+BACE,gCAAwC,kHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,iHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,qHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,oHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,oHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAwC,uHAAxC,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,mCAAyC,8GAAzC,iBACF,iBACA,gCAGF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,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AAW,CAAC,uB,4NElBb,WAQA,GAPA,MAKA,QAEA,Q,sHCRW,6BAAqE,YAAW,kB,8BAAX,+C,sBAoFjE,6BACE,6BACF,kB,sBAgEE,6BACE,6BACF,kB,mDAjKd,+BAA2F,kIAGrF,+BACE,4BACE,yBAAI,4BAAgD,iBACtD,iBACA,oBAEA,8BAEA,6BACE,6BACE,6BAAO,8BAA6C,iBACtD,iBACA,8BACE,+BACE,gCAAmB,0GAAnB,iBACF,iBACF,iBACF,iBACA,8BACE,8BACE,6BAAO,8BAA4C,iBACrD,iBACA,8BACE,+BACE,gCAAmB,yGAAnB,iBACF,iBACF,iBACF,iBAEH,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBACA,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAmB,4GAAnB,iBACF,iBACF,iBACF,iBAEG,8BACE,8BACE,6BAAO,8BAA+C,iBACxD,iBACA,8BACE,+BACE,gCAAmB,4GAAnB,iBACF,iBAIF,iBACF,iBAEH,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAmB,+GAAnB,iBACF,iBACF,iBACF,iBAGG,8BACE,8BACE,6BAAO,8BAAyC,iBAClD,iBACA,8BACE,+BACE,mCAAmB,sGAAnB,iBACF,iBACA,gCAGF,iBACF,iBAEH,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAmB,yGAAnB,iBACF,iBACF,iBACF,iBACA,8BACE,8BACE,6BACE,8BACF,iBACF,iBACA,8BACE,+BACE,gCAAmB,2GAAnB,iBACF,iBACF,iBACF,iBAGG,6BACE,0BAAI,8BAAgD,iBACtD,iBACA,qBACA,8BACE,8BACE,6BAAO,8BAA4C,iBACrD,iBACA,8BACE,+BACE,gCAA+E,yGAA/E,iBACF,iBACF,iBACF,iBACA,2BACE,8BACE,8BACE,6BAAO,8BAA4C,iBACrD,iBACA,8BACE,+BACE,mCAAuB,yGAAvB,iBACG,2CACL,iBACF,iBACF,iBACA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","file":"2.chunk.js","sourcesContent":["///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { Account, User, UserInvite } from '@admin/model/account';\n\nimport { PageResult } from '@shared/model/core'\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class AccountService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    page( pageNumber: number, pageSize: number ): Promise<PageResult<User>> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'pageNumber', pageNumber.toString() );\n        params = params.set( 'pageSize', pageSize.toString() );\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult<User>>( registry.contextPath + '/registryaccount/page', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getSRAs( pageNumber: number, pageSize: number ): Promise<PageResult<User>> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'pageNumber', pageNumber.toString() );\n        params = params.set( 'pageSize', pageSize.toString() );\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult<User>>( registry.contextPath + '/registryaccount/get-sras', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    edit( oid: string ): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( registry.contextPath + '/registryaccount/edit', JSON.stringify( { oid: oid } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    newInstance(organizationCodes: string[]): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( registry.contextPath + '/registryaccount/newInstance', JSON.stringify( {\"organizationCodes\": organizationCodes} ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    newUserInstance(): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<User>( registry.contextPath + '/registryaccount/newUserInstance', JSON.stringify( {} ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    newInvite(organizationCodes: string[]): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( registry.contextPath + '/registryaccount/newInvite', JSON.stringify( {\"organizationCodes\": organizationCodes} ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    remove( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( registry.contextPath + '/registryaccount/remove', JSON.stringify( { oid: oid } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    apply( user: User, roleNames: string[] ): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( registry.contextPath + '/registryaccount/apply', JSON.stringify( { account: user, roleNames: roleNames } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    unlock( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( registry.contextPath + '/registryaccount/unlock', JSON.stringify( { oid: oid } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    inviteUser( invite: UserInvite, roleIds: string[] ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n//        console.log( \"Submitting to inviteUser : \", JSON.stringify( { invite: invite, roleIds: roleIds } ) );\n\n        return this.http\n            .post<void>( registry.contextPath + '/registryaccount/inviteUser', JSON.stringify( { invite: invite, roleIds: roleIds } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    inviteComplete( user: User, token: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( registry.contextPath + '/registryaccount/inviteComplete', JSON.stringify( { user: user, token: token } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n    getRolesForUser( userOID: string ): Promise<any> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'userOID', userOID );\n\n        this.eventService.start();\n\n        return this.http\n            .get<any>( registry.contextPath + '/cgr/account/get-roles-for-user', { params: params } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise();\n    }\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { PageResult, Organization, ExternalSystem, LocaleView } from '@shared/model/core';\n\nimport { User } from '@admin/model/account';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\nexport class SettingsInitView {\n  organizations: Organization[];\n  locales: LocaleView[];\n  externalSystems: PageResult<ExternalSystem>;\n  sras: PageResult<User>;\n}\n\n@Injectable()\nexport class SettingsService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\t\n\tgetInitView(): Promise<SettingsInitView> {\n\n    this.eventService.start();\n\n    return this.http\n      .get<SettingsInitView>(registry.contextPath + '/cgr/init-settings')\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { LocaleView } from '@shared/model/core';\n\nimport { AllLocaleInfo } from '@admin/model/localization-manager';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class LocalizationManagerService {\n\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\n\tgetNewLocaleInfo(): Promise<AllLocaleInfo> {\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<AllLocaleInfo>(registry.contextPath + '/localization/getNewLocaleInformation')\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\teditLocale(locale: LocaleView): Promise<LocaleView> {\n    let params: HttpParams = new HttpParams();\n\n    params = params.set('json', JSON.stringify(locale));\n\n    this.eventService.start();\n\n    return this.http\n      .get<LocaleView>(registry.contextPath + '/localization/editLocale', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n\tinstallLocale(locale: LocaleView): Promise<LocaleView> {\n\t\tlet params: HttpParams = new HttpParams();\n\n\t  params = params.set('json', JSON.stringify(locale));\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<LocaleView>(registry.contextPath + '/localization/installLocale', { params: params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tuninstallLocale(locale: LocaleView) {\n    let params: HttpParams = new HttpParams();\n\n    params = params.set('json', JSON.stringify(locale));\n\n    this.eventService.start();\n\n    return this.http\n      .get<{ locale: string }>(registry.contextPath + '/localization/uninstallLocale', { params: params })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n\tinstallFile(formData: FormData): Promise<void> {\n\t\tlet headers = new HttpHeaders();\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http.post<void>(registry.contextPath + \"/localization/importSpreadsheet\", formData, { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler } from '@shared/component';\nimport { Account, UserInvite } from '@admin/model/account';\nimport { Organization } from '@shared/model/core';\n\nimport { SettingsService } from '@admin/service/settings.service'\nimport { AccountService } from '@admin/service/account.service';\nimport { AuthService } from '@shared/service';\n\n\n@Component({\n\tselector: 'account-invite',\n\ttemplateUrl: './account-invite.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteComponent implements OnInit {\n\tinvite: UserInvite;\n\tmessage: string = null;\n\troleIds: string[] = [];\n\torganization: Organization;\n\torganizations: Organization[];\n\n\tconstructor(\n\t\tprivate service: AccountService,\n\t\tprivate authService: AuthService,\n\t\tpublic bsModalRef: BsModalRef,\n\t\tpublic settingsService: SettingsService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.invite = new UserInvite();\n\t\tlet orgCodes = this.authService.getMyOrganizations();\n\n\t\tthis.service.newInvite(orgCodes).then((account: Account) => {\n\t\t\tthis.invite.roles = account.roles;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\t// this.settingsService.getOrganizations().then(orgs => {\n\t\t//     this.organizations = orgs\n\t\t// }).catch((err: HttpErrorResponse) => {\n\t\t//     this.error(err);\n\t\t// });\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tonRoleIdsUpdate(roleIds: string[]): void {\n\t\tthis.roleIds = roleIds;\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.inviteUser(this.invite, this.roleIds).then(() => {\n\t\t\tthis.bsModalRef.hide();\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}","<div class=\"modal-body\">\n  \n  <message></message>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n        <fieldset>            \n          <div class=\"heading text-center\">\n            <h1><localize key=\"account.invite.user.header\"></localize></h1>\n          </div>      \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label><localize key=\"account.email\"></localize></label>\n              <input type=\"text\" [(ngModel)]=\"invite.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              <div *ngIf=\"aemail.errors?.email && invite.email && invite.email.length > 0\" style=\"float:none;\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>   \n          \n          <div style=\"margin-top:30px;\">\n            <role-management *ngIf=\"invite.roles\" [newInstance]=\"true\" [roles]=\"invite.roles\" (onRoleIdsUpdate)=\"onRoleIdsUpdate($event)\"></role-management>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'io.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'io.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid && roleIds.length > 0)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { SystemLogo } from '@admin/model/system-logo';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class SystemLogoService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetIcons(): Promise<{ icons: SystemLogo[] }> {\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<{ icons: SystemLogo[] }>(registry.contextPath + '/logo/getAll')\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tremove(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(registry.contextPath + '/logo/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { Email } from '@admin/model/email';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class EmailService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) {\n\t}\n\n\tgetInstance(): Promise<Email> {\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http.get<Email>(registry.contextPath + '/email/getInstance')\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tapply(email: Email): Promise<Email> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<Email>(registry.contextPath + '/email/apply', JSON.stringify({ setting: email }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n\nimport { Account, User, Role } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\nimport { LocalizationService, AuthService } from '@shared/service';\nimport { ExternalSystem } from '@shared/model/core';\n\nimport { ErrorHandler } from '@shared/component';\n\n@Component({\n\tselector: 'account',\n\ttemplateUrl: './account.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}'],\n\tstyleUrls: ['./account.css']\n})\nexport class AccountComponent implements OnInit {\n\n\tmessage: string = null;\n\taccount: Account;\n\troles: Role[];\n\troleIds: string[] = [];\n\texternalSystems: ExternalSystem[] = [];\n\n\tisSRA: boolean;\n\tisRA: boolean;\n\n\tisAppliedAsOauth: boolean = false;\n\teditingOauth: boolean = false;\n\tsystemHasOauth: boolean = false;\n\n\t@Input()\n\tset oid(oid: string) {\n\t\tif (oid === 'NEW') {\n\n\t\t\tlet orgCodes = [];\n\t\t\tif (this.isRA) {\n\t\t\t\torgCodes = this.authService.getMyOrganizations();\n\t\t\t}\n\n\t\t\tthis.service.newInstance(orgCodes).then(data => {\n\t\t\t\tthis.account = data;\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse if (oid) {\n\t\t\tthis.service.edit(oid).then(data => {\n\n\t\t\t\tthis.account = data;\n\n\t\t\t\tthis.editingOauth = (this.account.user.externalSystemOid != null && this.account.user.externalSystemOid !== \"\");\n\t\t\t\tthis.isAppliedAsOauth = this.editingOauth;\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\t@Input()\n\tset setExternalSystems(externalSystems: ExternalSystem[]) {\n\t\tthis.externalSystems = externalSystems;\n\n\t\tif(this.externalSystems){\n\t\t\tthis.externalSystems.forEach(system => {\n\t\t\t\tif (system.oAuthServer != null) {\n\t\t\t\t\tthis.systemHasOauth = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onEdit: Subject<Account>;\n\n\tconstructor(\n\t\tprivate service: AccountService,\n\t\tprivate authService: AuthService,\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate localizeService: LocalizationService\n\t) {\n\t\tthis.isSRA = authService.isSRA();\n\t\tthis.isRA = authService.isRA();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.onEdit = new Subject();\n\t}\n\n\tonRoleIdsUpdate(event): void {\n\t\tthis.roleIds = event;\n\t}\n\n\ttoggleEditingOauth(): void {\n\t\tif (this.editingOauth == false) {\n\t\t\tthis.editingOauth = true;\n\t\t\tdelete this.account.user.password;\n\t\t\tthis.account.user.externalSystemOid = this.externalSystems[0].oid\n\t\t}\n\t\telse {\n\t\t\tthis.editingOauth = false;\n\t\t\tdelete this.account.user.externalSystemOid;\n\t\t}\n\t}\n\n\tcancel(): void {\n\t\tif (this.account.user.newInstance === true) {\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t\telse {\n\t\t\tthis.service.unlock(this.account.user.oid).then(response => {\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t});\n\t\t}\n\t}\n\n\tonChangePassword(): void {\n\t\tthis.account.changePassword = !this.account.changePassword;\n\t}\n\n\tonSubmit(): void {\n\n\t\tif (!this.account.changePassword && !this.account.user.newInstance) {\n\t\t\tdelete this.account.user.password;\n\t\t}\n\n\t\tif (this.roleIds.length > 0) {\n\t\t\tthis.service.apply(this.account.user, this.roleIds).then(data => {\n\t\t\t\tthis.onEdit.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.message = this.localizeService.decode(\"account.role.management.roles.required.message\");\n\t\t}\n\t}\n\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}","<div>\n  <!-- <header></header> -->\n\n  <message></message>\n\n  <loading-bar></loading-bar>\n\n  <div class=\"heading text-center\">\n    <h1>\n      <localize key=\"account.header\"></localize>\n    </h1>\n  </div>\n\n  <form *ngIf=\"account\" #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n    <fieldset>\n\n      <div class=\"modal-body\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n<!--         <div class=\"row-holder\"> -->\n<!--           <div class=\"label-holder\"> -->\n<!--             <label></label> -->\n<!--           </div> -->\n<!--           <div class=\"holder\"> -->\n<!--             <h4 class=\"modal-title\"> -->\n<!--               <localize key=\"account.user.heading\"></localize> -->\n<!--             </h4> -->\n<!--           </div> -->\n<!--         </div> -->\n          \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.firstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.firstName\" name=\"firstname\" required>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.lastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.lastName\" name=\"lastname\" required>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.phonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.phoneNumber\" name=\"phoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.email\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"email\" class=\"form-control\" [(ngModel)]=\"account.user.email\" name=\"email\" required #aemail=\"ngModel\" required email>\n            </span>\n            <div *ngIf=\"aemail.errors?.email && account.user.email && account.user.email.length > 0\" style=\"float:none;\" class=\"inline-error-message\">\n              <localize key=\"account.email.validation\"></localize>\n            </div>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.user.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.username\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" class=\"form-control\" [disabled]=\"!account.user.newInstance && account.user.username === 'admin'\" [(ngModel)]=\"account.user.username\" name=\"username\" required>\n            </span>\n          </div>\n        </div>\n\n        <div *ngIf=\"!account.changePassword && externalSystems.length > 0 && systemHasOauth\" class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.oauthTitle\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div *ngIf=\"!account.changePassword && externalSystems.length > 0 && systemHasOauth\">\n              <div style=\"text-align: left;\">\n                <input [disabled]=\"editingOauth\" type=\"button\" [value]=\"'account.user.enableOauth' | localize\" class=\"btn btn-primary\" (click)=\"toggleEditingOauth()\" />\n                <input *ngIf=\"editingOauth\" type=\"button\" [value]=\"'account.user.disableOauth' | localize\" class=\"btn btn-default\" (click)=\"toggleEditingOauth()\" />\n              </div>\n              <div *ngIf=\"editingOauth\" style=\"margin-top: 10px;\">\n                <label>\n                  <localize key=\"account.user.oauthExternalSystem\"></localize>\n                </label>\n              </div>\n              <div *ngIf=\"editingOauth\" >\n                <select style=\"float:none;\" [(ngModel)]=\"account.user.externalSystemOid\" name=externalSystemOid [disabled]=\"externalSystems.length == 1\">\n                  <option *ngFor=\"let system of externalSystems\" [value]=\"system.oid\">\n                    {{system.label.localizedValue}}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n          \n        \n        <div class=\"row-holder\" *ngIf=\"!editingOauth\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div *ngIf=\"!editingOauth && (!account.user.newInstance && !this.isAppliedAsOauth)\">\n              <div style=\"text-align: left;\">\n                <input type=\"button\" [disabled]=\"account.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n                  (click)=\"onChangePassword()\" />\n                  <input type=\"button\" *ngIf=\"account.changePassword\" [value]=\"'io.cancel' | localize\" class=\"btn btn-default\"\n                  (click)=\"onChangePassword()\" />\n              </div>\n            </div>\n            \n            <div *ngIf=\"!editingOauth && (account.changePassword || account.user.newInstance || this.isAppliedAsOauth)\" style=\"margin-top: 10px;\">\n              <div class=\"\">\n                <div class=\"\">\n                  <label>\n                    <localize key=\"account.new.password\"></localize>\n                  </label>\n                </div>\n                <div class=\"\">\n                  <span class=\"text\">\n                    <input type=\"password\" [(ngModel)]=\"account.user.password\" name=\"password\" #password=\"ngModel\" required\n                      minlength=\"5\" maxlength=\"50\">\n                    <password-strength-bar [passwordToCheck]=\"account.user.password\"></password-strength-bar>\n                  </span>\n                </div>\n              </div>\n              <div class=\"\">\n                <div class=\"\">\n                  <label>\n                    <localize key=\"account.certainPassword\"></localize>\n                  </label>\n                </div>\n                <div class=\"\">\n                  <span class=\"text\">\n                    <input type=\"password\" [ngModel]=\"certainPassword\" name=\"certainPassword\" #certainPassword=\"ngModel\" required />\n                  </span>\n                  <div *ngIf=\"certainPassword.errors?.mustMatch\" style=\"float:none;\" class=\"inline-error-message\">\n                    <localize key=\"account.certainPassword.validation\"></localize>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.status\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div *ngIf=\"!(!account.user.newInstance && account.user.username === 'admin')\">\n              <div>\n                <label class=\"radio\">\n                  <input type=\"radio\" name=\"userActive\" [value]=\"false\" [(ngModel)]=\"account.user.inactive\">\n                  <span><localize key=\"account.user.status.active\"></localize></span>\n                </label>\n                <label class=\"radio\">\n                  <input type=\"radio\" name=\"userActive\" [value]=\"true\" [(ngModel)]=\"account.user.inactive\">\n                  <span><localize key=\"account.user.status.inactive\"></localize></span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.user.roles.section.label\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <div style=\"margin-top:5px;\">\n              <role-management *ngIf=\"account.roles\" [newInstance]=\"account.user.newInstance\" [roles]=\"account.roles\" (onRoleIdsUpdate)=\"onRoleIdsUpdate($event)\"></role-management>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n        </div>\n\n      </div> <!-- End modal-body -->\n\n    </fieldset>\n    <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AuthService } from '@shared/service';\n\nimport { Role, FormattedRoles, FormattedOrganization, FormattedGeoObjectTypeRoleGroup } from '@admin/model/account';\nimport { RegistryRoleType } from '@shared/model/core';\n\n@Component({\n\tselector: 'role-management',\n\ttemplateUrl: './role-management.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}'],\n\tstyleUrls: ['./role-management.css']\n})\nexport class RoleManagementComponent {\n\n\tmessage: string = null;\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\tisSRA: boolean;\n\t_raAssigned: boolean;\n\t_activeOrganization: string;\n\n\t_roles: FormattedRoles;\n\n\t@Input('roles')\n\tset roles(data: any) {\n\t\tif (data) {\n\t\t\tthis._roles = this.formatRoles(data);\n\t\t\tthis.onChangeRole();\n\t\t}\n\t}\n\n\t@Output() onRoleIdsUpdate = new EventEmitter();\n\n\t_roleIds: string[] = [];\n\t@Input() newInstance: boolean = true;\n\n\n\tconstructor(public bsModalRef: BsModalRef, private authService: AuthService) {\n\t\tthis.isSRA = authService.isSRA();\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || authService.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || authService.isContributer();\n\t}\n\t\n\tsetActiveOrganization(orgCode: string, isAssigned): void {\n\t\t\n\t\tlet orgHasAssignedRole: boolean = false;\n\t\tthis._roles.ORGANIZATIONS.forEach(org => {\n\t\t\tif(org.CODE === orgCode){\n\t\t\t\torg.GEOOBJECTTYPEROLES.forEach(got => {\n\t\t\t\t\t// console.log(got.GEOOBJECTTYPELABEL, got.ENABLEDROLE)\n\t\t\t\t\t\n\t\t\t\t\tif(got.ENABLEDROLE){\n\t\t\t\t\t\torgHasAssignedRole = true;\n\t\t\t\t\t\tthis._activeOrganization = orgCode;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tif(!orgHasAssignedRole){\n\t\t\t\tthis._activeOrganization = null;\n\t\t\t}\n\t\t})\n\t}\n\n\tformatRoles(roles: Role[]): any {\n\n\t\tlet formattedObj: FormattedRoles = { \"SRA\": null, \"ORGANIZATIONS\": [] };\n\n\t\troles.forEach(role => {\n\n\t\t\t// If orgCode exists this is NOT an SRA\n\t\t\tif (role.orgCode) {\n\n\t\t\t\tlet addedToGroup = false;\n\n\t\t\t\tformattedObj.ORGANIZATIONS.forEach(orgGroup => {\n\n\t\t\t\t\tif (orgGroup.ORGANIZATIONLABEL === role.orgLabel.localizedValue) {\n\n\t\t\t\t\t\tif (role.type === \"RA\") {\n\t\t\t\t\t\t\torgGroup.RA = role;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(orgGroup.RA.assigned){\n\t\t\t\t\t\t\t\tthis._activeOrganization = orgGroup.CODE\n\t\t\t\t\t\t\t\tthis._raAssigned = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tlet added = this.addToGeoObjectTypeGroup(orgGroup, role);\n\n\t\t\t\t\t\t\tif (!added) {\n\t\t\t\t\t\t\t\tlet geoObjectTypeGroup: FormattedGeoObjectTypeRoleGroup = { \"GEOOBJECTTYPEROLESGROUP\": [role], \"ENABLEDROLE\": \"\", \"GEOOBJECTTYPELABEL\": role.geoObjectTypeLabel.localizedValue };\n\n\t\t\t\t\t\t\t\tif (role.assigned) {\n\t\t\t\t\t\t\t\t\tgeoObjectTypeGroup.ENABLEDROLE = role.name\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tthis._activeOrganization = orgGroup.CODE;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\torgGroup.GEOOBJECTTYPEROLES.push(geoObjectTypeGroup);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddedToGroup = true;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\n\t\t\t\t// The organization hasn't been created yet\n\t\t\t\tif (!addedToGroup) {\n\n\t\t\t\t\tlet newObj: FormattedOrganization = { \"ORGANIZATIONLABEL\": null, \"RA\": null, \"GEOOBJECTTYPEROLES\": [], \"CODE\": null };\n\n\t\t\t\t\tif (role.type === \"RA\") {\n\t\t\t\t\t\tnewObj.ORGANIZATIONLABEL = role.orgLabel.localizedValue;\n\t\t\t\t\t\tnewObj.RA = role;\n\t\t\t\t\t\tnewObj.CODE = role.orgCode;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewObj.ORGANIZATIONLABEL = role.orgLabel.localizedValue;\n\n\t\t\t\t\t\tlet geoObjectTypeGroup: FormattedGeoObjectTypeRoleGroup = { \"GEOOBJECTTYPEROLESGROUP\": [role], \"ENABLEDROLE\": \"\", \"GEOOBJECTTYPELABEL\": role.geoObjectTypeLabel.localizedValue };\n\n\t\t\t\t\t\tif (role.assigned) {\n\t\t\t\t\t\t\tgeoObjectTypeGroup.ENABLEDROLE = role.name\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnewObj.GEOOBJECTTYPEROLES.push(geoObjectTypeGroup);\n\t\t\t\t\t}\n\n\t\t\t\t\tformattedObj.ORGANIZATIONS.push(newObj)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (role.type === \"SRA\") {\n\t\t\t\tformattedObj.SRA = role;\n\t\t\t}\n\t\t})\n\n\t\tthis.sortRoles(formattedObj);\n\n\t\treturn formattedObj;\n\t}\n\n\tsortRoles(roles: FormattedRoles): void {\n\t\troles.ORGANIZATIONS.forEach(org => {\n\t\t\torg.GEOOBJECTTYPEROLES.forEach(gotrole => {\n\t\t\t\tgotrole.GEOOBJECTTYPEROLESGROUP.sort((a, b) => {\n\t\t\t\t\tif (RegistryRoleType[a.type] < RegistryRoleType[b.type]) return -1;\n\t\t\t\t\tif (RegistryRoleType[a.type] > RegistryRoleType[b.type]) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t})\n\t\t});\n\t}\n\n\taddToGeoObjectTypeGroup(organization: FormattedOrganization, role: Role): boolean {\n\t\tlet exists = false;\n\t\torganization.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\tif (rg.GEOOBJECTTYPELABEL === role.geoObjectTypeLabel.localizedValue) {\n\n\t\t\t\tif (role.assigned) {\n\t\t\t\t\trg.ENABLEDROLE = role.name\n\t\t\t\t}\n\n\t\t\t\trg.GEOOBJECTTYPEROLESGROUP.push(role);\n\n\t\t\t\texists = true;\n\t\t\t}\n\t\t});\n\n\t\treturn exists;\n\t}\n\n\tonToggleOrgRA(event: any, organization: FormattedOrganization): void {\n\n\t\torganization.RA.assigned = event;\n\t\tthis._raAssigned = event;\n\t\tthis.setActiveOrganization(organization.CODE, event);\n\t\t\n\t\t// Disable all GeoObjectType radio buttons in this organization\n\t\tif (organization.RA.assigned) {\n\t\t\torganization.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\t\trg.ENABLEDROLE = \"\";\n\t\t\t});\n\t\t}\n\n\t\tthis.onChangeRole();\n\t}\n\n\tonToggleSRA(event: any): void {\n\n\t\tthis._roles.ORGANIZATIONS.forEach(org => {\n\t\t\torg.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\t\trg.ENABLEDROLE = \"\";\n\t\t\t});\n\t\t\t\n\t\t\t// Disable RA for each organization\n\t\t\torg.RA.assigned = false;\n\t\t});\n\t\t\n\t\tif(event){\n\t\t\tthis._raAssigned = false;\n\t\t\tthis.setActiveOrganization(null, false);\n\t\t}\n\n\t\tthis.onChangeRole();\n\t}\n\n\tsetGroupRole(event: any, group: FormattedGeoObjectTypeRoleGroup, role: Role, organization: FormattedOrganization): void {\n\t\t\n\t\tif(!role) {\n\t\t\tgroup.ENABLEDROLE = \"\";\n\t\t\tthis.setActiveOrganization(organization.CODE, false);\n\t\t}\n\t\telse {\n\t\t\tgroup.ENABLEDROLE = (event.target.checked) ? role.name : \"\";\n\t\t\tthis.setActiveOrganization(organization.CODE, true);\n\t\t}\n\n\t\tthis.onChangeRole();\n\t}\n\n\tonChangeRole(): void {\n\n\t\tlet newRoleIds: string[] = [];\n\n\t\tthis._roles.ORGANIZATIONS.forEach(orgGroup => {\n\n\t\t\tif (orgGroup.RA && orgGroup.RA.assigned) {\n\t\t\t\tnewRoleIds.push(orgGroup.RA.name);\n\t\t\t}\n\t\t\t// If organization RA is enabled we don't add GeoObjectType level roles\n\t\t\telse {\n\t\t\t\torgGroup.GEOOBJECTTYPEROLES.forEach(rg => {\n\t\t\t\t\tif (rg.ENABLEDROLE && rg.ENABLEDROLE.length > 0) {\n\t\t\t\t\t\t// add GeoObjectType level role selected\n\t\t\t\t\t\tnewRoleIds.push(rg.ENABLEDROLE);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (this._roles.SRA && this._roles.SRA.assigned) {\n\t\t\tnewRoleIds.push(this._roles.SRA.name);\n\t\t}\n\n\t\tthis._roleIds = newRoleIds;\n\t\tthis.onRoleIdsUpdate.emit(this._roleIds);\n\t}\n\n\tremoveRoleId(id: string): void {\n\n\t\tlet pos = this._roleIds.indexOf(id);\n\t\tif (pos !== -1) {\n\t\t\tthis._roleIds.splice(pos, 1);\n\t\t}\n\n\t\tthis.onRoleIdsUpdate.emit(JSON.stringify(this._roleIds));\n\t}\n\n\tshowData() {\n\t\t// console.log(this._roles)\n\t}\n}","<div>\n\n  <message></message>\n\n  <loading-bar></loading-bar>\n  <form>\n    <fieldset>\n      \n      <div *ngIf=\"_roles\">\n\n        <!-- SRA -->\n        <div *ngIf=\"_roles.SRA\" class=\"row\">\n          <div class=\"col-sm-12\">\n            <boolean-field [(value)]=\"_roles.SRA.assigned\" (change)=\"onToggleSRA($event)\"\n              [label]=\"_roles.SRA.label.localizedValue\" [disable]=\"!isSRA\"></boolean-field>\n          </div>\n        </div>\n\n        <div *ngFor=\"let org of _roles.ORGANIZATIONS\" class=\"row-holder\">\n\n          <div class=\"heading\">\n            <h4>{{org.ORGANIZATIONLABEL}}</h4>\n          </div>\n\n\n          <!-- Organization administrator -->\n          <div *ngIf=\"org.RA && isSRA\" class=\"row\">\n            <div class=\"col-sm-12\">\n              <boolean-field [(value)]=\"org.RA.assigned\" (change)=\"onToggleOrgRA($event, org)\"\n                [label]=\"org.RA.label.localizedValue\" [disable]=\"(_roles.SRA && _roles.SRA.assigned) || (_raAssigned && !org.RA.assigned) || (_activeOrganization && _activeOrganization !== org.CODE)\"></boolean-field>\n            </div>\n          </div>\n\n          <!-- Organization GeoObjectTypes -->\n          <div class=\"row\">\n            <div class=\"col-sm-12 org-container\" style=\"padding-left:50px;padding-right:50px;\">\n\n              <fieldset [disabled]=\"(org.RA && org.RA.assigned) || (_roles.SRA && _roles.SRA.assigned) || _raAssigned || (_activeOrganization && _activeOrganization !== org.CODE)\">\n                <div *ngFor=\"let roleGroup of org.GEOOBJECTTYPEROLES; let i = index\">\n              \n                  <div class=\"heading\">\n                    <h4>{{roleGroup.GEOOBJECTTYPELABEL}}</h4>\n                  </div>\n              \n                  <label class=\"radio\" [ngClass]=\"{'disabled' : (org.RA && org.RA.assigned) || (_roles.SRA && _roles.SRA.assigned) || _raAssigned || (_activeOrganization && _activeOrganization !== org.CODE) }\" *ngFor=\"let role of roleGroup.GEOOBJECTTYPEROLESGROUP\">\n                    <input type=\"checkbox\" [value]=\"role.name\" [checked]=\"roleGroup.ENABLEDROLE === role.name\" (change)=\"setGroupRole($event, roleGroup, role, org)\" \n                      [name]=\"role.orgCode + role.geoObjectTypeCode\" >\n                    <span style=\"font-weight: 400;\">{{role.label.localizedValue}}</span>\n                  </label>\n\n                  <label class=\"radio\" [ngClass]=\"{'disabled' : (org.RA && org.RA.assigned) || (_roles.SRA && _roles.SRA.assigned) || _raAssigned || (_activeOrganization && _activeOrganization !== org.CODE)}\">\n                    <input type=\"checkbox\" [value]=\"\" [checked]=\"roleGroup.ENABLEDROLE === ''\" (change)=\"setGroupRole($event, roleGroup, null, org)\" \n                      [name]=\"roleGroup + '_none'\"  >\n                    <span style=\"font-weight: 400;\"><localize key=\"accounts.none\"></localize></span>\n                  </label>\n              \n                </div>\n              </fieldset>\n\n            </div>\n          </div>\n\n        </div> <!-- End organizations row -->\n\n      </div>\n\n    </fieldset>\n  </form>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, Inject, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ErrorHandler } from '@shared/component';\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nimport { Observable } from 'rxjs';\n\n\nimport { EventService } from '@shared/service';\nimport { SystemLogoService } from '@admin/service/system-logo.service';\nimport { SystemLogo } from '@admin/model/system-logo';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component( {\n\n    selector: 'system-logo',\n    templateUrl: './system-logo.component.html',\n    styles: []\n} )\nexport class SystemLogoComponent implements OnInit {\n    message: string = null;\n    icon: SystemLogo;\n\n    public uploader: FileUploader;\n    public dropActive: boolean = false;\n\n    file: any;\n    context: string;\n\n    @ViewChild( 'uploadEl' )\n    private uploadElRef: ElementRef;\n\n    public onSuccess: Subject<any>;\n\n\n    constructor( private route: ActivatedRoute,\n        private eventService: EventService,\n        public bsModalRef: BsModalRef )\n        {\n            this.context = registry.contextPath;\n        }\n\n    ngOnInit(): void {\n\n        this.onSuccess = new Subject();\n\n        let options: FileUploaderOptions = {\n            autoUpload: false,\n            queueLimit: 1,\n            removeAfterUpload: true,\n            url: registry.contextPath + '/logo/apply'\n        };\n\n        this.uploader = new FileUploader( options );\n\n        this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n            this.eventService.start();\n        };\n        this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n            this.eventService.complete();\n        };\n        this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.onSuccess.next( item );\n            this.bsModalRef.hide();\n        };\n        this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.error( response );\n        };\n        this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n            form.append( 'oid', this.icon.oid );\n        };\n    }\n\n    ngAfterViewInit() {\n        let that = this;\n\n        this.uploader.onAfterAddingFile = ( item => {\n            this.uploadElRef.nativeElement.value = '';\n\n            let reader = new FileReader();\n            reader.onload = function( e: any ) {\n                that.file = reader.result;\n            };\n            reader.readAsDataURL( item._file );\n        } );\n    }\n\n    fileOver( e: any ): void {\n        this.dropActive = e;\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n    }\n\n    onSubmit(): void {\n        if( this.file == null ) {\n            this.bsModalRef.hide();\n        }\n        else {\n            this.uploader.uploadAll();\n        }\n    }\n\n    clear(): void {\n        this.file = null;\n\n        this.uploader.clearQueue()\n    }\n\n    error( err: any ): void {\n            this.message = ErrorHandler.getMessageFromError(err);\n    }\n}\n","<div class=\"modal-body\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n    \n      <message></message>\n      <loading-bar></loading-bar>\n\n      <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <fieldset>\n          <div>\n            <!-- For display only when editing an icon-->\n            <img *ngIf=\"!file && icon\" style=\"max-width: 300px; max-height: 300px;\" [src]=\"context + '/logo/view?oid=' + icon.oid\" class=\"thumb\">\n\n            <!-- Actual uploaded file preview -->\n            <img *ngIf=\"file\" style=\"max-width: 300px; max-height: 300px;\" [src]=\"file\" class=\"thumb\">\n          </div>\n\n          <div class=\"drop-box-container\" ng2FileDrop [ngClass]=\"{'drop-active': dropActive}\" (fileOver)=\"fileOver($event)\" [uploader]=\"uploader\" (click)=fileInput.click()>\n            <div class=\"drop-box\">\n              <div class=\"inner-drop-box\">\n                <i class=\"fa fa-cloud-upload\">\n                  <p class=\"upload-text\">\n                    <localize key=\"system.image.uploadText\"></localize>\n                  </p>\n                </i>\n              </div>\n            </div>\n            <input type=\"file\" #uploadEl ng2FileSelect #fileInput [uploader]=\"uploader\" id=\"uploader-input\" style=\"display: none\" />\n          </div>\n          \n          <div class=\"row\">\n\t\t\t\t    <div class=\"col-md-12\">\n\t\t\t\t      <div class=\"button-holder text-right\" style=\"margin-top: 20px;\">\n\t\t\t\t        <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" /> <input type=\"submit\" [value]=\"'category.icon.ok' | localize\" class=\"btn btn-primary\" (disabled)=\"form.invalid\" />\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n        </fieldset>\n      </form>\n    </div>\n  </div>\n  \n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService } from '@shared/service';\n\nimport { SystemLogoComponent } from './system-logo.component'\n\nimport { SystemLogo } from '@admin/model/system-logo';\nimport { SystemLogoService } from '@admin/service/system-logo.service';\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component({\n  \n  selector: 'system-logos',\n  templateUrl: './system-logos.component.html',\n  styleUrls: []\n})\nexport class SystemLogosComponent implements OnInit {\n  public icons: SystemLogo[];\n  context: string;\n  bsModalRef: BsModalRef;\n  message: string = null;\n  random = 0;\n\n  constructor(\n    private router: Router,\n    private service: SystemLogoService,\n    private modalService: BsModalService,\n    private localizeService: LocalizationService,\n    private changeDetectorRef: ChangeDetectorRef\n    ) {\n\n    this.context = registry.contextPath;\n  }\n\n  ngOnInit(): void {\n    this.getIcons();\n  }\n\n  onClickRemove(icon) : void {\n    this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n        animated: true,\n        backdrop: true,\n        ignoreBackdropClick: true,\n    } );\n    this.bsModalRef.content.message = this.localizeService.decode( \"system.image.removeContent\" );\n    this.bsModalRef.content.submitText = this.localizeService.decode( \"modal.button.delete\" );\n\n    this.bsModalRef.content.onConfirm.subscribe( data => {\n      this.remove(icon);\n    } );\n  }\n\n  getIcons(): void {\n    this.service.getIcons().then(resp => {\n      var filtered = resp.icons.filter(function(el) { return el.oid != \"banner\"; }); \n      this.icons = filtered;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n\n  edit(icon: SystemLogo): void {\n    // this.router.navigate(['/admin/logo', icon.oid]);\n\n    let bsModalRef = this.modalService.show( SystemLogoComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n\n        bsModalRef.content.icon = icon;\n\n        bsModalRef.content.onSuccess.subscribe( data => {\n\n          this.icons.forEach(ico => {\n\n            // Setting a random number at the end of the url is a hack to change \n            // the image url to force Angular to rerender the image.\n            this.random = Math.random();\n\n            ico.oid = ico.oid\n          })\n\n          this.changeDetectorRef.detectChanges();\n        })\n  }\n\n  remove(icon: SystemLogo): void {\n    this.service.remove(icon.oid).then(response => {\n      icon.custom = false;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n\n  error( err: HttpErrorResponse ): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div>\n\n\n  <!-- <message ></message> -->\n  \n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n  \n  <div class=\"list-table-wrapper\">\n    <table id=\"manage-icons-table\" class=\"list-table table table-bordered table-striped\">        \n      <thead>\n        <tr>\n          <th></th>\n          <th class=\"label-column\"><localize key='system.image.label'></localize></th>\n          <th class=\"label-column\"><localize key='system.image.preview'></localize></th>\n        </tr>\n      </thead>    \n      <tbody>\n        <tr *ngFor=\"let icon of icons\" class=\"fade-ngRepeat-item\">\n          <td class=\"button-column\">\n            <span>\n              <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(icon)\" [title]=\"'system.image.editTooltip' | localize\"></a>\n              <a *ngIf=\"icon.custom\" class=\"fa fa-trash-o ico-remove\" [title]=\"'system.image.removeTooltip' | localize\"\n                 (click)=\"onClickRemove(icon)\"></a>\n            </span>\n          </td>\n          <td class=\"label-column\">{{ icon.label }}</td>\n          <td class=\"icon-thumbnail-column\">\n            <img style=\"width:42px;height:42px;\" class=\"thumb\" [src]=\"context + '/logo/view?oid=' + icon.oid + '&random=' + random\" alt=\"Icon\">\n          </td>\n        </tr>      \n      </tbody>    \n    </table>\n  </div>\n  \n  <div *ngIf=\"icons === null\" ><localize key='dataset.loadingData'></localize></div>\n\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { ErrorHandler } from '@shared/component';\nimport { Email } from '@admin/model/email';\nimport { EmailService } from '@admin/service/email.service';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n\n@Component({\n\n\tselector: 'email',\n\ttemplateUrl: './email.component.html',\n\tstyleUrls: []\n})\nexport class EmailComponent implements OnInit {\n\tmessage: string = null;\n\tpublic email: Email = {\n\t\toid: '',\n\t\tserver: '',\n\t\tusername: '',\n\t\tpassword: '',\n\t\tport: 0,\n\t\tfrom: '',\n\t\tto: '',\n\t};\n\n\tpublic onSuccess: Subject<any>;\n\n\tconstructor(private service: EmailService, public bsModalRef: BsModalRef) { }\n\n\tngOnInit(): void {\n\t\tthis.service.getInstance().then(email => {\n\t\t\tthis.email = email;\n\t\t});\n\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.apply(this.email)\n\t\t\t.then(() => {\n\t\t\t\tthis.onSuccess.next(true);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t})\n\t\t\t.catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}\n","\n<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n  \n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <!-- <div class=\"modal-dialog\"> -->\n      <!-- <div class=\"modal-content\"> -->\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        <div class=\"heading text-center\">\n          <h1><localize key=\"email.modal.heading\"></localize></h1>\n        </div>      \n        <fieldset>            \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.server\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.server\" name=\"server\" required #server=\"ngModel\">\n              </span>\n              <div *ngIf=\"server.errors?.url\" class=\"inline-error-message\">\n                <localize key=\"email.server.validation\"></localize>\n              </div>                            \n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.password\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"password\" [(ngModel)]=\"email.password\" name=\"password\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.port\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"number\" [(ngModel)]=\"email.port\" name=\"port\" required #port=\"ngModel\" number>\n              </span>\n              <div *ngIf=\"port.errors?.number\" class=\"inline-error-message\">\n                <localize key=\"email.port.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.from\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.from\" name=\"from\" required #from=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"from.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.from.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.to\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.to\" name=\"to\"  #to=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"to.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.to.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { PageResult } from '@shared/model/core';\n\nimport { User, Account } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\nimport { AccountComponent } from './account.component';\nimport { AccountInviteComponent } from '../account/account-invite.component';\nimport { AuthService } from '@shared/service';\n\n@Component({\n\tselector: 'accounts',\n\ttemplateUrl: './accounts.component.html',\n\tstyleUrls: ['./accounts.css']\n})\nexport class AccountsComponent implements OnInit {\n\tres: PageResult<User> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10\n\t};\n\tbsModalRef: BsModalRef;\n\tmessage: string = null;\n\tisRA: boolean = false;\n\n\tconstructor(private service: AccountService, private modalService: BsModalService, authService: AuthService) {\n\t\tthis.isRA = authService.isRA();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.page(1, 10).then(res => {\n\t\t\tthis.res = res;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\tedit(user: User): void {\n\t\t// this.router.navigate(['/admin/account', user.oid]);\n\n\t\tthis.bsModalRef = this.modalService.show(AccountComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.oid = user.oid;\n\t\tthis.bsModalRef.content.setExternalSystems = this.res.externalSystems;\n\n\t\tlet that = this;\n\t\tthis.bsModalRef.content.onEdit.subscribe((data: Account) => {\n\n\t\t\tlet index = that.res.resultSet.findIndex(u => u.oid === data.user.oid);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthat.res.resultSet[index] = data.user;\n\t\t\t}\n\t\t});\n\t}\n\n\tnewInstance(): void {\n\t\t// this.router.navigate(['/admin/account', 'NEW']);\n\n\t\tthis.bsModalRef = this.modalService.show(AccountComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.oid = 'NEW';\n\t\tthis.bsModalRef.content.setExternalSystems = this.res.externalSystems;\n\n\t\tthis.bsModalRef.content.onEdit.subscribe(data => {\n\t\t\tthis.onPageChange(this.res.pageNumber);\n\t\t});\n\n\t}\n\n\tinviteUsers(): void {\n\t\t// this.router.navigate(['/admin/invite']);\t  \n\n\t\tthis.bsModalRef = this.modalService.show(AccountInviteComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.organization = null;\n\t}\n\n\tonPageChange(pageNumber: number): void {\n\t\tthis.service.page(pageNumber, 10).then(res => {\n\t\t\tthis.res = res;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <message></message>\n        <!-- <loading-bar></loading-bar> -->\n\n        <h2>\n            <localize key=\"accounts.title\"></localize>\n        </h2>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\" *ngIf=\"isRA\">\n            <div class=\"col-md-12 text-right\">\n                <input class=\"btn btn-primary\" style=\"margin-top: 10px;\" type=\"submit\" [value]=\"'accounts.inviteUser' | localize\" (click)=\"inviteUsers()\">\n            </div>\n        </div>\n\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        \n        <div class=\"list-table-wrapper\">\n            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th *ngIf=\"isRA\"></th>\n                        <th class=\"label-column\"><localize key='account.username'></localize></th>\n                        <th class=\"label-column\"><localize key='account.firstname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.lastname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.phonenumber'></localize></th>\n                        <th class=\"label-column\"><localize key='account.email'></localize></th>\n                        <th class=\"label-column\"><localize key='account.status'></localize></th>\n                        <!-- <th class=\"label-column\"><localize key='account.roles'></localize></th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let account of res.resultSet | paginate: { itemsPerPage: res.pageSize, currentPage: res.pageNumber, totalItems: res.count }\" class=\"fade-ngRepeat-item\" [ngClass]=\"{'inactive': account.inactive}\">\n                        <td *ngIf=\"isRA\" class=\"button-column\">\n                          <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(account)\" [title]=\"'account.editTooltip' | localize\"></a>\n                        </td>\n                        <td class=\"label-column username-col\">{{ account.username }}</td>\n                        <td class=\"label-column firstname-col\">{{ account.firstName }}</td>\n                        <td class=\"label-column lastname-col\">{{ account.lastName }}</td>\n                        <td class=\"label-column phone-col\">{{ account.phoneNumber }}</td>\n                        <td class=\"label-column email-col\">{{ account.email }}</td>\n                        <td class=\"label-column email-col\">\n                          <localize *ngIf=\"account.inactive\" key='account.status.inactive'></localize>\n                          <localize *ngIf=\"!account.inactive\" key='account.status.active'></localize>\n                        </td>\n                        <!-- <td class=\"label-column role-col\">{{ account.roles }}</td> -->\n                    </tr>\n                    <tr *ngIf=\"isRA\">\n                        <td class=\"button-column\"><a class=\"fa fa-plus\" (click)=\"newInstance()\" [title]=\"'account.newTooltip' | localize\"></a></td>\n                    </tr>\n\n                </tbody>\n            </table>\n        </div>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n    </div>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Subscription } from 'rxjs';\n\nimport { User } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component({\n\tselector: 'account-invite-complete',\n\ttemplateUrl: './account-invite-complete.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteCompleteComponent implements OnInit, OnDestroy {\n\tuser: User;\n\tsub: Subscription;\n\ttoken: string;\n\tmessage: string = null;\n\n\tconstructor(\n\t\tprivate service: AccountService,\n\t\tprivate route: ActivatedRoute) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.service.newUserInstance().then((user: User) => {\n\t\t\tthis.user = user;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.sub = this.route.params.subscribe(params => {\n\t\t\tthis.token = params['token'];\n\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.sub.unsubscribe();\n\t}\n\n\tcancel(): void {\n\t\twindow.location.href = registry.contextPath;\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.inviteComplete(this.user, this.token).then(response => {\n\t\t\twindow.location.href = registry.contextPath;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\terror(err: HttpErrorResponse): void {\n\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n}","<div class=\"new-admin-design-main\">\n  <cgr-header [loggedIn]=false></cgr-header>\n  \n  <div id=\"app-container\" class=\"container\">\n  \n\t  <message></message>\n\t  <loading-bar></loading-bar>\n\t  \n\t  <h2><localize key=\"account.invite.createTitle\"></localize></h2>\n\t\n\t  <form *ngIf=\"user != null\" #form=\"ngForm\" style=\"padding-bottom: 20px;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n\t    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n\t      <!--  <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n\t        <fieldset>            \n\t          <div class=\"heading\">\n\t            <h3><localize key=\"account.user.heading\"></localize></h3>\n\t          </div>      \n\t          <hr>        \n\t          \n\t          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\t          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.firstname\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\" required>\n\t              </span>\n\t            </div>\n\t          </div>          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.lastname\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\" required>\n\t              </span>\n\t            </div>\n\t          </div>  \n            \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>\n            \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.phonenumber\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.phoneNumber\" name=\"phoneNumber\" >\n\t              </span>\n\t<!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n\t<!--                 <localize key=\"account.phone.validation\"></localize> -->\n\t<!--               </div>                                           -->\n\t            </div>\n\t          </div>  \n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n            \n                     \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.email\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n\t              </span>\n\t              <div *ngIf=\"aemail.errors?.email && user.email && user.email.length > 0\" style=\"float:none;\" class=\"inline-error-message\">\n\t                <localize key=\"account.email.validation\"></localize>\n\t              </div>                                          \n\t            </div>\n\t          </div>          \n            \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"user.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n            \n            \n\t          <div class=\"heading\">\n\t            <h3><localize key=\"account.info.heading\"></localize></h3>\n\t          </div>      \n\t          <hr>          \n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t              <label><localize key=\"account.username\"></localize></label>\n\t            </div>          \n\t            <div class=\"holder\" >\n\t              <span class=\"text\">\n\t                <input type=\"text\" [disabled]=\"!user.newInstance && user.username === 'admin'\" [(ngModel)]=\"user.username\" name=\"username\" required>\n\t              </span>\n\t            </div>\n\t          </div>\n\t          <div>\n\t            <div class=\"row-holder\">\n\t              <div class=\"label-holder\">\n\t                <label><localize key=\"account.password\"></localize></label>\n\t              </div>          \n\t              <div class=\"holder\" >\n\t                <span class=\"text\">\n\t                  <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                      <password-strength-bar [passwordToCheck]=\"user.password\"></password-strength-bar>\n\t                </span>\n\t              </div>\n\t            </div>  \n\t            <div class=\"row-holder\">\n\t              <div class=\"label-holder\">\n\t                <label><localize key=\"account.certainPassword\"></localize></label>\n\t              </div>          \n\t              <div class=\"holder\" >\n\t                <span class=\"text\">\n\t                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n\t                </span>\n\t                <div *ngIf=\"certainPassword.errors?.equalTo\" style=\"float: none;\" class=\"inline-error-message\">\n\t                  <localize key=\"account.certainPassword.validation\"></localize>\n\t                </div>                                                       \n\t              </div>\n\t            </div>  \n\t          </div>\n\t          <div class=\"row-holder\">\n\t            <div class=\"label-holder\">\n\t            </div>                    \n\t            <div class=\"holder\">\n\t              <div class=\"button-holder\">\n\t                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n\t                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n\t              </div>\n\t            </div>\n\t          </div>\n\t        </fieldset>\n\t      <!-- </div> -->\n\t    <!-- </div> -->\n\t  </form>\n  </div>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { AccountInviteComponent } from './account/account-invite.component';\nimport { EmailComponent } from './email/email.component'\nimport { OrganizationModalComponent } from './organization/organization-modal.component'\nimport { ExternalSystemModalComponent } from './external-system/external-system-modal.component'\nimport { NewLocaleModalComponent } from './localization-manager/locale-modal.component';\nimport { ImportLocalizationModalComponent } from './localization-manager/import-localization-modal.component';\n\nimport { Settings } from '@admin/model/settings';\nimport { User } from '@admin/model/account';\nimport { AccountService } from '@admin/service/account.service';\n\nimport { PageResult, Organization, ExternalSystem, LocaleView } from '@shared/model/core';\nimport { ModalTypes } from '@shared/model/modal';\nimport { ErrorHandler, ConfirmModalComponent } from '@shared/component';\nimport { LocalizationService, AuthService, ExternalSystemService, OrganizationService } from '@shared/service';\nimport { SettingsService, SettingsInitView } from '@admin/service/settings.service';\nimport { LocalizationManagerService } from '@admin/service/localization-manager.service';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component({\n\tselector: 'settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.css']\n})\nexport class SettingsComponent implements OnInit {\n\tbsModalRef: BsModalRef;\n\tmessage: string = null;\n\torganizations: Organization[] = [];\n\tinstalledLocales: LocaleView[];\n\tisAdmin: boolean;\n\tisSRA: boolean;\n\tisRA: boolean;\n\tsettings: Settings = { email: { isConfigured: false } }\n\t\n\tview: SettingsInitView;\n\n\tsRAs: PageResult<User> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10\n\t};\n\n\tsystems: PageResult<ExternalSystem> = {\n\t\tresultSet: [],\n\t\tcount: 0,\n\t\tpageNumber: 1,\n\t\tpageSize: 10\n\t};\n\n\tconstructor(\n\t\tprivate modalService: BsModalService,\n\t\tprivate localizeService: LocalizationService,\n\t\tprivate authService: AuthService,\n\t\tprivate externalSystemService: ExternalSystemService,\n\t\tprivate orgService: OrganizationService,\n\t\tprivate accountService: AccountService,\n\t\tprivate settingsService: SettingsService,\n\t\tprivate localizationManagerService: LocalizationManagerService\n\t) {\n\t\tthis.isAdmin = authService.isAdmin();\n\t\tthis.isSRA = authService.isSRA();\n\t\tthis.isRA = authService.isRA();\n\t}\n\n\tngOnInit(): void {\n\n\t\t// this.registryService.getLocales().then( locales => {\n\t\t//     this.localizeService.setLocales( locales );\n\t\t// } ).catch(( err: HttpErrorResponse ) => {\n\t\t//     this.error( err );\n\t\t// } );\n\n\t\tthis.settingsService.getInitView().then( (view: SettingsInitView) => {\n\t\t  this.view = view;\n\t\t\tthis.organizations = view.organizations;\n\t\t\tthis.systems = view.externalSystems;\n\t\t\tthis.sRAs = view.sras;\n\t\t\tthis.installedLocales = view.locales;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\n\t\t//this.onSRAPageChange(1);\n\t\t//this.onSystemPageChange(1);\n\t}\n\n\n\tpublic getCGRVersion(): string {\n\t\treturn this.authService.getVersion();\n\t}\n\n\tpublic getLocales(): LocaleView[] {\n\t\treturn this.authService.getLocales();\n\t}\n\n\texportLocalization() {\n\t\t//this.localizationManagerService.exportLocalization();\n\t\twindow.location.href = registry.contextPath + \"/localization/exportSpreadsheet\";\n\t}\n\n\tpublic importLocalization(): void {\n\t\tthis.modalService.show(ImportLocalizationModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t}\n\n  public newOrganization(): void {\n    let bsModalRef = this.modalService.show(OrganizationModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n\n    bsModalRef.content.isNewOrganization = true;\n\n    bsModalRef.content.onSuccess.subscribe(data => {\n      this.organizations.push(data);\n    })\n  }\n\n\tpublic onEditOrganization(org: Organization): void {\n\t\tlet bsModalRef = this.modalService.show(OrganizationModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tbsModalRef.content.organization = org;\n\t\tbsModalRef.content.isNewOrganization = false;\n\n\t\tbsModalRef.content.onSuccess.subscribe(data => {\n\t\t\t//\t\t\tthis.organizations.push(data);\n\t\t\tconst index = this.organizations.findIndex(x => x.code === data.code);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.organizations[index] = data;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.organizations.push(data);\n\t\t\t}\n\n\t\t})\n\t}\n\n\tpublic onRemoveOrganization(code: string, name: string): void {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + name + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\t// this.orgService.removeOrganization(code);\n\n\t\t\tthis.orgService.removeOrganization(code).then(response => {\n\t\t\t\tfor (let i = this.organizations.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (this.organizations[i].code === code) {\n\t\t\t\t\t\tthis.organizations.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\n\t\t});\n\t}\n\t\n\tpublic onEditLocale(locale: LocaleView) {\n\t  let bsModalRef = this.modalService.show(NewLocaleModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n\n    bsModalRef.content.locale = locale;\n    bsModalRef.content.isNew = false;\n    \n    bsModalRef.content.onSuccess.subscribe(data => {\n      const index = this.installedLocales.findIndex(x => (x.tag === data.tag));\n      \n      if (index !== -1) {\n        this.installedLocales[index] = data;\n      }\n      else {\n        this.installedLocales.push(data);\n      }\n      \n      this.localizeService.addLocale(locale);\n      this.authService.addLocale(locale);\n    });\n\t}\n\t\n\tpublic onRemoveLocale(locale: LocaleView) {\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: true,\n      backdrop: true,\n      ignoreBackdropClick: true,\n    });\n    this.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + locale.label.localizedValue + ']';\n    this.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n    this.bsModalRef.content.type = ModalTypes.danger;\n\n    this.bsModalRef.content.onConfirm.subscribe(data => {\n      this.localizationManagerService.uninstallLocale(locale).then(response => {\n        this.localizeService.remove(locale);\n        this.authService.removeLocale(locale);\n        \n        let removeIndex = -1;\n        let len = this.installedLocales.length;\n        for (let i = 0; i < len; ++i)\n        {\n          let myLocale: LocaleView = this.installedLocales[i];\n        \n          if (myLocale.tag === locale.tag)\n          {\n            removeIndex = i;\n          }\n        }\n        \n        if (removeIndex != -1)\n        {\n          this.installedLocales.splice(removeIndex,1);\n        }\n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n    });\n  }\n\n\tpublic newLocalization(): void {\n\n\t\tlet bsModalRef = this.modalService.show(NewLocaleModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true\n\t\t});\n\n\t\tbsModalRef.content.onSuccess.subscribe((locale: LocaleView) => {\n\t\t\tthis.localizeService.addLocale(locale);\n\t\t\tthis.installedLocales.push(locale);\n\t\t\tthis.authService.addLocale(locale);\n\t\t});\n\t}\n\n\tpublic configureEmail(): void {\n\t\tthis.bsModalRef = this.modalService.show(EmailComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.onSuccess.subscribe(data => {\n\t\t\tthis.settings.email.isConfigured = data\n\t\t})\n\t}\n\n\tinviteUsers(): void {\n\t\t// this.router.navigate(['/admin/invite']);\t  \n\n\t\tthis.bsModalRef = this.modalService.show(AccountInviteComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\n\t\tthis.bsModalRef.content.organization = null;\n\t}\n\n\tonSRAPageChange(pageNumber: number): void {\n\t\tthis.accountService.getSRAs(pageNumber, 10).then(sRAs => {\n\t\t\tthis.sRAs = sRAs\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\n\t/* EXTERNAL SYSTEM LOGIC */\n\n\tonSystemPageChange(pageNumber: number): void {\n\t\tthis.externalSystemService.getExternalSystems(pageNumber, this.systems.pageSize).then(systems => {\n\t\t\tthis.systems = systems;\n\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\tthis.error(err);\n\t\t});\n\t}\n\n\tnewSystem(): void {\n\t\tlet bsModalRef = this.modalService.show(ExternalSystemModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tbsModalRef.content.init(this.organizations);\n\t\tbsModalRef.content.onSuccess.subscribe(data => {\n\t\t\tthis.onSystemPageChange(this.systems.pageNumber);\n\t\t})\n\t}\n\n\tonEditSystem(system: ExternalSystem): void {\n\n\t\tthis.externalSystemService.getExternalSystem(system.oid).then(system => {\n\n\t\t\tlet bsModalRef = this.modalService.show(ExternalSystemModalComponent, {\n\t\t\t\tanimated: true,\n\t\t\t\tbackdrop: true,\n\t\t\t\tignoreBackdropClick: true,\n\t\t\t});\n\t\t\tbsModalRef.content.init(this.organizations, system);\n\t\t\tbsModalRef.content.onSuccess.subscribe(data => {\n\t\t\t\tthis.onSystemPageChange(this.systems.pageNumber);\n\t\t\t})\n\t\t});\n\t}\n\n\tonRemoveSystem(system: ExternalSystem): void {\n\n\t\tthis.bsModalRef = this.modalService.show(ConfirmModalComponent, {\n\t\t\tanimated: true,\n\t\t\tbackdrop: true,\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.message = this.localizeService.decode(\"confirm.modal.verify.delete\") + ' [' + system.label.localizedValue + ']';\n\t\tthis.bsModalRef.content.submitText = this.localizeService.decode(\"modal.button.delete\");\n\t\tthis.bsModalRef.content.type = ModalTypes.danger;\n\n\t\tthis.bsModalRef.content.onConfirm.subscribe(data => {\n\t\t\tthis.externalSystemService.removeExternalSystem(system.oid).then(response => {\n\t\t\t\tthis.onSystemPageChange(this.systems.pageNumber);\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t});\n\t}\n\n\t/* ERROR HANDLING LOGIC */\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}\n","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n    \n    <div *ngIf=\"!view\" class=\"standby-overlay\" style=\"width:100%; height:100%; font-size:4em; color:black;\"></div>\n\n    <div id=\"app-container\" class=\"container\">\n\n        <message></message>\n        <!-- <loading-bar></loading-bar> -->\n\n        <h2>\n            <localize key=\"settings.title\"></localize>\n        </h2>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div *ngIf=\"view\" style=\"padding-bottom: 30px;\"> \n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.information.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <h4><localize key=\"settings.version.label\"></localize> {{getCGRVersion()}}</h4>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.administrators.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-systems-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"label-column\"><localize key='account.username'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.firstname'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.lastname'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.phonenumber'></localize></th>\n                                        <th class=\"label-column\"><localize key='account.email'></localize></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let account of sRAs.resultSet | paginate: { itemsPerPage: sRAs.pageSize, currentPage: sRAs.pageNumber, totalItems: sRAs.count }\" class=\"fade-ngRepeat-item\">\n                                        <td class=\"label-column username-col\">{{ account.username }}</td>\n                                        <td class=\"label-column firstname-col\">{{ account.firstName }}</td>\n                                        <td class=\"label-column lastname-col\">{{ account.lastName }}</td>\n                                        <td class=\"label-column phone-col\">{{ account.phoneNumber }}</td>\n                                        <td class=\"label-column email-col\">{{ account.email }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <pagination-controls (pageChange)=\"onSRAPageChange($event)\"></pagination-controls>\n                            \n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            \n\n            <div *ngIf=\"isAdmin\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.organizations.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-organizations-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th *ngIf=\"isSRA\"></th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.code.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.name.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.orgs.table.contact.header\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let org of organizations\">\n                                        <td *ngIf=\"isSRA\" class=\"button-column\">\n                                            <a class=\"fa fa-pencil ico-edit\" (click)=\"onEditOrganization(org)\"  [title]=\"'account.editTooltip' | localize\"></a> \n                                            <a class=\"fa fa-trash-o ico-remove\" (click)=\"onRemoveOrganization(org.code, org.code)\" [title]=\"'account.removeTooltip' | localize\" ></a>\n                                        </td>\n                                        <td class=\"label-column\">{{org.code}}</td>\n                                        <td class=\"label-column\">{{org.label.localizedValue}}</td>\n                                        <td class=\"label-column\">{{org.contactInfo.localizedValue}}</td>\n                                    </tr>\n                                    <tr *ngIf=\"isSRA\">\n                                        <td class=\"button-column\">\n                                            <a class=\"fa fa-plus\" (click)=\"newOrganization()\" [title]=\"'account.newTooltip' | localize\"></a>\n                                        </td>\n                                    </tr>\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.accounts.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <a [routerLink]=\"'/admin/accounts/'\" routerLinkActive=\"active\">\n                                    <button class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"settings.manage.accounts.button\"></localize>\n                                    </button>\n                                </a>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\" *ngIf=\"isSRA || isRA\">\n                                <input class=\"btn btn-primary\" style=\"margin-top:10px;\" type=\"submit\" [value]=\"'accounts.inviteUser' | localize\" (click)=\"inviteUsers()\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isSRA && installedLocales\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.localization.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th>\n                                        </th>\n                                        <th>\n                                          <localize key=\"settings.localization.locale.displayLabel\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.lang.table.language.header\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"settings.manage.lang.table.country.header\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let loc of installedLocales\">\n\t                                    <td *ngIf=\"isSRA\" class=\"button-column\">\n\t                                        <a class=\"fa fa-pencil ico-edit\" (click)=\"onEditLocale(loc)\" ></a> \n\t                                        <a *ngIf=\"!loc.isDefaultLocale\" class=\"fa fa-trash-o ico-remove\" (click)=\"onRemoveLocale(loc)\" ></a>\n\t                                    </td>\n\t                                    <td class=\"label-column\">{{loc.label.localizedValue}}</td>\n\t                                    <td class=\"label-column\">{{loc.language.label}}</td>\n\t                                    <td class=\"label-column\">{{loc.country.label}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"button-column\"><a class=\"fa fa-plus\" (click)=\"newLocalization()\" [title]=\"'account.newTooltip' | localize\"></a></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        \n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                               <input class=\"btn btn-primary\" type=\"submit\" (click)=\"exportLocalization()\" [value]=\"'localization-manager.exportButton' | localize\">\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                               <input class=\"btn btn-primary\" style=\"margin-top:10px;\" type=\"submit\" (click)=\"importLocalization()\" [value]=\"'localization-manager.importButton' | localize\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isSRA\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.branding.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <system-logos></system-logos>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"isSRA\" class=\"row\" style=\"margin-bottom: 30px;\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.email.heading\"></localize></h3>\n                     \n                    <div class=\"content-wrapper\">\n                        <input class=\"btn btn-primary\" type=\"submit\" (click)=\"configureEmail()\" [value]=\"'settings.email.configure' | localize\">\n\n                        <i *ngIf=\"settings.email.isConfigured\" class=\"fa fa-check\" aria-hidden=\"true\"><localize key=\"settings.email.configured\"></localize></i>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"isRA && organizations.length > 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3><localize key=\"settings.external.system.heading\"></localize></h3>\n\n                    <div class=\"content-wrapper\">\n                        <div class=\"list-table-wrapper\">\n                            <table id=\"manage-systems-table\" class=\"list-table table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>\n                                            <localize key=\"external.system.type\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"external.system.label\"></localize>\n                                        </th>\n                                        <th>\n                                            <localize key=\"external.system.description\"></localize>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let system of systems.resultSet | paginate: { itemsPerPage: systems.pageSize, currentPage: systems.pageNumber, totalItems: systems.count }\">\n                                        <td class=\"button-column\">\n                                          <a class=\"fa fa-pencil ico-edit\" (click)=\"onEditSystem(system)\"  [title]=\"'account.editTooltip' | localize\"></a> \n                                          <a class=\"fa fa-trash-o ico-remove\" (click)=\"onRemoveSystem(system)\" [title]=\"'account.removeTooltip' | localize\" ></a>\n                                        </td>\n                                        <td class=\"label-column\">\n                                          <localize *ngIf=\"system.type === 'DHIS2ExternalSystem'\" key=\"external.system.dhis2\"></localize>\n                                          <localize *ngIf=\"system.type === 'RevealExternalSystem'\" key=\"external.system.reveal\"></localize>                                        \n                                          <localize *ngIf=\"system.type === 'FhirExternalSystem'\" key=\"external.system.fhir\"></localize>                                        \n                                        </td>\n                                        <td class=\"label-column\">{{system.label.localizedValue}}</td>\n                                        <td class=\"label-column\">{{system.description.localizedValue}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"button-column\">\n                                            <a class=\"fa fa-plus\" (click)=\"newSystem()\" [title]=\"'account.newTooltip' | localize\"></a>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <pagination-controls (pageChange)=\"onSystemPageChange($event)\"></pagination-controls>\n                            \n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div *ngIf=\"isRA && organizations.length > 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <h3>\n                        <localize key=\"settings.external.synchronization.heading\"></localize>\n                    </h3>\n            \n                    <div class=\"content-wrapper\">\n            \n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <a [routerLink]=\"'/registry/synchronization-configs'\" routerLinkActive=\"active\">\n                                    <button class=\"btn btn-primary\" role=\"button\">\n                                        <localize key=\"settings.external.synchronization.button\"></localize>\n                                    </button>\n                                </a>\n                            </div>\n                        </div>\n            \n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ErrorHandler } from '@shared/component';\nimport { Organization } from '@shared/model/core';\n\nimport { LocalizationService, OrganizationService } from '@shared/service';\n\n@Component({\n\tselector: 'organization-modal',\n\ttemplateUrl: './organization-modal.component.html',\n\tstyles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class OrganizationModalComponent implements OnInit {\n\n\tmessage: string = null;\n\torganization: Organization = { code: \"\", label: this.lService.create(), contactInfo: this.lService.create() };\n\tisNewOrganization: boolean = true;\n\n\tpublic onSuccess: Subject<Organization>;\n\n\tconstructor(private orgService: OrganizationService, public bsModalRef: BsModalRef, private lService: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.onSuccess = new Subject();\n\t\t\n\t\t// console.log(this.organization.label.localeValues);\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.isNewOrganization) {\n\t\t\tthis.orgService.newOrganization(this.organization).then(data => {\n\t\t\t\tthis.onSuccess.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.orgService.updateOrganization(this.organization).then(data => {\n\t\t\t\tthis.onSuccess.next(data);\n\t\t\t\tthis.bsModalRef.hide();\n\t\t\t}).catch((err: HttpErrorResponse) => {\n\t\t\t\tthis.error(err);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\t\tthis.message = ErrorHandler.getMessageFromError(err);\n\t}\n\n}","<div>\n  \n  <message></message>\n\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n        <fieldset>            \n          <div class=\"heading text-center\">\n            <h1><localize key=\"organization.heading\"></localize></h1>\n          </div>      \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.code\"></localize></label>\n            </div>\n            <div class=\"holder\" >\n                <input type=\"text\" [(ngModel)]=\"organization.code\" name=\"code\" [disabled]=\"!isNewOrganization\" required>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.name\"></localize></label>\n            </div>          \n            <div class=\"holder\" style=\"padding-top:10px;\">\n                <div class=\"form-group\" *ngFor=\"let localeValue of organization.label.localeValues\">\n                  <label> <convert-key-label [key]=\"localeValue.locale\"></convert-key-label></label>\n                  <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\" required>\n                </div>\n            </div>\n          </div>  \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"organization.contact\"></localize></label>\n            </div>          \n            <div class=\"holder\" style=\"padding-top:10px;\">\n                <div class=\"form-group\" *ngFor=\"let localeValue of organization.contactInfo.localeValues\">\n                  <label> <convert-key-label [key]=\"localeValue.locale\"></convert-key-label></label>\n                  <input  [(ngModel)]=\"localeValue.value\" [name]=\"'contact-' + localeValue.locale\" type=\"input\" class=\"form-control\">\n                </div>\n            </div>\n          </div>  \n\n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Subject } from \"rxjs\";\n\nimport { ExternalSystem, SystemCapabilities, Organization } from \"@shared/model/core\";\n\nimport { LocalizationService, AuthService, ExternalSystemService } from \"@shared/service\";\n\nimport { ErrorHandler } from \"@shared/component\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component({\n    selector: \"external-system-modal\",\n    templateUrl: \"./external-system-modal.component.html\",\n    styles: [\".modal-form .check-block .chk-area { margin: 10px 0px 0 0;}\"]\n})\nexport class ExternalSystemModalComponent implements OnInit {\n\n  context: string;\n\n  message: string = null;\n\n  connectMessage: string = null;\n\n  editPassword: boolean = false;\n\n  isNew: boolean = false;\n\n  system: ExternalSystem = {\n      id: \"\",\n      type: \"DHIS2ExternalSystem\",\n      organization: \"\",\n      label: this.lService.create(),\n      description: this.lService.create(),\n      version: \"2.31\",\n      oAuthServer: null\n  };\n\n  organizations: Organization[] = [];\n\n  oauthEnabled: boolean = false;\n\n  capabilities: SystemCapabilities = null;\n\n  public onSuccess: Subject<ExternalSystem>;\n\n  constructor(private systemService: ExternalSystemService, private authService: AuthService, public bsModalRef: BsModalRef, private lService: LocalizationService) {\n      this.context = registry.contextPath;\n  }\n\n  ngOnInit(): void {\n      this.onSuccess = new Subject();\n  }\n\n  init(organizations: Organization[], system: ExternalSystem): void {\n      this.organizations = organizations.filter(o => {\n          return this.authService.isOrganizationRA(o.code);\n      });\n\n      if (system != null) {\n          this.system = system;\n          this.oauthEnabled = this.system.oAuthServer != null;\n          this.isNew = false;\n      } else {\n          this.isNew = true;\n          this.editPassword = true;\n      }\n  }\n\n  enableOAuth(): void {\n      this.oauthEnabled = true;\n\n      if (!this.system.url.endsWith(\"/\")) {\n          this.system.url = this.system.url + \"/\";\n      }\n\n      this.message = null;\n\n      this.system.oAuthServer = {\n          authorizationLocation: this.system.url + \"uaa/oauth/authorize\",\n          tokenLocation: this.system.url + \"uaa/oauth/token\",\n          profileLocation: this.system.url + \"api/me\",\n          clientId: \"georegistry\",\n          secretKey: \"\",\n          serverType: \"DHIS2\"\n      };\n\n      if (this.system.type === \"DHIS2ExternalSystem\") {\n          this.getSystemCapabilities();\n      }\n  }\n\n  getSystemCapabilities(): void {\n      if (this.capabilities != null || this.system.type !== \"DHIS2ExternalSystem\" ||\n        (this.system.username == null || this.system.username.length === 0) ||\n        (this.isNew && (this.system.password == null || this.system.password.length === 0)) ||\n        (this.system.url == null || this.system.url.length === 0)\n      ) { return; }\n\n      this.systemService.getSystemCapabilities(this.system).then(capabilities => {\n          this.message = null;\n          this.connectMessage = null;\n\n          this.capabilities = capabilities;\n\n          if (capabilities.oauth && this.oauthEnabled && this.system.oAuthServer == null) {\n              this.system.oAuthServer = {\n                  authorizationLocation: this.system.url + \"uaa/oauth/authorize\",\n                  tokenLocation: this.system.url + \"uaa/oauth/token\",\n                  profileLocation: this.system.url + \"api/me\",\n                  clientId: \"georegistry\",\n                  secretKey: \"\",\n                  serverType: \"DHIS2\"\n              };\n          }\n      }).catch((err: HttpErrorResponse) => {\n          this.connectMessage = ErrorHandler.getMessageFromError(err);\n      });\n  }\n\n  dhis2UrlKeyListener(event: any): void {\n      if (event.key === \"Enter\") {\n          this.capabilities = null;\n          this.getSystemCapabilities();\n      }\n  }\n\n  dhis2FocusOut(): void {\n      this.capabilities = null;\n      this.getSystemCapabilities();\n  }\n\n  removeOauth(): void {\n      this.oauthEnabled = false;\n      delete this.system.oAuthServer;\n  }\n\n  isOauthSupported(system:ExternalSystem) : boolean {\n      return system.type === \"DHIS2ExternalSystem\" || system.type === \"FhirExternalSystem\";\n  }\n\n  downloadDhis2Plugin(): void {\n      window.location.href = this.context + \"/external-system/download-dhis2-plugin\";\n  }\n\n  cancel(): void {\n      this.bsModalRef.hide();\n  }\n\n  onSubmit(): void {\n      this.systemService.applyExternalSystem(this.system).then(data => {\n          this.onSuccess.next(data);\n          this.bsModalRef.hide();\n      }).catch((err: HttpErrorResponse) => {\n          this.error(err);\n      });\n  }\n\n  public error(err: HttpErrorResponse): void {\n      document.querySelector(\"modal-container.modal\").scroll({\n          top: 0,\n          left: 0,\n          behavior: \"smooth\"\n      });\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n\n}\n","<div>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n    <fieldset>\n      <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"external.system.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.type\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"system.type\" name=\"type\" [disabled]=\"system.oid != null\" required>\n              <option></option>\n              <option value=\"DHIS2ExternalSystem\">\n                <localize key=\"external.system.dhis2\"></localize>\n              </option>\n              <option value=\"RevealExternalSystem\">\n                <localize key=\"external.system.reveal\"></localize>\n              </option>\n              <option value=\"FhirExternalSystem\">\n                <localize key=\"external.system.fhir\"></localize>\n              </option>\n            </select>\n          </span>\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.organization\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"select\">\n            <select type=\"text\" [(ngModel)]=\"system.organization\" name=\"organization\" [disabled]=\"system.oid != null\"\n              required>\n              <option></option>\n              <option *ngFor=\"let org of organizations\" [value]=\"org.code\">{{org.label.localizedValue}}</option>\n            </select>\n          </span>\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.id\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"system.id\" name=\"id\" [disabled]=\"system.oid != null\" required>\n          </span>\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.label\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n\n            <div class=\"form-group\" *ngFor=\"let localeValue of system.label.localeValues\">\n              <label>\n                <convert-key-label [key]=\"localeValue.locale\"></convert-key-label>\n              </label>\n              <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\"\n                class=\"form-control\" [required]=\"localeValue.locale === 'defaultLocale'\">\n            </div>\n          </span>\n        </div>\n\n\n        <!--             <div class=\"form-group\" *ngFor=\"let localeValue of hierarchyType.label.localeValues\"> -->\n        <!--               <label for=\"labelInput\"> -->\n        <!--                 <localize key=\"data.property.label.label\"></localize>  -->\n        <!--                 <span  style=\"color: #BABABA\">&nbsp;(<convert-key-label [key]=\"localeValue.locale\"></convert-key-label>)</span> -->\n        <!--               </label> -->\n        <!--               <input [disabled]=\"readOnly\" [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\" -->\n        <!--                 required> -->\n        <!--             </div> -->\n\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.description\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <div class=\"form-group\" *ngFor=\"let localeValue of system.description.localeValues\">\n              <label>\n                <convert-key-label [key]=\"localeValue.locale\"></convert-key-label>\n              </label>\n              <input [(ngModel)]=\"localeValue.value\" [name]=\"'contact-' + localeValue.locale\" type=\"input\"\n                class=\"form-control\">\n            </div>\n            <!-- <input type=\"text\" [(ngModel)]=\"external.system.contactInfo\" name=\"contact\" required> -->\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.username\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" (focusout)=\"dhis2FocusOut()\" [(ngModel)]=\"system.username\" name=\"username\" required>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.password\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <div>\n            <input *ngIf=\"!editPassword\" type=\"button\" [value]=\"'external.system.editPassword' | localize\"\n              class=\"btn btn-primary\" (click)=\"editPassword = !editPassword\" />\n            <input *ngIf=\"editPassword && !isNew\" style=\"margin-bottom:5px;\" type=\"button\"\n              [value]=\"'external.system.editPasswordCancel' | localize\" class=\"btn btn-default\"\n              (click)=\"editPassword = !editPassword\" />\n          </div>\n          <span *ngIf=\"editPassword\" class=\"text\">\n            <input type=\"password\" [(ngModel)]=\"system.password\" name=\"password\" required>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"system.type === 'DHIS2ExternalSystem' || system.type === 'FhirExternalSystem'\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.url\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" (focusout)=\"dhis2FocusOut()\" [(ngModel)]=\"system.url\" name=\"url\" required>\n          </span>\n        </div>\n      </div>\n      <div *ngIf=\"connectMessage != null\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n          </label>\n        </div>\n        <div class=\"alert alert-danger holder\" role=\"alert\" style=\"padding-top:18px;\">\n          {{connectMessage}}\n        </div>\n      </div>\n      <div *ngIf=\"capabilities && !capabilities.supportedVersion\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n          </label>\n        </div>\n        <div class=\"alert alert-danger holder\" role=\"alert\" style=\"padding-top:18px;\">\n          <localize key=\"external.system.versionNotSupported\"></localize>\n        </div>\n      </div>\n      <div *ngIf=\"system.type === 'FhirExternalSystem'\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.system\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"system.system\" name=\"system\" required>\n          </span>\n        </div>\n      </div>\n\n      <!--           <div class=\"row-holder\"> -->\n      <!-- \t        <div  class=\"label-holder\"> -->\n      <!--               <label><localize key=\"external.system.oauthHeader\"></localize></label> -->\n      <!--           <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"heading\"> -->\n      <!--             <h3><localize key=\"external.system.oauthHeader\"></localize></h3> -->\n      <!--           </div> -->\n      <ng-container *ngIf=\"isOauthSupported(system)\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"external.system.oauthHeader\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <input *ngIf=\"system.oAuthServer == null\" type=\"button\" [value]=\"'external.system.enableOauth' | localize\"\n              class=\"btn btn-primary\" [disabled]=\"system.url == null\" (click)=\"enableOAuth()\" />\n            <hr *ngIf=\"system.oAuthServer != null\" style=\"border-color:lightgrey;\">\n          </div>\n        </div>\n        <div *ngIf=\"capabilities && !capabilities.oauth\" class=\"row-holder\">\n          <div class=\"label-holder\">\n\t          <label>\n\t          </label>\n\t        </div>\n          <div class=\"alert alert-danger holder\" role=\"alert\" style=\"padding-top:18px;\">\n            <localize key=\"external.system.oauthNotSupported\"></localize>\n          </div>\n        </div>\n        <div *ngIf=\"this.oauthEnabled && system.oAuthServer != null\">\n          <!--\n              <div class=\"holder\">\n                <div>\n                  <input type=\"button\" value=\"Push to DHIS2\" [disabled]=\"system.url == null || system.username == null || system.password == null\" class=\"btn btn-default\" (click)=\"downloadDhis2Plugin()\" />              \n                </div>\n              </div>\n              -->\n          <ng-container *ngIf=\"system.type === 'FhirExternalSystem'\">\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label>\n                  <localize key=\"external.system.username\"></localize>\n                </label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\">\n                  <input type=\"text\" [(ngModel)]=\"system.username\" name=\"username\" required>\n                </span>\n              </div>\n            </div>\n\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label>\n                  <localize key=\"external.system.password\"></localize>\n                </label>\n              </div>\n              <div class=\"holder\">\n                <div>\n                  <input *ngIf=\"!editPassword\" type=\"button\" [value]=\"'external.system.editPassword' | localize\"\n                    class=\"btn btn-primary\" (click)=\"editPassword = !editPassword\" />\n                  <input *ngIf=\"editPassword && !isNew\" style=\"margin-bottom:5px;\" type=\"button\"\n                    [value]=\"'external.system.editPasswordCancel' | localize\" class=\"btn btn-default\"\n                    (click)=\"editPassword = !editPassword\" />\n                </div>\n                <span *ngIf=\"editPassword\" class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"system.password\" name=\"password\" required>\n                </span>\n              </div>\n            </div>\n          </ng-container>\n\n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label>\n                <localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize\n                  key=\"external.system.oauth.clientId\"></localize>\n              </label>\n            </div>\n            <div class=\"holder\">\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.clientId\" name=\"clientId\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label>\n                <localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize\n                  key=\"external.system.oauth.secretKey\"></localize>\n              </label>\n            </div>\n            <div class=\"holder\">\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.secretKey\" name=\"secretKey\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label>\n                <localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize\n                  key=\"external.system.oauth.profileLocation\"></localize>\n              </label>\n            </div>\n            <div class=\"holder\">\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.profileLocation\" name=\"profileLocation\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label>\n                <localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize\n                  key=\"external.system.oauth.tokenLocation\"></localize>\n              </label>\n            </div>\n            <div class=\"holder\">\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.tokenLocation\" name=\"tokenLocation\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label>\n                <localize key=\"external.system.oauthHeader\"></localize>&nbsp;<localize\n                  key=\"external.system.oauth.authorizationLocation\"></localize>\n              </label>\n            </div>\n            <div class=\"holder\">\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"system.oAuthServer.authorizationLocation\" name=\"authorizationLocation\"\n                  required>\n              </span>\n            </div>\n          </div>\n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>\n            <div class=\"holder\">\n              <input type=\"button\" [value]=\"'external.system.oauth.removeOauth' | localize\" class=\"btn btn-danger\"\n                (click)=\"removeOauth()\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n\n      <div *ngIf=\"system.type === 'DHIS2ExternalSystem'\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"external.system.oauth.downloadDhis2PluginHeader\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <input type=\"button\" [value]=\"'external.system.oauth.downloadDhis2Plugin' | localize\" class=\"btn btn-primary\"\n            (click)=\"downloadDhis2Plugin()\" />\n        </div>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n        </div>\n        <div class=\"holder\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\"\n              [disabled]=\"!(form.valid) || connectMessage != null\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { LocalizationManagerService } from '@admin/service/localization-manager.service';\nimport { AllLocaleInfo } from '@admin/model/localization-manager';\nimport { LocaleView } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service/localization.service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n@Component({\n\tselector: 'locale-modal',\n\ttemplateUrl: './locale-modal.component.html',\n\tstyleUrls: []\n})\nexport class NewLocaleModalComponent {\n\n\tallLocaleInfo: AllLocaleInfo;\n\t\n\t@Input() locale: LocaleView = new LocaleView(this.lService);\n\t\n\t@Input() isNew: boolean = true;\n\n\tpublic onSuccess: Subject<LocaleView>;\n\n\tconstructor(public bsModalRef: BsModalRef, private localizationManagerService: LocalizationManagerService, private modalService: BsModalService, private lService: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.allLocaleInfo = new AllLocaleInfo();\n\t\t\n\t\tthis.localizationManagerService.getNewLocaleInfo().then(allLocaleInfoIN => {\n\t\t\tthis.allLocaleInfo = allLocaleInfoIN;\n\t\t}).catch((err: HttpErrorResponse) => {\n\n\t\t\tthis.bsModalRef.hide();\n\t\t\tthis.error(err);\n\t\t});\n\n\t\tthis.onSuccess = new Subject();\n\t}\n\n\tsubmit(): void {\n\n    if (this.isNew)\n    {\n  \t\tthis.localizationManagerService.installLocale(this.locale).then((locale: LocaleView) => {\n  \t\t\tthis.onSuccess.next(locale);\n  \n  \t\t\tthis.bsModalRef.hide();\n  \t\t}).catch((err: HttpErrorResponse) => {\n  \t\t\tthis.bsModalRef.hide();\n  \t\t\tthis.error(err);\n  \t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t  this.localizationManagerService.editLocale(this.locale).then((locale: LocaleView) => {\n        this.onSuccess.next(locale);\n  \n        this.bsModalRef.hide();\n      }).catch((err: HttpErrorResponse) => {\n        this.bsModalRef.hide();\n        this.error(err);\n      });\n\t\t}\n\t}\n\n\tcancel(): void {\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tpublic error(err: HttpErrorResponse): void {\n\t\tthis.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n\t}\n}\n","<div>\n  <loading-bar></loading-bar>\n\n<form #form=\"ngForm\" class=\"modal-form\" name=\"new-locale-form\" (ngSubmit)=\"form.valid && submit()\">\n  <div class=\"modal-body\">\n  <fieldset *ngIf=\"locale\">\n    <div class=\"heading text-center\">\n      <h1>\n        <localize *ngIf=\"this.isNew\" key=\"new-locale.title\"></localize>\n        <localize *ngIf=\"!this.isNew\" key=\"edit-locale.title\"></localize>\n      </h1>\n    </div>\n\n    <div *ngIf=\"locale.language && locale.toString !== 'defaultLocale'\" class=\"row-holder\">\n\t    <div class=\"label-holder\">\n\t     <label>\n\t       <localize key=\"new-locale.language\"></localize>\n\t     </label>\n\t    </div>\n\t    <div class=\"holder\">\n\t     <select [(ngModel)]=\"locale.language.code\" name=\"new-locale-language\">\n\t       <option *ngFor=\"let lang of allLocaleInfo.languages\" [ngValue]=\"lang.key\">{{lang.label}}</option>\n\t     </select>\n\t    </div>\n    </div>\n\n    <div *ngIf=\"locale.country && locale.toString !== 'defaultLocale'\" class=\"row-holder\">\n      <div class=\"label-holder\">\n\t      <label>\n\t        <localize key=\"new-locale.country\"></localize>\n\t      </label>\n      </div>\n      <div  class=\"holder\">\n\t      <select [(ngModel)]=\"locale.country.code\" name=\"new-locale-country\">\n\t        <option *ngFor=\"let count of allLocaleInfo.countries\" [ngValue]=\"count.key\">{{count.label}}</option>\n\t      </select>\n      </div>\n    </div>\n\n<!--     <div> -->\n<!--       <label> -->\n<!--         <localize key=\"new-locale.variant\"></localize> -->\n<!--       </label> -->\n<!--       <input type=\"text\" [(ngModel)]=\"locale.variant\" name=\"new-locale-variant\" /> -->\n<!--     </div> -->\n\n    <div *ngIf=\"locale.label\" class=\"row-holder\">\n      <div class=\"label-holder\">\n        <label>\n        <localize key=\"settings.localization.locale.displayLabel\"></localize>\n      </label>\n      </div> \n      <div class=\"holder\" style=\"padding-top:10px;\">\n\t      <div class=\"form-group\" *ngFor=\"let localeValue of locale.label.localeValues\">\n\t        <label> <convert-key-label [key]=\"localeValue.locale\"></convert-key-label></label>\n\t        <input [(ngModel)]=\"localeValue.value\" [name]=\"'label-' + localeValue.locale\" type=\"input\" class=\"form-control\" required>\n\t      </div>\n      </div>\n    </div>\n\n    <div class=\"row-holder\">\n      <div class=\"label-holder\">\n      </div> \n      <div class=\"holder\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.submit\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n  </div>\n</form>\n\n</div>\n","import { Component, ViewChild, ElementRef } from \"@angular/core\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { FileUploader, FileUploaderOptions } from \"ng2-file-upload\";\n\nimport { ErrorHandler } from \"@shared/component\";\nimport { LocalizationService, EventService } from \"@shared/service\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { LocalizationFeedbackModalComponent } from \"./localization-feedback-modal.component\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component({\n    selector: \"import-localization-modal\",\n    templateUrl: \"./import-localization-modal.component.html\",\n    styleUrls: []\n})\nexport class ImportLocalizationModalComponent {\n\n    @ViewChild(\"myFile\")\n    fileRef: ElementRef;\n\n    /*\n     * File uploader\n     */\n    uploader: FileUploader;\n\n    constructor(public bsModalRef: BsModalRef, private localizationService: LocalizationService, private eventService: EventService, private modalService: BsModalService) { }\n\n    ngOnInit(): void {\n        let options: FileUploaderOptions = {\n            queueLimit: 1,\n            removeAfterUpload: true,\n            url: registry.contextPath + \"/localization/importSpreadsheet\"\n        };\n\n        this.uploader = new FileUploader(options);\n\n        this.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n        };\n        this.uploader.onBeforeUploadItem = (fileItem: any) => {\n            this.eventService.start();\n        };\n        this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n            this.fileRef.nativeElement.value = \"\";\n            this.eventService.complete();\n        };\n        this.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n            this.bsModalRef.hide();\n        };\n        this.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n            let error = JSON.parse(response);\n\n            if (error instanceof HttpErrorResponse && error.status === 401) {\n                return null;\n            }\n\n            let newline = \"\\n\";\n\n            let errMsg = error.localizedMessage.replaceAll(\"\\\\n\", newline);\n\n            let bsModalRef = this.modalService.show(LocalizationFeedbackModalComponent, { backdrop: true, class: \"error-white-space-pre\" });\n\n            bsModalRef.content.message = errMsg;\n\n            return bsModalRef;\n        };\n    }\n\n    submit(): void {\n        if (this.uploader.queue != null && this.uploader.queue.length > 0) {\n            this.uploader.uploadAll();\n        } else {\n            this.error({\n                message: this.localizationService.decode(\"io.missing.file\"),\n                error: {}\n            });\n        }\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n    }\n\n    public error(err: any): void {\n        ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n}\n","<div>\n  <loading-bar></loading-bar>\n\n<form #form=\"ngForm\" class=\"modal-form\" name=\"new-locale-form\" (ngSubmit)=\"form.valid && submit()\">\n  <div class=\"modal-body\">\n  <fieldset>\n    <div class=\"heading text-center\">\n      <h1>\n        <localize key=\"localization-manager.importButton\"></localize>\n      </h1>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n          <input class=\"ghost-input\" #myFile name=\"file\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" accept=\".xls, .xlsx\" required />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.cancel\"></localize>\n            </span>\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary\" role=\"button\" aria-disabled=\"false\">\n            <span>\n              <localize key=\"new-locale.submit\"></localize>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n  </div>\n</form>\n\n</div>\n","import { Component, Input } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"error-modal\",\n    templateUrl: \"./localization-feedback-modal.component.html\",\n    styleUrls: [\"./localization-feedback-modal.css\"]\n})\nexport class LocalizationFeedbackModalComponent {\n\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"error.modal.default.message\");\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<textarea style=\"width:100%; height: 500px;\">{{message}}</textarea>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nexport class UserInvite {\n  email: string;\n  roles: any;\n}\n\nexport class User {\n  oid: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phoneNumber: string;\n  inactive: boolean;\n  newInstance: boolean;\n  roles: string[];\n  altFirstName?: string;\n  altLastName?: string;\n  altPhoneNumber?: string;\n  position?: string;\n  department?: string;\n  externalSystemOid?: string;\n}\n\nexport class Group {\n  name:string;\n  assigned:string;\n  roles:Role[];\n}\n\nexport class Account {\n  user:User;\n  roles: any;\n  changePassword:boolean;\n}\n\nexport class Role {\n  type:string;\n  name:string;\n  label:any;\n  orgCode:string;\n  orgLabel:any;\n  geoObjectTypeCode:string;\n  geoObjectTypeLabel: any;\n  assigned: boolean;\n}\n\nexport class FormattedRoles {\n  SRA: Role;\n  ORGANIZATIONS: FormattedOrganization[];\n}\n\nexport class FormattedOrganization {\n  ORGANIZATIONLABEL: any;\n  RA: Role;\n  GEOOBJECTTYPEROLES: FormattedGeoObjectTypeRoleGroup[];\n  CODE: string;\n}\n\nexport class FormattedGeoObjectTypeRoleGroup {\n  ENABLEDROLE: string;\n  GEOOBJECTTYPELABEL: any;\n  GEOOBJECTTYPEROLESGROUP: Role[];\n}\n","export class LocaleInfo {\n  key: string;\n  label: string;\n}\n\nexport class AllLocaleInfo {\n  countries: LocaleInfo[];\n  languages: LocaleInfo[];\n}\n\nexport class Locale {\n  language: string;\n  country: string\n  name: string;\n  variant: string;\n  displayLabel: string;\n}","import { NgModule, Injectable, Inject } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from '../shared/service/guard.service';\nimport { PendingChangesGuard } from \"../shared/service/pending-changes-guard\";\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { SettingsComponent } from './component/settings.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'logos',\n        canActivate: [AuthGuard],\n        component: SystemLogosComponent,\n        data: { title: 'System_Configuration' }\n    },\n    {\n        path: 'logo/:oid',\n        canActivate: [AuthGuard],\n        component: SystemLogoComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: 'email',\n        canActivate: [AuthGuard],\n        component: EmailComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },   \n    {\n        path: 'settings',\n        canActivate: [AuthGuard],\n        component: SettingsComponent,\n        data: { title: 'settings.title' }\n    }, \n    {\n        path: 'accounts',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'account/:oid',\n        component: AccountComponent,\n        //   resolve: {\n        //     account: AccountResolver\n        //   },        \n        canActivate: [AuthGuard],\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite',\n        component: AccountInviteComponent,\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite-complete/:token',\n        component: AccountInviteCompleteComponent,\n        data: { title: 'account.title' }\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class AdminRoutingModule { }\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { SystemLogoService } from './service/system-logo.service';\nimport { EmailService } from './service/email.service';\nimport { AccountService } from './service/account.service';\nimport { SettingsService } from './service/settings.service';\nimport { LocalizationManagerService } from './service/localization-manager.service';\n\n\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { RoleManagementComponent } from './component/account/role-management.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\nimport { SettingsComponent } from './component/settings.component';\nimport { OrganizationModalComponent } from './component/organization/organization-modal.component';\nimport { NewLocaleModalComponent } from './component/localization-manager/locale-modal.component'\nimport { ImportLocalizationModalComponent } from './component/localization-manager/import-localization-modal.component';\nimport { ExternalSystemModalComponent } from './component/external-system/external-system-modal.component';\nimport { LocalizationFeedbackModalComponent } from './component/localization-manager/localization-feedback-modal.component';\n\n\nimport { AdminRoutingModule } from './admin-routing.module';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport '../rxjs-extensions';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\tNgxPaginationModule,\n\t\tSharedModule,\n\t\tAdminRoutingModule\n\t],\n\tdeclarations: [\n\t\t// Global components\n\t\tSystemLogoComponent,\n\t\tSystemLogosComponent,\n\t\tAccountsComponent,\n\t\tAccountInviteCompleteComponent,\n\t\tAccountInviteComponent,\n\t\tAccountComponent,\n\t\tSystemLogoComponent,\n\t\tSystemLogosComponent,\n\t\tEmailComponent,\n\t\tSettingsComponent,\n\t\tOrganizationModalComponent,\n\t\tNewLocaleModalComponent,\n\t\tRoleManagementComponent,\n\t\tExternalSystemModalComponent,\n\t\tImportLocalizationModalComponent,\n    LocalizationFeedbackModalComponent\n\t],\n\texports: [\n\t\tSystemLogoComponent,\n\t\tSystemLogosComponent,\n    LocalizationFeedbackModalComponent\n\t],\n\tproviders: [\n\t\tSystemLogoService,\n\t\tEmailService,\n\t\tAccountService,\n\t\tSettingsService,\n\t\tLocalizationManagerService\n\t],\n\tentryComponents: [\n\t\tAccountInviteComponent,\n\t\tAccountComponent,\n\t\tOrganizationModalComponent,\n\t\tNewLocaleModalComponent,\n\t\tRoleManagementComponent,\n\t\tExternalSystemModalComponent,\n\t\tImportLocalizationModalComponent,\n    LocalizationFeedbackModalComponent\n\t]\n})\n\nexport class AdminModule { }\n"],"sourceRoot":""}