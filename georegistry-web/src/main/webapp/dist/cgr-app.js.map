{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.html","webpack:///./src/app/shared/service/auth.service.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.html","webpack:///./src/app/core/service/hub.service.ts","webpack:///./src/app/shared/pipe/localize.pipe.ts","webpack:///./src/app/shared/component/message/message.component.ts","webpack:///./src/app/shared/component/message/message.component.html","webpack:///./src/app/shared/component/index.ts","webpack:///./src/app/shared/service/date.service.ts","webpack:///./src/app/shared/service/localization.service.ts","webpack:///./src/app/shared/service/event.service.ts","webpack:///./src/app/core/service/forgotpassword.service.ts","webpack:///./src/app/shared/component/header/header.component.ts","webpack:///./src/app/shared/component/header/header.component.html","webpack:///./src/app/shared/service/guard.service.ts","webpack:///./src/app/shared/component/profile/profile.component.ts","webpack:///./src/app/shared/component/profile/profile.component.html","webpack:///./src/app/shared/service/index.ts","webpack:///./src/app/shared/model/core.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.html","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.ts","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.html","webpack:///./src/app/shared/service/external-system.service.ts","webpack:///./src/app/shared/service/modal-step-indicator.service.ts","webpack:///./src/app/shared/service/organization.service.ts","webpack:///./src/app/shared/service/pending-changes-guard.ts","webpack:///./src/app/shared/service/profile.service.ts","webpack:///./src/app/shared/service/progress.service.ts","webpack:///./src/app/shared/service/session.service.ts","webpack:///./src/app/shared/component/message/error-message.component.ts","webpack:///./src/app/shared/component/message/error-message.component.html","webpack:///./src/app/shared/component/modals/confirm-modal.component.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.html","webpack:///./src/app/shared/component/modals/error-modal.component.ts","webpack:///./src/app/shared/component/modals/error-modal.component.html","webpack:///./src/app/shared/component/modals/success-modal.component.ts","webpack:///./src/app/shared/component/modals/success-modal.component.html","webpack:///./src/app/shared/component/modals/generic-modal.component.ts","webpack:///./src/app/shared/component/modals/generic-modal.component.html","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/core/component/login/login.component.ts","webpack:///./src/app/core/component/login/login.component.html","webpack:///./src/app/core/component/hub/hub.component.ts","webpack:///./src/app/core/component/hub/hub.component.html","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.html","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.ts","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.html","webpack:///./src/app/registry/model/registry.ts","webpack:///./src/app/shared/component/date-text/date-text.component.ts","webpack:///./src/app/shared/component/date-text/date-text.component.html","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.ts","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.html","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/shared/component/error-handler/error-handler.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/core/component/login/login-header.component.ts","webpack:///./src/app/core/component/login/login-header.component.html","webpack:///./src/app/registry/model/constants.ts","webpack:///./src/app/shared/component/localize/convert-key-label.component.ts","webpack:///./src/app/shared/component/localize/convert-key-label.component.html","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.html","webpack:///./src/app/shared/model/modal.ts","webpack:///./src/app/shared/component/generic-table/generic-table.component.ts","webpack:///./src/app/shared/component/generic-table/generic-table.component.html","webpack:///./src/app/shared/directive/number-only.directive.ts","webpack:///./src/app/shared/directive/must-match.directive.ts","webpack:///./src/app/shared/model/profile.ts","webpack:///./src/app/shared/pipe/phone.pipe.ts","webpack:///./src/app/shared/model/generic-table.ts","webpack:///./src/main.ts","webpack:///./src/app/cgr-app.module.ts","webpack:///./src/app/cgr-app.component.ts","webpack:///./src/app/cgr-app.component.html","webpack:///./src/app/cgr-app-routing.module.ts","webpack:///./src/app/core/service/http-error.interceptor.ts","webpack:///./src/app/shared/component/localize/localize.component.ts","webpack:///./src/app/shared/component/localize/localize.component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","service","showIndicator","ngOnInit","this","registerListener","ngOnDestroy","deregisterListener","start","complete","LoadingBarComponent","Component","selector","templateUrl","styleUrls","user","loggedIn","userName","roles","roleDisplayLabels","version","installedLocales","cookie","check","cookieData","cookieDataJSON","JSON","parse","buildFromCookieJson","loadLocales","buildRolesFromCookie","replaceAll","role","RoleBuilder","buildFromRoleName","isLoggedIn","afterLogIn","logInResponse","setLocales","afterLogOut","sessionStorage","removeItem","storageLocales","getItem","locales","setItem","stringify","removeUser","isAdmin","isSRA","isRA","isMaintainer","isRM","isContributer","isRC","isContributerOnly","hasExactRole","roleType","RegistryRoleType","SRA","RA","roleName","indexOf","RM","isOrganizationRA","orgCode","isGeoObjectTypeRM","gotCode","geoObjectTypeCode","isGeoObjectTypeOrSuperRM","got","allowRoleSuper","organizationCode","code","superTypeCode","isGeoObjectTypeRC","RC","isGeoObjectTypeOrSuperRC","isRCOnly","getMyOrganizations","orgCodes","__getRoleFromRoleName","nameArr","split","getUsername","getRoles","getRoleDisplayLabelsArray","getRoleDisplayLabels","str","displayLabel","getVersion","getLocales","addLocale","locale","exists","tag","removeLocale","log","AuthService","Injectable","colors","measureStrength","pass","score","letters","variations","digits","test","lower","upper","nonWords","variationCount","Math","trunc","getColor","idx","col","ngOnChanges","changes","password","currentValue","setBarColors","PasswordStrengthBarComponent","count","_n","passwordToCheck","Input","http","applications","headers","HttpHeaders","post","registry","contextPath","toPromise","oauthGetPublic","id","params","HttpParams","set","HubService","transform","decode","LocalizePipe","Pipe","onError","onMessage","msg","MessageComponent","styles","components","ErrorHandler","CgrHeaderComponent","LocalizeComponent","ErrorMessageComponent","ConfirmModalComponent","GenericModalComponent","ErrorModalComponent","ModalStepIndicatorComponent","SuccessModalComponent","ProfileComponent","ProgressBarComponent","localizationService","overlapMessage","severity","ConflictType","TIME_RANGE","mergeContiguousMessage","gapMessage","outsideExistsMessage","OUTSIDE_EXISTS","missingReference","MISSING_REFERENCE","startDateLaterEndDate","parentDoesNotExist","invalidParent","getPresentDate","Date","formatDateForDisplay","date","PRESENT","localize","getDateString","getDateFromDateString","year","getFullYear","month","getMonth","dt","getDate","checkRanges","attributeType","ranges","hasConflict","forEach","range","conflictMessages","Set","delete","filtered","filter","isDelete","h1","startDate","endDate","s1","e1","dateEndBeforeStart","add","h2","s2","e2","dateRangeOverlaps","getTime","addDay","areValuesEqual","sort","current","next","hasGap","between","dTest","dStart","dEnd","after","in1","in2","amount","plus1","setDate","votArr","a","b","checkExistRanges","existEntries","filteredExists","inRange","dateRangeOutside","validateDate","required","allowFutureDates","valid","today","isNaN","DateService","getLocale","localizedValue","localeValues","toString","remove","bundle","localization","index","lastIndexOf","temp","LocalizationService","listeners","listener","indexOfItem","EventService","eventService","submit","username","pipe","finalize","newPassword","token","ForgotPasswordService","modalService","profileService","enableBusinessData","context","isContributor","defaultLocaleView","found","shouldShowMenuItem","item","logout","location","href","setLocale","then","reload","account","profile","bsModalRef","show","backdrop","class","content","router","canActivate","route","state","navigate","AdminGuard","MaintainerGuard","ContributerGuard","AuthGuard","authService","_profile","oid","firstName","lastName","email","changePassword","getRolesForUser","onSubmit","hide","onChangePassword","getRolesArray","cancel","unlock","services","ExternalSystemService","ModalStepIndicatorService","OrganizationService","PendingChangesGuard","ProfileService","ProgressService","SessionService","LocaleValue","lService","label","isDefaultLocale","language","country","variant","LocaleView","Organization","ExternalSystem","OAuthServer","PageResult","getValue","localeToString","len","lv","populate","lv1","lv2","lv2lv","lv1lv","LocalizedValue","RegistryRole","roleSplit","roleSuffix","AC","modalStepIndicatorService","stepSubscription","modalStepChange","subscribe","stepConfig","unsubscribe","prog","total","description","progress","getExternalSystems","pageNumber","pageSize","getExternalSystem","applyExternalSystem","system","getSystemCapabilities","removeExternalSystem","modalStepChangedSource","Subject","asObservable","getStepConfig","setStepConfig","config","getStep","step","setStep","getOrganizations","updateOrganization","json","newOrganization","removeOrganization","canDeactivate","component","confirmRet","confirm","afterDeactivate","userOID","login","response","localizeService","submitText","cancelText","ModalTypes","warning","onConfirm","onCancel","GenericButton","buttons","init","onClick","button","shouldClose","map","webpackAsyncContext","req","ids","keys","hService","oauthServers","viewOauthServers","catch","sub","decodedError","onClickDhis2","url","open","application","showErrorAsDialog","LoginComponent","tasks","buckets","loading","includes","HubComponent","emailIsSent","getMessageFromError","ForgotPasswordComponent","passwordStrengthBarComponent","passwordIsReset","ForgotPasswordCompleteComponent","registryService","refreshPromise","refresh","waitOnTypes","types","ready","getGeoObjectTypes","getTypeByCode","findIndex","getTypes","GeoObjectTypeCache","TreeEntity","children","addChild","term","Term","GeoObject","attributes","getAttribute","attr","getGeoObjectTypeTermAttributeOptions","geoObjectType","termAttributeCode","attrOpts","rootTerm","removeStatuses","GeoObjectType","Task","getVotAtDate","attrCode","retVot","time","isChangeOverTime","values","vot","Array","isArray","GeoObjectOverTime","ConflictMessage","ValueOverTime","AttributeOverTime","isDefault","unique","AttributeType","isChange","termOptions","setRootTerm","AttributeTermType","precision","scale","AttributeDecimalType","TreeNode","ChildTreeNode","ParentTreeNode","ManageGeoObjectTypeModalState","AbstractScheduledJob","ScheduledJob","ScheduledJobOverview","ImportError","ServerException","ServerExceptionAttribute","ImportErrorObject","StepConfig","Step","HierarchyOverTime","HierarchyOverTimeEntry","HierarchyOverTimeEntryParent","SynchronizationConfig","OrgSyncInfo","ExportScheduledJob","formattedDate","DateTextComponent","title","bsDatepickerConfig","changeDetectorRef","dateService","allowInfinity","inputName","idGenerator","classNames","customStyles","localizeLabelKey","disable","placement","oldDate","placeholder","valueChange","EventEmitter","change","returnFocusToInput","valueIsPresent","validChange","dateInputFormat","setValue","parseInt","_value","getUTCFullYear","getUTCMonth","getUTCDate","setInvalid","S4","random","substring","isEqual","date1","date2","toggleInfinity","emit","toggle","validity","DateFieldComponent","BsDatepickerDirective","datepicker","ViewChild","static","Output","arr","newArray","formatDateString","dateObj","day","aStart","aEnd","bStart","bEnd","end","val1","val2","localeValue","getValueAtLocale","parents","entries","parentData","parentData2","geoObject","properties","parseFloat","arrayMove","oldIndex","newIndex","k","unspecified","localizedMessage","HttpErrorResponse","status","forRoot","ngModule","SharedModule","providers","CookieService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","ModalModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","CollapseModule","NgxPaginationModule","BsDatepickerModule","TableModule","SliderModule","DropdownModule","MultiSelectModule","ButtonModule","AutoCompleteModule","ConvertKeyLabel","BooleanFieldComponent","OnlyNumber","MustMatchDirective","PhonePipe","GenericTableComponent","NgModule","imports","declarations","entryComponents","hubService","LoginHeaderComponent","ActionTypes","GovernanceStatus","GeoObjectTypeModalStates","ImportStrategy","ChangeType","OverlayerIdentifier","LAYER_PANEL","FEATURE_PANEL","SEARCH_PANEL","VISUALIZER_PANEL","text","page","resultSet","cols","pageConfig","click","onFilter","booleanOptions","onPageChange","finally","row","onComplete","getColumnType","columnType","handleFilter","el","onKeyDown","keyCode","ctrlKey","shiftKey","preventDefault","Directive","HostListener","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","setErrors","validate","provide","NG_VALIDATORS","useExisting","multi","Profile","args","formatNumber","phone","GenericTableConfig","GenericTableColumn","TableEvent","process","env","ENV","enableProdMode","platformBrowser","bootstrapModule","success","CgrAppModule","CgrAppComponent","HTTP_INTERCEPTORS","useClass","HttpErrorInterceptor","BrowserModule","HttpClientModule","CgrAppRoutingModule","TabsModule","BrowserAnimationsModule","routedComponents","bootstrap","routes","path","redirectTo","pathMatch","loadChildren","LocationStrategy","HashLocationStrategy","intercept","handle","tap","HttpResponseBase","replace"],"mappings":"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iBAEA,0CAEF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,8BACF,iBACA,gCAGF,iBACF,iBACF,iB,qDAtB+B,2DAEA,mEAenB,4E,yBA0BF,yBACE,YACF,kB,uCADE,qE,qBAEF,oB,qBAGA,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,qBAEF,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,yBAEF,yBACE,YACF,kB,uCADE,kF,yBA5BJ,yBACE,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAGF,kB,uBA7BO,+DAGA,+DAGA,+DAIA,8DAGA,8DAGA,8DAIA,kFAGA,kFAGA,mF,0GA7PrB,0BACE,yBAEA,+BAA+E,kIAC7E,+BACE,4BACE,yBACE,4BACF,iBACF,iBAEA,4BACE,4BACE,6BACE,6BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,8GAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,iHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,mHAAnB,iBACF,iBACF,iBACF,iBAGF,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,mCAAmB,0GAAnB,iBACF,iBACA,gCAGF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6G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","file":"cgr-app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"cgr-app\": 0,\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([627,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { EventService, IEventListener } from \"@shared/service\";\n\n@Component({\n\n    selector: \"loading-bar\",\n    templateUrl: \"./loading-bar.component.html\",\n    styleUrls: [\"./loading-bar.css\"]\n})\nexport class LoadingBarComponent implements OnInit, IEventListener {\n\n    showIndicator: boolean = false;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: EventService) { }\n\n    ngOnInit(): void {\n        this.service.registerListener(this);\n    }\n\n    ngOnDestroy(): void {\n        this.service.deregisterListener(this);\n    }\n\n    start(): void {\n        this.showIndicator = true;\n    }\n\n    complete(): void {\n        this.showIndicator = false;\n    }\n\n}\n","<div *ngIf=\"showIndicator\" class=\"standby-overlay\">\n\n</div>","import { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { User } from \"@shared/model/user\";\nimport { RoleBuilder, RegistryRole, RegistryRoleType, LocaleView } from \"@shared/model/core\";\n\n@Injectable()\nexport class AuthService {\n\n    private user: User = {\n        loggedIn: false,\n        userName: \"\",\n        roles: [],\n        roleDisplayLabels: [],\n        version: \"0\",\n        installedLocales: []\n    };\n\n    constructor(private service: CookieService) {\n        let cookie = service.get(\"user\");\n\n        if (this.service.check(\"user\") && cookie != null && cookie.length > 0) {\n            let cookieData: string = this.service.get(\"user\");\n            let cookieDataJSON: any = JSON.parse(cookieData);\n\n            this.buildFromCookieJson(cookieDataJSON);\n        }\n\n        this.loadLocales();\n    }\n\n    buildFromCookieJson(cookieDataJSON: any) {\n        this.user.userName = cookieDataJSON.userName;\n        this.buildRolesFromCookie(cookieDataJSON);\n        this.user.loggedIn = cookieDataJSON.loggedIn;\n        this.user.roleDisplayLabels = cookieDataJSON.roleDisplayLabels;\n        this.user.version = cookieDataJSON.version.replaceAll(\"+\", \" \");\n        // this.user.installedLocales = cookieDataJSON.installedLocales;\n    }\n\n    buildRolesFromCookie(cookieDataJSON: any) {\n        this.user.roles = [];\n        let roles: string[] = cookieDataJSON.roles;\n\n        for (let i = 0; i < roles.length; ++i) {\n            let role: RegistryRole = RoleBuilder.buildFromRoleName(roles[i]);\n\n            if (role != null) {\n                this.user.roles.push(role);\n            }\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.user.loggedIn;\n    }\n\n    afterLogIn(logInResponse: any): void {\n        this.buildFromCookieJson(JSON.parse(this.service.get(\"user\")));\n\n        this.setLocales(logInResponse.installedLocales);\n        this.user.installedLocales = logInResponse.installedLocales;\n    }\n\n    afterLogOut(): void {\n        this.user = null;\n        sessionStorage.removeItem(\"locales\");\n    }\n\n    loadLocales() {\n        let storageLocales = window.sessionStorage.getItem(\"locales\");\n\n        if (storageLocales != null) {\n            this.user.installedLocales = JSON.parse(storageLocales);\n        }\n    }\n\n    setLocales(locales: LocaleView[]) {\n        window.sessionStorage.setItem(\"locales\", JSON.stringify(locales));\n    }\n\n    removeUser(): void {\n        this.user = {\n            loggedIn: false,\n            userName: \"\",\n            roles: [],\n            roleDisplayLabels: [],\n            version: \"0\",\n            installedLocales: []\n        };\n    }\n\n    // Legacy Accessors:\n    isAdmin(): boolean {\n        return this.isSRA() || this.isRA();\n    }\n\n    isMaintainer(): boolean {\n        return this.isSRA() || this.isRM();\n    }\n\n    isContributer(): boolean {\n        return this.isSRA() || this.isRC(false);\n    }\n\n    isContributerOnly(): boolean {\n        return this.isRC(true);\n    }\n\n    // Used to exactly identify a role. I.e. if we say we need RC, SRA doesn't count.\n    hasExactRole(roleType: RegistryRoleType) {\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === roleType) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isSRA(): boolean {\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.SRA) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isRA(): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RA) {\n                return true;\n            } else if (role.roleName.indexOf(\"commongeoregistry.RegistryAdministrator\") !== -1 || role.roleName.indexOf(\"cgr.RegistryAdministrator\") !== -1) {\n                // Legacy support\n                return true;\n            }\n        }\n    }\n\n    isRM(): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RM) {\n                return true;\n            } else if (role.roleName.indexOf(\"commongeoregistry.RegistryMaintainer\") !== -1 || role.roleName.indexOf(\"cgr.RegistryMaintainer\") !== -1) {\n                // Legacy support\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isOrganizationRA(orgCode: string): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.orgCode === orgCode && role.type === RegistryRoleType.RA) {\n                return true;\n            }\n        }\n\n        return false; // this.isSRA();\n    }\n\n    isGeoObjectTypeRM(orgCode: string, gotCode: string): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RM && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n                return true;\n            }\n        }\n\n        return this.isOrganizationRA(orgCode);\n    }\n\n    isGeoObjectTypeOrSuperRM(got: { organizationCode: string, superTypeCode?: string, code: string }, allowRoleSuper: boolean = true): boolean {\n        if (this.isGeoObjectTypeRM(got.organizationCode, got.code)) {\n            return true;\n        } else if (got.superTypeCode != null) {\n            return this.isGeoObjectTypeRM(got.organizationCode, got.superTypeCode);\n        }\n    }\n\n    isGeoObjectTypeRC(orgCode: string, gotCode: string): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RC && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n                return true;\n            }\n        }\n\n        return this.isGeoObjectTypeRM(orgCode, gotCode);\n    }\n\n    isGeoObjectTypeOrSuperRC(got: { organizationCode: string, superTypeCode?: string, code: string }, allowRoleSuper: boolean = true): boolean {\n        if (this.isGeoObjectTypeRC(got.organizationCode, got.code)) {\n            return true;\n        } else if (got.superTypeCode != null) {\n            return this.isGeoObjectTypeRC(got.organizationCode, got.superTypeCode);\n        }\n    }\n\n    isRC(isRCOnly: boolean): boolean {\n        if (this.isSRA() && !isRCOnly) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RC) {\n                return true;\n            } else if (role.roleName.indexOf(\"commongeoregistry.RegistryContributor\") !== -1 || role.roleName.indexOf(\"cgr.RegistryContributor\") !== -1) {\n                // Legacy support\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // Returns all organization codes that the current user participates in.\n    // If the user is an SRA then this method will return an empty string array.\n    getMyOrganizations(): string[] {\n        let orgCodes: string[] = [];\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.SRA || role.type === RegistryRoleType.RC || role.type === RegistryRoleType.RM || role.type === RegistryRoleType.RA) {\n                orgCodes.push(role.orgCode);\n            }\n        }\n\n        return orgCodes;\n    }\n\n    __getRoleFromRoleName(roleName: string): string {\n        let nameArr = roleName.split(\".\");\n\n        return nameArr[nameArr.length - 1];\n    }\n\n    getUsername(): string {\n        return this.user.userName;\n    }\n\n    getRoles(): any {\n        return this.user.roles;\n    }\n\n    getRoleDisplayLabelsArray(): any {\n        return this.user.roleDisplayLabels;\n    }\n\n    getRoleDisplayLabels(): string {\n        let str = \"\";\n        for (let i = 0; i < this.user.roleDisplayLabels.length; ++i) {\n            let displayLabel = this.user.roleDisplayLabels[i];\n\n            if (displayLabel === \"Administrator\") {\n                continue;\n                // It's OK to hardcode to a display label here because the end user can't change it anyway.\n                // Is it ideal? No. But sometimes it's better to get software out quicker than to spend forever\n                // on something that nobody will ever see.\n            }\n\n            str = str + displayLabel;\n\n            if (i < this.user.roleDisplayLabels.length - 1) {\n                str = str + \",\";\n            }\n        }\n\n        return str;\n    }\n\n    getVersion(): string {\n        return this.user.version;\n    }\n\n    getLocales(): LocaleView[] {\n        return this.user.installedLocales;\n    }\n\n    addLocale(locale: LocaleView): void {\n        let exists: boolean = false;\n\n        for (let i = 0; i < this.user.installedLocales.length; ++i) {\n            if (this.user.installedLocales[i].tag === locale.tag) {\n                exists = true;\n                this.user.installedLocales[i] = locale;\n            }\n        }\n\n        if (!exists) {\n            this.user.installedLocales.push(locale);\n        }\n\n        this.setLocales(this.user.installedLocales);\n    }\n\n    removeLocale(locale: LocaleView): void {\n        for (let i = 0; i < this.user.installedLocales.length; ++i) {\n            if (this.user.installedLocales[i].tag === locale.tag) {\n                this.user.installedLocales.splice(i, 1);\n                this.setLocales(this.user.installedLocales);\n                return;\n            }\n        }\n\n        // eslint-disable-next-line no-console\n        console.log(\"Could not remove locale from array because we could not find it.\", locale, this.user.installedLocales);\n    }\n\n}\n","import { Component, OnChanges, Input, SimpleChange } from \"@angular/core\";\n\n@Component({\n    selector: \"password-strength-bar\",\n    templateUrl: \"./password-strength-bar.component.html\",\n    styleUrls: [\"./password-strength-bar.component.css\"]\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n\n    @Input() passwordToCheck: string;\n    bar0: string;\n    bar1: string;\n    bar2: string;\n    bar3: string;\n    bar4: string;\n\n    private colors = [\"#F00\", \"#F90\", \"#FF0\", \"#9F0\", \"#0F0\"];\n\n    private static measureStrength(pass: string) {\n        let score = 0;\n        // award every unique letter until 5 repetitions\n        let letters = {};\n        for (let i = 0; i < pass.length; i++) {\n            letters[pass[i]] = (letters[pass[i]] || 0) + 1;\n            score += 5.0 / letters[pass[i]];\n        }\n        // bonus points for mixing it up\n        let variations = {\n            digits: /\\d/.test(pass),\n            lower: /[a-z]/.test(pass),\n            upper: /[A-Z]/.test(pass),\n            nonWords: /\\W/.test(pass)\n        };\n\n        let variationCount = 0;\n        for (let check in variations) {\n            variationCount += (variations[check]) ? 1 : 0;\n        }\n        score += (variationCount - 1) * 10;\n        return Math.trunc(score);\n    }\n\n    private getColor(score: number) {\n        let idx = 0;\n        if (score > 90) {\n            idx = 4;\n        } else if (score > 70) {\n            idx = 3;\n        } else if (score >= 40) {\n            idx = 2;\n        } else if (score >= 20) {\n            idx = 1;\n        }\n        return {\n            idx: idx + 1,\n            col: this.colors[idx]\n        };\n    }\n\n    ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n        let password = changes[\"passwordToCheck\"].currentValue;\n        this.setBarColors(5, \"#DDD\");\n        if (password) {\n            let c = this.getColor(PasswordStrengthBarComponent.measureStrength(password));\n            this.setBarColors(c.idx, c.col);\n        }\n    }\n\n    private setBarColors(count, col) {\n        for (let _n = 0; _n < count; _n++) {\n            this[\"bar\" + _n] = col;\n        }\n    }\n\n}\n","<div style=\"margin: 11px;\" id=\"strength\" #strength>\n    <ul id=\"strengthBar\">\n        <li class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>\n    </ul>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Application } from '@shared/model/application';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class HubService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tapplications(): Promise<Application[]> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Application[]>(registry.contextPath + '/menu/applications', { headers: headers })\n\t\t\t.toPromise();\n\t}\n\t\n\toauthGetPublic(id: string): Promise<any[]> {\n    let params: HttpParams = new HttpParams();\n\n    if (id)\n    {\n      params = params.set('id', id)\n    }\n\n    return this.http\n      .get<any[]>(registry.contextPath + '/cgr/oauth/get-public', { params: params })\n      .toPromise();\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Pipe({ name: \"localize\" })\nexport class LocalizePipe implements PipeTransform {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: LocalizationService) { }\n\n    transform(value: string): string {\n        return this.service.decode(value);\n    }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { EventService, IEventListener } from \"@shared/service\";\n\n@Component({\n\n    selector: \"message\",\n    templateUrl: \"./message.component.html\",\n    styles: [\n        \".error-container { text-align: center; border-width: 1px; border-color: #8c0000; border-style: solid; color: #8c0000; font-size: 17px; background: white;}\",\n        \".message-container { text-align: center; border-width: 1px; border-color: #106828; border-style: solid; margin-left: 10%; margin-right: 10%; color: #106828; }\"\n    ]\n})\nexport class MessageComponent implements OnInit, IEventListener {\n\n    error: any = null;\n\n    message: string = \"\";\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: EventService) { }\n\n    ngOnInit(): void {\n        this.service.registerListener(this);\n    }\n\n    ngOnDestroy(): void {\n        this.service.deregisterListener(this);\n    }\n\n    start(): void {\n        this.error = null;\n    }\n\n    complete(): void {\n    }\n\n    onError(error: any): void {\n        this.error = error;\n    }\n\n    onMessage(msg: string): void {\n        this.message = msg;\n    }\n\n}\n","\n<div>\n  <div *ngIf=\"message\" class=\"message-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.messagesLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"message\">{{message}}</p>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"error\" class=\"error-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.errorsLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"error-message\" *ngIf=\"error.localizedMessage\">{{error.localizedMessage}}</p>\n        <p class=\"error-message\" *ngIf=\"!error.localizedMessage\"><localize key='error.generic'></localize></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ErrorHandler } from \"./error-handler/error-handler\";\nimport { CgrHeaderComponent } from \"./header/header.component\";\nimport { LoadingBarComponent } from \"./loading-bar/loading-bar.component\";\nimport { LocalizeComponent } from \"./localize/localize.component\";\nimport { ErrorMessageComponent } from \"./message/error-message.component\";\nimport { MessageComponent } from \"./message/message.component\";\nimport { ConfirmModalComponent } from \"./modals/confirm-modal.component\";\nimport { ErrorModalComponent } from \"./modals/error-modal.component\";\nimport { ModalStepIndicatorComponent } from \"./modals/modal-step-indicator.component\";\nimport { SuccessModalComponent } from \"./modals/success-modal.component\";\nimport { PasswordStrengthBarComponent } from \"./password-strength-bar/password-strength-bar.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { ProgressBarComponent } from \"./progress-bar/progress-bar.component\";\nimport { GenericModalComponent } from \"./modals/generic-modal.component\";\n\nexport const components: any[] = [\n    ErrorHandler,\n    CgrHeaderComponent,\n    LoadingBarComponent,\n    LocalizeComponent,\n    ErrorMessageComponent,\n    MessageComponent,\n    ConfirmModalComponent,\n    GenericModalComponent,\n    ErrorModalComponent,\n    ModalStepIndicatorComponent,\n    SuccessModalComponent,\n    PasswordStrengthBarComponent,\n    ProfileComponent,\n    ProgressBarComponent\n];\n\nexport * from \"./error-handler/error-handler\";\nexport * from \"./header/header.component\";\nexport * from \"./loading-bar/loading-bar.component\";\nexport * from \"./localize/localize.component\";\nexport * from \"./message/error-message.component\";\nexport * from \"./message/message.component\";\nexport * from \"./modals/confirm-modal.component\";\nexport * from \"./modals/generic-modal.component\";\nexport * from \"./modals/error-modal.component\";\nexport * from \"./modals/modal-step-indicator.component\";\nexport * from \"./modals/success-modal.component\";\nexport * from \"./password-strength-bar/password-strength-bar.component\";\nexport * from \"./profile/profile.component\";\nexport * from \"./progress-bar/progress-bar.component\";\n","import { Injectable } from \"@angular/core\";\nimport { LocalizationService } from \"./localization.service\";\nimport Utils from \"../../registry/utility/Utils\";\nimport { PRESENT, ConflictMessage, TimeRangeEntry, AttributeType } from \"@registry/model/registry\";\nimport { SummaryKey } from \"@registry/model/crtable\";\nimport { ConflictType } from \"@registry/model/constants\";\nimport { ValueOverTimeCREditor } from \"@registry/component/geoobject-shared-attribute-editor/ValueOverTimeCREditor\";\n\n@Injectable()\nexport class DateService {\n\n    public overlapMessage: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"manage.versions.overlap.message\"),\n        type: ConflictType.TIME_RANGE\n    }\n\n    public mergeContiguousMessage: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"manage.versions.mergeContiguousRanges.message\"),\n        type: ConflictType.TIME_RANGE\n    }\n\n    public gapMessage: ConflictMessage = {\n        severity: \"WARNING\",\n        message: this.localizationService.decode(\"manage.versions.gap.message\"),\n        type: ConflictType.TIME_RANGE\n    }\n\n    public outsideExistsMessage: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"manage.versions.outsideExists.message\"),\n        type: ConflictType.OUTSIDE_EXISTS\n    }\n\n    public missingReference: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"changeovertime.manageVersions.missingReference\"),\n        type: ConflictType.MISSING_REFERENCE\n    }\n\n    public startDateLaterEndDate: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"manage.versions.startdate.later.enddate.message\"),\n        type: ConflictType.TIME_RANGE\n    };\n\n    public parentDoesNotExist: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"changeovertime.manageVersions.parentDoesNotExist\"),\n        type: ConflictType.MISSING_REFERENCE\n    }\n\n    public invalidParent: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"changeovertime.manageVersions.invalidParent\"),\n        type: ConflictType.MISSING_REFERENCE\n    }\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private localizationService: LocalizationService) { }\n\n    // Get infinity date (called 'present' in the UI)\n    public getPresentDate(): Date {\n        // NOTE: Month is 0 indexed so 11 = December\n        let dt = new Date(5000, 11, 31, 0, 0, 0);\n\n        return dt;\n    }\n\n    public formatDateForDisplay(date: string | Date): string {\n        if (!date) {\n            return \"\";\n        }\n\n        if (date === PRESENT) {\n            return this.localizationService.localize(\"changeovertime\", \"present\");\n        }\n\n        if (date instanceof Date) {\n            return this.getDateString(date);\n        } else {\n            return date.split(\"T\")[0];\n        }\n    }\n\n    // @param value as yyyy-mm-dd\n    getDateFromDateString(value: string) {\n        return new Date(+value.split(\"-\")[0], +value.split(\"-\")[1] - 1, +value.split(\"-\")[2]);\n    }\n\n    getDateString(date: Date): string {\n        if (date instanceof Date) {\n            let year = date.getFullYear();\n            let month: number | string = date.getMonth() + 1;\n            let dt: number | string = date.getDate();\n\n            if (dt < 10) {\n                dt = \"0\" + dt;\n            }\n            if (month < 10) {\n                month = \"0\" + month;\n            }\n\n            return year + \"-\" + month + \"-\" + dt;\n        }\n\n        return null;\n    }\n\n    checkRanges(attributeType: AttributeType, ranges: ValueOverTimeCREditor[]): boolean {\n        let hasConflict = false;\n\n        // clear all messages\n        ranges.forEach(range => {\n            if (!range.conflictMessages) {\n                range.conflictMessages = new Set();\n            }\n\n            range.conflictMessages.delete(this.overlapMessage);\n            range.conflictMessages.delete(this.mergeContiguousMessage);\n            range.conflictMessages.delete(this.gapMessage);\n            range.conflictMessages.delete(this.startDateLaterEndDate);\n        });\n\n        // Filter DELETE entries from consideration\n        const filtered: ValueOverTimeCREditor[] = ranges.filter(range => !range.isDelete());\n\n        // Check for overlaps\n        for (let j = 0; j < filtered.length; j++) {\n            const h1: ValueOverTimeCREditor = filtered[j];\n\n            if (h1.startDate && h1.endDate) {\n                let s1: any = this.getDateFromDateString(h1.startDate);\n                let e1: any = this.getDateFromDateString(h1.endDate);\n\n                if (Utils.dateEndBeforeStart(s1, e1)) {\n                    h1.conflictMessages.add(this.startDateLaterEndDate);\n\n                    hasConflict = true;\n                }\n\n                for (let i = 0; i < filtered.length; i++) {\n                    if (j !== i) {\n                        const h2: ValueOverTimeCREditor = filtered[i];\n\n                        // If all dates set\n                        if (h2.startDate && h2.endDate) {\n                            let s2: Date = this.getDateFromDateString(h2.startDate);\n                            let e2: Date = this.getDateFromDateString(h2.endDate);\n\n                            // Determine if there is an overlap\n                            if (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n                                h1.conflictMessages.add(this.overlapMessage);\n\n                                if (s2.getTime() === e2.getTime()) {\n                                    h2.conflictMessages.add(this.overlapMessage);\n                                }\n\n                                hasConflict = true;\n                            } else if (this.addDay(1, h1.endDate) === h2.startDate && Utils.areValuesEqual(attributeType, h1.value, h2.value)) {\n                                h1.conflictMessages.add(this.mergeContiguousMessage);\n                                h2.conflictMessages.add(this.mergeContiguousMessage);\n                                hasConflict = true;\n                            }\n                        } else if ((i === j - 1 || i === j + 1) && e1 && h2.startDate) {\n                            // If 1st end date and current start date\n\n                            let s2: Date = this.getDateFromDateString(h2.startDate);\n\n                            if (s2.getTime() <= e1) {\n                                h1.conflictMessages.add(this.overlapMessage);\n                                h2.conflictMessages.add(this.overlapMessage);\n\n                                hasConflict = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.sort(filtered);\n\n        // Check for gaps\n        let current = null;\n        for (let j = 0; j < filtered.length; j++) {\n            let next = filtered[j];\n\n            if (j > 0) {\n                if (current.endDate && next.startDate) {\n                    let e1: any = new Date(current.endDate);\n                    let s2: any = new Date(next.startDate);\n\n                    if (Utils.hasGap(e1.getTime(), s2.getTime())) {\n                        next.conflictMessages.add(this.gapMessage);\n\n                        current.conflictMessages.add(this.gapMessage);\n                    }\n                }\n            }\n\n            current = next;\n        }\n\n        this.sort(ranges);\n\n        return hasConflict;\n    }\n\n    public between(test: string | Date, startDate: string, endDate: string) {\n        if (startDate == null) {\n            return false;\n        }\n\n        let dTest: Date = test == null ? this.getPresentDate() : (test instanceof Date ? test : this.getDateFromDateString(test));\n        let dStart: Date = this.getDateFromDateString(startDate);\n        let dEnd: Date = endDate == null ? this.getPresentDate() : this.getDateFromDateString(endDate);\n\n        return dTest >= dStart && dTest <= dEnd;\n    }\n\n    public after(in1: string | Date, in2: string | Date) {\n        if (in1 == null || in2 == null) {\n            return false;\n        }\n\n        let date1: Date = in1 instanceof Date ? in1 : this.getDateFromDateString(in1);\n        let date2: Date = in2 instanceof Date ? in2 : this.getDateFromDateString(in2);\n\n        return date1 > date2;\n    }\n\n    public addDay(amount: number, date: string): string {\n        var plus1: Date = this.getDateFromDateString(date);\n        plus1.setDate(plus1.getDate() + amount);\n        let splus1: string = this.getDateString(plus1);\n        return splus1;\n    }\n\n    public sort(votArr: TimeRangeEntry[]): void {\n      // Sort the data by start date\n        votArr.sort(function(a, b) {\n            if (a.startDate == null || a.startDate === \"\") {\n                return 1;\n            } else if (b.startDate == null || b.startDate === \"\") {\n                return -1;\n            }\n\n            let first: any = new Date(a.startDate);\n            let next: any = new Date(b.startDate);\n            return first - next;\n        });\n    }\n\n    checkExistRanges(ranges: ValueOverTimeCREditor[], existEntries: ValueOverTimeCREditor[]): boolean {\n        let hasConflict = false;\n\n        // clear all messages\n        ranges.forEach(range => {\n            if (!range.conflictMessages) {\n                range.conflictMessages = new Set();\n            }\n\n            range.conflictMessages.delete(this.outsideExistsMessage);\n        });\n\n        // Filter DELETE entries from consideration\n        const filtered: ValueOverTimeCREditor[] = ranges.filter(range => !range.isDelete());\n\n        const filteredExists = existEntries.filter(range => !range.isDelete());\n\n        // Check for outside exists range\n        for (let j = 0; j < filtered.length; j++) {\n            const h1 = filtered[j];\n\n            if (h1.startDate && h1.endDate) {\n                let s1: any = this.getDateFromDateString(h1.startDate);\n                let e1: any = this.getDateFromDateString(h1.endDate);\n\n                let inRange = false;\n\n                for (let i = 0; i < filteredExists.length; i++) {\n                    const h2 = filteredExists[i];\n\n                    // If all dates set\n                    if (h2.value && h2.startDate && h2.endDate) {\n                        let s2: Date = this.getDateFromDateString(h2.startDate);\n                        let e2: Date = this.getDateFromDateString(h2.endDate);\n\n                        if (!Utils.dateRangeOutside(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n                            inRange = true;\n                        }\n                    }\n                }\n\n                if (!inRange) {\n                    h1.conflictMessages.add(this.outsideExistsMessage);\n                    hasConflict = true;\n                }\n            }\n        }\n\n        return hasConflict;\n    }\n\n    validateDate(date: Date, required: boolean, allowFutureDates: boolean): {message: string, valid: boolean} {\n        let valid = { message: \"\", valid: true };\n        let today: Date = new Date();\n\n        if (date != null) {\n            if (!(date instanceof Date) || (date instanceof Date && isNaN(date.getTime()))) {\n                valid.valid = false;\n                valid.message = this.localizationService.decode(\"date.inpu.data.invalid.error.message\");\n            } else if (!allowFutureDates && date > today) {\n                valid.valid = false;\n                valid.message = this.localizationService.decode(\"date.inpu.data.in.future.error.message\");\n            }\n        } else if (required) {\n            valid.valid = false;\n            valid.message = this.localizationService.decode(\"manage.versions.date.required.message\");\n        }\n\n        return valid;\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { GeoRegistryConfiguration } from \"@core/model/registry\";\nimport { LocalizedValue, LocaleView } from \"@shared/model/core\";\n\ndeclare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class LocalizationService {\n\n    locales: LocaleView[] = [];\n    locale: string;\n\n    constructor() {\n        this.locales = registry.locales;\n        this.locale = registry.locale;\n    }\n\n    addLocale(locale: LocaleView): void {\n        let exists: boolean = false;\n\n        for (let i = 0; i < this.locales.length; ++i) {\n            if (this.locales[i].tag === locale.tag) {\n                exists = true;\n                this.locales[i] = locale;\n            }\n        }\n\n        if (!exists) {\n            this.locales.push(locale);\n        }\n    }\n\n    setLocales(locales: LocaleView[]): void {\n        this.locales = locales;\n    }\n\n    getLocale(): string {\n        return this.locale;\n    }\n\n    getLocales(): LocaleView[] {\n        return this.locales;\n    }\n\n    create(): LocalizedValue {\n        const value = { localizedValue: \"\", localeValues: [] } as LocalizedValue;\n\n        this.locales.forEach(locale => {\n            // if (!locale.isDefaultLocale)\n            // {\n            value.localeValues.push({ locale: locale.toString, value: \"\" });\n            // }\n        });\n\n        return value;\n    }\n\n    remove(locale: LocaleView): void {\n        for (let i = 0; i < this.locales.length; ++i) {\n            if (this.locales[i].tag === locale.tag) {\n                this.locales.splice(i, 1);\n                return;\n            }\n        }\n\n        // eslint-disable-next-line no-console\n        console.log(\"Could not remove locale from array because we could not find it.\", locale, this.locales);\n    }\n\n    public localize(bundle: string, key: string): string {\n        if (registry.localization[bundle] != null) {\n            const b = registry.localization[bundle];\n\n            if (b[key] != null) {\n                return b[key];\n            }\n        }\n\n        return \"??\" + key + \"??\";\n    }\n\n    public get(key: string): string {\n        if (registry.localization[key] != null) {\n            return registry.localization[key];\n        }\n\n        return \"??\" + key + \"??\";\n    }\n\n    public decode(key: string): string {\n        let index = key.lastIndexOf(\".\");\n\n        if (index !== -1) {\n            let temp = [key.slice(0, index), key.slice(index + 1)];\n\n            return this.localize(temp[0], temp[1]);\n        } else {\n            return this.get(key);\n        }\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\n\nexport interface IEventListener {\n    start(): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class EventService {\n\n    private listeners: IEventListener[] = [];\n\n    public registerListener(listener: IEventListener): void {\n        this.listeners.push(listener);\n    }\n\n    public deregisterListener(listener: IEventListener): boolean {\n        let indexOfItem = this.listeners.indexOf(listener);\n\n        if (indexOfItem === -1) {\n            return false;\n        }\n\n        this.listeners.splice(indexOfItem, 1);\n\n        return true;\n    }\n\n    public start(): void {\n\n        setTimeout(() => {\n            for (const listener of this.listeners) {\n                listener.start();\n            }\n        }, 1);\n    }\n\n    public complete(): void {\n        setTimeout(() => {\n            for (const listener of this.listeners) {\n                listener.complete();\n            }\n        }, 1);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class ForgotPasswordService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tsubmit(username: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(registry.contextPath + '/forgotpassword/initiate', JSON.stringify({ username: username }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcomplete(newPassword: string, token: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(registry.contextPath + '/forgotpassword/complete', JSON.stringify({ newPassword: newPassword, token: token }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","import { Component, Input } from \"@angular/core\";\nimport { BsModalService, BsModalRef } from \"ngx-bootstrap/modal\";\n\nimport { ProfileComponent } from \"../profile/profile.component\";\n\nimport { AuthService, ProfileService, LocalizationService } from \"@shared/service\";\n\nimport { RegistryRoleType, LocaleView } from \"@shared/model/core\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\";\ndeclare let registry: GeoRegistryConfiguration;\n\n@Component({\n\n    selector: \"cgr-header\",\n    templateUrl: \"./header.component.html\",\n    styleUrls: []\n})\nexport class CgrHeaderComponent {\n\n    context: string;\n    isAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    bsModalRef: BsModalRef;\n\n    defaultLocaleView: LocaleView;\n    locales: LocaleView[];\n    locale: string;\n\n    enableBusinessData: boolean = false;\n\n    @Input() loggedIn: boolean = true;\n\n    constructor(\n        private modalService: BsModalService,\n        private profileService: ProfileService,\n        private service: AuthService,\n        localizationService: LocalizationService\n    ) {\n        this.context = registry.contextPath;\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n        this.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n        this.enableBusinessData = registry.enableBusinessData || false;\n\n        if (localizationService.getLocales()) {\n            this.locales = localizationService.getLocales().filter(locale => locale.toString !== \"defaultLocale\");\n            this.defaultLocaleView = localizationService.getLocales().filter(locale => locale.toString === \"defaultLocale\")[0];\n        } else {\n            this.locales = [];\n            this.defaultLocaleView = null;\n        }\n        this.locale = localizationService.getLocale();\n\n        let found: boolean = false;\n\n        for (let i = 0; i < this.locales.length; ++i) {\n            if (this.locales[i].toString === this.locale) {\n                found = true;\n            }\n        }\n\n        if (!found) {\n            this.locale = \"\";\n        }\n    }\n\n    shouldShowMenuItem(item: string): boolean {\n        if (item === \"HIERARCHIES\") {\n            return true;\n        } else if (item === \"LISTS\") {\n            // return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC) || this.service.hasExactRole(RegistryRoleType.AC);\n            return true;\n        } else if (item === \"BUSINESS-TYPES\") {\n            if (registry.enableBusinessData) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (this.service.hasExactRole(RegistryRoleType.SRA)) {\n            return true;\n        } else if (item === \"IMPORT\") {\n            return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n        } else if (item === \"SCHEDULED-JOBS\") {\n            return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n        } else if (item === \"NAVIGATOR\") {\n            return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n        } else if (item === \"CHANGE-REQUESTS\") {\n            return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n        } else if (item === \"TASKS\") {\n            return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n        } else if (item === \"EVENTS\") {\n            // return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n            return true;\n        } else if (item === \"CONFIGS\" || item === \"CLASSIFICATION\") {\n            return this.service.hasExactRole(RegistryRoleType.RA);\n        } else if (item === \"SETTINGS\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    logout(): void {\n        sessionStorage.removeItem(\"locales\");\n\n        window.location.href = registry.contextPath + \"/session/logout\";\n\n        //        this.sessionService.logout().then( response => {\n        //            this.router.navigate( ['/login'] );\n        //        } );\n    }\n\n    getUsername() {\n        let name: string = this.service.getUsername();\n\n        return name;\n    }\n\n    setLocale() {\n        this.profileService.setLocale(this.locale).then(() => {\n            // Refresh the page\n            window.location.reload();\n        });\n    }\n\n    account(): void {\n        this.profileService.get().then(profile => {\n            this.bsModalRef = this.modalService.show(ProfileComponent, { backdrop: \"static\", class: \"gray modal-lg\" });\n            this.bsModalRef.content.profile = profile;\n        });\n    }\n\n}\n","<!-- HEADER AND NAVBAR -->\n<header>\n  <nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><localize key=\"cgr.standard.title\"></localize></a>\n      </div>\n       <ul *ngIf=\"loggedIn\" class=\"nav navbar-nav navbar-right\"> \n         <li class=\"hidden-xs\">\n            \n           <a (click)=\"account()\" class=\"navbar-username\">\n           <!-- <div>Logged in as</div> -->\n             <div>{{getUsername()}}</div>\n           </a>                      \n         </li>\n         <li dropdown> \n             <!-- <localize key=\"hierarchy-management.menu\"></localize> -->\n           <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n             <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n           </a>     \n\n           \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <!-- GeoRegistry specific links -->\n                <li *ngIf=\"shouldShowMenuItem('HIERARCHIES')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/hierarchies\" routerLinkActive=\"active\"><localize key=\"hierarchies.menu\"></localize></a></li> \n                <li *ngIf=\"shouldShowMenuItem('LISTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/master-lists\" routerLinkActive=\"active\"><localize key=\"masterlist.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('IMPORT')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/data\" routerLinkActive=\"active\"><localize key=\"header.data.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('SCHEDULED-JOBS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/scheduled-jobs\" routerLinkActive=\"active\"><localize key=\"scheduledjobs.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('NAVIGATOR')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/location-manager\" [queryParams]=\"{pageContext:'EXPLORER'}\"><localize key=navigator.menu></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('CHANGE-REQUESTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/change-requests\" routerLinkActive=\"active\"><localize key=\"header.changerequest.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('EVENTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/historical-events\" routerLinkActive=\"active\"><localize key=\"historical.events\"></localize></a></li>\n                <li *ngIf=\"shouldShowMenuItem('TASKS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/tasks\" routerLinkActive=\"active\"><localize key=\"header.tasks\"></localize></a></li>\n                <li *ngIf=\"shouldShowMenuItem('CLASSIFICATION')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/classification-type\" routerLinkActive=\"active\"><localize key=\"header.classifications.option\"></localize></a></li>\n                <!-- <li *ngIf=\"shouldShowMenuItem('CONFIGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/synchronization-configs\" routerLinkActive=\"active\"><localize key=\"synchronization.config.manager\"></localize></a></li> -->\n                <ng-container *ngIf=\"shouldShowMenuItem('BUSINESS-TYPES') === true\">\n                  <hr>\n                  <li  role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/business-types\" routerLinkActive=\"active\"><localize key=\"business.data.type\"></localize></a></li>\n                  <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/business-importer\" routerLinkActive=\"active\"><localize key=\"business.data.import\"></localize></a></li>\n                </ng-container>\n                \n                <hr>\n                <li *ngIf=\"shouldShowMenuItem('SETTINGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/settings\" routerLinkActive=\"active\"><localize key=\"settings.menu\"></localize> </a></li>\n                \n                <div *ngIf=\"locales.length > 0\" style=\"padding: 0 20px;\">\n                  <hr>\n<!--                     <span><localize key=\"userDashboards.setLocale\"></localize></span> -->\n\n                    <label class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"default\" [value]=\"''\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span>{{defaultLocaleView.label.localizedValue}}</span>\n                    </label>\n                    <label *ngFor=\"let l of locales\" class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"{{l.toString}}\" [value]=\"l.toString\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span>{{l.label.localizedValue}}</span>\n                    </label>\n                </div>\n                \n                <!-- <hr *ngIf=\"isAdmin\">\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/localization-manager\" routerLinkActive=\"active\"><localize key=\"localization-manager.menu\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\">\n                    <a class=\"user-command-link\" routerLink=\"/admin/accounts\"><localize key=\"accounts.link\"></localize></a>\n                </li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li> -->\n  \n                <hr>\n                <li role=\"menuitem\"><a class=\"user-command-link\" (click)=\"logout()\"><localize key=\"userDashboards.logout\"></localize></a></li>\n            \n              </ul>\n         </li> \n         \n        \n       </ul>\n       \n       \n    </div>\n  </nav>\n</header>\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isAdmin()) {\n            return true;\n        }\n\n        this.router.navigate([\"/\"]);\n\n        return false;\n    }\n\n}\n\n@Injectable()\nexport class MaintainerGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isAdmin() || this.service.isMaintainer()) {\n            return true;\n        }\n\n        this.router.navigate([\"/\"]);\n\n        return false;\n    }\n\n}\n\n@Injectable()\nexport class ContributerGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isAdmin() || this.service.isMaintainer() || this.service.isContributer()) {\n            return true;\n        }\n\n        this.router.navigate([\"/\"]);\n\n        return false;\n    }\n\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isLoggedIn()) {\n            return true;\n        }\n\n        this.router.navigate([\"/login\"]);\n\n        return false;\n    }\n\n}\n\n","import { Component, Input } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Profile } from \"@shared/model/profile\";\nimport { AuthService, ProfileService } from \"@shared/service\";\nimport { Role } from \"../../../admin/model/account\";\n\n@Component({\n    selector: \"profile\",\n    templateUrl: \"./profile.component.html\",\n    styles: [\".modal-form .check-block .chk-area { margin: 10px 0px 0 0;}\"]\n})\nexport class ProfileComponent {\n\n    public _profile: Profile = {\n        oid: \"\",\n        username: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        changePassword: false\n    };\n\n    // eslint-disable-next-line accessor-pairs\n    @Input(\"profile\")\n    set profile(value: Profile) {\n        this._profile = value;\n        this.getRoles();\n    }\n\n    roles: Role[] = [];\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: ProfileService, public bsModalRef: BsModalRef, private authService: AuthService) { }\n\n    getRoles(): void {\n        this.service.getRolesForUser(this._profile.oid).then(roles => {\n            this.roles = roles;\n        });\n    }\n\n    onSubmit(): void {\n        if (!this._profile.changePassword) {\n            delete this._profile.password;\n        }\n\n        this.service.apply(this._profile).then(profile => {\n            this.bsModalRef.hide();\n        });\n    }\n\n    onChangePassword(): void {\n        this._profile.changePassword = !this._profile.changePassword;\n    }\n\n    // getRoles():string {\n    //   return this.authService.getRoleDisplayLabels();\n    // }\n\n    getRolesArray(): any {\n        return this.authService.getRoles();\n    }\n\n    cancel(): void {\n        this.service.unlock(this._profile.oid).then(profile => {\n            this.bsModalRef.hide();\n        });\n    }\n\n}\n","<div *ngIf=\"_profile\">\n  <message></message>\n\n  <form #form=\"ngForm\" class=\"modal-form\" style=\"background: none;border: none;\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n    <fieldset>\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"profile.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.firstname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.firstName\" name=\"firstname\" required>\n          </span>\n        </div>\n      </div>\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.lastname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.lastName\" name=\"lastname\" required>\n          </span>\n        </div>\n      </div>\n      \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>            \n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.phonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.phoneNumber\" name=\"phoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.email\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.email\" name=\"email\" required #aemail=\"ngModel\" email>\n          </span>\n          <div *ngIf=\"aemail.errors?.email\" style=\"float:none;\" class=\"inline-error-message\">\n            <localize key=\"account.email.validation\"></localize>\n          </div>\n        </div>\n      </div>\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n            \n\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"account.info.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.username\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.username\" name=\"username\" required>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"_profile.externalSystemOid != null && _profile.externalSystemOid !== ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.oauth\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <label>\n            <localize key=\"account.profile.isOauth\"></localize>\n          </label>\n        </div>\n      </div>\n      \n      <div *ngIf=\"_profile.externalSystemOid == null || _profile.externalSystemOid === ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n        </div>\n        <div class=\"holder\">\n          <!-- <boolean-field [(value)]=\"profile.changePassword\"></boolean-field> -->\n          <div style=\"text-align: left;\">\n            <input type=\"button\" *ngIf=\"!_profile.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n              (click)=\"onChangePassword()\" />\n            <input type=\"button\" *ngIf=\"_profile.changePassword\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\"\n              (click)=\"onChangePassword()\" />\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"_profile.changePassword\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" [(ngModel)]=\"_profile.password\" name=\"password\" #password=\"ngModel\" required\n                minlength=\"5\" maxlength=\"50\">\n              <password-strength-bar [passwordToCheck]=\"_profile.password\">\n              </password-strength-bar>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.certainPassword\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" />\n            </span>\n            <div *ngIf=\"certainPassword.errors?.mustMatch\" style=\"float:none;\" class=\"inline-error-message\">\n              <localize key=\"account.certainPassword.validation\"></localize>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"com.runwaysdk.ui.userstable.UsersTable.adminRoles\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n\n          <table class=\"table\">\n            <thead>\n              <tr>\n                  <th><localize key=\"profile.roles.role.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.organization.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.geoobjecttype.table.heading\"></localize></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let role of roles\">\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.geoObjectTypeLabel.localizedValue}}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- <ul>\n            <li *ngFor=\"let role of getRolesArray()\">{{role}}</li>\n          </ul> -->\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\"\n              [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n\n</div>\n","import { AuthService } from \"./auth.service\";\nimport { EventService } from \"./event.service\";\nimport { ExternalSystemService } from \"./external-system.service\";\nimport { AdminGuard, AuthGuard, ContributerGuard, MaintainerGuard } from \"./guard.service\";\nimport { LocalizationService } from \"./localization.service\";\nimport { ModalStepIndicatorService } from \"./modal-step-indicator.service\";\nimport { OrganizationService } from \"./organization.service\";\nimport { PendingChangesGuard } from \"./pending-changes-guard\";\nimport { ProfileService } from \"./profile.service\";\nimport { ProgressService } from \"./progress.service\";\nimport { SessionService } from \"./session.service\";\nimport { DateService } from \"./date.service\";\n\nexport const services: any[] = [\n    AuthService,\n    EventService,\n    ExternalSystemService,\n    AdminGuard,\n    AuthGuard,\n    ContributerGuard,\n    MaintainerGuard,\n    LocalizationService,\n    ModalStepIndicatorService,\n    OrganizationService,\n    PendingChangesGuard,\n    ProfileService,\n    ProgressService,\n    SessionService,\n    DateService\n];\n\nexport * from \"./auth.service\";\nexport * from \"./event.service\";\nexport * from \"./external-system.service\";\nexport * from \"./guard.service\";\nexport * from \"./localization.service\";\nexport * from \"./modal-step-indicator.service\";\nexport * from \"./organization.service\";\nexport * from \"./pending-changes-guard\";\nexport * from \"./profile.service\";\nexport * from \"./progress.service\";\nexport * from \"./session.service\";\nexport * from \"./date.service\";\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-unused-vars */\nimport { LocalizationService } from \"@shared/service/localization.service\";\n\nexport interface MessageContainer {\n    setMessage(message: string);\n}\n\nexport class LocaleValue {\n\n    locale: string;\n    value: string;\n\n    constructor(locale: string, value: string) {\n        this.locale = locale;\n        this.value = value;\n    }\n\n}\n\nexport class LocaleView {\n\n    constructor(lService: LocalizationService) {\n        this.label = lService.create();\n        this.toString = \"\";\n        this.tag = \"\";\n        this.isDefaultLocale = false;\n        this.language = { label: \"\", code: \"\" };\n        this.country = { label: \"\", code: \"\" };\n        this.variant = { label: \"\", code: \"\" };\n    }\n\n    label: LocalizedValue;\n    toString: string;\n    tag: string;\n    isDefaultLocale: boolean;\n    language: { label: string, code: string };\n    country: { label: string, code: string };\n    variant: { label: string, code: string };\n\n}\n\nexport class Organization {\n\n    code: string;\n    label: any;\n    contactInfo: any;\n\n}\n\nexport class ExternalSystem {\n\toid?: string;\n\tid: string;\n\ttype: string;\n\torganization: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tusername?: string;\n\tpassword?: string;\n\turl?: string;\n\tsystem?: string;\n\tversion?: string;\n\toAuthServer?: OAuthServer;\n}\n\nexport class OAuthServer {\n\n    keyName?: string;\n    label?: LocalizedValue;\n    url?: string;\n    authorizationLocation: string;\n    tokenLocation: string;\n    profileLocation: string;\n    clientId: string;\n    secretKey: string;\n    serverType: string;\n\n}\n\nexport class PageResult<T> {\n\n    count: number;\n    pageNumber: number;\n    pageSize: number;\n    resultSet: T[];\n    externalSystems?: ExternalSystem[];\n\n}\n\nexport class LocalizedValue {\n\n    localizedValue: string;\n    localeValues: LocaleValue[];\n\n    constructor(localizedValue: string, localeValues: LocaleValue[]) {\n        this.localizedValue = localizedValue;\n        this.localeValues = localeValues;\n    }\n\n    public getValue(localeToString: string): string {\n        let len = this.localeValues.length;\n\n        for (let i = 0; i < len; ++i) {\n            let lv = this.localeValues[i];\n\n            if (lv.locale === localeToString) {\n                return lv.value;\n            }\n        }\n\n        return this.localizedValue;\n    }\n\n    /*\n     * Populates lv1 with all values contained in lv2\n     */\n    public static populate(lv1: LocalizedValue, lv2: LocalizedValue) {\n        if (lv1 == null || lv2 == null) {\n            return;\n        }\n\n        lv1.localizedValue = lv2.localizedValue;\n\n        if (lv2.localeValues != null) {\n            lv2.localeValues.forEach(lv2lv => {\n                if (lv1.localeValues) {\n                    let found = false;\n\n                    lv1.localeValues.forEach(lv1lv => {\n                        if (!found && lv1lv.locale === lv2lv.locale) {\n                            lv1lv.value = lv2lv.value;\n                            found = true;\n                        }\n                    });\n\n                    if (!found) {\n                        lv1.localeValues.push(JSON.parse(JSON.stringify(lv2lv)));\n                    }\n                } else {\n                    lv1.localeValues = lv2.localeValues;\n                }\n            });\n        }\n    }\n\n}\n\nexport class RoleBuilder {\n\n    static buildFromRoleName(roleName: string): RegistryRole {\n        if (roleName === \"cgr.SRA\") {\n            return new RegistryRole(RegistryRoleType.SRA, \"\", \"\", \"cgr.SRA\");\n        }\n\n        let roleSplit = roleName.split(\".\");\n\n        let orgCode: string = roleSplit[2];\n\n        if (roleSplit.length === 4) {\n            return new RegistryRole(RegistryRoleType.RA, orgCode, \"\", roleName);\n        } else if (roleSplit.length === 5) {\n            let roleSuffix: string = roleSplit[4];\n\n            let gotCode: string = roleSplit[3];\n\n            if (roleSuffix === \"RM\") {\n                return new RegistryRole(RegistryRoleType.RM, orgCode, gotCode, roleName);\n            } else if (roleSuffix === \"RC\") {\n                return new RegistryRole(RegistryRoleType.RC, orgCode, gotCode, roleName);\n            } else if (roleSuffix === \"AC\") {\n                return new RegistryRole(RegistryRoleType.AC, orgCode, gotCode, roleName);\n            }\n        } else {\n            return null;\n        }\n    }\n\n}\n\nexport class RegistryRole {\n\n    type: RegistryRoleType;\n    orgCode: string;\n    geoObjectTypeCode: string;\n    roleName: string;\n    displayLabel: string;\n\n    constructor(type: RegistryRoleType, orgCode: string, geoObjectTypeCode: string, roleName: string) {\n        this.type = type;\n        this.orgCode = orgCode;\n        this.geoObjectTypeCode = geoObjectTypeCode;\n        this.roleName = roleName;\n    }\n\n}\n\nexport enum RegistryRoleType {\n    SRA,\n    RA,\n    RM,\n    RC,\n    AC\n}\n","import { Component } from \"@angular/core\";\nimport { ModalStepIndicatorService } from \"@shared/service\";\n\nimport { Step, StepConfig } from \"@shared/model/modal\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"modal-step-indicator\",\n    templateUrl: \"./modal-step-indicator.component.html\",\n    styleUrls: [\"./modal-step-indicator.css\"]\n})\nexport class ModalStepIndicatorComponent {\n\n    stepConfig: StepConfig;\n    step: Step;\n    stepSubscription: Subscription;\n\n    constructor(private modalStepIndicatorService: ModalStepIndicatorService) {\n        this.stepSubscription = modalStepIndicatorService.modalStepChange.subscribe(stepConfig => {\n            this.stepConfig = stepConfig;\n        });\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n        this.stepSubscription.unsubscribe();\n    }\n\n}\n","<div class=\"step-indicator\" >\n    <ul *ngIf=\"stepConfig && stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\" [ngClass]=\"{'active':step.active, 'enabled':step.enabled}\" *ngFor=\"let step of stepConfig.steps\">{{step.label}}</li>\n    </ul>\n</div>","import { Component, OnInit } from \"@angular/core\";\n\nimport { Progress } from \"@shared/model/progress\";\nimport { ProgressService, IProgressListener } from \"@shared/service\";\n\n@Component({\n\n    selector: \"progress-bar\",\n    templateUrl: \"./progress-bar.component.html\",\n    styles: [\n        \".progress-overlay { background-color: #CCCCCC; position: absolute; display: block;opacity: 0.8;z-index: 99999 !important;}\",\n        \".progress-div { width: 100%; margin-left: 0; padding-left: 25%; padding-right: 25%; margin-top: 30% }\"\n    ]\n})\nexport class ProgressBarComponent implements OnInit, IProgressListener {\n\n    public showIndicator: boolean = true;\n\n    public prog: Progress = {\n        current: 0,\n        total: 1,\n        description: \"Initializing\"\n    };\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: ProgressService) { }\n\n    ngOnInit(): void {\n        this.service.registerListener(this);\n    }\n\n    ngOnDestroy(): void {\n        this.service.deregisterListener(this);\n    }\n\n    start(): void {\n        this.prog = {\n            current: 0,\n            total: 1,\n            description: \"Initializing\"\n        };\n\n        this.showIndicator = true;\n    }\n\n    progress(progress: Progress): void {\n        this.prog = progress;\n    }\n\n    complete(): void {\n        this.showIndicator = false;\n    }\n\n}\n","<div *ngIf=\"showIndicator\" class=\"progress-overlay\" style=\"height: 100%; width: 100%;\">\n  <div class=\"progress-div\">\n    <progressbar class=\"progress-striped active\" [max]=\"prog.total\" [value]=\"prog.current\"><i>{{prog.description}}</i></progressbar>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient, HttpParams } from \"@angular/common/http\";\nimport { finalize } from \"rxjs/operators\";\nimport { EventService } from \"@shared/service\";\nimport { ExternalSystem, PageResult } from \"@shared/model/core\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class ExternalSystemService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private http: HttpClient, private eventService: EventService) { }\n\n    getExternalSystems(pageNumber: number, pageSize: number): Promise<PageResult<ExternalSystem>> {\n        let params: HttpParams = new HttpParams();\n        params = params.set(\"pageNumber\", pageNumber.toString());\n        params = params.set(\"pageSize\", pageSize.toString());\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult<ExternalSystem>>(registry.contextPath + \"/external-system/get-all\", { params: params })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    getExternalSystem(oid: string): Promise<ExternalSystem> {\n        let params: HttpParams = new HttpParams();\n        params = params.set(\"oid\", oid);\n\n        this.eventService.start();\n\n        return this.http\n            .get<ExternalSystem>(registry.contextPath + \"/external-system/get\", { params: params })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    applyExternalSystem(system: ExternalSystem): Promise<ExternalSystem> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<ExternalSystem>(registry.contextPath + \"/external-system/apply\", JSON.stringify({ system: system }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    getSystemCapabilities(system: ExternalSystem): Promise<{ oauth: boolean }> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<{ oauth: boolean }>(registry.contextPath + \"/external-system/system-capabilities\", JSON.stringify({ system: system }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    removeExternalSystem(oid: string): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>(registry.contextPath + \"/external-system/remove\", JSON.stringify({ oid: oid }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { Step, StepConfig } from \"@shared/model/modal\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class ModalStepIndicatorService {\n\n    stepConfig: StepConfig;\n    step: Step;\n    private modalStepChangedSource = new Subject<StepConfig>();\n    modalStepChange = this.modalStepChangedSource.asObservable();\n\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor() { }\n\n    public getStepConfig(): StepConfig {\n        return this.stepConfig;\n    }\n\n    public setStepConfig(config: StepConfig): void {\n        this.stepConfig = config;\n\n        this.modalStepChangedSource.next(this.stepConfig);\n    }\n\n    getStep(): Step {\n        return this.step;\n    }\n\n    setStep(step: Step): void {\n        this.step = step;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\nimport { finalize } from \"rxjs/operators\";\n\nimport { EventService } from \"@shared/service\";\n\nimport { Organization } from \"@shared/model/core\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class OrganizationService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private http: HttpClient, private eventService: EventService) { }\n\n    getOrganizations(): Promise<Organization[]> {\n        this.eventService.start();\n\n        return this.http\n            .get<Organization[]>(registry.contextPath + \"/cgr/organizations/get-all\")\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    updateOrganization(json: any): Promise<Organization> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<Organization>(registry.contextPath + \"/cgr/orgainization/update\", JSON.stringify({ json: json }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    newOrganization(json: any): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>(registry.contextPath + \"/cgr/orgainization/create\", JSON.stringify({ json: json }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    removeOrganization(code: any): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>(registry.contextPath + \"/cgr/orgainization/delete\", JSON.stringify({ code: code }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n}\n","import { CanDeactivate } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n// Thanks to : https://stackoverflow.com/a/41187919/219843\n\nexport interface ComponentCanDeactivate {\n    canDeactivate: () => boolean | Observable<boolean>;\n    afterDeactivate: (arg: boolean) => void;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n\n    canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n        if (!component.canDeactivate()) {\n            // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\n            // when navigating away from your angular app, the browser will show a generic warning message\n            // see http://stackoverflow.com/a/42207299/7307355\n            let confirmRet = confirm(\"WARNING: You have unsaved changes. Press Cancel to go back and save these changes, or OK to lose these changes.\");\n\n            component.afterDeactivate(confirmRet);\n\n            return confirmRet;\n        }\n\n        return true;\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\n// import 'rxjs/add/operator/toPromise';\n\nimport { Profile } from \"@shared/model/profile\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class ProfileService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private http: HttpClient) { }\n\n    get(): Promise<Profile> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<Profile>(registry.contextPath + \"/registryaccount/get\", { headers: headers })\n            .toPromise();\n    }\n\n\n    apply(profile: Profile): Promise<Profile> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<Profile>(registry.contextPath + \"/registryaccount/apply\", JSON.stringify({ account: profile }), { headers: headers })\n            .toPromise();\n    }\n\n    unlock(oid: string): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<void>(registry.contextPath + \"/registryaccount/unlock\", JSON.stringify({ oid: oid }), { headers: headers })\n            .toPromise()\n    }\n\n    setLocale(locale: string): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<any>(registry.contextPath + \"/localization/set-locale\", JSON.stringify({ locale: locale }), { headers: headers })\n            .toPromise();\n    }\n\n    getRolesForUser(userOID: string): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n\n        return this.http\n            .post<Profile>(registry.contextPath + \"/registryaccount/getRolesForUser\", { userOID: userOID }, { headers: headers })\n            .toPromise();\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Progress } from \"@shared/model/progress\";\n\nexport interface IProgressListener {\n    start(): void;\n    progress(progress: Progress): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class ProgressService {\n\n    private listeners: IProgressListener[] = [];\n\n    // eslint-disable-next-line no-useless-constructor\n    public constructor() { }\n\n    public registerListener(listener: IProgressListener): void {\n        this.listeners.push(listener);\n    }\n\n    public deregisterListener(listener: IProgressListener): boolean {\n        let indexOfItem = this.listeners.indexOf(listener);\n\n        if (indexOfItem === -1) {\n            return false;\n        }\n\n        this.listeners.splice(indexOfItem, 1);\n\n        return true;\n    }\n\n    public start(): void {\n        for (const listener of this.listeners) {\n            listener.start();\n        }\n    }\n\n    public progress(progress: Progress): void {\n        for (const listener of this.listeners) {\n            listener.progress(progress);\n        }\n    }\n\n    public complete(): void {\n        for (const listener of this.listeners) {\n            listener.complete();\n        }\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from \"rxjs/operators\";\n\nimport { EventService } from \"./event.service\";\n\nimport { AuthService } from \"./auth.service\";\nimport { User } from \"@shared/model/user\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class SessionService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: EventService, private http: HttpClient, private authService: AuthService) { }\n\n    login(username: string, password: string): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.service.start();\n\n        return this.http\n            .post<User>(registry.contextPath + \"/cgrsession/login\", JSON.stringify({ username: username, password: password }), { headers: headers })\n            .pipe(finalize(() => {\n                this.service.complete();\n            }))\n            .toPromise()\n            .then((logInResponse: any) => {\n                this.authService.afterLogIn(logInResponse);\n\n                return logInResponse;\n            })\n    }\n\n    logout(): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.service.start();\n\n\n        return this.http\n            .post<void>(registry.contextPath + \"/session/logout\", { headers: headers })\n            .pipe(finalize(() => {\n                this.service.complete();\n            }))\n            .toPromise()\n            .then((response: any) => {\n                this.authService.afterLogOut();\n\n                return response;\n            })\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"error-message\",\n    templateUrl: \"./error-message.component.html\",\n    styleUrls: [\"./error-message.css\"]\n})\nexport class ErrorMessageComponent {\n\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"error.modal.default.message\");\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private localizeService: LocalizationService) { }\n\n}\n","<div *ngIf=\"message != null\" class=\"error-container\">\n    <div class=\"\">\n        <strong class=\"error-title\">\n            <localize key=\"error.title\"></localize>\n        </strong>\n    </div>\n    <div class=\"\">\n        <div>\n            <p class=\"error-message\">{{message}}</p>\n        </div>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Subject } from \"rxjs\";\nimport { LocalizationService } from \"@shared/service\";\nimport { ModalTypes } from \"@shared/model/modal\";\n\n@Component({\n    selector: \"confirm-modal\",\n    templateUrl: \"./confirm-modal.component.html\",\n    styleUrls: [\"./modal.css\"]\n})\nexport class ConfirmModalComponent {\n\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    @Input() data: any;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.submit\");\n\n    @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n\n    /*\n     * Called on cancel\n     */\n    public onCancel: Subject<any>;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n        this.onCancel = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next(this.data);\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n        this.onCancel.next(this.data);\n    }\n\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>{{cancelText}}</span>\n          </button>\n          <button type=\"button\" (click)=\"confirm()\"\n            [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n            aria-disabled=\"false\">\n            <span>{{submitText}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"error-modal\",\n    templateUrl: \"./error-modal.component.html\",\n    styleUrls: [\"./error-modal.css\"]\n})\nexport class ErrorModalComponent {\n\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"error.modal.default.message\");\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Subject } from \"rxjs\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"success-modal\",\n    templateUrl: \"./success-modal.component.html\",\n    styleUrls: [\"./success-modal.css\"]\n})\nexport class SuccessModalComponent implements OnInit {\n\n    /*\n     * Message\n     */\n    @Input() message: string;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.close\");\n\n    public onConfirm: Subject<any>;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n    ngOnInit(): void {\n        this.message = this.message ? this.message : this.localizeService.decode(\"success.modal.default.message\");\n        this.onConfirm = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next();\n    }\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">\n\t\t\t\t\t\t<span>{{submitText}}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n\n</div>\n","import { Component } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { LocalizationService } from \"@shared/service\";\n\nexport class GenericButton {\n\n    label: string;\n    onClick: Function;\n    shouldClose: boolean;\n    class: string;\n\n}\n\n@Component({\n    selector: \"generic-modal\",\n    templateUrl: \"./generic-modal.component.html\",\n    styleUrls: [\"./modal.css\"]\n})\nexport class GenericModalComponent {\n\n    /*\n     * Message\n     */\n    message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    buttons: GenericButton[] = [];\n\n    data: any;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n    init(message: string, buttons: GenericButton[]): void {\n        this.message = message;\n        this.buttons = buttons;\n    }\n\n    onClick(button: GenericButton): void {\n        if (button.shouldClose) {\n            this.bsModalRef.hide();\n        }\n\n        button.onClick(this.data);\n    }\n\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button *ngFor=\"let button of buttons\" type=\"button\" (click)=\"onClick(button)\" class=\"btn\" [class]=\"button.class\" role=\"button\" aria-disabled=\"false\">\n            <span>{{button.label}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","var map = {\n\t\"./admin/admin.module\": [\n\t\t557,\n\t\t\"vendor\",\n\t\t0,\n\t\t2\n\t],\n\t\"./registry/registry.module\": [\n\t\t558,\n\t\t\"vendor\",\n\t\t0,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 328;\nmodule.exports = webpackAsyncContext;","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subscription } from 'rxjs';\n\nimport { Application } from '@shared/model/application';\nimport { SessionService } from '@shared/service';\nimport { HubService } from '@core/service/hub.service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { LoginHeaderComponent } from './login-header.component';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component( {\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n} )\nexport class LoginComponent implements OnInit {\n    context: string;\n    username: string = '';\n    password: string = '';\n    \n    oauthServers: any[] = null;\n    viewOauthServers: boolean = false;\n    \n    sub: Subscription;\n\n    /*\n     * Reference to the modal current showing\n    */\n    private bsModalRef: BsModalRef;\n\n    ngOnInit(): void {\n      this.hService.oauthGetPublic(null).then(oauthServers => {\n        \n        if (oauthServers && oauthServers.length > 0)\n        {\n          this.oauthServers = oauthServers;\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n      \n      this.sub = this.route.params.subscribe(params => {\n        if (params['errorMsg'] != null)\n        {\n          this.bsModalRef = this.modalService.show(ErrorModalComponent, { backdrop: true });\n          \n          let encodedError = params['errorMsg'];\n          let decodedError = encodedError.replaceAll(\"+\", \" \");\n          \n          this.bsModalRef.content.message = decodedError;\n        }\n      });\n    }\n\n    constructor( private service: SessionService, private hService: HubService, private modalService: BsModalService, private router: Router, private route: ActivatedRoute ) {\n        this.context = registry.contextPath;\n    }\n    \n    public onClickDhis2(url: any): void {\n      if (url == null)\n      {\n        if (this.oauthServers.length == 1)\n        {\n          window.location.href = this.oauthServers[0].url;\n        }\n        else\n        {\n          this.viewOauthServers = !this.viewOauthServers;\n        }\n      }\n      else\n      {\n        window.location.href = url;\n      }\n    }\n\n    onSubmit(): void {\n        this.service.login( this.username, this.password ).then( response => {\n\n            this.hService.applications().then( applications => {\n                if ( applications.length == 1 ) {\n                    this.open( applications[0] );\n                }\n                else {\n                    this.router.navigate( ['/menu/true'] );\n                }\n            } );\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    public error( err: HttpErrorResponse ): void {\n      this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n\n}\n","<div id=\"login-page\" class=\"new-admin-design-main\">\n    <login-header></login-header>\n    <loading-bar></loading-bar>\n\n    <message></message>\n    <div class=\"vertical-center\">\n        <div id=\"app-container\" class=\"container\">\n\n            <div class=\"row\">\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                    <div class=\"row\" style=\"margin-bottom: 25px;\">\n                        <div class=\"col-md-12\">\n\n                            <div class=\"heading text-center\">\n                                <h2>\n                                    <!-- \n                                    <localize key=\"login.page.title\"></localize>\n                                    -->\n                                </h2>\n                                <!-- <p class=\"lead\">\n                                    <localize key=\"login.page.description\"></localize>\n                                </p> -->\n                            </div>\n\n                        </div>\n                    </div>\n                    \n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n\n                            <form id=\"login-form\" class=\"login\" #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\">\n                                <div id=\"login-input-container\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <input [(ngModel)]=\"username\" name=\"username\" type=\"text\" [placeholder]=\"'login.username' | localize\" id=\"login\" required /> \n                                            <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" [placeholder]=\"'login.password' | localize\" id=\"password\" required /> \n                                            <a routerLink=\"/forgotpassword\" class=\"forgot-password\"> \n                                              <localize key=\"login.forgotPassword\"></localize>\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <!-- <p class=\"login-submit\"> -->\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                          <div class=\"btn-holder text-right\">\n                                            <button type=\"submit\" id=\"login-btn\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\">\n                                                <localize key=\"login.button\"></localize>\n                                            </button>\n                                          </div>\n                                        </div>\n                                    </div>\n                                    <!-- </p> -->\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                    \n                    <div *ngIf=\"oauthServers\" class=\"row\">\n                      <div class=\"col-md-12 text-center\">\n                        <h4 class=\"oauth-or-line-block\">\n                          <span class=\"oauth-or-text\">&nbsp;<localize key=\"login.oauth.or.label\"></localize>&nbsp;</span>\n                        </h4>\n                    \n                        <button (click)=\"onClickDhis2(null)\" class=\"dhis2-login-button\">\n                          <span class=\"dhis2-login-button-text\">\n                            <localize key=\"login.oauth.loginwith.label\"></localize>\n                          </span>\n                          <span>\n                            <img class=\"dhis2-login-button-image\" src=\"../dist/assets/dhis2-logo.f59cbafa7a88d5e9addba95ec74000d1.png\">\n                          </span>\n                        </button>\n                        <div *ngIf=\"viewOauthServers\" style=\"margin-top: 20px;\">\n                          <select (change)=\"onClickDhis2($event.target.value)\" name=externalSystemOid>\n                            <option></option>\n                            <option *ngFor=\"let server of oauthServers\" [value]=\"server.url\">\n                              {{server.label.localizedValue}}\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Application } from '@shared/model/application';\n\nimport { AuthService } from '@shared/service';\n\nimport { HubService } from '@core/service/hub.service';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component( {\n    selector: 'hub',\n    templateUrl: './hub.component.html',\n    styleUrls: ['./hub.component.css']\n} )\nexport class HubComponent implements OnInit {\n    context: string;\n    applications: Application[] = [];\n    tasks: any = [];\n    isAdmin: boolean = false;\n    buckets: string = 'col-sm-6';\n    bsModalRef: BsModalRef;\n    loading: boolean = true;\n\n    constructor(\n        private service: HubService,\n        public authService: AuthService,\n        private modalService: BsModalService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.context = registry.contextPath;\n    }\n\n    ngOnInit(): void {\n      this.service.applications().then( applications => {\n          this.loading = false;\n          this.applications = applications;\n      } );\n      \n      this.isAdmin = this.authService.isAdmin();\n    }\n    \n    //   logout():void {\n    //     this.sessionService.logout().then(response => {\n    //       this.router.navigate(['/login']);\t  \n    //     }); \t  \n    //   }\n\n\n    open( application: Application ): void {\n        \n        if (application.url.includes(\"location-manager\")) {\n            application.url = application.url + \"?pageContext=EXPLORER\";\n        }\n        \n        window.location.href = this.context + '/' + application.url;\n    }\n\n    //   account():void{\n    //     this.profileService.get().then(profile => {\n    //       this.bsModalRef = this.modalService.show(ProfileComponent, {backdrop: 'static', class: 'gray modal-lg'});\n    //       this.bsModalRef.content.profile = profile;\n    //     });\n    //   }\n}\n","    <div class=\"new-admin-design-main\">\n\n        <cgr-header></cgr-header>\n        <loading-bar></loading-bar>\n        \n        <div id=\"app-container\" class=\"container-fluid\" style=\"height:100%\">\n            <div class=\"nav-icon-container\" >\n                <div *ngIf=\"applications?.length == 0\" style=\"display: flex; justify-content: center; align-items: center; height:100%\">\n\t\t\t            <div *ngIf=\"!loading && authService.getRoles().length == 0\" class=\"error-message\" style=\"font-size:1.5em;\">\n\t\t\t              <localize key=\"hub.no-valid-roles\"></localize>\n\t\t\t            </div>\n\t\t\t            <div *ngIf=\"loading\" class=\"standby-overlay\" style=\"width:100%; height:100%; font-size:4em; color:black;\">\n\t\t\t              \n\t\t\t            </div>\n\t\t\t          </div>\n                \n                <div *ngIf=\"applications?.length > 0 && !loading\" class=\"row vertical-center-row\">\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                    <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                        <div *ngFor=\"let app of applications; let i = index;\">\n\n                            <div style=\"padding: 10px 0;\" class=\"row\" *ngIf=\"i % 4 === 0\">\n\n                                <div *ngFor=\"let application of applications; let internalIndex = index;\">\n                                    <div *ngIf=\"internalIndex >= i && internalIndex < i + 4\" class=\"col-xs-12 col-sm-12 col-md-3 text-center\" (click)=\"open(application)\">\n                                        <div [id]=\"application.oid\" class=\"nav-option-wrapper\">\n                                            <img class=\"nav-icon-img img-responsive\" [src]=\"context + '/' + application.src\" alt=\"Navigation\" />\n                                            <h3 class=\"nav-icon-img-label\">{{application.label}}</h3>\n                                            <!-- <p class=\"nav-icon-img-description\"> {{application.description}} </p> -->\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"applications?.length === 1 || applications?.length === 2\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                    <div *ngIf=\"applications?.length === 1\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                </div>\n            </div>\n\n        </div>\n        <!-- \n      <div style=\"width:100%\">\n        <label style=\"text-align: left; width:50%; display: inline;\">{{authService.getUsername()}} : {{authService.getRoles()}}</label>\n        <label style=\"text-align: right; width:50%; display: inline;\">{{authService.getVersion()}}</label>\n      </div>\n      -->\n        <!--\n      <div class=\"container\">\n\t\t    <div class=\"row justify-content-between\">\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getUsername()}} : {{authService.getRoles()}}\n\t\t\t    </div>\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getVersion()}}\n\t\t\t    </div>\n        </div>\n      </div>\n      -->\n\n    </div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ForgotPasswordService } from \"@core/service/forgotpassword.service\";\n\nimport { ErrorHandler } from \"@shared/component\";\n\n@Component({\n    selector: \"forgotpassword\",\n    templateUrl: \"./forgotpassword.component.html\",\n    styleUrls: [\"./forgotpassword.component.css\"]\n})\nexport class ForgotPasswordComponent {\n\n    username: string;\n    emailIsSent: boolean = false;\n    message: string = null;\n\n    constructor(private service: ForgotPasswordService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private location: Location) {}\n\n    cancel(): void {\n        this.router.navigate([\"/\"]);\n    }\n\n    onSubmit(): void {\n        this.service.submit(this.username)\n            .then(response => {\n                this.emailIsSent = true;\n            })\n            .catch((err: HttpErrorResponse) => {\n                this.error(err);\n            });\n    }\n\n    error(err: HttpErrorResponse): void {\n        this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading text-center\">\n          <h3><localize key=\"forgotpassword.header\"></localize></h3>\n        </div>\n          \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <div class=\"modal-body\">\n          <fieldset>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div *ngIf=\"!emailIsSent\" class=\"label-holder\">\n                  <label><localize key=\"forgotpassword.username\"></localize></label>\n                </div>          \n                <div *ngIf=\"!emailIsSent\" class=\"holder\" >\n                  <span class=\"text\">\n                    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n                  </span>\n                </div>\n                <div *ngIf=\"emailIsSent\" class=\"forgotpassword-email-is-sent\">\n                  <localize key=\"forgotpassword.emailIsSent\"></localize>\n                </div>\n              </div>\n            </div>\n            \n            \n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <div *ngIf=\"!emailIsSent\" class=\"button-holder\">\n                    <input type=\"button\" [value]=\"'forgotpassword.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                    <input type=\"submit\" [value]=\"'forgotpassword.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n                  </div>\n                  \n                  <div *ngIf=\"emailIsSent\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                    <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n                  </div>\n              </div>\n            </div>\n          </fieldset>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler } from \"@shared/component\";\n\nimport { ForgotPasswordService } from \"@core/service/forgotpassword.service\";\nimport { PasswordStrengthBarComponent } from \"@shared/component/password-strength-bar/password-strength-bar.component\";\n\n@Component({\n    templateUrl: \"./forgotpassword-complete.component.html\",\n    styleUrls: [\"./forgotpassword-complete.component.css\"]\n})\nexport class ForgotPasswordCompleteComponent implements OnInit {\n\n    newPassword: string;\n    token: string;\n    passwordIsReset: boolean = false;\n    private sub: any;\n    message: string = null;\n\n    constructor(\n      private service: ForgotPasswordService,\n      private router: Router,      \n      private route: ActivatedRoute,\n  \t  private passwordStrengthBarComponent: PasswordStrengthBarComponent) {}\n\n    ngOnInit() {\n        this.sub = this.route.params.subscribe(params => {\n            this.token = params[\"token\"];\n        });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    cancel(): void {\n        this.router.navigate([\"/\"]);\n    }\n\n    onSubmit(): void {\n        this.service.complete(this.newPassword, this.token)\n            .then(() => {\n                this.passwordIsReset = true;\n            })\n            .catch((err: HttpErrorResponse) => {\n                this.error(err);\n            });\n    }\n\n    error(err: HttpErrorResponse): void {\n        this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading text-center\">\n          <h3><localize key=\"forgotpassword-complete.header\"></localize></h3>\n        </div>\n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <div class=\"modal-body\">\n\t        <fieldset>\n\t          <div class=\"row\">\n\t\t          <div class=\"col-md-12\">\n\t\t            <div *ngIf=\"!passwordIsReset\">            \n\t\t<!-- \n\t\t              <div class=\"label-holder\">\n\t\t                <label><localize key=\"forgotpassword-complete.token\"></localize></label>\n\t\t              </div>\n\t\t              <div class=\"holder\" >\n\t\t                <span class=\"text\">\n\t\t                  <input type=\"text\" [(ngModel)]=\"token\" name=\"token\" required [readonly]=\"true\">\n\t\t                </span>\n\t\t              </div>            \n\t\t -->            \n\t\t              <div class=\"label-holder\">\n\t\t                <label><localize key=\"forgotpassword-complete.newPassword\"></localize></label>\n\t\t              </div>\n\t\t              <div class=\"holder\">\n\t\t                <span class=\"text\">\n\t\t                  <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n\t\t                    <password-strength-bar [passwordToCheck]=\"newPassword\"></password-strength-bar>\n\t\t                </span>\n\t\t              </div>\n\t\t              <div class=\"label-holder\">\n\t\t                <label><localize key=\"account.certainPassword\"></localize></label>\n\t\t              </div>          \n\t\t              <div class=\"holder\" >\n\t\t                <span class=\"text\">\n\t\t                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n\t\t                </span>\n\t\t                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n\t\t                  <localize key=\"account.certainPassword.validation\"></localize>\n\t\t                </div>                                                       \n\t\t              </div>                           \n\t\t            </div>\n\t\t            <div *ngIf=\"passwordIsReset\" class=\"forgotpassword-password-is-reset\">\n\t\t              <localize key=\"forgotpassword-complete.passwordIsReset\"></localize>\n\t\t            </div>\n\t\t          </div>\n\t          </div>\n\t            \n\t          \n\t          <div class=\"row\">\n\t            <div class=\"col-md-12\">\n\t\t            <div class=\"label-holder\">\n\t\t            </div>                    \n\t\t            <div class=\"holder\">\n\t\t              <div *ngIf=\"!passwordIsReset\" class=\"button-holder\">\n\t\t                <input type=\"button\" [value]=\"'forgotpassword-complete.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n\t\t                <input type=\"submit\" [value]=\"'forgotpassword-complete.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n\t\t              </div>\n\t\t              \n\t\t              <div *ngIf=\"passwordIsReset\" class=\"button-holder\" style=\"margin-top: 10px;\">\n\t\t                <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword-complete.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n\t\t              </div>\n\t\t            </div>\n\t\t          </div>\n\t          </div>\n\t        </fieldset>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","/* eslint-disable no-use-before-define */\n/* eslint-disable padded-blocks */\nimport { LocalizedValue, PageResult } from \"@shared/model/core\";\nimport { LocalizationService } from \"@shared/service\";\nimport { ImportConfiguration } from \"./io\";\nimport { GovernanceStatus, ConflictType } from \"./constants\";\nimport Utils from \"@registry/utility/Utils\";\nimport { RegistryService } from \"@registry/service\";\n\nexport const PRESENT: string = \"5000-12-31\";\n\n/**\n * Provides a reusable TypeCache which can be used across the app. Types will be automatically fetched\n * from the server when the cache is constructed, however since Javascript is non-blocking they are not\n * guaranteed to be available, especially if they are in the process of being fetched from the server.\n * If you have an operation which needs to wait on the types, you may call the waitOnTypes method.\n */\nexport class GeoObjectTypeCache {\n\n    private registryService: RegistryService;\n\n    private types: GeoObjectType[];\n\n    private refreshPromise: Promise<GeoObjectType[]>;\n\n    public constructor(registryService: RegistryService) {\n        this.registryService = registryService;\n\n        this.refreshPromise = this.refresh();\n    }\n\n    public waitOnTypes(): Promise<GeoObjectType[]> {\n        if (this.refreshPromise) {\n            return this.refreshPromise;\n        } else if (this.types == null) {\n            return (this.refreshPromise = this.refresh());\n        } else {\n            return new Promise<GeoObjectType[]>((resolve, reject) => resolve(this.types));\n        }\n    }\n\n    public ready(): boolean {\n        return this.types != null;\n    }\n\n    public refresh(): Promise<GeoObjectType[]> {\n        return this.registryService.getGeoObjectTypes(null, null).then(types => {\n            this.refreshPromise = null;\n            this.types = types;\n            return this.types;\n        }).catch(e => {\n            this.types = null;\n            this.refreshPromise = null;\n\n            return this.types;\n        });\n    }\n\n    public getTypeByCode(code: string): GeoObjectType {\n        if (!this.types) {\n            return null;\n        }\n\n        let index = this.types.findIndex(type => type.code === code);\n\n        if (index === -1) {\n            return null;\n        } else {\n            return this.types[index];\n        }\n    }\n\n    public getTypes() {\n        return this.types;\n    }\n\n}\n\nexport class TreeEntity {\n    id: string;\n    name: string;\n    hasChildren: boolean;\n}\n\nexport class Term {\n    code: string;\n    label: LocalizedValue;\n    description: LocalizedValue;\n\n    constructor(code: string, label: LocalizedValue, description: LocalizedValue) {\n        this.code = code;\n        this.label = label;\n        this.description = description;\n    }\n\n    children: Term[] = [];\n\n    addChild(term: Term) {\n        this.children.push(term);\n    }\n}\n\nexport class GeoObject {\n    type: string;\n    geometry: any;\n    properties: {\n        uid: string,\n        code: string,\n        displayLabel: LocalizedValue,\n        type: string,\n        status: string[],\n        sequence: string\n        createDate: string,\n        lastUpdateDate: string,\n        invalid: boolean,\n        exists: boolean,\n        writable?: boolean\n    };\n}\n\nexport interface AttributedType {\n    code: string;\n    attributes?: Array<AttributeType | AttributeTermType | AttributeDecimalType>;\n}\n\nexport class GeoObjectType implements AttributedType {\n    code: string;\n    label: LocalizedValue;\n    description: LocalizedValue;\n    geometryType?: string;\n    isLeaf: boolean;\n    isGeometryEditable: boolean;\n    organizationCode: string;\n    attributes: Array<AttributeType | AttributeTermType | AttributeDecimalType> = [];\n    relatedHierarchies?: string[];\n    superTypeCode?: string;\n    isAbstract?: boolean;\n    isPrivate?: boolean;\n    canDrag?: boolean;\n    permissions?: string[];\n\n    public static getAttribute(type: GeoObjectType, name: string) {\n        let len = type.attributes.length;\n        for (let i = 0; i < len; i++) {\n            let attr: any = type.attributes[i];\n\n            if (attr.code === name) {\n                return attr;\n            }\n        }\n\n        return null;\n    }\n\n    public static getGeoObjectTypeTermAttributeOptions(geoObjectType: GeoObjectType, termAttributeCode: string) {\n        for (let i = 0; i < geoObjectType.attributes.length; i++) {\n            let attr: any = geoObjectType.attributes[i];\n\n            if (attr.type === \"term\" && attr.code === termAttributeCode) {\n                attr = <AttributeTermType>attr;\n                let attrOpts = attr.rootTerm.children;\n\n                // only remove status of the required status type\n                if (attrOpts.length > 0) {\n                    if (attr.code === \"status\") {\n                        return Utils.removeStatuses(attrOpts);\n                    } else {\n                        return attrOpts;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport class Task {\n    id: string;\n    templateKey: string;\n    msg: string;\n    title: string;\n    status: string;\n    createDate: number;\n    completedDate: number;\n}\n\nexport class GeoObjectOverTime {\n\n    geoObjectType: GeoObjectType;\n\n    attributes: any;\n\n    public constructor(geoObjectType: GeoObjectType, attributes: any) {\n        this.geoObjectType = geoObjectType;\n        this.attributes = attributes;\n    }\n\n    public getVotAtDate(date: Date, attrCode: string, lService: LocalizationService) {\n        let retVot = { startDate: date, endDate: null, value: null };\n\n        const time = date.getTime();\n\n        for (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n            let attr = this.geoObjectType.attributes[i];\n\n            if (attr.code === attrCode) {\n                if (attr.type === \"local\") {\n                    retVot.value = lService.create();\n                }\n\n                if (attr.isChangeOverTime) {\n                    let values = this.attributes[attr.code].values;\n\n                    values.forEach(vot => {\n\n                        const startDate = Date.parse(vot.startDate);\n                        const endDate = Date.parse(vot.endDate);\n\n                        if (time >= startDate && time <= endDate) {\n\n                            if (attr.type === \"local\") {\n                                retVot.value = JSON.parse(JSON.stringify(vot.value));\n                            } else if (attr.type === \"term\" && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n                                retVot.value = vot.value[0];\n                            } else {\n                                retVot.value = vot.value;\n                            }\n                        }\n                    });\n                } else {\n                    retVot.value = this.attributes[attr.code];\n                }\n\n                break;\n            }\n        }\n\n        return retVot;\n    }\n}\n\nexport class ConflictMessage {\n    message: string;\n    severity: string;\n    type: ConflictType;\n}\n\nexport interface TimeRangeEntry {\n    startDate: string;\n    endDate: string;\n    oid?: string;\n    value?: any;\n}\n\nexport class ValueOverTime implements TimeRangeEntry {\n    oid: string;\n    startDate: string;\n    endDate: string;\n    value: any;\n    removable?: boolean;\n}\n\nexport class AttributeOverTime {\n    name: string;\n    type: string;\n    values: ValueOverTime[];\n}\n\nexport class AttributeType {\n    code: string; // On the back-end this is referred to as the AttributeType's 'name'. They are the same concept.\n    type: string;\n    label: LocalizedValue;\n    description: LocalizedValue;\n    isDefault: boolean;\n    required: boolean;\n    unique: boolean;\n    governanceStatus: GovernanceStatus;\n    isChangeOverTime?: boolean;\n    precision?: number;\n    scale?: number;\n    classificationType?: string;\n    rootTerm?: Term;\n    isValid?: boolean;\n    isValidReason?: { timeConflict: boolean, existConflict: boolean, dateField: boolean };\n    isValidReasonHierarchy?: any;\n\n    constructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChangeOverTime: boolean) {\n\n        this.code = code;\n        this.type = type;\n        this.label = label;\n        this.description = description;\n        this.isDefault = isDefault;\n        this.required = false; // Hardcoded to false because this functionality is disabled until later evaluation.\n        this.unique = unique;\n        this.isChangeOverTime = isChangeOverTime;\n    }\n\n}\n\nexport class AttributeTermType extends AttributeType {\n\n    // descendants: Attribute[];\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n        super(code, type, label, description, isDefault, required, unique, isChange);\n    }\n\n    rootTerm: Term = new Term(null, null, null);\n\n    termOptions: Term[] = [];\n\n    setRootTerm(term: Term) {\n        this.rootTerm = term;\n    }\n}\n\nexport class AttributeDecimalType extends AttributeType {\n    constructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n        super(code, type, label, description, isDefault, required, unique, isChange);\n\n        this.precision = 32;\n        this.scale = 8;\n    }\n}\n\nexport class TreeNode {\n    geoObject: GeoObject;\n    hierarchyType: string;\n}\n\nexport class ChildTreeNode extends TreeNode {\n    children: ChildTreeNode[];\n}\n\nexport class ParentTreeNode extends TreeNode {\n    parents: ParentTreeNode[];\n}\n\nexport class ManageGeoObjectTypeModalState {\n    state: string;\n    attribute: any;\n    termOption: any;\n}\n\nexport class AbstractScheduledJob {\n    jobId: string;\n    historyId: string;\n    stage: string;\n    status: string;\n    author: string;\n    createDate: string;\n    lastUpdateDate: string;\n    workProgress: number;\n    workTotal: number;\n    startDate: string;\n    endDate: string;\n}\n\nexport class ScheduledJob extends AbstractScheduledJob {\n    importedRecords: number;\n    exportedRecords: number;\n    configuration: ImportConfiguration;\n    importErrors: PageResult<any>;\n    exportErrors: PageResult<any>;\n    problems: PageResult<any>;\n    fileName: string;\n    exception?: { type: string, message: string };\n}\n\nexport class ScheduledJobOverview extends ScheduledJob {\n    stepConfig: StepConfig;\n}\n\n// export class ScheduledJobDetail extends ScheduledJob {\n//     // failedRowCount: number;\n//     importErrors: PaginationPage\n// }\n\nexport class ImportError {\n    exception: ServerException;\n    object: ImportErrorObject;\n    objectType: string;\n    id: string;\n    resolution: string;\n    selected?: boolean;\n}\n\nexport class ServerException {\n    attributes: ServerExceptionAttribute[];\n    type: string;\n    message: string;\n}\n\nexport class ServerExceptionAttribute {\n    value: string;\n    key: string;\n}\n\nexport class ImportErrorObject {\n    geoObject: GeoObjectOverTime;\n    parents: HierarchyOverTime[];\n    isNew: boolean;\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    complete?: boolean;\n    enabled?: boolean;\n    status?: string;\n}\n\nexport class HierarchyOverTime {\n    code: string;\n    label: string;\n    types: {\n        code: string;\n        label: string;\n    }[];\n\n    entries: HierarchyOverTimeEntry[];\n}\n\nexport class HierarchyOverTimeEntry implements TimeRangeEntry {\n    startDate: string;\n    endDate: string;\n    oid: string;\n    parents: { [k: string]: HierarchyOverTimeEntryParent };\n    loading?: any;\n    conflictType?: string;\n    conflictMessage?: any[];\n}\n\nexport class HierarchyOverTimeEntryParent {\n    text: string;\n    geoObject: GeoObject;\n    goCode?: string;\n}\n\nexport class SynchronizationConfig {\n    oid?: string;\n    type?: string;\n    systemLabel?: string;\n    isImport?: boolean;\n    organization: string;\n    system: string;\n    hierarchy: string;\n    label: LocalizedValue;\n    configuration: any;\n}\n\nexport class OrgSyncInfo {\n    label: string;\n    code: string;\n    hierarchies: { label: string, code: string }[];\n    systems: { label: string, oid: string, type: string }[];\n}\n\nexport class ExportScheduledJob extends AbstractScheduledJob {\n    stepConfig?: StepConfig;\n}\n","import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { DateService } from \"@shared/service\";\n\n@Component({\n    selector: \"date-text\",\n    templateUrl: \"./date-text.component.html\",\n    styleUrls: []\n})\nexport class DateTextComponent implements OnChanges {\n\n    @Input() date: string = null;\n    formattedDate: string = null;\n\n    constructor(private service: DateService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.date != null) {\n            this.formattedDate = this.service.formatDateForDisplay(changes.date.currentValue);\n        }\n    }\n\n}\n","<ng-container>\n\t{{formattedDate}}\n</ng-container>","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, ViewChild } from \"@angular/core\";\nimport { LocalizationService } from \"@shared/service\";\nimport { DateService } from \"@shared/service/date.service\";\n\nimport { BsDatepickerConfig, BsDatepickerDirective } from \"ngx-bootstrap/datepicker\";\n\nimport { PRESENT } from \"@registry/model/registry\";\n\n@Component({\n    selector: \"date-field\",\n    templateUrl: \"./date-field.component.html\",\n    styleUrls: [\"./date-field.css\"]\n})\n\nexport class DateFieldComponent {\n\n    @ViewChild(BsDatepickerDirective, { static: false }) datepicker: BsDatepickerDirective;\n\n    @Input() allowFutureDates: boolean = true;\n    @Input() allowInfinity: boolean = false;\n    @Input() inputName: string = this.idGenerator();\n    @Input() classNames: string = \"\";\n    @Input() customStyles: string = \"\";\n    @Input() localizeLabelKey: string = \"\"; // localization key used to localize in the component template\n    @Input() label: string = \"\"; // raw string input\n    @Input() disable: boolean = false;\n    @Input() required: boolean = false;\n    @Input() placement: string = \"bottom\";\n    @Input() oldDate: string = null;\n    @Input() title: string = \"\";\n    @Input() placeholder: string = \"YYYY-MM-DD\";\n\n    _value: Date;\n    // eslint-disable-next-line accessor-pairs\n    @Input() set value(value) {\n        if (value) {\n            this.setValue(value || null);\n        }\n    }\n\n    @Output() public valueChange = new EventEmitter<string>();\n\n    /* You can pass a function in with (change)='function()' */\n    @Output() public change = new EventEmitter<any>();\n\n    today: Date = new Date();\n    message: string;\n    returnFocusToInput: boolean = false;\n    valueIsPresent: boolean = false;\n\n    @Input() valid: boolean = true;\n    @Output() public validChange = new EventEmitter<boolean>();\n\n    constructor(private localizationService: LocalizationService, private bsDatepickerConfig: BsDatepickerConfig, private changeDetectorRef: ChangeDetectorRef, private dateService: DateService) {\n        this.bsDatepickerConfig.dateInputFormat = \"YYYY-MM-DD\";\n    }\n\n    private setValue(value: string | number): void {\n        // @ts-ignore\n        if (!isNaN(value)) {\n            // @ts-ignore\n            value = parseInt(value);\n        }\n\n        if (value && typeof value === \"string\") {\n            let date = new Date(+value.split(\"-\")[0], +value.split(\"-\")[1] - 1, +value.split(\"-\")[2]);\n\n            if (value === PRESENT) {\n                this.valueIsPresent = true;\n            }\n\n            this._value = date;\n        } else if (value && typeof value === \"number\") {\n            // Custom attributes of date type come through as UTC time\n            this._value = new Date(new Date(value).getUTCFullYear(), new Date(value).getUTCMonth(), new Date(value).getUTCDate());\n        } else {\n            this._value = null;\n        }\n    }\n\n    public getValue(): Date {\n        return this._value;\n    }\n\n    public setInvalid(message: string) {\n        this.valid = false;\n        this.message = message;\n    }\n\n    idGenerator() {\n        let S4 = function() {\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n        };\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n    }\n\n    isEqual(date1: Date, date2: Date): boolean {\n        let equal = false;\n\n        if (date1 && date2) {\n            // if(date1.toISOString().substr(0, 10) === PRESENT && date2.toISOString().substr(0, 10) === PRESENT){\n            if (date1.getTime() === date2.getTime()) {\n                return true;\n            }\n        }\n\n        return equal;\n    }\n\n    toggleInfinity(): void {\n        let date = this.getValue();\n\n        if (date && this.isEqual(date, this.dateService.getPresentDate())) {\n            this.setValue(null); // clear the date picker\n            this.valueChange.emit(null);\n            this.valueIsPresent = false;\n        } else {\n            this.setValue(PRESENT);\n            this.valueChange.emit(this.dateService.getDateString(this.getValue()));\n            this.valueIsPresent = true;\n        }\n\n        this.change.emit();\n    }\n\n    toggle(event: Date): void {\n        setTimeout(() => {\n            let validity = this.dateService.validateDate(event, this.required, this.allowFutureDates);\n            this.valid = validity.valid;\n            this.message = validity.message;\n\n            if (this.valid) {\n                // Must adhere to the ISO 8601 format\n                let formattedDate = this.dateService.getDateString(event);\n\n                if (formattedDate === PRESENT) {\n                    this.valueIsPresent = true;\n                } else {\n                    this.valueIsPresent = false;\n                }\n\n                this.valueChange.emit(formattedDate);\n            } else {\n                // hack to avoid ngx-datepicker from putting \"invalid date\" in the input\n                this.setValue(null);\n\n                this.valueChange.emit(null);\n            }\n\n            this.change.emit();\n            this.validChange.emit(this.valid);\n        }, 0);\n    }\n\n}\n","\n<label for=\"{{inputName}}\" *ngIf=\"label.length > 0\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n<label for=\"{{inputName}}\" *ngIf=\"localizeLabelKey.length > 0\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n\n<!-- <input id=\"date-input\" [class]=\"classNames\" name=\"{{inputName}}\" [(ngModel)]=\"value\" (change)=\"toggle($event)\" type=\"date\" max=\"{{today|date:'yyyy-MM-dd'}}\" [disabled]=\"disable\" [required]=\"required\"/> -->\n\n<div [hidden]=\"valueIsPresent\">\n  <span class=\"wrapper\">\n      <input [class]=\"classNames ? classNames + ' ' + 'date-input-element' : 'date-input-element'\" \n           [style]=\"customStyles ? customStyles : ''\"\n           name=\"{{inputName}}\"\n           type=\"text\"\n           [placeholder]=\"placeholder\"\n           [bsValue]=\"_value\"\n           [value]=\"_value | date: 'yyyy-MM-dd'\"\n           (bsValueChange)=\"toggle($event)\"\n           [bsConfig]=\"{\n              dateInputFormat: 'YYYY-MM-DD', \n              containerClass: 'theme-default', \n              returnFocusToInput: returnFocusToInput,\n              adaptivePosition: true\n              }\"\n           [outsideClick]=\"true\"\n           placement=\"{{placement}}\"\n           [maxDate]=\"allowFutureDates ? null : today\"\n           [isDisabled]=\"disable\"\n           [disabled]=\"disable\"\n           bsDatepicker\n           #dp=\"bsDatepicker\"\n           title=\"{{title}}\"\n           autocomplete=\"off\"\n           >\n  </span>\n  \n  <div class=\"form-input-validation-error-message-wrapper\">\n    <p *ngIf=\"message\" class=\"error-message\">{{message}}</p>\n  </div>\n</div>\n\n<div *ngIf=\"oldDate\">\n  <p class=\"warning-text display-current-value\">\n    <localize key=\"change.request.changed.value.prefix\"></localize>\n    {{ oldDate }}\n  </p>\n</div>\n\n<p [hidden]=\"!valueIsPresent\" style=\"font-size:14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n\n<div *ngIf=\"allowInfinity\" class=\"text-right\" style=\"padding: 10px 0;\">\n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"valueIsPresent\" (click)=\"toggleInfinity()\" [disabled]=\"disable\" title=\"{{title}}\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></button> \n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"!valueIsPresent\" (click)=\"toggleInfinity()\" [disabled]=\"disable\" title=\"{{title}}\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></button>\n</div>\n\n","import { AttributeType, GeoObject } from \"@registry/model/registry\";\nimport { LocalizedValue } from \"@shared/model/core\";\n// eslint-disable-next-line camelcase\nimport turf_booleanequal from \"@turf/boolean-equal\";\n\nexport default class Utils {\n\n    /**\n     *\n     * @param arr\n     */\n    static removeStatuses(arr: any[]): any[] {\n        var newArray = [];\n\n        for (var i = 0; i < arr.length; ++i) {\n            if (!(arr[i].code === \"CGR:Status-New\" ||\n                arr[i].code === \"CGR:Status-Pending\")) {\n                newArray.push(arr[i]);\n            }\n        }\n\n        return newArray;\n    }\n\n    /**\n     *\n     * @param dateObj\n     */\n    static formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + (month < 10 ? \"0\" : \"\") + month + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n    }\n\n    static dateRangeOverlaps(aStart: number, aEnd: number, bStart: number, bEnd: number): boolean {\n        if (aStart <= bStart && bStart <= aEnd) return true; // b starts in a\n        if (aStart <= bEnd && bEnd <= aEnd) return true; // b ends in a\n        if (bStart < aStart && aEnd < bEnd) return true; // a in b\n        return false;\n    }\n\n    static dateRangeOutside(aStart: number, aEnd: number, bStart: number, bEnd: number): boolean {\n        if (aStart < bStart) return true;\n        if (aEnd > bEnd) return true;\n        return false;\n    }\n\n    static dateEndBeforeStart(start: number, end: number): boolean {\n        if (end < start) return true; // end date is before start date\n        return false;\n    }\n\n    static hasGap(aEnd: number, bStart: number): boolean {\n        return (bStart - aEnd) > (1000 * 60 * 60 * 24);\n    }\n\n    public static areValuesEqual(attributeType: AttributeType, val1: any, val2: any): boolean {\n        if (attributeType.type === \"boolean\") {\n            return val1 === val2;\n        }\n\n        if ((val1 === \"\" && val2 == null) || (val2 === \"\" && val1 == null)) {\n            return true;\n        }\n\n        if (!val1 && !val2) {\n            return true;\n        } else if ((!val1 && val2) || (!val2 && val1)) {\n            return false;\n        }\n\n        if (attributeType.type === \"term\") {\n            if (val1 != null && val2 != null) {\n                return val1.length === val2.length && val1[0] === val2[0];\n            }\n        } else if (attributeType.type === \"geometry\") {\n            return turf_booleanequal(val1, val2);\n        } else if (attributeType.type === \"date\") {\n            let casted1 = (typeof val1 === \"string\") ? parseInt(val1) : val1;\n            let casted2 = (typeof val2 === \"string\") ? parseInt(val2) : val2;\n\n            return casted1 === casted2;\n        } else if (attributeType.type === \"local\") {\n            if ((!val1.localeValues || !val2.localeValues) || val1.localeValues.length !== val2.localeValues.length) {\n                return false;\n            }\n\n            let len = val1.localeValues.length;\n            for (let i = 0; i < len; ++i) {\n                let localeValue = val1.localeValues[i];\n\n                let lv2 = this.getValueAtLocale(val2, localeValue.locale);\n                let lv1 = localeValue.value;\n\n                if ((lv1 === \"\" && lv2 == null) || (lv2 === \"\" && lv1 == null)) {\n                    continue;\n                } else if (lv1 !== lv2) {\n                    return false;\n                }\n            }\n\n            return true;\n        } else if (attributeType.type === \"_PARENT_\" && val1.parents && val2.parents) {\n            for (const [gotCode, data] of Object.entries(val1.parents)) {\n                let parentData: { text: string, geoObject: GeoObject } = data as { text: string, geoObject: GeoObject };\n\n                if (val2.parents[gotCode]) {\n                    let parentData2: { text: string, geoObject: GeoObject } = val2.parents[gotCode];\n\n                    if (parentData.geoObject == null && parentData2.geoObject == null) {\n                        // equal, keep looping\n                    } else if ((parentData.geoObject == null && parentData2.geoObject != null) || (parentData2.geoObject == null && parentData.geoObject != null)) {\n                        return false;\n                    } else if (parentData.geoObject.properties.code !== parentData2.geoObject.properties.code) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        } else if (attributeType.type === \"integer\") {\n            let casted1 = (typeof val1 === \"string\") ? parseInt(val1) : val1;\n            let casted2 = (typeof val2 === \"string\") ? parseInt(val2) : val2;\n\n            return casted1 === casted2;\n        } else if (attributeType.type === \"float\") {\n            let casted1 = (typeof val1 === \"string\") ? parseFloat(val1) : val1;\n            let casted2 = (typeof val2 === \"string\") ? parseFloat(val2) : val2;\n\n            return casted1 === casted2;\n        }\n\n        return val1 === val2;\n    }\n\n    public static getValueAtLocale(lv: LocalizedValue, locale: string) {\n        return new LocalizedValue(lv.localizedValue, lv.localeValues).getValue(locale);\n    }\n\n    static arrayMove(arr: any[], oldIndex: number, newIndex: number): void {\n        if (newIndex >= arr.length) {\n            let k = newIndex - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n    }\n\n}\n","\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { ErrorModalComponent } from \"@shared/component\";\n\nexport class ErrorHandler {\n\n    static getMessageFromError(err: any): string {\n        let unspecified = \"An unspecified error has occurred.  Please try your operation again.  If the problem continues, alert your technical support staff.\";\n\n        if (err == null) {\n            return unspecified;\n        } else {\n            console.log(\"An error has occurred: \", err);\n        }\n\n        let msg = null;\n\n        if (err.error != null && (typeof err.error === \"object\")) {\n            msg = err.error.localizedMessage || err.error.message;\n        }\n\n        if (msg == null) {\n            msg = err.message || err.msg || err.localizedMessage;\n        }\n\n        if (msg != null && msg.includes(\"##tferrormsg##\")) {\n            let split = msg.split(\"##tferrormsg##\");\n            return split[2];\n        }\n\n        if (msg == null) {\n            msg = unspecified;\n        }\n\n        return msg;\n    }\n\n    static showErrorAsDialog(err: any, modalService: BsModalService): BsModalRef {\n        if (err instanceof HttpErrorResponse && err.status === 401) {\n            return null;\n        }\n\n        let bsModalRef = modalService.show(ErrorModalComponent, { backdrop: true, class: \"error-white-space-pre\" });\n\n        bsModalRef.content.message = ErrorHandler.getMessageFromError(err);\n\n        return bsModalRef;\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { TreeModule } from \"@circlon/angular-tree-component\";\nimport { ContextMenuModule } from \"ngx-contextmenu\";\nimport { ModalModule } from \"ngx-bootstrap/modal\";\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\nimport { ButtonsModule } from \"ngx-bootstrap/buttons\";\nimport { TypeaheadModule } from \"ngx-bootstrap/typeahead\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { FileUploadModule } from \"ng2-file-upload\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { ProgressbarModule } from \"ngx-bootstrap/progressbar\";\nimport { CollapseModule } from \"ngx-bootstrap/collapse\";\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\n\nimport { TableModule } from \"primeng/table\";\nimport { SliderModule } from \"primeng/slider\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { ButtonModule } from \"primeng/button\";\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\n\nimport { ErrorModalComponent } from \"./component/modals/error-modal.component\";\nimport { SuccessModalComponent } from \"./component/modals/success-modal.component\";\nimport { ConfirmModalComponent } from \"./component/modals/confirm-modal.component\";\nimport { GenericModalComponent } from \"./component/modals/generic-modal.component\";\nimport { ErrorMessageComponent } from \"./component/message/error-message.component\";\nimport { MessageComponent } from \"./component/message/message.component\";\nimport { BooleanFieldComponent } from \"./component/form-fields/boolean-field/boolean-field.component\";\nimport { DateFieldComponent } from \"./component/form-fields/date-field/date-field.component\";\nimport { LoadingBarComponent } from \"./component/loading-bar/loading-bar.component\";\nimport { PasswordStrengthBarComponent } from \"./component/password-strength-bar/password-strength-bar.component\";\n\nimport { AdminGuard, MaintainerGuard, ContributerGuard, AuthGuard } from \"./service/guard.service\";\nimport { PendingChangesGuard } from \"./service/pending-changes-guard\";\n\nimport { AuthService } from \"./service/auth.service\";\nimport { ProfileService } from \"./service/profile.service\";\nimport { OrganizationService } from \"./service/organization.service\";\nimport { ExternalSystemService } from \"./service/external-system.service\";\nimport { LocalizationService } from \"./service/localization.service\";\nimport { ProgressService } from \"./service/progress.service\";\nimport { EventService } from \"./service/event.service\";\nimport { ModalStepIndicatorService } from \"./service/modal-step-indicator.service\";\nimport { SessionService } from \"./service/session.service\";\nimport { DateService } from \"./service/date.service\";\n\nimport { LocalizePipe } from \"./pipe/localize.pipe\";\nimport { PhonePipe } from \"./pipe/phone.pipe\";\n\nimport { OnlyNumber } from \"./directive/number-only.directive\";\nimport { MustMatchDirective } from \"./directive/must-match.directive\";\n\nimport { CgrHeaderComponent } from \"./component/header/header.component\";\nimport { ProgressBarComponent } from \"./component/progress-bar/progress-bar.component\";\nimport { LocalizeComponent } from \"./component/localize/localize.component\";\nimport { ConvertKeyLabel } from \"./component/localize/convert-key-label.component\";\nimport { ModalStepIndicatorComponent } from \"./component/modals/modal-step-indicator.component\";\nimport { ProfileComponent } from \"./component/profile/profile.component\";\nimport { GenericTableComponent } from \"./component/generic-table/generic-table.component\";\nimport { DateTextComponent } from \"./component/date-text/date-text.component\";\n\nimport \"../rxjs-extensions\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        ModalModule.forRoot(),\n        TreeModule,\n        ContextMenuModule,\n        BsDropdownModule,\n        ButtonsModule,\n        TypeaheadModule,\n        ProgressbarModule,\n        CollapseModule,\n        NgxPaginationModule,\n        BsDatepickerModule.forRoot(),\n\n        TableModule,\n        SliderModule,\n        DropdownModule,\n        MultiSelectModule,\n        ButtonModule,\n        AutoCompleteModule\n    ],\n    declarations: [\n        LocalizeComponent,\n        ConvertKeyLabel,\n        BooleanFieldComponent,\n        DateFieldComponent,\n        LoadingBarComponent,\n        ErrorMessageComponent,\n        MessageComponent,\n        ConfirmModalComponent,\n        GenericModalComponent,\n        ErrorModalComponent,\n        SuccessModalComponent,\n        PasswordStrengthBarComponent,\n        OnlyNumber,\n        MustMatchDirective,\n        ProgressBarComponent,\n        ModalStepIndicatorComponent,\n        CgrHeaderComponent,\n        ProfileComponent,\n        LocalizePipe,\n        PhonePipe,\n        GenericTableComponent,\n        DateTextComponent\n    ],\n    exports: [\n        LocalizeComponent,\n        ConvertKeyLabel,\n        BooleanFieldComponent,\n        DateFieldComponent,\n        LoadingBarComponent,\n        ErrorMessageComponent,\n        MessageComponent,\n        ConfirmModalComponent,\n        GenericModalComponent,\n        ErrorModalComponent,\n        SuccessModalComponent,\n        PasswordStrengthBarComponent,\n        OnlyNumber,\n        MustMatchDirective,\n        ProgressBarComponent,\n        ModalStepIndicatorComponent,\n        CgrHeaderComponent,\n        ProfileComponent,\n        LocalizePipe,\n        PhonePipe,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        GenericTableComponent,\n        DateTextComponent\n    ],\n    entryComponents: [\n        ErrorModalComponent,\n        SuccessModalComponent,\n        ConfirmModalComponent,\n        GenericModalComponent,\n        ModalStepIndicatorComponent,\n        ErrorMessageComponent,\n        LoadingBarComponent,\n        ProfileComponent\n    ]\n})\nexport class SharedModule {\n\n    static forRoot(): ModuleWithProviders<SharedModule> {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CookieService,\n                AuthService,\n                SessionService,\n                ProfileService,\n                OrganizationService,\n                ExternalSystemService,\n                LocalizationService,\n                DateService,\n                ModalStepIndicatorService,\n                EventService,\n                ProgressService,\n                AdminGuard,\n                MaintainerGuard,\n                ContributerGuard,\n                AuthGuard,\n                PendingChangesGuard\n            ]\n        };\n    }\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler } from '@shared/component';\nimport { HubService } from '@core/service/hub.service';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component({\n  selector: 'login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: []\n})\nexport class LoginHeaderComponent {\n  context:string;\n  \n  constructor(private hubService: HubService) {\n    this.context = registry.contextPath;\n  }\n  \n  public error(err: HttpErrorResponse): void {\n    let msg = ErrorHandler.getMessageFromError(err);\n    console.log(msg, err);\n  }\n}\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default navbar-fixed-top\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\">\n                <img [src]=\"context + '/logo/view?id=logo'\" />\n            </a>\n            <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"cgr.standard.title\"></localize></a>\n          </div>\n        </div>\n      </nav>\n    </header>\n","export enum ActionTypes {\n    \"CREATEGEOOBJECTACTION\" = \"CreateGeoObjectAction\",\n    \"UPDATEATTRIBUTETACTION\" = \"UpdateAttributeAction\",\n    \"UPDATEGEOOBJECTACTION\" = \"UpdateGeoObjectAction\" // Deprecated DO NOT USE\n}\n\nexport enum GovernanceStatus {\n    \"PENDING\" = \"PENDING\",\n    \"ACCEPTED\" = \"ACCEPTED\",\n    \"REJECTED\" = \"REJECTED\"\n}\n\nexport enum GeoObjectTypeModalStates {\n    \"manageAttributes\" = \"MANAGE-ATTRIBUTES\",\n    \"editAttribute\" = \"EDIT-ATTRIBUTE\",\n    \"defineAttribute\" = \"DEFINE-ATTRIBUTE\",\n    \"manageTermOption\" = \"MANAGE-TERM-OPTION\",\n    \"editTermOption\" = \"EDIT-TERM-OPTION\",\n    \"manageGeoObjectType\" = \"MANAGE-GEO-OBJECT-TYPE\"\n}\n\nexport enum ImportStrategy {\n    \"NEW_AND_UPDATE\" = \"NEW_AND_UPDATE\",\n    \"NEW_ONLY\" = \"NEW_ONLY\",\n    \"UPDATE_ONLY\" = \"UPDATE_ONLY\"\n}\n\nexport enum ConflictType {\n    MISSING_REFERENCE = \"MISSING_REFERENCE\",\n    TIME_RANGE = \"TIME_RANGE\",\n    OUTSIDE_EXISTS = \"OUTSIDE_EXISTS\"\n}\n\nexport enum ChangeType {\n    END_DATE = \"endDate\",\n    START_DATE = \"startDate\",\n    VALUE = \"value\",\n    REMOVE = \"remove\",\n    ADD = \"add\"\n}\n\nexport const OverlayerIdentifier = {\n    LAYER_PANEL: \"layer-panel\",\n    FEATURE_PANEL: \"feature-panel\",\n    SEARCH_PANEL: \"search-panel\",\n    VISUALIZER_PANEL: \"visualizer-panel\",\n} \n","import { Input, Component, OnInit } from \"@angular/core\";\n\nimport { LocalizationService, AuthService } from \"@shared/service\";\nimport { LocaleView, LocalizedValue } from \"@shared/model/core\";\n\n@Component({\n\n    selector: \"convert-key-label\",\n    templateUrl: \"./convert-key-label.component.html\",\n    styleUrls: []\n})\nexport class ConvertKeyLabel implements OnInit {\n\n    @Input() key: any;\n    text: string;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: LocalizationService, private authService: AuthService) { }\n\n    ngOnInit(): void {\n        if (this.key != null && this.key.label != null && this.key.label.localizedValue != null) {\n            this.text = this.key.label.localizedValue;\n            return;\n        }\n\n        let locales: LocaleView[] = this.authService.getLocales();\n\n        let len = locales.length;\n        for (let i = 0; i < len; ++i) {\n            let locale: LocaleView = locales[i];\n\n            if (locale.toString === this.key) {\n                this.text = this.getValue(locale.label, this.service.getLocale());\n\n                return;\n            }\n        }\n\n        if (this.key === \"defaultLocale\") {\n            this.text = this.service.decode(\"localization.defaultLocal\");\n        } else {\n            this.text = this.key;\n        }\n    }\n\n    public getValue(lv: LocalizedValue, localeToString: string): string {\n        let len = lv.localeValues.length;\n\n        for (let i = 0; i < len; ++i) {\n            let value = lv.localeValues[i];\n\n            if (value.locale === localeToString) {\n                return value.value;\n            }\n        }\n\n        return lv.localizedValue;\n    }\n\n}\n","{{text}}","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Component({\n    selector: \"boolean-field\",\n    templateUrl: \"./boolean-field.component.html\",\n    styleUrls: [\"./boolean-field.css\"]\n})\nexport class BooleanFieldComponent {\n\n    @Input() value: boolean = false;\n    @Output() public valueChange = new EventEmitter<boolean>();\n\n    @Input() localizeLabelKey: string = \"\"; // localization key used to localize in the component template\n    @Input() label: string = \"\"; // raw string input\n\n    @Input() disable: boolean = false;\n\n    /* You can pass a function in with (change)='function()' */\n    @Output() public change = new EventEmitter<any>();\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor() { }\n\n    toggle(): void {\n        if (!this.disable) {\n            this.value = !this.value;\n\n            this.valueChange.emit(this.value);\n            this.change.emit(this.value);\n        }\n    }\n}","<div (click)=\"toggle()\" class=\"check-block\" [ngClass]=\"{'dizabled': disable}\">\n  <div [ngClass]=\"{'chk-checked' : value}\" ng-style=\"chkstyle\" class=\"chk-area\">\n    <span></span>\n  </div>\n  \n  <label *ngIf=\"label && label.length > 0\" class=\"checkbox-label\">{{label}}</label>\n  <label *ngIf=\"localizeLabelKey && localizeLabelKey.length > 0\" class=\"checkbox-label\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n</div>","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    active: boolean;\n    enabled: boolean;\n}","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from \"@angular/core\";\nimport { LazyLoadEvent } from \"primeng/api\";\n\nimport { Subject } from \"rxjs\";\nimport { GenericTableColumn, GenericTableConfig, TableEvent } from \"@shared/model/generic-table\";\nimport { PageResult } from \"@shared/model/core\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"generic-table\",\n    templateUrl: \"./generic-table.component.html\",\n    styleUrls: [\"./generic-table.css\"]\n})\nexport class GenericTableComponent implements OnInit, OnDestroy {\n\n    page: PageResult<Object> = {\n        resultSet: [],\n        count: 0,\n        pageNumber: 1,\n        pageSize: 30\n    };\n\n    @Input() cols: GenericTableColumn[] = [];\n\n    @Input() pageConfig: any = null;\n\n    @Input() config: GenericTableConfig;\n\n    @Input() refresh: Subject<void>;\n\n    @Output() click = new EventEmitter<TableEvent>();\n    @Output() onFilter = new EventEmitter<LazyLoadEvent>();\n\n    loading: boolean = true;\n\n    booleanOptions: any = [];\n\n    event: LazyLoadEvent = null;\n\n    constructor(private localizationService: LocalizationService) {\n        this.booleanOptions = [\n            { label: \"\", value: null },\n            { value: true, label: this.localizationService.decode(\"change.request.boolean.option.true\") },\n            { value: false, label: this.localizationService.decode(\"change.request.boolean.option.false\") }\n        ];\n    }\n\n    ngOnInit(): void {\n        if (this.refresh != null) {\n            this.refresh.subscribe(() => {\n                if (this.event != null) {\n                    this.onPageChange(this.event);\n                }\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.refresh != null) {\n            this.refresh.unsubscribe();\n        }\n    }\n\n    onPageChange(event: LazyLoadEvent): void {\n        this.loading = true;\n        this.event = event;\n\n        setTimeout(() => {\n            this.config.service.page(event, this.pageConfig).then(page => {\n                this.page = page;\n            }).finally(() => {\n                this.loading = false;\n            });\n        }, 1000);\n    }\n\n    onClick(type: string, row: Object, col: GenericTableColumn): void {\n        this.click.emit({\n            type: type,\n            row: row,\n            col: col\n        });\n    }\n\n    onComplete(col: GenericTableColumn, event: LazyLoadEvent): void {\n        col.onComplete();\n    }\n\n    getColumnType(row: Object, col: GenericTableColumn): string {\n        if (col.columnType != null) {\n            return col.columnType(row);\n        }\n\n        return col.type;\n    }\n\n    handleFilter(event: LazyLoadEvent): void {\n        this.onFilter.emit(event);\n    }\n\n}\n","<div>\n\t<p-table #dt [columns]=\"cols\" [value]=\"page.resultSet\" [autoLayout]=\"true\" [scrollable]=\"false\"\n\t\t[resizableColumns]=\"true\" sortMode=\"multiple\" styleClass=\"p-datatable-gridlines\" [lazy]=\"true\"\n\t\t(onLazyLoad)=\"onPageChange($event)\" [paginator]=\"true\" [totalRecords]=\"page.count\" [rows]=\"page.pageSize\"\n\t\t[loading]=\"loading\" [multiSortMeta]=\"config.sort != null ? [config.sort] : []\"\n\t\t(onFilter)=\"handleFilter($event)\">\n\n\t\t<ng-template pTemplate=\"colgroup\" let-columns>\n\t\t\t<colgroup>\n\t\t\t\t<col *ngFor=\"let col of columns\">\n\t\t\t</colgroup>\n\t\t</ng-template>\n\n\t\t<ng-template pTemplate=\"header\" let-columns>\n\t\t\t<tr>\n\t\t\t\t<th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\"\n\t\t\t\t\t[ngClass]=\"{'actions-col' : col.type === 'ACTIONS'}\" pResizableColumn>\n\t\t\t\t\t{{col.header}}\n\t\t\t\t\t<p-sortIcon *ngIf=\"col.sortable\" [field]=\"col.field\" ariaLabel=\"Activate to sort\"\n\t\t\t\t\t\tstyle=\"float:right;\" ariaLabelDesc=\"Activate to sort in descending order\"\n\t\t\t\t\t\tariaLabelAsc=\"Activate to sort in ascending order\">\n\t\t\t\t\t</p-sortIcon>\n\t\t\t\t</th>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th *ngFor=\"let col of columns\" [ngSwitch]=\"col.type\">\n\t\t\t\t\t<ng-container *ngIf=\"col.filter !== false\">\n\t\t\t\t\t\t<input *ngSwitchCase=\"'URL'\" pInputText type=\"text\"\n\t\t\t\t\t\t\t(input)=\"dt.filter($event.target.value, col.field, 'contains')\">\n\t\t\t\t\t\t<input *ngSwitchCase=\"'TEXT'\" pInputText type=\"text\"\n\t\t\t\t\t\t\t(input)=\"dt.filter($event.target.value, col.field, 'contains')\">\n\t\t\t\t\t\t<input *ngSwitchCase=\"'NUMBER'\" pInputNumber type=\"number\" step=\"any\"\n\t\t\t\t\t\t\t(input)=\"dt.filter($event.target.value, col.field, 'equals')\">\n\t\t\t\t\t\t<ng-container *ngSwitchCase=\"'DATE'\">\n\t\t\t\t\t\t\t<date-field [(value)]=\"col.startDate\" [classNames]=\"'search-input'\"\n\t\t\t\t\t\t\t\t(change)=\"dt.filter({startDate:col.startDate, endDate:col.endDate}, col.field, 'between')\"\n\t\t\t\t\t\t\t\t[allowInfinity]=\"false\" [placement]=\"'bottom'\" customStyles=\"font-size: 10px;\"\n\t\t\t\t\t\t\t\t[placeholder]=\"'generic.table.to.date' | localize\">\n\t\t\t\t\t\t\t</date-field>\n\t\t\t\t\t\t\t<date-field [(value)]=\"col.endDate\" [classNames]=\"'search-input'\"\n\t\t\t\t\t\t\t\t(change)=\"dt.filter({startDate:col.startDate, endDate:col.endDate}, col.field, 'between')\"\n\t\t\t\t\t\t\t\t[allowInfinity]=\"false\" [placement]=\"'bottom'\" customStyles=\"font-size: 10px;\"\n\t\t\t\t\t\t\t\t[placeholder]=\"'generic.table.from.date' | localize\">\n\t\t\t\t\t\t\t</date-field>\n\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<p-autoComplete *ngSwitchCase=\"'AUTOCOMPLETE'\" appendTo=\"body\" [(ngModel)]=\"col.text\"\n\t\t\t\t\t\t\t[suggestions]=\"col.results\" (completeMethod)=\"onComplete(col, $event)\"\n\t\t\t\t\t\t\t(onSelect)=\"dt.filter(col.text, col.field, 'equals')\"\n\t\t\t\t\t\t\t(onClear)=\"dt.filter(col.text, col.field, 'equals')\">\n\t\t\t\t\t\t</p-autoComplete>\n\t\t\t\t\t\t<p-dropdown *ngSwitchCase=\"'BOOLEAN'\" appendTo=\"body\" [options]=\"booleanOptions\"\n\t\t\t\t\t\t\t(onChange)=\"dt.filter($event.value.value, col.field, 'equals')\" optionLabel=\"label\"\n\t\t\t\t\t\t\toptionValue=\"value\" [virtualScroll]=\"true\"></p-dropdown>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</th>\n\t\t\t</tr>\n\t\t</ng-template>\n\n\t\t<ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n\t\t\t<tr>\n\t\t\t\t<td *ngFor=\"let col of columns\" [ngSwitch]=\"getColumnType(rowData, col)\" class=\"ui-resizable-column\"\n\t\t\t\t\t[ngClass]=\"{'actions-col' : col.type === 'ACTIONS'}\">\n\t\t\t\t\t<ng-container *ngSwitchCase=\"'URL'\">\n\t\t\t\t\t\t<a [routerLink]=\"['/' + col.baseUrl + '/' + rowData[col.urlField]]\">\n\t\t\t\t\t\t\t{{rowData[col.field]}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngSwitchCase=\"'ACTIONS'\">\n\t\t\t\t\t\t<a *ngIf=\"config.view\" class=\"fa fa-eye ico-edit\" (click)=\"onClick('view', rowData, col)\"\n\t\t\t\t\t\t\t[title]=\"'View ' + config.label\"></a>\n\t\t\t\t\t\t<a *ngIf=\"config.edit\" class=\"fa fa-pencil-alt ico-edit\" (click)=\"onClick('edit', rowData, col)\"\n\t\t\t\t\t\t\t[title]=\"'Edit ' + config.label\"></a>\n\t\t\t\t\t\t<a *ngIf=\"config.remove\" class=\"fa fa-trash-alt ico-remove\"\n\t\t\t\t\t\t\t(click)=\"onClick('remove', rowData, col)\" [title]=\"'Remove ' + config.label\"></a>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngSwitchCase=\"'CONSTANT'\">\n\t\t\t\t\t\t<a *ngIf=\"rowData[col.field] != null\" (click)=\"onClick('custom', rowData, col)\">\n\t\t\t\t\t\t\t{{col.text}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngSwitchCase=\"'BOOLEAN'\">\n\t\t\t\t\t\t<localize *ngIf=\"rowData[col.field] === true\" key=\"change.request.boolean.option.true\">\n\t\t\t\t\t\t</localize>\n\t\t\t\t\t\t<localize *ngIf=\"rowData[col.field] === false\" key=\"change.request.boolean.option.false\">\n\t\t\t\t\t\t</localize>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngSwitchCase=\"'NONE'\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngSwitchCase=\"'DATE'\">\n\t\t\t\t\t\t<date-text [date]=\"rowData[col.field]\"></date-text>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngSwitchDefault>\n\t\t\t\t\t\t{{rowData[col.field]}}\n\t\t\t\t\t</ng-container>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</ng-template>\n\t\t<!-- \t\t<ng-template pTemplate=\"paginatorleft\"> -->\n\t\t<!-- \t\t\t<p-button *ngIf=\"config.create\" type=\"button\" icon=\"pi pi-plus\" [style]=\"{'border':'solid 1px'}\" -->\n\t\t<!-- \t\t\t\tstyleClass=\"p-button-text\" [label]=\"'Add new ' + config.label\" (click)=\"onClick('create', null, null)\"> -->\n\t\t<!-- \t\t\t</p-button> -->\n\t\t<!-- \t\t</ng-template> -->\n\t</p-table>\n\n\t<div style=\"width:100%;text-align:right;\">\n\t\t<button *ngIf=\"config.create\" (click)=\"onClick('create', null, null)\" style=\"margin: 10px 0 0;\"\n\t\t\tclass=\"btn btn-primary\">Add new {{config.label}}</button>\n\t</div>\n\n</div>","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n    selector: \"[OnlyNumber]\"\n})\nexport class OnlyNumber {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private el: ElementRef) { }\n\n    @Input() OnlyNumber: boolean;\n\n    @HostListener(\"keydown\", [\"$event\"]) onKeyDown(event: any) {\n        let e = <KeyboardEvent>event;\n        if (this.OnlyNumber) {\n            if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n                // Allow: Ctrl+A\n                (e.keyCode === 65 && e.ctrlKey === true) ||\n                // Allow: Ctrl+C\n                (e.keyCode === 67 && e.ctrlKey === true) ||\n                // Allow: Ctrl+X\n                (e.keyCode === 88 && e.ctrlKey === true) ||\n                // Allow: home, end, left, right\n                (e.keyCode >= 35 && e.keyCode <= 39)) {\n                // let it happen, don't do anything\n                return;\n            }\n            // Ensure that it is a number and stop the keypress\n            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n                e.preventDefault();\n            }\n        }\n    }\n\n}\n","import { Directive, Input } from \"@angular/core\";\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup } from \"@angular/forms\";\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        // return null if controls haven't initialised yet\n        if (!control || !matchingControl) {\n            return null;\n        }\n\n        // return null if another validator has already found an error on the matchingControl\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            return null;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    };\n}\n\n@Directive({\n    selector: \"[mustMatch]\",\n    providers: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\n})\nexport class MustMatchDirective implements Validator {\n\n    @Input(\"mustMatch\") mustMatch: string[] = [];\n\n    validate(formGroup: FormGroup): ValidationErrors {\n        return MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\n    }\n\n}\n","/* eslint-disable padded-blocks */\nexport class Profile {\n    oid: string;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    changePassword?: boolean;\n    phoneNumber?: string;\n    altFirstName?: string;\n    altLastName?: string;\n    altPhoneNumber?: string;\n    position?: string;\n    department?: string;\n    externalSystemOid?: string;\n}","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { formatNumber, ParsedNumber } from \"libphonenumber-js\";\n\n@Pipe({\n    name: \"phone\"\n})\nexport class PhonePipe implements PipeTransform {\n\n    transform(value: ParsedNumber, args?: string): any {\n        if (!value) {\n            return value;\n        }\n\n        return formatNumber({ country: \"US\", phone: value.toString() }, \"International\");\n    }\n\n}\n","import { PageResult } from \"./core\";\n\nexport interface GenericTableService {\n    page(criteria: Object, pageConfig?: any): Promise<PageResult<Object>>;\n}\n\nexport class GenericTableConfig {\n\n    service: GenericTableService;\n    remove: boolean;\n    view?: boolean;\n    edit?: boolean;\n    create?: boolean;\n    label: string;\n    sort?: { field: string, order: number };\n\n}\n\nexport class GenericTableColumn {\n\n    header: string;\n    type: string;\n    sortable: boolean;\n    field?: string;\n    baseUrl?: string;\n    urlField?: string;\n    text?: string\n    filter?: boolean;\n    columnType?: Function;\n    onComplete?: Function;\n    results?: any[];\n\n}\n\nexport class TableEvent {\n\n    type: string;\n    row?: Object;\n    col?: GenericTableColumn;\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { CgrAppModule } from './app/cgr-app.module';\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(CgrAppModule)\n  .then(success => console.log('Bootstrap success'))\n  .catch(error => console.log(error));\n\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { TreeModule } from \"@circlon/angular-tree-component\";\nimport { ContextMenuModule } from \"ngx-contextmenu\";\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\nimport { ButtonsModule } from \"ngx-bootstrap/buttons\";\nimport { TypeaheadModule } from \"ngx-bootstrap/typeahead\";\nimport { FileUploadModule } from \"ng2-file-upload\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { ProgressbarModule } from \"ngx-bootstrap/progressbar\";\nimport { CollapseModule } from \"ngx-bootstrap/collapse\";\nimport { TabsModule } from \"ngx-bootstrap/tabs\";\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { CgrAppComponent } from \"./cgr-app.component\";\nimport { CgrAppRoutingModule, routedComponents } from \"./cgr-app-routing.module\";\n\nimport { LoginComponent } from \"@core/component/login/login.component\";\nimport { LoginHeaderComponent } from \"@core/component/login/login-header.component\";\nimport { HubComponent } from \"@core/component/hub/hub.component\";\nimport { ForgotPasswordComponent } from \"@core/component/forgotpassword/forgotpassword.component\";\nimport { ForgotPasswordCompleteComponent } from \"@core/component/forgotpassword-complete/forgotpassword-complete.component\";\n\nimport { HttpErrorInterceptor } from \"@core/service/http-error.interceptor\";\n\nimport { ForgotPasswordService } from \"@core/service/forgotpassword.service\";\nimport { PasswordStrengthBarComponent } from \"@shared/component/password-strength-bar/password-strength-bar.component\";\nimport { HubService } from \"@core/service/hub.service\";\n\nimport { SharedModule } from \"@shared/shared.module\";\n\nimport \"./rxjs-extensions\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        CgrAppRoutingModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        //        ModalModule.forRoot(),\n        TreeModule,\n        ContextMenuModule.forRoot(),\n        BsDropdownModule.forRoot(),\n        ButtonsModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        ProgressbarModule.forRoot(),\n        CollapseModule.forRoot(),\n        TabsModule.forRoot(),\n        NgxPaginationModule,\n        BrowserAnimationsModule,\n        SharedModule.forRoot(),\n        BsDatepickerModule.forRoot()\n    ],\n    declarations: [\n        CgrAppComponent,\n        LoginComponent,\n        LoginHeaderComponent,\n        HubComponent,\n        ForgotPasswordComponent,\n        ForgotPasswordCompleteComponent,\n\n        // Routing components\n        routedComponents\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpErrorInterceptor,\n            multi: true\n        },\n        ForgotPasswordService,\n        PasswordStrengthBarComponent,\n        HubService\n    ],\n    exports: [\n        CgrAppComponent\n    ],\n    bootstrap: [CgrAppComponent],\n    entryComponents: [\n    ]\n})\nexport class CgrAppModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n\n    selector: \"cgr-app\",\n    templateUrl: \"./cgr-app.component.html\",\n    styleUrls: []\n})\nexport class CgrAppComponent {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor() { }\n\n}\n","<div id=\"innerFrameHtml\">        \n\n  <!-- MAIN CONTENT AND INJECTED VIEWS -->\n  <div id=\"main\">\n    <router-outlet></router-outlet>\n  </div>\n  \n</div>","import { NgModule } from \"@angular/core\";\nimport { LocationStrategy, HashLocationStrategy } from \"@angular/common\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { LoginComponent } from \"./core/component/login/login.component\";\nimport { HubComponent } from \"./core/component/hub/hub.component\";\nimport { ForgotPasswordComponent } from \"./core/component/forgotpassword/forgotpassword.component\";\nimport { ForgotPasswordCompleteComponent } from \"./core/component/forgotpassword-complete/forgotpassword-complete.component\";\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from \"./shared/service/guard.service\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        redirectTo: \"/menu\",\n        pathMatch: \"full\"\n    },\n    {\n        path: \"login\",\n        component: LoginComponent,\n        data: { title: \"login.title\" }\n    },\n    {\n        path: \"login/:errorMsg\",\n        component: LoginComponent,\n        data: { title: \"login.title\" }\n    },\n    {\n        path: \"menu\",\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: \"login.header\" }\n    },\n    {\n        path: \"menu/:value\",\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: \"login.header\" }\n    },\n    {\n        path: \"forgotpassword\",\n        component: ForgotPasswordComponent,\n        data: { title: \"useraccounts.title\" }\n    },\n    {\n        path: \"forgotpassword-complete/:token\",\n        component: ForgotPasswordCompleteComponent\n    },\n    {\n        path: \"admin\",\n        loadChildren: \"./admin/admin.module#AdminModule\"\n    },\n    {\n        path: \"registry\",\n        loadChildren: \"./registry/registry.module#RegistryModule\"\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n        AdminGuard,\n        MaintainerGuard,\n        ContributerGuard\n    ]\n})\nexport class CgrAppRoutingModule { }\n\nexport const routedComponents: any = [LoginComponent, HubComponent, ForgotPasswordComponent, ForgotPasswordCompleteComponent];\n","import { Injectable } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpResponse,\n    HttpResponseBase,    \n    HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { GeoRegistryConfiguration } from \"@core/model/registry\"; declare let registry: GeoRegistryConfiguration;\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n    intercept( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\n\n        return next.handle( request ).pipe(tap(( event: HttpEvent<any> ) => {\n            if ( event instanceof HttpResponseBase ) {\n                const response = event as HttpResponseBase;\n                if ( response.status === 302 ) {\n                    window.location.href = registry.contextPath + '/cgr/manage#/login';\n                    return;\n                }\n            }\n        }, ( err: any ) => {\n            if ( err instanceof HttpErrorResponse ) {\n                if ( err.status === 401 || err.status === 403 ) {\n                    // redirect to the login route\n                    // or show a modal\n                    window.location.href = registry.contextPath + '/cgr/manage#/login';\n                }\n            }\n        } ));\n    }\n}","import { Input, Component, OnInit } from \"@angular/core\";\n\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n\n    selector: \"localize\",\n    templateUrl: \"./localize.component.html\",\n    styleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n\n    @Input() key: string;\n    @Input() params: { [key: string]: string } = null;\n\n    text: string;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: LocalizationService) { }\n\n    ngOnInit(): void {\n        this.text = this.service.decode(this.key);\n\n        if (this.params != null) {\n            const keys = Object.keys(this.params);\n\n            keys.forEach((key) => {\n                if (this.params[key] != null) {\n                    this.text = this.text.replace(key, this.params[key]);\n                }\n            });\n        }\n    }\n\n}\n","<span [innerHtml]=\"text\"></span>"],"sourceRoot":""}