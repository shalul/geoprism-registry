{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/shared/component/index.ts","webpack:///./src/app/shared/service/date.service.ts","webpack:///./src/app/shared/pipe/localize.pipe.ts","webpack:///./src/app/shared/service/localization.service.ts","webpack:///./src/app/shared/service/event.service.ts","webpack:///./src/app/core/service/forgotpassword.service.ts","webpack:///./src/app/shared/component/header/header.component.ts","webpack:///./src/app/shared/component/header/header.component.html","webpack:///./src/app/shared/service/guard.service.ts","webpack:///./src/app/shared/component/profile/profile.component.ts","webpack:///./src/app/shared/component/profile/profile.component.html","webpack:///./src/app/shared/model/core.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.html","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.ts","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.html","webpack:///./src/app/shared/service/external-system.service.ts","webpack:///./src/app/shared/service/modal-step-indicator.service.ts","webpack:///./src/app/shared/service/organization.service.ts","webpack:///./src/app/shared/service/index.ts","webpack:///./src/app/shared/service/pending-changes-guard.ts","webpack:///./src/app/shared/service/profile.service.ts","webpack:///./src/app/shared/service/progress.service.ts","webpack:///./src/app/shared/service/session.service.ts","webpack:///./src/app/shared/component/message/error-message.component.ts","webpack:///./src/app/shared/component/message/error-message.component.html","webpack:///./src/app/shared/component/modals/confirm-modal.component.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.html","webpack:///./src/app/shared/component/modals/error-modal.component.ts","webpack:///./src/app/shared/component/modals/error-modal.component.html","webpack:///./src/app/shared/component/modals/success-modal.component.ts","webpack:///./src/app/shared/component/modals/success-modal.component.html","webpack:///./src/app/shared/component/modals/generic-modal.component.ts","webpack:///./src/app/shared/component/modals/generic-modal.component.html","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/core/component/login/login.component.ts","webpack:///./src/app/core/component/login/login.component.html","webpack:///./src/app/core/component/hub/hub.component.ts","webpack:///./src/app/core/component/hub/hub.component.html","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.html","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.ts","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.html","webpack:///./src/app/registry/model/registry.ts","webpack:///./src/app/shared/component/error-handler/error-handler.ts","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/core/component/login/login-header.component.ts","webpack:///./src/app/core/component/login/login-header.component.html","webpack:///./src/app/registry/model/constants.ts","webpack:///./src/app/shared/component/localize/convert-key-label.component.ts","webpack:///./src/app/shared/component/localize/convert-key-label.component.html","webpack:///./src/app/shared/model/modal.ts","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.ts","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.html","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.html","webpack:///./src/app/registry/service/geometry.service.ts","webpack:///./src/app/shared/directive/number-only.directive.ts","webpack:///./src/app/shared/directive/must-match.directive.ts","webpack:///./src/app/shared/model/profile.ts","webpack:///./src/app/shared/pipe/phone.pipe.ts","webpack:///./src/main.ts","webpack:///./src/app/cgr-app.module.ts","webpack:///./src/app/cgr-app.component.ts","webpack:///./src/app/cgr-app.component.html","webpack:///./src/app/cgr-app-routing.module.ts","webpack:///./src/app/core/service/http-error.interceptor.ts","webpack:///./src/app/shared/component/localize/localize.component.ts","webpack:///./src/app/shared/component/localize/localize.component.html","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.html","webpack:///./src/app/shared/service/auth.service.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.html","webpack:///./src/app/core/service/hub.service.ts","webpack:///./src/app/shared/component/message/message.component.ts","webpack:///./src/app/shared/component/message/message.component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","components","ErrorHandler","CgrHeaderComponent","LoadingBarComponent","LocalizeComponent","ErrorMessageComponent","MessageComponent","ConfirmModalComponent","GenericModalComponent","ErrorModalComponent","ModalStepIndicatorComponent","SuccessModalComponent","PasswordStrengthBarComponent","ProfileComponent","ProgressBarComponent","localizationService","overlapMessage","severity","this","decode","ConflictType","TIME_RANGE","mergeContiguousMessage","gapMessage","outsideExistsMessage","OUTSIDE_EXISTS","getPresentDate","Date","formatDateForDisplay","date","PRESENT","localize","getDateString","split","getDateFromDateString","year","getFullYear","month","getMonth","dt","getDate","checkRanges","attributeType","ranges","hasConflict","forEach","attr","conflictMessage","filtered","filter","range","diff","action","h1","startDate","endDate","s1","e1","dateEndBeforeStart","h2","s2","e2","dateRangeOverlaps","getTime","addDay","areValuesEqual","sort","current","next","hasGap","checkExistRanges","existEntries","filteredExists","inRange","dateRangeOutside","amount","plus1","setDate","votArr","a","b","validateDate","required","allowFutureDates","valid","today","isNaN","DateService","Injectable","service","transform","LocalizePipe","Pipe","locales","parser","Globalize","numberParser","formatter","numberFormatter","registry","locale","addLocale","exists","tag","setLocales","getLocale","getLocales","localizedValue","localeValues","toString","remove","log","parseNumber","formatNumber","number","Number","bundle","com","runwaysdk","Localize","index","lastIndexOf","temp","LocalizationService","listeners","registerListener","listener","deregisterListener","indexOfItem","indexOf","start","complete","EventService","http","eventService","submit","username","headers","HttpHeaders","post","acp","JSON","stringify","pipe","finalize","toPromise","newPassword","token","ForgotPasswordService","modalService","profileService","loggedIn","context","isAdmin","isMaintainer","isContributor","isContributer","defaultLocaleView","found","shouldShowMenuItem","item","hasExactRole","RegistryRoleType","SRA","RA","RM","RC","logout","sessionStorage","removeItem","location","href","getUsername","setLocale","then","reload","account","profile","bsModalRef","show","backdrop","class","content","Component","selector","templateUrl","styleUrls","Input","router","canActivate","route","state","navigate","AdminGuard","MaintainerGuard","ContributerGuard","isLoggedIn","AuthGuard","authService","_profile","oid","password","firstName","lastName","email","changePassword","roles","getRoles","getRolesForUser","onSubmit","hide","onChangePassword","getRolesArray","cancel","unlock","styles","LocaleValue","lService","label","isDefaultLocale","language","code","country","variant","LocaleView","Organization","ExternalSystem","OAuthServer","PageResult","getValue","localeToString","len","lv","populate","lv1","lv2","lv2lv","lv1lv","parse","LocalizedValue","buildFromRoleName","roleName","RegistryRole","roleSplit","orgCode","roleSuffix","gotCode","AC","RoleBuilder","geoObjectTypeCode","modalStepIndicatorService","stepSubscription","modalStepChange","subscribe","stepConfig","ngOnInit","ngOnDestroy","unsubscribe","showIndicator","prog","total","description","progress","getExternalSystems","pageNumber","pageSize","params","HttpParams","set","getExternalSystem","applyExternalSystem","system","getSystemCapabilities","removeExternalSystem","ExternalSystemService","modalStepChangedSource","Subject","asObservable","getStepConfig","setStepConfig","config","getStep","step","setStep","ModalStepIndicatorService","getOrganizations","updateOrganization","json","newOrganization","removeOrganization","OrganizationService","services","AuthService","PendingChangesGuard","ProfileService","ProgressService","SessionService","canDeactivate","component","confirmRet","confirm","afterDeactivate","userOID","login","logInResponse","afterLogIn","response","afterLogOut","localizeService","submitText","cancelText","ModalTypes","warning","onConfirm","onCancel","GenericButton","buttons","init","onClick","button","shouldClose","map","webpackAsyncContext","req","ids","id","keys","hService","oauthServers","viewOauthServers","oauthGetPublic","catch","sub","decodedError","replaceAll","onClickDhis2","url","applications","open","application","showErrorAsDialog","LoginComponent","tasks","buckets","loading","HubComponent","emailIsSent","getMessageFromError","ForgotPasswordComponent","passwordStrengthBarComponent","passwordIsReset","ForgotPasswordCompleteComponent","TreeEntity","children","addChild","term","Term","GeoObject","attributes","getAttribute","getGeoObjectTypeTermAttributeOptions","geoObjectType","termAttributeCode","attrOpts","rootTerm","removeStatuses","GeoObjectType","Task","getVotAtDate","attrCode","retVot","time","isChangeOverTime","values","vot","Array","isArray","GeoObjectOverTime","ConflictMessage","ValueOverTime","AttributeOverTime","isDefault","unique","AttributeType","isChange","termOptions","setRootTerm","AttributeTermType","precision","scale","AttributeDecimalType","TreeNode","ChildTreeNode","ParentTreeNode","ManageGeoObjectTypeModalState","PaginationPage","AbstractScheduledJob","ScheduledJob","ScheduledJobOverview","ImportError","ServerException","ServerExceptionAttribute","ImportErrorObject","StepConfig","Step","MasterList","MasterListVersion","HierarchyOverTime","HierarchyOverTimeEntry","HierarchyOverTimeEntryParent","MasterListByOrg","SynchronizationConfig","OrgSyncInfo","ExportScheduledJob","ContextLayer","ContextLayerGroup","unspecified","msg","localizedMessage","includes","HttpErrorResponse","status","arr","newArray","formatDateString","dateObj","day","getUTCDate","getUTCMonth","getUTCFullYear","aStart","aEnd","bStart","bEnd","end","val1","val2","parseInt","localeValue","getValueAtLocale","parents","entries","parentData","parentData2","geoObject","properties","parseFloat","forRoot","ngModule","SharedModule","providers","CookieService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","ModalModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","CollapseModule","NgxPaginationModule","BsDatepickerModule","ConvertKeyLabel","BooleanFieldComponent","DateFieldComponent","OnlyNumber","MustMatchDirective","PhonePipe","NgModule","imports","declarations","entryComponents","hubService","LoginHeaderComponent","ActionTypes","GovernanceStatus","GeoObjectTypeModalStates","ImportStrategy","LayerColor","text","bsDatepickerConfig","changeDetectorRef","dateService","allowInfinity","inputName","idGenerator","classNames","customStyles","localizeLabelKey","disable","placement","oldDate","valueChange","EventEmitter","change","returnFocusToInput","valueIsPresent","validChange","dateInputFormat","setValue","_value","setInvalid","S4","Math","random","substring","isEqual","date1","date2","toggleInfinity","emit","toggle","validity","formattedDate","BsDatepickerDirective","datepicker","ViewChild","static","Output","layers","editingControl","simpleEditControl","geometryChange","onbeforeunload","destroy","initialize","geometryType","readOnly","addLayers","on","saveEdits","destroyMap","removeControl","removeLayers","layer","isEditing","isRendering","editingLayer","startEditing","stopEditing","enableEditing","addEditingLayers","rerender","deleteAll","setPointCoordinates","lat","long","features","geometry","coordinates","changeMode","featureIds","isValid","getAll","geoJson","getDrawGeometry","editPropagator","setEditing","setRendering","addLayer","newLayer","existingIndex","findIndex","findLayer","zindex","getLayers","getRenderedLayers","setLayers","controls","point","line_string","polygon","trash","combine_features","uncombine_features","userProperties","paint","getSource","addControl","add","removeSource","prefix","sourceName","getLayer","removeLayer","renderGeometryAsLayer","geojson","color","finalSourceName","addSource","source","layout","setData","featureCollection","polygons","feature","points","lines","createEmptyGeometryValue","zoomToLayersExtent","coords","LngLatBounds","coord","extend","center","getCenter","pt","LngLat","lng","flyTo","zoom","essential","polys","subpoly","fitBounds","padding","subline","GeometryService","el","onKeyDown","keyCode","ctrlKey","shiftKey","preventDefault","Directive","HostListener","MustMatch","controlName","matchingControlName","formGroup","control","matchingControl","errors","mustMatch","setErrors","validate","provide","NG_VALIDATORS","useExisting","multi","Profile","args","phone","process","env","ENV","enableProdMode","platformBrowser","bootstrapModule","success","CgrAppModule","CgrAppComponent","HTTP_INTERCEPTORS","useClass","HttpErrorInterceptor","HubService","BrowserModule","HttpClientModule","CgrAppRoutingModule","TabsModule","BrowserAnimationsModule","routedComponents","bootstrap","routes","path","redirectTo","pathMatch","title","loadChildren","LocationStrategy","HashLocationStrategy","intercept","handle","tap","HttpResponseBase","replace","user","userName","roleDisplayLabels","version","installedLocales","cookie","check","cookieData","cookieDataJSON","buildFromCookieJson","loadLocales","buildRolesFromCookie","role","storageLocales","getItem","setItem","removeUser","isSRA","isRA","isRM","isRC","isContributerOnly","roleType","isOrganizationRA","isGeoObjectTypeRM","isGeoObjectTypeOrSuperRM","got","allowRoleSuper","organizationCode","superTypeCode","isGeoObjectTypeRC","isGeoObjectTypeOrSuperRC","isRCOnly","getMyOrganizations","orgCodes","__getRoleFromRoleName","nameArr","getRoleDisplayLabelsArray","getRoleDisplayLabels","str","displayLabel","getVersion","removeLocale","colors","measureStrength","pass","score","letters","variations","digits","test","lower","upper","nonWords","variationCount","trunc","getColor","idx","col","ngOnChanges","changes","currentValue","setBarColors","count","_n","passwordToCheck","onError","onMessage"],"mappings":"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A,6BAGA,6BAGA,6BAGF,kB,uBA7BO,+DAGA,+DAGA,+DAIA,8DAGA,8DAGA,8DAIA,kFAGA,kFAGA,mF,0GA7PrB,0BACE,yBAEA,+BAA+E,kIAC7E,+BACE,4BACE,yBACE,4BACF,iBACF,iBAEA,4BACE,4BACE,6BACE,6BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,8GAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,iHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,mHAAnB,iBACF,iBACF,iBACF,iBAGF,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,mCAAmB,0GAAnB,iBACF,iBACA,gCAGF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,+GAAnB,iBACF,iBACF,iBACF,iBAGF,6BACE,0BACE,8BACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBAEA,gCAaA,gCAaA,gCAkCA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BAEE,gCACE,6BACE,0BACI,0BAAI,8BAA4D,iBAChE,0BAAI,8BAAoE,iBACxE,0BAAI,8BAAqE,iBAC7E,iBACF,iBACA,8B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","file":"cgr-app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"cgr-app\": 0,\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([336,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { ErrorHandler } from \"./error-handler/error-handler\";\nimport { CgrHeaderComponent } from \"./header/header.component\";\nimport { LoadingBarComponent } from \"./loading-bar/loading-bar.component\";\nimport { LocalizeComponent } from \"./localize/localize.component\";\nimport { ErrorMessageComponent } from \"./message/error-message.component\";\nimport { MessageComponent } from \"./message/message.component\";\nimport { ConfirmModalComponent } from \"./modals/confirm-modal.component\";\nimport { ErrorModalComponent } from \"./modals/error-modal.component\";\nimport { ModalStepIndicatorComponent } from \"./modals/modal-step-indicator.component\";\nimport { SuccessModalComponent } from \"./modals/success-modal.component\";\nimport { PasswordStrengthBarComponent } from \"./password-strength-bar/password-strength-bar.component\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { ProgressBarComponent } from \"./progress-bar/progress-bar.component\";\nimport { GenericModalComponent } from \"./modals/generic-modal.component\";\n\nexport const components: any[] = [\n    ErrorHandler,\n    CgrHeaderComponent,\n    LoadingBarComponent,\n    LocalizeComponent,\n    ErrorMessageComponent,\n    MessageComponent,\n    ConfirmModalComponent,\n    GenericModalComponent,\n    ErrorModalComponent,\n    ModalStepIndicatorComponent,\n    SuccessModalComponent,\n    PasswordStrengthBarComponent,\n    ProfileComponent,\n    ProgressBarComponent\n];\n\nexport * from \"./error-handler/error-handler\";\nexport * from \"./header/header.component\";\nexport * from \"./loading-bar/loading-bar.component\";\nexport * from \"./localize/localize.component\";\nexport * from \"./message/error-message.component\";\nexport * from \"./message/message.component\";\nexport * from \"./modals/confirm-modal.component\";\nexport * from \"./modals/generic-modal.component\";\nexport * from \"./modals/error-modal.component\";\nexport * from \"./modals/modal-step-indicator.component\";\nexport * from \"./modals/success-modal.component\";\nexport * from \"./password-strength-bar/password-strength-bar.component\";\nexport * from \"./profile/profile.component\";\nexport * from \"./progress-bar/progress-bar.component\";\n","import { Injectable } from \"@angular/core\";\nimport { LocalizationService } from \"./localization.service\";\nimport Utils from \"../../registry/utility/Utils\";\nimport { PRESENT, ConflictMessage, TimeRangeEntry, AttributeType } from \"@registry/model/registry\";\nimport { SummaryKey } from \"@registry/model/crtable\";\nimport { ConflictType } from \"@registry/model/constants\";\nimport { ValueOverTimeCREditor } from \"@registry/component/geoobject-shared-attribute-editor/ValueOverTimeCREditor\";\n\n@Injectable()\nexport class DateService {\n\n    overlapMessage: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"manage.versions.overlap.message\"),\n        type: ConflictType.TIME_RANGE\n    }\n\n    mergeContiguousMessage: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"manage.versions.mergeContiguousRanges.message\"),\n        type: ConflictType.TIME_RANGE\n    }\n\n    gapMessage: ConflictMessage = {\n        severity: \"WARNING\",\n        message: this.localizationService.decode(\"manage.versions.gap.message\"),\n        type: ConflictType.TIME_RANGE\n    }\n\n    outsideExistsMessage: ConflictMessage = {\n        severity: \"ERROR\",\n        message: this.localizationService.decode(\"manage.versions.outsideExists.message\"),\n        type: ConflictType.OUTSIDE_EXISTS\n    }\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private localizationService: LocalizationService) { }\n\n    // Get infinity date (called 'present' in the UI)\n    public getPresentDate(): Date {\n        // NOTE: Month is 0 indexed so 11 = December\n        let dt = new Date(5000, 11, 31, 0, 0, 0);\n\n        return dt;\n    }\n\n    public formatDateForDisplay(date: string | Date): string {\n        if (!date) {\n            return \"\";\n        }\n\n        if (date === PRESENT) {\n            return this.localizationService.localize(\"changeovertime\", \"present\");\n        }\n\n        if (date instanceof Date) {\n            return this.getDateString(date);\n        } else {\n            return date.split(\"T\")[0];\n        }\n    }\n\n    // @param value as yyyy-mm-dd\n    getDateFromDateString(value: string) {\n        return new Date(+value.split(\"-\")[0], +value.split(\"-\")[1] - 1, +value.split(\"-\")[2]);\n    }\n\n    getDateString(date: Date): string {\n        if (date instanceof Date) {\n            let year = date.getFullYear();\n            let month: number | string = date.getMonth() + 1;\n            let dt: number | string = date.getDate();\n\n            if (dt < 10) {\n                dt = \"0\" + dt;\n            }\n            if (month < 10) {\n                month = \"0\" + month;\n            }\n\n            return year + \"-\" + month + \"-\" + dt;\n        }\n\n        return null;\n    }\n\n    checkRanges(attributeType: AttributeType, ranges: ValueOverTimeCREditor[]): boolean {\n        let hasConflict = false;\n\n        // clear all messages\n        ranges.forEach(attr => {\n            if (!attr.conflictMessage) {\n                attr.conflictMessage = [];\n            }\n\n            for (let i = attr.conflictMessage.length - 1; i >= 0; --i) {\n                if (attr.conflictMessage[i].type === ConflictType.TIME_RANGE) {\n                    attr.conflictMessage.splice(i, 1);\n                }\n            }\n        });\n\n        // Filter DELETE entries from consideration\n        const filtered: ValueOverTimeCREditor[] = ranges.filter(range => range.diff == null || range.diff.action !== \"DELETE\");\n\n        // Check for overlaps\n        for (let j = 0; j < filtered.length; j++) {\n            const h1: ValueOverTimeCREditor = filtered[j];\n\n            if (h1.startDate && h1.endDate) {\n                let s1: any = this.getDateFromDateString(h1.startDate);\n                let e1: any = this.getDateFromDateString(h1.endDate);\n\n                if (Utils.dateEndBeforeStart(s1, e1)) {\n                    h1.conflictMessage.push({\n                        severity: \"ERROR\",\n                        message: this.localizationService.decode(\"manage.versions.startdate.later.enddate.message\"),\n                        type: ConflictType.TIME_RANGE\n                    } as ConflictMessage);\n\n                    hasConflict = true;\n                }\n\n                for (let i = 0; i < filtered.length; i++) {\n                    if (j !== i) {\n                        const h2: ValueOverTimeCREditor = filtered[i];\n\n                        // If all dates set\n                        if (h2.startDate && h2.endDate) {\n                            let s2: Date = this.getDateFromDateString(h2.startDate);\n                            let e2: Date = this.getDateFromDateString(h2.endDate);\n\n                            // Determine if there is an overlap\n                            if (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n                                h1.conflictMessage.push(this.overlapMessage);\n\n                                if (s2.getTime() === e2.getTime()) {\n                                    h2.conflictMessage.push(this.overlapMessage);\n                                }\n\n                                hasConflict = true;\n                            } else if (this.addDay(1, h1.endDate) === h2.startDate && Utils.areValuesEqual(attributeType, h1.value, h2.value)) {\n                                h1.conflictMessage.push(this.mergeContiguousMessage);\n                                h2.conflictMessage.push(this.mergeContiguousMessage);\n                                hasConflict = true;\n                            }\n                        } else if ((i === j - 1 || i === j + 1) && e1 && h2.startDate) {\n                            // If 1st end date and current start date\n\n                            let s2: Date = this.getDateFromDateString(h2.startDate);\n\n                            if (s2.getTime() <= e1) {\n                                h1.conflictMessage.push(this.overlapMessage);\n                                h2.conflictMessage.push(this.overlapMessage);\n\n                                hasConflict = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.sort(filtered);\n\n        // Check for gaps\n        let current = null;\n        for (let j = 0; j < filtered.length; j++) {\n            let next = filtered[j];\n\n            if (j > 0) {\n                if (current.endDate && next.startDate) {\n                    let e1: any = new Date(current.endDate);\n                    let s2: any = new Date(next.startDate);\n\n                    if (Utils.hasGap(e1.getTime(), s2.getTime())) {\n                        next.conflictMessage.push(this.gapMessage);\n\n                        current.conflictMessage.push(this.gapMessage);\n                    }\n                }\n            }\n\n            current = next;\n        }\n\n        this.sort(ranges);\n\n        return hasConflict;\n    }\n\n    checkExistRanges(ranges: ValueOverTimeCREditor[], existEntries: ValueOverTimeCREditor[]): boolean {\n        let hasConflict = false;\n\n        // clear all messages\n        ranges.forEach(range => {\n            if (!range.conflictMessage) {\n                range.conflictMessage = [];\n            }\n\n            for (let i = range.conflictMessage.length - 1; i >= 0; --i) {\n                if (range.conflictMessage[i].type === ConflictType.OUTSIDE_EXISTS) {\n                    range.conflictMessage.splice(i, 1);\n                }\n            }\n        });\n\n        // Filter DELETE entries from consideration\n        const filtered: ValueOverTimeCREditor[] = ranges.filter(range => range.diff == null || range.diff.action !== \"DELETE\");\n\n        const filteredExists = existEntries.filter(range => range.diff == null || range.diff.action !== \"DELETE\");\n\n        // Check for outside exists range\n        for (let j = 0; j < filtered.length; j++) {\n            const h1 = filtered[j];\n\n            if (h1.startDate && h1.endDate) {\n                let s1: any = this.getDateFromDateString(h1.startDate);\n                let e1: any = this.getDateFromDateString(h1.endDate);\n\n                let inRange = false;\n\n                for (let i = 0; i < filteredExists.length; i++) {\n                    const h2 = filteredExists[i];\n\n                    // If all dates set\n                    if (h2.value && h2.startDate && h2.endDate) {\n                        let s2: Date = this.getDateFromDateString(h2.startDate);\n                        let e2: Date = this.getDateFromDateString(h2.endDate);\n\n                        if (!Utils.dateRangeOutside(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n                            inRange = true;\n                        }\n                    }\n                }\n\n                if (!inRange) {\n                    h1.conflictMessage.push(this.outsideExistsMessage);\n                    hasConflict = true;\n                }\n            }\n        }\n\n        return hasConflict;\n    }\n\n    public addDay(amount: number, date: string): string {\n        var plus1: Date = this.getDateFromDateString(date);\n        plus1.setDate(plus1.getDate() + amount);\n        let splus1: string = this.getDateString(plus1);\n        return splus1;\n    }\n\n    sort(votArr: TimeRangeEntry[]): void {\n        // Sort the data by start date\n        votArr.sort(function(a, b) {\n            if (a.startDate == null || a.startDate === \"\") {\n                return 1;\n            } else if (b.startDate == null || b.startDate === \"\") {\n                return -1;\n            }\n\n            let first: any = new Date(a.startDate);\n            let next: any = new Date(b.startDate);\n            return first - next;\n        });\n    }\n\n    validateDate(date: Date, required: boolean, allowFutureDates: boolean): {message: string, valid: boolean} {\n        let valid = { message: \"\", valid: true };\n        let today: Date = new Date();\n\n        if (date != null) {\n            if (!(date instanceof Date) || (date instanceof Date && isNaN(date.getTime()))) {\n                valid.valid = false;\n                valid.message = this.localizationService.decode(\"date.inpu.data.invalid.error.message\");\n            } else if (!allowFutureDates && date > today) {\n                valid.valid = false;\n                valid.message = this.localizationService.decode(\"date.inpu.data.in.future.error.message\");\n            }\n        } else if (required) {\n            valid.valid = false;\n            valid.message = this.localizationService.decode(\"manage.versions.date.required.message\");\n        }\n\n        return valid;\n    }\n\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Pipe({ name: \"localize\" })\nexport class LocalizePipe implements PipeTransform {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: LocalizationService) { }\n\n    transform(value: string): string {\n        return this.service.decode(value);\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { LocalizedValue, LocaleView } from \"@shared/model/core\";\n\ndeclare let Globalize: any;\ndeclare let com: any;\ndeclare let registry: any;\n\n@Injectable()\nexport class LocalizationService {\n\n    locales: LocaleView[] = [];\n    locale: string;\n\n    private parser: any = Globalize.numberParser();\n    private formatter: any = Globalize.numberFormatter();\n\n    constructor() {\n        this.locales = registry.locales;\n        this.locale = registry.locale;\n    }\n\n    addLocale(locale: LocaleView): void {\n        let exists: boolean = false;\n\n        for (let i = 0; i < this.locales.length; ++i) {\n            if (this.locales[i].tag === locale.tag) {\n                exists = true;\n                this.locales[i] = locale;\n            }\n        }\n\n        if (!exists) {\n            this.locales.push(locale);\n        }\n    }\n\n    setLocales(locales: LocaleView[]): void {\n        this.locales = locales;\n    }\n\n    getLocale(): string {\n        return this.locale;\n    }\n\n    getLocales(): LocaleView[] {\n        return this.locales;\n    }\n\n    create(): LocalizedValue {\n        const value = { localizedValue: \"\", localeValues: [] } as LocalizedValue;\n\n        this.locales.forEach(locale => {\n            // if (!locale.isDefaultLocale)\n            // {\n            value.localeValues.push({ locale: locale.toString, value: \"\" });\n            // }\n        });\n\n        return value;\n    }\n\n    remove(locale: LocaleView): void {\n        for (let i = 0; i < this.locales.length; ++i) {\n            if (this.locales[i].tag === locale.tag) {\n                this.locales.splice(i, 1);\n                return;\n            }\n        }\n\n        // eslint-disable-next-line no-console\n        console.log(\"Could not remove locale from array because we could not find it.\", locale, this.locales);\n    }\n\n    public parseNumber(value: string): number {\n        if (value != null && value.length > 0) {\n            // convert data from view format to model format\n            let number = this.parser(value);\n\n            return number;\n        }\n\n        return null;\n    }\n\n    public formatNumber(value: any): string {\n        if (value != null) {\n            let number = value;\n\n            if (typeof number === \"string\") {\n                if (number.length > 0 && Number(number)) {\n                    number = Number(value);\n                } else {\n                    return \"\";\n                }\n            }\n\n            // convert data from model format to view format\n            return this.formatter(number);\n        }\n\n        return null;\n    }\n\n    public localize(bundle: string, key: string): string {\n        return com.runwaysdk.Localize.localize(bundle, key);\n    }\n\n    public get(key: string): string {\n        return com.runwaysdk.Localize.get(key);\n    }\n\n    public decode(key: string): string {\n        let index = key.lastIndexOf(\".\");\n\n        if (index !== -1) {\n            let temp = [key.slice(0, index), key.slice(index + 1)];\n\n            return this.localize(temp[0], temp[1]);\n        } else {\n            return this.get(key);\n        }\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\ndeclare let acp;\n\nexport interface IEventListener {\n    start(): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class EventService {\n\n    private listeners: IEventListener[] = [];\n\n    public registerListener(listener: IEventListener): void {\n        this.listeners.push(listener);\n    }\n\n    public deregisterListener(listener: IEventListener): boolean {\n        let indexOfItem = this.listeners.indexOf(listener);\n\n        if (indexOfItem === -1) {\n            return false;\n        }\n\n        this.listeners.splice(indexOfItem, 1);\n\n        return true;\n    }\n\n    public start(): void {\n        for (const listener of this.listeners) {\n            listener.start();\n        }\n    }\n\n    public complete(): void {\n        for (const listener of this.listeners) {\n            listener.complete();\n        }\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ForgotPasswordService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tsubmit(username: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/initiate', JSON.stringify({ username: username }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcomplete(newPassword: string, token: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/complete', JSON.stringify({ newPassword: newPassword, token: token }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","import { Component, Input } from \"@angular/core\";\nimport { BsModalService, BsModalRef } from \"ngx-bootstrap/modal\";\n\nimport { ProfileComponent } from \"../profile/profile.component\";\n\nimport { AuthService, ProfileService, LocalizationService } from \"@shared/service\";\n\nimport { RegistryRoleType, LocaleView } from \"@shared/model/core\";\n\ndeclare let acp: string;\ndeclare let registry: any;\n\n@Component({\n\n    selector: \"cgr-header\",\n    templateUrl: \"./header.component.html\",\n    styleUrls: []\n})\nexport class CgrHeaderComponent {\n\n    context: string;\n    isAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    bsModalRef: BsModalRef;\n\n    defaultLocaleView: LocaleView;\n    locales: LocaleView[];\n    locale: string;\n\n    @Input() loggedIn: boolean = true;\n\n    constructor(\n        private modalService: BsModalService,\n        private profileService: ProfileService,\n        private service: AuthService,\n        localizationService: LocalizationService\n    ) {\n        this.context = acp;\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n        this.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n        if (localizationService.getLocales()) {\n            this.locales = localizationService.getLocales().filter(locale => locale.toString !== \"defaultLocale\");\n            this.defaultLocaleView = localizationService.getLocales().filter(locale => locale.toString === \"defaultLocale\")[0];\n        } else {\n            this.locales = [];\n            this.defaultLocaleView = null;\n        }\n        this.locale = localizationService.getLocale();\n\n        let found: boolean = false;\n\n        for (let i = 0; i < this.locales.length; ++i) {\n            if (this.locales[i].toString === this.locale) {\n                found = true;\n            }\n        }\n\n        if (!found) {\n            this.locale = \"\";\n        }\n    }\n\n    shouldShowMenuItem(item: string): boolean {\n        if (item === \"HIERARCHIES\") {\n            return true;\n        } else if (item === \"LISTS\") {\n            // return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC) || this.service.hasExactRole(RegistryRoleType.AC);\n            return true;\n        } else if (this.service.hasExactRole(RegistryRoleType.SRA)) {\n            return true;\n        } else if (item === \"IMPORT\") {\n            return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n        } else if (item === \"SCHEDULED-JOBS\") {\n            return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n        } else if (item === \"NAVIGATOR\") {\n            return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n        } else if (item === \"CHANGE-REQUESTS\") {\n            return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n        } else if (item === \"TASKS\") {\n            return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n        } else if (item === \"CONFIGS\") {\n            return this.service.hasExactRole(RegistryRoleType.RA);\n        } else if (item === \"SETTINGS\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    logout(): void {\n        sessionStorage.removeItem(\"locales\");\n\n        window.location.href = acp + \"/session/logout\";\n\n        //        this.sessionService.logout().then( response => {\n        //            this.router.navigate( ['/login'] );\n        //        } );\n    }\n\n    getUsername() {\n        let name: string = this.service.getUsername();\n\n        return name;\n    }\n\n    setLocale() {\n        this.profileService.setLocale(this.locale).then(() => {\n            // Refresh the page\n            window.location.reload();\n        });\n    }\n\n    account(): void {\n        this.profileService.get().then(profile => {\n            this.bsModalRef = this.modalService.show(ProfileComponent, { backdrop: \"static\", class: \"gray modal-lg\" });\n            this.bsModalRef.content.profile = profile;\n        });\n    }\n\n}\n","<!-- HEADER AND NAVBAR -->\n<header>\n  <nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><localize key=\"cgr.standard.title\"></localize></a>\n      </div>\n       <ul *ngIf=\"loggedIn\" class=\"nav navbar-nav navbar-right\"> \n         <li class=\"hidden-xs\">\n            \n           <a (click)=\"account()\" class=\"navbar-username\">\n           <!-- <div>Logged in as</div> -->\n             <div>{{getUsername()}}</div>\n           </a>                      \n         </li>\n         <li dropdown> \n             <!-- <localize key=\"hierarchy-management.menu\"></localize> -->\n           <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n             <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n           </a>     \n\n           \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <!-- GeoRegistry specific links -->\n                <li *ngIf=\"shouldShowMenuItem('HIERARCHIES')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/hierarchies\" routerLinkActive=\"active\"><localize key=\"hierarchies.menu\"></localize></a></li> \n                <li *ngIf=\"shouldShowMenuItem('LISTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/master-lists\" routerLinkActive=\"active\"><localize key=\"masterlist.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('IMPORT')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/data\" routerLinkActive=\"active\"><localize key=\"header.data.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('SCHEDULED-JOBS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/scheduled-jobs\" routerLinkActive=\"active\"><localize key=\"scheduledjobs.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('NAVIGATOR')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/location-manager\"><localize key=navigator.menu></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('CHANGE-REQUESTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/change-requests\" routerLinkActive=\"active\"><localize key=\"header.changerequest.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('TASKS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/tasks\" routerLinkActive=\"active\"><localize key=\"header.tasks\"></localize></a></li>\n                <!-- <li *ngIf=\"shouldShowMenuItem('CONFIGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/synchronization-configs\" routerLinkActive=\"active\"><localize key=\"synchronization.config.manager\"></localize></a></li> -->\n                \n                <hr>\n                <li *ngIf=\"shouldShowMenuItem('SETTINGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/settings\" routerLinkActive=\"active\"><localize key=\"settings.menu\"></localize> </a></li>\n                \n                <div *ngIf=\"locales.length > 0\" style=\"padding: 0 20px;\">\n                  <hr>\n<!--                     <span><localize key=\"userDashboards.setLocale\"></localize></span> -->\n\n                    <label class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"default\" [value]=\"''\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span>{{defaultLocaleView.label.localizedValue}}</span>\n                    </label>\n                    <label *ngFor=\"let l of locales\" class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"{{l.toString}}\" [value]=\"l.toString\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span>{{l.label.localizedValue}}</span>\n                    </label>\n                </div>\n                \n                <!-- <hr *ngIf=\"isAdmin\">\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/localization-manager\" routerLinkActive=\"active\"><localize key=\"localization-manager.menu\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\">\n                    <a class=\"user-command-link\" routerLink=\"/admin/accounts\"><localize key=\"accounts.link\"></localize></a>\n                </li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li> -->\n  \n                <hr>\n                <li role=\"menuitem\"><a class=\"user-command-link\" (click)=\"logout()\"><localize key=\"userDashboards.logout\"></localize></a></li>\n            \n              </ul>\n         </li> \n         \n        \n       </ul>\n       \n       \n    </div>\n  </nav>\n</header>\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isAdmin()) {\n            return true;\n        }\n\n        this.router.navigate([\"/export\"]);\n\n        return false;\n    }\n\n}\n\n@Injectable()\nexport class MaintainerGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isAdmin() || this.service.isMaintainer()) {\n            return true;\n        }\n\n        this.router.navigate([\"/export\"]);\n\n        return false;\n    }\n\n}\n\n@Injectable()\nexport class ContributerGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isAdmin() || this.service.isMaintainer() || this.service.isContributer()) {\n            return true;\n        }\n\n        this.router.navigate([\"/export\"]);\n\n        return false;\n    }\n\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.service.isLoggedIn()) {\n            return true;\n        }\n\n        this.router.navigate([\"/login\"]);\n\n        return false;\n    }\n\n}\n\n","import { Component, Input } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Profile } from \"@shared/model/profile\";\nimport { AuthService, ProfileService } from \"@shared/service\";\nimport { Role } from \"../../../admin/model/account\";\n\n@Component({\n    selector: \"profile\",\n    templateUrl: \"./profile.component.html\",\n    styles: [\".modal-form .check-block .chk-area { margin: 10px 0px 0 0;}\"]\n})\nexport class ProfileComponent {\n\n    public _profile: Profile = {\n        oid: \"\",\n        username: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        changePassword: false\n    };\n\n    // eslint-disable-next-line accessor-pairs\n    @Input(\"profile\")\n    set profile(value: Profile) {\n        this._profile = value;\n        this.getRoles();\n    }\n\n    roles: Role[] = [];\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: ProfileService, public bsModalRef: BsModalRef, private authService: AuthService) { }\n\n    getRoles(): void {\n        this.service.getRolesForUser(this._profile.oid).then(roles => {\n            this.roles = roles;\n        });\n    }\n\n    onSubmit(): void {\n        if (!this._profile.changePassword) {\n            delete this._profile.password;\n        }\n\n        this.service.apply(this._profile).then(profile => {\n            this.bsModalRef.hide();\n        });\n    }\n\n    onChangePassword(): void {\n        this._profile.changePassword = !this._profile.changePassword;\n    }\n\n    // getRoles():string {\n    //   return this.authService.getRoleDisplayLabels();\n    // }\n\n    getRolesArray(): any {\n        return this.authService.getRoles();\n    }\n\n    cancel(): void {\n        this.service.unlock(this._profile.oid).then(profile => {\n            this.bsModalRef.hide();\n        });\n    }\n\n}\n","<div *ngIf=\"_profile\">\n  <message></message>\n\n  <form #form=\"ngForm\" class=\"modal-form\" style=\"background: none;border: none;\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n    <fieldset>\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"profile.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.firstname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.firstName\" name=\"firstname\" required>\n          </span>\n        </div>\n      </div>\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.lastname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.lastName\" name=\"lastname\" required>\n          </span>\n        </div>\n      </div>\n      \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>            \n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.phonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.phoneNumber\" name=\"phoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.email\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.email\" name=\"email\" required #aemail=\"ngModel\" email>\n          </span>\n          <div *ngIf=\"aemail.errors?.email\" style=\"float:none;\" class=\"inline-error-message\">\n            <localize key=\"account.email.validation\"></localize>\n          </div>\n        </div>\n      </div>\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n            \n\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"account.info.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.username\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.username\" name=\"username\" required>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"_profile.externalSystemOid != null && _profile.externalSystemOid !== ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.oauth\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <label>\n            <localize key=\"account.profile.isOauth\"></localize>\n          </label>\n        </div>\n      </div>\n      \n      <div *ngIf=\"_profile.externalSystemOid == null || _profile.externalSystemOid === ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n        </div>\n        <div class=\"holder\">\n          <!-- <boolean-field [(value)]=\"profile.changePassword\"></boolean-field> -->\n          <div style=\"text-align: left;\">\n            <input type=\"button\" *ngIf=\"!_profile.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n              (click)=\"onChangePassword()\" />\n            <input type=\"button\" *ngIf=\"_profile.changePassword\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\"\n              (click)=\"onChangePassword()\" />\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"_profile.changePassword\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" [(ngModel)]=\"_profile.password\" name=\"password\" #password=\"ngModel\" required\n                minlength=\"5\" maxlength=\"50\">\n              <password-strength-bar [passwordToCheck]=\"_profile.password\">\n              </password-strength-bar>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.certainPassword\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" />\n            </span>\n            <div *ngIf=\"certainPassword.errors?.mustMatch\" style=\"float:none;\" class=\"inline-error-message\">\n              <localize key=\"account.certainPassword.validation\"></localize>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"com.runwaysdk.ui.userstable.UsersTable.adminRoles\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n\n          <table class=\"table\">\n            <thead>\n              <tr>\n                  <th><localize key=\"profile.roles.role.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.organization.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.geoobjecttype.table.heading\"></localize></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let role of roles\">\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.geoObjectTypeLabel.localizedValue}}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- <ul>\n            <li *ngFor=\"let role of getRolesArray()\">{{role}}</li>\n          </ul> -->\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\"\n              [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n\n</div>\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-unused-vars */\nimport { LocalizationService } from \"@shared/service/localization.service\";\n\nexport interface MessageContainer {\n    setMessage(message: string);\n}\n\nexport class LocaleValue {\n\n    locale: string;\n    value: string;\n\n    constructor(locale: string, value: string) {\n        this.locale = locale;\n        this.value = value;\n    }\n\n}\n\nexport class LocaleView {\n\n    constructor(lService: LocalizationService) {\n        this.label = lService.create();\n        this.toString = \"\";\n        this.tag = \"\";\n        this.isDefaultLocale = false;\n        this.language = { label: \"\", code: \"\" };\n        this.country = { label: \"\", code: \"\" };\n        this.variant = { label: \"\", code: \"\" };\n    }\n\n    label: LocalizedValue;\n    toString: string;\n    tag: string;\n    isDefaultLocale: boolean;\n    language: { label: string, code: string };\n    country: { label: string, code: string };\n    variant: { label: string, code: string };\n\n}\n\nexport class Organization {\n\n    code: string;\n    label: any;\n    contactInfo: any;\n\n}\n\nexport class ExternalSystem {\n\n    oid?: string;\n    id: string;\n    type: string;\n    organization: string;\n    label: LocalizedValue;\n    description: LocalizedValue;\n    username?: string;\n    password?: string;\n    url?: string;\n    version?: string;\n    oAuthServer?: OAuthServer;\n\n}\n\nexport class OAuthServer {\n\n    keyName?: string;\n    label?: LocalizedValue;\n    url?: string;\n    authorizationLocation: string;\n    tokenLocation: string;\n    profileLocation: string;\n    clientId: string;\n    secretKey: string;\n    serverType: string;\n\n}\n\nexport class PageResult<T> {\n\n    count: number;\n    pageNumber: number;\n    pageSize: number;\n    resultSet: T[];\n    externalSystems?: ExternalSystem[];\n\n}\n\nexport class LocalizedValue {\n\n    localizedValue: string;\n    localeValues: LocaleValue[];\n\n    constructor(localizedValue: string, localeValues: LocaleValue[]) {\n        this.localizedValue = localizedValue;\n        this.localeValues = localeValues;\n    }\n\n    public getValue(localeToString: string): string {\n        let len = this.localeValues.length;\n\n        for (let i = 0; i < len; ++i) {\n            let lv = this.localeValues[i];\n\n            if (lv.locale === localeToString) {\n                return lv.value;\n            }\n        }\n\n        return this.localizedValue;\n    }\n\n    /*\n     * Populates lv1 with all values contained in lv2\n     */\n    public static populate(lv1: LocalizedValue, lv2: LocalizedValue) {\n        if (lv1 == null || lv2 == null) {\n            return;\n        }\n\n        lv1.localizedValue = lv2.localizedValue;\n\n        if (lv2.localeValues != null) {\n            lv2.localeValues.forEach(lv2lv => {\n                if (lv1.localeValues) {\n                    let found = false;\n\n                    lv1.localeValues.forEach(lv1lv => {\n                        if (!found && lv1lv.locale === lv2lv.locale) {\n                            lv1lv.value = lv2lv.value;\n                            found = true;\n                        }\n                    });\n\n                    if (!found) {\n                        lv1.localeValues.push(JSON.parse(JSON.stringify(lv2lv)));\n                    }\n                } else {\n                    lv1.localeValues = lv2.localeValues;\n                }\n            });\n        }\n    }\n\n}\n\nexport class RoleBuilder {\n\n    static buildFromRoleName(roleName: string): RegistryRole {\n        if (roleName === \"cgr.SRA\") {\n            return new RegistryRole(RegistryRoleType.SRA, \"\", \"\", \"cgr.SRA\");\n        }\n\n        let roleSplit = roleName.split(\".\");\n\n        let orgCode: string = roleSplit[2];\n\n        if (roleSplit.length === 4) {\n            return new RegistryRole(RegistryRoleType.RA, orgCode, \"\", roleName);\n        } else if (roleSplit.length === 5) {\n            let roleSuffix: string = roleSplit[4];\n\n            let gotCode: string = roleSplit[3];\n\n            if (roleSuffix === \"RM\") {\n                return new RegistryRole(RegistryRoleType.RM, orgCode, gotCode, roleName);\n            } else if (roleSuffix === \"RC\") {\n                return new RegistryRole(RegistryRoleType.RC, orgCode, gotCode, roleName);\n            } else if (roleSuffix === \"AC\") {\n                return new RegistryRole(RegistryRoleType.AC, orgCode, gotCode, roleName);\n            }\n        } else {\n            return null;\n        }\n    }\n\n}\n\nexport class RegistryRole {\n\n    type: RegistryRoleType;\n    orgCode: string;\n    geoObjectTypeCode: string;\n    roleName: string;\n    displayLabel: string;\n\n    constructor(type: RegistryRoleType, orgCode: string, geoObjectTypeCode: string, roleName: string) {\n        this.type = type;\n        this.orgCode = orgCode;\n        this.geoObjectTypeCode = geoObjectTypeCode;\n        this.roleName = roleName;\n    }\n\n}\n\nexport enum RegistryRoleType {\n    SRA,\n    RA,\n    RM,\n    RC,\n    AC\n}\n","import { Component } from \"@angular/core\";\nimport { ModalStepIndicatorService } from \"@shared/service\";\n\nimport { Step, StepConfig } from \"@shared/model/modal\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"modal-step-indicator\",\n    templateUrl: \"./modal-step-indicator.component.html\",\n    styleUrls: [\"./modal-step-indicator.css\"]\n})\nexport class ModalStepIndicatorComponent {\n\n    stepConfig: StepConfig;\n    step: Step;\n    stepSubscription: Subscription;\n\n    constructor(private modalStepIndicatorService: ModalStepIndicatorService) {\n        this.stepSubscription = modalStepIndicatorService.modalStepChange.subscribe(stepConfig => {\n            this.stepConfig = stepConfig;\n        });\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n        this.stepSubscription.unsubscribe();\n    }\n\n}\n","<div class=\"step-indicator\" >\n    <ul *ngIf=\"stepConfig && stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\" [ngClass]=\"{'active':step.active, 'enabled':step.enabled}\" *ngFor=\"let step of stepConfig.steps\">{{step.label}}</li>\n    </ul>\n</div>","import { Component, OnInit } from \"@angular/core\";\n\nimport { Progress } from \"@shared/model/progress\";\nimport { ProgressService, IProgressListener } from \"@shared/service\";\n\n@Component({\n\n    selector: \"progress-bar\",\n    templateUrl: \"./progress-bar.component.html\",\n    styles: [\n        \".progress-overlay { background-color: #CCCCCC; position: absolute; display: block;opacity: 0.8;z-index: 99999 !important;}\",\n        \".progress-div { width: 100%; margin-left: 0; padding-left: 25%; padding-right: 25%; margin-top: 30% }\"\n    ]\n})\nexport class ProgressBarComponent implements OnInit, IProgressListener {\n\n    public showIndicator: boolean = true;\n\n    public prog: Progress = {\n        current: 0,\n        total: 1,\n        description: \"Initializing\"\n    };\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: ProgressService) { }\n\n    ngOnInit(): void {\n        this.service.registerListener(this);\n    }\n\n    ngOnDestroy(): void {\n        this.service.deregisterListener(this);\n    }\n\n    start(): void {\n        this.prog = {\n            current: 0,\n            total: 1,\n            description: \"Initializing\"\n        };\n\n        this.showIndicator = true;\n    }\n\n    progress(progress: Progress): void {\n        this.prog = progress;\n    }\n\n    complete(): void {\n        this.showIndicator = false;\n    }\n\n}\n","<div *ngIf=\"showIndicator\" class=\"progress-overlay\" style=\"height: 100%; width: 100%;\">\n  <div class=\"progress-div\">\n    <progressbar class=\"progress-striped active\" [max]=\"prog.total\" [value]=\"prog.current\"><i>{{prog.description}}</i></progressbar>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient, HttpParams } from \"@angular/common/http\";\nimport { finalize } from \"rxjs/operators\";\nimport { EventService } from \"@shared/service\";\nimport { ExternalSystem, PageResult } from \"@shared/model/core\";\n\ndeclare let acp: any;\n\n@Injectable()\nexport class ExternalSystemService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private http: HttpClient, private eventService: EventService) { }\n\n    getExternalSystems(pageNumber: number, pageSize: number): Promise<PageResult<ExternalSystem>> {\n        let params: HttpParams = new HttpParams();\n        params = params.set(\"pageNumber\", pageNumber.toString());\n        params = params.set(\"pageSize\", pageSize.toString());\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult<ExternalSystem>>(acp + \"/external-system/get-all\", { params: params })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    getExternalSystem(oid: string): Promise<ExternalSystem> {\n        let params: HttpParams = new HttpParams();\n        params = params.set(\"oid\", oid);\n\n        this.eventService.start();\n\n        return this.http\n            .get<ExternalSystem>(acp + \"/external-system/get\", { params: params })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    applyExternalSystem(system: ExternalSystem): Promise<ExternalSystem> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<ExternalSystem>(acp + \"/external-system/apply\", JSON.stringify({ system: system }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    getSystemCapabilities(system: ExternalSystem): Promise<{ oauth: boolean }> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<{ oauth: boolean }>(acp + \"/external-system/system-capabilities\", JSON.stringify({ system: system }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    removeExternalSystem(oid: string): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>(acp + \"/external-system/remove\", JSON.stringify({ oid: oid }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { Step, StepConfig } from \"@shared/model/modal\";\n\ndeclare let acp: string;\n\n@Injectable()\nexport class ModalStepIndicatorService {\n\n    stepConfig: StepConfig;\n    step: Step;\n    private modalStepChangedSource = new Subject<StepConfig>();\n    modalStepChange = this.modalStepChangedSource.asObservable();\n\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor() { }\n\n    public getStepConfig(): StepConfig {\n        return this.stepConfig;\n    }\n\n    public setStepConfig(config: StepConfig): void {\n        this.stepConfig = config;\n\n        this.modalStepChangedSource.next(this.stepConfig);\n    }\n\n    getStep(): Step {\n        return this.step;\n    }\n\n    setStep(step: Step): void {\n        this.step = step;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\nimport { finalize } from \"rxjs/operators\";\n\nimport { EventService } from \"@shared/service\";\n\nimport { Organization } from \"@shared/model/core\";\n\ndeclare var acp: any;\n\n@Injectable()\nexport class OrganizationService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private http: HttpClient, private eventService: EventService) { }\n\n    getOrganizations(): Promise<Organization[]> {\n        this.eventService.start();\n\n        return this.http\n            .get<Organization[]>(acp + \"/cgr/organizations/get-all\")\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    updateOrganization(json: any): Promise<Organization> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<Organization>(acp + \"/cgr/orgainization/update\", JSON.stringify({ json: json }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    newOrganization(json: any): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>(acp + \"/cgr/orgainization/create\", JSON.stringify({ json: json }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n    removeOrganization(code: any): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.eventService.start();\n\n        return this.http\n            .post<any>(acp + \"/cgr/orgainization/delete\", JSON.stringify({ code: code }), { headers: headers })\n            .pipe(finalize(() => {\n                this.eventService.complete();\n            }))\n            .toPromise();\n    }\n\n}\n","import { AuthService } from \"./auth.service\";\nimport { EventService } from \"./event.service\";\nimport { ExternalSystemService } from \"./external-system.service\";\nimport { AdminGuard, AuthGuard, ContributerGuard, MaintainerGuard } from \"./guard.service\";\nimport { LocalizationService } from \"./localization.service\";\nimport { ModalStepIndicatorService } from \"./modal-step-indicator.service\";\nimport { OrganizationService } from \"./organization.service\";\nimport { PendingChangesGuard } from \"./pending-changes-guard\";\nimport { ProfileService } from \"./profile.service\";\nimport { ProgressService } from \"./progress.service\";\nimport { SessionService } from \"./session.service\";\nimport { DateService } from \"./date.service\";\n\nexport const services: any[] = [\n    AuthService,\n    EventService,\n    ExternalSystemService,\n    AdminGuard,\n    AuthGuard,\n    ContributerGuard,\n    MaintainerGuard,\n    LocalizationService,\n    ModalStepIndicatorService,\n    OrganizationService,\n    PendingChangesGuard,\n    ProfileService,\n    ProgressService,\n    SessionService,\n    DateService\n];\n\nexport * from \"./auth.service\";\nexport * from \"./event.service\";\nexport * from \"./external-system.service\";\nexport * from \"./guard.service\";\nexport * from \"./localization.service\";\nexport * from \"./modal-step-indicator.service\";\nexport * from \"./organization.service\";\nexport * from \"./pending-changes-guard\";\nexport * from \"./profile.service\";\nexport * from \"./progress.service\";\nexport * from \"./session.service\";\nexport * from \"./date.service\";\n","import { CanDeactivate } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n// Thanks to : https://stackoverflow.com/a/41187919/219843\n\nexport interface ComponentCanDeactivate {\n    canDeactivate: () => boolean | Observable<boolean>;\n    afterDeactivate: (arg: boolean) => void;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n\n    canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n        if (!component.canDeactivate()) {\n            // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\n            // when navigating away from your angular app, the browser will show a generic warning message\n            // see http://stackoverflow.com/a/42207299/7307355\n            let confirmRet = confirm(\"WARNING: You have unsaved changes. Press Cancel to go back and save these changes, or OK to lose these changes.\");\n\n            component.afterDeactivate(confirmRet);\n\n            return confirmRet;\n        }\n\n        return true;\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\n// import 'rxjs/add/operator/toPromise';\n\nimport { Profile } from \"@shared/model/profile\";\n\ndeclare let acp: any;\n\n@Injectable()\nexport class ProfileService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private http: HttpClient) { }\n\n    get(): Promise<Profile> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<Profile>(acp + \"/registryaccount/get\", { headers: headers })\n            .toPromise();\n    }\n\n\n    apply(profile: Profile): Promise<Profile> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<Profile>(acp + \"/registryaccount/apply\", JSON.stringify({ account: profile }), { headers: headers })\n            .toPromise();\n    }\n\n    unlock(oid: string): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<void>(acp + \"/registryaccount/unlock\", JSON.stringify({ oid: oid }), { headers: headers })\n            .toPromise()\n    }\n\n    setLocale(locale: string): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        return this.http\n            .post<any>(acp + \"/localization/set-locale\", JSON.stringify({ locale: locale }), { headers: headers })\n            .toPromise();\n    }\n\n    getRolesForUser(userOID: string): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n\n        return this.http\n            .post<Profile>(acp + \"/registryaccount/getRolesForUser\", { userOID: userOID }, { headers: headers })\n            .toPromise();\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Progress } from \"@shared/model/progress\";\n\nexport interface IProgressListener {\n    start(): void;\n    progress(progress: Progress): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class ProgressService {\n\n    private listeners: IProgressListener[] = [];\n\n    // eslint-disable-next-line no-useless-constructor\n    public constructor() { }\n\n    public registerListener(listener: IProgressListener): void {\n        this.listeners.push(listener);\n    }\n\n    public deregisterListener(listener: IProgressListener): boolean {\n        let indexOfItem = this.listeners.indexOf(listener);\n\n        if (indexOfItem === -1) {\n            return false;\n        }\n\n        this.listeners.splice(indexOfItem, 1);\n\n        return true;\n    }\n\n    public start(): void {\n        for (const listener of this.listeners) {\n            listener.start();\n        }\n    }\n\n    public progress(progress: Progress): void {\n        for (const listener of this.listeners) {\n            listener.progress(progress);\n        }\n    }\n\n    public complete(): void {\n        for (const listener of this.listeners) {\n            listener.complete();\n        }\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from \"rxjs/operators\";\n\nimport { EventService } from \"./event.service\";\n\nimport { AuthService } from \"./auth.service\";\nimport { User } from \"@shared/model/user\";\n\ndeclare let acp: any;\n\n@Injectable()\nexport class SessionService {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: EventService, private http: HttpClient, private authService: AuthService) { }\n\n    login(username: string, password: string): Promise<any> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.service.start();\n\n        return this.http\n            .post<User>(acp + \"/cgrsession/login\", JSON.stringify({ username: username, password: password }), { headers: headers })\n            .pipe(finalize(() => {\n                this.service.complete();\n            }))\n            .toPromise()\n            .then((logInResponse: any) => {\n                this.authService.afterLogIn(logInResponse);\n\n                return logInResponse;\n            })\n    }\n\n    logout(): Promise<void> {\n        let headers = new HttpHeaders({\n            \"Content-Type\": \"application/json\"\n        });\n\n        this.service.start();\n\n\n        return this.http\n            .post<void>(acp + \"/session/logout\", { headers: headers })\n            .pipe(finalize(() => {\n                this.service.complete();\n            }))\n            .toPromise()\n            .then((response: any) => {\n                this.authService.afterLogOut();\n\n                return response;\n            })\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"error-message\",\n    templateUrl: \"./error-message.component.html\",\n    styleUrls: [\"./error-message.css\"]\n})\nexport class ErrorMessageComponent {\n\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"error.modal.default.message\");\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private localizeService: LocalizationService) { }\n\n}\n","<div *ngIf=\"message != null\" class=\"error-container\">\n    <div class=\"\">\n        <strong class=\"error-title\">\n            <localize key=\"error.title\"></localize>\n        </strong>\n    </div>\n    <div class=\"\">\n        <div>\n            <p class=\"error-message\">{{message}}</p>\n        </div>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Subject } from \"rxjs\";\nimport { LocalizationService } from \"@shared/service\";\nimport { ModalTypes } from \"@shared/model/modal\";\n\n@Component({\n    selector: \"confirm-modal\",\n    templateUrl: \"./confirm-modal.component.html\",\n    styleUrls: [\"./modal.css\"]\n})\nexport class ConfirmModalComponent {\n\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    @Input() data: any;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.submit\");\n\n    @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n\n    /*\n     * Called on cancel\n     */\n    public onCancel: Subject<any>;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n        this.onCancel = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next(this.data);\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n        this.onCancel.next(this.data);\n    }\n\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>{{cancelText}}</span>\n          </button>\n          <button type=\"button\" (click)=\"confirm()\"\n            [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n            aria-disabled=\"false\">\n            <span>{{submitText}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"error-modal\",\n    templateUrl: \"./error-modal.component.html\",\n    styleUrls: [\"./error-modal.css\"]\n})\nexport class ErrorModalComponent {\n\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"error.modal.default.message\");\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Subject } from \"rxjs\";\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n    selector: \"success-modal\",\n    templateUrl: \"./success-modal.component.html\",\n    styleUrls: [\"./success-modal.css\"]\n})\nexport class SuccessModalComponent implements OnInit {\n\n    /*\n     * Message\n     */\n    @Input() message: string;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.close\");\n\n    public onConfirm: Subject<any>;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n    ngOnInit(): void {\n        this.message = this.message ? this.message : this.localizeService.decode(\"success.modal.default.message\");\n        this.onConfirm = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next();\n    }\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">\n\t\t\t\t\t\t<span>{{submitText}}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n\n</div>\n","import { Component } from \"@angular/core\";\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\nimport { LocalizationService } from \"@shared/service\";\n\nexport class GenericButton {\n\n    label: string;\n    onClick: Function;\n    shouldClose: boolean;\n    class: string;\n\n}\n\n@Component({\n    selector: \"generic-modal\",\n    templateUrl: \"./generic-modal.component.html\",\n    styleUrls: [\"./modal.css\"]\n})\nexport class GenericModalComponent {\n\n    /*\n     * Message\n     */\n    message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    buttons: GenericButton[] = [];\n\n    data: any;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) { }\n\n    init(message: string, buttons: GenericButton[]): void {\n        this.message = message;\n        this.buttons = buttons;\n    }\n\n    onClick(button: GenericButton): void {\n        if (button.shouldClose) {\n            this.bsModalRef.hide();\n        }\n\n        button.onClick(this.data);\n    }\n\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button *ngFor=\"let button of buttons\" type=\"button\" (click)=\"onClick(button)\" class=\"btn\" [class]=\"button.class\" role=\"button\" aria-disabled=\"false\">\n            <span>{{button.label}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","var map = {\n\t\"./admin/admin.module\": [\n\t\t270,\n\t\t\"vendor\",\n\t\t0,\n\t\t2\n\t],\n\t\"./registry/registry.module\": [\n\t\t271,\n\t\t\"vendor\",\n\t\t0,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 189;\nmodule.exports = webpackAsyncContext;","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subscription } from 'rxjs';\n\nimport { Application } from '@shared/model/application';\nimport { SessionService } from '@shared/service';\nimport { HubService } from '@core/service/hub.service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { LoginHeaderComponent } from './login-header.component';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n} )\nexport class LoginComponent implements OnInit {\n    context: string;\n    username: string = '';\n    password: string = '';\n    \n    oauthServers: any[] = null;\n    viewOauthServers: boolean = false;\n    \n    sub: Subscription;\n\n    /*\n     * Reference to the modal current showing\n    */\n    private bsModalRef: BsModalRef;\n\n    ngOnInit(): void {\n      this.hService.oauthGetPublic(null).then(oauthServers => {\n        \n        if (oauthServers && oauthServers.length > 0)\n        {\n          this.oauthServers = oauthServers;\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n      \n      this.sub = this.route.params.subscribe(params => {\n        if (params['errorMsg'] != null)\n        {\n          this.bsModalRef = this.modalService.show(ErrorModalComponent, { backdrop: true });\n          \n          let encodedError = params['errorMsg'];\n          let decodedError = encodedError.replaceAll(\"+\", \" \");\n          \n          this.bsModalRef.content.message = decodedError;\n        }\n      });\n    }\n\n    constructor( private service: SessionService, private hService: HubService, private modalService: BsModalService, private router: Router, private route: ActivatedRoute ) {\n        this.context = acp as string;\n    }\n    \n    public onClickDhis2(url: any): void {\n      if (url == null)\n      {\n        if (this.oauthServers.length == 1)\n        {\n          window.location.href = this.oauthServers[0].url;\n        }\n        else\n        {\n          this.viewOauthServers = !this.viewOauthServers;\n        }\n      }\n      else\n      {\n        window.location.href = url;\n      }\n    }\n\n    onSubmit(): void {\n        this.service.login( this.username, this.password ).then( response => {\n\n            this.hService.applications().then( applications => {\n                if ( applications.length == 1 ) {\n                    this.open( applications[0] );\n                }\n                else {\n                    this.router.navigate( ['/menu/true'] );\n                }\n            } );\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    public error( err: HttpErrorResponse ): void {\n      this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n\n}\n","<div id=\"login-page\" class=\"new-admin-design-main\">\n    <login-header></login-header>\n    <loading-bar></loading-bar>\n\n    <message></message>\n    <div class=\"vertical-center\">\n        <div id=\"app-container\" class=\"container\">\n\n            <div class=\"row\">\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                    <div class=\"row\" style=\"margin-bottom: 25px;\">\n                        <div class=\"col-md-12\">\n\n                            <div class=\"heading text-center\">\n                                <h2>\n                                    <!-- \n                                    <localize key=\"login.page.title\"></localize>\n                                    -->\n                                </h2>\n                                <!-- <p class=\"lead\">\n                                    <localize key=\"login.page.description\"></localize>\n                                </p> -->\n                            </div>\n\n                        </div>\n                    </div>\n                    \n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n\n                            <form id=\"login-form\" class=\"login\" #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\">\n                                <div id=\"login-input-container\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <input [(ngModel)]=\"username\" name=\"username\" type=\"text\" [placeholder]=\"'login.username' | localize\" id=\"login\" required /> \n                                            <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" [placeholder]=\"'login.password' | localize\" id=\"password\" required /> \n                                            <a routerLink=\"/forgotpassword\" class=\"forgot-password\"> \n                                              <localize key=\"login.forgotPassword\"></localize>\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <!-- <p class=\"login-submit\"> -->\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                          <div class=\"btn-holder text-right\">\n                                            <button type=\"submit\" id=\"login-btn\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\">\n                                                <localize key=\"login.button\"></localize>\n                                            </button>\n                                          </div>\n                                        </div>\n                                    </div>\n                                    <!-- </p> -->\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                    \n                    <div *ngIf=\"oauthServers\" class=\"row\">\n                      <div class=\"col-md-12 text-center\">\n                        <h4 class=\"oauth-or-line-block\">\n                          <span class=\"oauth-or-text\">&nbsp;<localize key=\"login.oauth.or.label\"></localize>&nbsp;</span>\n                        </h4>\n                    \n                        <button (click)=\"onClickDhis2(null)\" class=\"dhis2-login-button\">\n                          <span class=\"dhis2-login-button-text\">\n                            <localize key=\"login.oauth.loginwith.label\"></localize>\n                          </span>\n                          <span>\n                            <img class=\"dhis2-login-button-image\" src=\"../dist/assets/dhis2-logo.f59cbafa7a88d5e9addba95ec74000d1.png\">\n                          </span>\n                        </button>\n                        <div *ngIf=\"viewOauthServers\" style=\"margin-top: 20px;\">\n                          <select (change)=\"onClickDhis2($event.target.value)\" name=externalSystemOid>\n                            <option></option>\n                            <option *ngFor=\"let server of oauthServers\" [value]=\"server.url\">\n                              {{server.label.localizedValue}}\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Application } from '@shared/model/application';\n\nimport { AuthService } from '@shared/service';\n\nimport { HubService } from '@core/service/hub.service';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'hub',\n    templateUrl: './hub.component.html',\n    styleUrls: ['./hub.component.css']\n} )\nexport class HubComponent implements OnInit {\n    context: string;\n    applications: Application[] = [];\n    tasks: any = [];\n    isAdmin: boolean = false;\n    buckets: string = 'col-sm-6';\n    bsModalRef: BsModalRef;\n    loading: boolean = true;\n\n    constructor(\n        private service: HubService,\n        public authService: AuthService,\n        private modalService: BsModalService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.context = acp as string;\n    }\n\n    ngOnInit(): void {\n      this.service.applications().then( applications => {\n          this.loading = false;\n          this.applications = applications;\n      } );\n      \n      this.isAdmin = this.authService.isAdmin();\n    }\n    \n    //   logout():void {\n    //     this.sessionService.logout().then(response => {\n    //       this.router.navigate(['/login']);\t  \n    //     }); \t  \n    //   }\n\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    //   account():void{\n    //     this.profileService.get().then(profile => {\n    //       this.bsModalRef = this.modalService.show(ProfileComponent, {backdrop: 'static', class: 'gray modal-lg'});\n    //       this.bsModalRef.content.profile = profile;\n    //     });\n    //   }\n}\n","    <div class=\"new-admin-design-main\">\n\n        <cgr-header></cgr-header>\n        <loading-bar></loading-bar>\n        \n        <div id=\"app-container\" class=\"container-fluid\" style=\"height:100%\">\n            <div class=\"nav-icon-container\" >\n                <div *ngIf=\"applications?.length == 0\" style=\"display: flex; justify-content: center; align-items: center; height:100%\">\n\t\t\t            <div *ngIf=\"!loading && authService.getRoles().length == 0\" class=\"error-message\" style=\"font-size:1.5em;\">\n\t\t\t              <localize key=\"hub.no-valid-roles\"></localize>\n\t\t\t            </div>\n\t\t\t            <div *ngIf=\"loading\" class=\"standby-overlay\" style=\"width:100%; height:100%; font-size:4em; color:black;\">\n\t\t\t              \n\t\t\t            </div>\n\t\t\t          </div>\n                \n                <div *ngIf=\"applications?.length > 0 && !loading\" class=\"row vertical-center-row\">\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                    <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                        <div *ngFor=\"let app of applications; let i = index;\">\n\n                            <div style=\"padding: 10px 0;\" class=\"row\" *ngIf=\"i % 4 === 0\">\n\n                                <div *ngFor=\"let application of applications; let internalIndex = index;\">\n                                    <div *ngIf=\"internalIndex >= i && internalIndex < i + 4\" class=\"col-xs-12 col-sm-12 col-md-3 text-center\" (click)=\"open(application)\">\n                                        <div [id]=\"application.oid\" class=\"nav-option-wrapper\">\n                                            <img class=\"nav-icon-img img-responsive\" [src]=\"context + '/' + application.src\" alt=\"Navigation\" />\n                                            <h3 class=\"nav-icon-img-label\">{{application.label}}</h3>\n                                            <!-- <p class=\"nav-icon-img-description\"> {{application.description}} </p> -->\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"applications?.length === 1 || applications?.length === 2\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                    <div *ngIf=\"applications?.length === 1\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                </div>\n            </div>\n\n        </div>\n        <!-- \n      <div style=\"width:100%\">\n        <label style=\"text-align: left; width:50%; display: inline;\">{{authService.getUsername()}} : {{authService.getRoles()}}</label>\n        <label style=\"text-align: right; width:50%; display: inline;\">{{authService.getVersion()}}</label>\n      </div>\n      -->\n        <!--\n      <div class=\"container\">\n\t\t    <div class=\"row justify-content-between\">\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getUsername()}} : {{authService.getRoles()}}\n\t\t\t    </div>\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getVersion()}}\n\t\t\t    </div>\n        </div>\n      </div>\n      -->\n\n    </div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ForgotPasswordService } from \"@core/service/forgotpassword.service\";\n\nimport { ErrorHandler } from \"@shared/component\";\n\n@Component({\n    selector: \"forgotpassword\",\n    templateUrl: \"./forgotpassword.component.html\",\n    styleUrls: [\"./forgotpassword.component.css\"]\n})\nexport class ForgotPasswordComponent {\n\n    username: string;\n    emailIsSent: boolean = false;\n    message: string = null;\n\n    constructor(private service: ForgotPasswordService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private location: Location) {}\n\n    cancel(): void {\n        this.router.navigate([\"/\"]);\n    }\n\n    onSubmit(): void {\n        this.service.submit(this.username)\n            .then(response => {\n                this.emailIsSent = true;\n            })\n            .catch((err: HttpErrorResponse) => {\n                this.error(err);\n            });\n    }\n\n    error(err: HttpErrorResponse): void {\n        this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading text-center\">\n          <h3><localize key=\"forgotpassword.header\"></localize></h3>\n        </div>\n          \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <div class=\"modal-body\">\n          <fieldset>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div *ngIf=\"!emailIsSent\" class=\"label-holder\">\n                  <label><localize key=\"forgotpassword.username\"></localize></label>\n                </div>          \n                <div *ngIf=\"!emailIsSent\" class=\"holder\" >\n                  <span class=\"text\">\n                    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n                  </span>\n                </div>\n                <div *ngIf=\"emailIsSent\" class=\"forgotpassword-email-is-sent\">\n                  <localize key=\"forgotpassword.emailIsSent\"></localize>\n                </div>\n              </div>\n            </div>\n            \n            \n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <div *ngIf=\"!emailIsSent\" class=\"button-holder\">\n                    <input type=\"button\" [value]=\"'forgotpassword.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                    <input type=\"submit\" [value]=\"'forgotpassword.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n                  </div>\n                  \n                  <div *ngIf=\"emailIsSent\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                    <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n                  </div>\n              </div>\n            </div>\n          </fieldset>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler } from \"@shared/component\";\n\nimport { ForgotPasswordService } from \"@core/service/forgotpassword.service\";\nimport { PasswordStrengthBarComponent } from \"@shared/component/password-strength-bar/password-strength-bar.component\";\n\n@Component({\n    templateUrl: \"./forgotpassword-complete.component.html\",\n    styleUrls: [\"./forgotpassword-complete.component.css\"]\n})\nexport class ForgotPasswordCompleteComponent implements OnInit {\n\n    newPassword: string;\n    token: string;\n    passwordIsReset: boolean = false;\n    private sub: any;\n    message: string = null;\n\n    constructor(\n      private service: ForgotPasswordService,\n      private router: Router,      \n      private route: ActivatedRoute,\n  \t  private passwordStrengthBarComponent: PasswordStrengthBarComponent) {}\n\n    ngOnInit() {\n        this.sub = this.route.params.subscribe(params => {\n            this.token = params[\"token\"];\n        });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    cancel(): void {\n        this.router.navigate([\"/\"]);\n    }\n\n    onSubmit(): void {\n        this.service.complete(this.newPassword, this.token)\n            .then(() => {\n                this.passwordIsReset = true;\n            })\n            .catch((err: HttpErrorResponse) => {\n                this.error(err);\n            });\n    }\n\n    error(err: HttpErrorResponse): void {\n        this.message = ErrorHandler.getMessageFromError(err);\n    }\n\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading text-center\">\n          <h3><localize key=\"forgotpassword-complete.header\"></localize></h3>\n        </div>\n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <div class=\"modal-body\">\n\t        <fieldset>\n\t          <div class=\"row\">\n\t\t          <div class=\"col-md-12\">\n\t\t            <div *ngIf=\"!passwordIsReset\">            \n\t\t<!-- \n\t\t              <div class=\"label-holder\">\n\t\t                <label><localize key=\"forgotpassword-complete.token\"></localize></label>\n\t\t              </div>\n\t\t              <div class=\"holder\" >\n\t\t                <span class=\"text\">\n\t\t                  <input type=\"text\" [(ngModel)]=\"token\" name=\"token\" required [readonly]=\"true\">\n\t\t                </span>\n\t\t              </div>            \n\t\t -->            \n\t\t              <div class=\"label-holder\">\n\t\t                <label><localize key=\"forgotpassword-complete.newPassword\"></localize></label>\n\t\t              </div>\n\t\t              <div class=\"holder\">\n\t\t                <span class=\"text\">\n\t\t                  <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n\t\t                    <password-strength-bar [passwordToCheck]=\"newPassword\"></password-strength-bar>\n\t\t                </span>\n\t\t              </div>\n\t\t              <div class=\"label-holder\">\n\t\t                <label><localize key=\"account.certainPassword\"></localize></label>\n\t\t              </div>          \n\t\t              <div class=\"holder\" >\n\t\t                <span class=\"text\">\n\t\t                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n\t\t                </span>\n\t\t                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n\t\t                  <localize key=\"account.certainPassword.validation\"></localize>\n\t\t                </div>                                                       \n\t\t              </div>                           \n\t\t            </div>\n\t\t            <div *ngIf=\"passwordIsReset\" class=\"forgotpassword-password-is-reset\">\n\t\t              <localize key=\"forgotpassword-complete.passwordIsReset\"></localize>\n\t\t            </div>\n\t\t          </div>\n\t          </div>\n\t            \n\t          \n\t          <div class=\"row\">\n\t            <div class=\"col-md-12\">\n\t\t            <div class=\"label-holder\">\n\t\t            </div>                    \n\t\t            <div class=\"holder\">\n\t\t              <div *ngIf=\"!passwordIsReset\" class=\"button-holder\">\n\t\t                <input type=\"button\" [value]=\"'forgotpassword-complete.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n\t\t                <input type=\"submit\" [value]=\"'forgotpassword-complete.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n\t\t              </div>\n\t\t              \n\t\t              <div *ngIf=\"passwordIsReset\" class=\"button-holder\" style=\"margin-top: 10px;\">\n\t\t                <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword-complete.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n\t\t              </div>\n\t\t            </div>\n\t\t          </div>\n\t          </div>\n\t        </fieldset>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","/* eslint-disable no-use-before-define */\n/* eslint-disable padded-blocks */\nimport { LocalizedValue } from \"@shared/model/core\";\nimport { LocalizationService } from \"@shared/service\";\nimport { ImportConfiguration } from \"./io\";\nimport { GovernanceStatus, ConflictType } from \"./constants\";\nimport { SummaryKey } from \"./crtable\";\nimport Utils from \"@registry/utility/Utils\";\n\nexport const PRESENT: string = \"5000-12-31\";\n\nexport class TreeEntity {\n    id: string;\n    name: string;\n    hasChildren: boolean;\n}\n\nexport class Term {\n    code: string;\n    label: LocalizedValue;\n    description: LocalizedValue;\n\n    constructor(code: string, label: LocalizedValue, description: LocalizedValue) {\n        this.code = code;\n        this.label = label;\n        this.description = description;\n    }\n\n    children: Term[] = [];\n\n    addChild(term: Term) {\n        this.children.push(term);\n    }\n}\n\nexport class GeoObject {\n    type: string;\n    geometry: any;\n    properties: {\n        uid: string,\n        code: string,\n        displayLabel: LocalizedValue,\n        type: string,\n        status: string[],\n        sequence: string\n        createDate: string,\n        lastUpdateDate: string,\n        invalid: boolean,\n        writable?: boolean\n    };\n}\n\nexport class GeoObjectType {\n    code: string;\n    label: LocalizedValue;\n    description: LocalizedValue;\n    geometryType?: string;\n    isLeaf: boolean;\n    isGeometryEditable: boolean;\n    organizationCode: string;\n    attributes: Array<AttributeType | AttributeTermType | AttributeDecimalType> = [];\n    relatedHierarchies?: string[];\n    superTypeCode?: string;\n    isAbstract?: boolean;\n    isPrivate?: boolean;\n    canDrag?: boolean;\n    permissions?: string[];\n\n    public static getAttribute(type: GeoObjectType, name: string) {\n        let len = type.attributes.length;\n        for (let i = 0; i < len; i++) {\n            let attr: any = type.attributes[i];\n\n            if (attr.code === name) {\n                return attr;\n            }\n        }\n\n        return null;\n    }\n\n    public static getGeoObjectTypeTermAttributeOptions(geoObjectType: GeoObjectType, termAttributeCode: string) {\n        for (let i = 0; i < geoObjectType.attributes.length; i++) {\n            let attr: any = geoObjectType.attributes[i];\n\n            if (attr.type === \"term\" && attr.code === termAttributeCode) {\n                attr = <AttributeTermType>attr;\n                let attrOpts = attr.rootTerm.children;\n\n                // only remove status of the required status type\n                if (attrOpts.length > 0) {\n                    if (attr.code === \"status\") {\n                        return Utils.removeStatuses(attrOpts);\n                    } else {\n                        return attrOpts;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport class Task {\n    id: string;\n    templateKey: string;\n    msg: string;\n    title: string;\n    status: string;\n    createDate: number;\n    completedDate: number;\n}\n\nexport class GeoObjectOverTime {\n\n    geoObjectType: GeoObjectType;\n\n    attributes: any;\n\n    public constructor(geoObjectType: GeoObjectType, attributes: any) {\n        this.geoObjectType = geoObjectType;\n        this.attributes = attributes;\n    }\n\n    public getVotAtDate(date: Date, attrCode: string, lService: LocalizationService) {\n        let retVot = { startDate: date, endDate: null, value: null };\n\n        const time = date.getTime();\n\n        for (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n            let attr = this.geoObjectType.attributes[i];\n\n            if (attr.code === attrCode) {\n                if (attr.type === \"local\") {\n                    retVot.value = lService.create();\n                }\n\n                if (attr.isChangeOverTime) {\n                    let values = this.attributes[attr.code].values;\n\n                    values.forEach(vot => {\n\n                        const startDate = Date.parse(vot.startDate);\n                        const endDate = Date.parse(vot.endDate);\n\n                        if (time >= startDate && time <= endDate) {\n\n                            if (attr.type === \"local\") {\n                                retVot.value = JSON.parse(JSON.stringify(vot.value));\n                            } else if (attr.type === \"term\" && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n                                retVot.value = vot.value[0];\n                            } else {\n                                retVot.value = vot.value;\n                            }\n                        }\n                    });\n                } else {\n                    retVot.value = this.attributes[attr.code];\n                }\n\n                break;\n            }\n        }\n\n        return retVot;\n    }\n}\n\nexport class ConflictMessage {\n    message: string;\n    severity: string;\n    type: ConflictType;\n}\n\nexport interface TimeRangeEntry {\n    startDate: string;\n    endDate: string;\n    oid?: string;\n    value?: any;\n}\n\nexport class ValueOverTime implements TimeRangeEntry {\n    oid: string;\n    startDate: string;\n    endDate: string;\n    value: any;\n    removable?: boolean;\n}\n\nexport class AttributeOverTime {\n    name: string;\n    type: string;\n    values: ValueOverTime[];\n}\n\nexport class AttributeType {\n    code: string; // On the back-end this is referred to as the AttributeType's 'name'. They are the same concept.\n    type: string;\n    label: LocalizedValue;\n    description: LocalizedValue;\n    isDefault: boolean;\n    required: boolean;\n    unique: boolean;\n    governanceStatus: GovernanceStatus;\n    isChangeOverTime?: boolean;\n    precision?: number;\n    scale?: number;\n    isValid?: boolean;\n    isValidReason?: {timeConflict: boolean, existConflict: boolean, dateField: boolean};\n    isValidReasonHierarchy?: any;\n\n    constructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChangeOverTime: boolean) {\n\n        this.code = code;\n        this.type = type;\n        this.label = label;\n        this.description = description;\n        this.isDefault = isDefault;\n        this.required = false; // Hardcoded to false because this functionality is disabled until later evaluation.\n        this.unique = unique;\n        this.isChangeOverTime = isChangeOverTime;\n    }\n\n}\n\nexport class AttributeTermType extends AttributeType {\n\n    // descendants: Attribute[];\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n        super(code, type, label, description, isDefault, required, unique, isChange);\n    }\n\n    rootTerm: Term = new Term(null, null, null);\n\n    termOptions: Term[] = [];\n\n    setRootTerm(term: Term) {\n        this.rootTerm = term;\n    }\n}\n\nexport class AttributeDecimalType extends AttributeType {\n    constructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n        super(code, type, label, description, isDefault, required, unique, isChange);\n\n        this.precision = 32;\n        this.scale = 8;\n    }\n}\n\nexport class TreeNode {\n    geoObject: GeoObject;\n    hierarchyType: string;\n}\n\nexport class ChildTreeNode extends TreeNode {\n    children: ChildTreeNode[];\n}\n\nexport class ParentTreeNode extends TreeNode {\n    parents: ParentTreeNode[];\n}\n\nexport class ManageGeoObjectTypeModalState {\n    state: string;\n    attribute: any;\n    termOption: any;\n}\n\nexport class PaginationPage {\n    pageNumber: number;\n    count: number;\n    pageSize: number;\n    results: any[];\n}\n\nexport class AbstractScheduledJob {\n    jobId: string;\n    historyId: string;\n    stage: string;\n    status: string;\n    author: string;\n    createDate: string;\n    lastUpdateDate: string;\n    workProgress: number;\n    workTotal: number;\n    startDate: string;\n    endDate: string;\n}\n\nexport class ScheduledJob extends AbstractScheduledJob {\n    importedRecords: number;\n    exportedRecords: number;\n    configuration: ImportConfiguration;\n    importErrors: PaginationPage;\n    exportErrors: PaginationPage;\n    problems: PaginationPage;\n    fileName: string;\n}\n\nexport class ScheduledJobOverview extends ScheduledJob {\n    stepConfig: StepConfig;\n}\n\n// export class ScheduledJobDetail extends ScheduledJob {\n//     // failedRowCount: number;\n//     importErrors: PaginationPage\n// }\n\nexport class ImportError {\n    exception: ServerException;\n    object: ImportErrorObject;\n    objectType: string;\n    id: string;\n    resolution: string;\n    selected?: boolean;\n}\n\nexport class ServerException {\n    attributes: ServerExceptionAttribute[];\n    type: string;\n    message: string;\n}\n\nexport class ServerExceptionAttribute {\n    value: string;\n    key: string;\n}\n\nexport class ImportErrorObject {\n    geoObject: GeoObjectOverTime;\n    parents: HierarchyOverTime[];\n    isNew: boolean;\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    complete?: boolean;\n    enabled?: boolean;\n    status?: string;\n}\n\nexport class MasterList {\n    oid: string;\n    typeCode: string;\n    typeLabel?: LocalizedValue;\n    displayLabel: LocalizedValue;\n    code: string;\n    representativityDate: Date;\n    publishingStartDate?: Date;\n    publishDate: Date;\n    listAbstract: string;\n    process: string;\n    progress: string;\n    accessConstraints: string;\n    useConstraints: string;\n    acknowledgements: string;\n    disclaimer: string;\n    contactName: string;\n    organization: string;\n    telephoneNumber: string;\n    email: string;\n    hierarchies: { label: string, code: string, parents: { label: string, code: string }[] }[];\n    leaf: boolean;\n    frequency: string;\n    isMaster: boolean;\n    visibility: string;\n    write?: boolean;\n    read?: boolean;\n    exploratory?: boolean;\n    versions?: MasterListVersion[];\n    subtypes?: { label: string, code: string }[];\n}\n\nexport class MasterListVersion {\n    displayLabel: string;\n    oid: string;\n    typeCode: string;\n    orgCode: string;\n    masterlist: string;\n    forDate: string;\n    createDate: string;\n    publishDate: string;\n    attributes: any[];\n    isGeometryEditable: boolean;\n    locales?: string[];\n    shapefile?: boolean;\n    isAbstract?: boolean;\n    superTypeCode?: string;\n    refreshProgress?: any;\n    subtypes?: { label: string, code: string }[];\n}\n\nexport class HierarchyOverTime {\n    code: string;\n    label: string;\n    types: {\n        code: string;\n        label: string;\n    }[];\n\n    entries: HierarchyOverTimeEntry[];\n}\n\nexport class HierarchyOverTimeEntry implements TimeRangeEntry {\n    startDate: string;\n    endDate: string;\n    oid: string;\n    parents: { [k: string]: HierarchyOverTimeEntryParent };\n    loading?: any;\n    conflictType?: string;\n    conflictMessage?: any[];\n}\n\nexport class HierarchyOverTimeEntryParent {\n    text: string;\n    geoObject: GeoObject;\n    goCode?: string;\n}\n\nexport class MasterListByOrg {\n    oid: string;\n    label: string;\n    write: boolean;\n    lists: {\n        label: string,\n        oid: string,\n        createDate: string,\n        lastUpdateDate: string,\n        isMaster: boolean,\n        write: boolean,\n        read: boolean,\n        visibility: string\n    }[];\n}\n\nexport class SynchronizationConfig {\n    oid?: string;\n    type?: string;\n    systemLabel?: string;\n    organization: string;\n    system: string;\n    hierarchy: string;\n    label: LocalizedValue;\n    configuration: any;\n}\n\nexport class OrgSyncInfo {\n    label: string;\n    code: string;\n    hierarchies: { label: string, code: string }[];\n    systems: { label: string, oid: string, type: string }[];\n}\n\nexport class ExportScheduledJob extends AbstractScheduledJob {\n    stepConfig?: StepConfig;\n}\n\nexport class ContextLayer {\n    oid: string;\n    displayLabel: string;\n    active: boolean;\n    enabled: boolean;\n}\n\nexport class ContextLayerGroup {\n    oid: string;\n    displayLabel: string;\n    contextLayers: ContextLayer[];\n}\n","\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { ErrorModalComponent } from \"@shared/component\";\n\nexport class ErrorHandler {\n\n    static getMessageFromError(err: any): string {\n        let unspecified = \"An unspecified error has occurred.  Please try your operation again.  If the problem continues, alert your technical support staff.\";\n\n        if (err == null) {\n            return unspecified;\n        } else {\n            console.log(\"An error has occurred: \", err);\n        }\n\n        let msg = null;\n\n        if (err.error != null && (typeof err.error === \"object\")) {\n            msg = err.error.localizedMessage || err.error.message;\n        }\n\n        if (msg == null) {\n            msg = err.message || err.msg || err.localizedMessage;\n        }\n\n        if (msg != null && msg.includes(\"##tferrormsg##\")) {\n            let split = msg.split(\"##tferrormsg##\");\n            return split[2];\n        }\n\n        if (msg == null) {\n            msg = unspecified;\n        }\n\n        return msg;\n    }\n\n    static showErrorAsDialog(err: any, modalService: BsModalService): BsModalRef {\n        if (err instanceof HttpErrorResponse && err.status === 401) {\n            return null;\n        }\n\n        let bsModalRef = modalService.show(ErrorModalComponent, { backdrop: true, class: \"error-white-space-pre\" });\n\n        bsModalRef.content.message = ErrorHandler.getMessageFromError(err);\n\n        return bsModalRef;\n    }\n\n}\n","import { AttributeType, GeoObject } from \"@registry/model/registry\";\nimport { LocalizedValue } from \"@shared/model/core\";\n// eslint-disable-next-line camelcase\nimport turf_booleanequal from \"@turf/boolean-equal\";\n\nexport default class Utils {\n\n    /**\n     *\n     * @param arr\n     */\n    static removeStatuses(arr: any[]): any[] {\n        var newArray = [];\n\n        for (var i = 0; i < arr.length; ++i) {\n            if (!(arr[i].code === \"CGR:Status-New\" ||\n                arr[i].code === \"CGR:Status-Pending\")) {\n                newArray.push(arr[i]);\n            }\n        }\n\n        return newArray;\n    }\n\n    /**\n     *\n     * @param dateObj\n     */\n    static formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + (month < 10 ? \"0\" : \"\") + month + \"-\" + (day < 10 ? \"0\" : \"\") + day;\n    }\n\n    static dateRangeOverlaps(aStart: number, aEnd: number, bStart: number, bEnd: number): boolean {\n        if (aStart <= bStart && bStart <= aEnd) return true; // b starts in a\n        if (aStart <= bEnd && bEnd <= aEnd) return true; // b ends in a\n        if (bStart < aStart && aEnd < bEnd) return true; // a in b\n        return false;\n    }\n\n    static dateRangeOutside(aStart: number, aEnd: number, bStart: number, bEnd: number): boolean {\n        if (aStart < bStart) return true;\n        if (aEnd > bEnd) return true;\n        return false;\n    }\n\n    static dateEndBeforeStart(start: number, end: number): boolean {\n        if (end < start) return true; // end date is before start date\n        return false;\n    }\n\n    static hasGap(aEnd: number, bStart: number): boolean {\n        return (bStart - aEnd) > (1000 * 60 * 60 * 24);\n    }\n\n    public static areValuesEqual(attributeType: AttributeType, val1: any, val2: any): boolean {\n        if (attributeType.type === \"boolean\") {\n            return val1 === val2;\n        }\n\n        if ((val1 === \"\" && val2 == null) || (val2 === \"\" && val1 == null)) {\n            return true;\n        }\n\n        if (!val1 && !val2) {\n            return true;\n        } else if ((!val1 && val2) || (!val2 && val1)) {\n            return false;\n        }\n\n        if (attributeType.type === \"term\") {\n            if (val1 != null && val2 != null) {\n                return val1.length === val2.length && val1[0] === val2[0];\n            }\n        } else if (attributeType.type === \"geometry\") {\n            return turf_booleanequal(val1, val2);\n        } else if (attributeType.type === \"date\") {\n            let casted1 = (typeof val1 === \"string\") ? parseInt(val1) : val1;\n            let casted2 = (typeof val2 === \"string\") ? parseInt(val2) : val2;\n\n            return casted1 === casted2;\n        } else if (attributeType.type === \"local\") {\n            if ((!val1.localeValues || !val2.localeValues) || val1.localeValues.length !== val2.localeValues.length) {\n                return false;\n            }\n\n            let len = val1.localeValues.length;\n            for (let i = 0; i < len; ++i) {\n                let localeValue = val1.localeValues[i];\n\n                let lv2 = this.getValueAtLocale(val2, localeValue.locale);\n                let lv1 = localeValue.value;\n\n                if ((lv1 === \"\" && lv2 == null) || (lv2 === \"\" && lv1 == null)) {\n                    continue;\n                } else if (lv1 !== lv2) {\n                    return false;\n                }\n            }\n\n            return true;\n        } else if (attributeType.type === \"_PARENT_\" && val1.parents && val2.parents) {\n            for (const [gotCode, data] of Object.entries(val1.parents)) {\n                let parentData: {text: string, geoObject: GeoObject} = data as {text: string, geoObject: GeoObject};\n\n                if (val2.parents[gotCode]) {\n                    let parentData2: {text: string, geoObject: GeoObject} = val2.parents[gotCode];\n\n                    if (parentData.geoObject == null && parentData2.geoObject == null) {\n                        // equal, keep looping\n                    } else if ((parentData.geoObject == null && parentData2.geoObject != null) || (parentData2.geoObject == null && parentData.geoObject != null)) {\n                        return false;\n                    } else if (parentData.geoObject.properties.code !== parentData2.geoObject.properties.code) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        } else if (attributeType.type === \"integer\") {\n            let casted1 = (typeof val1 === \"string\") ? parseInt(val1) : val1;\n            let casted2 = (typeof val2 === \"string\") ? parseInt(val2) : val2;\n\n            return casted1 === casted2;\n        } else if (attributeType.type === \"float\") {\n            let casted1 = (typeof val1 === \"string\") ? parseFloat(val1) : val1;\n            let casted2 = (typeof val2 === \"string\") ? parseFloat(val2) : val2;\n\n            return casted1 === casted2;\n        }\n\n        return val1 === val2;\n    }\n\n    public static getValueAtLocale(lv: LocalizedValue, locale: string) {\n        return new LocalizedValue(lv.localizedValue, lv.localeValues).getValue(locale);\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { TreeModule } from \"@circlon/angular-tree-component\";\nimport { ContextMenuModule } from \"ngx-contextmenu\";\nimport { ModalModule } from \"ngx-bootstrap/modal\";\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\nimport { ButtonsModule } from \"ngx-bootstrap/buttons\";\nimport { TypeaheadModule } from \"ngx-bootstrap/typeahead\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { FileUploadModule } from \"ng2-file-upload\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { ProgressbarModule } from \"ngx-bootstrap/progressbar\";\nimport { CollapseModule } from \"ngx-bootstrap/collapse\";\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\n\nimport { ErrorModalComponent } from \"./component/modals/error-modal.component\";\nimport { SuccessModalComponent } from \"./component/modals/success-modal.component\";\nimport { ConfirmModalComponent } from \"./component/modals/confirm-modal.component\";\nimport { GenericModalComponent } from \"./component/modals/generic-modal.component\";\nimport { ErrorMessageComponent } from \"./component/message/error-message.component\";\nimport { MessageComponent } from \"./component/message/message.component\";\nimport { BooleanFieldComponent } from \"./component/form-fields/boolean-field/boolean-field.component\";\nimport { DateFieldComponent } from \"./component/form-fields/date-field/date-field.component\";\nimport { LoadingBarComponent } from \"./component/loading-bar/loading-bar.component\";\nimport { PasswordStrengthBarComponent } from \"./component/password-strength-bar/password-strength-bar.component\";\n\nimport { AdminGuard, MaintainerGuard, ContributerGuard, AuthGuard } from \"./service/guard.service\";\nimport { PendingChangesGuard } from \"./service/pending-changes-guard\";\n\nimport { AuthService } from \"./service/auth.service\";\nimport { ProfileService } from \"./service/profile.service\";\nimport { OrganizationService } from \"./service/organization.service\";\nimport { ExternalSystemService } from \"./service/external-system.service\";\nimport { LocalizationService } from \"./service/localization.service\";\nimport { ProgressService } from \"./service/progress.service\";\nimport { EventService } from \"./service/event.service\";\nimport { ModalStepIndicatorService } from \"./service/modal-step-indicator.service\";\nimport { SessionService } from \"./service/session.service\";\nimport { DateService } from \"./service/date.service\";\n\nimport { LocalizePipe } from \"./pipe/localize.pipe\";\nimport { PhonePipe } from \"./pipe/phone.pipe\";\n\nimport { OnlyNumber } from \"./directive/number-only.directive\";\nimport { MustMatchDirective } from \"./directive/must-match.directive\";\n\nimport { CgrHeaderComponent } from \"./component/header/header.component\";\nimport { ProgressBarComponent } from \"./component/progress-bar/progress-bar.component\";\nimport { LocalizeComponent } from \"./component/localize/localize.component\";\nimport { ConvertKeyLabel } from \"./component/localize/convert-key-label.component\";\nimport { ModalStepIndicatorComponent } from \"./component/modals/modal-step-indicator.component\";\nimport { ProfileComponent } from \"./component/profile/profile.component\";\n\nimport \"../rxjs-extensions\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        ModalModule.forRoot(),\n        TreeModule,\n        ContextMenuModule,\n        BsDropdownModule,\n        ButtonsModule,\n        TypeaheadModule,\n        ProgressbarModule,\n        CollapseModule,\n        NgxPaginationModule,\n        BsDatepickerModule.forRoot()\n    ],\n    declarations: [\n        LocalizeComponent,\n        ConvertKeyLabel,\n        BooleanFieldComponent,\n        DateFieldComponent,\n        LoadingBarComponent,\n        ErrorMessageComponent,\n        MessageComponent,\n        ConfirmModalComponent,\n        GenericModalComponent,\n        ErrorModalComponent,\n        SuccessModalComponent,\n        PasswordStrengthBarComponent,\n        OnlyNumber,\n        MustMatchDirective,\n        ProgressBarComponent,\n        ModalStepIndicatorComponent,\n        CgrHeaderComponent,\n        ProfileComponent,\n        LocalizePipe,\n        PhonePipe\n    ],\n    exports: [\n        LocalizeComponent,\n        ConvertKeyLabel,\n        BooleanFieldComponent,\n        DateFieldComponent,\n        LoadingBarComponent,\n        ErrorMessageComponent,\n        MessageComponent,\n        ConfirmModalComponent,\n        GenericModalComponent,\n        ErrorModalComponent,\n        SuccessModalComponent,\n        PasswordStrengthBarComponent,\n        OnlyNumber,\n        MustMatchDirective,\n        ProgressBarComponent,\n        ModalStepIndicatorComponent,\n        CgrHeaderComponent,\n        ProfileComponent,\n        LocalizePipe,\n        PhonePipe,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    entryComponents: [\n        ErrorModalComponent,\n        SuccessModalComponent,\n        ConfirmModalComponent,\n        GenericModalComponent,\n        ModalStepIndicatorComponent,\n        ErrorMessageComponent,\n        LoadingBarComponent,\n        ProfileComponent\n    ]\n})\nexport class SharedModule {\n\n    static forRoot(): ModuleWithProviders<SharedModule> {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CookieService,\n                AuthService,\n                SessionService,\n                ProfileService,\n                OrganizationService,\n                ExternalSystemService,\n                LocalizationService,\n                DateService,\n                ModalStepIndicatorService,\n                EventService,\n                ProgressService,\n                AdminGuard,\n                MaintainerGuard,\n                ContributerGuard,\n                AuthGuard,\n                PendingChangesGuard\n            ]\n        };\n    }\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler } from '@shared/component';\nimport { HubService } from '@core/service/hub.service';\n\ndeclare var acp:string;\n\n@Component({\n  selector: 'login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: []\n})\nexport class LoginHeaderComponent {\n  context:string;\n  \n  constructor(private hubService: HubService) {\n    this.context = acp;\n  }\n  \n  public error(err: HttpErrorResponse): void {\n    let msg = ErrorHandler.getMessageFromError(err);\n    console.log(msg, err);\n  }\n}\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default navbar-fixed-top\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\">\n                <img [src]=\"context + '/logo/view?id=logo'\" />\n            </a>\n            <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"cgr.standard.title\"></localize></a>\n          </div>\n        </div>\n      </nav>\n    </header>\n","export enum ActionTypes {\n    \"CREATEGEOOBJECTACTION\" = \"CreateGeoObjectAction\",\n    \"UPDATEATTRIBUTETACTION\" = \"UpdateAttributeAction\",\n    \"UPDATEGEOOBJECTACTION\" = \"UpdateGeoObjectAction\" // Deprecated DO NOT USE\n}\n\nexport enum GovernanceStatus {\n    \"PENDING\" = \"PENDING\",\n    \"ACCEPTED\" = \"ACCEPTED\",\n    \"REJECTED\" = \"REJECTED\"\n}\n\nexport enum GeoObjectTypeModalStates {\n    \"manageAttributes\" = \"MANAGE-ATTRIBUTES\",\n    \"editAttribute\" = \"EDIT-ATTRIBUTE\",\n    \"defineAttribute\" = \"DEFINE-ATTRIBUTE\",\n    \"manageTermOption\" = \"MANAGE-TERM-OPTION\",\n    \"editTermOption\" = \"EDIT-TERM-OPTION\",\n    \"manageGeoObjectType\" = \"MANAGE-GEO-OBJECT-TYPE\"\n}\n\nexport enum ImportStrategy {\n    \"NEW_AND_UPDATE\" = \"NEW_AND_UPDATE\",\n    \"NEW_ONLY\" = \"NEW_ONLY\",\n    \"UPDATE_ONLY\" = \"UPDATE_ONLY\"\n}\n\nexport enum ConflictType {\n    MISSING_REFERENCE = \"MISSING_REFERENCE\",\n    TIME_RANGE = \"TIME_RANGE\",\n    OUTSIDE_EXISTS = \"OUTSIDE_EXISTS\"\n}\n\nexport enum LayerColor {\n  \"OLD\" = \"#A4A4A4\",\n  \"NEW\" = \"#0062AA\"\n}\n","import { Input, Component, OnInit } from \"@angular/core\";\n\nimport { LocalizationService, AuthService } from \"@shared/service\";\nimport { LocaleView, LocalizedValue } from \"@shared/model/core\";\n\n@Component({\n\n    selector: \"convert-key-label\",\n    templateUrl: \"./convert-key-label.component.html\",\n    styleUrls: []\n})\nexport class ConvertKeyLabel implements OnInit {\n\n    @Input() key: any;\n    text: string;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: LocalizationService, private authService: AuthService) { }\n\n    ngOnInit(): void {\n        if (this.key != null && this.key.label != null && this.key.label.localizedValue != null) {\n            this.text = this.key.label.localizedValue;\n            return;\n        }\n\n        let locales: LocaleView[] = this.authService.getLocales();\n\n        let len = locales.length;\n        for (let i = 0; i < len; ++i) {\n            let locale: LocaleView = locales[i];\n\n            if (locale.toString === this.key) {\n                this.text = this.getValue(locale.label, this.service.getLocale());\n\n                return;\n            }\n        }\n\n        if (this.key === \"defaultLocale\") {\n            this.text = this.service.decode(\"localization.defaultLocal\");\n        } else {\n            this.text = this.key;\n        }\n    }\n\n    public getValue(lv: LocalizedValue, localeToString: string): string {\n        let len = lv.localeValues.length;\n\n        for (let i = 0; i < len; ++i) {\n            let value = lv.localeValues[i];\n\n            if (value.locale === localeToString) {\n                return value.value;\n            }\n        }\n\n        return lv.localizedValue;\n    }\n\n}\n","{{text}}","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    active: boolean;\n    enabled: boolean;\n}","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, ViewChild } from \"@angular/core\";\nimport { LocalizationService } from \"@shared/service\";\nimport { DateService } from \"@shared/service/date.service\";\n\nimport { BsDatepickerConfig, BsDatepickerDirective } from \"ngx-bootstrap/datepicker\";\n\nimport { PRESENT } from \"@registry/model/registry\";\n\ndeclare let acp: string;\n\n@Component({\n    selector: \"date-field\",\n    templateUrl: \"./date-field.component.html\",\n    styleUrls: [\"./date-field.css\"],\n})\n\nexport class DateFieldComponent {\n\n    @ViewChild(BsDatepickerDirective, { static: false }) datepicker: BsDatepickerDirective;\n\n    @Input() allowFutureDates: boolean = true;\n    @Input() allowInfinity: boolean = false;\n    @Input() inputName: string = this.idGenerator();\n    @Input() classNames: string = \"\";\n    @Input() customStyles: string = \"\";\n    @Input() localizeLabelKey: string = \"\"; // localization key used to localize in the component template\n    @Input() label: string = \"\"; // raw string input\n    @Input() disable: boolean = false;\n    @Input() required: boolean = false;\n    @Input() placement: string = \"bottom\";\n    @Input() oldDate: string = null;\n\n    _value: Date;\n    // eslint-disable-next-line accessor-pairs\n    @Input() set value(value) {\n        if (value) {\n            this.setValue(value ? value : null);\n        }\n    }\n\n    @Output() public valueChange = new EventEmitter<string>();\n\n    /* You can pass a function in with (change)='function()' */\n    @Output() public change = new EventEmitter<any>();\n\n    today: Date = new Date();\n    message: string;\n    returnFocusToInput: boolean = false;\n    valueIsPresent: boolean = false;\n\n    @Input() valid: boolean = true;\n    @Output() public validChange = new EventEmitter<boolean>();\n\n    constructor(private localizationService: LocalizationService, private bsDatepickerConfig: BsDatepickerConfig, private changeDetectorRef: ChangeDetectorRef, private dateService: DateService) {\n        this.bsDatepickerConfig.dateInputFormat = \"YYYY-MM-DD\";\n    }\n\n\n    private setValue(value: string | number): void {\n        // @ts-ignore\n        if (!isNaN(value)) {\n            // @ts-ignore\n            value = parseInt(value);\n        }\n\n        if (value && typeof value === \"string\") {\n            let date = new Date(+value.split(\"-\")[0], +value.split(\"-\")[1] - 1, +value.split(\"-\")[2]);\n\n            if (value === PRESENT) {\n                this.valueIsPresent = true;\n            }\n\n            this._value = date;\n        } else if (value && typeof value === \"number\") {\n            // Custom attributes of date type come through as UTC time\n            this._value = new Date(new Date(value).getUTCFullYear(), new Date(value).getUTCMonth(), new Date(value).getUTCDate());\n        } else {\n            this._value = null;\n        }\n    }\n\n    public getValue(): Date {\n        return this._value;\n    }\n\n    public setInvalid(message: string) {\n        this.valid = false;\n        this.message = message;\n    }\n\n    idGenerator() {\n        let S4 = function() {\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n        };\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n    }\n\n    isEqual(date1: Date, date2: Date): boolean {\n        let equal = false;\n\n        if (date1 && date2) {\n            // if(date1.toISOString().substr(0, 10) === PRESENT && date2.toISOString().substr(0, 10) === PRESENT){\n            if (date1.getTime() === date2.getTime()) {\n                return true;\n            }\n        }\n\n        return equal;\n    }\n\n    toggleInfinity(): void {\n        let date = this.getValue();\n\n        if (date && this.isEqual(date, this.dateService.getPresentDate())) {\n            this.setValue(null); // clear the date picker\n            this.valueChange.emit(null);\n            this.valueIsPresent = false;\n        } else {\n            this.setValue(PRESENT);\n            this.valueChange.emit(this.dateService.getDateString(this.getValue()));\n            this.valueIsPresent = true;\n        }\n\n        this.change.emit();\n    }\n\n    toggle(event: Date): void {\n        setTimeout(() => {\n            let validity = this.dateService.validateDate(event, this.required, this.allowFutureDates);\n            this.valid = validity.valid;\n            this.message = validity.message;\n\n            if (this.valid) {\n                // Must adhere to the ISO 8601 format\n                let formattedDate = this.dateService.getDateString(event);\n\n                if (formattedDate === PRESENT) {\n                    this.valueIsPresent = true;\n                } else {\n                    this.valueIsPresent = false;\n                }\n\n                this.valueChange.emit(formattedDate);\n            } else {\n                // hack to avoid ngx-datepicker from putting \"invalid date\" in the input\n                this.setValue(null);\n\n                this.valueChange.emit(null);\n            }\n\n            this.change.emit();\n            this.validChange.emit(this.valid);\n        }, 0)\n    }\n\n}","\n<label for=\"{{inputName}}\" *ngIf=\"label.length > 0\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n<label for=\"{{inputName}}\" *ngIf=\"localizeLabelKey.length > 0\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n\n<!-- <input id=\"date-input\" [class]=\"classNames\" name=\"{{inputName}}\" [(ngModel)]=\"value\" (change)=\"toggle($event)\" type=\"date\" max=\"{{today|date:'yyyy-MM-dd'}}\" [disabled]=\"disable\" [required]=\"required\"/> -->\n\n<div [hidden]=\"valueIsPresent\">\n  <span class=\"wrapper\">\n      <input [class]=\"classNames ? classNames + ' ' + 'date-input-element' : 'date-input-element'\" \n           [style]=\"customStyles ? customStyles : ''\"\n           name=\"{{inputName}}\"\n           type=\"text\"\n           placeholder=\"YYYY-MM-DD\"\n           [bsValue]=\"_value\"\n           [value]=\"_value | date: 'yyyy-MM-dd'\"\n           (bsValueChange)=\"toggle($event)\"\n           [bsConfig]=\"{\n              dateInputFormat: 'YYYY-MM-DD', \n              containerClass: 'theme-default', \n              returnFocusToInput: returnFocusToInput,\n              adaptivePosition: true\n              }\"\n           [outsideClick]=\"true\"\n           placement=\"{{placement}}\"\n           [maxDate]=\"allowFutureDates ? null : today\"\n           [isDisabled]=\"disable\"\n           [disabled]=\"disable\"\n           bsDatepicker\n           #dp=\"bsDatepicker\"\n           >\n  </span>\n  \n  <div class=\"form-input-validation-error-message-wrapper\">\n    <p *ngIf=\"message\" class=\"error-message\">{{message}}</p>\n  </div>\n</div>\n\n<div *ngIf=\"oldDate\">\n  <p class=\"warning-text display-current-value\">\n    <localize key=\"change.request.changed.value.prefix\"></localize>\n    {{ oldDate }}\n  </p>\n</div>\n\n<p [hidden]=\"!valueIsPresent\" style=\"font-size:14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n\n<div *ngIf=\"allowInfinity && !disable\" class=\"text-right\" style=\"padding: 10px 0;\">\n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"valueIsPresent\" (click)=\"toggleInfinity()\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></button> \n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"!valueIsPresent\" (click)=\"toggleInfinity()\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></button>\n</div>\n\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\ndeclare let acp: string;\n\n@Component({\n    selector: \"boolean-field\",\n    templateUrl: \"./boolean-field.component.html\",\n    styleUrls: [\"./boolean-field.css\"]\n})\nexport class BooleanFieldComponent {\n\n    @Input() value: boolean = false;\n    @Output() public valueChange = new EventEmitter<boolean>();\n\n    @Input() localizeLabelKey: string = \"\"; // localization key used to localize in the component template\n    @Input() label: string = \"\"; // raw string input\n\n    @Input() disable: boolean = false;\n\n    /* You can pass a function in with (change)='function()' */\n    @Output() public change = new EventEmitter<any>();\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor() { }\n\n    toggle(): void {\n        if (!this.disable) {\n            this.value = !this.value;\n\n            this.valueChange.emit(this.value);\n            this.change.emit(this.value);\n        }\n    }\n}","<div class=\"check-block\">\n  <div (click)=\"toggle()\" [ngClass]=\"{'chk-checked' : value, 'disabled': disable}\" ng-style=\"chkstyle\" class=\"chk-area\">\n    <span></span>\n  </div>\n  \n  <label *ngIf=\"label.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n  <label *ngIf=\"localizeLabelKey.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n</div>","import { Injectable, Output, EventEmitter } from \"@angular/core\";\n\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport { Map, LngLat, LngLatBounds } from \"mapbox-gl\";\n\nimport { Layer } from \"../component/geoobject-shared-attribute-editor/manage-versions-model\";\n\n// eslint-disable-next-line no-unused-vars\ndeclare let acp: any;\n\n/**\n * This is a generic service used for rendering layers from ValueOverTime objects\n */\n@Injectable()\nexport class GeometryService {\n\n    map: Map;\n\n    layers: Layer[] = [];\n\n    geometryType: String;\n\n    readOnly: boolean;\n\n    // @Output() layersChange: EventEmitter<VersionOverTimeLayer[]> = new EventEmitter();\n\n    editingControl: any = null;\n\n    simpleEditControl: any = null;\n\n    editingLayer: Layer;\n\n    @Output() geometryChange = new EventEmitter<any>();\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor() { }\n\n    ngOnInit() {\n        window.onbeforeunload = () => this.destroy();\n    }\n\n    initialize(map: Map, geometryType: String, readOnly: boolean) {\n        this.map = map;\n        this.geometryType = geometryType;\n        // this.editingControl = null;\n\n        this.addLayers();\n\n        this.map.on(\"draw.create\", () => {\n            this.saveEdits();\n        });\n        this.map.on(\"draw.delete\", () => {\n            this.saveEdits();\n        });\n        this.map.on(\"draw.update\", () => {\n            this.saveEdits();\n        });\n    }\n\n    destroy(destroyMap: boolean = true): void {\n        if (this.editingControl != null) {\n            this.map.removeControl(this.editingControl);\n            this.editingControl = null;\n        }\n\n        if (this.map != null && destroyMap) {\n            this.map.remove();\n            this.map = null;\n        } else if (this.map != null) {\n            this.removeLayers();\n        }\n\n        if (this.layers != null) {\n            this.layers.forEach(layer => {\n                layer.isEditing = false;\n                layer.isRendering = false;\n            });\n        }\n\n        this.editingLayer = null;\n        this.layers = [];\n    }\n\n    startEditing(layer: Layer) {\n        if (this.isEditing()) {\n            this.stopEditing();\n        }\n\n        this.editingLayer = layer;\n        this.editingLayer.isEditing = true;\n\n        if (!this.readOnly) {\n            this.enableEditing();\n        }\n\n        this.addEditingLayers();\n    }\n\n    stopEditing(rerender: boolean = true) {\n        if (this.isEditing()) {\n            this.saveEdits(rerender);\n\n            this.editingLayer.isEditing = false;\n            this.editingLayer = null;\n\n            this.editingControl.deleteAll();\n            this.map.removeControl(this.editingControl);\n\n            this.editingControl = null;\n        }\n    }\n\n    isEditing(): boolean {\n        return this.editingLayer != null;\n    }\n\n    setPointCoordinates(lat: any, long: any) {\n        if (this.editingLayer != null) {\n            this.editingControl.set({\n                type: \"FeatureCollection\",\n                features: [{\n                    id: this.editingLayer.oid,\n                    type: \"Feature\",\n                    properties: {},\n                    geometry: { type: \"Point\", coordinates: [long, lat] }\n                }]\n            });\n\n            this.editingControl.changeMode(\"simple_select\", { featureIds: this.editingLayer.oid });\n\n            this.saveEdits();\n\n            /*\n            this.editingLayer.value = {\n              type: 'FeatureCollection',\n              features: [{\n              id: this.editingLayer.oid,\n                type: 'Feature',\n                properties: {},\n                geometry: { type: 'Point', coordinates: [ long, lat ] }\n              }]\n            };\n            */\n\n            /*\n            this.editingLayer.value.coordinates = [ -97.4870830718814, 41.84836050415993 ];\n\n            this.editingControl.set(this.editingLayer.value);\n\n            this.removeLayers();\n            this.addLayers();\n\n            this.editingControl.changeMode( 'simple_select', { featureIds: this.editingLayer.oid } );\n            */\n        }\n    }\n\n    isValid(): boolean {\n        if (!this.readOnly) {\n            let isValid: boolean = false;\n\n            if (this.editingControl != null) {\n                let featureCollection: any = this.editingControl.getAll();\n\n                if (featureCollection.features.length > 0) {\n                    isValid = true;\n                }\n            }\n\n            return isValid;\n        }\n\n        return true;\n    }\n\n    saveEdits(rerender: boolean = true): void {\n        if (this.editingLayer != null) {\n            let geoJson = this.getDrawGeometry();\n\n            this.editingLayer.editPropagator.value = geoJson;\n\n            if (rerender) {\n                this.removeLayers();\n                this.addLayers();\n            }\n        }\n    }\n\n    public reload(): void {\n        if (this.map != null) {\n            this.removeLayers();\n            this.addLayers();\n\n            if (this.editingControl != null) {\n                this.editingControl.deleteAll();\n            }\n\n            this.addEditingLayers();\n        }\n    }\n\n    setEditing(isEditing: boolean, layer: Layer) {\n        if (this.isEditing()) {\n            this.stopEditing();\n        }\n\n        layer.isEditing = isEditing;\n\n        if (isEditing) {\n            this.startEditing(layer);\n        }\n    }\n\n    setRendering(isRendering: boolean, layer: Layer) {\n        layer.isRendering = isRendering;\n        this.addLayer(layer);\n    }\n\n    addLayer(newLayer: Layer) {\n        let existingIndex = this.layers.findIndex((findLayer: Layer) => { return findLayer.oid === newLayer.oid; });\n\n        if (existingIndex !== -1) {\n            this.layers.splice(existingIndex, 1);\n            this.layers.push(newLayer);\n        } else {\n            this.layers.push(newLayer);\n        }\n\n        if (newLayer.isEditing) {\n            this.startEditing(newLayer);\n        }\n\n        this.layers = this.layers.sort((a, b) => { return a.zindex - b.zindex; });\n\n        this.removeLayers();\n        this.addLayers();\n    }\n\n    getLayers(): Layer[] {\n        return this.layers;\n    }\n\n    getRenderedLayers(): Layer[] {\n        return this.layers.filter(layer => layer.isRendering);\n    }\n\n    setLayers(layers: Layer[]): void {\n        this.removeLayers();\n\n        this.layers = layers.sort((a, b) => { return a.zindex - b.zindex; });\n\n        this.addLayers();\n    }\n\n    enableEditing(): void {\n        if (this.editingControl == null) {\n            if (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n                this.editingControl = new MapboxDraw({\n                    controls: {\n                        point: false,\n                        line_string: false,\n                        polygon: true,\n                        trash: true,\n                        combine_features: false,\n                        uncombine_features: false\n                    }\n                });\n            } else if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n                this.editingControl = new MapboxDraw({\n                    userProperties: true,\n                    controls: {\n                        point: true,\n                        line_string: false,\n                        polygon: false,\n                        trash: true,\n                        combine_features: false,\n                        uncombine_features: false\n                    },\n                    styles: [\n                        {\n                            id: \"highlight-active-points\",\n                            type: \"circle\",\n                            filter: [\"all\",\n                                [\"==\", \"$type\", \"Point\"],\n                                [\"==\", \"meta\", \"feature\"],\n                                [\"==\", \"active\", \"true\"]],\n                            paint: {\n                                \"circle-radius\": 13,\n                                \"circle-color\": \"#33FFF9\",\n                                \"circle-stroke-width\": 4,\n                                \"circle-stroke-color\": \"white\"\n                            }\n                        },\n                        {\n                            id: \"points-are-blue\",\n                            type: \"circle\",\n                            filter: [\"all\",\n                                [\"==\", \"$type\", \"Point\"],\n                                [\"==\", \"meta\", \"feature\"],\n                                [\"==\", \"active\", \"false\"]],\n                            paint: {\n                                \"circle-radius\": 10,\n                                \"circle-color\": \"#800000\",\n                                \"circle-stroke-width\": 2,\n                                \"circle-stroke-color\": \"white\"\n                            }\n                        }\n                    ]\n                });\n            } else if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n                this.editingControl = new MapboxDraw({\n                    controls: {\n                        point: false,\n                        line_string: true,\n                        polygon: false,\n                        trash: true,\n                        combine_features: false,\n                        uncombine_features: false\n                    }\n                });\n            }\n\n            if (this.map.getSource(\"mapbox-gl-draw-cold\") == null) {\n                this.map.addControl(this.editingControl);\n            }\n        }\n    }\n\n    addEditingLayers(): void {\n        if (this.editingLayer != null && this.editingControl != null) {\n            let val = this.editingLayer.editPropagator.value;\n\n            if (val) {\n                this.editingControl.add(this.editingLayer.editPropagator.value);\n            }\n        }\n    }\n\n    removeSource(prefix: string): void {\n        if (!this.map) {\n            return;\n        }\n\n        let sourceName: string = prefix + \"-geoobject\";\n\n        if (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n            if (this.map.getLayer(sourceName + \"-polygon\") != null) {\n                this.map.removeLayer(sourceName + \"-polygon\");\n            }\n        } else if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n            if (this.map.getLayer(sourceName + \"-point\") != null) {\n                this.map.removeLayer(sourceName + \"-point\");\n            }\n        } else if (this.geometryType === \"LINE\" || this.geometryType === \"MultiLine\") {\n            if (this.map.getLayer(sourceName + \"-line\") != null) {\n                this.map.removeLayer(sourceName + \"-line\");\n            }\n        }\n\n        if (this.map.getSource(sourceName) != null) {\n            this.map.removeSource(sourceName);\n        }\n    }\n\n    removeLayers(): void {\n        if (this.layers != null && this.layers.length > 0) {\n            let len = this.layers.length;\n\n            for (let i = 0; i < len; ++i) {\n                let layer = this.layers[i];\n                this.removeSource(layer.oid);\n            }\n        }\n    }\n\n    addLayers(): void {\n        if (this.layers != null && this.layers.length > 0) {\n            let len = this.layers.length;\n            for (let i = 0; i < len; ++i) {\n                let layer = this.layers[i];\n\n                if (layer.isRendering) {\n                    this.renderGeometryAsLayer(layer.editPropagator == null ? layer.geojson : layer.editPropagator.value, layer.oid, layer.color);\n                }\n            }\n        }\n    }\n\n    renderGeometryAsLayer(geometry: any, sourceName: string, color: string) {\n        let finalSourceName: string = sourceName + \"-geoobject\";\n\n        if (!this.map) {\n            return;\n        }\n        if (!geometry) {\n            return;\n        }\n\n        this.map.addSource(finalSourceName, {\n            type: \"geojson\",\n            data: {\n                type: \"FeatureCollection\",\n                features: []\n            }\n        });\n\n        if (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n            // Polygon Layer\n            this.map.addLayer({\n                id: finalSourceName + \"-polygon\",\n                type: \"fill\",\n                source: finalSourceName,\n                paint: {\n                    \"fill-color\": color,\n                    \"fill-outline-color\": \"black\",\n                    \"fill-opacity\": 0.7\n                }\n            });\n        } else if (this.geometryType === \"POINT\" || this.geometryType === \"MULTIPOINT\") {\n            // Point layer\n            this.map.addLayer({\n                id: finalSourceName + \"-point\",\n                type: \"circle\",\n                source: finalSourceName,\n                paint: {\n                    \"circle-radius\": 3,\n                    \"circle-color\": color,\n                    \"circle-stroke-width\": 2,\n                    \"circle-stroke-color\": \"#FFFFFF\"\n                }\n            });\n        } else if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n            this.map.addLayer({\n                id: finalSourceName + \"-line\",\n                source: finalSourceName,\n                type: \"line\",\n                layout: {\n                    \"line-join\": \"round\",\n                    \"line-cap\": \"round\"\n                },\n                paint: {\n                    \"line-color\": color,\n                    \"line-width\": 2\n                }\n            });\n        }\n\n        (<any> this.map.getSource(finalSourceName)).setData(geometry);\n    }\n\n    getDrawGeometry(): any {\n        if (this.editingControl != null) {\n            let featureCollection: any = this.editingControl.getAll();\n\n            if (featureCollection.features.length > 0) {\n                // The first Feature is our GeoObject.\n\n                // Any additional features were created using the draw editor. Combine them into the GeoObject if its a multi-polygon.\n                if (this.geometryType === \"MULTIPOLYGON\") {\n                    let polygons = [];\n\n                    for (let i = 0; i < featureCollection.features.length; i++) {\n                        let feature = featureCollection.features[i];\n\n                        if (feature.geometry.type === \"MultiPolygon\") {\n                            for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                                polygons.push(feature.geometry.coordinates[j]);\n                            }\n                        } else {\n                            polygons.push(feature.geometry.coordinates);\n                        }\n                    }\n\n                    return {\n                        coordinates: polygons,\n                        type: \"MultiPolygon\"\n                    };\n                } else if (this.geometryType === \"MULTIPOINT\") {\n                    let points = [];\n\n                    for (let i = 0; i < featureCollection.features.length; i++) {\n                        let feature = featureCollection.features[i];\n\n                        if (feature.geometry.type === \"MultiPoint\") {\n                            for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                                points.push(feature.geometry.coordinates[j]);\n                            }\n                        } else {\n                            points.push(feature.geometry.coordinates);\n                        }\n                    }\n\n                    return {\n                        coordinates: points,\n                        type: \"MultiPoint\"\n                    };\n                } else if (this.geometryType === \"MULTILINE\") {\n                    let lines = [];\n\n                    for (let i = 0; i < featureCollection.features.length; i++) {\n                        let feature = featureCollection.features[i];\n\n                        if (feature.geometry.type === \"MultiLineString\") {\n                            for (let j = 0; j < feature.geometry.coordinates.length; j++) {\n                                lines.push(feature.geometry.coordinates[j]);\n                            }\n                        } else {\n                            lines.push(feature.geometry.coordinates);\n                        }\n                    }\n\n                    return {\n                        coordinates: lines,\n                        type: \"MultiLineString\"\n                    };\n                } else {\n                    return featureCollection.features[0].geometry;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    public static createEmptyGeometryValue(geometryType: String): any {\n        let value = { type: geometryType, coordinates: [] };\n\n        if (geometryType === \"MULTIPOLYGON\") {\n            value.type = \"MultiPolygon\";\n        } else if (geometryType === \"POLYGON\") {\n            value.type = \"Polygon\";\n        } else if (geometryType === \"POINT\") {\n            value.type = \"Point\";\n        } else if (geometryType === \"MULTIPOINT\") {\n            value.type = \"MultiPoint\";\n        } else if (geometryType === \"LINE\") {\n            value.type = \"Line\";\n        } else if (geometryType === \"MULTILINE\") {\n            value.type = \"MultiLine\";\n        }\n\n        return value;\n    }\n\n    zoomToLayersExtent(): void {\n        this.layers.forEach(layer => {\n            if (layer.geojson != null) {\n                if (this.geometryType === \"MULTIPOINT\" || this.geometryType === \"POINT\") {\n                    let coords = layer.geojson.coordinates;\n\n                    if (coords) {\n                        let bounds = new LngLatBounds();\n                        coords.forEach(coord => {\n                            bounds.extend(coord);\n                        });\n\n                        let center = bounds.getCenter();\n                        let pt = new LngLat(center.lng, center.lat);\n\n                        this.map.flyTo({\n                            center: pt,\n                            zoom: 9,\n                            essential: true\n                        });\n                    }\n                } else if (this.geometryType === \"MULTIPOLYGON\" || this.geometryType === \"POLYGON\") {\n                    let coords = layer.geojson.coordinates;\n\n                    if (coords) {\n                        let bounds = new LngLatBounds();\n                        coords.forEach(polys => {\n                            polys.forEach(subpoly => {\n                                subpoly.forEach(coord => {\n                                    bounds.extend(coord);\n                                });\n                            });\n                        });\n\n                        this.map.fitBounds(bounds, {\n                            padding: 20\n                        });\n                    }\n                } else if (this.geometryType === \"LINE\" || this.geometryType === \"MULTILINE\") {\n                    let coords = layer.geojson.coordinates;\n\n                    if (coords) {\n                        let bounds = new LngLatBounds();\n                        coords.forEach(lines => {\n                            lines.forEach(subline => {\n                                subline.forEach(coord => {\n                                    bounds.extend(coord);\n                                });\n                            });\n                        });\n\n                        this.map.fitBounds(bounds, {\n                            padding: 20\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n    selector: \"[OnlyNumber]\"\n})\nexport class OnlyNumber {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private el: ElementRef) { }\n\n    @Input() OnlyNumber: boolean;\n\n    @HostListener(\"keydown\", [\"$event\"]) onKeyDown(event: any) {\n        let e = <KeyboardEvent>event;\n        if (this.OnlyNumber) {\n            if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n                // Allow: Ctrl+A\n                (e.keyCode === 65 && e.ctrlKey === true) ||\n                // Allow: Ctrl+C\n                (e.keyCode === 67 && e.ctrlKey === true) ||\n                // Allow: Ctrl+X\n                (e.keyCode === 88 && e.ctrlKey === true) ||\n                // Allow: home, end, left, right\n                (e.keyCode >= 35 && e.keyCode <= 39)) {\n                // let it happen, don't do anything\n                return;\n            }\n            // Ensure that it is a number and stop the keypress\n            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n                e.preventDefault();\n            }\n        }\n    }\n\n}\n","import { Directive, Input } from \"@angular/core\";\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup } from \"@angular/forms\";\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        // return null if controls haven't initialised yet\n        if (!control || !matchingControl) {\n            return null;\n        }\n\n        // return null if another validator has already found an error on the matchingControl\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            return null;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    };\n}\n\n@Directive({\n    selector: \"[mustMatch]\",\n    providers: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\n})\nexport class MustMatchDirective implements Validator {\n\n    @Input(\"mustMatch\") mustMatch: string[] = [];\n\n    validate(formGroup: FormGroup): ValidationErrors {\n        return MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\n    }\n\n}\n","/* eslint-disable padded-blocks */\nexport class Profile {\n    oid: string;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    changePassword?: boolean;\n    phoneNumber?: string;\n    altFirstName?: string;\n    altLastName?: string;\n    altPhoneNumber?: string;\n    position?: string;\n    department?: string;\n    externalSystemOid?: string;\n}","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { formatNumber, ParsedNumber } from \"libphonenumber-js\";\n\n@Pipe({\n    name: \"phone\"\n})\nexport class PhonePipe implements PipeTransform {\n\n    transform(value: ParsedNumber, args?: string): any {\n        if (!value) {\n            return value;\n        }\n\n        return formatNumber({ country: \"US\", phone: value.toString() }, \"International\");\n    }\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { CgrAppModule } from './app/cgr-app.module';\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(CgrAppModule)\n  .then(success => console.log('Bootstrap success'))\n  .catch(error => console.log(error));\n\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { TreeModule } from \"@circlon/angular-tree-component\";\nimport { ContextMenuModule } from \"ngx-contextmenu\";\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\nimport { ButtonsModule } from \"ngx-bootstrap/buttons\";\nimport { TypeaheadModule } from \"ngx-bootstrap/typeahead\";\nimport { FileUploadModule } from \"ng2-file-upload\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { ProgressbarModule } from \"ngx-bootstrap/progressbar\";\nimport { CollapseModule } from \"ngx-bootstrap/collapse\";\nimport { TabsModule } from \"ngx-bootstrap/tabs\";\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { CgrAppComponent } from \"./cgr-app.component\";\nimport { CgrAppRoutingModule, routedComponents } from \"./cgr-app-routing.module\";\n\nimport { LoginComponent } from \"@core/component/login/login.component\";\nimport { LoginHeaderComponent } from \"@core/component/login/login-header.component\";\nimport { HubComponent } from \"@core/component/hub/hub.component\";\nimport { ForgotPasswordComponent } from \"@core/component/forgotpassword/forgotpassword.component\";\nimport { ForgotPasswordCompleteComponent } from \"@core/component/forgotpassword-complete/forgotpassword-complete.component\";\n\nimport { HttpErrorInterceptor } from \"@core/service/http-error.interceptor\";\n\nimport { ForgotPasswordService } from \"@core/service/forgotpassword.service\";\nimport { PasswordStrengthBarComponent } from \"@shared/component/password-strength-bar/password-strength-bar.component\";\nimport { HubService } from \"@core/service/hub.service\";\n\nimport { GeometryService } from \"@registry/service/geometry.service\";\n\nimport { SharedModule } from \"@shared/shared.module\";\n\nimport \"./rxjs-extensions\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        CgrAppRoutingModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        //        ModalModule.forRoot(),\n        TreeModule,\n        ContextMenuModule.forRoot(),\n        BsDropdownModule.forRoot(),\n        ButtonsModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        ProgressbarModule.forRoot(),\n        CollapseModule.forRoot(),\n        TabsModule.forRoot(),\n        NgxPaginationModule,\n        BrowserAnimationsModule,\n        SharedModule.forRoot(),\n        BsDatepickerModule.forRoot()\n    ],\n    declarations: [\n        CgrAppComponent,\n        LoginComponent,\n        LoginHeaderComponent,\n        HubComponent,\n        ForgotPasswordComponent,\n        ForgotPasswordCompleteComponent,\n\n        // Routing components\n        routedComponents\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpErrorInterceptor,\n            multi: true\n        },\n        ForgotPasswordService,\n        PasswordStrengthBarComponent,\n        HubService,\n        GeometryService\n    ],\n    exports: [\n        CgrAppComponent\n    ],\n    bootstrap: [CgrAppComponent],\n    entryComponents: [\n    ]\n})\nexport class CgrAppModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n\n    selector: \"cgr-app\",\n    templateUrl: \"./cgr-app.component.html\",\n    styleUrls: []\n})\nexport class CgrAppComponent {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor() { }\n\n}\n","<div id=\"innerFrameHtml\">        \n\n  <!-- MAIN CONTENT AND INJECTED VIEWS -->\n  <div id=\"main\">\n    <router-outlet></router-outlet>\n  </div>\n  \n</div>","import { NgModule } from \"@angular/core\";\nimport { LocationStrategy, HashLocationStrategy } from \"@angular/common\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { LoginComponent } from \"./core/component/login/login.component\";\nimport { HubComponent } from \"./core/component/hub/hub.component\";\nimport { ForgotPasswordComponent } from \"./core/component/forgotpassword/forgotpassword.component\";\nimport { ForgotPasswordCompleteComponent } from \"./core/component/forgotpassword-complete/forgotpassword-complete.component\";\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from \"./shared/service/guard.service\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        redirectTo: \"/menu\",\n        pathMatch: \"full\"\n    },\n    {\n        path: \"login\",\n        component: LoginComponent,\n        data: { title: \"login.title\" }\n    },\n    {\n        path: \"login/:errorMsg\",\n        component: LoginComponent,\n        data: { title: \"login.title\" }\n    },\n    {\n        path: \"menu\",\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: \"login.header\" }\n    },\n    {\n        path: \"menu/:value\",\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: \"login.header\" }\n    },\n    {\n        path: \"forgotpassword\",\n        component: ForgotPasswordComponent,\n        data: { title: \"useraccounts.title\" }\n    },\n    {\n        path: \"forgotpassword-complete/:token\",\n        component: ForgotPasswordCompleteComponent\n    },\n    {\n        path: \"admin\",\n        loadChildren: \"./admin/admin.module#AdminModule\"\n    },\n    {\n        path: \"registry\",\n        loadChildren: \"./registry/registry.module#RegistryModule\"\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n        AdminGuard,\n        MaintainerGuard,\n        ContributerGuard\n    ]\n})\nexport class CgrAppRoutingModule { }\n\nexport const routedComponents: any = [LoginComponent, HubComponent, ForgotPasswordComponent, ForgotPasswordCompleteComponent];\n","import { Injectable } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpResponse,\n    HttpResponseBase,    \n    HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ndeclare var acp: string;\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n    intercept( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\n\n        return next.handle( request ).pipe(tap(( event: HttpEvent<any> ) => {\n            if ( event instanceof HttpResponseBase ) {\n                const response = event as HttpResponseBase;\n                if ( response.status === 302 ) {\n                    window.location.href = acp + '/cgr/manage#/login';\n                    return;\n                }\n            }\n        }, ( err: any ) => {\n            if ( err instanceof HttpErrorResponse ) {\n                if ( err.status === 401 || err.status === 403 ) {\n                    // redirect to the login route\n                    // or show a modal\n                    window.location.href = acp + '/cgr/manage#/login';\n                }\n            }\n        } ));\n    }\n}","import { Input, Component, OnInit } from \"@angular/core\";\n\nimport { LocalizationService } from \"@shared/service\";\n\n@Component({\n\n    selector: \"localize\",\n    templateUrl: \"./localize.component.html\",\n    styleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n\n    @Input() key: string;\n    @Input() params: { [key: string]: string } = null;\n\n    text: string;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: LocalizationService) { }\n\n    ngOnInit(): void {\n        this.text = this.service.decode(this.key);\n\n        if (this.params != null) {\n            const keys = Object.keys(this.params);\n\n            keys.forEach((key) => {\n                if (this.params[key] != null) {\n                    this.text = this.text.replace(key, this.params[key]);\n                }\n            });\n        }\n    }\n\n}\n","<span [innerHtml]=\"text\"></span>","import { Component, OnInit } from \"@angular/core\";\n\nimport { EventService, IEventListener } from \"@shared/service\";\n\n@Component({\n\n    selector: \"loading-bar\",\n    templateUrl: \"./loading-bar.component.html\",\n    styleUrls: [\"./loading-bar.css\"]\n})\nexport class LoadingBarComponent implements OnInit, IEventListener {\n\n    showIndicator: boolean = false;\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: EventService) { }\n\n    ngOnInit(): void {\n        this.service.registerListener(this);\n    }\n\n    ngOnDestroy(): void {\n        this.service.deregisterListener(this);\n    }\n\n    start(): void {\n        this.showIndicator = true;\n    }\n\n    complete(): void {\n        this.showIndicator = false;\n    }\n\n}\n","<div *ngIf=\"showIndicator\" class=\"standby-overlay\">\n\n</div>","import { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { User } from \"@shared/model/user\";\nimport { RoleBuilder, RegistryRole, RegistryRoleType, LocaleView } from \"@shared/model/core\";\n\n@Injectable()\nexport class AuthService {\n\n    private user: User = {\n        loggedIn: false,\n        userName: \"\",\n        roles: [],\n        roleDisplayLabels: [],\n        version: \"0\",\n        installedLocales: []\n    };\n\n    constructor(private service: CookieService) {\n        let cookie = service.get(\"user\");\n\n        if (this.service.check(\"user\") && cookie != null && cookie.length > 0) {\n            let cookieData: string = this.service.get(\"user\");\n            let cookieDataJSON: any = JSON.parse(cookieData);\n\n            this.buildFromCookieJson(cookieDataJSON);\n        }\n\n        this.loadLocales();\n    }\n\n    buildFromCookieJson(cookieDataJSON: any) {\n        this.user.userName = cookieDataJSON.userName;\n        this.buildRolesFromCookie(cookieDataJSON);\n        this.user.loggedIn = cookieDataJSON.loggedIn;\n        this.user.roleDisplayLabels = cookieDataJSON.roleDisplayLabels;\n        this.user.version = cookieDataJSON.version.replaceAll(\"+\", \" \");\n        // this.user.installedLocales = cookieDataJSON.installedLocales;\n    }\n\n    buildRolesFromCookie(cookieDataJSON: any) {\n        this.user.roles = [];\n        let roles: string[] = cookieDataJSON.roles;\n\n        for (let i = 0; i < roles.length; ++i) {\n            let role: RegistryRole = RoleBuilder.buildFromRoleName(roles[i]);\n\n            if (role != null) {\n                this.user.roles.push(role);\n            }\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.user.loggedIn;\n    }\n\n    afterLogIn(logInResponse: any): void {\n        this.buildFromCookieJson(JSON.parse(this.service.get(\"user\")));\n\n        this.setLocales(logInResponse.installedLocales);\n        this.user.installedLocales = logInResponse.installedLocales;\n    }\n\n    afterLogOut(): void {\n        this.user = null;\n        sessionStorage.removeItem(\"locales\");\n    }\n\n    loadLocales() {\n        let storageLocales = window.sessionStorage.getItem(\"locales\");\n\n        if (storageLocales != null) {\n            this.user.installedLocales = JSON.parse(storageLocales);\n        }\n    }\n\n    setLocales(locales: LocaleView[]) {\n        window.sessionStorage.setItem(\"locales\", JSON.stringify(locales));\n    }\n\n    removeUser(): void {\n        this.user = {\n            loggedIn: false,\n            userName: \"\",\n            roles: [],\n            roleDisplayLabels: [],\n            version: \"0\",\n            installedLocales: []\n        };\n    }\n\n    // Legacy Accessors:\n    isAdmin(): boolean {\n        return this.isSRA() || this.isRA();\n    }\n\n    isMaintainer(): boolean {\n        return this.isSRA() || this.isRM();\n    }\n\n    isContributer(): boolean {\n        return this.isSRA() || this.isRC(false);\n    }\n\n    isContributerOnly(): boolean {\n        return this.isRC(true);\n    }\n\n    // Used to exactly identify a role. I.e. if we say we need RC, SRA doesn't count.\n    hasExactRole(roleType: RegistryRoleType) {\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === roleType) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isSRA(): boolean {\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.SRA) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isRA(): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RA) {\n                return true;\n            } else if (role.roleName.indexOf(\"commongeoregistry.RegistryAdministrator\") !== -1 || role.roleName.indexOf(\"cgr.RegistryAdministrator\") !== -1) {\n                // Legacy support\n                return true;\n            }\n        }\n    }\n\n    isRM(): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RM) {\n                return true;\n            } else if (role.roleName.indexOf(\"commongeoregistry.RegistryMaintainer\") !== -1 || role.roleName.indexOf(\"cgr.RegistryMaintainer\") !== -1) {\n                // Legacy support\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isOrganizationRA(orgCode: string): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.orgCode === orgCode && role.type === RegistryRoleType.RA) {\n                return true;\n            }\n        }\n\n        return false; // this.isSRA();\n    }\n\n    isGeoObjectTypeRM(orgCode: string, gotCode: string): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RM && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n                return true;\n            }\n        }\n\n        return this.isOrganizationRA(orgCode);\n    }\n\n    isGeoObjectTypeOrSuperRM(got: { organizationCode: string, superTypeCode?: string, code: string }, allowRoleSuper: boolean = true): boolean {\n        if (this.isGeoObjectTypeRM(got.organizationCode, got.code)) {\n            return true;\n        } else if (got.superTypeCode != null) {\n            return this.isGeoObjectTypeRM(got.organizationCode, got.superTypeCode);\n        }\n    }\n\n    isGeoObjectTypeRC(orgCode: string, gotCode: string): boolean {\n        if (this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RC && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n                return true;\n            }\n        }\n\n        return this.isGeoObjectTypeRM(orgCode, gotCode);\n    }\n\n    isGeoObjectTypeOrSuperRC(got: { organizationCode: string, superTypeCode?: string, code: string }, allowRoleSuper: boolean = true): boolean {\n        if (allowRoleSuper && this.isSRA()) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RC && role.orgCode === got.organizationCode && role.geoObjectTypeCode === got.code) {\n                return true;\n            }\n        }\n\n        return allowRoleSuper && this.isGeoObjectTypeOrSuperRM(got);\n    }\n\n    isRC(isRCOnly: boolean): boolean {\n        if (this.isSRA() && !isRCOnly) {\n            return true;\n        }\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.RC) {\n                return true;\n            } else if (role.roleName.indexOf(\"commongeoregistry.RegistryContributor\") !== -1 || role.roleName.indexOf(\"cgr.RegistryContributor\") !== -1) {\n                // Legacy support\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // Returns all organization codes that the current user participates in.\n    // If the user is an SRA then this method will return an empty string array.\n    getMyOrganizations(): string[] {\n        let orgCodes: string[] = [];\n\n        for (let i = 0; i < this.user.roles.length; ++i) {\n            let role: RegistryRole = this.user.roles[i];\n\n            if (role.type === RegistryRoleType.SRA || role.type === RegistryRoleType.RC || role.type === RegistryRoleType.RM || role.type === RegistryRoleType.RA) {\n                orgCodes.push(role.orgCode);\n            }\n        }\n\n        return orgCodes;\n    }\n\n    __getRoleFromRoleName(roleName: string): string {\n        let nameArr = roleName.split(\".\");\n\n        return nameArr[nameArr.length - 1];\n    }\n\n    getUsername(): string {\n        return this.user.userName;\n    }\n\n    getRoles(): any {\n        return this.user.roles;\n    }\n\n    getRoleDisplayLabelsArray(): any {\n        return this.user.roleDisplayLabels;\n    }\n\n    getRoleDisplayLabels(): string {\n        let str = \"\";\n        for (let i = 0; i < this.user.roleDisplayLabels.length; ++i) {\n            let displayLabel = this.user.roleDisplayLabels[i];\n\n            if (displayLabel === \"Administrator\") {\n                continue;\n                // It's OK to hardcode to a display label here because the end user can't change it anyway.\n                // Is it ideal? No. But sometimes it's better to get software out quicker than to spend forever\n                // on something that nobody will ever see.\n            }\n\n            str = str + displayLabel;\n\n            if (i < this.user.roleDisplayLabels.length - 1) {\n                str = str + \",\";\n            }\n        }\n\n        return str;\n    }\n\n    getVersion(): string {\n        return this.user.version;\n    }\n\n    getLocales(): LocaleView[] {\n        return this.user.installedLocales;\n    }\n\n    addLocale(locale: LocaleView): void {\n        let exists: boolean = false;\n\n        for (let i = 0; i < this.user.installedLocales.length; ++i) {\n            if (this.user.installedLocales[i].tag === locale.tag) {\n                exists = true;\n                this.user.installedLocales[i] = locale;\n            }\n        }\n\n        if (!exists) {\n            this.user.installedLocales.push(locale);\n        }\n\n        this.setLocales(this.user.installedLocales);\n    }\n\n    removeLocale(locale: LocaleView): void {\n        for (let i = 0; i < this.user.installedLocales.length; ++i) {\n            if (this.user.installedLocales[i].tag === locale.tag) {\n                this.user.installedLocales.splice(i, 1);\n                this.setLocales(this.user.installedLocales);\n                return;\n            }\n        }\n\n        // eslint-disable-next-line no-console\n        console.log(\"Could not remove locale from array because we could not find it.\", locale, this.user.installedLocales);\n    }\n\n}\n","import { Component, OnChanges, Input, SimpleChange } from \"@angular/core\";\n\n@Component({\n    selector: \"password-strength-bar\",\n    templateUrl: \"./password-strength-bar.component.html\",\n    styleUrls: [\"./password-strength-bar.component.css\"]\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n\n    @Input() passwordToCheck: string;\n    bar0: string;\n    bar1: string;\n    bar2: string;\n    bar3: string;\n    bar4: string;\n\n    private colors = [\"#F00\", \"#F90\", \"#FF0\", \"#9F0\", \"#0F0\"];\n\n    private static measureStrength(pass: string) {\n        let score = 0;\n        // award every unique letter until 5 repetitions\n        let letters = {};\n        for (let i = 0; i < pass.length; i++) {\n            letters[pass[i]] = (letters[pass[i]] || 0) + 1;\n            score += 5.0 / letters[pass[i]];\n        }\n        // bonus points for mixing it up\n        let variations = {\n            digits: /\\d/.test(pass),\n            lower: /[a-z]/.test(pass),\n            upper: /[A-Z]/.test(pass),\n            nonWords: /\\W/.test(pass)\n        };\n\n        let variationCount = 0;\n        for (let check in variations) {\n            variationCount += (variations[check]) ? 1 : 0;\n        }\n        score += (variationCount - 1) * 10;\n        return Math.trunc(score);\n    }\n\n    private getColor(score: number) {\n        let idx = 0;\n        if (score > 90) {\n            idx = 4;\n        } else if (score > 70) {\n            idx = 3;\n        } else if (score >= 40) {\n            idx = 2;\n        } else if (score >= 20) {\n            idx = 1;\n        }\n        return {\n            idx: idx + 1,\n            col: this.colors[idx]\n        };\n    }\n\n    ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n        let password = changes[\"passwordToCheck\"].currentValue;\n        this.setBarColors(5, \"#DDD\");\n        if (password) {\n            let c = this.getColor(PasswordStrengthBarComponent.measureStrength(password));\n            this.setBarColors(c.idx, c.col);\n        }\n    }\n\n    private setBarColors(count, col) {\n        for (let _n = 0; _n < count; _n++) {\n            this[\"bar\" + _n] = col;\n        }\n    }\n\n}\n","<div style=\"margin: 11px;\" id=\"strength\" #strength>\n    <ul id=\"strengthBar\">\n        <li class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>\n    </ul>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Application } from '@shared/model/application';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HubService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tapplications(): Promise<Application[]> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Application[]>(acp + '/menu/applications', { headers: headers })\n\t\t\t.toPromise();\n\t}\n\t\n\toauthGetPublic(id: string): Promise<any[]> {\n    let params: HttpParams = new HttpParams();\n\n    if (id)\n    {\n      params = params.set('id', id)\n    }\n\n    return this.http\n      .get<any[]>(acp + '/cgr/oauth/get-public', { params: params })\n      .toPromise();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { EventService, IEventListener } from \"@shared/service\";\n\n@Component({\n\n    selector: \"message\",\n    templateUrl: \"./message.component.html\",\n    styles: [\n        \".error-container { text-align: center; border-width: 1px; border-color: #8c0000; border-style: solid; color: #8c0000; font-size: 17px; background: white;}\",\n        \".message-container { text-align: center; border-width: 1px; border-color: #106828; border-style: solid; margin-left: 10%; margin-right: 10%; color: #106828; }\"\n    ]\n})\nexport class MessageComponent implements OnInit, IEventListener {\n\n    error: any = null;\n\n    message: string = \"\";\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(private service: EventService) { }\n\n    ngOnInit(): void {\n        this.service.registerListener(this);\n    }\n\n    ngOnDestroy(): void {\n        this.service.deregisterListener(this);\n    }\n\n    start(): void {\n        this.error = null;\n    }\n\n    complete(): void {\n    }\n\n    onError(error: any): void {\n        this.error = error;\n    }\n\n    onMessage(msg: string): void {\n        this.message = msg;\n    }\n\n}\n","\n<div>\n  <div *ngIf=\"message\" class=\"message-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.messagesLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"message\">{{message}}</p>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"error\" class=\"error-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.errorsLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"error-message\" *ngIf=\"error.localizedMessage\">{{error.localizedMessage}}</p>\n        <p class=\"error-message\" *ngIf=\"!error.localizedMessage\"><localize key='error.generic'></localize></p>\n      </div>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":""}