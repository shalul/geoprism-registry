{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/shared/service/profile.service.ts","webpack:///./src/app/shared/service/session.service.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.html","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.ts","webpack:///./src/app/shared/pipe/localize.pipe.ts","webpack:///./src/app/shared/component/message/message.component.ts","webpack:///./src/app/core/service/hub.service.ts","webpack:///./src/app/shared/service/modal-step-indicator.service.ts","webpack:///./src/app/shared/component/message/message.component.html","webpack:///./src/app/shared/service/guard.service.ts","webpack:///./src/app/shared/service/localization.service.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/core/component/login/login.component.ts","webpack:///./src/app/core/component/hub/hub.component.ts","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/core/service/forgotpassword.service.ts","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.ts","webpack:///./src/app/core/service/forgotpassword-complete.service.ts","webpack:///./src/app/shared/service/event.service.ts","webpack:///./src/app/shared/component/modals/error-modal.component.ts","webpack:///./src/app/shared/component/header/header.component.ts","webpack:///./src/app/shared/service/progress.service.ts","webpack:///./src/app/shared/component/profile/profile.component.ts","webpack:///./src/app/shared/service/pending-changes-guard.ts","webpack:///./src/app/cgr-app.component.ts","webpack:///./src/app/core/component/login/login-header.component.ts","webpack:///./src/app/shared/component/header/header.component.html","webpack:///./src/app/shared/component/modals/confirm-modal.component.ts","webpack:///./src/app/shared/component/message/error-message.component.html","webpack:///./src/app/shared/component/message/error-message.component.ts","webpack:///./src/app/shared/model/modal.ts","webpack:///./src/app/shared/model/core.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.html","webpack:///./src/app/shared/component/modals/error-modal.component.html","webpack:///./src/app/shared/component/modals/success-modal.component.html","webpack:///./src/app/shared/component/modals/success-modal.component.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.html","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.ts","webpack:///./src/app/shared/component/profile/profile.component.html","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/model/profile.ts","webpack:///./src/app/shared/component/localize/localize.component.ts","webpack:///./src/app/shared/service/auth.service.ts","webpack:///./src/app/shared/component/localize/localize.component.html","webpack:///./src/main.ts","webpack:///./src/app/cgr-app.module.ts","webpack:///./src/app/core/component/login/login.component.html","webpack:///./src/app/core/component/login/login-header.component.html","webpack:///./src/app/core/component/hub/hub.component.html","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.html","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.html","webpack:///./src/app/cgr-app.component.html","webpack:///./src/app/core/service/http-error.interceptor.ts","webpack:///./src/app/cgr-app-routing.module.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","service","http","headers","HttpHeaders","this","post","acp","toPromise","profile","JSON","stringify","account","unlock","oid","getRolesForUser","userOID","ProfileService","authService","login","username","password","start","finally","complete","then","user","setUser","logout","response","SessionService","showIndicator","ngOnInit","registerListener","ngOnDestroy","deregisterListener","LoadingBarComponent","transform","decode","LocalizePipe","onError","onMessage","msg","MessageComponent","applications","HubService","modalStepChangedSource","Subject","modalStepChange","asObservable","getStepConfig","stepConfig","setStepConfig","config","next","getStep","step","setStep","ModalStepIndicatorService","router","canActivate","route","state","isAdmin","navigate","AdminGuard","isMaintainer","MaintainerGuard","isContributer","ContributerGuard","isLoggedIn","AuthGuard","eventService","locales","parser","Globalize","numberParser","formatter","numberFormatter","getLocales","setLocales","localizedValue","localeValues","forEach","locale","parseNumber","formatNumber","number","Number","localize","bundle","com","runwaysdk","Localize","index","lastIndexOf","temp","LocalizationService","map","webpackAsyncContext","req","code","ids","id","keys","hService","modalService","context","onSubmit","open","catch","application","location","href","url","bsModalRef","show","ErrorModalComponent","backdrop","content","localizedMessage","LoginComponent","tasks","buckets","HubComponent","emailIsSent","cancel","submit","ForgotPasswordComponent","ForgotPasswordService","passwordIsReset","sub","params","subscribe","token","unsubscribe","newPassword","ForgotPasswordCompleteComponent","ForgotPasswordCompleteService","listeners","listener","indexOfItem","indexOf","EventService","localizeService","sessionService","profileService","loggedIn","isContributor","getUsername","role","getRoleDisplayLabels","ProfileComponent","class","CgrHeaderComponent","progress","ProgressService","_profile","firstName","lastName","email","changePassword","roles","getRoles","hide","onChangePassword","getRolesArray","onRoleIdsUpdate","log","canDeactivate","component","confirmRet","confirm","afterDeactivate","PendingChangesGuard","CgrAppComponent","LoginHeaderComponent","submitText","cancelText","ModalTypes","warning","onConfirm","ConfirmModalComponent","ErrorMessageComponent","StepConfig","Step","LocaleValue","LocalizedValue","buildFromRoleName","roleName","RegistryRole","RegistryRoleType","SRA","roleSplit","split","orgCode","RA","roleSuffix","gotCode","RM","RC","AC","RoleBuilder","geoObjectTypeCode","SuccessModalComponent","modalStepIndicatorService","stepSubscription","ModalStepIndicatorComponent","forRoot","ngModule","SharedModule","providers","CookieService","AuthService","Profile","text","LocalizeComponent","userName","roleDisplayLabels","version","installedLocales","cookie","check","cookieData","cookieDataJSON","parse","buildFromCookieJson","buildRolesFromCookie","removeUser","isSRA","isRA","isRM","isRC","getMyOrganizations","orgCodes","getRoleDisplayLabelsArray","str","displayLabel","getVersion","process","env","ENV","enableProdMode","platformBrowser","success","CgrAppModule","intercept","handle","do","HttpResponseBase","status","HttpErrorResponse","HttpErrorInterceptor","title","CgrAppRoutingModule","routedComponents"],"mappings":"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","file":"cgr-app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"cgr-app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([814,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from './event.service';\n\nimport { Profile } from '../model/profile';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ProfileService {\n\n    constructor( service: EventService, private http: HttpClient ) { }\n\n    get(): Promise<Profile> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post<Profile>( acp + '/account/get', { headers: headers } )\n            .toPromise();\n    }\n\n\n    apply( profile: Profile ): Promise<Profile> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post<Profile>( acp + '/registryaccount/apply', JSON.stringify( { account: profile } ), { headers: headers } )\n            .toPromise();\n    }\n\n    unlock( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post<void>( acp + '/account/unlock', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .toPromise()\n    }\n\n    getRolesForUser( userOID: string ): Promise<any> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n\n        return this.http\n            .post<Profile>( acp + '/registryaccount/getRolesForUser', {userOID: userOID}, { headers: headers } )\n            .toPromise();\n\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/finally';\n\nimport { EventService } from './event.service';\n\nimport { AuthService } from './auth.service';\nimport { User } from '../model/user';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SessionService {\n\n    constructor( private service: EventService, private http: HttpClient, private authService: AuthService ) { }\n\n    login( username: string, password: string ): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n        return this.http\n            .post<User>( acp + '/session/login', JSON.stringify( { username: username, password: password } ), { headers: headers } )\n            .finally(() => {\n                this.service.complete();\n            } )\n            .toPromise()\n            .then(( user: User ) => {\n                this.authService.setUser( user );\n\n                return user;\n            } )\n    }\n\n    logout(): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n\n        return this.http\n            .post<void>( acp + '/session/logout', { headers: headers } )\n            .finally(() => {\n                this.service.complete();\n            } )\n            .toPromise()\n            .then(( response: any ) => {\n                this.authService.setUser( null );\n\n                return response;\n            } )\n    }\n}\n","<div *ngIf=\"showIndicator\" class=\"standby-overlay\">\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '../../service/event.service';\n\n@Component({\n  \n  selector: 'loading-bar',\n  templateUrl: './loading-bar.component.html',\n  styleUrls: ['./loading-bar.css']\n})\nexport class LoadingBarComponent implements OnInit, IEventListener {\n  showIndicator: boolean = false;\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.showIndicator = true;    \n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocalizationService } from '../service/localization.service';\n\n@Pipe({name: 'localize'})\nexport class LocalizePipe implements PipeTransform {\n  constructor(private service: LocalizationService) { }\n\t\n  transform(value: string): string {\n    return this.service.decode(value);\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '../../service/event.service';\n\n@Component({\n  \n  selector: 'message',\n  templateUrl: './message.component.html',\n  styles: [\n    '.error-container { text-align: center; border-width: 1px; border-color: #8c0000; border-style: solid; color: #8c0000; font-size: 17px; background: white;}',\n    '.message-container { text-align: center; border-width: 1px; border-color: #106828; border-style: solid; margin-left: 10%; margin-right: 10%; color: #106828; }'\n  ]\n})\nexport class MessageComponent implements OnInit, IEventListener {\n\t\n  error: any = null;\n  \n  message: string = \"\";\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.error = null;\n  }\n  \n  complete(): void {\n  }  \n  \n  onError(error: any): void {\n    this.error = error;\n  }\n  \n  onMessage(msg: string): void {\n    this.message = msg;\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service';\n\nimport { Application } from '../../shared/model/application';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HubService {\n  \n  constructor(service: EventService, private http: HttpClient) {}\n  \n  applications(): Promise<Application[]> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });  \n  \n    return this.http\n      .post<Application[]>(acp + '/menu/applications', {headers: headers})\n      .toPromise();\n  }  \n}\n","import { Injectable } from '@angular/core';\n// import { Subject } from 'rxjs'\nimport { Subject } from 'rxjs/Subject';\n\n\nimport { Step, StepConfig } from '../model/modal';\n\n\ndeclare var acp: string;\n\n@Injectable()\nexport class ModalStepIndicatorService {\n\n    stepConfig: StepConfig;\n    step: Step;\n    private modalStepChangedSource = new Subject<StepConfig>();\n    modalStepChange = this.modalStepChangedSource.asObservable();\n\n\n    constructor(  ) { }\n\n    public getStepConfig(): StepConfig {\n        return this.stepConfig;\n    }\n\n    public setStepConfig(config: StepConfig): void {\n        this.stepConfig = config;\n        \n        this.modalStepChangedSource.next(this.stepConfig);\n    }\n\n    getStep(): Step {\n        return this.step;\n    }\n\n    setStep(step: Step): void {\n        this.step = step;\n    }\n}\n","\n<div>\n  <div *ngIf=\"message\" class=\"message-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.messagesLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"message\">{{message}}</p>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"error\" class=\"error-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.errorsLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"error-message\" *ngIf=\"error.localizedMessage\">{{error.localizedMessage}}</p>\n        <p class=\"error-message\" *ngIf=\"!error.localizedMessage\"><localize key='error.generic'></localize></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { AuthService} from './auth.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class MaintainerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class ContributerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()  || this.service.isContributer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isLoggedIn()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/login' ]);\n    \n    return false;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { LocalizedValue } from '../model/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\nimport { EventService } from '../../shared/service/event.service';\n\ndeclare var Globalize: any;\ndeclare var com: any\ndeclare var acp: any;\n\n@Injectable()\nexport class LocalizationService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    locales: string[] = ['defaultLocale'];\n\n    private parser: any = Globalize.numberParser();\n    private formatter: any = Globalize.numberFormatter();\n\n    getLocales(): string[] {\n        return this.locales;\n    }\n\n    setLocales( locales: string[] ): void {\n        this.locales = locales;\n    }\n\n    create(): LocalizedValue {\n        const value = { localizedValue: '', localeValues: [] } as LocalizedValue;\n\n        this.locales.forEach( locale => {\n            value.localeValues.push( { locale: locale, value: '' } );\n        } );\n\n        return value;\n    }\n\n    public parseNumber( value: string ): number {\n        if ( value != null && value.length > 0 ) {\n            //convert data from view format to model format\n            var number = this.parser( value );\n\n            return number;\n        }\n\n        return null;\n    }\n\n    public formatNumber( value: any ): string {\n        if ( value != null ) {\n            var number = value;\n\n            if ( typeof number === 'string' ) {\n                if ( number.length > 0 && Number( number ) ) {\n                    number = Number( value );\n                }\n                else {\n                    return \"\";\n                }\n            }\n\n            //convert data from model format to view format\n            return this.formatter( number );\n        }\n\n        return null;\n    }\n\n    public localize( bundle: string, key: string ): string {\n        return com.runwaysdk.Localize.localize( bundle, key );\n    }\n\n    public get( key: string ): string {\n        return com.runwaysdk.Localize.get( key );\n    }\n\n    public decode( key: string ): string {\n        let index = key.lastIndexOf( '.' );\n\n        if ( index !== -1 ) {\n\n            let temp = [key.slice( 0, index ), key.slice( index + 1 )]\n\n            return this.localize( temp[0], temp[1] );\n        }\n        else {\n            return this.get( key );\n        }\n    }\n}\n","var map = {\n\t\"./admin/admin.module.ngfactory\": [\n\t\t633,\n\t\t\"vendor\",\n\t\t0,\n\t\t2\n\t],\n\t\"./registry/registry.module.ngfactory\": [\n\t\t634,\n\t\t\"vendor\",\n\t\t0,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 287;\nmodule.exports = webpackAsyncContext;","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { Application } from '../../../shared/model/application';\nimport { ErrorModalComponent } from '../../../shared/component/modals/error-modal.component';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { HubService } from '../../service/hub.service';\n\nimport { LoginHeaderComponent } from './login-header.component';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n} )\nexport class LoginComponent {\n    context: string;\n    username: string = '';\n    password: string = '';\n\n    /*\n     * Reference to the modal current showing\n    */\n    private bsModalRef: BsModalRef;\n\n\n    constructor( private service: SessionService, private hService: HubService, private modalService: BsModalService, private router: Router ) {\n        this.context = acp as string;\n    }\n\n    onSubmit(): void {\n        this.service.login( this.username, this.password ).then( response => {\n\n            this.hService.applications().then( applications => {\n                if ( applications.length == 1 ) {\n                    this.open( applications[0] );\n                }\n                else {\n                    this.router.navigate( ['/menu/true'] );\n                }\n            } );\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            // TODO: add error modal\n            this.bsModalRef = this.modalService.show( ErrorModalComponent, { backdrop: true } );\n            this.bsModalRef.content.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n\n\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { Application } from '../../../shared/model/application';\nimport { AuthService } from '../../../shared/service/auth.service';\n\nimport { HubService } from '../../service/hub.service';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'hub',\n    templateUrl: './hub.component.html',\n    styleUrls: ['./hub.component.css']\n} )\nexport class HubComponent implements OnInit {\n    context: string;\n    applications: Application[] = [];\n    tasks: any = [];\n    isAdmin: boolean = false;\n    buckets: string = 'col-sm-6';\n    bsModalRef: BsModalRef;\n\n    constructor(\n        private service: HubService,\n        private authService: AuthService,\n        private modalService: BsModalService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.context = acp as string;\n    }\n\n    ngOnInit(): void {\n      this.service.applications().then( applications => {\n          this.applications = applications;\n      } );\n      \n      this.isAdmin = this.authService.isAdmin();\n    }\n    \n    //   logout():void {\n    //     this.sessionService.logout().then(response => {\n    //       this.router.navigate(['/login']);\t  \n    //     }); \t  \n    //   }\n\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    //   account():void{\n    //     this.profileService.get().then(profile => {\n    //       this.bsModalRef = this.modalService.show(ProfileComponent, {backdrop: 'static', class: 'gray modal-lg'});\n    //       this.bsModalRef.content.profile = profile;\n    //     });\n    //   }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ForgotPasswordService } from '../../service/forgotpassword.service';\n\n\n@Component({\n  selector: 'forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  username: string;\n  emailIsSent: boolean = false;\n  message: string = null;\n\n  constructor(\n    private service: ForgotPasswordService,\n    private router: Router,      \n    private route: ActivatedRoute,\n    private location: Location) {\n  }\n\n  ngOnInit(): void {\n  \n  }\n  \n  cancel(): void {    \n    this.router.navigate(['/']);\n  } \n  \n  onSubmit(): void {\n    this.service.submit(this.username)\n      .then(response => {\n        this.emailIsSent = true;\n      })\n      .catch(( err: HttpErrorResponse ) => {\n        this.error( err );\n      } );\n  }\n  \n  error( err: HttpErrorResponse ): void {\n    // Handle error\n    if ( err !== null ) {\n      this.message = ( err.error.localizedMessage || err.error.message || err.message );\n    }\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ForgotPasswordService {\n  \n  constructor(private http: HttpClient, private eventService: EventService) {}\n  \n  submit(username:string): Promise<void> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });  \n    \n    this.eventService.start();\n  \n    return this.http\n      .post<void>(acp + '/forgotpassword/initiate', JSON.stringify({username:username}), {headers: headers})\n      .finally(() => {\n        this.eventService.complete();\n      } )\n      .toPromise();\n  }  \n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { ForgotPasswordCompleteService } from '../../service/forgotpassword-complete.service';\n\n\n@Component({\n  templateUrl: './forgotpassword-complete.component.html',\n  styleUrls: ['./forgotpassword-complete.component.css']\n})\nexport class ForgotPasswordCompleteComponent implements OnInit {\n  newPassword: string;\n  token: string;\n  passwordIsReset: boolean = false;\n  private sub: any;\n  message: string = null;\n\n  constructor(\n    private service: ForgotPasswordCompleteService,\n    private router: Router,      \n    private route: ActivatedRoute,\n    private location: Location) {\n  }\n  \n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n       this.token = params['token'];\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  \n  \n  cancel(): void {    \n    this.router.navigate(['/']);\n  } \n  \n  onSubmit(): void {\n    this.service.complete(this.newPassword, this.token)\n      .then(response => {\n        this.passwordIsReset = true;\n      })\n      .catch(( err: HttpErrorResponse ) => {\n        this.error( err );\n      } );\n  }\n  \n  error( err: HttpErrorResponse ): void {\n    // Handle error\n    if ( err !== null ) {\n      this.message = ( err.error.localizedMessage || err.error.message || err.message );\n    }\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ForgotPasswordCompleteService {\n  \n  constructor(private http: HttpClient, private eventService: EventService) {}\n  \n  complete(newPassword:string, token:string): Promise<void> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });  \n    \n    this.eventService.start();\n  \n    return this.http\n      .post<void>(acp + '/forgotpassword/complete', JSON.stringify({newPassword:newPassword,token:token}), {headers: headers})\n      .finally(() => {\n        this.eventService.complete();\n      } )\n      .toPromise();\n  }  \n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ndeclare var acp;\n\nexport interface IEventListener {\n    start(): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class EventService {\n    private listeners: IEventListener[] = [];\n\n    public registerListener( listener: IEventListener ): void {\n        this.listeners.push( listener );\n    }\n\n    public deregisterListener( listener: IEventListener ): boolean {\n        let indexOfItem = this.listeners.indexOf( listener );\n\n        if ( indexOfItem === -1 ) {\n            return false;\n        }\n\n        this.listeners.splice( indexOfItem, 1 );\n\n        return true;\n    }\n\n    public start(): void {\n        for ( const listener of this.listeners ) {\n            listener.start();\n        }\n    }\n\n    public complete(): void {\n        for ( const listener of this.listeners ) {\n            listener.complete();\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { LocalizationService } from '../../service/localization.service';\n\n@Component( {\n    selector: 'error-modal',\n    templateUrl: './error-modal.component.html',\n    styleUrls: ['./error-modal.css']\n} )\nexport class ErrorModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ProfileComponent } from '../profile/profile.component';\n\nimport { AuthService } from '../../service/auth.service';\nimport { SessionService } from '../../service/session.service';\nimport { ProfileService } from '../../service/profile.service';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'cgr-header',\n    templateUrl: './header.component.html',\n    styleUrls: []\n} )\nexport class CgrHeaderComponent {\n    context: string;\n    isAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    bsModalRef: BsModalRef;\n    \n    @Input() loggedIn: boolean = true;\n\n    constructor(\n        private sessionService: SessionService,\n        private modalService: BsModalService,\n        private profileService: ProfileService,\n        private router: Router,\n        private service: AuthService\n    ) {\n        this.context = acp;\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n        this.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n    }\n\n    logout(): void {\n        \n        window.location.href = acp + '/session/logout';\n        \n//        this.sessionService.logout().then( response => {\n//            this.router.navigate( ['/login'] );\n//        } );\n    }\n\n    getUsername() {\n        let role: string = this.service.getRoleDisplayLabels();\n        let name: string = this.service.getUsername();\n\n        name = name + \" (\" + role + \")\";\n        return name;\n    }\n\n    account(): void {\n        this.profileService.get().then( profile => {\n            this.bsModalRef = this.modalService.show( ProfileComponent, { backdrop: 'static', class: 'gray modal-lg' } );\n            this.bsModalRef.content.profile = profile;\n        } );\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\nimport { Progress } from '../model/progress';\n\nexport interface IProgressListener {\n  start(): void;\n  progress(progress:Progress):void;  \n  complete(): void;\n}\n\n@Injectable()\nexport class ProgressService {\n  private listeners: IProgressListener[] = [];\n  \n  public constructor() {}\n  \n  public registerListener(listener: IProgressListener): void {\n   this.listeners.push(listener);\n  }\n  \n  public deregisterListener(listener: IProgressListener): boolean {\n    let indexOfItem = this.listeners.indexOf(listener);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this.listeners.splice(indexOfItem, 1);\n\n    return true;\n  }\n  \n  public start(): void {\n    for (const listener of this.listeners) {\n      listener.start();\n    }\n  }\n  \n  public progress(progress:Progress):void {\n    for (const listener of this.listeners) {\n      listener.progress(progress);\n    }\t  \n  }  \n  \n  public complete(): void {\n    for (const listener of this.listeners) {\n      listener.complete();\n    }\n  }  \n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, Input} from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { Profile } from '../../model/profile';\nimport { ProfileService } from '../../service/profile.service';\nimport { AuthService } from '../../service/auth.service';\nimport { Role } from '../../../admin/model/account';\n\n\n@Component({  \n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class ProfileComponent {\n  public _profile:Profile = {\n    oid: '',\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    changePassword:false\n  };\n  \n  @Input('profile')\n  set profile(value: Profile) {\n    this._profile = value;\n    this.getRoles();\n  }\n  roles: Role[] = [];\n  \n  constructor(private service:ProfileService, public bsModalRef: BsModalRef, private authService: AuthService) {}\n  \n\n  getRoles(): void {\n    this.service.getRolesForUser(this._profile.oid).then(roles => {\n      this.roles = roles;\n    });\n  }\n  \n  onSubmit():void {\n    if(!this._profile.changePassword) {\n      delete this._profile.password;\n    }\n\t  \n    this.service.apply(this._profile).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }\n\n  onChangePassword(): void {\n    this._profile.changePassword = !this._profile.changePassword;\n  }\n  \n  // getRoles():string {\n  //   return this.authService.getRoleDisplayLabels();\n  // }\n\n  getRolesArray(): any {\n    return this.authService.getRoles();\n  }\n\n  onRoleIdsUpdate(event: any): void {\n    console.log(event)\n  }\n  \n  cancel():void {\n    this.service.unlock(this._profile.oid).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }  \n}\n","import { CanDeactivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n// Thanks to : https://stackoverflow.com/a/41187919/219843\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n  afterDeactivate: (boolean) => void;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    if (!component.canDeactivate())\n    {\n      // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\n      // when navigating away from your angular app, the browser will show a generic warning message\n      // see http://stackoverflow.com/a/42207299/7307355\n      var confirmRet = confirm('WARNING: You have unsaved changes. Press Cancel to go back and save these changes, or OK to lose these changes.');\n      \n      component.afterDeactivate(confirmRet);\n      \n      return confirmRet;\n    }\n    \n    return true;\n  }\n}","import { Component } from '@angular/core';\n\ndeclare var acp: any;\n\n@Component({\n  \n  selector: 'cgr-app',\n  templateUrl: './cgr-app.component.html',\n  styleUrls: []\n})\nexport class CgrAppComponent {\n  constructor() {}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({\n  selector: 'login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: []\n})\nexport class LoginHeaderComponent {\n  context:string;\n\n  constructor() {\n    this.context = acp;\n  }\n}\n","<!-- HEADER AND NAVBAR -->\n<header>\n  <nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><localize key=\"cgr.standard.title\"></localize></a>\n      </div>\n          \n       <ul *ngIf=\"loggedIn\" class=\"nav navbar-nav navbar-right\"> \n         <li>\n           <a (click)=\"account()\" class=\"navbar-username\">\n           <!-- <div>Logged in as</div> -->\n             <div>{{getUsername()}}</div>\n           </a>\n         </li>\n         <li dropdown> \n             <!-- <localize key=\"hierarchy-management.menu\"></localize> -->\n           <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n             <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n           </a>     \n\n           \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <!-- GeoRegistry specific links -->\n                <li *ngIf=\"isMaintainer\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/hierarchies\" routerLinkActive=\"active\"><localize key=\"hierarchies.menu\"></localize></a></li> \n                <li *ngIf=\"isContributor\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/master-lists\" routerLinkActive=\"active\"><localize key=\"masterlist.menu\"></localize> </a></li>\n                <li *ngIf=\"isMaintainer\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/data\" routerLinkActive=\"active\"><localize key=\"header.data.option\"></localize> </a></li>\n                <li *ngIf=\"isContributor\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/scheduled-jobs\" routerLinkActive=\"active\"><localize key=\"scheduledjobs.menu\"></localize> </a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"{{context}}/nav/management#/locations\"><localize key=navigator.menu></localize> </a></li>\n                <li *ngIf=\"isContributor\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/change-requests\" routerLinkActive=\"active\"><localize key=\"header.changerequest.option\"></localize> </a></li>\n                <li *ngIf=\"isContributor\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/tasks\" routerLinkActive=\"active\"><localize key=\"header.tasks\"></localize></a></li>\n                \n                <hr>\n                <li *ngIf=\"isContributor\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/settings\" routerLinkActive=\"active\"><localize key=\"settings.menu\"></localize> </a></li>\n\n\n                <!-- <hr *ngIf=\"isAdmin\">\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/localization-manager\" routerLinkActive=\"active\"><localize key=\"localization-manager.menu\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\">\n                    <a class=\"user-command-link\" routerLink=\"/admin/accounts\"><localize key=\"accounts.link\"></localize></a>\n                </li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li> -->\n  \n                <hr>\n                <li role=\"menuitem\"><a class=\"user-command-link\" (click)=\"logout()\"><localize key=\"userDashboards.logout\"></localize></a></li>\n            \n              </ul>\n         </li> \n       </ul> \n    </div>\n  </nav>\n</header>\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { Subject } from 'rxjs/Subject';\nimport { LocalizationService } from '../../service/localization.service';\nimport { ModalTypes } from '../../model/modal';\n\n\n@Component( {\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./modal.css']\n} )\nexport class ConfirmModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    @Input() data: any;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.submit\");\n\n    @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next( this.data );\n    }\n}\n","<div *ngIf=\"message != null\" class=\"error-container\">\n    <div class=\"\">\n        <strong class=\"error-title\">\n            <localize key=\"error.title\"></localize>\n        </strong>\n    </div>\n    <div class=\"\">\n        <div>\n            <p class=\"error-message\">{{message}}</p>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '../../service/localization.service';\n\n@Component( {\n    selector: 'error-message',\n    templateUrl: './error-message.component.html',\n    styleUrls: ['./error-message.css']\n} )\nexport class ErrorMessageComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( private localizeService: LocalizationService ) { }\n}\n","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    active: boolean;\n    enabled: boolean;\n}","export interface MessageContainer {\n  setMessage( message: string );\n}\n\nexport class LocaleValue {\n  locale: string;\n  value: string;\n  \n  constructor( locale: string, value: string ) {\n    this.locale = locale;\n    this.value = value;\n  }\n}\n\nexport class LocalizedValue {\n  localizedValue: string;\n  localeValues: LocaleValue[];\n  \n  constructor( localizedValue: string, localeValues: LocaleValue[] ) {\n    this.localizedValue = localizedValue;\n    this.localeValues = localeValues;\n  }\n}\n\nexport class RoleBuilder {\n  static buildFromRoleName(roleName: string): RegistryRole {\n    if (roleName === \"cgr.SRA\") {\n      return new RegistryRole(RegistryRoleType.SRA, \"\", \"\", \"cgr.SRA\");\n    }\n    \n    let roleSplit = roleName.split(\".\");\n    \n    let orgCode: string = roleSplit[2];\n    \n    if (roleSplit.length === 4) {\n      return new RegistryRole(RegistryRoleType.RA, orgCode, \"\", roleName);\n    }\n    else if (roleSplit.length === 5) {\n      let roleSuffix: string = roleSplit[4];\n      \n      let gotCode: string = roleSplit[3];\n      \n      if (roleSuffix === \"RM\") {\n        return new RegistryRole(RegistryRoleType.RM, orgCode, gotCode, roleName);\n      }\n      else if (roleSuffix === \"RC\") {\n        return new RegistryRole(RegistryRoleType.RC, orgCode, gotCode, roleName);\n      }\n      else if (roleSuffix === \"AC\") {\n        return new RegistryRole(RegistryRoleType.AC, orgCode, gotCode, roleName);\n      }\n    }\n    else\n    {\n      return null;\n    }\n  }\n}\n\nexport class RegistryRole {\n  type: RegistryRoleType;\n  orgCode: string;\n  geoObjectTypeCode: string;\n  roleName: string;\n  displayLabel: string;\n  \n  constructor( type: RegistryRoleType, orgCode: string, geoObjectTypeCode: string, roleName: string ) {\n    this.type = type;\n    this.orgCode = orgCode;\n    this.geoObjectTypeCode = geoObjectTypeCode;\n    this.roleName = roleName;\n  }\n}\n\nexport enum RegistryRoleType {\n  SRA,\n  RA,\n  RM,\n  RC,\n  AC\n}\n","<div class=\"step-indicator\" >\n    <ul *ngIf=\"stepConfig && stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\" [ngClass]=\"{'active':step.active, 'enabled':step.enabled}\" *ngFor=\"let step of stepConfig.steps\">{{step.label}}</li>\n    </ul>\n</div>","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n\n</div>\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { LocalizationService } from '../../service/localization.service';\n\n@Component( {\n    selector: 'success-modal',\n    templateUrl: './success-modal.component.html',\n    styleUrls: ['./success-modal.css']\n} )\nexport class SuccessModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = this.message ? this.message : this.localizeService.decode(\"success.modal.default.message\");\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>{{cancelText}}</span>\n          </button>\n          <button type=\"button\" (click)=\"confirm()\"\n            [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n            aria-disabled=\"false\">\n            <span>{{submitText}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component } from '@angular/core';\nimport { LocalizationService } from '../../service/localization.service';\nimport { ModalStepIndicatorService} from '../../service/modal-step-indicator.service'\n\nimport { Step, StepConfig } from '../../model/modal';\nimport { Subscription } from 'rxjs';\n\n\n@Component( { \n    selector: 'modal-step-indicator',\n    templateUrl: './modal-step-indicator.component.html',\n    styleUrls: ['./modal-step-indicator.css']\n} )\nexport class ModalStepIndicatorComponent {\n\n    stepConfig: StepConfig;\n    step: Step;\n    stepSubscription: Subscription;\n\n    constructor( private localizeService: LocalizationService, private modalStepIndicatorService: ModalStepIndicatorService ) { \n        this.stepSubscription = modalStepIndicatorService.modalStepChange.subscribe( stepConfig => {\n            this.stepConfig = stepConfig;\n        })\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n        this.stepSubscription.unsubscribe();\n    }\n}\n","<div *ngIf=\"_profile\">\n  <message></message>\n\n  <form #form=\"ngForm\" class=\"modal-form\" style=\"background: none;border: none;\" (ngSubmit)=\"form.valid && onSubmit()\">\n    <fieldset>\n      <div class=\"heading\">\n        <h3>\n          <localize key=\"profile.heading\"></localize>\n        </h3>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.firstname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.firstName\" name=\"firstname\" required>\n          </span>\n        </div>\n      </div>\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.lastname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.lastName\" name=\"lastname\" required>\n          </span>\n        </div>\n      </div>\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.email\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.email\" name=\"email\" required #aemail=\"ngModel\" email>\n          </span>\n          <div *ngIf=\"aemail.errors?.email\" class=\"inline-error-message\">\n            <localize key=\"account.email.validation\"></localize>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"heading\">\n        <h3>\n          <localize key=\"account.info.heading\"></localize>\n        </h3>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"profilename\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.username\" name=\"username\" required>\n          </span>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n        </div>\n        <div class=\"holder\">\n          <!-- <boolean-field [(value)]=\"profile.changePassword\"></boolean-field> -->\n          <div style=\"text-align: left;\">\n            <input type=\"button\" *ngIf=\"!_profile.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n              (click)=\"onChangePassword()\" />\n            <input type=\"button\" *ngIf=\"_profile.changePassword\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\"\n              (click)=\"onChangePassword()\" />\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"_profile.changePassword\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" [(ngModel)]=\"_profile.password\" name=\"password\" #password=\"ngModel\" required\n                minlength=\"5\" maxlength=\"50\">\n              <ng2-password-strength-bar [passwordToCheck]=\"_profile.password\">\n              </ng2-password-strength-bar>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.certainPassword\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [equalTo]=\"password\" />\n            </span>\n            <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n              <localize key=\"account.certainPassword.validation\"></localize>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"com.runwaysdk.ui.userstable.UsersTable.adminRoles\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n\n          <table class=\"table\">\n            <thead>\n              <tr>\n                  <th><localize key=\"profile.roles.role.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.organization.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.geoobjecttype.table.heading\"></localize></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let role of roles\">\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.geoObjectTypeLabel.localizedValue}}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- <ul>\n            <li *ngFor=\"let role of getRolesArray()\">{{role}}</li>\n          </ul> -->\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\"\n              [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n\n</div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from 'angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { PasswordStrengthBarModule } from 'ng2-password-strength-bar';\nimport { CustomFormsModule } from 'ng2-validation'\n\nimport { ErrorModalComponent } from './component/modals/error-modal.component';\nimport { SuccessModalComponent } from './component/modals/success-modal.component';\nimport { ConfirmModalComponent } from './component/modals/confirm-modal.component';\nimport { ErrorMessageComponent } from './component/message/error-message.component';\nimport { MessageComponent } from './component/message/message.component';\nimport { ValidationComponent } from './component/form-fields/base/validation.component';\nimport { BooleanFieldComponent } from './component/form-fields/boolean-field/boolean-field.component';\nimport { LoadingBarComponent } from './component/loading-bar/loading-bar.component';\n\nimport { AdminGuard, MaintainerGuard, ContributerGuard, AuthGuard } from './service/guard.service';\nimport { PendingChangesGuard } from './service/pending-changes-guard';\n\nimport { AuthService } from './service/auth.service';\nimport { ProfileService } from './service/profile.service';\nimport { LocalizationService } from './service/localization.service';\nimport { ProgressService } from './service/progress.service';\nimport { EventService } from './service/event.service';\nimport { ModalStepIndicatorService } from './service/modal-step-indicator.service';\nimport { SessionService } from './service/session.service';\n\nimport { LocalizePipe } from './pipe/localize.pipe';\nimport { PhonePipe } from './pipe/phone.pipe';\n\nimport { OnlyNumber } from './directive/number-only.directive';\n\nimport { CgrHeaderComponent } from './component/header/header.component';\nimport { ProgressBarComponent } from './component/progress-bar/progress-bar.component';\nimport { LocalizeComponent } from './component/localize/localize.component';\nimport { ModalStepIndicatorComponent } from './component/modals/modal-step-indicator.component';\nimport { ProfileComponent } from './component/profile/profile.component';\n\nimport '../rxjs-extensions';\n\n@NgModule( {\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        ModalModule.forRoot(),\n        TreeModule,\n        ContextMenuModule,\n        BsDropdownModule,\n        ButtonsModule,\n        TypeaheadModule,\n        ProgressbarModule,\n        CollapseModule,\n        NgxPaginationModule,\n        PasswordStrengthBarModule,\n        CustomFormsModule\n    ],\n    declarations: [\n        LocalizeComponent,\n        BooleanFieldComponent,\n        LoadingBarComponent,\n        ErrorMessageComponent,\n        MessageComponent,\n        ConfirmModalComponent,\n        ErrorModalComponent,\n        SuccessModalComponent,\n        OnlyNumber,\n        ValidationComponent,\n        ProgressBarComponent,\n        ModalStepIndicatorComponent,\n        CgrHeaderComponent,\n        ProfileComponent,\n        LocalizePipe,\n        PhonePipe\n    ],\n    exports: [\n        LocalizeComponent,\n        BooleanFieldComponent,\n        LoadingBarComponent,\n        ErrorMessageComponent,\n        MessageComponent,\n        ConfirmModalComponent,\n        ErrorModalComponent,\n        SuccessModalComponent,\n        OnlyNumber,\n        ValidationComponent,\n        ProgressBarComponent,\n        ModalStepIndicatorComponent,\n        CgrHeaderComponent,\n        ProfileComponent,\n        LocalizePipe,\n        PhonePipe,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    entryComponents: [\n        ErrorModalComponent,\n        SuccessModalComponent,\n        ConfirmModalComponent,\n        ModalStepIndicatorComponent,\n        ErrorMessageComponent,\n        LoadingBarComponent,\n        ProfileComponent\n    ]\n} )\nexport class SharedModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CookieService,\n                AuthService,\n                SessionService,\n                ProfileService,\n                LocalizationService,\n                ModalStepIndicatorService,\n                EventService,\n                ProgressService,\n                AdminGuard,\n                MaintainerGuard,\n                ContributerGuard,\n                AuthGuard,\n                PendingChangesGuard\n            ]\n        };\n    }\n}\n","import { Role } from \"../../admin/model/account\";\n\n///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nexport class Profile {\n  oid: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  changePassword: boolean;\n}","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '../../service/localization.service';\n\n@Component({\n  \n  selector: 'localize',\n  templateUrl: './localize.component.html',\n  styleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n  @Input() key: string;\n  text: string;\n    \n  constructor(private service: LocalizationService) { }\n\n  ngOnInit(): void {\n    this.text = this.service.decode(this.key);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from '../model/user';\nimport { Locale } from '../../admin/model/localization-manager';\nimport { RoleBuilder, RegistryRole, RegistryRoleType } from '../model/core';\n\n@Injectable()\nexport class AuthService {\n  private user:User = {\n    loggedIn:false,\n    userName:'',\n    roles:[],\n    roleDisplayLabels:[],\n    version:\"0\",\n    installedLocales: []\n  };\n\n  constructor( private service: CookieService ) {\n    let cookie = service.get( 'user' );\n\n    if ( this.service.check( \"user\" ) && cookie != null && cookie.length > 0 ) {\n      let cookieData: string = this.service.get( \"user\" )\n      let cookieDataJSON: any = JSON.parse( JSON.parse( cookieData ) );\n      \n      this.buildFromCookieJson(cookieDataJSON);\n    }\n  }\n  \n  buildFromCookieJson(cookieDataJSON: any)\n  {\n    this.user.userName = cookieDataJSON.userName;\n    this.buildRolesFromCookie(cookieDataJSON);\n    this.user.loggedIn = cookieDataJSON.loggedIn;\n    this.user.roleDisplayLabels = cookieDataJSON.roleDisplayLabels;\n    this.user.version = cookieDataJSON.version;\n    this.user.installedLocales = cookieDataJSON.installedLocales;\n  }\n  \n  buildRolesFromCookie(cookieDataJSON: any)\n  {\n    this.user.roles = [];\n    let roles: string[] = cookieDataJSON.roles;\n  \n    for (let i = 0; i < roles.length; ++i)\n    {\n      let role: RegistryRole = RoleBuilder.buildFromRoleName(roles[i]);\n    \n      if (role != null)\n      {\n        this.user.roles.push(role);\n      }\n    }\n  }\n  \n  isLoggedIn():boolean {\n    return this.user.loggedIn;\n  }\n  \n  setUser(cookieDataJSON: any):void {\n    this.buildFromCookieJson(cookieDataJSON);    \n  }\n\n  removeUser(): void {\n    this.user = {\n      loggedIn:false,\n      userName:'',\n      roles:[],\n      roleDisplayLabels:[],\n      version:\"0\",\n      installedLocales: []\n    };\n  }\n  \n  // Legacy Accessors:\n  isAdmin(): boolean {\n    return this.isSRA() || this.isRA();\n  }\n  \n  isMaintainer(): boolean {\n    return this.isRM();\n  }\n  \n  isContributer(): boolean {\n    return this.isRC();\n  }\n  \n\n  isSRA(): boolean {\n    for (let i = 0; i < this.user.roles.length; ++i)\n    {\n      let role: RegistryRole = this.user.roles[i];\n      \n      if (role.type === RegistryRoleType.SRA) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n\n  isRA(): boolean {\n    for (let i = 0; i < this.user.roles.length; ++i)\n    {\n      let role: RegistryRole = this.user.roles[i];\n      \n      if (role.type === RegistryRoleType.RA) {\n        return true;\n      }\n      else if (role.roleName.indexOf('commongeoregistry.RegistryAdministrator') !== -1\n               || role.roleName.indexOf( \"cgr.RegistryAdministrator\" ) !== -1) // Legacy support\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  isRM(): boolean {\n    for (let i = 0; i < this.user.roles.length; ++i)\n    {\n      let role: RegistryRole = this.user.roles[i];\n      \n      if (role.type === RegistryRoleType.RM) {\n        return true;\n      }\n      else if (role.roleName.indexOf('commongeoregistry.RegistryMaintainer') !== -1\n               || role.roleName.indexOf( \"cgr.RegistryMaintainer\" ) !== -1) // Legacy support\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  isRC(): boolean {\n    for (let i = 0; i < this.user.roles.length; ++i)\n    {\n      let role: RegistryRole = this.user.roles[i];\n      \n      if (role.type === RegistryRoleType.RC) {\n        return true;\n      }\n      else if (role.roleName.indexOf('commongeoregistry.RegistryContributor') !== -1\n               || role.roleName.indexOf( \"cgr.RegistryContributor\" ) !== -1) // Legacy support\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  // Returns all organization codes that the current user participates in.\n  // If the user is an SRA then this method will return an empty string array.\n  getMyOrganizations(): string[] {\n    let orgCodes: string[] = [];\n  \n    for (let i = 0; i < this.user.roles.length; ++i)\n    {\n      let role: RegistryRole = this.user.roles[i];\n      \n      if (role.type === RegistryRoleType.RC\n          || role.type === RegistryRoleType.RM\n          || role.type === RegistryRoleType.RA) {\n        orgCodes.push(role.orgCode);\n      }\n    }\n    \n    return orgCodes;\n  }\n  \n  getUsername(): string {\n    return this.user.userName;\n  }\n\n  getRoles(): any {\n    return this.user.roles;\n  }\n\n  getRoleDisplayLabelsArray(): any {\n    return this.user.roleDisplayLabels;\n  }\n  \n  getRoleDisplayLabels(): string {\n    let str = \"\";\n    for (let i = 0; i < this.user.roleDisplayLabels.length; ++i)\n    {\n      let displayLabel = this.user.roleDisplayLabels[i]; \n    \n      if (displayLabel === \"Administrator\")\n      {\n        continue;\n        // It's OK to hardcode to a display label here because the end user can't change it anyway.\n        // Is it ideal? No. But sometimes it's better to get software out quicker than to spend forever\n        // on something that nobody will ever see.\n      }\n    \n      str = str + displayLabel;\n      \n      if (i < this.user.roleDisplayLabels.length-1)\n      {\n        str = str + \",\";\n      }\n    }\n  \n    return str;\n  }\n  \n  getVersion(): string {\n    return this.user.version;\n  }\n\n  getLocales(): any[] {\n    return this.user.installedLocales;\n  }\n}\n","{{text}}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { CgrAppModule } from './app/cgr-app.module';\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(CgrAppModule)\n  .then(success => console.log('Bootstrap success'))\n  .catch(error => console.log(error));\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TreeModule } from 'angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PasswordStrengthBarModule } from 'ng2-password-strength-bar';\nimport { CustomFormsModule } from 'ng2-validation'\n\nimport { CgrAppComponent } from './cgr-app.component';\nimport { CgrAppRoutingModule, routedComponents } from './cgr-app-routing.module';\n\nimport { LoginComponent } from './core/component/login/login.component';\nimport { LoginHeaderComponent } from './core/component/login/login-header.component';\nimport { HubComponent } from './core/component/hub/hub.component';\nimport { ForgotPasswordComponent } from './core/component/forgotpassword/forgotpassword.component';\nimport { ForgotPasswordCompleteComponent } from './core/component/forgotpassword-complete/forgotpassword-complete.component';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpErrorInterceptor } from './core/service/http-error.interceptor';\n\nimport { ForgotPasswordService } from './core/service/forgotpassword.service';\nimport { ForgotPasswordCompleteService } from './core/service/forgotpassword-complete.service';\nimport { HubService } from './core/service/hub.service';\n\nimport { SharedModule } from './shared/shared.module';\n\nimport './rxjs-extensions';\n\n@NgModule( {\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        CgrAppRoutingModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n//        ModalModule.forRoot(),\n        TreeModule.forRoot(),\n        ContextMenuModule.forRoot(),\n        BsDropdownModule.forRoot(),\n        ButtonsModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        ProgressbarModule.forRoot(),\n        CollapseModule.forRoot(),\n        NgxPaginationModule,\n        BrowserAnimationsModule,\n        PasswordStrengthBarModule,\n        CustomFormsModule,\n        SharedModule.forRoot(),\n    ],\n    declarations: [\n        CgrAppComponent,\n        LoginComponent,\n        LoginHeaderComponent,\n        HubComponent,\n        ForgotPasswordComponent,\n        ForgotPasswordCompleteComponent,\n\n        // Routing components\n        routedComponents\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpErrorInterceptor,\n            multi: true\n        },\n        ForgotPasswordService,\n        ForgotPasswordCompleteService,\n        HubService,\n    ],\n    exports: [\n        CgrAppComponent,\n    ],\n    bootstrap: [CgrAppComponent],\n    entryComponents: [\n    ]\n} )\nexport class CgrAppModule { }\n","<div id=\"login-page\" class=\"new-admin-design-main\">\n    <login-header></login-header>\n    <loading-bar></loading-bar>\n\n    <message></message>\n    <div class=\"vertical-center\">\n        <div id=\"app-container\" class=\"container\">\n\n            <div class=\"row\">\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                    <div class=\"row\" style=\"margin-bottom: 25px;\">\n                        <div class=\"col-md-12\">\n\n                            <div class=\"heading text-center\">\n                                <h2>\n                                    <!-- \n                                    <localize key=\"login.page.title\"></localize>\n                                    -->\n                                </h2>\n                                <!-- <p class=\"lead\">\n                                    <localize key=\"login.page.description\"></localize>\n                                </p> -->\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n\n                            <form id=\"login-form\" class=\"login\" #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\">\n                                <div id=\"login-input-container\">\n                                    <div class=\"row\">\n                                        <input [(ngModel)]=\"username\" name=\"username\" type=\"text\" [placeholder]=\"'login.username' | localize\" id=\"login\" required /> <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" [placeholder]=\"'login.password' | localize\" id=\"password\" required /> <a routerLink=\"/forgotpassword\" class=\"forgot-password\"> <localize key=\"login.forgotPassword\"></localize>\n                                        </a>\n                                    </div>\n                                    <!-- <p class=\"login-submit\"> -->\n                                    <div class=\"row\">\n                                        <button type=\"submit\" id=\"login-btn\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\">\n                                            <localize key=\"login.button\"></localize>\n                                        </button>\n                                    </div>\n                                    <!-- </p> -->\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default navbar-fixed-top\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\">\n                <img [src]=\"context + '/logo/view?id=logo'\" />\n            </a>\n            <!-- <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"admin.link\"></localize></a> -->\n          </div>\n          \n          <!-- <ul class=\"nav navbar-nav navbar-right\">\n            <li dropdown>\n              <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle>\n                <localize key=\"admin.title\"></localize><span class=\"caret\"></span>\n              </a>            \n            </li>\n          </ul> -->\n        </div>\n      </nav>\n    </header>\n","<div class=\"body\">\n    <div class=\"new-admin-design-main\">\n\n        <cgr-header></cgr-header>\n        <loading-bar></loading-bar>\n        \n        <div id=\"app-container\" class=\"container-fluid\">\n            <div class=\"nav-icon-container\">\n\n                <div *ngIf=\"applications?.length > 0\" class=\"row-fluid vertical-center-row\">\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                    <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                        <div *ngFor=\"let app of applications; let i = index;\">\n\n                            <div class=\"row\" *ngIf=\"i % 4 === 0\">\n\n                                <div *ngFor=\"let application of applications; let internalIndex = index;\">\n                                    <div *ngIf=\"internalIndex >= i && internalIndex < i + 4\" class=\"col-xs-12 col-sm-12 col-md-3 text-center\" (click)=\"open(application)\">\n                                        <div [id]=\"application.oid\" class=\"nav-option-wrapper\">\n                                            <img class=\"nav-icon-img img-responsive\" [src]=\"context + '/' + application.src\" alt=\"Navigation\" />\n                                            <h3 class=\"nav-icon-img-label\">{{application.label}}</h3>\n                                            <!-- <p class=\"nav-icon-img-description\"> {{application.description}} </p> -->\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"applications?.length === 1 || applications?.length === 2\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                    <div *ngIf=\"applications?.length === 1\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                </div>\n            </div>\n\n        </div>\n        <!-- \n      <div style=\"width:100%\">\n        <label style=\"text-align: left; width:50%; display: inline;\">{{authService.getUsername()}} : {{authService.getRoles()}}</label>\n        <label style=\"text-align: right; width:50%; display: inline;\">{{authService.getVersion()}}</label>\n      </div>\n      -->\n        <!--\n      <div class=\"container\">\n\t\t    <div class=\"row justify-content-between\">\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getUsername()}} : {{authService.getRoles()}}\n\t\t\t    </div>\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getVersion()}}\n\t\t\t    </div>\n        </div>\n      </div>\n      -->\n\n    </div>\n</div>\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading\">\n          <h1><localize key=\"forgotpassword.header\"></localize></h1>\n        </div>\n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <fieldset>\n          <div class=\"row-holder\">\n            <div *ngIf=\"!emailIsSent\" class=\"label-holder\">\n              <label><localize key=\"forgotpassword.username\"></localize></label>\n            </div>          \n            <div *ngIf=\"!emailIsSent\" class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n              </span>\n            </div>\n            <div *ngIf=\"emailIsSent\" class=\"forgotpassword-email-is-sent\">\n              <localize key=\"forgotpassword.emailIsSent\"></localize>\n            </div>\n          </div>\n          \n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div *ngIf=\"!emailIsSent\" class=\"button-holder\">\n                <input type=\"button\" [value]=\"'forgotpassword.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                <input type=\"submit\" [value]=\"'forgotpassword.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n              \n              <div *ngIf=\"emailIsSent\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading\">\n          <h1><localize key=\"forgotpassword-complete.header\"></localize></h1>\n        </div>\n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <fieldset>\n          <div class=\"row-holder\">\n            <div *ngIf=\"!passwordIsReset\">            \n<!-- \n              <div class=\"label-holder\">\n                <label><localize key=\"forgotpassword-complete.token\"></localize></label>\n              </div>\n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"text\" [(ngModel)]=\"token\" name=\"token\" required [readonly]=\"true\">\n                </span>\n              </div>            \n -->            \n              <div class=\"label-holder\">\n                <label><localize key=\"forgotpassword-complete.newPassword\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                  <ng2-password-strength-bar\n                    [passwordToCheck]=\"newPassword\">\n                  </ng2-password-strength-bar>                              \n                </span>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"account.certainPassword\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n                </span>\n                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                  <localize key=\"account.certainPassword.validation\"></localize>\n                </div>                                                       \n              </div>                           \n            </div>\n            <div *ngIf=\"passwordIsReset\" class=\"forgotpassword-complete-password-is-reset\">\n              <localize key=\"forgotpassword-complete.passwordIsReset\"></localize>\n            </div>\n          </div>\n            \n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div *ngIf=\"!passwordIsReset\" class=\"button-holder\">\n                <input type=\"button\" [value]=\"'forgotpassword-complete.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                <input type=\"submit\" [value]=\"'forgotpassword-complete.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n              \n              <div *ngIf=\"passwordIsReset\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword-complete.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","<div id=\"innerFrameHtml\">        \n\n  <!-- MAIN CONTENT AND INJECTED VIEWS -->\n  <div id=\"main\">\n    <router-outlet></router-outlet>\n  </div>\n  \n</div>","import { Injectable } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpResponse,\n    HttpResponseBase,    \n    HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/do';\n\ndeclare var acp: string;\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n    intercept( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\n\n        return next.handle( request ).do(( event: HttpEvent<any> ) => {\n            if ( event instanceof HttpResponseBase ) {\n                const response = event as HttpResponseBase;\n                if ( response.status === 302 ) {\n                    window.location.href = acp + '/cgr/manage#/login';\n                    return;\n                }\n            }\n        }, ( err: any ) => {\n            if ( err instanceof HttpErrorResponse ) {\n                if ( err.status === 401 || err.status === 403 ) {\n                    // redirect to the login route\n                    // or show a modal\n                    window.location.href = acp + '/cgr/manage#/login';\n                }\n            }\n        } );\n    }\n}","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './core/component/login/login.component'\nimport { HubComponent } from './core/component/hub/hub.component';\nimport { ForgotPasswordComponent } from './core/component/forgotpassword/forgotpassword.component'\nimport { ForgotPasswordCompleteComponent } from './core/component/forgotpassword-complete/forgotpassword-complete.component'\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from './shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/menu',\n        pathMatch: 'full'\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n        data: { title: 'login.title' }\n    },\n    {\n        path: 'menu',\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: 'login.header' }\n    },\n    {\n        path: 'menu/:value',\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: 'login.header' }\n    },\n    {\n        path: 'forgotpassword',\n        component: ForgotPasswordComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'forgotpassword-complete/:token',\n        component: ForgotPasswordCompleteComponent\n    },\n    {\n        path: 'admin',\n        loadChildren: \"./admin/admin.module#AdminModule\"\n    },\n    {\n        path: 'registry',\n        loadChildren: \"./registry/registry.module#RegistryModule\"\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forRoot( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n        AdminGuard,\n        MaintainerGuard,\n        ContributerGuard\n    ]\n} )\nexport class CgrAppRoutingModule { }\n\nexport const routedComponents: any = [LoginComponent, HubComponent, ForgotPasswordComponent, ForgotPasswordCompleteComponent];\n"],"sourceRoot":""}