{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/shared/pipe/localize.pipe.ts","webpack:///./src/app/core/service/hub.service.ts","webpack:///./src/app/core/service/forgotpassword.service.ts","webpack:///./src/app/shared/component/header/header.component.ts","webpack:///./src/app/shared/component/header/header.component.html","webpack:///./src/app/shared/service/guard.service.ts","webpack:///./src/app/shared/component/profile/profile.component.ts","webpack:///./src/app/shared/component/profile/profile.component.html","webpack:///./src/app/shared/service/index.ts","webpack:///./src/app/shared/component/index.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.html","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.html","webpack:///./src/app/shared/component/message/error-message.component.ts","webpack:///./src/app/shared/component/message/error-message.component.html","webpack:///./src/app/shared/component/modals/confirm-modal.component.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.html","webpack:///./src/app/shared/component/modals/error-modal.component.ts","webpack:///./src/app/shared/component/modals/error-modal.component.html","webpack:///./src/app/shared/component/modals/success-modal.component.ts","webpack:///./src/app/shared/component/modals/success-modal.component.html","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.ts","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.html","webpack:///./src/app/shared/service/external-system.service.ts","webpack:///./src/app/shared/service/localization.service.ts","webpack:///./src/app/shared/service/modal-step-indicator.service.ts","webpack:///./src/app/shared/service/organization.service.ts","webpack:///./src/app/shared/service/pending-changes-guard.ts","webpack:///./src/app/shared/service/profile.service.ts","webpack:///./src/app/shared/service/progress.service.ts","webpack:///./src/app/shared/service/session.service.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/core/component/login/login.component.ts","webpack:///./src/app/core/component/login/login.component.html","webpack:///./src/app/core/component/hub/hub.component.ts","webpack:///./src/app/core/component/hub/hub.component.html","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.html","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.ts","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.html","webpack:///./src/app/shared/model/core.ts","webpack:///./src/app/shared/component/error-handler/error-handler.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/core/component/login/login-header.component.ts","webpack:///./src/app/core/component/login/login-header.component.html","webpack:///./src/app/shared/model/modal.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.html","webpack:///./src/app/shared/directive/number-only.directive.ts","webpack:///./src/app/shared/directive/must-match.directive.ts","webpack:///./src/app/shared/component/form-fields/base/validation.component.ts","webpack:///./src/app/shared/pipe/phone.pipe.ts","webpack:///./src/app/shared/model/profile.ts","webpack:///./src/main.ts","webpack:///./src/app/cgr-app.module.ts","webpack:///./src/app/shared/component/localize/localize.component.ts","webpack:///./src/app/shared/component/localize/localize.component.html","webpack:///./src/app/cgr-app.component.ts","webpack:///./src/app/cgr-app.component.html","webpack:///./src/app/cgr-app-routing.module.ts","webpack:///./src/app/core/service/http-error.interceptor.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.html","webpack:///./src/app/shared/component/message/message.component.ts","webpack:///./src/app/shared/component/message/message.component.html","webpack:///./src/app/shared/service/auth.service.ts","webpack:///./src/app/shared/service/event.service.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","service","transform","this","decode","LocalizePipe","http","applications","headers","HttpHeaders","post","acp","toPromise","HubService","eventService","submit","username","start","JSON","stringify","pipe","finalize","complete","newPassword","token","ForgotPasswordService","modalService","profileService","loggedIn","context","isAdmin","isMaintainer","isContributor","isContributer","shouldShowMenuItem","item","hasExactRole","RegistryRoleType","RA","RM","SRA","RC","logout","location","href","getUsername","account","then","profile","bsModalRef","show","ProfileComponent","backdrop","class","content","CgrHeaderComponent","router","canActivate","route","state","navigate","AdminGuard","MaintainerGuard","ContributerGuard","isLoggedIn","AuthGuard","authService","_profile","oid","password","firstName","lastName","email","changePassword","roles","getRoles","getRolesForUser","onSubmit","hide","onChangePassword","getRolesArray","onRoleIdsUpdate","log","cancel","unlock","services","AuthService","EventService","ExternalSystemService","LocalizationService","ModalStepIndicatorService","OrganizationService","PendingChangesGuard","ProfileService","ProgressService","SessionService","components","ErrorHandler","LoadingBarComponent","LocalizeComponent","ErrorMessageComponent","MessageComponent","ConfirmModalComponent","ErrorModalComponent","ModalStepIndicatorComponent","SuccessModalComponent","PasswordStrengthBarComponent","ProgressBarComponent","colors","measureStrength","pass","score","letters","variations","digits","test","lower","upper","nonWords","variationCount","check","Math","trunc","getColor","idx","col","ngOnChanges","changes","currentValue","setBarColors","count","_n","modalStepIndicatorService","stepSubscription","modalStepChange","subscribe","stepConfig","ngOnInit","ngOnDestroy","unsubscribe","localizeService","submitText","cancelText","ModalTypes","warning","onConfirm","Subject","confirm","next","showIndicator","prog","current","total","description","registerListener","deregisterListener","progress","getExternalSystems","pageNumber","pageSize","params","HttpParams","set","toString","getExternalSystem","applyExternalSystem","system","removeExternalSystem","locales","parser","Globalize","numberParser","formatter","numberFormatter","registry","getLocales","setLocales","addLocale","locale","indexOf","localizedValue","localeValues","forEach","parseNumber","formatNumber","number","Number","localize","bundle","com","runwaysdk","Localize","index","lastIndexOf","temp","modalStepChangedSource","asObservable","getStepConfig","setStepConfig","config","getStep","step","setStep","getOrganizations","updateOrganization","json","newOrganization","removeOrganization","code","canDeactivate","component","confirmRet","afterDeactivate","userOID","listeners","listener","indexOfItem","login","user","setUser","response","map","webpackAsyncContext","req","ids","id","keys","hService","open","catch","application","url","getMessageFromError","LoginComponent","tasks","buckets","HubComponent","emailIsSent","ForgotPasswordComponent","passwordIsReset","sub","ForgotPasswordCompleteComponent","LocaleValue","Organization","ExternalSystem","PageResult","LocalizedValue","buildFromRoleName","roleName","RegistryRole","roleSplit","split","orgCode","roleSuffix","gotCode","AC","RoleBuilder","geoObjectTypeCode","unspecified","msg","localizedMessage","includes","forRoot","ngModule","SharedModule","providers","CookieService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","ModalModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","CollapseModule","NgxPaginationModule","BooleanFieldComponent","OnlyNumber","MustMatchDirective","ValidationComponent","PhonePipe","LoginHeaderComponent","StepConfig","Step","valueChange","EventEmitter","localizeLabelKey","label","disable","change","toggle","emit","el","onKeyDown","keyCode","ctrlKey","shiftKey","preventDefault","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","setErrors","validate","provide","NG_VALIDATORS","useExisting","multi","args","country","phone","Profile","process","env","ENV","enableProdMode","platformBrowser","bootstrapModule","success","CgrAppModule","CgrAppComponent","HTTP_INTERCEPTORS","useClass","HttpErrorInterceptor","BrowserModule","HttpClientModule","CgrAppRoutingModule","TabsModule","BrowserAnimationsModule","text","routes","path","redirectTo","pathMatch","title","loadChildren","LocationStrategy","HashLocationStrategy","routedComponents","intercept","handle","tap","HttpResponseBase","status","HttpErrorResponse","onError","onMessage","userName","roleDisplayLabels","version","installedLocales","cookie","cookieData","cookieDataJSON","parse","buildFromCookieJson","buildRolesFromCookie","role","removeUser","isSRA","isRA","isRM","isRC","roleType","isOrganizationRA","isGeoObjectTypeRM","isGeoObjectTypeRC","getMyOrganizations","orgCodes","__getRoleFromRoleName","nameArr","getRoleDisplayLabelsArray","getRoleDisplayLabels","str","displayLabel","getVersion"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,UAAW,EACXiB,EAAG,GAGAZ,EAAkB,GAQtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAI,SAAuBhC,GAC9C,IAAIiC,EAAW,GAKXC,EAAqBvB,EAAgBX,GACzC,GAA0B,IAAvBkC,EAGF,GAAGA,EACFD,EAASrB,KAAKsB,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIC,SAAQ,SAASC,EAASC,GAC3CJ,EAAqBvB,EAAgBX,GAAW,CAACqC,EAASC,MAE3DL,EAASrB,KAAKsB,EAAmB,GAAKC,GAGtC,IACII,EADAC,EAASC,SAASC,cAAc,UAGpCF,EAAOG,QAAU,QACjBH,EAAOI,QAAU,IACbnB,EAAoBoB,IACvBL,EAAOM,aAAa,QAASrB,EAAoBoB,IAElDL,EAAOO,IA1DV,SAAwB/C,GACvB,OAAOyB,EAAoBuB,EAAI,GAAKhD,EAAU,YAyD/BiD,CAAejD,GAG5B,IAAIkD,EAAQ,IAAIC,MAChBZ,EAAmB,SAAUa,GAE5BZ,EAAOa,QAAUb,EAAOc,OAAS,KACjCC,aAAaX,GACb,IAAIY,EAAQ7C,EAAgBX,GAC5B,GAAa,IAAVwD,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYL,IAAyB,SAAfA,EAAMM,KAAkB,UAAYN,EAAMM,MAChEC,EAAUP,GAASA,EAAMQ,QAAUR,EAAMQ,OAAOb,IACpDG,EAAMW,QAAU,iBAAmB7D,EAAU,cAAgByD,EAAY,KAAOE,EAAU,IAC1FT,EAAMY,KAAO,iBACbZ,EAAMQ,KAAOD,EACbP,EAAMa,QAAUJ,EAChBH,EAAM,GAAGN,GAEVvC,EAAgBX,QAAWgE,IAG7B,IAAIpB,EAAUqB,YAAW,WACxB1B,EAAiB,CAAEmB,KAAM,UAAWE,OAAQpB,MAC1C,MACHA,EAAOa,QAAUb,EAAOc,OAASf,EACjCE,SAASyB,KAAKC,YAAY3B,GAG5B,OAAOJ,QAAQgC,IAAInC,IAIpBR,EAAoB4C,EAAIxD,EAGxBY,EAAoB6C,EAAI3C,EAGxBF,EAAoB8C,EAAI,SAAS1C,EAASiC,EAAMU,GAC3C/C,EAAoBgD,EAAE5C,EAASiC,IAClCvD,OAAOmE,eAAe7C,EAASiC,EAAM,CAAEa,YAAY,EAAMC,IAAKJ,KAKhE/C,EAAoBoD,EAAI,SAAShD,GACX,oBAAXiD,QAA0BA,OAAOC,aAC1CxE,OAAOmE,eAAe7C,EAASiD,OAAOC,YAAa,CAAEC,MAAO,WAE7DzE,OAAOmE,eAAe7C,EAAS,aAAc,CAAEmD,OAAO,KAQvDvD,EAAoBwD,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQvD,EAAoBuD,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAK7E,OAAO8E,OAAO,MAGvB,GAFA5D,EAAoBoD,EAAEO,GACtB7E,OAAOmE,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOvD,EAAoB8C,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR3D,EAAoB+D,EAAI,SAAS1D,GAChC,IAAI0C,EAAS1C,GAAUA,EAAOqD,WAC7B,WAAwB,OAAOrD,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoB8C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR/C,EAAoBgD,EAAI,SAASgB,EAAQC,GAAY,OAAOnF,OAAOC,UAAUC,eAAeC,KAAK+E,EAAQC,IAGzGjE,EAAoBuB,EAAI,WAGxBvB,EAAoBkE,GAAK,SAASC,GAA2B,MAApBC,QAAQ3C,MAAM0C,GAAYA,GAEnE,IAAIE,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAWlF,KAAK2E,KAAKO,GAC5CA,EAAWlF,KAAOf,EAClBiG,EAAaA,EAAWG,QACxB,IAAI,IAAI7F,EAAI,EAAGA,EAAI0F,EAAWxF,OAAQF,IAAKP,EAAqBiG,EAAW1F,IAC3E,IAAIU,EAAsBkF,EAI1BhF,EAAgBJ,KAAK,CAAC,IAAI,WAEnBM,I,0GC7NT,KACA,MADA,I,eAGA,aAEE,WAAoBgF,GAAA,KAAAA,U,OAEpB,YAAAC,UAAA,SAAUnB,GACR,OAAOoB,KAAKF,QAAQG,OAAOrB,I,iCAJlBsB,GAAY,6C,6CAAZA,EAAY,U,EADzB,GACa,EAAAA,gB,sGCeb,SACA,Q,eAMA,aAGC,WAAoBC,GAAA,KAAAA,O,OAEpB,YAAAC,aAAA,WAEC,IAAIC,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAGjB,OAAON,KAAKG,KACVI,KAAoBC,IAAM,qBAAsB,CAAEH,QAASA,IAC3DI,a,iCAZSC,GAAU,2B,oCAAVA,EAAU,QAAVA,EAAU,O,EADvB,GACa,EAAAA,c,iHC1Bb,SACA,QAEA,Q,GAEA,M,sBAIA,aAGC,WAAoBP,EAA0BQ,GAA1B,KAAAR,OAA0B,KAAAQ,e,OAE9C,YAAAC,OAAA,SAAOC,GAAP,WACKR,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFAN,KAAKW,aAAaG,QAEXd,KAAKG,KACVI,KAAWC,IAAM,2BAA4BO,KAAKC,UAAU,CAAEH,SAAUA,IAAa,CAAER,QAASA,IAChGY,KAAK,EAAAC,UAAS,WACd,EAAKP,aAAaQ,eAElBV,aAGH,YAAAU,SAAA,SAASC,EAAqBC,GAA9B,WACKhB,EAAU,IAAI,EAAAC,YAAY,CAC7B,eAAgB,qBAKjB,OAFAN,KAAKW,aAAaG,QAEXd,KAAKG,KACVI,KAAWC,IAAM,2BAA4BO,KAAKC,UAAU,CAAEI,YAAaA,EAAaC,MAAOA,IAAU,CAAEhB,QAASA,IACpHY,KAAK,EAAAC,UAAS,WACd,EAAKP,aAAaQ,eAElBV,a,iCA/BSa,GAAqB,sD,oCAArBA,EAAqB,QAArBA,EAAqB,O,EADlC,GACa,EAAAA,yB,8GCXb,KACA,MADA,IAIA,SAIA,GAFA,MAEA,Q,6ECiBgB,4BAA8D,2BAAsF,6BAA4C,iBAAI,kB,sBACpM,4BAAwD,2BAAuF,6BAA4C,iBAAI,kB,sBAC/L,4BAAyD,2BAA+E,6BAA+C,iBAAI,kB,sBAC3L,4BAAiE,2BAAyF,6BAA+C,iBAAI,kB,sBAC7M,4BAA4D,2BAAiE,6BAAyC,iBAAI,kB,sBAC1K,4BAAkE,2BAA0F,6BAAwD,iBAAI,kB,sBACxN,4BAAwD,2BAAgF,6BAAwC,iBAAI,kB,sBAIpL,4BAA2D,2BAAgF,6BAA0C,iBAAI,kB,mDAZ3L,4BAEE,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BAGA,oBACA,8BAWA,qBACA,6BAAoB,4BAA6B,0FAAmB,8BAAiD,iBAAI,iBAE3H,iB,iCAxBM,wEACA,kEACA,mEACA,2EACA,sEACA,4EACA,kEAIA,sE,mDA1Bb,2BACE,yBACE,0BAAG,0FAED,0BAAK,YAAiB,iBACxB,iBACF,iBACA,2BAEE,2BACE,yBACF,iBAGG,+BA2BL,iBACF,iB,gCAtCW,qDDDlB,iBAeI,WACYC,EACAC,EACA1B,GAFA,KAAAyB,eACA,KAAAC,iBACA,KAAA1B,UALH,KAAA2B,UAAoB,EAOzBzB,KAAK0B,QAAUlB,IACfR,KAAK2B,QAAU7B,EAAQ6B,UACvB3B,KAAK4B,aAAe5B,KAAK2B,SAAW7B,EAAQ8B,eAC5C5B,KAAK6B,cAAgB7B,KAAK2B,SAAW3B,KAAK4B,cAAgB9B,EAAQgC,gB,OAGtE,YAAAC,mBAAA,SAAmBC,GACjB,MAAa,gBAATA,IAIc,UAATA,IAKS,WAATA,GAIS,mBAATA,EAFChC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBC,KAAOnC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBE,IAMrF,cAATJ,EAEAhC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBG,MAAQrC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBC,KAAOnC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBE,KAAOpC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBI,IAEzL,oBAATN,EAEAhC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBC,KAAOnC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBE,KAAOpC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBI,IAEtI,UAATN,EAEAhC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBG,MAAQrC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBC,KAAOnC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBE,IAEvI,YAATJ,EAEAhC,KAAKF,QAAQmC,aAAa,EAAAC,iBAAiBC,IAElC,aAATH,KAUX,YAAAO,OAAA,WAEI5C,OAAO6C,SAASC,KAAOjC,IAAM,mBAOjC,YAAAkC,YAAA,WAGI,OAFmB1C,KAAKF,QAAQ4C,eAKpC,YAAAC,QAAA,sBACI3C,KAAKwB,eAAehD,MAAMoE,MAAM,SAAAC,GAC5B,EAAKC,WAAa,EAAKvB,aAAawB,KAAM,EAAAC,iBAAkB,CAAEC,SAAU,SAAUC,MAAO,kBACzF,EAAKJ,WAAWK,QAAQN,QAAUA,M,iCAlFjCO,GAAkB,iH,iCAAlBA,EAAkB,2jDCjB/B,6BACE,4BACE,4BACE,4BACE,0BAA4D,uBAA8C,iBAC1G,0BAA4D,4BAA8C,iBAC5G,iBAEC,6BA2CH,iBACF,iBACF,kB,MAjDgC,iGAAyC,kFACzC,iGAGrB,iD,gLDGX,GAMa,EAAAA,sB,uJElBb,KACA,MACA,MAFA,I,uBAIA,aAGE,WAAoBtD,EAA6BuD,GAA7B,KAAAvD,UAA6B,KAAAuD,S,OAEjD,YAAAC,YAAA,SAAYC,EAA+BC,GAEzC,QAAIxD,KAAKF,QAAQ6B,YAIjB3B,KAAKqD,OAAOI,SAAS,CAAE,aAEhB,I,iCAZEC,GAAU,iD,oCAAVA,EAAU,QAAVA,EAAU,O,EADvB,GACa,EAAAA,aAgBb,iBAGE,WAAoB5D,EAA6BuD,GAA7B,KAAAvD,UAA6B,KAAAuD,S,OAEjD,YAAAC,YAAA,SAAYC,EAA+BC,GAEzC,SAAIxD,KAAKF,QAAQ6B,YAAa3B,KAAKF,QAAQ8B,kBAI3C5B,KAAKqD,OAAOI,SAAS,CAAE,aAEhB,I,iCAZEE,GAAe,iD,oCAAfA,EAAe,QAAfA,EAAe,O,EAD5B,GACa,EAAAA,kBAgBb,iBAGE,WAAoB7D,EAA6BuD,GAA7B,KAAAvD,UAA6B,KAAAuD,S,OAEjD,YAAAC,YAAA,SAAYC,EAA+BC,GAEzC,SAAIxD,KAAKF,QAAQ6B,WAAa3B,KAAKF,QAAQ8B,gBAAmB5B,KAAKF,QAAQgC,mBAI3E9B,KAAKqD,OAAOI,SAAS,CAAE,aAEhB,I,iCAZEG,GAAgB,iD,oCAAhBA,EAAgB,QAAhBA,EAAgB,O,EAD7B,GACa,EAAAA,mBAgBb,iBAGE,WAAoB9D,EAA6BuD,GAA7B,KAAAvD,UAA6B,KAAAuD,S,OAEjD,YAAAC,YAAA,SAAYC,EAA+BC,GAEzC,QAAIxD,KAAKF,QAAQ+D,eAIjB7D,KAAKqD,OAAOI,SAAS,CAAE,YAEhB,I,iCAZEK,GAAS,iD,oCAATA,EAAS,QAATA,EAAS,O,EADtB,GACa,EAAAA,a,4GCrCb,KAEA,MAEA,OACA,MALA,I,qFCqDU,6BACE,6BACF,kB,mDAwDE,+BACE,oG,uBADF,iB,KAAsD,+E,mDAEtD,+BACE,oG,uBADF,iB,KAAqD,0D,sBA+BrD,6BACE,6BACF,kB,mDA5BN,0BACE,4BACE,4BACE,4BACE,6BACF,iBACF,iBACA,4BACE,6BACE,kCAAuB,8GAAvB,iBAEA,8CAEF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,8BACF,iBACA,gCAGF,iBACF,iBACF,iB,wEAtB+B,2DAEI,mEAasD,yCAE9E,0E,yBA0BD,yBACE,YACF,kB,uCADE,qE,qBAEF,oB,qBAGA,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,qBAEF,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,yBAEF,yBACE,YACF,kB,uCADE,kF,yBA5BJ,yBACE,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAGF,kB,uBA7BM,+DAGA,+DAGA,+DAIA,8DAGA,8DAGA,8DAIA,kFAGA,kFAGA,mF,mDAvNpB,0BACE,yBAEA,+BAA+E,kIAC7E,+BACE,4BACE,yBACE,4BACF,iBACF,iBAEA,4BACE,4BACE,6BACE,6BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,8GAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,iHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBAEF,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,mCAAmB,0GAAnB,iBACF,iBACA,gCAGF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,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","file":"cgr-app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"cgr-app\": 0,\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([405,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\n@Pipe({name: 'localize'})\nexport class LocalizePipe implements PipeTransform {\n  constructor(private service: LocalizationService) { }\n\t\n  transform(value: string): string {\n    return this.service.decode(value);\n  }\n}\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { Application } from '@shared/model/application';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HubService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tapplications(): Promise<Application[]> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Application[]>(acp + '/menu/applications', { headers: headers })\n\t\t\t.toPromise();\n\t}\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ForgotPasswordService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tsubmit(username: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/initiate', JSON.stringify({ username: username }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcomplete(newPassword: string, token: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/complete', JSON.stringify({ newPassword: newPassword, token: token }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","import { Component, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ProfileComponent } from '../profile/profile.component';\n\nimport { AuthService, ProfileService } from '@shared/service';\n\nimport { RegistryRoleType } from '@shared/model/core';\n\ndeclare var acp: string;\n\n@Component( {\n\n    selector: 'cgr-header',\n    templateUrl: './header.component.html',\n    styleUrls: []\n} )\nexport class CgrHeaderComponent {\n    context: string;\n    isAdmin: boolean;\n    isMaintainer: boolean;\n    isContributor: boolean;\n    bsModalRef: BsModalRef;\n    \n    @Input() loggedIn: boolean = true;\n\n    constructor(\n        private modalService: BsModalService,\n        private profileService: ProfileService,\n        private service: AuthService\n    ) {\n        this.context = acp;\n        this.isAdmin = service.isAdmin();\n        this.isMaintainer = this.isAdmin || service.isMaintainer();\n        this.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n    }\n    \n    shouldShowMenuItem(item: string): boolean {\n      if (item === \"HIERARCHIES\")\n      {\n        return true;\n      }\n      else if (item === \"LISTS\")\n      {\n        //return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC) || this.service.hasExactRole(RegistryRoleType.AC);\n        return true;\n      }\n      else if (item === \"IMPORT\")\n      {\n        return  this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n      }\n      else if (item === \"SCHEDULED-JOBS\")\n      {\n        return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n      }\n      else if (item === \"NAVIGATOR\")\n      {\n        return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n      }\n      else if (item === \"CHANGE-REQUESTS\")\n      {\n        return this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n      }\n      else if (item === \"TASKS\")\n      {\n        return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n      }\n      else if (item === \"CONFIGS\")\n      {\n        return this.service.hasExactRole(RegistryRoleType.RA);\n      }\n      else if (item === \"SETTINGS\")\n      {\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n\n    logout(): void {\n        \n        window.location.href = acp + '/session/logout';\n        \n//        this.sessionService.logout().then( response => {\n//            this.router.navigate( ['/login'] );\n//        } );\n    }\n\n    getUsername() {\n        let name: string = this.service.getUsername();\n\n        return name;\n    }\n\n    account(): void {\n        this.profileService.get().then( profile => {\n            this.bsModalRef = this.modalService.show( ProfileComponent, { backdrop: 'static', class: 'gray modal-lg' } );\n            this.bsModalRef.content.profile = profile;\n        } );\n    }\n\n}\n","<!-- HEADER AND NAVBAR -->\n<header>\n  <nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><localize key=\"cgr.standard.title\"></localize></a>\n      </div>\n          \n       <ul *ngIf=\"loggedIn\" class=\"nav navbar-nav navbar-right\"> \n         <li>\n           <a (click)=\"account()\" class=\"navbar-username\">\n           <!-- <div>Logged in as</div> -->\n             <div>{{getUsername()}}</div>\n           </a>\n         </li>\n         <li dropdown> \n             <!-- <localize key=\"hierarchy-management.menu\"></localize> -->\n           <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n             <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n           </a>     \n\n           \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <!-- GeoRegistry specific links -->\n                <li *ngIf=\"shouldShowMenuItem('HIERARCHIES')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/hierarchies\" routerLinkActive=\"active\"><localize key=\"hierarchies.menu\"></localize></a></li> \n                <li *ngIf=\"shouldShowMenuItem('LISTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/master-lists\" routerLinkActive=\"active\"><localize key=\"masterlist.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('IMPORT')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/data\" routerLinkActive=\"active\"><localize key=\"header.data.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('SCHEDULED-JOBS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/scheduled-jobs\" routerLinkActive=\"active\"><localize key=\"scheduledjobs.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('NAVIGATOR')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/location-manager\"><localize key=navigator.menu></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('CHANGE-REQUESTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/change-requests\" routerLinkActive=\"active\"><localize key=\"header.changerequest.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('TASKS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/tasks\" routerLinkActive=\"active\"><localize key=\"header.tasks\"></localize></a></li>\n                <!-- <li *ngIf=\"shouldShowMenuItem('CONFIGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/synchronization-configs\" routerLinkActive=\"active\"><localize key=\"synchronization.config.manager\"></localize></a></li> -->\n                \n                <hr>\n                <li *ngIf=\"shouldShowMenuItem('SETTINGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/settings\" routerLinkActive=\"active\"><localize key=\"settings.menu\"></localize> </a></li>\n\n\n                <!-- <hr *ngIf=\"isAdmin\">\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/localization-manager\" routerLinkActive=\"active\"><localize key=\"localization-manager.menu\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\">\n                    <a class=\"user-command-link\" routerLink=\"/admin/accounts\"><localize key=\"accounts.link\"></localize></a>\n                </li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li> -->\n  \n                <hr>\n                <li role=\"menuitem\"><a class=\"user-command-link\" (click)=\"logout()\"><localize key=\"userDashboards.logout\"></localize></a></li>\n            \n              </ul>\n         </li> \n       </ul> \n    </div>\n  </nav>\n</header>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { AuthService} from './auth.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class MaintainerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class ContributerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()  || this.service.isContributer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isLoggedIn()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/login' ]);\n    \n    return false;\n  }\n}\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, Input} from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Profile } from '@shared/model/profile';\nimport { AuthService, ProfileService } from '@shared/service';\nimport { Role } from '../../../admin/model/account';\n\n\n@Component({  \n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class ProfileComponent {\n  public _profile:Profile = {\n    oid: '',\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    changePassword:false\n  };\n  \n  @Input('profile')\n  set profile(value: Profile) {\n    this._profile = value;\n    this.getRoles();\n  }\n  roles: Role[] = [];\n  \n  constructor(private service:ProfileService, public bsModalRef: BsModalRef, private authService: AuthService) {}\n  \n\n  getRoles(): void {\n    this.service.getRolesForUser(this._profile.oid).then(roles => {\n      this.roles = roles;\n    });\n  }\n  \n  onSubmit():void {\n    if(!this._profile.changePassword) {\n      delete this._profile.password;\n    }\n\t  \n    this.service.apply(this._profile).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }\n\n  onChangePassword(): void {\n    this._profile.changePassword = !this._profile.changePassword;\n  }\n  \n  // getRoles():string {\n  //   return this.authService.getRoleDisplayLabels();\n  // }\n\n  getRolesArray(): any {\n    return this.authService.getRoles();\n  }\n\n  onRoleIdsUpdate(event: any): void {\n    console.log(event)\n  }\n  \n  cancel():void {\n    this.service.unlock(this._profile.oid).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }  \n}\n","<div *ngIf=\"_profile\">\n  <message></message>\n\n  <form #form=\"ngForm\" class=\"modal-form\" style=\"background: none;border: none;\" (ngSubmit)=\"form.valid && onSubmit()\">\n    <fieldset>\n      <div class=\"heading\">\n        <h3>\n          <localize key=\"profile.heading\"></localize>\n        </h3>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.firstname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.firstName\" name=\"firstname\" required>\n          </span>\n        </div>\n      </div>\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.lastname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.lastName\" name=\"lastname\" required>\n          </span>\n        </div>\n      </div>\n      \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>            \n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.email\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.email\" name=\"email\" required #aemail=\"ngModel\" email>\n          </span>\n          <div *ngIf=\"aemail.errors?.email\" class=\"inline-error-message\">\n            <localize key=\"account.email.validation\"></localize>\n          </div>\n        </div>\n      </div>\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n            \n\n      <div class=\"heading\">\n        <h3>\n          <localize key=\"account.info.heading\"></localize>\n        </h3>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"profilename\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.username\" name=\"username\" required>\n          </span>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n        </div>\n        <div class=\"holder\">\n          <!-- <boolean-field [(value)]=\"profile.changePassword\"></boolean-field> -->\n          <div style=\"text-align: left;\">\n            <input type=\"button\" *ngIf=\"!_profile.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n              (click)=\"onChangePassword()\" />\n            <input type=\"button\" *ngIf=\"_profile.changePassword\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\"\n              (click)=\"onChangePassword()\" />\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"_profile.changePassword\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" [(ngModel)]=\"_profile.password\" name=\"password\" #password=\"ngModel\" required\n                minlength=\"5\" maxlength=\"50\">\n              <ng2-password-strength-bar [passwordToCheck]=\"_profile.password\">\n              </ng2-password-strength-bar>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.certainPassword\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [equalTo]=\"password\" />\n            </span>\n            <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n              <localize key=\"account.certainPassword.validation\"></localize>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"com.runwaysdk.ui.userstable.UsersTable.adminRoles\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n\n          <table class=\"table\">\n            <thead>\n              <tr>\n                  <th><localize key=\"profile.roles.role.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.organization.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.geoobjecttype.table.heading\"></localize></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let role of roles\">\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.geoObjectTypeLabel.localizedValue}}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- <ul>\n            <li *ngFor=\"let role of getRolesArray()\">{{role}}</li>\n          </ul> -->\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\"\n              [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n\n</div>\n","import { AuthService } from './auth.service';\nimport { EventService } from './event.service';\nimport { ExternalSystemService } from './external-system.service';\nimport { AdminGuard, AuthGuard, ContributerGuard, MaintainerGuard } from './guard.service';\nimport { LocalizationService } from './localization.service';\nimport { ModalStepIndicatorService } from './modal-step-indicator.service';\nimport { OrganizationService } from './organization.service';\nimport { PendingChangesGuard } from './pending-changes-guard';\nimport { ProfileService } from './profile.service';\nimport { ProgressService } from './progress.service';\nimport { SessionService } from './session.service';\n\nexport const services: any[] = [\n\tAuthService,\n\tEventService,\n\tExternalSystemService,\n\tAdminGuard,\n\tAuthGuard,\n\tContributerGuard,\n\tMaintainerGuard,\n\tLocalizationService,\n\tModalStepIndicatorService,\n\tOrganizationService,\n\tPendingChangesGuard,\n\tProfileService,\n\tProgressService,\n\tSessionService\n];\n\nexport * from './auth.service';\nexport * from './event.service';\nexport * from './external-system.service';\nexport * from './guard.service';\nexport * from './localization.service';\nexport * from './modal-step-indicator.service';\nexport * from './organization.service';\nexport * from './pending-changes-guard';\nexport * from './profile.service';\nexport * from './progress.service';\nexport * from './session.service';\n","import { ErrorHandler } from './error-handler/error-handler';\nimport { CgrHeaderComponent } from './header/header.component';\nimport { LoadingBarComponent } from './loading-bar/loading-bar.component';\nimport { LocalizeComponent } from './localize/localize.component';\nimport { ErrorMessageComponent } from './message/error-message.component';\nimport { MessageComponent } from './message/message.component';\nimport { ConfirmModalComponent } from './modals/confirm-modal.component';\nimport { ErrorModalComponent } from './modals/error-modal.component';\nimport { ModalStepIndicatorComponent } from './modals/modal-step-indicator.component';\nimport { SuccessModalComponent } from './modals/success-modal.component';\nimport { PasswordStrengthBarComponent } from './password-strength-bar/password-strength-bar.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\n\nexport const components: any[] = [\n\tErrorHandler,\n\tCgrHeaderComponent,\n\tLoadingBarComponent,\n\tLocalizeComponent,\n\tErrorMessageComponent,\n\tMessageComponent,\n\tConfirmModalComponent,\n\tErrorModalComponent,\n\tModalStepIndicatorComponent,\n\tSuccessModalComponent,\n\tPasswordStrengthBarComponent,\n\tProfileComponent,\n\tProgressBarComponent\n];\n\nexport * from './error-handler/error-handler';\nexport * from './header/header.component';\nexport * from './loading-bar/loading-bar.component';\nexport * from './localize/localize.component';\nexport * from './message/error-message.component';\nexport * from './message/message.component';\nexport * from './modals/confirm-modal.component';\nexport * from './modals/error-modal.component';\nexport * from './modals/modal-step-indicator.component';\nexport * from './modals/success-modal.component';\nexport * from './password-strength-bar/password-strength-bar.component';\nexport * from './profile/profile.component';\nexport * from './progress-bar/progress-bar.component';\n","\nimport { Component, OnChanges, Input, SimpleChange } from '@angular/core';\n\n@Component({\n\tselector: 'password-strength-bar',\n\ttemplateUrl: './password-strength-bar.component.html',\n\tstyleUrls: ['./password-strength-bar.component.css']\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n\n\t@Input() passwordToCheck: string;\n\tbar0: string;\n\tbar1: string;\n\tbar2: string;\n\tbar3: string;\n\tbar4: string;\n\n\tprivate colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n\tprivate static measureStrength(pass: string) {\n\t\tlet score = 0;\n\t\t// award every unique letter until 5 repetitions  \n\t\tlet letters = {};\n\t\tfor (let i = 0; i < pass.length; i++) {\n\t\t\tletters[pass[i]] = (letters[pass[i]] || 0) + 1;\n\t\t\tscore += 5.0 / letters[pass[i]];\n\t\t}\n\t\t// bonus points for mixing it up  \n\t\tlet variations = {\n\t\t\tdigits: /\\d/.test(pass),\n\t\t\tlower: /[a-z]/.test(pass),\n\t\t\tupper: /[A-Z]/.test(pass),\n\t\t\tnonWords: /\\W/.test(pass),\n\t\t};\n\n\t\tlet variationCount = 0;\n\t\tfor (let check in variations) {\n\t\t\tvariationCount += (variations[check]) ? 1 : 0;\n\t\t}\n\t\tscore += (variationCount - 1) * 10;\n\t\treturn Math.trunc(score);\n\t}\n\n\tprivate getColor(score: number) {\n\t\tlet idx = 0;\n\t\tif (score > 90) {\n\t\t\tidx = 4;\n\t\t} else if (score > 70) {\n\t\t\tidx = 3;\n\t\t} else if (score >= 40) {\n\t\t\tidx = 2;\n\t\t} else if (score >= 20) {\n\t\t\tidx = 1;\n\t\t}\n\t\treturn {\n\t\t\tidx: idx + 1,\n\t\t\tcol: this.colors[idx]\n\t\t};\n\t}\n\n\tngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n\t\tvar password = changes['passwordToCheck'].currentValue;\n\t\tthis.setBarColors(5, '#DDD');\n\t\tif (password) {\n\t\t\tlet c = this.getColor(PasswordStrengthBarComponent.measureStrength(password));\n\t\t\tthis.setBarColors(c.idx, c.col);\n\t\t}\n\t}\n\tprivate setBarColors(count, col) {\n\t\tfor (let _n = 0; _n < count; _n++) {\n\t\t\tthis['bar' + _n] = col;\n\t\t}\n\t}\n\n}  \n","<div style=\"margin: 11px;\" id=\"strength\" #strength>\n    <ul id=\"strengthBar\">\n        <li class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>\n    </ul>\n</div>\n","import { Component } from '@angular/core';\nimport { ModalStepIndicatorService } from '@shared/service';\n\nimport { Step, StepConfig } from '@shared/model/modal';\nimport { Subscription } from 'rxjs';\n\n\n@Component( { \n    selector: 'modal-step-indicator',\n    templateUrl: './modal-step-indicator.component.html',\n    styleUrls: ['./modal-step-indicator.css']\n} )\nexport class ModalStepIndicatorComponent {\n\n    stepConfig: StepConfig;\n    step: Step;\n    stepSubscription: Subscription;\n\n    constructor( private modalStepIndicatorService: ModalStepIndicatorService ) { \n        this.stepSubscription = modalStepIndicatorService.modalStepChange.subscribe( stepConfig => {\n            this.stepConfig = stepConfig;\n        })\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n        this.stepSubscription.unsubscribe();\n    }\n}\n","<div class=\"step-indicator\" >\n    <ul *ngIf=\"stepConfig && stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\" [ngClass]=\"{'active':step.active, 'enabled':step.enabled}\" *ngFor=\"let step of stepConfig.steps\">{{step.label}}</li>\n    </ul>\n</div>","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'error-message',\n    templateUrl: './error-message.component.html',\n    styleUrls: ['./error-message.css']\n} )\nexport class ErrorMessageComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( private localizeService: LocalizationService ) { }\n}\n","<div *ngIf=\"message != null\" class=\"error-container\">\n    <div class=\"\">\n        <strong class=\"error-title\">\n            <localize key=\"error.title\"></localize>\n        </strong>\n    </div>\n    <div class=\"\">\n        <div>\n            <p class=\"error-message\">{{message}}</p>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\n\n@Component( {\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./modal.css']\n} )\nexport class ConfirmModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    @Input() data: any;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.submit\");\n\n    @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next( this.data );\n    }\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>{{cancelText}}</span>\n          </button>\n          <button type=\"button\" (click)=\"confirm()\"\n            [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n            aria-disabled=\"false\">\n            <span>{{submitText}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'error-modal',\n    templateUrl: './error-modal.component.html',\n    styleUrls: ['./error-modal.css']\n} )\nexport class ErrorModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'success-modal',\n\ttemplateUrl: './success-modal.component.html',\n\tstyleUrls: ['./success-modal.css']\n})\nexport class SuccessModalComponent implements OnInit {\n    /*\n     * Message\n     */\n\t@Input() message: string;\n\n\tconstructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.message = this.message ? this.message : this.localizeService.decode(\"success.modal.default.message\");\n\t}\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Progress } from '@shared/model/progress';\nimport { ProgressService, IProgressListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styles: [\n    '.progress-overlay { background-color: #CCCCCC; position: absolute; display: block;opacity: 0.8;z-index: 99999 !important;}',\n    '.progress-div { width: 100%; margin-left: 0; padding-left: 25%; padding-right: 25%; margin-top: 30% }'\n  ]\n})\nexport class ProgressBarComponent implements OnInit, IProgressListener {\n  public showIndicator: boolean = true;\n\n  public prog:Progress = {\n    current:0,\n    total:1,\n    description:\"Initializing\"\n  };\n\n  constructor(private service: ProgressService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.prog = {\n      current:0,\n      total:1,\n      description:\"Initializing\"\n    };\n    \n    this.showIndicator = true;\n  }\n  \n  progress(progress:Progress):void {\n    this.prog = progress;\n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","<div *ngIf=\"showIndicator\" class=\"progress-overlay\" style=\"height: 100%; width: 100%;\">\n  <div class=\"progress-div\">\n    <progressbar class=\"progress-striped active\" [max]=\"prog.total\" [value]=\"prog.current\"><i>{{prog.description}}</i></progressbar>\n  </div>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { ExternalSystem, PageResult } from '@shared/model/core'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ExternalSystemService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetExternalSystems(pageNumber: number, pageSize:number): Promise<PageResult<ExternalSystem>> {\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'pageNumber', pageNumber.toString() );\n        params = params.set( 'pageSize', pageSize.toString() );\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExternalSystem>>(acp + '/external-system/get-all', {params:params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetExternalSystem(oid:string): Promise<ExternalSystem> {\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'oid', oid );\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<ExternalSystem>(acp + '/external-system/get', {params:params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tapplyExternalSystem(system: ExternalSystem): Promise<ExternalSystem> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<ExternalSystem>(acp + '/external-system/apply', JSON.stringify({ system: system }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tremoveExternalSystem(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/external-system/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\t\n\n}\n","import { Injectable } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\ndeclare var Globalize: any;\ndeclare var com: any\ndeclare var registry: any\n\n@Injectable()\nexport class LocalizationService {\n\n\tlocales: string[] = ['defaultLocale'];\n\n\tprivate parser: any = Globalize.numberParser();\n\tprivate formatter: any = Globalize.numberFormatter();\n\n\tconstructor() {\n\t\tthis.locales = registry.locales;\n\t}\n\n\tgetLocales(): string[] {\n\t\treturn this.locales;\n\t}\n\n\tsetLocales(locales: string[]): void {\n\t\t// The installed locales are now read from the global registry value on load\n\t\t//\t\tthis.locales = locales;\n\t}\n\n\taddLocale(locale: string): void {\n\n\t\tif (this.locales.indexOf(locale) === -1) {\n\t\t\tthis.locales.push(locale);\n\t\t}\n\t}\n\n\tcreate(): LocalizedValue {\n\t\tconst value = { localizedValue: '', localeValues: [] } as LocalizedValue;\n\n\t\tthis.locales.forEach(locale => {\n\t\t\tvalue.localeValues.push({ locale: locale, value: '' });\n\t\t});\n\n\t\treturn value;\n\t}\n\n\tpublic parseNumber(value: string): number {\n\t\tif (value != null && value.length > 0) {\n\t\t\t//convert data from view format to model format\n\t\t\tvar number = this.parser(value);\n\n\t\t\treturn number;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic formatNumber(value: any): string {\n\t\tif (value != null) {\n\t\t\tvar number = value;\n\n\t\t\tif (typeof number === 'string') {\n\t\t\t\tif (number.length > 0 && Number(number)) {\n\t\t\t\t\tnumber = Number(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//convert data from model format to view format\n\t\t\treturn this.formatter(number);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic localize(bundle: string, key: string): string {\n\t\treturn com.runwaysdk.Localize.localize(bundle, key);\n\t}\n\n\tpublic get(key: string): string {\n\t\treturn com.runwaysdk.Localize.get(key);\n\t}\n\n\tpublic decode(key: string): string {\n\t\tlet index = key.lastIndexOf('.');\n\n\t\tif (index !== -1) {\n\n\t\t\tlet temp = [key.slice(0, index), key.slice(index + 1)]\n\n\t\t\treturn this.localize(temp[0], temp[1]);\n\t\t}\n\t\telse {\n\t\t\treturn this.get(key);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n// import { Subject } from 'rxjs'\nimport { Subject } from 'rxjs';\n\n\nimport { Step, StepConfig } from '@shared/model/modal';\n\n\ndeclare var acp: string;\n\n@Injectable()\nexport class ModalStepIndicatorService {\n\n    stepConfig: StepConfig;\n    step: Step;\n    private modalStepChangedSource = new Subject<StepConfig>();\n    modalStepChange = this.modalStepChangedSource.asObservable();\n\n\n    constructor(  ) { }\n\n    public getStepConfig(): StepConfig {\n        return this.stepConfig;\n    }\n\n    public setStepConfig(config: StepConfig): void {\n        this.stepConfig = config;\n        \n        this.modalStepChangedSource.next(this.stepConfig);\n    }\n\n    getStep(): Step {\n        return this.step;\n    }\n\n    setStep(step: Step): void {\n        this.step = step;\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { Organization, PageResult } from '@shared/model/core';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class OrganizationService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetOrganizations(): Promise<Organization[]> {\n\n    this.eventService.start();\n\n    return this.http\n      .get<Organization[]>(acp + '/cgr/organizations/get-all')\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  updateOrganization(json: any): Promise<Organization> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<Organization>(acp + '/cgr/orgainization/update', JSON.stringify({ json: json }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  newOrganization(json: any): Promise<any> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<any>(acp + '/cgr/orgainization/create', JSON.stringify({ json: json }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  removeOrganization(code: any): Promise<void> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<any>(acp + '/cgr/orgainization/delete', JSON.stringify({ code: code }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n}\n","import { CanDeactivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n// Thanks to : https://stackoverflow.com/a/41187919/219843\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n  afterDeactivate: (arg:boolean) => void;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    if (!component.canDeactivate())\n    {\n      // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\n      // when navigating away from your angular app, the browser will show a generic warning message\n      // see http://stackoverflow.com/a/42207299/7307355\n      var confirmRet = confirm('WARNING: You have unsaved changes. Press Cancel to go back and save these changes, or OK to lose these changes.');\n      \n      component.afterDeactivate(confirmRet);\n      \n      return confirmRet;\n    }\n    \n    return true;\n  }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\n\nimport { EventService } from './event.service';\n\nimport { Profile } from '@shared/model/profile';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ProfileService {\n\n    constructor( service: EventService, private http: HttpClient ) { }\n\n    get(): Promise<Profile> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post<Profile>( acp + '/registryaccount/get', { headers: headers } )\n            .toPromise();\n    }\n\n\n    apply( profile: Profile ): Promise<Profile> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post<Profile>( acp + '/registryaccount/apply', JSON.stringify( { account: profile } ), { headers: headers } )\n            .toPromise();\n    }\n\n    unlock( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post<void>( acp + '/registryaccount/unlock', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .toPromise()\n    }\n\n    getRolesForUser( userOID: string ): Promise<any> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n\n        return this.http\n            .post<Profile>( acp + '/registryaccount/getRolesForUser', {userOID: userOID}, { headers: headers } )\n            .toPromise();\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\nimport { Progress } from '@shared/model/progress';\n\nexport interface IProgressListener {\n  start(): void;\n  progress(progress:Progress):void;  \n  complete(): void;\n}\n\n@Injectable()\nexport class ProgressService {\n  private listeners: IProgressListener[] = [];\n  \n  public constructor() {}\n  \n  public registerListener(listener: IProgressListener): void {\n   this.listeners.push(listener);\n  }\n  \n  public deregisterListener(listener: IProgressListener): boolean {\n    let indexOfItem = this.listeners.indexOf(listener);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this.listeners.splice(indexOfItem, 1);\n\n    return true;\n  }\n  \n  public start(): void {\n    for (const listener of this.listeners) {\n      listener.start();\n    }\n  }\n  \n  public progress(progress:Progress):void {\n    for (const listener of this.listeners) {\n      listener.progress(progress);\n    }\t  \n  }  \n  \n  public complete(): void {\n    for (const listener of this.listeners) {\n      listener.complete();\n    }\n  }  \n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from './event.service';\n\nimport { AuthService } from './auth.service';\nimport { User } from '@shared/model/user';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SessionService {\n\n    constructor( private service: EventService, private http: HttpClient, private authService: AuthService ) { }\n\n    login( username: string, password: string ): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n        return this.http\n            .post<User>( acp + '/session/login', JSON.stringify( { username: username, password: password } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.service.complete();\n\t\t\t}))\n            .toPromise()\n            .then(( user: User ) => {\n                this.authService.setUser( user );\n\n                return user;\n            } )\n    }\n\n    logout(): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n\n        return this.http\n            .post<void>( acp + '/session/logout', { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.service.complete();\n\t\t\t}))\n            .toPromise()\n            .then(( response: any ) => {\n                this.authService.setUser( null );\n\n                return response;\n            } )\n    }\n}\n","var map = {\n\t\"./admin/admin.module\": [\n\t\t341,\n\t\t\"vendor\",\n\t\t0,\n\t\t2\n\t],\n\t\"./registry/registry.module\": [\n\t\t342,\n\t\t\"vendor\",\n\t\t0,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 213;\nmodule.exports = webpackAsyncContext;","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Application } from '@shared/model/application';\nimport { SessionService } from '@shared/service';\nimport { HubService } from '@core/service/hub.service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { LoginHeaderComponent } from './login-header.component';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n} )\nexport class LoginComponent {\n    context: string;\n    username: string = '';\n    password: string = '';\n\n    /*\n     * Reference to the modal current showing\n    */\n    private bsModalRef: BsModalRef;\n\n\n    constructor( private service: SessionService, private hService: HubService, private modalService: BsModalService, private router: Router ) {\n        this.context = acp as string;\n    }\n\n    onSubmit(): void {\n        this.service.login( this.username, this.password ).then( response => {\n\n            this.hService.applications().then( applications => {\n                if ( applications.length == 1 ) {\n                    this.open( applications[0] );\n                }\n                else {\n                    this.router.navigate( ['/menu/true'] );\n                }\n            } );\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    public error( err: HttpErrorResponse ): void {\n            // TODO: add error modal\n            this.bsModalRef = this.modalService.show( ErrorModalComponent, { backdrop: true } );\n            this.bsModalRef.content.message = ErrorHandler.getMessageFromError(err);\n    }\n\n\n}\n","<div id=\"login-page\" class=\"new-admin-design-main\">\n    <login-header></login-header>\n    <loading-bar></loading-bar>\n\n    <message></message>\n    <div class=\"vertical-center\">\n        <div id=\"app-container\" class=\"container\">\n\n            <div class=\"row\">\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                    <div class=\"row\" style=\"margin-bottom: 25px;\">\n                        <div class=\"col-md-12\">\n\n                            <div class=\"heading text-center\">\n                                <h2>\n                                    <!-- \n                                    <localize key=\"login.page.title\"></localize>\n                                    -->\n                                </h2>\n                                <!-- <p class=\"lead\">\n                                    <localize key=\"login.page.description\"></localize>\n                                </p> -->\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n\n                            <form id=\"login-form\" class=\"login\" #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\">\n                                <div id=\"login-input-container\">\n                                    <div class=\"row\">\n                                        <input [(ngModel)]=\"username\" name=\"username\" type=\"text\" [placeholder]=\"'login.username' | localize\" id=\"login\" required /> <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" [placeholder]=\"'login.password' | localize\" id=\"password\" required /> <a routerLink=\"/forgotpassword\" class=\"forgot-password\"> <localize key=\"login.forgotPassword\"></localize>\n                                        </a>\n                                    </div>\n                                    <!-- <p class=\"login-submit\"> -->\n                                    <div class=\"row\">\n                                        <button type=\"submit\" id=\"login-btn\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\">\n                                            <localize key=\"login.button\"></localize>\n                                        </button>\n                                    </div>\n                                    <!-- </p> -->\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Application } from '@shared/model/application';\n\nimport { AuthService } from '@shared/service';\n\nimport { HubService } from '@core/service/hub.service';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'hub',\n    templateUrl: './hub.component.html',\n    styleUrls: ['./hub.component.css']\n} )\nexport class HubComponent implements OnInit {\n    context: string;\n    applications: Application[] = [];\n    tasks: any = [];\n    isAdmin: boolean = false;\n    buckets: string = 'col-sm-6';\n    bsModalRef: BsModalRef;\n\n    constructor(\n        private service: HubService,\n        private authService: AuthService,\n        private modalService: BsModalService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.context = acp as string;\n    }\n\n    ngOnInit(): void {\n      this.service.applications().then( applications => {\n          this.applications = applications;\n      } );\n      \n      this.isAdmin = this.authService.isAdmin();\n    }\n    \n    //   logout():void {\n    //     this.sessionService.logout().then(response => {\n    //       this.router.navigate(['/login']);\t  \n    //     }); \t  \n    //   }\n\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    //   account():void{\n    //     this.profileService.get().then(profile => {\n    //       this.bsModalRef = this.modalService.show(ProfileComponent, {backdrop: 'static', class: 'gray modal-lg'});\n    //       this.bsModalRef.content.profile = profile;\n    //     });\n    //   }\n}\n","<div class=\"body\">\n    <div class=\"new-admin-design-main\">\n\n        <cgr-header></cgr-header>\n        <loading-bar></loading-bar>\n        \n        <div id=\"app-container\" class=\"container-fluid\">\n            <div class=\"nav-icon-container\">\n\n                <div *ngIf=\"applications?.length > 0\" class=\"row-fluid vertical-center-row\">\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                    <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                        <div *ngFor=\"let app of applications; let i = index;\">\n\n                            <div style=\"padding: 10px 0;\" class=\"row\" *ngIf=\"i % 4 === 0\">\n\n                                <div *ngFor=\"let application of applications; let internalIndex = index;\">\n                                    <div *ngIf=\"internalIndex >= i && internalIndex < i + 4\" class=\"col-xs-12 col-sm-12 col-md-3 text-center\" (click)=\"open(application)\">\n                                        <div [id]=\"application.oid\" class=\"nav-option-wrapper\">\n                                            <img class=\"nav-icon-img img-responsive\" [src]=\"context + '/' + application.src\" alt=\"Navigation\" />\n                                            <h3 class=\"nav-icon-img-label\">{{application.label}}</h3>\n                                            <!-- <p class=\"nav-icon-img-description\"> {{application.description}} </p> -->\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"applications?.length === 1 || applications?.length === 2\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                    <div *ngIf=\"applications?.length === 1\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                </div>\n            </div>\n\n        </div>\n        <!-- \n      <div style=\"width:100%\">\n        <label style=\"text-align: left; width:50%; display: inline;\">{{authService.getUsername()}} : {{authService.getRoles()}}</label>\n        <label style=\"text-align: right; width:50%; display: inline;\">{{authService.getVersion()}}</label>\n      </div>\n      -->\n        <!--\n      <div class=\"container\">\n\t\t    <div class=\"row justify-content-between\">\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getUsername()}} : {{authService.getRoles()}}\n\t\t\t    </div>\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getVersion()}}\n\t\t\t    </div>\n        </div>\n      </div>\n      -->\n\n    </div>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ForgotPasswordService } from '@core/service/forgotpassword.service';\n\nimport { ErrorHandler } from '@shared/component';\n\n@Component({\n  selector: 'forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  username: string;\n  emailIsSent: boolean = false;\n  message: string = null;\n\n  constructor(\n    private service: ForgotPasswordService,\n    private router: Router,      \n    private route: ActivatedRoute,\n    private location: Location) {\n  }\n\n  ngOnInit(): void {\n  \n  }\n  \n  cancel(): void {    \n    this.router.navigate(['/']);\n  } \n  \n  onSubmit(): void {\n    this.service.submit(this.username)\n      .then(response => {\n        this.emailIsSent = true;\n      })\n      .catch(( err: HttpErrorResponse ) => {\n        this.error( err );\n      } );\n  }\n  \n  error( err: HttpErrorResponse ): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading\">\n          <h1><localize key=\"forgotpassword.header\"></localize></h1>\n        </div>\n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <fieldset>\n          <div class=\"row-holder\">\n            <div *ngIf=\"!emailIsSent\" class=\"label-holder\">\n              <label><localize key=\"forgotpassword.username\"></localize></label>\n            </div>          \n            <div *ngIf=\"!emailIsSent\" class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n              </span>\n            </div>\n            <div *ngIf=\"emailIsSent\" class=\"forgotpassword-email-is-sent\">\n              <localize key=\"forgotpassword.emailIsSent\"></localize>\n            </div>\n          </div>\n          \n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div *ngIf=\"!emailIsSent\" class=\"button-holder\">\n                <input type=\"button\" [value]=\"'forgotpassword.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                <input type=\"submit\" [value]=\"'forgotpassword.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n              \n              <div *ngIf=\"emailIsSent\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ForgotPasswordService } from '@core/service/forgotpassword.service';\n\n\n@Component({\n  templateUrl: './forgotpassword-complete.component.html',\n  styleUrls: ['./forgotpassword-complete.component.css']\n})\nexport class ForgotPasswordCompleteComponent implements OnInit {\n  newPassword: string;\n  token: string;\n  passwordIsReset: boolean = false;\n  private sub: any;\n  message: string = null;\n\n  constructor(\n    private service: ForgotPasswordService,\n    private router: Router,      \n    private route: ActivatedRoute) {\n  }\n  \n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n       this.token = params['token'];\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  \n  \n  cancel(): void {    \n    this.router.navigate(['/']);\n  } \n  \n  onSubmit(): void {\n    this.service.complete(this.newPassword, this.token)\n      .then(() => {\n        this.passwordIsReset = true;\n      })\n      .catch(( err: HttpErrorResponse ) => {\n        this.error( err );\n      } );\n  }\n  \n  error( err: HttpErrorResponse ): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading\">\n          <h1><localize key=\"forgotpassword-complete.header\"></localize></h1>\n        </div>\n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <fieldset>\n          <div class=\"row-holder\">\n            <div *ngIf=\"!passwordIsReset\">            \n<!-- \n              <div class=\"label-holder\">\n                <label><localize key=\"forgotpassword-complete.token\"></localize></label>\n              </div>\n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"text\" [(ngModel)]=\"token\" name=\"token\" required [readonly]=\"true\">\n                </span>\n              </div>            \n -->            \n              <div class=\"label-holder\">\n                <label><localize key=\"forgotpassword-complete.newPassword\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                  <ng2-password-strength-bar\n                    [passwordToCheck]=\"newPassword\">\n                  </ng2-password-strength-bar>                              \n                </span>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"account.certainPassword\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n                </span>\n                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                  <localize key=\"account.certainPassword.validation\"></localize>\n                </div>                                                       \n              </div>                           \n            </div>\n            <div *ngIf=\"passwordIsReset\" class=\"forgotpassword-complete-password-is-reset\">\n              <localize key=\"forgotpassword-complete.passwordIsReset\"></localize>\n            </div>\n          </div>\n            \n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div *ngIf=\"!passwordIsReset\" class=\"button-holder\">\n                <input type=\"button\" [value]=\"'forgotpassword-complete.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                <input type=\"submit\" [value]=\"'forgotpassword-complete.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n              \n              <div *ngIf=\"passwordIsReset\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword-complete.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","export interface MessageContainer {\n\tsetMessage(message: string);\n}\n\nexport class LocaleValue {\n\tlocale: string;\n\tvalue: string;\n\n\tconstructor(locale: string, value: string) {\n\t\tthis.locale = locale;\n\t\tthis.value = value;\n\t}\n}\n\nexport class Organization {\n\tcode: string;\n\tlabel: any;\n\tcontactInfo: any;\n}\n\nexport class ExternalSystem {\n\toid?: string;\n\tid: string;\n\ttype: string;\n\torganization: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tusername?: string;\n\tpassword?: string;\n\turl?: string;\n\tversion?: string;\n}\n\nexport class PageResult<T> {\n\tcount: number;\n\tpageNumber: number;\n\tpageSize: number;\n\tresultSet: T[];\n}\n\nexport class LocalizedValue {\n\tlocalizedValue: string;\n\tlocaleValues: LocaleValue[];\n\n\tconstructor(localizedValue: string, localeValues: LocaleValue[]) {\n\t\tthis.localizedValue = localizedValue;\n\t\tthis.localeValues = localeValues;\n\t}\n}\n\nexport class RoleBuilder {\n\tstatic buildFromRoleName(roleName: string): RegistryRole {\n\t\tif (roleName === \"cgr.SRA\") {\n\t\t\treturn new RegistryRole(RegistryRoleType.SRA, \"\", \"\", \"cgr.SRA\");\n\t\t}\n\n\t\tlet roleSplit = roleName.split(\".\");\n\n\t\tlet orgCode: string = roleSplit[2];\n\n\t\tif (roleSplit.length === 4) {\n\t\t\treturn new RegistryRole(RegistryRoleType.RA, orgCode, \"\", roleName);\n\t\t}\n\t\telse if (roleSplit.length === 5) {\n\t\t\tlet roleSuffix: string = roleSplit[4];\n\n\t\t\tlet gotCode: string = roleSplit[3];\n\n\t\t\tif (roleSuffix === \"RM\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.RM, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t\telse if (roleSuffix === \"RC\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.RC, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t\telse if (roleSuffix === \"AC\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.AC, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport class RegistryRole {\n\ttype: RegistryRoleType;\n\torgCode: string;\n\tgeoObjectTypeCode: string;\n\troleName: string;\n\tdisplayLabel: string;\n\n\tconstructor(type: RegistryRoleType, orgCode: string, geoObjectTypeCode: string, roleName: string) {\n\t\tthis.type = type;\n\t\tthis.orgCode = orgCode;\n\t\tthis.geoObjectTypeCode = geoObjectTypeCode;\n\t\tthis.roleName = roleName;\n\t}\n}\n\nexport enum RegistryRoleType {\n\tSRA,\n\tRA,\n\tRM,\n\tRC,\n\tAC\n}\n","export class ErrorHandler {\n    static getMessageFromError(err: any): string {\n    \n      var unspecified = \"An unspecified error has occurred. Please contact your technical support team.\";\n    \n      if (err == null)\n      {\n        return unspecified;\n      }\n      else\n      {\n        console.log(\"An error has occurred: \", err);\n      }\n    \n      if (err.error != null)\n      {\n        var msg = err.error.localizedMessage || err.error.message;\n        \n        if (msg == null)\n        {\n          return unspecified;\n        }\n        else if (msg.includes(\"##tferrormsg##\"))\n        {\n          var split = msg.split(\"##tferrormsg##\");\n          return split[2];\n        }\n        else\n        {\n          return msg;\n        }\n      }\n     \n      return unspecified;\n    }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from 'angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\nimport { ErrorModalComponent } from './component/modals/error-modal.component';\nimport { SuccessModalComponent } from './component/modals/success-modal.component';\nimport { ConfirmModalComponent } from './component/modals/confirm-modal.component';\nimport { ErrorMessageComponent } from './component/message/error-message.component';\nimport { MessageComponent } from './component/message/message.component';\nimport { ValidationComponent } from './component/form-fields/base/validation.component';\nimport { BooleanFieldComponent } from './component/form-fields/boolean-field/boolean-field.component';\nimport { LoadingBarComponent } from './component/loading-bar/loading-bar.component';\nimport { PasswordStrengthBarComponent } from './component/password-strength-bar/password-strength-bar.component';\n\nimport { AdminGuard, MaintainerGuard, ContributerGuard, AuthGuard } from './service/guard.service';\nimport { PendingChangesGuard } from './service/pending-changes-guard';\n\nimport { AuthService } from './service/auth.service';\nimport { ProfileService } from './service/profile.service';\nimport { OrganizationService } from './service/organization.service';\nimport { ExternalSystemService } from './service/external-system.service';\nimport { LocalizationService } from './service/localization.service';\nimport { ProgressService } from './service/progress.service';\nimport { EventService } from './service/event.service';\nimport { ModalStepIndicatorService } from './service/modal-step-indicator.service';\nimport { SessionService } from './service/session.service';\n\nimport { LocalizePipe } from './pipe/localize.pipe';\nimport { PhonePipe } from './pipe/phone.pipe';\n\nimport { OnlyNumber } from './directive/number-only.directive';\nimport { MustMatchDirective } from './directive/must-match.directive';\n\nimport { CgrHeaderComponent } from './component/header/header.component';\nimport { ProgressBarComponent } from './component/progress-bar/progress-bar.component';\nimport { LocalizeComponent } from './component/localize/localize.component';\nimport { ModalStepIndicatorComponent } from './component/modals/modal-step-indicator.component';\nimport { ProfileComponent } from './component/profile/profile.component';\n\nimport '../rxjs-extensions';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\tModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule\n\t],\n\tdeclarations: [\n\t\tLocalizeComponent,\n\t\tBooleanFieldComponent,\n\t\tLoadingBarComponent,\n\t\tErrorMessageComponent,\n\t\tMessageComponent,\n\t\tConfirmModalComponent,\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tOnlyNumber,\n\t\tMustMatchDirective,\n\t\tValidationComponent,\n\t\tProgressBarComponent,\n\t\tModalStepIndicatorComponent,\n\t\tCgrHeaderComponent,\n\t\tProfileComponent,\n\t\tLocalizePipe,\n\t\tPhonePipe\n\t],\n\texports: [\n\t\tLocalizeComponent,\n\t\tBooleanFieldComponent,\n\t\tLoadingBarComponent,\n\t\tErrorMessageComponent,\n\t\tMessageComponent,\n\t\tConfirmModalComponent,\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tOnlyNumber,\n\t\tMustMatchDirective,\n\t\tValidationComponent,\n\t\tProgressBarComponent,\n\t\tModalStepIndicatorComponent,\n\t\tCgrHeaderComponent,\n\t\tProfileComponent,\n\t\tLocalizePipe,\n\t\tPhonePipe,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule\n\t],\n\tentryComponents: [\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tConfirmModalComponent,\n\t\tModalStepIndicatorComponent,\n\t\tErrorMessageComponent,\n\t\tLoadingBarComponent,\n\t\tProfileComponent\n\t]\n})\nexport class SharedModule {\n\tstatic forRoot(): ModuleWithProviders<SharedModule> {\n\t\treturn {\n\t\t\tngModule: SharedModule,\n\t\t\tproviders: [\n\t\t\t\tCookieService,\n\t\t\t\tAuthService,\n\t\t\t\tSessionService,\n\t\t\t\tProfileService,\n\t\t\t\tOrganizationService,\n\t\t\t\tExternalSystemService,\n\t\t\t\tLocalizationService,\n\t\t\t\tModalStepIndicatorService,\n\t\t\t\tEventService,\n\t\t\t\tProgressService,\n\t\t\t\tAdminGuard,\n\t\t\t\tMaintainerGuard,\n\t\t\t\tContributerGuard,\n\t\t\t\tAuthGuard,\n\t\t\t\tPendingChangesGuard\n\t\t\t]\n\t\t};\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({\n  selector: 'login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: []\n})\nexport class LoginHeaderComponent {\n  context:string;\n\n  constructor() {\n    this.context = acp;\n  }\n}\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default navbar-fixed-top\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\">\n                <img [src]=\"context + '/logo/view?id=logo'\" />\n            </a>\n            <!-- <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"admin.link\"></localize></a> -->\n          </div>\n          \n          <!-- <ul class=\"nav navbar-nav navbar-right\">\n            <li dropdown>\n              <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle>\n                <localize key=\"admin.title\"></localize><span class=\"caret\"></span>\n              </a>            \n            </li>\n          </ul> -->\n        </div>\n      </nav>\n    </header>\n","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    active: boolean;\n    enabled: boolean;\n}","import {Component, Input, Output, EventEmitter} from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({    \n  selector: 'boolean-field',\n  templateUrl: './boolean-field.component.html',\n  styleUrls: ['./boolean-field.css']\n})\nexport class BooleanFieldComponent {\n\n  @Input() value:boolean = false;\n  @Output() public valueChange = new EventEmitter<boolean>();\n\n  @Input() localizeLabelKey:string = \"\"; // localization key used to localize in the component template\n  @Input() label:string = \"\"; // raw string input\n\n  @Input() disable:boolean = false;\n\n  /* You can pass a function in with (change)='function()' */\n  @Output() public change = new EventEmitter<any>();\n\n  constructor(){}\n  \n  toggle():void {\n    if(!this.disable){\n      this.value = !this.value;\n      \n      this.valueChange.emit(this.value);\n      this.change.emit(this.value);\n    }\n  }\n}","<div class=\"check-block\">\n  <div (click)=\"toggle()\" [ngClass]=\"{'chk-checked' : value, 'disabled': disable}\" ng-style=\"chkstyle\" class=\"chk-area\">\n    <span></span>\n  </div>\n  \n  <label *ngIf=\"label.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n  <label *ngIf=\"localizeLabelKey.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n</div>","\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[OnlyNumber]'\n})\nexport class OnlyNumber {\n\n  constructor(private el: ElementRef) { }\n\n  @Input() OnlyNumber: boolean;\n \n  @HostListener('keydown', ['$event']) onKeyDown(event:any) {\n    let e = <KeyboardEvent> event;\n    if (this.OnlyNumber) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (e.keyCode == 65 && e.ctrlKey === true) ||\n        // Allow: Ctrl+C\n        (e.keyCode == 67 && e.ctrlKey === true) ||\n        // Allow: Ctrl+X\n        (e.keyCode == 88 && e.ctrlKey === true) ||\n        // Allow: home, end, left, right\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n          // let it happen, don't do anything\n          return;\n        }\n        // Ensure that it is a number and stop the keypress\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n            e.preventDefault();\n        }\n      }\n  }\n}\n\n\n","import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n\treturn (formGroup: FormGroup) => {\n\t\tconst control = formGroup.controls[controlName];\n\t\tconst matchingControl = formGroup.controls[matchingControlName];\n\n\t\t// return null if controls haven't initialised yet\n\t\tif (!control || !matchingControl) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// return null if another validator has already found an error on the matchingControl\n\t\tif (matchingControl.errors && !matchingControl.errors.mustMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// set error on matchingControl if validation fails\n\t\tif (control.value !== matchingControl.value) {\n\t\t\tmatchingControl.setErrors({ mustMatch: true });\n\t\t} else {\n\t\t\tmatchingControl.setErrors(null);\n\t\t}\n\t}\n}\n\n@Directive({\n\tselector: '[mustMatch]',\n\tproviders: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\n})\nexport class MustMatchDirective implements Validator {\n\t@Input('mustMatch') mustMatch: string[] = [];\n\n\tvalidate(formGroup: FormGroup): ValidationErrors {\n\t\treturn MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\n\t}\n}","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'validation',\n  template: `\n    <div class=\"validation\">\n      <div *ngFor=\"let message of messages\">{{message}}</div>\n    </div>\n  `,\n  styles: [`\n    .validation {\n      color: #999;\n      margin: 12px;\n    }`\n  ]\n})\nexport class ValidationComponent {\n  @Input() messages: Array<string>;\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatNumber, ParsedNumber } from 'libphonenumber-js';\n\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(value: ParsedNumber, args?: string): any {\n    if (!value) {\n      return value;\n    }\n\n    return formatNumber({ country: 'US', phone: value.toString() }, 'International');\n  }\n\n}\n","import { Role } from \"../../admin/model/account\";\n\n///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nexport class Profile {\n  oid: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  changePassword: boolean;\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { CgrAppModule } from './app/cgr-app.module';\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(CgrAppModule)\n  .then(success => console.log('Bootstrap success'))\n  .catch(error => console.log(error));\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TreeModule } from 'angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { CgrAppComponent } from './cgr-app.component';\nimport { CgrAppRoutingModule, routedComponents } from './cgr-app-routing.module';\n\nimport { LoginComponent } from '@core/component/login/login.component';\nimport { LoginHeaderComponent } from '@core/component/login/login-header.component';\nimport { HubComponent } from '@core/component/hub/hub.component';\nimport { ForgotPasswordComponent } from '@core/component/forgotpassword/forgotpassword.component';\nimport { ForgotPasswordCompleteComponent } from '@core/component/forgotpassword-complete/forgotpassword-complete.component';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpErrorInterceptor } from '@core/service/http-error.interceptor';\n\nimport { ForgotPasswordService } from '@core/service/forgotpassword.service';\nimport { HubService } from '@core/service/hub.service';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport './rxjs-extensions';\n\n@NgModule( {\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        CgrAppRoutingModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n//        ModalModule.forRoot(),\n        TreeModule.forRoot(),\n        ContextMenuModule.forRoot(),\n        BsDropdownModule.forRoot(),\n        ButtonsModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        ProgressbarModule.forRoot(),\n        CollapseModule.forRoot(),\n\t\tTabsModule.forRoot(),\n        NgxPaginationModule,\n        BrowserAnimationsModule,\n        SharedModule.forRoot(),\n    ],\n    declarations: [\n        CgrAppComponent,\n        LoginComponent,\n        LoginHeaderComponent,\n        HubComponent,\n        ForgotPasswordComponent,\n        ForgotPasswordCompleteComponent,\n\n        // Routing components\n        routedComponents\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpErrorInterceptor,\n            multi: true\n        },\n        ForgotPasswordService,\n        HubService,\n    ],\n    exports: [\n        CgrAppComponent,\n    ],\n    bootstrap: [CgrAppComponent],\n    entryComponents: [\n    ]\n} )\nexport class CgrAppModule { }\n","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n  \n  selector: 'localize',\n  templateUrl: './localize.component.html',\n  styleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n  @Input() key: string;\n  text: string;\n    \n  constructor(private service: LocalizationService) { }\n\n  ngOnInit(): void {\n    this.text = this.service.decode(this.key);\n  }\n}\n","{{text}}","import { Component } from '@angular/core';\n\n@Component({\n  \n  selector: 'cgr-app',\n  templateUrl: './cgr-app.component.html',\n  styleUrls: []\n})\nexport class CgrAppComponent {\n  constructor() {}\n}\n","<div id=\"innerFrameHtml\">        \n\n  <!-- MAIN CONTENT AND INJECTED VIEWS -->\n  <div id=\"main\">\n    <router-outlet></router-outlet>\n  </div>\n  \n</div>","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './core/component/login/login.component'\nimport { HubComponent } from './core/component/hub/hub.component';\nimport { ForgotPasswordComponent } from './core/component/forgotpassword/forgotpassword.component'\nimport { ForgotPasswordCompleteComponent } from './core/component/forgotpassword-complete/forgotpassword-complete.component'\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from './shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/menu',\n        pathMatch: 'full'\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n        data: { title: 'login.title' }\n    },\n    {\n        path: 'menu',\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: 'login.header' }\n    },\n    {\n        path: 'menu/:value',\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: 'login.header' }\n    },\n    {\n        path: 'forgotpassword',\n        component: ForgotPasswordComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'forgotpassword-complete/:token',\n        component: ForgotPasswordCompleteComponent\n    },\n    {\n        path: 'admin',\n        loadChildren: \"./admin/admin.module#AdminModule\"\n    },\n    {\n        path: 'registry',\n        loadChildren: \"./registry/registry.module#RegistryModule\"\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forRoot( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n        AdminGuard,\n        MaintainerGuard,\n        ContributerGuard\n    ]\n} )\nexport class CgrAppRoutingModule { }\n\nexport const routedComponents: any = [LoginComponent, HubComponent, ForgotPasswordComponent, ForgotPasswordCompleteComponent];\n","import { Injectable } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpResponse,\n    HttpResponseBase,    \n    HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ndeclare var acp: string;\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n    intercept( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\n\n        return next.handle( request ).pipe(tap(( event: HttpEvent<any> ) => {\n            if ( event instanceof HttpResponseBase ) {\n                const response = event as HttpResponseBase;\n                if ( response.status === 302 ) {\n                    window.location.href = acp + '/cgr/manage#/login';\n                    return;\n                }\n            }\n        }, ( err: any ) => {\n            if ( err instanceof HttpErrorResponse ) {\n                if ( err.status === 401 || err.status === 403 ) {\n                    // redirect to the login route\n                    // or show a modal\n                    window.location.href = acp + '/cgr/manage#/login';\n                }\n            }\n        } ));\n    }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'loading-bar',\n  templateUrl: './loading-bar.component.html',\n  styleUrls: ['./loading-bar.css']\n})\nexport class LoadingBarComponent implements OnInit, IEventListener {\n  showIndicator: boolean = false;\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.showIndicator = true;    \n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","<div *ngIf=\"showIndicator\" class=\"standby-overlay\">\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'message',\n  templateUrl: './message.component.html',\n  styles: [\n    '.error-container { text-align: center; border-width: 1px; border-color: #8c0000; border-style: solid; color: #8c0000; font-size: 17px; background: white;}',\n    '.message-container { text-align: center; border-width: 1px; border-color: #106828; border-style: solid; margin-left: 10%; margin-right: 10%; color: #106828; }'\n  ]\n})\nexport class MessageComponent implements OnInit, IEventListener {\n\t\n  error: any = null;\n  \n  message: string = \"\";\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.error = null;\n  }\n  \n  complete(): void {\n  }  \n  \n  onError(error: any): void {\n    this.error = error;\n  }\n  \n  onMessage(msg: string): void {\n    this.message = msg;\n  }\n}\n","\n<div>\n  <div *ngIf=\"message\" class=\"message-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.messagesLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"message\">{{message}}</p>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"error\" class=\"error-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.errorsLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"error-message\" *ngIf=\"error.localizedMessage\">{{error.localizedMessage}}</p>\n        <p class=\"error-message\" *ngIf=\"!error.localizedMessage\"><localize key='error.generic'></localize></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from '@shared/model/user';\nimport { RoleBuilder, RegistryRole, RegistryRoleType } from '@shared/model/core';\n\n@Injectable()\nexport class AuthService {\n\n\tprivate user: User = {\n\t\tloggedIn: false,\n\t\tuserName: '',\n\t\troles: [],\n\t\troleDisplayLabels: [],\n\t\tversion: \"0\",\n\t\tinstalledLocales: []\n\t};\n\n\tconstructor(private service: CookieService) {\n\t\tlet cookie = service.get('user');\n\n\t\tif (this.service.check(\"user\") && cookie != null && cookie.length > 0) {\n\t\t\tlet cookieData: string = this.service.get(\"user\")\n\t\t\tlet cookieDataJSON: any = JSON.parse(cookieData);\n\n\t\t\tthis.buildFromCookieJson(cookieDataJSON);\n\t\t}\n\t}\n\n\tbuildFromCookieJson(cookieDataJSON: any) {\n\t\tthis.user.userName = cookieDataJSON.userName;\n\t\tthis.buildRolesFromCookie(cookieDataJSON);\n\t\tthis.user.loggedIn = cookieDataJSON.loggedIn;\n\t\tthis.user.roleDisplayLabels = cookieDataJSON.roleDisplayLabels;\n\t\tthis.user.version = cookieDataJSON.version;\n\t\tthis.user.installedLocales = cookieDataJSON.installedLocales;\n\t}\n\n\tbuildRolesFromCookie(cookieDataJSON: any) {\n\t\tthis.user.roles = [];\n\t\tlet roles: string[] = cookieDataJSON.roles;\n\n\t\tfor (let i = 0; i < roles.length; ++i) {\n\t\t\tlet role: RegistryRole = RoleBuilder.buildFromRoleName(roles[i]);\n\n\t\t\tif (role != null) {\n\t\t\t\tthis.user.roles.push(role);\n\t\t\t}\n\t\t}\n\t}\n\n\tisLoggedIn(): boolean {\n\t\treturn this.user.loggedIn;\n\t}\n\n\tsetUser(cookieDataJSON: any): void {\n\t\tthis.buildFromCookieJson(cookieDataJSON);\n\t}\n\n\tremoveUser(): void {\n\t\tthis.user = {\n\t\t\tloggedIn: false,\n\t\t\tuserName: '',\n\t\t\troles: [],\n\t\t\troleDisplayLabels: [],\n\t\t\tversion: \"0\",\n\t\t\tinstalledLocales: []\n\t\t};\n\t}\n\n\t// Legacy Accessors:\n\tisAdmin(): boolean {\n\t\treturn this.isSRA() || this.isRA();\n\t}\n\n\tisMaintainer(): boolean {\n\t\treturn this.isRM();\n\t}\n\n\tisContributer(): boolean {\n\t\treturn this.isRC();\n\t}\n\n\t// Used to exactly identify a role. I.e. if we say we need RC, SRA doesn't count.\n\thasExactRole(roleType: RegistryRoleType) {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === roleType) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisSRA(): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.SRA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisRA(): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryAdministrator') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryAdministrator\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisRM(): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RM) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryMaintainer') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryMaintainer\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisOrganizationRA(orgCode: string): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.orgCode === orgCode && role.type === RegistryRoleType.RA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false; // this.isSRA();\n\t}\n\n\tisGeoObjectTypeRM(orgCode: string, gotCode: string): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RM && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.isOrganizationRA(orgCode);\n\t}\n\n\tisGeoObjectTypeRC(orgCode: string, gotCode: string): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RC && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.isGeoObjectTypeRM(orgCode, gotCode);\n\t}\n\n\tisRC(): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RC) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryContributor') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryContributor\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// Returns all organization codes that the current user participates in.\n\t// If the user is an SRA then this method will return an empty string array.\n\tgetMyOrganizations(): string[] {\n\t\tlet orgCodes: string[] = [];\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RC || role.type === RegistryRoleType.RM || role.type === RegistryRoleType.RA) {\n\t\t\t\torgCodes.push(role.orgCode);\n\t\t\t}\n\t\t}\n\n\t\treturn orgCodes;\n\t}\n\n\t__getRoleFromRoleName(roleName: string): string {\n\t\tlet nameArr = roleName.split(\".\");\n\n\t\treturn nameArr[nameArr.length - 1];\n\t}\n\n\tgetUsername(): string {\n\t\treturn this.user.userName;\n\t}\n\n\tgetRoles(): any {\n\t\treturn this.user.roles;\n\t}\n\n\tgetRoleDisplayLabelsArray(): any {\n\t\treturn this.user.roleDisplayLabels;\n\t}\n\n\tgetRoleDisplayLabels(): string {\n\t\tlet str = \"\";\n\t\tfor (let i = 0; i < this.user.roleDisplayLabels.length; ++i) {\n\t\t\tlet displayLabel = this.user.roleDisplayLabels[i];\n\n\t\t\tif (displayLabel === \"Administrator\") {\n\t\t\t\tcontinue;\n\t\t\t\t// It's OK to hardcode to a display label here because the end user can't change it anyway.\n\t\t\t\t// Is it ideal? No. But sometimes it's better to get software out quicker than to spend forever\n\t\t\t\t// on something that nobody will ever see.\n\t\t\t}\n\n\t\t\tstr = str + displayLabel;\n\n\t\t\tif (i < this.user.roleDisplayLabels.length - 1) {\n\t\t\t\tstr = str + \",\";\n\t\t\t}\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tgetVersion(): string {\n\t\treturn this.user.version;\n\t}\n\n\tgetLocales(): any[] {\n\t\treturn this.user.installedLocales;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ndeclare var acp;\n\nexport interface IEventListener {\n    start(): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class EventService {\n    private listeners: IEventListener[] = [];\n\n    public registerListener( listener: IEventListener ): void {\n        this.listeners.push( listener );\n    }\n\n    public deregisterListener( listener: IEventListener ): boolean {\n        let indexOfItem = this.listeners.indexOf( listener );\n\n        if ( indexOfItem === -1 ) {\n            return false;\n        }\n\n        this.listeners.splice( indexOfItem, 1 );\n\n        return true;\n    }\n\n    public start(): void {\n        for ( const listener of this.listeners ) {\n            listener.start();\n        }\n    }\n\n    public complete(): void {\n        for ( const listener of this.listeners ) {\n            listener.complete();\n        }\n    }\n}\n"],"sourceRoot":""}