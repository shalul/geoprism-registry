{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/shared/component/index.ts","webpack:///./src/app/shared/service/event.service.ts","webpack:///./src/app/shared/service/localization.service.ts","webpack:///./src/app/core/service/forgotpassword.service.ts","webpack:///./src/app/shared/component/header/header.component.ts","webpack:///./src/app/shared/component/header/header.component.html","webpack:///./src/app/shared/service/guard.service.ts","webpack:///./src/app/shared/component/profile/profile.component.ts","webpack:///./src/app/shared/component/profile/profile.component.html","webpack:///./src/app/shared/service/date.service.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.ts","webpack:///./src/app/shared/component/modals/modal-step-indicator.component.html","webpack:///./src/app/shared/service/external-system.service.ts","webpack:///./src/app/shared/service/modal-step-indicator.service.ts","webpack:///./src/app/shared/service/organization.service.ts","webpack:///./src/app/shared/service/pending-changes-guard.ts","webpack:///./src/app/shared/service/profile.service.ts","webpack:///./src/app/shared/service/progress.service.ts","webpack:///./src/app/shared/service/session.service.ts","webpack:///./src/app/shared/component/message/error-message.component.ts","webpack:///./src/app/shared/component/message/error-message.component.html","webpack:///./src/app/shared/service/index.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.ts","webpack:///./src/app/shared/component/modals/confirm-modal.component.html","webpack:///./src/app/shared/component/modals/error-modal.component.ts","webpack:///./src/app/shared/component/modals/error-modal.component.html","webpack:///./src/app/shared/component/modals/success-modal.component.ts","webpack:///./src/app/shared/component/modals/success-modal.component.html","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.ts","webpack:///./src/app/shared/component/progress-bar/progress-bar.component.html","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/core/component/login/login.component.ts","webpack:///./src/app/core/component/login/login.component.html","webpack:///./src/app/core/component/hub/hub.component.ts","webpack:///./src/app/core/component/hub/hub.component.html","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.html","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.ts","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.html","webpack:///./src/app/registry/model/registry.ts","webpack:///./src/app/shared/model/core.ts","webpack:///./src/app/shared/component/error-handler/error-handler.ts","webpack:///./src/app/shared/directive/must-match.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/core/component/login/login-header.component.ts","webpack:///./src/app/core/component/login/login-header.component.html","webpack:///./src/app/shared/component/localize/convert-key-label.component.ts","webpack:///./src/app/shared/component/localize/convert-key-label.component.html","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.ts","webpack:///./src/app/shared/component/form-fields/date-field/date-field.component.html","webpack:///./src/app/shared/model/modal.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.ts","webpack:///./src/app/shared/component/form-fields/boolean-field/boolean-field.component.html","webpack:///./src/app/registry/utility/Utils.ts","webpack:///./src/app/shared/directive/number-only.directive.ts","webpack:///./src/app/shared/model/profile.ts","webpack:///./src/app/shared/pipe/phone.pipe.ts","webpack:///./src/main.ts","webpack:///./src/app/cgr-app.module.ts","webpack:///./src/app/cgr-app.component.ts","webpack:///./src/app/cgr-app.component.html","webpack:///./src/app/cgr-app-routing.module.ts","webpack:///./src/app/core/service/http-error.interceptor.ts","webpack:///./src/app/shared/component/localize/localize.component.ts","webpack:///./src/app/shared/component/localize/localize.component.html","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.html","webpack:///./src/app/shared/component/message/message.component.ts","webpack:///./src/app/shared/component/message/message.component.html","webpack:///./src/app/shared/service/auth.service.ts","webpack:///./src/app/core/service/hub.service.ts","webpack:///./src/app/shared/pipe/localize.pipe.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","components","ErrorHandler","CgrHeaderComponent","LoadingBarComponent","LocalizeComponent","ErrorMessageComponent","MessageComponent","ConfirmModalComponent","ErrorModalComponent","ModalStepIndicatorComponent","SuccessModalComponent","PasswordStrengthBarComponent","ProfileComponent","ProgressBarComponent","listeners","registerListener","listener","this","deregisterListener","indexOfItem","indexOf","start","complete","EventService","Injectable","locales","parser","Globalize","numberParser","formatter","numberFormatter","registry","locale","getLocales","getLocale","setLocales","addLocale","localizedValue","localeValues","forEach","parseNumber","formatNumber","number","Number","localize","bundle","com","runwaysdk","Localize","decode","index","lastIndexOf","temp","LocalizationService","http","eventService","submit","username","headers","HttpHeaders","post","acp","JSON","stringify","pipe","finalize","toPromise","newPassword","token","ForgotPasswordService","modalService","profileService","service","localizationService","loggedIn","context","isAdmin","isMaintainer","isContributor","isContributer","filter","shouldShowMenuItem","item","hasExactRole","RegistryRoleType","SRA","RA","RM","RC","logout","location","href","getUsername","setLocale","then","reload","account","profile","bsModalRef","show","backdrop","class","content","Component","selector","templateUrl","styleUrls","Input","router","canActivate","route","state","navigate","AdminGuard","MaintainerGuard","ContributerGuard","isLoggedIn","AuthGuard","authService","_profile","oid","password","firstName","lastName","email","changePassword","roles","getRoles","getRolesForUser","onSubmit","hide","onChangePassword","getRolesArray","onRoleIdsUpdate","log","cancel","unlock","styles","overlapMessage","gapMessage","getPresentDate","Date","formatDateForDisplay","date","PRESENT","getDateString","split","getDateFromDateString","year","getFullYear","month","getMonth","dt","getDate","checkRanges","vAttributes","hasConflict","attr","conflictMessage","h1","startDate","endDate","s1","e1","dateEndBeforeStart","h2","s2","e2","dateRangeOverlaps","getTime","sort","current","next","hasGap","votArr","a","b","DateService","modalStepIndicatorService","stepSubscription","modalStepChange","subscribe","stepConfig","ngOnInit","ngOnDestroy","unsubscribe","getExternalSystems","pageNumber","pageSize","params","HttpParams","set","toString","getExternalSystem","applyExternalSystem","system","getSystemCapabilities","removeExternalSystem","ExternalSystemService","modalStepChangedSource","Subject","asObservable","getStepConfig","setStepConfig","config","getStep","step","setStep","ModalStepIndicatorService","getOrganizations","updateOrganization","json","newOrganization","removeOrganization","code","OrganizationService","canDeactivate","component","confirmRet","confirm","afterDeactivate","PendingChangesGuard","userOID","ProfileService","progress","ProgressService","login","user","setUser","response","SessionService","localizeService","services","AuthService","submitText","cancelText","ModalTypes","warning","onConfirm","onCancel","showIndicator","prog","total","description","map","webpackAsyncContext","req","ids","id","keys","hService","oauthServers","viewOauthServers","oauthGetPublic","catch","sub","decodedError","replaceAll","onClickDhis2","url","applications","open","application","showErrorAsDialog","LoginComponent","tasks","buckets","HubComponent","emailIsSent","getMessageFromError","ForgotPasswordComponent","passwordStrengthBarComponent","passwordIsReset","ForgotPasswordCompleteComponent","TreeEntity","label","children","addChild","term","Term","GeoObject","attributes","GeoObjectType","Task","geoObjectType","getVotAtDate","attrCode","lService","retVot","time","isChangeOverTime","values","vot","parse","Array","isArray","GeoObjectOverTime","ValueOverTime","isDefault","required","unique","Attribute","isChange","rootTerm","termOptions","setRootTerm","AttributeTerm","precision","scale","AttributeDecimal","GeoObjectTypeModalStates","TreeNode","ChildTreeNode","ParentTreeNode","ManageGeoObjectTypeModalState","PaginationPage","AbstractScheduledJob","ScheduledJob","ScheduledJobOverview","ImportError","ServerException","ServerExceptionAttribute","ImportErrorObject","StepConfig","Step","MasterList","MasterListVersion","HierarchyOverTime","ImportStrategy","MasterListByOrg","SynchronizationConfig","OrgSyncInfo","ExportScheduledJob","ContextLayer","ContextLayerGroup","LocaleValue","Organization","ExternalSystem","OAuthServer","PageResult","LocalizedValue","buildFromRoleName","roleName","RegistryRole","roleSplit","orgCode","roleSuffix","gotCode","AC","RoleBuilder","geoObjectTypeCode","unspecified","msg","localizedMessage","includes","HttpErrorResponse","status","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","setErrors","validate","MustMatchDirective","provide","NG_VALIDATORS","useExisting","multi","Directive","providers","forRoot","ngModule","SharedModule","CookieService","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","FileUploadModule","ModalModule","TreeModule","ContextMenuModule","BsDropdownModule","ButtonsModule","TypeaheadModule","ProgressbarModule","CollapseModule","NgxPaginationModule","BsDatepickerModule","ConvertKeyLabel","BooleanFieldComponent","DateFieldComponent","OnlyNumber","LocalizePipe","PhonePipe","NgModule","imports","declarations","entryComponents","hubService","LoginHeaderComponent","text","bsDatepickerConfig","changeDetectorRef","dateService","allowFutureDates","allowInfinity","inputName","idGenerator","classNames","localizeLabelKey","disable","placement","valueChange","EventEmitter","change","today","returnFocusToInput","valueIsPresent","valid","validChange","dateInputFormat","setValue","isNaN","parseInt","_value","getUTCFullYear","getUTCMonth","getUTCDate","getValue","S4","Math","random","substring","isEqual","date1","date2","toggleInfinity","emit","toggle","newValue","formattedDate","BsDatepickerDirective","datepicker","ViewChild","static","Output","removeStatuses","arr","newArray","formatDateString","dateObj","day","a_start","a_end","b_start","b_end","end","el","onKeyDown","keyCode","ctrlKey","shiftKey","preventDefault","HostListener","Profile","transform","args","country","phone","Pipe","process","env","ENV","enableProdMode","platformBrowser","bootstrapModule","success","CgrAppModule","CgrAppComponent","HTTP_INTERCEPTORS","useClass","HttpErrorInterceptor","HubService","BrowserModule","HttpClientModule","CgrAppRoutingModule","TabsModule","BrowserAnimationsModule","routedComponents","bootstrap","routes","path","redirectTo","pathMatch","title","loadChildren","LocationStrategy","HashLocationStrategy","intercept","handle","tap","HttpResponseBase","replace","onError","onMessage","userName","roleDisplayLabels","version","installedLocales","cookie","check","cookieData","cookieDataJSON","buildFromCookieJson","buildRolesFromCookie","role","removeUser","isSRA","isRA","isRM","isRC","isContributerOnly","roleType","isOrganizationRA","isGeoObjectTypeRM","isGeoObjectTypeOrSuperRM","got","organizationCode","superTypeCode","isGeoObjectTypeRC","isRCOnly","getMyOrganizations","orgCodes","__getRoleFromRoleName","nameArr","getRoleDisplayLabelsArray","getRoleDisplayLabels","str","displayLabel","getVersion","colors","measureStrength","pass","score","letters","variations","digits","test","lower","upper","nonWords","variationCount","trunc","getColor","idx","col","ngOnChanges","changes","currentValue","setBarColors","count","_n","passwordToCheck"],"mappings":"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KAAqD,0D,yBAR3D,4BACE,uBAEA,4BAEE,6BACE,iCAEA,iCAEF,iBACF,iBACF,kB,8BAN4B,+DAEA,+D,sBA+BtB,6BACE,6BACF,kB,mDA5BN,0BACE,4BACE,4BACE,4BACE,6BACF,iBACF,iBACA,4BACE,6BACE,kCAAuB,8GAAvB,iBAEA,0CAEF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,8BACF,iBACA,gCAGF,iBACF,iBACF,iB,qDAtB+B,2DAEA,mEAenB,4E,yBA0BF,yBACE,YACF,kB,uCADE,qE,qBAEF,oB,qBAGA,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,qBAEF,oB,yBAIA,yBACE,YACF,kB,uCADE,qE,yBAEF,yBACE,YACF,kB,uCADE,wE,yBAEF,yBACE,YACF,kB,uCADE,kF,yBA5BJ,yBACE,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAIA,6BAGA,6BAGA,6BAGF,kB,uBA7BO,+DAGA,+DAGA,+DAIA,8DAGA,8DAGA,8DAIA,kFAGA,kFAGA,mF,0GA7PrB,0BACE,yBAEA,+BAA+E,kIAC7E,+BACE,4BACE,yBACE,4BACF,iBACF,iBAEA,4BACE,4BACE,6BACE,6BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,8GAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,6GAAnB,iBACF,iBACF,iBACF,iBAEE,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,iHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBAEA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB,gHAAnB,iBACF,iBACF,iBACF,iBACA,6BACE,6BACE,6BACE,8BACF,iBACF,iBACA,6BACE,8BACE,gCAAmB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","file":"cgr-app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"cgr-app\": 0,\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([321,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { ErrorHandler } from './error-handler/error-handler';\nimport { CgrHeaderComponent } from './header/header.component';\nimport { LoadingBarComponent } from './loading-bar/loading-bar.component';\nimport { LocalizeComponent } from './localize/localize.component';\nimport { ErrorMessageComponent } from './message/error-message.component';\nimport { MessageComponent } from './message/message.component';\nimport { ConfirmModalComponent } from './modals/confirm-modal.component';\nimport { ErrorModalComponent } from './modals/error-modal.component';\nimport { ModalStepIndicatorComponent } from './modals/modal-step-indicator.component';\nimport { SuccessModalComponent } from './modals/success-modal.component';\nimport { PasswordStrengthBarComponent } from './password-strength-bar/password-strength-bar.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\n\nexport const components: any[] = [\n\tErrorHandler,\n\tCgrHeaderComponent,\n\tLoadingBarComponent,\n\tLocalizeComponent,\n\tErrorMessageComponent,\n\tMessageComponent,\n\tConfirmModalComponent,\n\tErrorModalComponent,\n\tModalStepIndicatorComponent,\n\tSuccessModalComponent,\n\tPasswordStrengthBarComponent,\n\tProfileComponent,\n\tProgressBarComponent\n];\n\nexport * from './error-handler/error-handler';\nexport * from './header/header.component';\nexport * from './loading-bar/loading-bar.component';\nexport * from './localize/localize.component';\nexport * from './message/error-message.component';\nexport * from './message/message.component';\nexport * from './modals/confirm-modal.component';\nexport * from './modals/error-modal.component';\nexport * from './modals/modal-step-indicator.component';\nexport * from './modals/success-modal.component';\nexport * from './password-strength-bar/password-strength-bar.component';\nexport * from './profile/profile.component';\nexport * from './progress-bar/progress-bar.component';\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ndeclare var acp;\n\nexport interface IEventListener {\n    start(): void;\n    complete(): void;\n}\n\n@Injectable()\nexport class EventService {\n    private listeners: IEventListener[] = [];\n\n    public registerListener( listener: IEventListener ): void {\n        this.listeners.push( listener );\n    }\n\n    public deregisterListener( listener: IEventListener ): boolean {\n        let indexOfItem = this.listeners.indexOf( listener );\n\n        if ( indexOfItem === -1 ) {\n            return false;\n        }\n\n        this.listeners.splice( indexOfItem, 1 );\n\n        return true;\n    }\n\n    public start(): void {\n        for ( const listener of this.listeners ) {\n            listener.start();\n        }\n    }\n\n    public complete(): void {\n        for ( const listener of this.listeners ) {\n            listener.complete();\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LocalizedValue } from '@shared/model/core';\n\ndeclare var Globalize: any;\ndeclare var com: any\ndeclare var registry: any\n\n@Injectable()\nexport class LocalizationService {\n\n\tlocales: string[] = ['defaultLocale'];\n\tlocale: string;\n\n\tprivate parser: any = Globalize.numberParser();\n\tprivate formatter: any = Globalize.numberFormatter();\n\n\tconstructor() {\n\t\tthis.locales = registry.locales;\n\t\tthis.locale = registry.locale;\n\t}\n\n\tgetLocales(): string[] {\n\t\treturn this.locales;\n\t}\n\n\tgetLocale(): string {\n\t\treturn this.locale;\n\t}\n\n\tsetLocales(locales: string[]): void {\n\t\t// The installed locales are now read from the global registry value on load\n\t\t//\t\tthis.locales = locales;\n\t}\n\n\taddLocale(locale: string): void {\n\n\t\tif (this.locales.indexOf(locale) === -1) {\n\t\t\tthis.locales.push(locale);\n\t\t}\n\t}\n\n\tcreate(): LocalizedValue {\n\t\tconst value = { localizedValue: '', localeValues: [] } as LocalizedValue;\n\n\t\tthis.locales.forEach(locale => {\n\t\t\tvalue.localeValues.push({ locale: locale, value: '' });\n\t\t});\n\n\t\treturn value;\n\t}\n\n\tpublic parseNumber(value: string): number {\n\t\tif (value != null && value.length > 0) {\n\t\t\t//convert data from view format to model format\n\t\t\tvar number = this.parser(value);\n\n\t\t\treturn number;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic formatNumber(value: any): string {\n\t\tif (value != null) {\n\t\t\tvar number = value;\n\n\t\t\tif (typeof number === 'string') {\n\t\t\t\tif (number.length > 0 && Number(number)) {\n\t\t\t\t\tnumber = Number(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//convert data from model format to view format\n\t\t\treturn this.formatter(number);\n\t\t}\n\n\t\treturn null;\n\t}\n\t\n\n\tpublic localize(bundle: string, key: string): string {\n\t\treturn com.runwaysdk.Localize.localize(bundle, key);\n\t}\n\n\tpublic get(key: string): string {\n\t\treturn com.runwaysdk.Localize.get(key);\n\t}\n\n\tpublic decode(key: string): string {\n\t\tlet index = key.lastIndexOf('.');\n\n\t\tif (index !== -1) {\n\n\t\t\tlet temp = [key.slice(0, index), key.slice(index + 1)]\n\n\t\t\treturn this.localize(temp[0], temp[1]);\n\t\t}\n\t\telse {\n\t\t\treturn this.get(key);\n\t\t}\n\t}\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ForgotPasswordService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tsubmit(username: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/initiate', JSON.stringify({ username: username }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcomplete(newPassword: string, token: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/complete', JSON.stringify({ newPassword: newPassword, token: token }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","import { Component, Input } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ProfileComponent } from '../profile/profile.component';\n\nimport { AuthService, ProfileService, LocalizationService } from '@shared/service';\n\nimport { RegistryRoleType } from '@shared/model/core';\n\ndeclare var acp: string;\ndeclare var registry: any\n\n@Component({\n\n\tselector: 'cgr-header',\n\ttemplateUrl: './header.component.html',\n\tstyleUrls: []\n})\nexport class CgrHeaderComponent {\n\tcontext: string;\n\tisAdmin: boolean;\n\tisMaintainer: boolean;\n\tisContributor: boolean;\n\tbsModalRef: BsModalRef;\n\n\tlocales: string[]\n\tlocale: string\n\n\t@Input() loggedIn: boolean = true;\n\n\tconstructor(\n\t\tprivate modalService: BsModalService,\n\t\tprivate profileService: ProfileService,\n\t\tprivate service: AuthService,\n\t\tlocalizationService: LocalizationService\n\t) {\n\t\tthis.context = acp;\n\t\tthis.isAdmin = service.isAdmin();\n\t\tthis.isMaintainer = this.isAdmin || service.isMaintainer();\n\t\tthis.isContributor = this.isAdmin || this.isMaintainer || service.isContributer();\n\n\t\tthis.locales = localizationService.getLocales().filter(locale => locale !== 'defaultLocale');\n\t\tthis.locale = localizationService.getLocale();\n\t\t\n\t\tif(this.locales.indexOf(this.locale) === -1) {\n\t\t\tthis.locale = '';\n\t\t}\n\t}\n\n\tshouldShowMenuItem(item: string): boolean {\n\t\tif (item === \"HIERARCHIES\") {\n\t\t\treturn true;\n\t\t}\n\t\telse if (item === \"LISTS\") {\n\t\t\t//return this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC) || this.service.hasExactRole(RegistryRoleType.AC);\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.service.hasExactRole(RegistryRoleType.SRA)) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (item === \"IMPORT\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n\t\t}\n\t\telse if (item === \"SCHEDULED-JOBS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n\t\t}\n\t\telse if (item === \"NAVIGATOR\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n\t\t}\n\t\telse if (item === \"CHANGE-REQUESTS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM) || this.service.hasExactRole(RegistryRoleType.RC);\n\t\t}\n\t\telse if (item === \"TASKS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.SRA) || this.service.hasExactRole(RegistryRoleType.RA) || this.service.hasExactRole(RegistryRoleType.RM);\n\t\t}\n\t\telse if (item === \"CONFIGS\") {\n\t\t\treturn this.service.hasExactRole(RegistryRoleType.RA);\n\t\t}\n\t\telse if (item === \"SETTINGS\") {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tlogout(): void {\n\n\t\twindow.location.href = acp + '/session/logout';\n\n\t\t//        this.sessionService.logout().then( response => {\n\t\t//            this.router.navigate( ['/login'] );\n\t\t//        } );\n\t}\n\n\tgetUsername() {\n\t\tlet name: string = this.service.getUsername();\n\n\t\treturn name;\n\t}\n\n\tsetLocale() {\n\t\tthis.profileService.setLocale(this.locale).then(() => {\n\t\t\t// Refresh the page\t\t\t\n\t\t\twindow.location.reload();\n\t\t});\n\t}\n\n\taccount(): void {\n\t\tthis.profileService.get().then(profile => {\n\t\t\tthis.bsModalRef = this.modalService.show(ProfileComponent, { backdrop: 'static', class: 'gray modal-lg' });\n\t\t\tthis.bsModalRef.content.profile = profile;\n\t\t});\n\t}\n\n}\n","<!-- HEADER AND NAVBAR -->\n<header>\n  <nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n        <a class=\"navbar-brand\" href=\"{{context}}/cgr/manage#/menu\"><localize key=\"cgr.standard.title\"></localize></a>\n      </div>\n       <ul *ngIf=\"loggedIn\" class=\"nav navbar-nav navbar-right\"> \n         <li>\n            \n           <a (click)=\"account()\" class=\"navbar-username\">\n           <!-- <div>Logged in as</div> -->\n             <div>{{getUsername()}}</div>\n           </a>                      \n         </li>\n         <li dropdown> \n             <!-- <localize key=\"hierarchy-management.menu\"></localize> -->\n           <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n             <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n           </a>     \n\n           \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <!-- GeoRegistry specific links -->\n                <li *ngIf=\"shouldShowMenuItem('HIERARCHIES')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/hierarchies\" routerLinkActive=\"active\"><localize key=\"hierarchies.menu\"></localize></a></li> \n                <li *ngIf=\"shouldShowMenuItem('LISTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/master-lists\" routerLinkActive=\"active\"><localize key=\"masterlist.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('IMPORT')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/data\" routerLinkActive=\"active\"><localize key=\"header.data.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('SCHEDULED-JOBS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/scheduled-jobs\" routerLinkActive=\"active\"><localize key=\"scheduledjobs.menu\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('NAVIGATOR')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/location-manager\"><localize key=navigator.menu></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('CHANGE-REQUESTS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/change-requests\" routerLinkActive=\"active\"><localize key=\"header.changerequest.option\"></localize> </a></li>\n                <li *ngIf=\"shouldShowMenuItem('TASKS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/tasks\" routerLinkActive=\"active\"><localize key=\"header.tasks\"></localize></a></li>\n                <!-- <li *ngIf=\"shouldShowMenuItem('CONFIGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/synchronization-configs\" routerLinkActive=\"active\"><localize key=\"synchronization.config.manager\"></localize></a></li> -->\n                \n                <hr>\n                <li *ngIf=\"shouldShowMenuItem('SETTINGS')\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/settings\" routerLinkActive=\"active\"><localize key=\"settings.menu\"></localize> </a></li>\n                \n                <div *ngIf=\"locales.length > 0\" style=\"padding: 0 20px;\">\n                  <hr>\n<!--                     <span><localize key=\"userDashboards.setLocale\"></localize></span> -->\n\n                    <label class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"default\" [value]=\"''\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span><localize key=\"localization.default.label\"></localize></span>\n                    </label>\n                    <label *ngFor=\"let l of locales\" class=\"radio\" style=\"font-weight: inherit;\">\n                      <input class=\"inline-radio-input\" type=\"radio\" name=\"{{l}}\" [value]=\"l\" (change)=\"setLocale()\" [(ngModel)]=\"locale\">\n                      <span>{{l}}</span>\n                    </label>\n                </div>\n                \n                <!-- <hr *ngIf=\"isAdmin\">\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/registry/localization-manager\" routerLinkActive=\"active\"><localize key=\"localization-manager.menu\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\">\n                    <a class=\"user-command-link\" routerLink=\"/admin/accounts\"><localize key=\"accounts.link\"></localize></a>\n                </li>\n                <li *ngIf=\"isAdmin\" role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li> -->\n  \n                <hr>\n                <li role=\"menuitem\"><a class=\"user-command-link\" (click)=\"logout()\"><localize key=\"userDashboards.logout\"></localize></a></li>\n            \n              </ul>\n         </li> \n         \n        \n       </ul>\n       \n       \n    </div>\n  </nav>\n</header>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { AuthService} from './auth.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class MaintainerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class ContributerGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin() || this.service.isMaintainer()  || this.service.isContributer()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/export' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isLoggedIn()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/login' ]);\n    \n    return false;\n  }\n}\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, Input} from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Profile } from '@shared/model/profile';\nimport { AuthService, ProfileService } from '@shared/service';\nimport { Role } from '../../../admin/model/account';\n\n\n@Component({  \n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class ProfileComponent {\n  public _profile:Profile = {\n    oid: '',\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    changePassword:false\n  };\n  \n  @Input('profile')\n  set profile(value: Profile) {\n    this._profile = value;\n    this.getRoles();\n  }\n  roles: Role[] = [];\n  \n  constructor(private service:ProfileService, public bsModalRef: BsModalRef, private authService: AuthService) {}\n  \n\n  getRoles(): void {\n    this.service.getRolesForUser(this._profile.oid).then(roles => {\n      this.roles = roles;\n    });\n  }\n  \n  onSubmit():void {\n    if(!this._profile.changePassword) {\n      delete this._profile.password;\n    }\n\t  \n    this.service.apply(this._profile).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }\n\n  onChangePassword(): void {\n    this._profile.changePassword = !this._profile.changePassword;\n  }\n  \n  // getRoles():string {\n  //   return this.authService.getRoleDisplayLabels();\n  // }\n\n  getRolesArray(): any {\n    return this.authService.getRoles();\n  }\n\n  onRoleIdsUpdate(event: any): void {\n    console.log(event)\n  }\n  \n  cancel():void {\n    this.service.unlock(this._profile.oid).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }  \n}\n","<div *ngIf=\"_profile\">\n  <message></message>\n\n  <form #form=\"ngForm\" class=\"modal-form\" style=\"background: none;border: none;\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n    <fieldset>\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"profile.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.firstname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.firstName\" name=\"firstname\" required>\n          </span>\n        </div>\n      </div>\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.lastname\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.lastName\" name=\"lastname\" required>\n          </span>\n        </div>\n      </div>\n      \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altFirstname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altFirstName\" name=\"altFirstname\">\n            </span>\n          </div>\n        </div>        \n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altLastname\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altLastName\" name=\"altLastname\">\n            </span>\n          </div>\n        </div>            \n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.phonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.phoneNumber\" name=\"phoneNumber\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.altPhonenumber\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.altPhoneNumber\" name=\"altPhoneNumber\">\n            </span>\n          </div>\n        </div>\n\n      \n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.email\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.email\" name=\"email\" required #aemail=\"ngModel\" email>\n          </span>\n          <div *ngIf=\"aemail.errors?.email\" style=\"float:none;\" class=\"inline-error-message\">\n            <localize key=\"account.email.validation\"></localize>\n          </div>\n        </div>\n      </div>\n\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.position\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.position\" name=\"position\">\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.department\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"text\" [(ngModel)]=\"_profile.department\" name=\"department\">\n            </span>\n          </div>\n        </div>\n            \n\n      <div class=\"heading text-center\">\n        <h1>\n          <localize key=\"account.info.heading\"></localize>\n        </h1>\n      </div>\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.username\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <span class=\"text\">\n            <input type=\"text\" [(ngModel)]=\"_profile.username\" name=\"username\" required>\n          </span>\n        </div>\n      </div>\n\n      <div *ngIf=\"_profile.externalSystemOid != null && _profile.externalSystemOid !== ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"account.profile.oauth\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n          <label>\n            <localize key=\"account.profile.isOauth\"></localize>\n          </label>\n        </div>\n      </div>\n      \n      <div *ngIf=\"_profile.externalSystemOid == null || _profile.externalSystemOid === ''\" class=\"row-holder\">\n        <div class=\"label-holder\">\n        </div>\n        <div class=\"holder\">\n          <!-- <boolean-field [(value)]=\"profile.changePassword\"></boolean-field> -->\n          <div style=\"text-align: left;\">\n            <input type=\"button\" *ngIf=\"!_profile.changePassword\" [value]=\"'account.user.change.password.button' | localize\" class=\"btn btn-primary\"\n              (click)=\"onChangePassword()\" />\n            <input type=\"button\" *ngIf=\"_profile.changePassword\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\"\n              (click)=\"onChangePassword()\" />\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"_profile.changePassword\">\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.password\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" [(ngModel)]=\"_profile.password\" name=\"password\" #password=\"ngModel\" required\n                minlength=\"5\" maxlength=\"50\">\n              <password-strength-bar [passwordToCheck]=\"_profile.password\">\n              </password-strength-bar>\n            </span>\n          </div>\n        </div>\n        <div class=\"row-holder\">\n          <div class=\"label-holder\">\n            <label>\n              <localize key=\"account.certainPassword\"></localize>\n            </label>\n          </div>\n          <div class=\"holder\">\n            <span class=\"text\">\n              <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" />\n            </span>\n            <div *ngIf=\"certainPassword.errors?.mustMatch\" style=\"float:none;\" class=\"inline-error-message\">\n              <localize key=\"account.certainPassword.validation\"></localize>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row-holder\">\n        <div class=\"label-holder\">\n          <label>\n            <localize key=\"com.runwaysdk.ui.userstable.UsersTable.adminRoles\"></localize>\n          </label>\n        </div>\n        <div class=\"holder\">\n\n          <table class=\"table\">\n            <thead>\n              <tr>\n                  <th><localize key=\"profile.roles.role.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.organization.table.heading\"></localize></th>\n                  <th><localize key=\"profile.roles.geoobjecttype.table.heading\"></localize></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let role of roles\">\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n                <td *ngIf=\"role.type === 'SRA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type === 'RA' && role.assigned\">\n                  \n                </td>\n\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.label.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.orgLabel.localizedValue}}\n                </td>\n                <td *ngIf=\"role.type !== 'RA' && role.orgCode.length > 0 && role.assigned\">\n                  {{role.geoObjectTypeLabel.localizedValue}}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- <ul>\n            <li *ngFor=\"let role of getRolesArray()\">{{role}}</li>\n          </ul> -->\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"button-holder\">\n            <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n            <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\"\n              [disabled]=\"!(form.valid)\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { LocalizationService } from './localization.service';\n\nimport Utils from '../../registry/utility/Utils';\n\nimport { PRESENT, ValueOverTime } from '@registry/model/registry';\n\nimport * as moment from 'moment';\n\ndeclare var Globalize: any;\ndeclare var com: any\ndeclare var registry: any\n\n\n@Injectable()\nexport class DateService {\n\toverlapMessage = { \n\t\t\"type\": \"ERROR\",\t\n\t\t\"message\":this.localizationService.decode(\"manage.versions.overlap.message\")\n\t}\n\t\n\tgapMessage = {\n\t\t\"type\": \"WARNING\",\t\n\t\t\"message\":this.localizationService.decode(\"manage.versions.gap.message\")\n\t}\n\n\tconstructor(private localizationService: LocalizationService) {}\n\n\t// Get infinity date (called 'present' in the UI)\n\tpublic getPresentDate(): Date {\n\t\t// NOTE: Month is 0 indexed so 11 = December\n\t\tlet dt =  new Date(5000, 11, 31, 0, 0, 0);\n\t\t\n\t\treturn dt;\n\t}\n\t\n\tpublic formatDateForDisplay(date: string | Date): string {\n\t\tif(!date){\n\t\t\treturn \"\";\n\t\t}\n\t\t\n\t\t\n\t\tif (date === PRESENT) {\n\t\t\treturn this.localizationService.localize(\"changeovertime\", \"present\");\n\t\t}\n\t\t\n\t\tif(date instanceof Date){\n\t\t\treturn this.getDateString(date);\n\t\t}\n\t\telse{\n\t\t\treturn date.split('T')[0];\n\t\t}\n\t}\n\t\n\t// @param value as yyyy-mm-dd\n\tgetDateFromDateString(value: string){\n\t\treturn new Date(+value.split(\"-\")[0], +value.split(\"-\")[1]-1, +value.split(\"-\")[2]);\n\t}\n\t\n\tgetDateString(date:Date): string {\n\t\tif(date instanceof Date){\n\t\t\tlet year = date.getFullYear();\n\t\t\tlet month:number|string = date.getMonth()+1;\n\t\t\tlet dt:number|string = date.getDate();\n\t\t\t\n\t\t\tif (dt < 10) {\n\t\t\t  dt = '0' + dt;\n\t\t\t}\n\t\t\tif (month < 10) {\n\t\t\t  month = '0' + month;\n\t\t\t}\n\t\t\t\n\t\t\treturn year + \"-\" + month + \"-\" + dt;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\tcheckRanges(vAttributes: any[]): boolean {\n\t\t\n\t\tlet hasConflict = false;\n\t\t\n\t\t// clear all messages\n\t\tvAttributes.forEach(attr => {\n\t\t\tattr.conflictMessage = [];\n\t\t})\n\t\t\n\t\t// Check for overlaps\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tconst h1 = vAttributes[j];\n\n\t\t\tif (h1.startDate && h1.endDate) {\n\t\t\t\tlet s1: any = this.getDateFromDateString(h1.startDate);\n\t\t\t\tlet e1: any = this.getDateFromDateString(h1.endDate);\n\n\t\t\t\tif (Utils.dateEndBeforeStart(s1, e1)) {\n\t\t\t\t\th1.conflictMessage.push({\n\t\t\t\t\t\t\"type\": \"ERROR\",\t\n\t\t\t\t\t\t\"message\": this.localizationService.decode(\"manage.versions.startdate.later.enddate.message\")\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\thasConflict = true;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < vAttributes.length; i++) {\n\n\t\t\t\t\tif (j !== i) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst h2 = vAttributes[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If all dates set\n\t\t\t\t\t\tif (h2.startDate && h2.endDate) {\n\t\t\t\t\t\t\tlet s2: Date = this.getDateFromDateString(h2.startDate);\n\t\t\t\t\t\t\tlet e2: Date = this.getDateFromDateString(h2.endDate);\n\n\t\t\t\t\t\t\t// Determine if there is an overlap\n\t\t\t\t\t\t\tif (Utils.dateRangeOverlaps(s1.getTime(), e1.getTime(), s2.getTime(), e2.getTime())) {\n\t\t\t\t\t\t\t\th1.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(s2.getTime() === e2.getTime()){\n\t\t\t\t\t\t\t\t\th2.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\thasConflict = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If 1st end date and current start date\n\t\t\t\t\t\telse if( (i === j-1 || i === j+1) && e1 && h2.startDate){\n\t\t\t\t\t\t\tlet s2: Date = this.getDateFromDateString(h2.startDate);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(s2.getTime() <= e1){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\th1.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\th2.conflictMessage.push(this.overlapMessage);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\thasConflict = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.sort(vAttributes);\n\t\t\n\t\t// Check for gaps\n\t\tlet current = null;\n\t\tfor (let j = 0; j < vAttributes.length; j++) {\n\t\t\tlet next = vAttributes[j];\n\n\t\t\tif (j > 0) {\n\t\t\t\tif (current.endDate && next.startDate) {\n\t\t\t\t\tlet e1: any = new Date(current.endDate);\n\t\t\t\t\tlet s2: any = new Date(next.startDate);\n\n\t\t\t\t\tif (Utils.hasGap(e1.getTime(), s2.getTime())) {\n\t\t\t\t\t\tnext.conflictMessage.push(this.gapMessage);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcurrent.conflictMessage.push(this.gapMessage);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent = next;\n\t\t}\n\t\t\n\t\treturn hasConflict;\n\t}\n\t\n\tsort(votArr: ValueOverTime[]): void {\n\n\t\t// Sort the data by start date \n\t\tvotArr.sort(function(a, b) {\n\n\t\t\tif (a.startDate == null || a.startDate === '') {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (b.startDate == null || b.startDate === '') {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tlet first: any = new Date(a.startDate);\n\t\t\tlet next: any = new Date(b.startDate);\n\t\t\treturn first - next;\n\t\t});\n\t}\n\n}\n","import { Component } from '@angular/core';\nimport { ModalStepIndicatorService } from '@shared/service';\n\nimport { Step, StepConfig } from '@shared/model/modal';\nimport { Subscription } from 'rxjs';\n\n\n@Component( { \n    selector: 'modal-step-indicator',\n    templateUrl: './modal-step-indicator.component.html',\n    styleUrls: ['./modal-step-indicator.css']\n} )\nexport class ModalStepIndicatorComponent {\n\n    stepConfig: StepConfig;\n    step: Step;\n    stepSubscription: Subscription;\n\n    constructor( private modalStepIndicatorService: ModalStepIndicatorService ) { \n        this.stepSubscription = modalStepIndicatorService.modalStepChange.subscribe( stepConfig => {\n            this.stepConfig = stepConfig;\n        })\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy() {\n        this.stepSubscription.unsubscribe();\n    }\n}\n","<div class=\"step-indicator\" >\n    <ul *ngIf=\"stepConfig && stepConfig.steps.length > 0\" class=\"nav nav-justified\">\n        <li class=\"nav-item\" [ngClass]=\"{'active':step.active, 'enabled':step.enabled}\" *ngFor=\"let step of stepConfig.steps\">{{step.label}}</li>\n    </ul>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service'\n\nimport { ExternalSystem, PageResult } from '@shared/model/core'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ExternalSystemService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetExternalSystems(pageNumber: number, pageSize:number): Promise<PageResult<ExternalSystem>> {\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'pageNumber', pageNumber.toString() );\n        params = params.set( 'pageSize', pageSize.toString() );\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<PageResult<ExternalSystem>>(acp + '/external-system/get-all', {params:params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tgetExternalSystem(oid:string): Promise<ExternalSystem> {\n\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'oid', oid );\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.get<ExternalSystem>(acp + '/external-system/get', {params:params })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tapplyExternalSystem(system: ExternalSystem): Promise<ExternalSystem> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<ExternalSystem>(acp + '/external-system/apply', JSON.stringify({ system: system }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\t\n\tgetSystemCapabilities(system: ExternalSystem): Promise<{oauth:boolean}> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<{oauth:boolean}>(acp + '/external-system/system-capabilities', JSON.stringify({ system: system }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\t\n\tremoveExternalSystem(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/external-system/remove', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\t\n\n}\n","import { Injectable } from '@angular/core';\n// import { Subject } from 'rxjs'\nimport { Subject } from 'rxjs';\n\n\nimport { Step, StepConfig } from '@shared/model/modal';\n\n\ndeclare var acp: string;\n\n@Injectable()\nexport class ModalStepIndicatorService {\n\n    stepConfig: StepConfig;\n    step: Step;\n    private modalStepChangedSource = new Subject<StepConfig>();\n    modalStepChange = this.modalStepChangedSource.asObservable();\n\n\n    constructor(  ) { }\n\n    public getStepConfig(): StepConfig {\n        return this.stepConfig;\n    }\n\n    public setStepConfig(config: StepConfig): void {\n        this.stepConfig = config;\n        \n        this.modalStepChangedSource.next(this.stepConfig);\n    }\n\n    getStep(): Step {\n        return this.step;\n    }\n\n    setStep(step: Step): void {\n        this.step = step;\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service';\n\nimport { Organization, PageResult } from '@shared/model/core';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class OrganizationService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tgetOrganizations(): Promise<Organization[]> {\n\n    this.eventService.start();\n\n    return this.http\n      .get<Organization[]>(acp + '/cgr/organizations/get-all')\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  updateOrganization(json: any): Promise<Organization> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<Organization>(acp + '/cgr/orgainization/update', JSON.stringify({ json: json }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  newOrganization(json: any): Promise<any> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<any>(acp + '/cgr/orgainization/create', JSON.stringify({ json: json }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n\n  removeOrganization(code: any): Promise<void> {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.eventService.start();\n\n    return this.http\n      .post<any>(acp + '/cgr/orgainization/delete', JSON.stringify({ code: code }), { headers: headers })\n      .pipe(finalize(() => {\n        this.eventService.complete();\n      }))\n      .toPromise();\n  }\n}\n","import { CanDeactivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n// Thanks to : https://stackoverflow.com/a/41187919/219843\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n  afterDeactivate: (arg:boolean) => void;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    if (!component.canDeactivate())\n    {\n      // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\n      // when navigating away from your angular app, the browser will show a generic warning message\n      // see http://stackoverflow.com/a/42207299/7307355\n      var confirmRet = confirm('WARNING: You have unsaved changes. Press Cancel to go back and save these changes, or OK to lose these changes.');\n      \n      component.afterDeactivate(confirmRet);\n      \n      return confirmRet;\n    }\n    \n    return true;\n  }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\n\nimport { Profile } from '@shared/model/profile';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ProfileService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tget(): Promise<Profile> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Profile>(acp + '/registryaccount/get', { headers: headers })\n\t\t\t.toPromise();\n\t}\n\n\n\tapply(profile: Profile): Promise<Profile> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Profile>(acp + '/registryaccount/apply', JSON.stringify({ account: profile }), { headers: headers })\n\t\t\t.toPromise();\n\t}\n\n\tunlock(oid: string): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/registryaccount/unlock', JSON.stringify({ oid: oid }), { headers: headers })\n\t\t\t.toPromise()\n\t}\n\n\tsetLocale(locale: string): Promise<any> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<any>(acp + '/localization/set-locale', JSON.stringify({ locale: locale }), { headers: headers })\n\t\t\t.toPromise();\n\t}\n\n\tgetRolesForUser(userOID: string): Promise<any> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\n\t\treturn this.http\n\t\t\t.post<Profile>(acp + '/registryaccount/getRolesForUser', { userOID: userOID }, { headers: headers })\n\t\t\t.toPromise();\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\nimport { Progress } from '@shared/model/progress';\n\nexport interface IProgressListener {\n  start(): void;\n  progress(progress:Progress):void;  \n  complete(): void;\n}\n\n@Injectable()\nexport class ProgressService {\n  private listeners: IProgressListener[] = [];\n  \n  public constructor() {}\n  \n  public registerListener(listener: IProgressListener): void {\n   this.listeners.push(listener);\n  }\n  \n  public deregisterListener(listener: IProgressListener): boolean {\n    let indexOfItem = this.listeners.indexOf(listener);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this.listeners.splice(indexOfItem, 1);\n\n    return true;\n  }\n  \n  public start(): void {\n    for (const listener of this.listeners) {\n      listener.start();\n    }\n  }\n  \n  public progress(progress:Progress):void {\n    for (const listener of this.listeners) {\n      listener.progress(progress);\n    }\t  \n  }  \n  \n  public complete(): void {\n    for (const listener of this.listeners) {\n      listener.complete();\n    }\n  }  \n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from './event.service';\n\nimport { AuthService } from './auth.service';\nimport { User } from '@shared/model/user';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SessionService {\n\n    constructor( private service: EventService, private http: HttpClient, private authService: AuthService ) { }\n\n    login( username: string, password: string ): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n        return this.http\n            .post<User>( acp + '/session/login', JSON.stringify( { username: username, password: password } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.service.complete();\n\t\t\t}))\n            .toPromise()\n            .then(( user: User ) => {\n                this.authService.setUser( user );\n\n                return user;\n            } )\n    }\n    \n    logout(): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.service.start();\n\n\n        return this.http\n            .post<void>( acp + '/session/logout', { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.service.complete();\n\t\t\t}))\n            .toPromise()\n            .then(( response: any ) => {\n                this.authService.setUser( null );\n\n                return response;\n            } )\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'error-message',\n    templateUrl: './error-message.component.html',\n    styleUrls: ['./error-message.css']\n} )\nexport class ErrorMessageComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( private localizeService: LocalizationService ) { }\n}\n","<div *ngIf=\"message != null\" class=\"error-container\">\n    <div class=\"\">\n        <strong class=\"error-title\">\n            <localize key=\"error.title\"></localize>\n        </strong>\n    </div>\n    <div class=\"\">\n        <div>\n            <p class=\"error-message\">{{message}}</p>\n        </div>\n    </div>\n</div>","import { AuthService } from './auth.service';\nimport { EventService } from './event.service';\nimport { ExternalSystemService } from './external-system.service';\nimport { AdminGuard, AuthGuard, ContributerGuard, MaintainerGuard } from './guard.service';\nimport { LocalizationService } from './localization.service';\nimport { ModalStepIndicatorService } from './modal-step-indicator.service';\nimport { OrganizationService } from './organization.service';\nimport { PendingChangesGuard } from './pending-changes-guard';\nimport { ProfileService } from './profile.service';\nimport { ProgressService } from './progress.service';\nimport { SessionService } from './session.service';\n\nexport const services: any[] = [\n\tAuthService,\n\tEventService,\n\tExternalSystemService,\n\tAdminGuard,\n\tAuthGuard,\n\tContributerGuard,\n\tMaintainerGuard,\n\tLocalizationService,\n\tModalStepIndicatorService,\n\tOrganizationService,\n\tPendingChangesGuard,\n\tProfileService,\n\tProgressService,\n\tSessionService\n];\n\nexport * from './auth.service';\nexport * from './event.service';\nexport * from './external-system.service';\nexport * from './guard.service';\nexport * from './localization.service';\nexport * from './modal-step-indicator.service';\nexport * from './organization.service';\nexport * from './pending-changes-guard';\nexport * from './profile.service';\nexport * from './progress.service';\nexport * from './session.service';\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { LocalizationService } from '@shared/service';\nimport { ModalTypes } from '@shared/model/modal';\n\n\n@Component( {\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./modal.css']\n} )\nexport class ConfirmModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    @Input() data: any;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.submit\");\n\n    @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n    \n    /*\n     * Called on cancel\n     */\n    public onCancel: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n        this.onCancel = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next( this.data );\n    }\n    \n    cancel(): void {\n        this.bsModalRef.hide();\n        this.onCancel.next( this.data );\n    }\n}\n","<div class=\"modal-body\">\n  <form class=\"modal-form\">\n\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <h3>{{message}}</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"button-holder\">\n          <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\">\n            <span>{{cancelText}}</span>\n          </button>\n          <button type=\"button\" (click)=\"confirm()\"\n            [ngClass]=\"type.toUpperCase() === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\"\n            aria-disabled=\"false\">\n            <span>{{submitText}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalizationService } from '@shared/service';\n\n@Component( {\n    selector: 'error-modal',\n    templateUrl: './error-modal.component.html',\n    styleUrls: ['./error-modal.css']\n} )\nexport class ErrorModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string =  this.localizeService.decode(\"error.modal.default.message\");\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\tselector: 'success-modal',\n\ttemplateUrl: './success-modal.component.html',\n\tstyleUrls: ['./success-modal.css']\n})\nexport class SuccessModalComponent implements OnInit {\n    /*\n     * Message\n     */\n\t@Input() message: string;\n\n\tconstructor(public bsModalRef: BsModalRef, private localizeService: LocalizationService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.message = this.message ? this.message : this.localizeService.decode(\"success.modal.default.message\");\n\t}\n\n}\n","<div class=\"modal-body\">\n\t<form class=\"modal-form\">\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t<h3>{{message}}</h3>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"button-holder\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n\t\t\t\t\t\t<localize key=\"modal.button.close\"></localize>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Progress } from '@shared/model/progress';\nimport { ProgressService, IProgressListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styles: [\n    '.progress-overlay { background-color: #CCCCCC; position: absolute; display: block;opacity: 0.8;z-index: 99999 !important;}',\n    '.progress-div { width: 100%; margin-left: 0; padding-left: 25%; padding-right: 25%; margin-top: 30% }'\n  ]\n})\nexport class ProgressBarComponent implements OnInit, IProgressListener {\n  public showIndicator: boolean = true;\n\n  public prog:Progress = {\n    current:0,\n    total:1,\n    description:\"Initializing\"\n  };\n\n  constructor(private service: ProgressService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.prog = {\n      current:0,\n      total:1,\n      description:\"Initializing\"\n    };\n    \n    this.showIndicator = true;\n  }\n  \n  progress(progress:Progress):void {\n    this.prog = progress;\n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","<div *ngIf=\"showIndicator\" class=\"progress-overlay\" style=\"height: 100%; width: 100%;\">\n  <div class=\"progress-div\">\n    <progressbar class=\"progress-striped active\" [max]=\"prog.total\" [value]=\"prog.current\"><i>{{prog.description}}</i></progressbar>\n  </div>\n</div>\n","var map = {\n\t\"./admin/admin.module\": [\n\t\t256,\n\t\t\"vendor\",\n\t\t0,\n\t\t2\n\t],\n\t\"./registry/registry.module\": [\n\t\t257,\n\t\t\"vendor\",\n\t\t0,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 184;\nmodule.exports = webpackAsyncContext;","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subscription } from 'rxjs';\n\nimport { Application } from '@shared/model/application';\nimport { SessionService } from '@shared/service';\nimport { HubService } from '@core/service/hub.service';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { LoginHeaderComponent } from './login-header.component';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n} )\nexport class LoginComponent implements OnInit {\n    context: string;\n    username: string = '';\n    password: string = '';\n    \n    oauthServers: any[] = null;\n    viewOauthServers: boolean = false;\n    \n    sub: Subscription;\n\n    /*\n     * Reference to the modal current showing\n    */\n    private bsModalRef: BsModalRef;\n\n    ngOnInit(): void {\n      this.hService.oauthGetPublic(null).then(oauthServers => {\n        \n        if (oauthServers && oauthServers.length > 0)\n        {\n          this.oauthServers = oauthServers;\n        }\n        \n      }).catch((err: HttpErrorResponse) => {\n        this.error(err);\n      });\n      \n      this.sub = this.route.params.subscribe(params => {\n        if (params['errorMsg'] != null)\n        {\n          this.bsModalRef = this.modalService.show(ErrorModalComponent, { backdrop: true });\n          \n          let encodedError = params['errorMsg'];\n          let decodedError = encodedError.replaceAll(\"+\", \" \");\n          \n          this.bsModalRef.content.message = decodedError;\n        }\n      });\n    }\n\n    constructor( private service: SessionService, private hService: HubService, private modalService: BsModalService, private router: Router, private route: ActivatedRoute ) {\n        this.context = acp as string;\n    }\n    \n    onClickDhis2(url: any): void {\n      if (url == null)\n      {\n        if (this.oauthServers.length == 1)\n        {\n          window.location.href = this.oauthServers[0].url;\n        }\n        else\n        {\n          this.viewOauthServers = !this.viewOauthServers;\n        }\n      }\n      else\n      {\n        window.location.href = url;\n      }\n    }\n\n    onSubmit(): void {\n        this.service.login( this.username, this.password ).then( response => {\n\n            this.hService.applications().then( applications => {\n                if ( applications.length == 1 ) {\n                    this.open( applications[0] );\n                }\n                else {\n                    this.router.navigate( ['/menu/true'] );\n                }\n            } );\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    public error( err: HttpErrorResponse ): void {\n      this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n\n\n}\n","<div id=\"login-page\" class=\"new-admin-design-main\">\n    <login-header></login-header>\n    <loading-bar></loading-bar>\n\n    <message></message>\n    <div class=\"vertical-center\">\n        <div id=\"app-container\" class=\"container\">\n\n            <div class=\"row\">\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                    <div class=\"row\" style=\"margin-bottom: 25px;\">\n                        <div class=\"col-md-12\">\n\n                            <div class=\"heading text-center\">\n                                <h2>\n                                    <!-- \n                                    <localize key=\"login.page.title\"></localize>\n                                    -->\n                                </h2>\n                                <!-- <p class=\"lead\">\n                                    <localize key=\"login.page.description\"></localize>\n                                </p> -->\n                            </div>\n\n                        </div>\n                    </div>\n                    \n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n\n                            <form id=\"login-form\" class=\"login\" #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\">\n                                <div id=\"login-input-container\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <input [(ngModel)]=\"username\" name=\"username\" type=\"text\" [placeholder]=\"'login.username' | localize\" id=\"login\" required /> \n                                            <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" [placeholder]=\"'login.password' | localize\" id=\"password\" required /> \n                                            <a routerLink=\"/forgotpassword\" class=\"forgot-password\"> \n                                              <localize key=\"login.forgotPassword\"></localize>\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <!-- <p class=\"login-submit\"> -->\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                          <div class=\"btn-holder text-right\">\n                                            <button type=\"submit\" id=\"login-btn\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\">\n                                                <localize key=\"login.button\"></localize>\n                                            </button>\n                                          </div>\n                                        </div>\n                                    </div>\n                                    <!-- </p> -->\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                    \n                    <div *ngIf=\"oauthServers\" class=\"row\">\n                      <div class=\"col-md-12 text-center\">\n                        <h4 class=\"oauth-or-line-block\">\n                          <span class=\"oauth-or-text\">&nbsp;<localize key=\"login.oauth.or.label\"></localize>&nbsp;</span>\n                        </h4>\n                    \n                        <button (click)=\"onClickDhis2()\" class=\"dhis2-login-button\">\n                          <span class=\"dhis2-login-button-text\">\n                            <localize key=\"login.oauth.loginwith.label\"></localize>\n                          </span>\n                          <span>\n                            <img class=\"dhis2-login-button-image\" src=\"../dist/assets/dhis2-logo.f59cbafa7a88d5e9addba95ec74000d1.png\">\n                          </span>\n                        </button>\n                        <div *ngIf=\"viewOauthServers\" style=\"margin-top: 20px;\">\n                          <select (change)=\"onClickDhis2($event.target.value)\" name=externalSystemOid>\n                            <option></option>\n                            <option *ngFor=\"let server of oauthServers\" [value]=\"server.url\">\n                              {{server.label.localizedValue}}\n                            </option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Application } from '@shared/model/application';\n\nimport { AuthService } from '@shared/service';\n\nimport { HubService } from '@core/service/hub.service';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'hub',\n    templateUrl: './hub.component.html',\n    styleUrls: ['./hub.component.css']\n} )\nexport class HubComponent implements OnInit {\n    context: string;\n    applications: Application[] = [];\n    tasks: any = [];\n    isAdmin: boolean = false;\n    buckets: string = 'col-sm-6';\n    bsModalRef: BsModalRef;\n\n    constructor(\n        private service: HubService,\n        private authService: AuthService,\n        private modalService: BsModalService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.context = acp as string;\n    }\n\n    ngOnInit(): void {\n      this.service.applications().then( applications => {\n          this.applications = applications;\n      } );\n      \n      this.isAdmin = this.authService.isAdmin();\n    }\n    \n    //   logout():void {\n    //     this.sessionService.logout().then(response => {\n    //       this.router.navigate(['/login']);\t  \n    //     }); \t  \n    //   }\n\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    //   account():void{\n    //     this.profileService.get().then(profile => {\n    //       this.bsModalRef = this.modalService.show(ProfileComponent, {backdrop: 'static', class: 'gray modal-lg'});\n    //       this.bsModalRef.content.profile = profile;\n    //     });\n    //   }\n}\n","    <div class=\"new-admin-design-main\">\n\n        <cgr-header></cgr-header>\n        <loading-bar></loading-bar>\n        \n        <div id=\"app-container\" class=\"container-fluid\">\n            <div class=\"nav-icon-container\">\n\n                <div *ngIf=\"applications?.length > 0\" class=\"row vertical-center-row\">\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                    <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                        <div *ngFor=\"let app of applications; let i = index;\">\n\n                            <div style=\"padding: 10px 0;\" class=\"row\" *ngIf=\"i % 4 === 0\">\n\n                                <div *ngFor=\"let application of applications; let internalIndex = index;\">\n                                    <div *ngIf=\"internalIndex >= i && internalIndex < i + 4\" class=\"col-xs-12 col-sm-12 col-md-3 text-center\" (click)=\"open(application)\">\n                                        <div [id]=\"application.oid\" class=\"nav-option-wrapper\">\n                                            <img class=\"nav-icon-img img-responsive\" [src]=\"context + '/' + application.src\" alt=\"Navigation\" />\n                                            <h3 class=\"nav-icon-img-label\">{{application.label}}</h3>\n                                            <!-- <p class=\"nav-icon-img-description\"> {{application.description}} </p> -->\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"applications?.length === 1 || applications?.length === 2\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                    <div *ngIf=\"applications?.length === 1\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                </div>\n            </div>\n\n        </div>\n        <!-- \n      <div style=\"width:100%\">\n        <label style=\"text-align: left; width:50%; display: inline;\">{{authService.getUsername()}} : {{authService.getRoles()}}</label>\n        <label style=\"text-align: right; width:50%; display: inline;\">{{authService.getVersion()}}</label>\n      </div>\n      -->\n        <!--\n      <div class=\"container\">\n\t\t    <div class=\"row justify-content-between\">\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getUsername()}} : {{authService.getRoles()}}\n\t\t\t    </div>\n\t\t\t    <div class=\"col-4\">\n\t\t\t      {{authService.getVersion()}}\n\t\t\t    </div>\n        </div>\n      </div>\n      -->\n\n    </div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ForgotPasswordService } from '@core/service/forgotpassword.service';\n\nimport { ErrorHandler } from '@shared/component';\n\n@Component({\n  selector: 'forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  username: string;\n  emailIsSent: boolean = false;\n  message: string = null;\n\n  constructor(\n    private service: ForgotPasswordService,\n    private router: Router,      \n    private route: ActivatedRoute,\n    private location: Location) {\n  }\n\n  ngOnInit(): void {\n  \n  }\n  \n  cancel(): void {    \n    this.router.navigate(['/']);\n  } \n  \n  onSubmit(): void {\n    this.service.submit(this.username)\n      .then(response => {\n        this.emailIsSent = true;\n      })\n      .catch(( err: HttpErrorResponse ) => {\n        this.error( err );\n      } );\n  }\n  \n  error( err: HttpErrorResponse ): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading text-center\">\n          <h3><localize key=\"forgotpassword.header\"></localize></h3>\n        </div>\n          \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <div class=\"modal-body\">\n          <fieldset>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div *ngIf=\"!emailIsSent\" class=\"label-holder\">\n                  <label><localize key=\"forgotpassword.username\"></localize></label>\n                </div>          \n                <div *ngIf=\"!emailIsSent\" class=\"holder\" >\n                  <span class=\"text\">\n                    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n                  </span>\n                </div>\n                <div *ngIf=\"emailIsSent\" class=\"forgotpassword-email-is-sent\">\n                  <localize key=\"forgotpassword.emailIsSent\"></localize>\n                </div>\n              </div>\n            </div>\n            \n            \n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <div *ngIf=\"!emailIsSent\" class=\"button-holder\">\n                    <input type=\"button\" [value]=\"'forgotpassword.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                    <input type=\"submit\" [value]=\"'forgotpassword.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n                  </div>\n                  \n                  <div *ngIf=\"emailIsSent\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                    <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n                  </div>\n              </div>\n            </div>\n          </fieldset>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler } from '@shared/component';\n\nimport { ForgotPasswordService } from '@core/service/forgotpassword.service';\nimport { PasswordStrengthBarComponent } from '@shared/component/password-strength-bar/password-strength-bar.component';\n\n\n\n@Component({\n  templateUrl: './forgotpassword-complete.component.html',\n  styleUrls: ['./forgotpassword-complete.component.css']\n})\nexport class ForgotPasswordCompleteComponent implements OnInit {\n  newPassword: string;\n  token: string;\n  passwordIsReset: boolean = false;\n  private sub: any;\n  message: string = null;\n\n  constructor(\n    private service: ForgotPasswordService,\n    private router: Router,      \n    private route: ActivatedRoute,\n\tprivate passwordStrengthBarComponent: PasswordStrengthBarComponent) {\n  }\n  \n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n       this.token = params['token'];\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  \n  \n  cancel(): void {    \n    this.router.navigate(['/']);\n  } \n  \n  onSubmit(): void {\n    this.service.complete(this.newPassword, this.token)\n      .then(() => {\n        this.passwordIsReset = true;\n      })\n      .catch(( err: HttpErrorResponse ) => {\n        this.error( err );\n      } );\n  }\n  \n  error( err: HttpErrorResponse ): void {\n      this.message = ErrorHandler.getMessageFromError(err);\n  }\n}\n","<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading text-center\">\n          <h3><localize key=\"forgotpassword-complete.header\"></localize></h3>\n        </div>\n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <fieldset>\n          <div class=\"row-holder\">\n            <div *ngIf=\"!passwordIsReset\">            \n<!-- \n              <div class=\"label-holder\">\n                <label><localize key=\"forgotpassword-complete.token\"></localize></label>\n              </div>\n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"text\" [(ngModel)]=\"token\" name=\"token\" required [readonly]=\"true\">\n                </span>\n              </div>            \n -->            \n              <div class=\"label-holder\">\n                <label><localize key=\"forgotpassword-complete.newPassword\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <span class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                  <ng2-password-strength-bar\n                    [passwordToCheck]=\"newPassword\">\n                  </ng2-password-strength-bar>                              \n                </span>\n              </div>\n              <div class=\"label-holder\">\n                <label><localize key=\"account.certainPassword\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n                </span>\n                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                  <localize key=\"account.certainPassword.validation\"></localize>\n                </div>                                                       \n              </div>                           \n            </div>\n            <div *ngIf=\"passwordIsReset\" class=\"forgotpassword-complete-password-is-reset\">\n              <localize key=\"forgotpassword-complete.passwordIsReset\"></localize>\n            </div>\n          </div>\n            \n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div *ngIf=\"!passwordIsReset\" class=\"button-holder\">\n                <input type=\"button\" [value]=\"'forgotpassword-complete.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n                <input type=\"submit\" [value]=\"'forgotpassword-complete.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n              \n              <div *ngIf=\"passwordIsReset\" class=\"button-holder\" style=\"margin-top: 10px;\">\n                <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword-complete.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","import { LocalizedValue } from '@shared/model/core';\nimport { LocalizationService } from '@shared/service';\nimport { ImportConfiguration } from './io';\n\nexport const PRESENT: string = '5000-12-31'\n\nexport class TreeEntity {\n\tid: string;\n\tname: string;\n\thasChildren: boolean;\n}\n\nexport class Term {\n\tcode: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\n\tconstructor(code: string, label: LocalizedValue, description: LocalizedValue) {\n\t\tthis.code = code;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t}\n\tchildren: Term[] = [];\n\n\taddChild(term: Term) {\n\t\tthis.children.push(term);\n\t}\n}\n\nexport class GeoObject {\n\ttype: string;\n\tgeometry: any;\n\tproperties: {\n\t\tuid: string,\n\t\tcode: string,\n\t\tdisplayLabel: LocalizedValue,\n\t\ttype: string,\n\t\tstatus: string[],\n\t\tsequence: string\n\t\tcreateDate: string,\n\t\tlastUpdateDate: string,\n\t\twritable?: boolean\n\t};\n}\n\nexport class GeoObjectType {\n\tcode: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tgeometryType?: string;\n\tisLeaf: boolean;\n\tisGeometryEditable: boolean;\n\torganizationCode: string;\n\tattributes: Array<Attribute | AttributeTerm | AttributeDecimal> = [];\n\trelatedHierarchies?: string[];\n\tsuperTypeCode?: string;\n\tisAbstract?: boolean;\n\tisPrivate?: boolean;\n\tcanDrag?: boolean;\n\tpermissions?: string[];\n}\n\nexport class Task {\n\tid: string;\n\ttemplateKey: string;\n\tmsg: string;\n\ttitle: string;\n\tstatus: string;\n\tcreateDate: number;\n\tcompletedDate: number;\n}\n\nexport class GeoObjectOverTime {\n\n\tgeoObjectType: GeoObjectType;\n\n\tattributes: any;\n\n\tpublic constructor(geoObjectType: GeoObjectType, attributes: any) {\n\t\tthis.geoObjectType = geoObjectType;\n\t\tthis.attributes = attributes;\n\t}\n\n\tpublic getVotAtDate(date: Date, attrCode: string, lService: LocalizationService) {\n\t\tlet retVot = { startDate: date, endDate: null, value: null };\n\n\t\tconst time = date.getTime();\n\n\t\tfor (let i = 0; i < this.geoObjectType.attributes.length; ++i) {\n\t\t\tlet attr = this.geoObjectType.attributes[i];\n\n\t\t\tif (attr.code === attrCode) {\n\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\tretVot.value = lService.create();\n\t\t\t\t}\n\n\t\t\t\tif (attr.isChangeOverTime) {\n\t\t\t\t\tlet values = this.attributes[attr.code].values;\n\n\t\t\t\t\tvalues.forEach(vot => {\n\n\t\t\t\t\t\tconst startDate = Date.parse(vot.startDate);\n\t\t\t\t\t\tconst endDate = Date.parse(vot.endDate);\n\n\t\t\t\t\t\tif (time >= startDate && time <= endDate) {\n\n\t\t\t\t\t\t\tif (attr.type === 'local') {\n\t\t\t\t\t\t\t\tretVot.value = JSON.parse(JSON.stringify(vot.value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (attr.type === 'term' && vot.value != null && Array.isArray(vot.value) && vot.value.length > 0) {\n\t\t\t\t\t\t\t\tretVot.value = vot.value[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tretVot.value = vot.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tretVot.value = this.attributes[attr.code];\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn retVot;\n\t}\n}\n\nexport class ValueOverTime {\n\tstartDate: string;\n\tendDate: string;\n\tvalue: any;\n\tremovable?: boolean;\n}\n\nexport class Attribute {\n\tcode: string;\n\ttype: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tisDefault: boolean;\n\trequired: boolean;\n\tunique: boolean;\n\tisChangeOverTime?: boolean;\n\tprecision?: number;\n\tscale?: number;\n\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChangeOverTime: boolean) {\n\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.label = label;\n\t\tthis.description = description;\n\t\tthis.isDefault = isDefault;\n\t\tthis.required = false; // Hardcoded to false because this functionality is disabled until later evaluation.\n\t\tthis.unique = unique;\n\t\tthis.isChangeOverTime = isChangeOverTime;\n\t}\n\n}\n\nexport class AttributeTerm extends Attribute {\n\t//descendants: Attribute[];\n\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n\t\tsuper(code, type, label, description, isDefault, required, unique, isChange);\n\t}\n\n\trootTerm: Term = new Term(null, null, null);\n\n\ttermOptions: Term[] = [];\n\n\tsetRootTerm(term: Term) {\n\t\tthis.rootTerm = term;\n\t}\n}\n\nexport class AttributeDecimal extends Attribute {\n\tconstructor(code: string, type: string, label: LocalizedValue, description: LocalizedValue, isDefault: boolean, required: boolean, unique: boolean, isChange: boolean) {\n\t\tsuper(code, type, label, description, isDefault, required, unique, isChange);\n\n\t\tthis.precision = 32;\n\t\tthis.scale = 8;\n\t}\n}\n\nexport enum GeoObjectTypeModalStates {\n\t\"manageAttributes\" = \"MANAGE-ATTRIBUTES\",\n\t\"editAttribute\" = \"EDIT-ATTRIBUTE\",\n\t\"defineAttribute\" = \"DEFINE-ATTRIBUTE\",\n\t\"manageTermOption\" = \"MANAGE-TERM-OPTION\",\n\t\"editTermOption\" = \"EDIT-TERM-OPTION\",\n\t\"manageGeoObjectType\" = \"MANAGE-GEO-OBJECT-TYPE\"\n}\n\nexport class TreeNode {\n\tgeoObject: GeoObject;\n\thierarchyType: string;\n}\n\nexport class ChildTreeNode extends TreeNode {\n\tchildren: ChildTreeNode[];\n}\n\nexport class ParentTreeNode extends TreeNode {\n\tparents: ParentTreeNode[];\n}\n\nexport class ManageGeoObjectTypeModalState {\n\tstate: string;\n\tattribute: any;\n\ttermOption: any;\n}\n\nexport class PaginationPage {\n\tpageNumber: number;\n\tcount: number;\n\tpageSize: number;\n\tresults: any[];\n}\n\nexport class AbstractScheduledJob {\n\tjobId: string;\n\thistoryId: string;\n\tstage: string;\n\tstatus: string;\n\tauthor: string;\n\tcreateDate: string;\n\tlastUpdateDate: string;\n\tworkProgress: number;\n\tworkTotal: number;\n\tstartDate: string;\n\tendDate: string;\n}\n\nexport class ScheduledJob extends AbstractScheduledJob {\n\timportedRecords: number;\n\texportedRecords: number;\n\tconfiguration: ImportConfiguration;\n\timportErrors: PaginationPage;\n\texportErrors: PaginationPage;\n\tproblems: PaginationPage;\n\tfileName: string;\n}\n\nexport class ScheduledJobOverview extends ScheduledJob {\n\tstepConfig: StepConfig;\n}\n\n// export class ScheduledJobDetail extends ScheduledJob {\n//     // failedRowCount: number;\n//     importErrors: PaginationPage\n// }\n\nexport class ImportError {\n\texception: ServerException;\n\tobject: ImportErrorObject;\n\tobjectType: string;\n\tid: string;\n\tresolution: string;\n\tselected?: boolean;\n}\n\nexport class ServerException {\n\tattributes: ServerExceptionAttribute[];\n\ttype: string;\n\tmessage: string;\n}\n\nexport class ServerExceptionAttribute {\n\tvalue: string;\n\tkey: string;\n}\n\nexport class ImportErrorObject {\n\tgeoObject: GeoObjectOverTime;\n\tparents: HierarchyOverTime[];\n\tisNew: boolean;\n}\n\nexport class StepConfig {\n\tsteps: Step[];\n}\n\nexport class Step {\n\tlabel: string;\n\tcomplete?: boolean;\n\tenabled?: boolean;\n\tstatus?: string;\n}\n\nexport class MasterList {\n\toid: string;\n\ttypeCode: string;\n\ttypeLabel?: LocalizedValue;\n\tdisplayLabel: LocalizedValue;\n\tcode: string;\n\trepresentativityDate: Date;\n\tpublishingStartDate?: Date;\n\tpublishDate: Date;\n\tlistAbstract: string;\n\tprocess: string;\n\tprogress: string;\n\taccessConstraints: string;\n\tuseConstraints: string;\n\tacknowledgements: string;\n\tdisclaimer: string;\n\tcontactName: string;\n\torganization: string;\n\ttelephoneNumber: string;\n\temail: string;\n\thierarchies: { label: string, code: string, parents: { label: string, code: string }[] }[];\n\tleaf: boolean;\n\tfrequency: string;\n\tisMaster: boolean;\n\tvisibility: string;\n\twrite?: boolean;\n\tread?: boolean;\n\texploratory?: boolean;\n\tversions?: MasterListVersion[];\n}\n\nexport class MasterListVersion {\n\tdisplayLabel: string;\n\toid: string;\n\ttypeCode: string;\n\torgCode: string;\n\tmasterlist: string;\n\tforDate: string;\n\tcreateDate: string;\n\tpublishDate: string;\n\tattributes: any[];\n\tisGeometryEditable: boolean;\n\tlocales?: string[];\n\tshapefile?: boolean;\n\tisAbstract?: boolean;\n\tsuperTypeCode?: string;\n}\n\nexport class HierarchyOverTime {\n\tcode: string;\n\tlabel: string;\n\ttypes: {\n\t\tcode: string;\n\t\tlabel: string;\n\t}[];\n\tentries: {\n\t\tstartDate: string;\n\t\tendDate: string;\n\t\tparents: { [k: string]: { text: string; geoObject: GeoObject } };\n\t\tloading?: any;\n\t\tconflictType?: string;\n\t\tconflictMessage?: any[];\n\t}[];\n}\n\nexport enum ImportStrategy {\n\t\"NEW_AND_UPDATE\" = \"NEW_AND_UPDATE\",\n\t\"NEW_ONLY\" = \"NEW_ONLY\",\n\t\"UPDATE_ONLY\" = \"UPDATE_ONLY\"\n}\n\nexport class MasterListByOrg {\n\toid: string;\n\tlabel: string;\n\twrite: boolean;\n\tlists: {\n\t\tlabel: string,\n\t\toid: string,\n\t\tcreateDate: string,\n\t\tlastUpdateDate: string,\n\t\tisMaster: boolean,\n\t\twrite: boolean,\n\t\tread: boolean,\n\t\tvisibility: string\n\t}[];\n}\n\nexport class SynchronizationConfig {\n\toid?: string;\n\ttype?: string;\n\tsystemLabel?: string;\n\torganization: string;\n\tsystem: string;\n\thierarchy: string;\n\tlabel: LocalizedValue;\n\tconfiguration: any;\n}\n\nexport class OrgSyncInfo {\n\tlabel: string;\n\tcode: string;\n\thierarchies: { label: string, code: string }[];\n\tsystems: { label: string, oid: string, type: string }[];\n};\n\nexport class ExportScheduledJob extends AbstractScheduledJob {\n\tstepConfig?: StepConfig;\n}\n\nexport class ContextLayer {\n\toid: string;\n\tdisplayLabel: string;\n\tactive: boolean;\n\tenabled: boolean;\n}\n\nexport class ContextLayerGroup {\n\toid: string;\n\tdisplayLabel: string;\n\tcontextLayers: ContextLayer[];\n}\n","export interface MessageContainer {\n\tsetMessage(message: string);\n}\n\nexport class LocaleValue {\n\tlocale: string;\n\tvalue: string;\n\n\tconstructor(locale: string, value: string) {\n\t\tthis.locale = locale;\n\t\tthis.value = value;\n\t}\n}\n\nexport class Organization {\n\tcode: string;\n\tlabel: any;\n\tcontactInfo: any;\n}\n\nexport class ExternalSystem {\n\toid?: string;\n\tid: string;\n\ttype: string;\n\torganization: string;\n\tlabel: LocalizedValue;\n\tdescription: LocalizedValue;\n\tusername?: string;\n\tpassword?: string;\n\turl?: string;\n\tversion?: string;\n\toAuthServer?: OAuthServer;\n}\n\nexport class OAuthServer {\n  keyName?: string;\n  label?: LocalizedValue;\n  url?: string;\n  authorizationLocation: string;\n  tokenLocation: string;\n  profileLocation: string;\n  clientId: string;\n  secretKey: string;\n  serverType: string;\n}\n\nexport class PageResult<T> {\n\tcount: number;\n\tpageNumber: number;\n\tpageSize: number;\n\tresultSet: T[];\n\texternalSystems?: ExternalSystem[];\n}\n\nexport class LocalizedValue {\n\tlocalizedValue: string;\n\tlocaleValues: LocaleValue[];\n\n\tconstructor(localizedValue: string, localeValues: LocaleValue[]) {\n\t\tthis.localizedValue = localizedValue;\n\t\tthis.localeValues = localeValues;\n\t}\n}\n\nexport class RoleBuilder {\n\tstatic buildFromRoleName(roleName: string): RegistryRole {\n\t\tif (roleName === \"cgr.SRA\") {\n\t\t\treturn new RegistryRole(RegistryRoleType.SRA, \"\", \"\", \"cgr.SRA\");\n\t\t}\n\n\t\tlet roleSplit = roleName.split(\".\");\n\n\t\tlet orgCode: string = roleSplit[2];\n\n\t\tif (roleSplit.length === 4) {\n\t\t\treturn new RegistryRole(RegistryRoleType.RA, orgCode, \"\", roleName);\n\t\t}\n\t\telse if (roleSplit.length === 5) {\n\t\t\tlet roleSuffix: string = roleSplit[4];\n\n\t\t\tlet gotCode: string = roleSplit[3];\n\n\t\t\tif (roleSuffix === \"RM\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.RM, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t\telse if (roleSuffix === \"RC\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.RC, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t\telse if (roleSuffix === \"AC\") {\n\t\t\t\treturn new RegistryRole(RegistryRoleType.AC, orgCode, gotCode, roleName);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport class RegistryRole {\n\ttype: RegistryRoleType;\n\torgCode: string;\n\tgeoObjectTypeCode: string;\n\troleName: string;\n\tdisplayLabel: string;\n\n\tconstructor(type: RegistryRoleType, orgCode: string, geoObjectTypeCode: string, roleName: string) {\n\t\tthis.type = type;\n\t\tthis.orgCode = orgCode;\n\t\tthis.geoObjectTypeCode = geoObjectTypeCode;\n\t\tthis.roleName = roleName;\n\t}\n}\n\nexport enum RegistryRoleType {\n\tSRA,\n\tRA,\n\tRM,\n\tRC,\n\tAC\n}\n","\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ErrorModalComponent } from '@shared/component';\n\nexport class ErrorHandler {\n    static getMessageFromError(err: any): string {\n    \n      var unspecified = \"An unspecified error has occurred.  Please try your operation again.  If the problem continues, alert your technical support staff.\";\n    \n      if (err == null)\n      {\n        return unspecified;\n      }\n      else\n      {\n        console.log(\"An error has occurred: \", err);\n      }\n      \n      let msg = null;\n      \n      if (err.error != null && (typeof err.error === 'object'))\n      {\n        msg = err.error.localizedMessage || err.error.message;\n      }\n      \n      if (msg == null)\n      {\n        msg = err.message || err.msg || err.localizedMessage;\n      }\n      \n      if (msg != null && msg.includes(\"##tferrormsg##\"))\n      {\n        var split = msg.split(\"##tferrormsg##\");\n        return split[2];\n      }\n      \n      if (msg == null)\n      {\n        msg = unspecified;\n      }\n      \n      return msg;\n    }\n    \n    static showErrorAsDialog(err: any, modalService: BsModalService): BsModalRef {\n      \n      if (err instanceof HttpErrorResponse && err.status == 401)\n      {\n        return null;\n      }\n      \n      let bsModalRef = modalService.show(ErrorModalComponent, { backdrop: true, class:\"error-white-space-pre\" });\n      \n      bsModalRef.content.message = ErrorHandler.getMessageFromError(err);\n      \n      return bsModalRef;\n      \n    }\n}\n","import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n\treturn (formGroup: FormGroup) => {\n\t\tconst control = formGroup.controls[controlName];\n\t\tconst matchingControl = formGroup.controls[matchingControlName];\n\n\t\t// return null if controls haven't initialised yet\n\t\tif (!control || !matchingControl) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// return null if another validator has already found an error on the matchingControl\n\t\tif (matchingControl.errors && !matchingControl.errors.mustMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// set error on matchingControl if validation fails\n\t\tif (control.value !== matchingControl.value) {\n\t\t\tmatchingControl.setErrors({ mustMatch: true });\n\t\t} else {\n\t\t\tmatchingControl.setErrors(null);\n\t\t}\n\t}\n}\n\n@Directive({\n\tselector: '[mustMatch]',\n\tproviders: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\n})\nexport class MustMatchDirective implements Validator {\n\t@Input('mustMatch') mustMatch: string[] = [];\n\n\tvalidate(formGroup: FormGroup): ValidationErrors {\n\t\treturn MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\n\t}\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { ErrorModalComponent } from './component/modals/error-modal.component';\nimport { SuccessModalComponent } from './component/modals/success-modal.component';\nimport { ConfirmModalComponent } from './component/modals/confirm-modal.component';\nimport { ErrorMessageComponent } from './component/message/error-message.component';\nimport { MessageComponent } from './component/message/message.component';\nimport { BooleanFieldComponent } from './component/form-fields/boolean-field/boolean-field.component';\nimport { DateFieldComponent } from './component/form-fields/date-field/date-field.component';\nimport { LoadingBarComponent } from './component/loading-bar/loading-bar.component';\nimport { PasswordStrengthBarComponent } from './component/password-strength-bar/password-strength-bar.component';\n\nimport { AdminGuard, MaintainerGuard, ContributerGuard, AuthGuard } from './service/guard.service';\nimport { PendingChangesGuard } from './service/pending-changes-guard';\n\nimport { AuthService } from './service/auth.service';\nimport { ProfileService } from './service/profile.service';\nimport { OrganizationService } from './service/organization.service';\nimport { ExternalSystemService } from './service/external-system.service';\nimport { LocalizationService } from './service/localization.service';\nimport { ProgressService } from './service/progress.service';\nimport { EventService } from './service/event.service';\nimport { ModalStepIndicatorService } from './service/modal-step-indicator.service';\nimport { SessionService } from './service/session.service';\nimport { DateService } from './service/date.service';\n\nimport { LocalizePipe } from './pipe/localize.pipe';\nimport { PhonePipe } from './pipe/phone.pipe';\n\nimport { OnlyNumber } from './directive/number-only.directive';\nimport { MustMatchDirective } from './directive/must-match.directive';\n\nimport { CgrHeaderComponent } from './component/header/header.component';\nimport { ProgressBarComponent } from './component/progress-bar/progress-bar.component';\nimport { LocalizeComponent } from './component/localize/localize.component';\nimport { ConvertKeyLabel } from './component/localize/convert-key-label.component';\nimport { ModalStepIndicatorComponent } from './component/modals/modal-step-indicator.component';\nimport { ProfileComponent } from './component/profile/profile.component';\n\nimport '../rxjs-extensions';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFileUploadModule,\n\t\tModalModule.forRoot(),\n\t\tTreeModule,\n\t\tContextMenuModule,\n\t\tBsDropdownModule,\n\t\tButtonsModule,\n\t\tTypeaheadModule,\n\t\tProgressbarModule,\n\t\tCollapseModule,\n\t\tNgxPaginationModule,\n\t\tBsDatepickerModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tLocalizeComponent,\n\t\tConvertKeyLabel,\n\t\tBooleanFieldComponent,\n\t\tDateFieldComponent,\n\t\tLoadingBarComponent,\n\t\tErrorMessageComponent,\n\t\tMessageComponent,\n\t\tConfirmModalComponent,\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tOnlyNumber,\n\t\tMustMatchDirective,\n\t\tProgressBarComponent,\n\t\tModalStepIndicatorComponent,\n\t\tCgrHeaderComponent,\n\t\tProfileComponent,\n\t\tLocalizePipe,\n\t\tPhonePipe\n\t],\n\texports: [\n\t\tLocalizeComponent,\n\t\tConvertKeyLabel,\n\t\tBooleanFieldComponent,\n\t\tDateFieldComponent,\n\t\tLoadingBarComponent,\n\t\tErrorMessageComponent,\n\t\tMessageComponent,\n\t\tConfirmModalComponent,\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tOnlyNumber,\n\t\tMustMatchDirective,\n\t\tProgressBarComponent,\n\t\tModalStepIndicatorComponent,\n\t\tCgrHeaderComponent,\n\t\tProfileComponent,\n\t\tLocalizePipe,\n\t\tPhonePipe,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule\n\t],\n\tentryComponents: [\n\t\tErrorModalComponent,\n\t\tSuccessModalComponent,\n\t\tConfirmModalComponent,\n\t\tModalStepIndicatorComponent,\n\t\tErrorMessageComponent,\n\t\tLoadingBarComponent,\n\t\tProfileComponent\n\t]\n})\nexport class SharedModule {\n\tstatic forRoot(): ModuleWithProviders<SharedModule> {\n\t\treturn {\n\t\t\tngModule: SharedModule,\n\t\t\tproviders: [\n\t\t\t\tCookieService,\n\t\t\t\tAuthService,\n\t\t\t\tSessionService,\n\t\t\t\tProfileService,\n\t\t\t\tOrganizationService,\n\t\t\t\tExternalSystemService,\n\t\t\t\tLocalizationService,\n\t\t\t\tDateService,\n\t\t\t\tModalStepIndicatorService,\n\t\t\t\tEventService,\n\t\t\t\tProgressService,\n\t\t\t\tAdminGuard,\n\t\t\t\tMaintainerGuard,\n\t\t\t\tContributerGuard,\n\t\t\t\tAuthGuard,\n\t\t\t\tPendingChangesGuard\n\t\t\t]\n\t\t};\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { ErrorHandler } from '@shared/component';\nimport { HubService } from '@core/service/hub.service';\n\ndeclare var acp:string;\n\n@Component({\n  selector: 'login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: []\n})\nexport class LoginHeaderComponent {\n  context:string;\n  \n  constructor(private hubService: HubService) {\n    this.context = acp;\n  }\n  \n  public error(err: HttpErrorResponse): void {\n    let msg = ErrorHandler.getMessageFromError(err);\n    console.log(msg, err);\n  }\n}\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default navbar-fixed-top\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\">\n                <img [src]=\"context + '/logo/view?id=logo'\" />\n            </a>\n            <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"cgr.standard.title\"></localize></a>\n          </div>\n        </div>\n      </nav>\n    </header>\n","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n  \n  selector: 'convert-key-label',\n  templateUrl: './convert-key-label.component.html',\n  styleUrls: []\n})\nexport class ConvertKeyLabel implements OnInit {\n  @Input() key: string;\n  text: string;\n    \n  constructor(private service: LocalizationService) { }\n\n  ngOnInit(): void {\n\tif(this.key === \"defaultLocale\"){\n\t\tthis.text = this.service.decode(\"localization.defaultLocal\");\n\t}\n\telse{\n\t\tthis.text = this.key;\n\t}\n  }\n}\n","{{text}}","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\nimport { DateService } from '@shared/service/date.service';\n\nimport { BsDatepickerConfig, BsDatepickerDirective } from 'ngx-bootstrap/datepicker';\n\nimport { PRESENT } from '@registry/model/registry';\n\ndeclare var acp: string;\n\n@Component({\n\tselector: 'date-field',\n\ttemplateUrl: './date-field.component.html',\n\tstyleUrls: ['./date-field.css'],\n})\n\nexport class DateFieldComponent {\n\t@ViewChild(BsDatepickerDirective, { static: false }) datepicker: BsDatepickerDirective;\n\n\t@Input() allowFutureDates: boolean = true;\n\t@Input() allowInfinity: boolean = false;\n\t@Input() inputName: string = this.idGenerator();\n\t@Input() classNames: string = \"\";\n\t@Input() localizeLabelKey: string = \"\"; // localization key used to localize in the component template\n\t@Input() label: string = \"\"; // raw string input\n\t@Input() disable: boolean = false;\n\t@Input() required: boolean = false;\n\t@Input() placement: string = \"bottom\";\n\n\t_value:Date;\n\t@Input() set value(value) {\n\t\n\t\tif(value){\n\t\t\tthis.setValue(value ? value : null);\n\t\t}\n\t}\n\t@Output() public valueChange = new EventEmitter<string>();\n\n\t/* You can pass a function in with (change)='function()' */\n\t@Output() public change = new EventEmitter<any>();\n\n\ttoday: Date = new Date();\n\tmessage: string;\n\treturnFocusToInput: boolean = false;\n\tvalueIsPresent: boolean = false;\n\t\n\t@Input() valid: boolean = true;\n\t@Output() public validChange = new EventEmitter<boolean>();\n\n\tconstructor(private localizationService: LocalizationService, private bsDatepickerConfig: BsDatepickerConfig, private changeDetectorRef: ChangeDetectorRef, private dateService: DateService) {\n\t\tthis.bsDatepickerConfig.dateInputFormat = 'YYYY-MM-DD';\n\t}\n\n\n\tprivate setValue(value:string | number):void {\n\t\t// @ts-ignore\n\t\tif( ! isNaN(value) ){\n\t\t\t// @ts-ignore\n\t\t\tvalue = parseInt(value);\n\t\t}\n\t\t\n\t\tif(value && typeof value == 'string'){\n\t\t\tlet date = new Date(+value.split(\"-\")[0], +value.split(\"-\")[1]-1, +value.split(\"-\")[2]);\n\n\t\t\tif (value === PRESENT) {\n\t\t\t\tthis.valueIsPresent = true;\n\t\t\t}\n\t\t\t\n\t\t\tthis._value = date;\n\t\t}\n\t\t// Custom attributes of date type come through as UTC time\n\t\telse if(value && typeof value == 'number'){\n\t\t\tthis._value = new Date(new Date(value).getUTCFullYear(), new Date(value).getUTCMonth(), new Date(value).getUTCDate());\n\t\t}\n\t\telse{\n\t\t\tthis._value = null;\n\t\t}\n\t}\n\t\n\tpublic getValue():Date {\n\t\treturn this._value;\n\t}\n\t\n\tidGenerator() {\n\t\tvar S4 = function() {\n\t\t\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n\t\t};\n\t\treturn (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n\t}\n\t\n\tisEqual(date1:Date, date2:Date):boolean {\n\t\tlet equal = false;\n\t\t\n\t\tif(date1 && date2){\n\t\t\t\n//\t\t\tif(date1.toISOString().substr(0, 10) === PRESENT && date2.toISOString().substr(0, 10) === PRESENT){\n\t\t\tif(date1.getTime() === date2.getTime()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn equal;\n\t}\n\n\ttoggleInfinity(): void {\n\n\t\tlet date = this.getValue();\n\t\t\n\t\tif(date && this.isEqual(date, this.dateService.getPresentDate())) {\n\t\t\tthis.setValue(null); // clear the date picker\n\t\t\tthis.valueChange.emit(null); \n\t\t\tthis.valueIsPresent = false;\n\t\t}\n\t\telse {\n\t\t\tthis.setValue(PRESENT);\n\t\t\tthis.valueChange.emit(this.dateService.getDateString(this.getValue()));\n\t\t\tthis.valueIsPresent = true;\n\t\t}\n\t\t\n\t\tthis.change.emit();\n\t}\n\t\n\ttoggle(event: Date): void {\n\n\t\tsetTimeout(() => {\n\t\t\t\n\t\t\tlet newValue:Date;\n\t\t\t\n\t\t\t// event can be null if manually clearing the input\n\t\t\tif(event){\n\t\t\t\n\t\t\t\tnewValue = event;\n\t\n\t\t\t\tthis.valid = true;\n\t\t\t\tthis.message = \"\";\n\t\n\t\t\t\tif (!this.allowFutureDates && newValue > this.today) {\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"date.inpu.data.in.future.error.message\");\n\t\t\t\t}\n\t\t\t\telse if (!(newValue instanceof Date)) {\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"date.inpu.data.invalid.error.message\");\n\t\t\t\t}\n\t\t\t\telse if (newValue instanceof Date && isNaN(newValue.getTime())){\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"date.inpu.data.invalid.error.message\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// date required\n\t\t\t\tif(this.required){\n\t\t\t\t\tthis.valid = false;\n\t\t\t\t\tthis.message = this.localizationService.decode(\"manage.versions.date.required.message\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif(this.valid) {\n\t\t\t\t\n\t\t\t\t// Must adhere to the ISO 8601 format\n\t\t\t\tlet formattedDate = this.dateService.getDateString(newValue);\n\n\t\t\t\tif (formattedDate === PRESENT) {\n\t\t\t\t\tthis.valueIsPresent = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.valueIsPresent = false;\n\t\t\t\t}\n\n\t\t\t\tthis.valueChange.emit(formattedDate);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// hack to avoid ngx-datepicker from putting \"invalid date\" in the input\n\t\t\t\tthis.setValue(null);\n\t\t\t\t\n\t\t\t\tthis.valueChange.emit(null);\n\t\t\t}\n\t\t\t\n\t\t\tthis.change.emit();\n\t\t\tthis.validChange.emit(this.valid);\n\n\t\t}, 0)\n\t}\n}","\n<label for=\"{{inputName}}\" *ngIf=\"label.length > 0\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n<label for=\"{{inputName}}\" *ngIf=\"localizeLabelKey.length > 0\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n\n<!-- <input id=\"date-input\" [class]=\"classNames\" name=\"{{inputName}}\" [(ngModel)]=\"value\" (change)=\"toggle($event)\" type=\"date\" max=\"{{today|date:'yyyy-MM-dd'}}\" [disabled]=\"disable\" [required]=\"required\"/> -->\n\n<div [hidden]=\"valueIsPresent\">\n  <span class=\"wrapper\">\n      <input [class]=\"classNames ? classNames + ' ' + 'date-input-element' : 'date-input-element'\" \n           name=\"{{inputName}}\"\n           type=\"text\"\n           placeholder=\"YYYY-MM-DD\"\n           [bsValue]=\"_value\"\n           [value]=\"_value | date: 'yyyy-MM-dd'\"\n           (bsValueChange)=\"toggle($event)\"\n           [bsConfig]=\"{\n              dateInputFormat: 'YYYY-MM-DD', \n              containerClass: 'theme-default', \n              returnFocusToInput: returnFocusToInput,\n              adaptivePosition: true\n              }\"\n           [outsideClick]=\"true\"\n           placement=\"{{placement}}\"\n           [maxDate]=\"allowFutureDates ? null : today\"\n           [isDisabled]=\"disable\"\n           [disabled]=\"disable\"\n           bsDatepicker\n           #dp=\"bsDatepicker\"\n           >\n  </span>\n  \n  <div class=\"form-input-validation-error-message-wrapper\">\n    <p *ngIf=\"message\" class=\"error-message\">{{message}}</p>\n  </div>\n</div>\n\n<p [hidden]=\"!valueIsPresent\" style=\"font-size:14px;margin:0;\"><localize key=\"changeovertime.manageVersions.infinity.endDate.label\"></localize></p>\n\n<div *ngIf=\"allowInfinity\" class=\"text-right\" style=\"padding: 10px 0;\">\n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"valueIsPresent\" (click)=\"toggleInfinity()\"><localize key=\"manage.versions.enddate.set.date.button\"></localize></button> \n  <button class=\"btn btn-default\" style=\"margin:0;\" *ngIf=\"!valueIsPresent\" (click)=\"toggleInfinity()\"><localize key=\"manage.versions.enddate.set.current.button\"></localize></button>\n</div>\n\n","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    active: boolean;\n    enabled: boolean;\n}","import {Component, Input, Output, EventEmitter} from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({    \n  selector: 'boolean-field',\n  templateUrl: './boolean-field.component.html',\n  styleUrls: ['./boolean-field.css']\n})\nexport class BooleanFieldComponent {\n\n  @Input() value:boolean = false;\n  @Output() public valueChange = new EventEmitter<boolean>();\n\n  @Input() localizeLabelKey:string = \"\"; // localization key used to localize in the component template\n  @Input() label:string = \"\"; // raw string input\n\n  @Input() disable:boolean = false;\n\n  /* You can pass a function in with (change)='function()' */\n  @Output() public change = new EventEmitter<any>();\n\n  constructor(){}\n  \n  toggle():void {\n    if(!this.disable){\n      this.value = !this.value;\n      \n      this.valueChange.emit(this.value);\n      this.change.emit(this.value);\n    }\n  }\n}","<div class=\"check-block\">\n  <div (click)=\"toggle()\" [ngClass]=\"{'chk-checked' : value, 'disabled': disable}\" ng-style=\"chkstyle\" class=\"chk-area\">\n    <span></span>\n  </div>\n  \n  <label *ngIf=\"label.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\">{{label}}</label>\n  <label *ngIf=\"localizeLabelKey.length > 0\" class=\"checkbox-label\" [ngClass]=\"{'disabled': disable}\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n</div>","export default class Utils {\n\t\n\t/**\n\t * \n\t * @param arr \n\t */\n\tstatic removeStatuses( arr: any[] ): any[] {\n\t      var newArray = [];\n\t      \n\t      for ( var i = 0; i < arr.length; ++i ) {\n\t        if (! (arr[i].code === \"CGR:Status-New\"\n\t             || arr[i].code === \"CGR:Status-Pending\"))\n\t        {\n\t          newArray.push(arr[i]);\n\t        }\n\t      }\n\t      \n\t      return newArray;\n\t}\n\t\n\n\t/**\n\t * \n\t * @param dateObj \n\t */\n\tstatic formatDateString(dateObj: Date): string {\n        const day = dateObj.getUTCDate();\n        const month = dateObj.getUTCMonth() + 1;\n\n        return dateObj.getUTCFullYear() + \"-\" + ( month < 10 ? \"0\" : \"\" ) + month + \"-\" + ( day < 10 ? \"0\" : \"\" ) + day;\n    }\n\n\tstatic dateRangeOverlaps(a_start: number, a_end: number, b_start: number, b_end: number): boolean {\n\t\tif (a_start <= b_start && b_start <= a_end) return true; // b starts in a\n\t\tif (a_start <= b_end && b_end <= a_end) return true; // b ends in a\n\t\tif (b_start < a_start && a_end < b_end) return true; // a in b\n\t\treturn false;\n\t}\n\t\n\tstatic dateEndBeforeStart(start: number, end: number): boolean {\n\t\tif (end < start) return true; // end date is before start date\n\t\treturn false;\n\t}\n    \n\tstatic hasGap(a_end: number, b_start: number): boolean {\n\t\treturn (b_start - a_end) > (1000 * 60 * 60 * 24);\n\t}\n\t\n}","\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[OnlyNumber]'\n})\nexport class OnlyNumber {\n\n  constructor(private el: ElementRef) { }\n\n  @Input() OnlyNumber: boolean;\n \n  @HostListener('keydown', ['$event']) onKeyDown(event:any) {\n    let e = <KeyboardEvent> event;\n    if (this.OnlyNumber) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (e.keyCode == 65 && e.ctrlKey === true) ||\n        // Allow: Ctrl+C\n        (e.keyCode == 67 && e.ctrlKey === true) ||\n        // Allow: Ctrl+X\n        (e.keyCode == 88 && e.ctrlKey === true) ||\n        // Allow: home, end, left, right\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n          // let it happen, don't do anything\n          return;\n        }\n        // Ensure that it is a number and stop the keypress\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n            e.preventDefault();\n        }\n      }\n  }\n}\n\n\n","import { Role } from \"../../admin/model/account\";\n\n///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nexport class Profile {\n\toid: string;\n\tusername: string;\n\tpassword: string;\n\tfirstName: string;\n\tlastName: string;\n\temail: string;\n\tchangePassword?: boolean;\n\tphoneNumber?: string;\n\taltFirstName?: string;\n\taltLastName?: string;\n\taltPhoneNumber?: string;\n\tposition?: string;\n\tdepartment?: string;\n  externalSystemOid?: string;\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatNumber, ParsedNumber } from 'libphonenumber-js';\n\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(value: ParsedNumber, args?: string): any {\n    if (!value) {\n      return value;\n    }\n\n    return formatNumber({ country: 'US', phone: value.toString() }, 'International');\n  }\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { CgrAppModule } from './app/cgr-app.module';\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(CgrAppModule)\n  .then(success => console.log('Bootstrap success'))\n  .catch(error => console.log(error));\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TreeModule } from '@circlon/angular-tree-component';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { CgrAppComponent } from './cgr-app.component';\nimport { CgrAppRoutingModule, routedComponents } from './cgr-app-routing.module';\n\nimport { LoginComponent } from '@core/component/login/login.component';\nimport { LoginHeaderComponent } from '@core/component/login/login-header.component';\nimport { HubComponent } from '@core/component/hub/hub.component';\nimport { ForgotPasswordComponent } from '@core/component/forgotpassword/forgotpassword.component';\nimport { ForgotPasswordCompleteComponent } from '@core/component/forgotpassword-complete/forgotpassword-complete.component';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpErrorInterceptor } from '@core/service/http-error.interceptor';\n\nimport { ForgotPasswordService } from '@core/service/forgotpassword.service';\nimport { HubService } from '@core/service/hub.service';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport './rxjs-extensions';\n\n@NgModule( {\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        CgrAppRoutingModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n//        ModalModule.forRoot(),\n        TreeModule,\n        ContextMenuModule.forRoot(),\n        BsDropdownModule.forRoot(),\n        ButtonsModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        ProgressbarModule.forRoot(),\n        CollapseModule.forRoot(),\n\t\tTabsModule.forRoot(),\n        NgxPaginationModule,\n        BrowserAnimationsModule,\n        SharedModule.forRoot(),\n\t\tBsDatepickerModule.forRoot(),\n    ],\n    declarations: [\n        CgrAppComponent,\n        LoginComponent,\n        LoginHeaderComponent,\n        HubComponent,\n        ForgotPasswordComponent,\n        ForgotPasswordCompleteComponent,\n\n        // Routing components\n        routedComponents\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpErrorInterceptor,\n            multi: true\n        },\n        ForgotPasswordService,\n        HubService,\n    ],\n    exports: [\n        CgrAppComponent,\n    ],\n    bootstrap: [CgrAppComponent],\n    entryComponents: [\n    ]\n} )\nexport class CgrAppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  \n  selector: 'cgr-app',\n  templateUrl: './cgr-app.component.html',\n  styleUrls: []\n})\nexport class CgrAppComponent {\n  constructor() {}\n}\n","<div id=\"innerFrameHtml\">        \n\n  <!-- MAIN CONTENT AND INJECTED VIEWS -->\n  <div id=\"main\">\n    <router-outlet></router-outlet>\n  </div>\n  \n</div>","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './core/component/login/login.component'\nimport { HubComponent } from './core/component/hub/hub.component';\nimport { ForgotPasswordComponent } from './core/component/forgotpassword/forgotpassword.component'\nimport { ForgotPasswordCompleteComponent } from './core/component/forgotpassword-complete/forgotpassword-complete.component'\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from './shared/service/guard.service';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/menu',\n        pathMatch: 'full'\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n        data: { title: 'login.title' }\n    },\n    {\n        path: 'login/:errorMsg',\n        component: LoginComponent,\n        data: { title: 'login.title' }\n    },\n    {\n        path: 'menu',\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: 'login.header' }\n    },\n    {\n        path: 'menu/:value',\n        component: HubComponent,\n        canActivate: [AuthGuard],\n        data: { title: 'login.header' }\n    },\n    {\n        path: 'forgotpassword',\n        component: ForgotPasswordComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'forgotpassword-complete/:token',\n        component: ForgotPasswordCompleteComponent\n    },\n    {\n        path: 'admin',\n        loadChildren: \"./admin/admin.module#AdminModule\"\n    },\n    {\n        path: 'registry',\n        loadChildren: \"./registry/registry.module#RegistryModule\"\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forRoot( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n        AdminGuard,\n        MaintainerGuard,\n        ContributerGuard\n    ]\n} )\nexport class CgrAppRoutingModule { }\n\nexport const routedComponents: any = [LoginComponent, HubComponent, ForgotPasswordComponent, ForgotPasswordCompleteComponent];\n","import { Injectable } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpResponse,\n    HttpResponseBase,    \n    HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ndeclare var acp: string;\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n    intercept( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\n\n        return next.handle( request ).pipe(tap(( event: HttpEvent<any> ) => {\n            if ( event instanceof HttpResponseBase ) {\n                const response = event as HttpResponseBase;\n                if ( response.status === 302 ) {\n                    window.location.href = acp + '/cgr/manage#/login';\n                    return;\n                }\n            }\n        }, ( err: any ) => {\n            if ( err instanceof HttpErrorResponse ) {\n                if ( err.status === 401 || err.status === 403 ) {\n                    // redirect to the login route\n                    // or show a modal\n                    window.location.href = acp + '/cgr/manage#/login';\n                }\n            }\n        } ));\n    }\n}","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '@shared/service';\n\n@Component({\n\n\tselector: 'localize',\n\ttemplateUrl: './localize.component.html',\n\tstyleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n\t@Input() key: string;\n\t@Input() params: { [key: string]: string } = null;\n\n\ttext: string;\n\n\tconstructor(private service: LocalizationService) { }\n\n\tngOnInit(): void {\n\t\tthis.text = this.service.decode(this.key);\n\n\t\tif (this.params != null) {\n\t\t\tconst keys = Object.keys(this.params);\n\n\t\t\tkeys.forEach((key) => {\n\t\t\t\tif (this.params[key] != null) {\n\t\t\t\t\tthis.text = this.text.replace(key, this.params[key]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n","<span [innerHtml]=\"text\"></span>","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'loading-bar',\n  templateUrl: './loading-bar.component.html',\n  styleUrls: ['./loading-bar.css']\n})\nexport class LoadingBarComponent implements OnInit, IEventListener {\n  showIndicator: boolean = false;\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.showIndicator = true;    \n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","<div *ngIf=\"showIndicator\" class=\"standby-overlay\">\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '@shared/service';\n\n@Component({\n  \n  selector: 'message',\n  templateUrl: './message.component.html',\n  styles: [\n    '.error-container { text-align: center; border-width: 1px; border-color: #8c0000; border-style: solid; color: #8c0000; font-size: 17px; background: white;}',\n    '.message-container { text-align: center; border-width: 1px; border-color: #106828; border-style: solid; margin-left: 10%; margin-right: 10%; color: #106828; }'\n  ]\n})\nexport class MessageComponent implements OnInit, IEventListener {\n\t\n  error: any = null;\n  \n  message: string = \"\";\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.error = null;\n  }\n  \n  complete(): void {\n  }  \n  \n  onError(error: any): void {\n    this.error = error;\n  }\n  \n  onMessage(msg: string): void {\n    this.message = msg;\n  }\n}\n","\n<div>\n  <div *ngIf=\"message\" class=\"message-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.messagesLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"message\">{{message}}</p>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"error\" class=\"error-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.errorsLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"error-message\" *ngIf=\"error.localizedMessage\">{{error.localizedMessage}}</p>\n        <p class=\"error-message\" *ngIf=\"!error.localizedMessage\"><localize key='error.generic'></localize></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from '@shared/model/user';\nimport { RoleBuilder, RegistryRole, RegistryRoleType } from '@shared/model/core';\n\n@Injectable()\nexport class AuthService {\n\n\tprivate user: User = {\n\t\tloggedIn: false,\n\t\tuserName: '',\n\t\troles: [],\n\t\troleDisplayLabels: [],\n\t\tversion: \"0\",\n\t\tinstalledLocales: []\n\t};\n\n\tconstructor(private service: CookieService) {\n\t\tlet cookie = service.get('user');\n\n\t\tif (this.service.check(\"user\") && cookie != null && cookie.length > 0) {\n\t\t\tlet cookieData: string = this.service.get(\"user\")\n\t\t\tlet cookieDataJSON: any = JSON.parse(cookieData);\n\n\t\t\tthis.buildFromCookieJson(cookieDataJSON);\n\t\t}\n\t}\n\n\tbuildFromCookieJson(cookieDataJSON: any) {\n\t\tthis.user.userName = cookieDataJSON.userName;\n\t\tthis.buildRolesFromCookie(cookieDataJSON);\n\t\tthis.user.loggedIn = cookieDataJSON.loggedIn;\n\t\tthis.user.roleDisplayLabels = cookieDataJSON.roleDisplayLabels;\n\t\tthis.user.version = cookieDataJSON.version.replaceAll(\"+\", \" \");\n\t\tthis.user.installedLocales = cookieDataJSON.installedLocales;\n\t}\n\n\tbuildRolesFromCookie(cookieDataJSON: any) {\n\t\tthis.user.roles = [];\n\t\tlet roles: string[] = cookieDataJSON.roles;\n\n\t\tfor (let i = 0; i < roles.length; ++i) {\n\t\t\tlet role: RegistryRole = RoleBuilder.buildFromRoleName(roles[i]);\n\n\t\t\tif (role != null) {\n\t\t\t\tthis.user.roles.push(role);\n\t\t\t}\n\t\t}\n\t}\n\n\tisLoggedIn(): boolean {\n\t\treturn this.user.loggedIn;\n\t}\n\n\tsetUser(cookieDataJSON: any): void {\n\t\tthis.buildFromCookieJson(cookieDataJSON);\n\t}\n\n\tremoveUser(): void {\n\t\tthis.user = {\n\t\t\tloggedIn: false,\n\t\t\tuserName: '',\n\t\t\troles: [],\n\t\t\troleDisplayLabels: [],\n\t\t\tversion: \"0\",\n\t\t\tinstalledLocales: []\n\t\t};\n\t}\n\n\t// Legacy Accessors:\n\tisAdmin(): boolean {\n\t\treturn this.isSRA() || this.isRA();\n\t}\n\n\tisMaintainer(): boolean {\n\t\treturn this.isSRA() || this.isRM();\n\t}\n\n\tisContributer(): boolean {\n\t\treturn this.isSRA() || this.isRC(false);\n\t}\n\t\n\tisContributerOnly(): boolean {\n\t\treturn this.isRC(true);\n\t}\n\n\t// Used to exactly identify a role. I.e. if we say we need RC, SRA doesn't count.\n\thasExactRole(roleType: RegistryRoleType) {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === roleType) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisSRA(): boolean {\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.SRA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisRA(): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryAdministrator') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryAdministrator\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisRM(): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RM) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryMaintainer') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryMaintainer\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisOrganizationRA(orgCode: string): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.orgCode === orgCode && role.type === RegistryRoleType.RA) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false; // this.isSRA();\n\t}\n\n\tisGeoObjectTypeRM(orgCode: string, gotCode: string): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RM && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.isOrganizationRA(orgCode);\n\t}\n\t\n\tisGeoObjectTypeOrSuperRM(got: any): boolean {\n\t  if (this.isGeoObjectTypeRM(got.organizationCode, got.code))\n\t  {\n\t    return true;\n\t  }\n\t  else if (got.superTypeCode != null)\n\t  {\n\t    return this.isGeoObjectTypeRM(got.organizationCode, got.superTypeCode);\n\t  }\n\t}\n\n\tisGeoObjectTypeRC(orgCode: string, gotCode: string): boolean {\n\t\tif (this.isSRA()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RC && role.orgCode === orgCode && role.geoObjectTypeCode === gotCode) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.isGeoObjectTypeRM(orgCode, gotCode);\n\t}\n\n\tisRC(isRCOnly: boolean): boolean {\n\t\tif (this.isSRA() && !isRCOnly) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.RC) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (role.roleName.indexOf('commongeoregistry.RegistryContributor') !== -1\n\t\t\t\t|| role.roleName.indexOf(\"cgr.RegistryContributor\") !== -1) // Legacy support\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\t// Returns all organization codes that the current user participates in.\n\t// If the user is an SRA then this method will return an empty string array.\n\tgetMyOrganizations(): string[] {\n\t\tlet orgCodes: string[] = [];\n\n\t\tfor (let i = 0; i < this.user.roles.length; ++i) {\n\t\t\tlet role: RegistryRole = this.user.roles[i];\n\n\t\t\tif (role.type === RegistryRoleType.SRA || role.type === RegistryRoleType.RC || role.type === RegistryRoleType.RM || role.type === RegistryRoleType.RA) {\n\t\t\t\torgCodes.push(role.orgCode);\n\t\t\t}\n\t\t}\n\n\t\treturn orgCodes;\n\t}\n\n\t__getRoleFromRoleName(roleName: string): string {\n\t\tlet nameArr = roleName.split(\".\");\n\n\t\treturn nameArr[nameArr.length - 1];\n\t}\n\n\tgetUsername(): string {\n\t\treturn this.user.userName;\n\t}\n\n\tgetRoles(): any {\n\t\treturn this.user.roles;\n\t}\n\n\tgetRoleDisplayLabelsArray(): any {\n\t\treturn this.user.roleDisplayLabels;\n\t}\n\n\tgetRoleDisplayLabels(): string {\n\t\tlet str = \"\";\n\t\tfor (let i = 0; i < this.user.roleDisplayLabels.length; ++i) {\n\t\t\tlet displayLabel = this.user.roleDisplayLabels[i];\n\n\t\t\tif (displayLabel === \"Administrator\") {\n\t\t\t\tcontinue;\n\t\t\t\t// It's OK to hardcode to a display label here because the end user can't change it anyway.\n\t\t\t\t// Is it ideal? No. But sometimes it's better to get software out quicker than to spend forever\n\t\t\t\t// on something that nobody will ever see.\n\t\t\t}\n\n\t\t\tstr = str + displayLabel;\n\n\t\t\tif (i < this.user.roleDisplayLabels.length - 1) {\n\t\t\t\tstr = str + \",\";\n\t\t\t}\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tgetVersion(): string {\n\t\treturn this.user.version;\n\t}\n\n\tgetLocales(): any[] {\n\t\treturn this.user.installedLocales;\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Application } from '@shared/model/application';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HubService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tapplications(): Promise<Application[]> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\treturn this.http\n\t\t\t.post<Application[]>(acp + '/menu/applications', { headers: headers })\n\t\t\t.toPromise();\n\t}\n\t\n\toauthGetPublic(id: string): Promise<any[]> {\n    let params: HttpParams = new HttpParams();\n\n    if (id)\n    {\n      params = params.set('id', id)\n    }\n\n    return this.http\n      .get<any[]>(acp + '/cgr/oauth/get-public', { params: params })\n      .toPromise();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocalizationService } from '@shared/service';\n\n@Pipe({name: 'localize'})\nexport class LocalizePipe implements PipeTransform {\n  constructor(private service: LocalizationService) { }\n\t\n  transform(value: string): string {\n    return this.service.decode(value);\n  }\n}\n\n","\nimport { Component, OnChanges, Input, SimpleChange } from '@angular/core';\n\n@Component({\n\tselector: 'password-strength-bar',\n\ttemplateUrl: './password-strength-bar.component.html',\n\tstyleUrls: ['./password-strength-bar.component.css']\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n\n\t@Input() passwordToCheck: string;\n\tbar0: string;\n\tbar1: string;\n\tbar2: string;\n\tbar3: string;\n\tbar4: string;\n\n\tprivate colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n\tprivate static measureStrength(pass: string) {\n\t\tlet score = 0;\n\t\t// award every unique letter until 5 repetitions  \n\t\tlet letters = {};\n\t\tfor (let i = 0; i < pass.length; i++) {\n\t\t\tletters[pass[i]] = (letters[pass[i]] || 0) + 1;\n\t\t\tscore += 5.0 / letters[pass[i]];\n\t\t}\n\t\t// bonus points for mixing it up  \n\t\tlet variations = {\n\t\t\tdigits: /\\d/.test(pass),\n\t\t\tlower: /[a-z]/.test(pass),\n\t\t\tupper: /[A-Z]/.test(pass),\n\t\t\tnonWords: /\\W/.test(pass),\n\t\t};\n\n\t\tlet variationCount = 0;\n\t\tfor (let check in variations) {\n\t\t\tvariationCount += (variations[check]) ? 1 : 0;\n\t\t}\n\t\tscore += (variationCount - 1) * 10;\n\t\treturn Math.trunc(score);\n\t}\n\n\tprivate getColor(score: number) {\n\t\tlet idx = 0;\n\t\tif (score > 90) {\n\t\t\tidx = 4;\n\t\t} else if (score > 70) {\n\t\t\tidx = 3;\n\t\t} else if (score >= 40) {\n\t\t\tidx = 2;\n\t\t} else if (score >= 20) {\n\t\t\tidx = 1;\n\t\t}\n\t\treturn {\n\t\t\tidx: idx + 1,\n\t\t\tcol: this.colors[idx]\n\t\t};\n\t}\n\n\tngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n\t\tvar password = changes['passwordToCheck'].currentValue;\n\t\tthis.setBarColors(5, '#DDD');\n\t\tif (password) {\n\t\t\tlet c = this.getColor(PasswordStrengthBarComponent.measureStrength(password));\n\t\t\tthis.setBarColors(c.idx, c.col);\n\t\t}\n\t}\n\tprivate setBarColors(count, col) {\n\t\tfor (let _n = 0; _n < count; _n++) {\n\t\t\tthis['bar' + _n] = col;\n\t\t}\n\t}\n\n}  \n","<div style=\"margin: 11px;\" id=\"strength\" #strength>\n    <ul id=\"strengthBar\">\n        <li class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>\n    </ul>\n</div>\n"],"sourceRoot":""}